const local_index = {"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"1. \u6982\u8ff0 \u00b6 SigmaStarDocs \u662f\u57fa\u4e8eSigmaStar\u5e73\u53f0\u7684\u9759\u6001\u7f51\u9875\u7248\u7684\u5f00\u53d1\u6587\u6863\u3002 2. \u76ee\u7684 \u00b6 \u65b9\u4fbf\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u66f4\u5feb\u901f\u719f\u6089SigmaStar IPU\u67b6\u6784\u3002 3. \u7f51\u7ad9\u5730\u56fe \u00b6 SDK\u4ecb\u7ecd \u7528\u6237\u624b\u518c FAQ SDK\u6846\u67b6\u4ecb\u7ecd \u73af\u5883\u642d\u5efa \u73af\u5883\u8bbe\u7f6e\u95ee\u9898 Docker\u73af\u5883 IPU SDK \u652f\u6301 \u6a21\u578b\u8f6c\u6362\u95ee\u9898 \u624b\u518c\u76ee\u5f55\u603b\u89c8 \u6a21\u578b\u8f6c\u6362\u95ee\u9898 Convert Tool \u6a21\u578b\u8f6c\u6362\u95ee\u9898 Calibrator \u677f\u7aef\u4f7f\u7528\u95ee\u9898 Compiler \u5176\u4ed6\u5f02\u5e38\u95ee\u9898 Simulator DumpDebug Tool \u5728\u5f00\u53d1\u677f\u4e0a\u8fd0\u884c\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b \u4e00\u952e\u751f\u6210SGS\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b \u5982\u4f55\u6dfb\u52a0\u65b0\u7684Layer \u7279\u6b8a\u6a21\u578b\u8f6c\u6362\u8981\u70b9 \u524d\u5904\u7406\u548c\u914d\u7f6e\u6587\u4ef6\u6ce8\u610f\u8981\u70b9 IPU\u7cbe\u5ea6\u95ee\u9898Debug SOP IPU SDK \u8f85\u52a9\u5de5\u5177 4.\u7f51\u9875\u5e03\u5c40 \u00b6 5.\u7248\u6743\u58f0\u660e \u00b6 \u7248\u6743\u58f0\u660e Copyright\u00a9 2021 SigmaStar Technology. All rights reserved. SigmaStar Technology makes no representations or warranties including, for example but not limited to, warranties of merchantability, fitness for a particular purpose, non-infringement of any intellectual property right or the accuracy or completeness of this document, and reserves the right to make changes without further notice to any products herein to improve reliability, function or design. No responsibility is assumed by SigmaStar Technology arising out of the application or use of any product or circuit described herein; neither does it convey any license under its patent rights, nor the rights of others. SigmaStar\u00ae is a trademark of SigmaStar Technology. Other trademarks or names herein are only for identification purposes only and owned by their respective owners.","title":"\u4e3b\u9875"},{"location":"index.html#1","text":"SigmaStarDocs \u662f\u57fa\u4e8eSigmaStar\u5e73\u53f0\u7684\u9759\u6001\u7f51\u9875\u7248\u7684\u5f00\u53d1\u6587\u6863\u3002","title":"1. \u6982\u8ff0"},{"location":"index.html#2","text":"\u65b9\u4fbf\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u66f4\u5feb\u901f\u719f\u6089SigmaStar IPU\u67b6\u6784\u3002","title":"2. \u76ee\u7684"},{"location":"index.html#3","text":"SDK\u4ecb\u7ecd \u7528\u6237\u624b\u518c FAQ SDK\u6846\u67b6\u4ecb\u7ecd \u73af\u5883\u642d\u5efa \u73af\u5883\u8bbe\u7f6e\u95ee\u9898 Docker\u73af\u5883 IPU SDK \u652f\u6301 \u6a21\u578b\u8f6c\u6362\u95ee\u9898 \u624b\u518c\u76ee\u5f55\u603b\u89c8 \u6a21\u578b\u8f6c\u6362\u95ee\u9898 Convert Tool \u6a21\u578b\u8f6c\u6362\u95ee\u9898 Calibrator \u677f\u7aef\u4f7f\u7528\u95ee\u9898 Compiler \u5176\u4ed6\u5f02\u5e38\u95ee\u9898 Simulator DumpDebug Tool \u5728\u5f00\u53d1\u677f\u4e0a\u8fd0\u884c\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b \u4e00\u952e\u751f\u6210SGS\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b \u5982\u4f55\u6dfb\u52a0\u65b0\u7684Layer \u7279\u6b8a\u6a21\u578b\u8f6c\u6362\u8981\u70b9 \u524d\u5904\u7406\u548c\u914d\u7f6e\u6587\u4ef6\u6ce8\u610f\u8981\u70b9 IPU\u7cbe\u5ea6\u95ee\u9898Debug SOP IPU SDK \u8f85\u52a9\u5de5\u5177","title":"3. \u7f51\u7ad9\u5730\u56fe"},{"location":"index.html#4","text":"","title":"4.\u7f51\u9875\u5e03\u5c40"},{"location":"index.html#5","text":"\u7248\u6743\u58f0\u660e Copyright\u00a9 2021 SigmaStar Technology. All rights reserved. SigmaStar Technology makes no representations or warranties including, for example but not limited to, warranties of merchantability, fitness for a particular purpose, non-infringement of any intellectual property right or the accuracy or completeness of this document, and reserves the right to make changes without further notice to any products herein to improve reliability, function or design. No responsibility is assumed by SigmaStar Technology arising out of the application or use of any product or circuit described herein; neither does it convey any license under its patent rights, nor the rights of others. SigmaStar\u00ae is a trademark of SigmaStar Technology. Other trademarks or names herein are only for identification purposes only and owned by their respective owners.","title":"5.\u7248\u6743\u58f0\u660e"},{"location":"Develop_index.html","text":"1. \u6982\u8ff0 \u00b6 SigmaStarDocs \u662f\u57fa\u4e8eSigmaStar\u5e73\u53f0\u7684\u9759\u6001\u7f51\u9875\u7248\u7684\u5f00\u53d1\u6587\u6863\u3002 2. \u76ee\u7684 \u00b6 \u65b9\u4fbf\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u66f4\u5feb\u901f\u719f\u6089SigmaStar IPU\u67b6\u6784\u3002 3. \u7f51\u7ad9\u5730\u56fe \u00b6 SDK\u4ecb\u7ecd \u7528\u6237\u624b\u518c FAQ SDK\u6846\u67b6\u4ecb\u7ecd \u73af\u5883\u642d\u5efa \u73af\u5883\u8bbe\u7f6e\u95ee\u9898 Docker\u73af\u5883 Convert Tool \u6a21\u578b\u8f6c\u6362\u95ee\u9898 Calibrator \u677f\u7aef\u4f7f\u7528\u95ee\u9898 Compiler \u5176\u4ed6\u5f02\u5e38\u95ee\u9898 Simulator DumpDebug Tool SigmaStar\u540e\u5904\u7406\u6a21\u5757 \u5982\u4f55\u6dfb\u52a0\u65b0\u7684Layer \u7279\u6b8a\u6a21\u578b\u8f6c\u6362\u8981\u70b9 DLA SDK \u652f\u6301 \u5728\u5f00\u53d1\u677f\u4e0a\u8fd0\u884c\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b 4.\u7f51\u9875\u5e03\u5c40 \u00b6 5.\u7248\u6743\u58f0\u660e \u00b6 \u7248\u6743\u58f0\u660e Copyright\u00a9 2021 SigmaStar Technology. All rights reserved. SigmaStar Technology makes no representations or warranties including, for example but not limited to, warranties of merchantability, fitness for a particular purpose, non-infringement of any intellectual property right or the accuracy or completeness of this document, and reserves the right to make changes without further notice to any products herein to improve reliability, function or design. No responsibility is assumed by SigmaStar Technology arising out of the application or use of any product or circuit described herein; neither does it convey any license under its patent rights, nor the rights of others. SigmaStar\u00ae is a trademark of SigmaStar Technology. Other trademarks or names herein are only for identification purposes only and owned by their respective owners.","title":"Develop index"},{"location":"Develop_index.html#1","text":"SigmaStarDocs \u662f\u57fa\u4e8eSigmaStar\u5e73\u53f0\u7684\u9759\u6001\u7f51\u9875\u7248\u7684\u5f00\u53d1\u6587\u6863\u3002","title":"1. \u6982\u8ff0"},{"location":"Develop_index.html#2","text":"\u65b9\u4fbf\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u66f4\u5feb\u901f\u719f\u6089SigmaStar IPU\u67b6\u6784\u3002","title":"2. \u76ee\u7684"},{"location":"Develop_index.html#3","text":"SDK\u4ecb\u7ecd \u7528\u6237\u624b\u518c FAQ SDK\u6846\u67b6\u4ecb\u7ecd \u73af\u5883\u642d\u5efa \u73af\u5883\u8bbe\u7f6e\u95ee\u9898 Docker\u73af\u5883 Convert Tool \u6a21\u578b\u8f6c\u6362\u95ee\u9898 Calibrator \u677f\u7aef\u4f7f\u7528\u95ee\u9898 Compiler \u5176\u4ed6\u5f02\u5e38\u95ee\u9898 Simulator DumpDebug Tool SigmaStar\u540e\u5904\u7406\u6a21\u5757 \u5982\u4f55\u6dfb\u52a0\u65b0\u7684Layer \u7279\u6b8a\u6a21\u578b\u8f6c\u6362\u8981\u70b9 DLA SDK \u652f\u6301 \u5728\u5f00\u53d1\u677f\u4e0a\u8fd0\u884c\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b","title":"3. \u7f51\u7ad9\u5730\u56fe"},{"location":"Develop_index.html#4","text":"","title":"4.\u7f51\u9875\u5e03\u5c40"},{"location":"Develop_index.html#5","text":"\u7248\u6743\u58f0\u660e Copyright\u00a9 2021 SigmaStar Technology. All rights reserved. SigmaStar Technology makes no representations or warranties including, for example but not limited to, warranties of merchantability, fitness for a particular purpose, non-infringement of any intellectual property right or the accuracy or completeness of this document, and reserves the right to make changes without further notice to any products herein to improve reliability, function or design. No responsibility is assumed by SigmaStar Technology arising out of the application or use of any product or circuit described herein; neither does it convey any license under its patent rights, nor the rights of others. SigmaStar\u00ae is a trademark of SigmaStar Technology. Other trademarks or names herein are only for identification purposes only and owned by their respective owners.","title":"5.\u7248\u6743\u58f0\u660e"},{"location":"IPU100_index.html","text":"1. \u6982\u8ff0 \u00b6 SigmaStarDocs \u662f\u57fa\u4e8eSigmaStar\u5e73\u53f0\u7684\u9759\u6001\u7f51\u9875\u7248\u7684\u5f00\u53d1\u6587\u6863\u3002 2. \u76ee\u7684 \u00b6 \u65b9\u4fbf\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u66f4\u5feb\u901f\u719f\u6089SigmaStar IPU\u67b6\u6784\u3002 3. \u7f51\u7ad9\u5730\u56fe \u00b6 SDK\u4ecb\u7ecd \u7528\u6237\u624b\u518c FAQ SDK\u6846\u67b6\u4ecb\u7ecd \u73af\u5883\u642d\u5efa \u73af\u5883\u8bbe\u7f6e\u95ee\u9898 Docker\u73af\u5883 Convert Tool \u6a21\u578b\u8f6c\u6362\u95ee\u9898 Calibrator \u677f\u7aef\u4f7f\u7528\u95ee\u9898 Compiler \u5176\u4ed6\u5f02\u5e38\u95ee\u9898 Simulator DumpDebug Tool SigmaStar\u540e\u5904\u7406\u6a21\u5757 \u5982\u4f55\u6dfb\u52a0\u65b0\u7684Layer \u7279\u6b8a\u6a21\u578b\u8f6c\u6362\u8981\u70b9 DLA SDK \u652f\u6301 \u5728\u5f00\u53d1\u677f\u4e0a\u8fd0\u884c\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b \u524d\u5904\u7406\u548c\u914d\u7f6e\u6587\u4ef6\u6ce8\u610f\u8981\u70b9 DLA SDK \u8f85\u52a9\u5de5\u5177 4.\u7f51\u9875\u5e03\u5c40 \u00b6 5.\u7248\u6743\u58f0\u660e \u00b6 \u7248\u6743\u58f0\u660e Copyright\u00a9 2021 SigmaStar Technology. All rights reserved. SigmaStar Technology makes no representations or warranties including, for example but not limited to, warranties of merchantability, fitness for a particular purpose, non-infringement of any intellectual property right or the accuracy or completeness of this document, and reserves the right to make changes without further notice to any products herein to improve reliability, function or design. No responsibility is assumed by SigmaStar Technology arising out of the application or use of any product or circuit described herein; neither does it convey any license under its patent rights, nor the rights of others. SigmaStar\u00ae is a trademark of SigmaStar Technology. Other trademarks or names herein are only for identification purposes only and owned by their respective owners.","title":"IPU100 index"},{"location":"IPU100_index.html#1","text":"SigmaStarDocs \u662f\u57fa\u4e8eSigmaStar\u5e73\u53f0\u7684\u9759\u6001\u7f51\u9875\u7248\u7684\u5f00\u53d1\u6587\u6863\u3002","title":"1. \u6982\u8ff0"},{"location":"IPU100_index.html#2","text":"\u65b9\u4fbf\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u66f4\u5feb\u901f\u719f\u6089SigmaStar IPU\u67b6\u6784\u3002","title":"2. \u76ee\u7684"},{"location":"IPU100_index.html#3","text":"SDK\u4ecb\u7ecd \u7528\u6237\u624b\u518c FAQ SDK\u6846\u67b6\u4ecb\u7ecd \u73af\u5883\u642d\u5efa \u73af\u5883\u8bbe\u7f6e\u95ee\u9898 Docker\u73af\u5883 Convert Tool \u6a21\u578b\u8f6c\u6362\u95ee\u9898 Calibrator \u677f\u7aef\u4f7f\u7528\u95ee\u9898 Compiler \u5176\u4ed6\u5f02\u5e38\u95ee\u9898 Simulator DumpDebug Tool SigmaStar\u540e\u5904\u7406\u6a21\u5757 \u5982\u4f55\u6dfb\u52a0\u65b0\u7684Layer \u7279\u6b8a\u6a21\u578b\u8f6c\u6362\u8981\u70b9 DLA SDK \u652f\u6301 \u5728\u5f00\u53d1\u677f\u4e0a\u8fd0\u884c\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b \u524d\u5904\u7406\u548c\u914d\u7f6e\u6587\u4ef6\u6ce8\u610f\u8981\u70b9 DLA SDK \u8f85\u52a9\u5de5\u5177","title":"3. \u7f51\u7ad9\u5730\u56fe"},{"location":"IPU100_index.html#4","text":"","title":"4.\u7f51\u9875\u5e03\u5c40"},{"location":"IPU100_index.html#5","text":"\u7248\u6743\u58f0\u660e Copyright\u00a9 2021 SigmaStar Technology. All rights reserved. SigmaStar Technology makes no representations or warranties including, for example but not limited to, warranties of merchantability, fitness for a particular purpose, non-infringement of any intellectual property right or the accuracy or completeness of this document, and reserves the right to make changes without further notice to any products herein to improve reliability, function or design. No responsibility is assumed by SigmaStar Technology arising out of the application or use of any product or circuit described herein; neither does it convey any license under its patent rights, nor the rights of others. SigmaStar\u00ae is a trademark of SigmaStar Technology. Other trademarks or names herein are only for identification purposes only and owned by their respective owners.","title":"5.\u7248\u6743\u58f0\u660e"},{"location":"IPU200M_index.html","text":"1. \u6982\u8ff0 \u00b6 SigmaStarDocs \u662f\u57fa\u4e8eSigmaStar\u5e73\u53f0\u7684\u9759\u6001\u7f51\u9875\u7248\u7684\u5f00\u53d1\u6587\u6863\u3002 2. \u76ee\u7684 \u00b6 \u65b9\u4fbf\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u66f4\u5feb\u901f\u719f\u6089SigmaStar IPU\u67b6\u6784\u3002 3. \u7f51\u7ad9\u5730\u56fe \u00b6 SDK\u4ecb\u7ecd \u7528\u6237\u624b\u518c FAQ SDK\u6846\u67b6\u4ecb\u7ecd \u73af\u5883\u642d\u5efa \u73af\u5883\u8bbe\u7f6e\u95ee\u9898 Docker\u73af\u5883 Convert Tool \u6a21\u578b\u8f6c\u6362\u95ee\u9898 Calibrator \u677f\u7aef\u4f7f\u7528\u95ee\u9898 Compiler \u5176\u4ed6\u5f02\u5e38\u95ee\u9898 Simulator DumpDebug Tool SigmaStar\u540e\u5904\u7406\u6a21\u5757 \u5982\u4f55\u6dfb\u52a0\u65b0\u7684Layer \u7279\u6b8a\u6a21\u578b\u8f6c\u6362\u8981\u70b9 DLA SDK \u652f\u6301 \u5728\u5f00\u53d1\u677f\u4e0a\u8fd0\u884c\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b \u524d\u5904\u7406\u548c\u914d\u7f6e\u6587\u4ef6\u6ce8\u610f\u8981\u70b9 4.\u7f51\u9875\u5e03\u5c40 \u00b6 5.\u7248\u6743\u58f0\u660e \u00b6 \u7248\u6743\u58f0\u660e Copyright\u00a9 2021 SigmaStar Technology. All rights reserved. SigmaStar Technology makes no representations or warranties including, for example but not limited to, warranties of merchantability, fitness for a particular purpose, non-infringement of any intellectual property right or the accuracy or completeness of this document, and reserves the right to make changes without further notice to any products herein to improve reliability, function or design. No responsibility is assumed by SigmaStar Technology arising out of the application or use of any product or circuit described herein; neither does it convey any license under its patent rights, nor the rights of others. SigmaStar\u00ae is a trademark of SigmaStar Technology. Other trademarks or names herein are only for identification purposes only and owned by their respective owners.","title":"IPU200M index"},{"location":"IPU200M_index.html#1","text":"SigmaStarDocs \u662f\u57fa\u4e8eSigmaStar\u5e73\u53f0\u7684\u9759\u6001\u7f51\u9875\u7248\u7684\u5f00\u53d1\u6587\u6863\u3002","title":"1. \u6982\u8ff0"},{"location":"IPU200M_index.html#2","text":"\u65b9\u4fbf\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u66f4\u5feb\u901f\u719f\u6089SigmaStar IPU\u67b6\u6784\u3002","title":"2. \u76ee\u7684"},{"location":"IPU200M_index.html#3","text":"SDK\u4ecb\u7ecd \u7528\u6237\u624b\u518c FAQ SDK\u6846\u67b6\u4ecb\u7ecd \u73af\u5883\u642d\u5efa \u73af\u5883\u8bbe\u7f6e\u95ee\u9898 Docker\u73af\u5883 Convert Tool \u6a21\u578b\u8f6c\u6362\u95ee\u9898 Calibrator \u677f\u7aef\u4f7f\u7528\u95ee\u9898 Compiler \u5176\u4ed6\u5f02\u5e38\u95ee\u9898 Simulator DumpDebug Tool SigmaStar\u540e\u5904\u7406\u6a21\u5757 \u5982\u4f55\u6dfb\u52a0\u65b0\u7684Layer \u7279\u6b8a\u6a21\u578b\u8f6c\u6362\u8981\u70b9 DLA SDK \u652f\u6301 \u5728\u5f00\u53d1\u677f\u4e0a\u8fd0\u884c\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b \u524d\u5904\u7406\u548c\u914d\u7f6e\u6587\u4ef6\u6ce8\u610f\u8981\u70b9","title":"3. \u7f51\u7ad9\u5730\u56fe"},{"location":"IPU200M_index.html#4","text":"","title":"4.\u7f51\u9875\u5e03\u5c40"},{"location":"IPU200M_index.html#5","text":"\u7248\u6743\u58f0\u660e Copyright\u00a9 2021 SigmaStar Technology. All rights reserved. SigmaStar Technology makes no representations or warranties including, for example but not limited to, warranties of merchantability, fitness for a particular purpose, non-infringement of any intellectual property right or the accuracy or completeness of this document, and reserves the right to make changes without further notice to any products herein to improve reliability, function or design. No responsibility is assumed by SigmaStar Technology arising out of the application or use of any product or circuit described herein; neither does it convey any license under its patent rights, nor the rights of others. SigmaStar\u00ae is a trademark of SigmaStar Technology. Other trademarks or names herein are only for identification purposes only and owned by their respective owners.","title":"5.\u7248\u6743\u58f0\u660e"},{"location":"IPU201_index.html","text":"1. \u6982\u8ff0 \u00b6 SigmaStarDocs \u662f\u57fa\u4e8eSigmaStar\u5e73\u53f0\u7684\u9759\u6001\u7f51\u9875\u7248\u7684\u5f00\u53d1\u6587\u6863\u3002 2. \u76ee\u7684 \u00b6 \u65b9\u4fbf\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u66f4\u5feb\u901f\u719f\u6089SigmaStar IPU\u67b6\u6784\u3002 3. \u7f51\u7ad9\u5730\u56fe \u00b6 SDK\u4ecb\u7ecd \u7528\u6237\u624b\u518c FAQ SDK\u6846\u67b6\u4ecb\u7ecd \u73af\u5883\u642d\u5efa \u73af\u5883\u8bbe\u7f6e\u95ee\u9898 Docker\u73af\u5883 IPU SDK \u652f\u6301 \u6a21\u578b\u8f6c\u6362\u95ee\u9898 \u624b\u518c\u76ee\u5f55\u603b\u89c8 \u6a21\u578b\u8f6c\u6362\u95ee\u9898 Convert Tool \u6a21\u578b\u8f6c\u6362\u95ee\u9898 Calibrator \u677f\u7aef\u4f7f\u7528\u95ee\u9898 Compiler \u5176\u4ed6\u5f02\u5e38\u95ee\u9898 Simulator DumpDebug Tool \u5728\u5f00\u53d1\u677f\u4e0a\u8fd0\u884c\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b \u4e00\u952e\u751f\u6210SGS\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b \u5982\u4f55\u6dfb\u52a0\u65b0\u7684Layer \u7279\u6b8a\u6a21\u578b\u8f6c\u6362\u8981\u70b9 \u524d\u5904\u7406\u548c\u914d\u7f6e\u6587\u4ef6\u6ce8\u610f\u8981\u70b9 IPU\u7cbe\u5ea6\u95ee\u9898Debug SOP IPU SDK \u8f85\u52a9\u5de5\u5177 4.\u7f51\u9875\u5e03\u5c40 \u00b6 5.\u7248\u6743\u58f0\u660e \u00b6 \u7248\u6743\u58f0\u660e Copyright\u00a9 2021 SigmaStar Technology. All rights reserved. SigmaStar Technology makes no representations or warranties including, for example but not limited to, warranties of merchantability, fitness for a particular purpose, non-infringement of any intellectual property right or the accuracy or completeness of this document, and reserves the right to make changes without further notice to any products herein to improve reliability, function or design. No responsibility is assumed by SigmaStar Technology arising out of the application or use of any product or circuit described herein; neither does it convey any license under its patent rights, nor the rights of others. SigmaStar\u00ae is a trademark of SigmaStar Technology. Other trademarks or names herein are only for identification purposes only and owned by their respective owners.","title":"IPU201 index"},{"location":"IPU201_index.html#1","text":"SigmaStarDocs \u662f\u57fa\u4e8eSigmaStar\u5e73\u53f0\u7684\u9759\u6001\u7f51\u9875\u7248\u7684\u5f00\u53d1\u6587\u6863\u3002","title":"1. \u6982\u8ff0"},{"location":"IPU201_index.html#2","text":"\u65b9\u4fbf\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u66f4\u5feb\u901f\u719f\u6089SigmaStar IPU\u67b6\u6784\u3002","title":"2. \u76ee\u7684"},{"location":"IPU201_index.html#3","text":"SDK\u4ecb\u7ecd \u7528\u6237\u624b\u518c FAQ SDK\u6846\u67b6\u4ecb\u7ecd \u73af\u5883\u642d\u5efa \u73af\u5883\u8bbe\u7f6e\u95ee\u9898 Docker\u73af\u5883 IPU SDK \u652f\u6301 \u6a21\u578b\u8f6c\u6362\u95ee\u9898 \u624b\u518c\u76ee\u5f55\u603b\u89c8 \u6a21\u578b\u8f6c\u6362\u95ee\u9898 Convert Tool \u6a21\u578b\u8f6c\u6362\u95ee\u9898 Calibrator \u677f\u7aef\u4f7f\u7528\u95ee\u9898 Compiler \u5176\u4ed6\u5f02\u5e38\u95ee\u9898 Simulator DumpDebug Tool \u5728\u5f00\u53d1\u677f\u4e0a\u8fd0\u884c\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b \u4e00\u952e\u751f\u6210SGS\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b \u5982\u4f55\u6dfb\u52a0\u65b0\u7684Layer \u7279\u6b8a\u6a21\u578b\u8f6c\u6362\u8981\u70b9 \u524d\u5904\u7406\u548c\u914d\u7f6e\u6587\u4ef6\u6ce8\u610f\u8981\u70b9 IPU\u7cbe\u5ea6\u95ee\u9898Debug SOP IPU SDK \u8f85\u52a9\u5de5\u5177","title":"3. \u7f51\u7ad9\u5730\u56fe"},{"location":"IPU201_index.html#4","text":"","title":"4.\u7f51\u9875\u5e03\u5c40"},{"location":"IPU201_index.html#5","text":"\u7248\u6743\u58f0\u660e Copyright\u00a9 2021 SigmaStar Technology. All rights reserved. SigmaStar Technology makes no representations or warranties including, for example but not limited to, warranties of merchantability, fitness for a particular purpose, non-infringement of any intellectual property right or the accuracy or completeness of this document, and reserves the right to make changes without further notice to any products herein to improve reliability, function or design. No responsibility is assumed by SigmaStar Technology arising out of the application or use of any product or circuit described herein; neither does it convey any license under its patent rights, nor the rights of others. SigmaStar\u00ae is a trademark of SigmaStar Technology. Other trademarks or names herein are only for identification purposes only and owned by their respective owners.","title":"5.\u7248\u6743\u58f0\u660e"},{"location":"IPU220_index.html","text":"1. \u6982\u8ff0 \u00b6 SigmaStarDocs \u662f\u57fa\u4e8eSigmaStar\u5e73\u53f0\u7684\u9759\u6001\u7f51\u9875\u7248\u7684\u5f00\u53d1\u6587\u6863\u3002 2. \u76ee\u7684 \u00b6 \u65b9\u4fbf\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u66f4\u5feb\u901f\u719f\u6089SigmaStar IPU\u67b6\u6784\u3002 3. \u7f51\u7ad9\u5730\u56fe \u00b6 SDK\u4ecb\u7ecd \u7528\u6237\u624b\u518c FAQ SDK\u6846\u67b6\u4ecb\u7ecd \u73af\u5883\u642d\u5efa \u73af\u5883\u8bbe\u7f6e\u95ee\u9898 Docker\u73af\u5883 IPU SDK \u652f\u6301 \u6a21\u578b\u8f6c\u6362\u95ee\u9898 \u624b\u518c\u76ee\u5f55\u603b\u89c8 \u6a21\u578b\u8f6c\u6362\u95ee\u9898 Convert Tool \u6a21\u578b\u8f6c\u6362\u95ee\u9898 Calibrator \u677f\u7aef\u4f7f\u7528\u95ee\u9898 Compiler \u5176\u4ed6\u5f02\u5e38\u95ee\u9898 Simulator DumpDebug Tool \u5728\u5f00\u53d1\u677f\u4e0a\u8fd0\u884c\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b \u4e00\u952e\u751f\u6210SGS\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b \u5982\u4f55\u6dfb\u52a0\u65b0\u7684Layer \u7279\u6b8a\u6a21\u578b\u8f6c\u6362\u8981\u70b9 \u524d\u5904\u7406\u548c\u914d\u7f6e\u6587\u4ef6\u6ce8\u610f\u8981\u70b9 IPU\u7cbe\u5ea6\u95ee\u9898Debug SOP IPU SDK \u8f85\u52a9\u5de5\u5177 4.\u7f51\u9875\u5e03\u5c40 \u00b6 5.\u7248\u6743\u58f0\u660e \u00b6 \u7248\u6743\u58f0\u660e Copyright\u00a9 2021 SigmaStar Technology. All rights reserved. SigmaStar Technology makes no representations or warranties including, for example but not limited to, warranties of merchantability, fitness for a particular purpose, non-infringement of any intellectual property right or the accuracy or completeness of this document, and reserves the right to make changes without further notice to any products herein to improve reliability, function or design. No responsibility is assumed by SigmaStar Technology arising out of the application or use of any product or circuit described herein; neither does it convey any license under its patent rights, nor the rights of others. SigmaStar\u00ae is a trademark of SigmaStar Technology. Other trademarks or names herein are only for identification purposes only and owned by their respective owners.","title":"IPU220 index"},{"location":"IPU220_index.html#1","text":"SigmaStarDocs \u662f\u57fa\u4e8eSigmaStar\u5e73\u53f0\u7684\u9759\u6001\u7f51\u9875\u7248\u7684\u5f00\u53d1\u6587\u6863\u3002","title":"1. \u6982\u8ff0"},{"location":"IPU220_index.html#2","text":"\u65b9\u4fbf\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u66f4\u5feb\u901f\u719f\u6089SigmaStar IPU\u67b6\u6784\u3002","title":"2. \u76ee\u7684"},{"location":"IPU220_index.html#3","text":"SDK\u4ecb\u7ecd \u7528\u6237\u624b\u518c FAQ SDK\u6846\u67b6\u4ecb\u7ecd \u73af\u5883\u642d\u5efa \u73af\u5883\u8bbe\u7f6e\u95ee\u9898 Docker\u73af\u5883 IPU SDK \u652f\u6301 \u6a21\u578b\u8f6c\u6362\u95ee\u9898 \u624b\u518c\u76ee\u5f55\u603b\u89c8 \u6a21\u578b\u8f6c\u6362\u95ee\u9898 Convert Tool \u6a21\u578b\u8f6c\u6362\u95ee\u9898 Calibrator \u677f\u7aef\u4f7f\u7528\u95ee\u9898 Compiler \u5176\u4ed6\u5f02\u5e38\u95ee\u9898 Simulator DumpDebug Tool \u5728\u5f00\u53d1\u677f\u4e0a\u8fd0\u884c\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b \u4e00\u952e\u751f\u6210SGS\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b \u5982\u4f55\u6dfb\u52a0\u65b0\u7684Layer \u7279\u6b8a\u6a21\u578b\u8f6c\u6362\u8981\u70b9 \u524d\u5904\u7406\u548c\u914d\u7f6e\u6587\u4ef6\u6ce8\u610f\u8981\u70b9 IPU\u7cbe\u5ea6\u95ee\u9898Debug SOP IPU SDK \u8f85\u52a9\u5de5\u5177","title":"3. \u7f51\u7ad9\u5730\u56fe"},{"location":"IPU220_index.html#4","text":"","title":"4.\u7f51\u9875\u5e03\u5c40"},{"location":"IPU220_index.html#5","text":"\u7248\u6743\u58f0\u660e Copyright\u00a9 2021 SigmaStar Technology. All rights reserved. SigmaStar Technology makes no representations or warranties including, for example but not limited to, warranties of merchantability, fitness for a particular purpose, non-infringement of any intellectual property right or the accuracy or completeness of this document, and reserves the right to make changes without further notice to any products herein to improve reliability, function or design. No responsibility is assumed by SigmaStar Technology arising out of the application or use of any product or circuit described herein; neither does it convey any license under its patent rights, nor the rights of others. SigmaStar\u00ae is a trademark of SigmaStar Technology. Other trademarks or names herein are only for identification purposes only and owned by their respective owners.","title":"5.\u7248\u6743\u58f0\u660e"},{"location":"IPU230_index.html","text":"1. \u6982\u8ff0 \u00b6 SigmaStarDocs \u662f\u57fa\u4e8eSigmaStar\u5e73\u53f0\u7684\u9759\u6001\u7f51\u9875\u7248\u7684\u5f00\u53d1\u6587\u6863\u3002 2. \u76ee\u7684 \u00b6 \u65b9\u4fbf\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u66f4\u5feb\u901f\u719f\u6089SigmaStar IPU\u67b6\u6784\u3002 3. \u7f51\u7ad9\u5730\u56fe \u00b6 SDK\u4ecb\u7ecd \u7528\u6237\u624b\u518c FAQ SDK\u6846\u67b6\u4ecb\u7ecd \u73af\u5883\u642d\u5efa \u73af\u5883\u8bbe\u7f6e\u95ee\u9898 Docker\u73af\u5883 IPU SDK \u652f\u6301 \u6a21\u578b\u8f6c\u6362\u95ee\u9898 \u624b\u518c\u76ee\u5f55\u603b\u89c8 \u6a21\u578b\u8f6c\u6362\u95ee\u9898 Convert Tool \u6a21\u578b\u8f6c\u6362\u95ee\u9898 Calibrator \u677f\u7aef\u4f7f\u7528\u95ee\u9898 Compiler \u5176\u4ed6\u5f02\u5e38\u95ee\u9898 Simulator DumpDebug Tool \u5728\u5f00\u53d1\u677f\u4e0a\u8fd0\u884c\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b \u4e00\u952e\u751f\u6210SGS\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b \u5982\u4f55\u6dfb\u52a0\u65b0\u7684Layer \u7279\u6b8a\u6a21\u578b\u8f6c\u6362\u8981\u70b9 \u524d\u5904\u7406\u548c\u914d\u7f6e\u6587\u4ef6\u6ce8\u610f\u8981\u70b9 IPU\u7cbe\u5ea6\u95ee\u9898Debug SOP IPU SDK \u8f85\u52a9\u5de5\u5177 4.\u7f51\u9875\u5e03\u5c40 \u00b6 5.\u7248\u6743\u58f0\u660e \u00b6 \u7248\u6743\u58f0\u660e Copyright\u00a9 2021 SigmaStar Technology. All rights reserved. SigmaStar Technology makes no representations or warranties including, for example but not limited to, warranties of merchantability, fitness for a particular purpose, non-infringement of any intellectual property right or the accuracy or completeness of this document, and reserves the right to make changes without further notice to any products herein to improve reliability, function or design. No responsibility is assumed by SigmaStar Technology arising out of the application or use of any product or circuit described herein; neither does it convey any license under its patent rights, nor the rights of others. SigmaStar\u00ae is a trademark of SigmaStar Technology. Other trademarks or names herein are only for identification purposes only and owned by their respective owners.","title":"IPU230 index"},{"location":"IPU230_index.html#1","text":"SigmaStarDocs \u662f\u57fa\u4e8eSigmaStar\u5e73\u53f0\u7684\u9759\u6001\u7f51\u9875\u7248\u7684\u5f00\u53d1\u6587\u6863\u3002","title":"1. \u6982\u8ff0"},{"location":"IPU230_index.html#2","text":"\u65b9\u4fbf\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u66f4\u5feb\u901f\u719f\u6089SigmaStar IPU\u67b6\u6784\u3002","title":"2. \u76ee\u7684"},{"location":"IPU230_index.html#3","text":"SDK\u4ecb\u7ecd \u7528\u6237\u624b\u518c FAQ SDK\u6846\u67b6\u4ecb\u7ecd \u73af\u5883\u642d\u5efa \u73af\u5883\u8bbe\u7f6e\u95ee\u9898 Docker\u73af\u5883 IPU SDK \u652f\u6301 \u6a21\u578b\u8f6c\u6362\u95ee\u9898 \u624b\u518c\u76ee\u5f55\u603b\u89c8 \u6a21\u578b\u8f6c\u6362\u95ee\u9898 Convert Tool \u6a21\u578b\u8f6c\u6362\u95ee\u9898 Calibrator \u677f\u7aef\u4f7f\u7528\u95ee\u9898 Compiler \u5176\u4ed6\u5f02\u5e38\u95ee\u9898 Simulator DumpDebug Tool \u5728\u5f00\u53d1\u677f\u4e0a\u8fd0\u884c\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b \u4e00\u952e\u751f\u6210SGS\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b \u5982\u4f55\u6dfb\u52a0\u65b0\u7684Layer \u7279\u6b8a\u6a21\u578b\u8f6c\u6362\u8981\u70b9 \u524d\u5904\u7406\u548c\u914d\u7f6e\u6587\u4ef6\u6ce8\u610f\u8981\u70b9 IPU\u7cbe\u5ea6\u95ee\u9898Debug SOP IPU SDK \u8f85\u52a9\u5de5\u5177","title":"3. \u7f51\u7ad9\u5730\u56fe"},{"location":"IPU230_index.html#4","text":"","title":"4.\u7f51\u9875\u5e03\u5c40"},{"location":"IPU230_index.html#5","text":"\u7248\u6743\u58f0\u660e Copyright\u00a9 2021 SigmaStar Technology. All rights reserved. SigmaStar Technology makes no representations or warranties including, for example but not limited to, warranties of merchantability, fitness for a particular purpose, non-infringement of any intellectual property right or the accuracy or completeness of this document, and reserves the right to make changes without further notice to any products herein to improve reliability, function or design. No responsibility is assumed by SigmaStar Technology arising out of the application or use of any product or circuit described herein; neither does it convey any license under its patent rights, nor the rights of others. SigmaStar\u00ae is a trademark of SigmaStar Technology. Other trademarks or names herein are only for identification purposes only and owned by their respective owners.","title":"5.\u7248\u6743\u58f0\u660e"},{"location":"IPU260_index.html","text":"1. \u6982\u8ff0 \u00b6 SigmaStarDocs \u662f\u57fa\u4e8eSigmaStar\u5e73\u53f0\u7684\u9759\u6001\u7f51\u9875\u7248\u7684\u5f00\u53d1\u6587\u6863\u3002 2. \u76ee\u7684 \u00b6 \u65b9\u4fbf\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u66f4\u5feb\u901f\u719f\u6089SigmaStar IPU\u67b6\u6784\u3002 3. \u7f51\u7ad9\u5730\u56fe \u00b6 SDK\u4ecb\u7ecd \u7528\u6237\u624b\u518c FAQ SDK\u6846\u67b6\u4ecb\u7ecd \u73af\u5883\u642d\u5efa \u73af\u5883\u8bbe\u7f6e\u95ee\u9898 Docker\u73af\u5883 IPU SDK \u652f\u6301 \u6a21\u578b\u8f6c\u6362\u95ee\u9898 \u624b\u518c\u76ee\u5f55\u603b\u89c8 \u6a21\u578b\u8f6c\u6362\u95ee\u9898 Convert Tool \u6a21\u578b\u8f6c\u6362\u95ee\u9898 Calibrator \u677f\u7aef\u4f7f\u7528\u95ee\u9898 Compiler \u5176\u4ed6\u5f02\u5e38\u95ee\u9898 Simulator DumpDebug Tool \u5728\u5f00\u53d1\u677f\u4e0a\u8fd0\u884c\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b \u4e00\u952e\u751f\u6210SGS\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b \u5982\u4f55\u6dfb\u52a0\u65b0\u7684Layer \u7279\u6b8a\u6a21\u578b\u8f6c\u6362\u8981\u70b9 \u524d\u5904\u7406\u548c\u914d\u7f6e\u6587\u4ef6\u6ce8\u610f\u8981\u70b9 IPU\u7cbe\u5ea6\u95ee\u9898Debug SOP IPU SDK \u8f85\u52a9\u5de5\u5177 4.\u7f51\u9875\u5e03\u5c40 \u00b6 5.\u7248\u6743\u58f0\u660e \u00b6 \u7248\u6743\u58f0\u660e Copyright\u00a9 2021 SigmaStar Technology. All rights reserved. SigmaStar Technology makes no representations or warranties including, for example but not limited to, warranties of merchantability, fitness for a particular purpose, non-infringement of any intellectual property right or the accuracy or completeness of this document, and reserves the right to make changes without further notice to any products herein to improve reliability, function or design. No responsibility is assumed by SigmaStar Technology arising out of the application or use of any product or circuit described herein; neither does it convey any license under its patent rights, nor the rights of others. SigmaStar\u00ae is a trademark of SigmaStar Technology. Other trademarks or names herein are only for identification purposes only and owned by their respective owners.","title":"IPU260 index"},{"location":"IPU260_index.html#1","text":"SigmaStarDocs \u662f\u57fa\u4e8eSigmaStar\u5e73\u53f0\u7684\u9759\u6001\u7f51\u9875\u7248\u7684\u5f00\u53d1\u6587\u6863\u3002","title":"1. \u6982\u8ff0"},{"location":"IPU260_index.html#2","text":"\u65b9\u4fbf\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u66f4\u5feb\u901f\u719f\u6089SigmaStar IPU\u67b6\u6784\u3002","title":"2. \u76ee\u7684"},{"location":"IPU260_index.html#3","text":"SDK\u4ecb\u7ecd \u7528\u6237\u624b\u518c FAQ SDK\u6846\u67b6\u4ecb\u7ecd \u73af\u5883\u642d\u5efa \u73af\u5883\u8bbe\u7f6e\u95ee\u9898 Docker\u73af\u5883 IPU SDK \u652f\u6301 \u6a21\u578b\u8f6c\u6362\u95ee\u9898 \u624b\u518c\u76ee\u5f55\u603b\u89c8 \u6a21\u578b\u8f6c\u6362\u95ee\u9898 Convert Tool \u6a21\u578b\u8f6c\u6362\u95ee\u9898 Calibrator \u677f\u7aef\u4f7f\u7528\u95ee\u9898 Compiler \u5176\u4ed6\u5f02\u5e38\u95ee\u9898 Simulator DumpDebug Tool \u5728\u5f00\u53d1\u677f\u4e0a\u8fd0\u884c\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b \u4e00\u952e\u751f\u6210SGS\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b \u5982\u4f55\u6dfb\u52a0\u65b0\u7684Layer \u7279\u6b8a\u6a21\u578b\u8f6c\u6362\u8981\u70b9 \u524d\u5904\u7406\u548c\u914d\u7f6e\u6587\u4ef6\u6ce8\u610f\u8981\u70b9 IPU\u7cbe\u5ea6\u95ee\u9898Debug SOP IPU SDK \u8f85\u52a9\u5de5\u5177","title":"3. \u7f51\u7ad9\u5730\u56fe"},{"location":"IPU260_index.html#4","text":"","title":"4.\u7f51\u9875\u5e03\u5c40"},{"location":"IPU260_index.html#5","text":"\u7248\u6743\u58f0\u660e Copyright\u00a9 2021 SigmaStar Technology. All rights reserved. SigmaStar Technology makes no representations or warranties including, for example but not limited to, warranties of merchantability, fitness for a particular purpose, non-infringement of any intellectual property right or the accuracy or completeness of this document, and reserves the right to make changes without further notice to any products herein to improve reliability, function or design. No responsibility is assumed by SigmaStar Technology arising out of the application or use of any product or circuit described herein; neither does it convey any license under its patent rights, nor the rights of others. SigmaStar\u00ae is a trademark of SigmaStar Technology. Other trademarks or names herein are only for identification purposes only and owned by their respective owners.","title":"5.\u7248\u6743\u58f0\u660e"},{"location":"module/Benchmark/docs/opensource.html","text":"Caffe \u00b6 Tensorflow \u00b6 Tflite \u00b6 Onnx \u00b6 Name Convert Calibrate Compile Float_Result Fix_Result Offline_Result Classification(Imagenet) Top1/Top5 Top1/Top5 Top1/Top5 mobilenet_v2 pass pass pass 72.28% / 91.09% 72.28% / 91.09% 72.28% / 91.09% resnet18_v2 pass pass pass 72.28% / 87.13% 69.31% / 89.11% 69.31% / 89.11% resnet34_v2 pass pass pass 70.30% / 90.10% 72.28% / 90.10% 72.28% / 90.10% resnet50_v2 pass pass pass 76.24% / 95.05% 76.24% / 93.07% 76.24% / 93.07% resnet101_v2 pass pass pass 79.21% / 96.04% 78.22% / 95.05% 78.22% / 95.05% resnet152_v2 pass pass pass 80.20% / 96.04% 77.23% / 94.06% 77.23% / 94.06% shufflenet_v1 pass pass pass 80.20% / 96.04% 77.23% / 94.06% 77.23% / 94.06% shufflenet_v2 pass pass pass 58.42% / 78.22% 1.98% / 1.98% 1.98% / 1.98% squeezenet pass pass pass 67.33% / 78.22% 0.00% / 0.99% 0.00% / 0.99% vgg16 pass Fail Fail vgg16-bn pass Fail Fail efficientNet_lite4 Fail Fail Fail Detection(MSCOCO) mAP/ mAR mAP/ mAR mAP/ mAR tiny_yolo_v2 pass pass Fail tiny_yolo_v3 pass pass pass 23.9% / 20.7% 77.23% / 94.06% 77.23% / 94.06% yolo_v2 pass pass pass 5.1% / 5.8% 0.00% / 0.00% 0.00% / 0.00% yolo_v3 pass pass pass 42.4% / 35.7% 41.1% / 35.1% 41.1% / 35.1%","title":"Opensource"},{"location":"module/Benchmark/docs/opensource.html#caffe","text":"","title":"Caffe"},{"location":"module/Benchmark/docs/opensource.html#tensorflow","text":"","title":"Tensorflow"},{"location":"module/Benchmark/docs/opensource.html#tflite","text":"","title":"Tflite"},{"location":"module/Benchmark/docs/opensource.html#onnx","text":"Name Convert Calibrate Compile Float_Result Fix_Result Offline_Result Classification(Imagenet) Top1/Top5 Top1/Top5 Top1/Top5 mobilenet_v2 pass pass pass 72.28% / 91.09% 72.28% / 91.09% 72.28% / 91.09% resnet18_v2 pass pass pass 72.28% / 87.13% 69.31% / 89.11% 69.31% / 89.11% resnet34_v2 pass pass pass 70.30% / 90.10% 72.28% / 90.10% 72.28% / 90.10% resnet50_v2 pass pass pass 76.24% / 95.05% 76.24% / 93.07% 76.24% / 93.07% resnet101_v2 pass pass pass 79.21% / 96.04% 78.22% / 95.05% 78.22% / 95.05% resnet152_v2 pass pass pass 80.20% / 96.04% 77.23% / 94.06% 77.23% / 94.06% shufflenet_v1 pass pass pass 80.20% / 96.04% 77.23% / 94.06% 77.23% / 94.06% shufflenet_v2 pass pass pass 58.42% / 78.22% 1.98% / 1.98% 1.98% / 1.98% squeezenet pass pass pass 67.33% / 78.22% 0.00% / 0.99% 0.00% / 0.99% vgg16 pass Fail Fail vgg16-bn pass Fail Fail efficientNet_lite4 Fail Fail Fail Detection(MSCOCO) mAP/ mAR mAP/ mAR mAP/ mAR tiny_yolo_v2 pass pass Fail tiny_yolo_v3 pass pass pass 23.9% / 20.7% 77.23% / 94.06% 77.23% / 94.06% yolo_v2 pass pass pass 5.1% / 5.8% 0.00% / 0.00% 0.00% / 0.00% yolo_v3 pass pass pass 42.4% / 35.7% 41.1% / 35.1% 41.1% / 35.1%","title":"Onnx"},{"location":"module/FAQ/Common/Env_Setting.html","text":"\u4e3a\u4ec0\u4e48\u4f1a\u51fa\u73b0No module named \u2018quantize\u2019\uff0c\u800c\u5728\u5bf9\u5e94\u76ee\u5f55\u4e0b\u786e\u5b9e\u80fd\u627e\u5230quantize.cpython-37m-x86_64-linux-gnu.so\uff1f \u9700\u8981\u4f7f\u7528\u7cfb\u7edf\u7684Python3.7\u73af\u5883\u624d\u80fd\u591f\u6b63\u5e38\u4f7f\u7528\u3002\u8bf7\u9009\u62e9\u63d0\u4f9b\u7684Docker\u73af\u5883\u8fd0\u884c\u3002 \u4e3a\u4ec0\u4e48\u4f1a\u51fa\u73b0ImportError: SGS_IPU_SDK/Scripts/calibrator/utils/quantization/quantize.cpython-37m-x86_64-linux-gnu.so: undefied symbol: PyFPE_jbuf\uff1f \u4f7f\u7528Conda\u73af\u5883\u6216\u8005\u975e\u7cfb\u7edfPython3.7\u53ef\u80fd\u4f1a\u5f15\u53d1\u8fd9\u6837\u7684\u9519\u8bef\u3002\u8bf7\u9009\u62e9\u63d0\u4f9b\u7684Docker\u73af\u5883\u8fd0\u884c\u3002 Docker\u90fd\u53ef\u4ee5\u5728Ubuntu\u6216\u662fWindows\u4e0b\u8bbe\u7f6e\u5417\uff1f\u6700\u5c0f\u5185\u5b58\u9700\u6c42\uff1f \u662f\u7684\uff0c\u5efa\u8bae\u4f7f\u7528docker\uff0c\u6240\u9700\u7684\u6700\u5c0f\u5185\u5b58\u81f3\u5c11\u4e3a6G\uff0c\u5efa\u8bae\u81f3\u5c118G\uff0c\u5982\u679c\u5185\u5b58\u53ea\u662f\u521a\u597d\u591f\u7528\uff0c\u5728\u505acalibration\u65f6\u4f7f\u7528\u592a\u591a\u7684process\u8fd0\u884c\u65f6\uff0c\u53ef\u80fd\u4f1a\u4ea7\u751f\u975e\u9884\u671f\u7684\u9519\u8bef\u800c\u88ab\u4e2d\u65ad\u6389\u3002\u76ee\u524d\u5f00\u53d1\u4eba\u5458\u7684\u64cd\u4f5c\u73af\u5883\u90fd\u662f\u5728Ubuntu\uff0cWindows\u7684docker\u53ef\u80fd\u8fd0\u884c\u4e5f\u6ca1\u6709\u95ee\u9898\uff0c\u4f46\u5b9e\u9645\u4f7f\u7528\u4e0a\u6211\u4eec\u5e76\u4e0d\u786e\u5b9aWindows\u4e0b\u5efa\u7acb\u7684docker\u73af\u5883\u4e0d\u4f1a\u9047\u5230\u95ee\u9898\u3002 \u4f7f\u7528calibrator_custom\u65f6\uff0c\u4e3a\u4ec0\u4e48\u4f1a\u51fa\u73b0\u5982\u4e0b\u4e24\u79cd\u9519\u8bef\uff1f AttributeError : module 'calibrator_custom' has no attribute 'fixed_simulator' AttributeError : module 'calibrator_custom' has no attribute 'offline_simulator' \u7531\u4e8efixed\u6a21\u578b\u548coffline\u6a21\u578b\u4f7f\u752832\u4f4d\u8fd0\u884c\u5e93\uff0c\u56e0\u6b64\u9700\u4f7f\u752832\u4f4dPython3.7\u73af\u5883\u8fd0\u884c\u3002Docker\u4e2d\u5df2\u66f4\u65b032\u4f4dPython3.7\u73af\u5883\uff0c\u4f7f\u7528python32\u5373\u53ef\u8fd0\u884c\u3002","title":"Env Setting"},{"location":"module/FAQ/IPU100/Development_Board.html","text":"\u5728\u677f\u4e0a\u8fd0\u884c\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u6570\u636e\u600e\u4e48\u548cPC\u4e0a\u4e0d\u4e00\u6837\uff1f \u9996\u5148\u9700\u8981\u660e\u786e\u4e00\u70b9Fixed\u548cOffline\u6a21\u578b\u5728PC\u4e0a\u548c\u677f\u4e0a\u8fd0\u884c\u65f6\uff0c\u7ed9\u5b9a\u76f8\u540c\u7684\u8f93\u5165\uff0c\u8f93\u51fa\u7684\u6709\u6548\u6570\u636e\u4e00\u5b9a\u662f\u4e00\u6837\u7684\u3002\u4f7f\u7528\u4ee5\u4e0b\u65b9\u6cd5\uff0c\u53ef\u4ee5\u9a8c\u8bc1\uff1a \u5728PC\u4e0a\u4eff\u771f\uff0c\u4f7f\u7528simulator.py\u8fd0\u884cFixed\u6216Offline\u6a21\u578b\u65f6\u52a0\u4e0a\u53c2\u6570--dump_rawdata\uff0c\u8fd0\u884c\u7ed3\u675f\u540e\u4f1a\u5728\u5f53\u524d\u8def\u5f84\u4e0b\u4fdd\u5b58\u4e00\u4e2a\u56fe\u7247\u540d+ .bin\u7684\u6587\u4ef6\u3002\u8be5\u6587\u4ef6\u662f\u5728PC\u4e0a\u505a\u8fc7\u524d\u5904\u7406\u7684\u8f93\u5165\u6570\u636e\uff0c\u4ee5\u4e8c\u8fdb\u5236\u6587\u4ef6\u5f62\u5f0f\u4fdd\u5b58\u4e0b\u6765\u3002\u5728\u677f\u7aef\u8bfb\u53d6\u8be5\u6587\u4ef6\uff0c\u5c06\u8be5\u6587\u4ef6\u5185\u6240\u6709\u6570\u636ememcpy\u5230\u6a21\u578b\u7684\u8f93\u5165Tensor\uff0c\u7136\u540e\u6267\u884cMI_IPU_Invoke\u3002\u5f97\u5230\u7684\u8f93\u51fa\u548c\u5728PC\u4e0a\u5e94\u8be5\u662f\u5b8c\u5168\u4e00\u81f4\u7684\u3002 \u5728\u677f\u4e0a\u8fd0\u884c\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u6570\u636e\u7ef4\u5ea6\u600e\u4e48\u4e0d\u4e00\u6837\uff1f \u5982\u679c\u8f6c\u6362\u7f51\u7edc\u65f6input_config.ini\u4e2ddequantizations\u8bbe\u4e3aFALSE\uff0cFixed\u548cOffline\u6a21\u578b\u8fd0\u884c\u5b8c\u6210\u540e\uff0c\u8f93\u51fa\u6570\u636e\u7684\u6700\u540e\u7ef4\u5ea6\u4f1a\u5411\u4e0a\u5bf9\u9f50\u3002\u7531\u4e8e\u786c\u4ef6\u7684\u5199\u6570\u636e\u539f\u5219\u5bfc\u81f4\uff0c\u56e0\u6b64\u65e0\u8bba\u5728PC\u4e0a\u4eff\u771f\u8fd8\u662f\u5728\u677f\u4e0a\u5b9e\u9645\u8fd0\u884c\uff0c\u90fd\u4f1a\u6709\u8fd9\u4e2a\u73b0\u8c61\u3002\u4f7f\u7528simulator.py\u65f6\uff0c-c\u8bbeUnknown\uff0c\u8f93\u51fa\u6587\u4ef6\u4e2d\u4f1a\u6709\u5982\u4e0b\u63d0\u793a\uff1a layer46 - conv Tensor : { tensor dim : 4 , Original shape :[ 1 13 13 255 ], Alignment shape :[ 1 13 13 256 ] The following tensor data shape is alignment shape . tensor data : ... \u5176\u4e2dAlignment shape\u662f\u6a21\u578b\u771f\u6b63\u8f93\u51fa\u7684\u6570\u636e\u7ef4\u5ea6\u3002 \u4f7f\u7528calibrator_custom.fixed_simulator\u521b\u5efaFixed\u6a21\u578b\u7684\u5b9e\u4f8b\uff0c\u5b8c\u6210invoke\u540e\uff0c\u8c03\u7528get_output\u65b9\u6cd5\u5f97\u5230result\u7684 numpy.ndarray\u6570\u636eshape\u4e5f\u4f1a\u6709\u5bf9\u9f50\u3002 >>> print ( result . shape ) ( 1 , 13 , 13 , 256 ) \u5177\u4f53\u8be6\u89c15.2.1\u8282\u53bb\u9664\u65e0\u7528\u6570\u636e\u3002 \u677f\u4e0a\u8fd0\u884c\u7684\u8f93\u51fa\u662f\u6d6e\u70b9\u8fd8\u662f\u5b9a\u70b9\uff1f \u677f\u4e0a\u8fd0\u884c\u7684\u7ed3\u679c\u4e0e\u7f51\u7edc\u8f6c\u6362\u65f6input_config.ini\u914d\u7f6e\u76f8\u5173\u3002\u5f53dequantizations\u914d\u7f6e\u4e3aTRUE\u65f6\uff0c\u5728\u677f\u4e0a\u5bf9\u5e94Tensor\u8f93\u51fa\u4e3a\u6d6e\u70b9\u6570\u636e\u3002\u53e6\u5916\u8fd8\u53ef\u4ee5\u901a\u8fc7MI_IPU_GetInOutTensorDesc\u63a5\u53e3\u67e5\u770b\u8f93\u51faTensor\u7684\u6570\u636e\u7c7b\u578b\u3002 \u8fd0\u884c\u65f6\uff0c\u6a21\u578b\u5360\u7528\u7684\u5185\u5b58\u5982\u4f55\u67e5\u770b\uff1f cat /proc/mi_modules/mi_ipu/mi_ipu0 \u53c2\u770b\u4ee5\u4e0b\u89e3\u91ca ipu_variable: \u6240\u6709\u7f51\u7edc\u6a21\u578b\u63a8\u7406\u8fc7\u7a0b\u4e2d\u4e34\u65f6\u4f7f\u7528\u7684\u5185\u5b58 ipu_heap: ipu firmware\u4e2dmalloc\u4f7f\u7528\u7684\u5806 IPU_log: \u5b58\u50a8log\u4f7f\u7528\u7684\u5185\u5b58 ipu_firmware: ipu firmware\u8fd0\u884c\u5360\u7528\u7684\u5185\u5b58 ipu_chn0_networ: channel 0\u88c5\u8f7d\u7f51\u7edc\u6a21\u578b\u4f7f\u7528\u7684\u5185\u5b58 ipu_chn0_desc: channel 0\u7684\u7f51\u7edc\u63cf\u8ff0\u5360\u7528\u7684\u5185\u5b58 IPU_Buffer_chn0: channel 0\u4e34\u65f6\u5360\u7528\u7684\u5185\u5b58 ipu_chn0_input_: channel 0 \u8f93\u5165tensor\u5360\u7528\u7684\u5185\u5b58\uff08\u591a\u4e2a\u5219\u4ee3\u8868\u6709\u591a\u4e2a\u8f93\u5165tensor\u53ef\u540c\u65f6\u4f7f\u7528\uff09 ipu_chn0_output: channel 0\u8f93\u51fatensor\u5360\u7528\u7684\u5185\u5b58\uff08\u591a\u4e2a\u5219\u4ee3\u8868\u6709\u591a\u4e2a\u8f93\u51fatensor\u53ef\u540c\u65f6\u4f7f\u7528\uff09","title":"Development Board"},{"location":"module/FAQ/IPU100/Model_Conversion.html","text":"\u53ef\u4ee5\u4f7f\u7528IPU_SDK\u8f6c\u6362\u5de5\u5177\u76f4\u63a5\u8f6c\u6362INT8\u7684\u6a21\u578b\u5417\uff1f \u5f53\u524d\u4e0d\u652f\u63f4\u76f4\u63a5\u8f93\u5165IPU SDK\u7684\u91cf\u5316\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff0c\u6a21\u578b\u5fc5\u987b\u4ece\u6d6e\u70b9\u5f00\u59cb\u8f6c\u6362\u3002\u53ef\u4ee5\u4f7f\u7528\u91cf\u5316\u5bfc\u5165\u5de5\u5177\u5c06\u5df2\u6709\u91cf\u5316\u4fe1\u606f\u5bfc\u5165\u5230\u6a21\u578b\u4e2d\u3002\u8be6\u89c13.4.3\u8282\u3002 \u4e3a\u4ec0\u4e48\u4f7f\u7528ConvertTool.py\u8f6c\u6362keras\u6a21\u578b\u65f6Tensorflow\u62a5\u9519\uff1f \u7531\u4e8e\u9ed8\u8ba4\u4f7f\u7528\u4e86Tensorflow1.14.0\uff0cConvertTool.py\u4e2d\u4e5f\u8c03\u7528\u4e86Tensorflow\u7684\u63a5\u53e3\u5c06keras\u6a21\u578b\u8f6c\u6362\u4e3atflite\u3002\u7531\u4e8eTensorflow1.x\u4e0d\u80fd\u8f6c\u6362Tensorflow2.0\u4ee5\u4e0a\u7248\u672c\u7684keras\u6a21\u578b\uff0c\u56e0\u6b64\u4f1a\u53d1\u751f\u9519\u8bef\u3002\u8bf7\u5148\u4f7f\u7528\u8bad\u7ec3\u7684Tensorflow\u7248\u672c\u5c06keras\u6a21\u578b\u8f6c\u6362\u4e3atflite\uff0c\u7136\u540e\u518d\u4f7f\u7528ConvertTool.py\u8fdb\u884c\u8f6c\u6362\u3002 \u4e3a\u4ec0\u4e48\u4f7f\u7528simulator.py\u5bf9YOLO\u7f51\u7edc\u6d4b\u8bd5mAP\uff0c\u7cbe\u5ea6\u4f1a\u90a3\u4e48\u5dee\uff1f \u7531\u4e8eCOCO\u6570\u636e\u96c6\u867d\u7136\u670980\u4e2a\u5206\u7c7b\uff0c\u4f46\u662flabel\u7684index\u4e0d\u662f\u8fde\u7eed\u7684\uff0c\u52a0\u4e0a\u4e2d\u95f4\u63d2\u7a7a\u7684index\uff0c\u4e00\u5171\u670990\u7c7b\u3002\u6240\u63d0\u4f9b\u7684\u5b98\u65b9YOLO\u7f51\u7edc\u9884\u8bad\u7ec3\u6a21\u578b\u53bb\u9664\u4e86label\u7684\u7a7a\u767d\u9879\uff0c80\u7c7b\u662f\u8fde\u7eed\u7684\u3002\u5982\u679c\u76f4\u63a5\u8c03\u7528COCO\u7684\u63a5\u53e3\u8ba1\u7b97mAP\uff0c\u7ed3\u679c\u662f\u4e0d\u6b63\u786e\u7684\u3002 \u4e3a\u4ec0\u4e48\u5728\u8f6c\u6362\u5b9a\u70b9\u6a21\u578b\u65f6\u6709\u8fd9\u6837\u7684\u62a5\u9519\uff1aSGS_DMA_CoefMartixGen: Assertion s32coef_bgr < HW_COEF_MAX failed.\uff1f \u8fd9\u4e2a\u9519\u8bef\u4fe1\u606f\u8bf4\u660e\u914d\u7f6e\u7684python\u524d\u5904\u7406\u548cinput_config.ini\u4e2d\u4e0d\u4e00\u81f4\uff0c\u4e3b\u8981\u4f53\u73b0\u5728\u914d\u7f6e\u7684mean\u548cstd\u4e0d\u4e00\u81f4\u3002\u5177\u4f53\u8be6\u89c13.2\u8282\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\u548c2.2\u8282input_config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e\u3002\u68c0\u67e5\u7edf\u8ba1\u8f93\u5165\u7684\u8303\u56f4\uff0c\u4e0e\u8bbe\u7f6e\u7684input_config.ini\u4e2d\u7684\u6570\u636e\u6bd4\u8f83\u3002\u5f53\u4f7f\u7528\u91cf\u5316\u5bfc\u5165\u65f6\uff0c\u4e5f\u5e94\u8be5\u6ce8\u610f\u7b2c\u4e00\u5c42\u5377\u79ef\u8f93\u5165\u7684\u8bbe\u7f6e\u8303\u56f4\u5e94\u548cinput_config.ini\u4e2d\u4fdd\u6301\u4e00\u81f4\u3002 \u4e3a\u4ec0\u4e48input_config.ini\u4e2d\u8bbe\u7f6e\u4e86dequantizations\u4e3aFALSE\uff0c\u5728PC\u4eff\u771f\u65f6\u4ecd\u7136\u8f93\u51fa\u6d6e\u70b9\u6570\uff1f input_config.ini\u4e2d\u7684dequantizations\u914d\u7f6e\u4ec5\u5728\u677f\u4e0a\u8fd0\u884c\u65f6\u751f\u6548\u3002\u6a21\u578b\u7684\u8f93\u51fa\u7ed3\u679c\u90fd\u662fint16\uff0c\u662fsimulator.py\u5b8c\u6210\u4e86\u5c06int16\u8f93\u51fa\u7ed3\u679c\u4e58scale\u7684\u8fc7\u7a0b\u3002\u8fd8\u53ef\u4ee5\u4f7f\u7528calibrator_custom.fixed_simulator\u521b\u5efa\u5b9a\u70b9\u6a21\u578b\u7684\u5b9e\u4f8b\uff0c\u901a\u8fc7get_output_details\u7684\u65b9\u6cd5\u67e5\u770b\u7f51\u7edc\u8f93\u51fa\u7684\u6570\u636e\u7c7b\u578b\u3002 \u4e3a\u4ec0\u4e48\u4ece\u6d6e\u70b9\u6a21\u578b\u8f6c\u5230\u5b9a\u70b9\u6a21\u578b\u7684\u65f6\u5019\uff0c\u4e00\u76f4\u5361\u5728Start to analysis model...\uff1f \u9047\u5230\u8fd9\u4e2a\u60c5\u51b5\uff0c\u8bf7\u68c0\u67e5\u63d0\u4f9b\u91cf\u5316\u4f7f\u7528\u7684\u6570\u636e\u96c6\u4e2d\u6587\u4ef6\u540d\u662f\u5426\u5305\u542b\u6709\u4e2d\u6587\u5b57\u7b26\u3002 \u4e3a\u4ec0\u4e48\u7528DumpDebug\u5de5\u5177\u6bd4\u8f83\u6709\u7cbe\u5ea6\u635f\u5931\u7684\u5b9a\u70b9\u6a21\u578b\u548c\u6d6e\u70b9\u6a21\u578b\u65f6,\u8f93\u51fa\u7684log\u4e2d\u4e0d\u80fd\u663e\u793a\u51fa\u6240\u6709\u5c42\u7684\u6bd4\u8f83\u7ed3\u679c? \u8fd9\u662f\u7531\u4e8eDebugConfig.txt\u4e2d\u7684disableDomainFuseOps\u6ca1\u6709\u5f00\u542f,\u5bfc\u81f4\u6709\u4e9bop\u878d\u5408\u3002\u8bf7\u5148\u5c06DebugConfig.txt\u62f7\u8d1d\u5230\u6267\u884c\u76ee\u5f55\u4e2d,\u5e76\u5c06disableDomainFuseOps\u5f00\u542f,\u5e76\u91cd\u65b0\u8f6c\u6362\u6a21\u578b\u540e\u518d\u8fdb\u884csimulator\u751f\u6210 sigma_outtensor_dump.bin \u6587\u4ef6\u3002 \u4e3a\u4ec0\u4e48\u7528DumpDebug\u5de5\u5177\u6bd4\u8f83\u65f6,\u4f1a\u51fa\u73b0 write file fail... ? \u8fd9\u662f\u7531\u4e8eDebugConfig.txt\u4e2d path= \u914d\u7f6e\u7684\u8def\u5f84\u4e0d\u5b58\u5728,\u8bf7\u68c0\u67e5\u914d\u7f6e\u7684\u8def\u5f84\u5e76\u914d\u7f6e\u5b58\u5728\u7684\u7edd\u5730\u8def\u5f84\u3002\u9ed8\u8ba4\u8def\u5f84\u4e3a\u7528\u6237\u6839\u76ee\u5f55\u3002","title":"Model Conversion"},{"location":"module/FAQ/IPU100/Other_Anomalies.html","text":"\u7f51\u7edc\u5e94\u8be5\u5982\u4f55\u8bbe\u8ba1\uff0c\u80fd\u5728SigmaStar\u7684\u786c\u4ef6\u4e0a\u9ad8\u6548\u6267\u884c\uff1f \u9700\u8981\u8bf4\u660e\u7684\u662f\uff0cSGS_IPU_SDK\u8f6c\u6362\u540e\u7684\u6a21\u578b\u9ed8\u8ba4\u6570\u636e\u6392\u5e03\u4e3aNHWC\u3002 \u5377\u79ef\u65b9\u9762\uff1a\u5377\u79ef\u7684\u8f93\u5165shape\u7684C\u8d8a\u5927\uff0cHW\u8d8a\u5c0f\uff0c\u5377\u79ef\u7684\u6548\u7387\u8d8a\u9ad8\u3002\u786c\u4ef6\u80fd\u76f4\u63a5\u652f\u6301kernel size\u4e3a3x3\u7684Depthwise\u5377\u79ef\uff0c\u5176\u4ed6size\u7684kernel\u5c06\u8f6c\u6362\u4e3a\u975eDepthwise\u5377\u79ef\u8ba1\u7b97\u3002 \u5176\u4ed6\u5c42\uff1a\u5176\u4ed6\u5c42\u7684C\u7ef4\u5ea6\u6700\u597d\u662f16\u7684\u6574\u6570\u500d\uff0c\u90fd\u80fd\u591f\u52a0\u901f\u8fd0\u7b97\uff0c\u7279\u522b\u662fGather\u3001Unpack\u3001Pack\u3001Concat\u3001Reshape\u3001Slice\u3001Tile\u3001Tanspose\u3001Pad\u3001Split\u7b49\u7b97\u5b50\u52a0\u901f\u5341\u5206\u660e\u663e\u3002 \u7f51\u7edc\u8f93\u5165\u7684\u56fe\u7247\u6570\u636e\u6392\u5e03\u662f\u600e\u6837\u7684\uff1f \u9700\u8981\u8bf4\u660e\u7684\u662f\uff0cSGS_IPU_SDK\u8f6c\u6362\u540e\u7684\u6a21\u578b\u9ed8\u8ba4\u6570\u636e\u6392\u5e03\u4e3aNHWC\u3002\u56e0\u6b64\u5982\u679c\u662fRGB\u901a\u9053\u987a\u5e8f\u7684\u56fe\u7247\u8f93\u5165\u6a21\u578b\uff0c\u56fe\u7247\u6570\u636e\u6392\u5e03\u662f\u2026\u2026RGBRGB\u2026\u2026\u3002\u5982\u679c\u662fBGR\u901a\u9053\u987a\u5e8f\u7684\u56fe\u7247\u8f93\u5165\u6a21\u578b\uff0c\u56fe\u7247\u6570\u636e\u6392\u5e03\u662f\u2026\u2026BGRBGR\u2026\u2026\u3002 NMS\u6700\u5927\u652f\u6301\u591a\u5c11\u4e2abox\u8f93\u5165\uff1f TFLite_Detection_NMS\u7b97\u5b50\u6700\u5927\u652f\u630124576\u4e2abbox\u8f93\u5165\u3002\u7531\u4e8eNMS\u7b97\u6cd5\u7684\u7279\u6b8a\u6027\uff0c\u76ee\u524d\u786c\u4ef6\u6700\u5927\u9650\u5236\u4e3a24576\u4e2a\u8f93\u5165\u624d\u53ef\u4ee5\u505a\u3002 \u975e\u56fe\u7247\u8f93\u5165\u7684\u7f51\u7edc\u53ef\u4ee5\u8fd0\u884c\u5417\uff1f \u53ef\u4ee5\u8fd0\u884c\uff0c\u6570\u636e\u8f93\u5165\u7684\u8981\u6c42\u548c\u56fe\u7247\u8f93\u5165\u7565\u6709\u4e0d\u540c\uff0c\u8be6\u60c5\u8bf7\u53c2\u80039.2\u8282\u3002 \u4f7f\u7528ARM\u5c06\u7f51\u7edc\u8f93\u51fa\u7684int16\u8f6c\u6d6e\u70b9\u5f88\u5feb\u5417\uff1f \u6d4b\u8bd5100\u4e07\u4e2aint16\u6570\u636e\u91cf\u4e58scale\u7684\u901f\u5ea6\u4e3a8ms\u5de6\u53f3\u3002 \u5982\u4f55\u67e5\u770b\u6a21\u578b\u5728\u677f\u7aef\u7684\u8fd0\u884c\u6548\u7387 \u67e5\u770b\u7f51\u7edc\u5185\u90e8\u8be6\u7ec6\u8017\u65f6\uff0c\u53ef\u4ee5\u5148\u4fee\u6539\u7a0b\u5e8f\uff0c\u5728MI_IPU_DestroyCHN\u548cMI_IPU_DestroyDevice\u524d\u4f7f\u7528while(1); \u505c\u4f4f\u7a0b\u5e8f\u3002\u8fd0\u884c\u8d77\u6765\u4ee5\u540e\uff0c\u4f7f\u7528telnet\u65b0\u5f00\u4e00\u4e2a\u7ec8\u7aef\uff0c\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\uff0c echo time_statistic > /proc/mi_modules/mi_ipu/mi_ipu0 \u5373\u53ef\u67e5\u770b\u5230\u7f51\u7edc\u5185\u90e8\u8be6\u7ec6\u8017\u65f6\uff1a\uff08\u8f93\u51fa\u7ed3\u679c\u5728\u4e32\u53e3\uff09 \u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u67e5\u770bIPU\u9891\u7387\uff1a cat /sys/dla/clk_rate","title":"Other Anomalies"},{"location":"module/FAQ/IPU200M/Development_Board.html","text":"\u5728\u677f\u4e0a\u8fd0\u884c\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u6570\u636e\u600e\u4e48\u548cPC\u4e0a\u4e0d\u4e00\u6837\uff1f \u9996\u5148\u9700\u8981\u660e\u786e\u4e00\u70b9Fixed\u548cOffline\u6a21\u578b\u5728PC\u4e0a\u548c\u677f\u4e0a\u8fd0\u884c\u65f6\uff0c\u7ed9\u5b9a\u76f8\u540c\u7684\u8f93\u5165\uff0c\u8f93\u51fa\u7684\u6709\u6548\u6570\u636e\u4e00\u5b9a\u662f\u4e00\u6837\u7684\u3002\u4f7f\u7528\u4ee5\u4e0b\u65b9\u6cd5\uff0c\u53ef\u4ee5\u9a8c\u8bc1\uff1a \u5728PC\u4e0a\u4eff\u771f\uff0c\u4f7f\u7528simulator.py\u8fd0\u884cFixed\u6216Offline\u6a21\u578b\u65f6\u52a0\u4e0a\u53c2\u6570--dump_rawdata\uff0c\u8fd0\u884c\u7ed3\u675f\u540e\u4f1a\u5728\u5f53\u524d\u8def\u5f84\u4e0b\u4fdd\u5b58\u4e00\u4e2a\u56fe\u7247\u540d+ .bin\u7684\u6587\u4ef6\u3002\u8be5\u6587\u4ef6\u662f\u5728PC\u4e0a\u505a\u8fc7\u524d\u5904\u7406\u7684\u8f93\u5165\u6570\u636e\uff0c\u4ee5\u4e8c\u8fdb\u5236\u6587\u4ef6\u5f62\u5f0f\u4fdd\u5b58\u4e0b\u6765\u3002\u5728\u677f\u7aef\u8bfb\u53d6\u8be5\u6587\u4ef6\uff0c\u5c06\u8be5\u6587\u4ef6\u5185\u6240\u6709\u6570\u636ememcpy\u5230\u6a21\u578b\u7684\u8f93\u5165Tensor\uff0c\u7136\u540e\u6267\u884cMI_IPU_Invoke\u3002\u5f97\u5230\u7684\u8f93\u51fa\u548c\u5728PC\u4e0a\u5e94\u8be5\u662f\u5b8c\u5168\u4e00\u81f4\u7684\u3002 \u5728\u677f\u4e0a\u8fd0\u884c\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u6570\u636e\u7ef4\u5ea6\u600e\u4e48\u4e0d\u4e00\u6837\uff1f \u5982\u679c\u8f6c\u6362\u7f51\u7edc\u65f6input_config.ini\u4e2ddequantizations\u8bbe\u4e3aFALSE\uff0cFixed\u548cOffline\u6a21\u578b\u8fd0\u884c\u5b8c\u6210\u540e\uff0c\u8f93\u51fa\u6570\u636e\u7684\u6700\u540e\u7ef4\u5ea6\u4f1a\u5411\u4e0a\u5bf9\u9f50\u3002\u7531\u4e8e\u786c\u4ef6\u7684\u5199\u6570\u636e\u539f\u5219\u5bfc\u81f4\uff0c\u56e0\u6b64\u65e0\u8bba\u5728PC\u4e0a\u4eff\u771f\u8fd8\u662f\u5728\u677f\u4e0a\u5b9e\u9645\u8fd0\u884c\uff0c\u90fd\u4f1a\u6709\u8fd9\u4e2a\u73b0\u8c61\u3002\u4f7f\u7528simulator.py\u65f6\uff0c-c\u8bbeUnknown\uff0c\u8f93\u51fa\u6587\u4ef6\u4e2d\u4f1a\u6709\u5982\u4e0b\u63d0\u793a\uff1a layer46 - conv Tensor : { tensor dim : 4 , Original shape :[ 1 13 13 255 ], Alignment shape :[ 1 13 13 256 ] The following tensor data shape is alignment shape . tensor data : ... \u5176\u4e2dAlignment shape\u662f\u6a21\u578b\u771f\u6b63\u8f93\u51fa\u7684\u6570\u636e\u7ef4\u5ea6\u3002 \u4f7f\u7528calibrator_custom.fixed_simulator\u521b\u5efaFixed\u6a21\u578b\u7684\u5b9e\u4f8b\uff0c\u5b8c\u6210invoke\u540e\uff0c\u8c03\u7528get_output\u65b9\u6cd5\u5f97\u5230result\u7684 numpy.ndarray\u6570\u636eshape\u4e5f\u4f1a\u6709\u5bf9\u9f50\u3002 >>> print ( result . shape ) ( 1 , 13 , 13 , 256 ) \u5177\u4f53\u8be6\u89c15.2.1\u8282\u53bb\u9664\u65e0\u7528\u6570\u636e\u3002 \u5982\u679c\u8f6c\u6362\u7f51\u7edc\u65f6input_config.ini\u4e2ddequantizations\u8bbe\u4e3aTRUE\uff0cFix2float\u7b97\u5b50\u4f1a\u5e2e\u52a9\u5b8c\u6210\u53bb\u9664\u65e0\u7528\u6570\u636e\u7684\u529f\u80fd\uff0c\u4fdd\u8bc1\u6a21\u578b\u8f93\u51fa\u7ef4\u5ea6\u4e0e\u539f\u59cb\u7f51\u7edc\u8f93\u51fa\u4e00\u81f4 \u5728\u677f\u4e0a\u8f93\u51fa\u6d6e\u70b9\u6570\u5168\u90e8\u662fIPU\u5b8c\u6210\u7684\u5417\uff1f IPU\u53ef\u4ee5\u901a\u8fc7\u589e\u52a0Fix2float\u7b97\u5b50\u5b8c\u6210int16\u4e58scale\u5230float32\u6570\u636e\u7684\u8f6c\u6362\u3002\u53ea\u9700\u7f51\u7edc\u8f6c\u6362\u65f6input_config.ini\u4e2ddequantizations\u8bbe\u4e3aTRUE\uff0c\u5728\u8f6c\u5230Fixed\u6a21\u578b\u540e\u4f1a\u5728\u6a21\u578b\u5bf9\u5e94\u7684\u8f93\u51fa\u589e\u52a0Fix2float\u7b97\u5b50\u3002 \u8fd0\u884c\u65f6\uff0c\u6a21\u578b\u5360\u7528\u7684\u5185\u5b58\u5982\u4f55\u67e5\u770b\uff1f cat /proc/mi_modules/mi_ipu/mi_ipu0 \u53c2\u770b\u4ee5\u4e0b\u89e3\u91ca ipu_variable: \u6240\u6709\u7f51\u7edc\u6a21\u578b\u63a8\u7406\u8fc7\u7a0b\u4e2d\u4e34\u65f6\u4f7f\u7528\u7684\u5185\u5b58 ipu_heap: ipu firmware\u4e2dmalloc\u4f7f\u7528\u7684\u5806 IPU_log: \u5b58\u50a8log\u4f7f\u7528\u7684\u5185\u5b58 ipu_firmware: ipu firmware\u8fd0\u884c\u5360\u7528\u7684\u5185\u5b58 ipu_chn0_networ: channel 0\u88c5\u8f7d\u7f51\u7edc\u6a21\u578b\u4f7f\u7528\u7684\u5185\u5b58 ipu_chn0_desc: channel 0\u7684\u7f51\u7edc\u63cf\u8ff0\u5360\u7528\u7684\u5185\u5b58 IPU_Buffer_chn0: channel 0\u4e34\u65f6\u5360\u7528\u7684\u5185\u5b58 ipu_chn0_input_: channel 0 \u8f93\u5165tensor\u5360\u7528\u7684\u5185\u5b58\uff08\u591a\u4e2a\u5219\u4ee3\u8868\u6709\u591a\u4e2a\u8f93\u5165tensor\u53ef\u540c\u65f6\u4f7f\u7528\uff09 ipu_chn0_output: channel 0\u8f93\u51fatensor\u5360\u7528\u7684\u5185\u5b58\uff08\u591a\u4e2a\u5219\u4ee3\u8868\u6709\u591a\u4e2a\u8f93\u51fatensor\u53ef\u540c\u65f6\u4f7f\u7528\uff09","title":"Development Board"},{"location":"module/FAQ/IPU200M/Model_Conversion.html","text":"\u53ef\u4ee5\u4f7f\u7528IPU_SDK\u8f6c\u6362\u5de5\u5177\u76f4\u63a5\u8f6c\u6362INT8\u7684\u6a21\u578b\u5417\uff1f \u5f53\u524d\u4e0d\u652f\u63f4\u76f4\u63a5\u8f93\u5165IPU SDK\u7684\u91cf\u5316\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff0c\u6a21\u578b\u5fc5\u987b\u4ece\u6d6e\u70b9\u5f00\u59cb\u8f6c\u6362\u3002\u53ef\u4ee5\u4f7f\u7528\u91cf\u5316\u5bfc\u5165\u5de5\u5177\u5c06\u5df2\u6709\u91cf\u5316\u4fe1\u606f\u5bfc\u5165\u5230\u6a21\u578b\u4e2d\u3002\u8be6\u89c13.4.3\u8282\u3002 \u4e3a\u4ec0\u4e48\u4f7f\u7528ConvertTool.py\u8f6c\u6362keras\u6a21\u578b\u65f6Tensorflow\u62a5\u9519\uff1f \u7531\u4e8e\u9ed8\u8ba4\u4f7f\u7528\u4e86Tensorflow1.14.0\uff0cConvertTool.py\u4e2d\u4e5f\u8c03\u7528\u4e86Tensorflow\u7684\u63a5\u53e3\u5c06keras\u6a21\u578b\u8f6c\u6362\u4e3atflite\u3002\u7531\u4e8eTensorflow1.x\u4e0d\u80fd\u8f6c\u6362Tensorflow2.0\u4ee5\u4e0a\u7248\u672c\u7684keras\u6a21\u578b\uff0c\u56e0\u6b64\u4f1a\u53d1\u751f\u9519\u8bef\u3002\u8bf7\u5148\u4f7f\u7528\u8bad\u7ec3\u7684Tensorflow\u7248\u672c\u5c06keras\u6a21\u578b\u8f6c\u6362\u4e3atflite\uff0c\u7136\u540e\u518d\u4f7f\u7528ConvertTool.py\u8fdb\u884c\u8f6c\u6362\u3002 \u4e3a\u4ec0\u4e48\u4f7f\u7528simulator.py\u5bf9YOLO\u7f51\u7edc\u6d4b\u8bd5mAP\uff0c\u7cbe\u5ea6\u4f1a\u90a3\u4e48\u5dee\uff1f \u7531\u4e8eCOCO\u6570\u636e\u96c6\u867d\u7136\u670980\u4e2a\u5206\u7c7b\uff0c\u4f46\u662flabel\u7684index\u4e0d\u662f\u8fde\u7eed\u7684\uff0c\u52a0\u4e0a\u4e2d\u95f4\u63d2\u7a7a\u7684index\uff0c\u4e00\u5171\u670990\u7c7b\u3002\u6240\u63d0\u4f9b\u7684\u5b98\u65b9YOLO\u7f51\u7edc\u9884\u8bad\u7ec3\u6a21\u578b\u53bb\u9664\u4e86label\u7684\u7a7a\u767d\u9879\uff0c80\u7c7b\u662f\u8fde\u7eed\u7684\u3002\u5982\u679c\u76f4\u63a5\u8c03\u7528COCO\u7684\u63a5\u53e3\u8ba1\u7b97mAP\uff0c\u7ed3\u679c\u662f\u4e0d\u6b63\u786e\u7684\u3002 \u4e3a\u4ec0\u4e48\u5728\u8f6c\u6362\u5b9a\u70b9\u6a21\u578b\u65f6\u6709\u8fd9\u6837\u7684\u62a5\u9519\uff1aSGS_DMA_CoefMartixGen: Assertion s32coef_bgr < HW_COEF_MAX failed.\uff1f \u8fd9\u4e2a\u9519\u8bef\u4fe1\u606f\u8bf4\u660e\u914d\u7f6e\u7684python\u524d\u5904\u7406\u548cinput_config.ini\u4e2d\u4e0d\u4e00\u81f4\uff0c\u4e3b\u8981\u4f53\u73b0\u5728\u914d\u7f6e\u7684mean\u548cstd\u4e0d\u4e00\u81f4\u3002\u5177\u4f53\u8be6\u89c13.2\u8282\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\u548c2.2\u8282input_config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e\u3002\u68c0\u67e5\u7edf\u8ba1\u8f93\u5165\u7684\u8303\u56f4\uff0c\u4e0e\u8bbe\u7f6e\u7684input_config.ini\u4e2d\u7684\u6570\u636e\u6bd4\u8f83\u3002\u5f53\u4f7f\u7528\u91cf\u5316\u5bfc\u5165\u65f6\uff0c\u4e5f\u5e94\u8be5\u6ce8\u610f\u7b2c\u4e00\u5c42\u5377\u79ef\u8f93\u5165\u7684\u8bbe\u7f6e\u8303\u56f4\u5e94\u548cinput_config.ini\u4e2d\u4fdd\u6301\u4e00\u81f4\u3002 \u4e3a\u4ec0\u4e48input_config.ini\u4e2d\u8bbe\u7f6e\u4e86dequantizations\u4e3aFALSE\uff0c\u5728PC\u4eff\u771f\u65f6\u4ecd\u7136\u8f93\u51fa\u6d6e\u70b9\u6570\uff1f input_config.ini\u4e2d\u7684dequantizations\u914d\u7f6e\u6210FALSE\u540e\u662fsimulator.py\u5b8c\u6210\u4e86\u5c06int16\u8f93\u51fa\u7ed3\u679c\u4e58scale\u7684\u8fc7\u7a0b\u3002\u914d\u7f6e\u6210TRUE\uff0c\u4f1a\u5728\u8f6c\u6362Fixed\u6a21\u578b\u65f6\u5728\u8f93\u51fa\u589e\u52a0Fix2float\u7b97\u5b50\uff0c\u6b64\u65f6\u6a21\u578b\u76f4\u63a5\u8f93\u51fa\u6d6e\u70b9\u6570\u636e\u3002\u8fd8\u53ef\u4ee5\u4f7f\u7528calibrator_custom.fixed_simulator\u521b\u5efa\u5b9a\u70b9\u6a21\u578b\u7684\u5b9e\u4f8b\uff0c\u901a\u8fc7get_output_details\u7684\u65b9\u6cd5\u67e5\u770b\u7f51\u7edc\u8f93\u51fa\u7684\u6570\u636e\u7c7b\u578b\u3002 \u4e3a\u4ec0\u4e48\u4ece\u6d6e\u70b9\u6a21\u578b\u8f6c\u5230\u5b9a\u70b9\u6a21\u578b\u7684\u65f6\u5019\uff0c\u4e00\u76f4\u5361\u5728Start to analysis model...\uff1f \u9047\u5230\u8fd9\u4e2a\u60c5\u51b5\uff0c\u8bf7\u68c0\u67e5\u63d0\u4f9b\u91cf\u5316\u4f7f\u7528\u7684\u6570\u636e\u96c6\u4e2d\u6587\u4ef6\u540d\u662f\u5426\u5305\u542b\u6709\u4e2d\u6587\u5b57\u7b26\u3002 \u4e3a\u4ec0\u4e48\u7528DumpDebug\u5de5\u5177\u6bd4\u8f83\u6709\u7cbe\u5ea6\u635f\u5931\u7684\u5b9a\u70b9\u6a21\u578b\u548c\u6d6e\u70b9\u6a21\u578b\u65f6,\u8f93\u51fa\u7684log\u4e2d\u4e0d\u80fd\u663e\u793a\u51fa\u6240\u6709\u5c42\u7684\u6bd4\u8f83\u7ed3\u679c? \u8fd9\u662f\u7531\u4e8eDebugConfig.txt\u4e2d\u7684disableDomainFuseOps\u6ca1\u6709\u5f00\u542f,\u5bfc\u81f4\u6709\u4e9bop\u878d\u5408\u3002\u8bf7\u5148\u5c06DebugConfig.txt\u62f7\u8d1d\u5230\u6267\u884c\u76ee\u5f55\u4e2d,\u5e76\u5c06disableDomainFuseOps\u5f00\u542f,\u5e76\u91cd\u65b0\u8f6c\u6362\u6a21\u578b\u540e\u518d\u8fdb\u884csimulator\u751f\u6210 sigma_outtensor_dump.bin \u6587\u4ef6\u3002 \u4e3a\u4ec0\u4e48\u7528DumpDebug\u5de5\u5177\u6bd4\u8f83\u65f6,\u4f1a\u51fa\u73b0 write file fail... ? \u8fd9\u662f\u7531\u4e8eDebugConfig.txt\u4e2d path= \u914d\u7f6e\u7684\u8def\u5f84\u4e0d\u5b58\u5728,\u8bf7\u68c0\u67e5\u914d\u7f6e\u7684\u8def\u5f84\u5e76\u914d\u7f6e\u5b58\u5728\u7684\u7edd\u5730\u8def\u5f84\u3002\u9ed8\u8ba4\u8def\u5f84\u4e3a\u7528\u6237\u6839\u76ee\u5f55\u3002","title":"Model Conversion"},{"location":"module/FAQ/IPU200M/Other_Anomalies.html","text":"\u7f51\u7edc\u5e94\u8be5\u5982\u4f55\u8bbe\u8ba1\uff0c\u80fd\u5728SigmaStar\u7684\u786c\u4ef6\u4e0a\u9ad8\u6548\u6267\u884c\uff1f \u9700\u8981\u8bf4\u660e\u7684\u662f\uff0cSGS_IPU_SDK\u8f6c\u6362\u540e\u7684\u6a21\u578b\u9ed8\u8ba4\u6570\u636e\u6392\u5e03\u4e3aNHWC\u3002 \u5377\u79ef\u65b9\u9762\uff1a\u5377\u79ef\u7684\u8f93\u5165shape\u7684C\u8d8a\u5927\uff0cHW\u8d8a\u5c0f\uff0c\u5377\u79ef\u7684\u6548\u7387\u8d8a\u9ad8\u3002\u786c\u4ef6\u80fd\u76f4\u63a5\u652f\u6301kernel size\u4e3a3x3\u7684Depthwise\u5377\u79ef\uff0c\u5176\u4ed6size\u7684kernel\u5c06\u8f6c\u6362\u4e3a\u975eDepthwise\u5377\u79ef\u8ba1\u7b97\u3002 \u5176\u4ed6\u5c42\uff1a\u5176\u4ed6\u5c42\u7684C\u7ef4\u5ea6\u6700\u597d\u662f16\u7684\u6574\u6570\u500d\uff0c\u90fd\u80fd\u591f\u52a0\u901f\u8fd0\u7b97\uff0c\u7279\u522b\u662fGather\u3001Unpack\u3001Pack\u3001Concat\u3001Reshape\u3001Slice\u3001Tile\u3001Tanspose\u3001Pad\u3001Split\u7b49\u7b97\u5b50\u52a0\u901f\u5341\u5206\u660e\u663e\u3002 \u7f51\u7edc\u8f93\u5165\u7684\u56fe\u7247\u6570\u636e\u6392\u5e03\u662f\u600e\u6837\u7684\uff1f \u9700\u8981\u8bf4\u660e\u7684\u662f\uff0cSGS_IPU_SDK\u8f6c\u6362\u540e\u7684\u6a21\u578b\u9ed8\u8ba4\u6570\u636e\u6392\u5e03\u4e3aNHWC\u3002\u56e0\u6b64\u5982\u679c\u662fRGB\u901a\u9053\u987a\u5e8f\u7684\u56fe\u7247\u8f93\u5165\u6a21\u578b\uff0c\u56fe\u7247\u6570\u636e\u6392\u5e03\u662f\u2026\u2026RGBRGB\u2026\u2026\u3002\u5982\u679c\u662fBGR\u901a\u9053\u987a\u5e8f\u7684\u56fe\u7247\u8f93\u5165\u6a21\u578b\uff0c\u56fe\u7247\u6570\u636e\u6392\u5e03\u662f\u2026\u2026BGRBGR\u2026\u2026\u3002 NMS\u6700\u5927\u652f\u6301\u591a\u5c11\u4e2abox\u8f93\u5165\uff1f TFLite_Detection_NMS\u7b97\u5b50\u6700\u5927\u652f\u630124576\u4e2abbox\u8f93\u5165\u3002\u7531\u4e8eNMS\u7b97\u6cd5\u7684\u7279\u6b8a\u6027\uff0c\u76ee\u524d\u786c\u4ef6\u6700\u5927\u9650\u5236\u4e3a24576\u4e2a\u8f93\u5165\u624d\u53ef\u4ee5\u505a\u3002 \u975e\u56fe\u7247\u8f93\u5165\u7684\u7f51\u7edc\u53ef\u4ee5\u8fd0\u884c\u5417\uff1f \u53ef\u4ee5\u8fd0\u884c\uff0c\u6570\u636e\u8f93\u5165\u7684\u8981\u6c42\u548c\u56fe\u7247\u8f93\u5165\u7565\u6709\u4e0d\u540c\uff0c\u8be6\u60c5\u8bf7\u53c2\u80039.2\u8282\u3002 \u5982\u4f55\u67e5\u770b\u6a21\u578b\u5728\u677f\u7aef\u7684\u8fd0\u884c\u6548\u7387 \u67e5\u770b\u7f51\u7edc\u5185\u90e8\u8be6\u7ec6\u8017\u65f6\uff0c\u53ef\u4ee5\u5148\u4fee\u6539\u7a0b\u5e8f\uff0c\u5728MI_IPU_DestroyCHN\u548cMI_IPU_DestroyDevice\u524d\u4f7f\u7528while(1); \u505c\u4f4f\u7a0b\u5e8f\u3002\u8fd0\u884c\u8d77\u6765\u4ee5\u540e\uff0c\u4f7f\u7528telnet\u65b0\u5f00\u4e00\u4e2a\u7ec8\u7aef\uff0c\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\uff0c echo time_statistic > /proc/mi_modules/mi_ipu/mi_ipu0 \u5373\u53ef\u67e5\u770b\u5230\u7f51\u7edc\u5185\u90e8\u8be6\u7ec6\u8017\u65f6\uff1a\uff08\u8f93\u51fa\u7ed3\u679c\u5728\u4e32\u53e3\uff09 \u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u67e5\u770bIPU\u9891\u7387\uff1a cat /sys/dla/clk_rate \u76f8\u6bd4\u4e0a\u4e00\u4ee3\u6709\u54ea\u4e9b\u6539\u8fdb\uff1f \u589e\u52a0Fix2float\u529f\u80fd\uff0c\u80fd\u5c06\u7f51\u7edc\u8f93\u51fa\u8f6c\u6362\u6210float\uff0c\u5e76\u53bb\u9664\u65e0\u7528\u6570\u636e Softmax\u3001Gather\u3001Unpack\u3001Pack\u3001Concat\u3001Reshape\u3001Slice\u3001Tile\u3001Tanspose\u3001Pad\u3001Split\u7b97\u5b50\u52a0\u901f\u8fd0\u884c Resize_bilinear\u7b97\u5b50\u653e\u5927\u500d\u6570\u4e0d\u518d\u9650\u5b9a \u786c\u4ef6DMA\u901f\u5ea6\u52a0\u5feb","title":"Other Anomalies"},{"location":"module/FAQ/IPU260/Development_Board.html","text":"\u5728\u677f\u4e0a\u8fd0\u884c\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u6570\u636e\u600e\u4e48\u548cPC\u4e0a\u4e0d\u4e00\u6837\uff1f \u9996\u5148\u9700\u8981\u660e\u786e\u4e00\u70b9Fixed\u548cOffline\u6a21\u578b\u5728PC\u4e0a\u548c\u677f\u4e0a\u8fd0\u884c\u65f6\uff0c\u7ed9\u5b9a\u76f8\u540c\u7684\u8f93\u5165\uff0c\u8f93\u51fa\u7684\u6709\u6548\u6570\u636e\u4e00\u5b9a\u662f\u4e00\u6837\u7684\u3002\u4f7f\u7528\u4ee5\u4e0b\u65b9\u6cd5\uff0c\u53ef\u4ee5\u9a8c\u8bc1\uff1a \u5728PC\u4e0a\u4eff\u771f\uff0c\u4f7f\u7528simulator.py\u8fd0\u884cFixed\u6216Offline\u6a21\u578b\u65f6\u52a0\u4e0a\u53c2\u6570--dump_rawdata\uff0c\u8fd0\u884c\u7ed3\u675f\u540e\u4f1a\u5728\u5f53\u524d\u8def\u5f84\u4e0b\u4fdd\u5b58\u4e00\u4e2a\u56fe\u7247\u540d+ .bin\u7684\u6587\u4ef6\u3002\u8be5\u6587\u4ef6\u662f\u5728PC\u4e0a\u505a\u8fc7\u524d\u5904\u7406\u7684\u8f93\u5165\u6570\u636e\uff0c\u4ee5\u4e8c\u8fdb\u5236\u6587\u4ef6\u5f62\u5f0f\u4fdd\u5b58\u4e0b\u6765\u3002\u5728\u677f\u7aef\u8bfb\u53d6\u8be5\u6587\u4ef6\uff0c\u5c06\u8be5\u6587\u4ef6\u5185\u6240\u6709\u6570\u636ememcpy\u5230\u6a21\u578b\u7684\u8f93\u5165Tensor\uff0c\u7136\u540e\u6267\u884cMI_IPU_Invoke\u3002\u5f97\u5230\u7684\u8f93\u51fa\u548c\u5728PC\u4e0a\u5e94\u8be5\u662f\u5b8c\u5168\u4e00\u81f4\u7684\u3002 \u5728\u677f\u4e0a\u8f93\u51fa\u6d6e\u70b9\u6570\u5168\u90e8\u662fIPU\u5b8c\u6210\u7684\u5417\uff1f IPU\u53ef\u4ee5\u901a\u8fc7\u589e\u52a0Fix2float\u7b97\u5b50\u5b8c\u6210int16\u4e58scale\u5230float32\u6570\u636e\u7684\u8f6c\u6362\u3002\u53ea\u9700\u7f51\u7edc\u8f6c\u6362\u65f6input_config.ini\u4e2ddequantizations\u8bbe\u4e3aTRUE\uff0c\u5728\u8f6c\u5230Fixed\u6a21\u578b\u540e\u4f1a\u5728\u6a21\u578b\u5bf9\u5e94\u7684\u8f93\u51fa\u589e\u52a0Fix2float\u7b97\u5b50\u3002 \u8fd0\u884c\u65f6\uff0c\u6a21\u578b\u5360\u7528\u7684\u5185\u5b58\u5982\u4f55\u67e5\u770b\uff1f cat /proc/mi_modules/mi_sys_mma/mma_heap_name0 \u53c2\u770b\u4ee5\u4e0b\u89e3\u91ca ipu_variable: \u63a8\u7406\u8fc7\u7a0b\u4e2dipu\u6838\u4e34\u65f6\u4f7f\u7528\u7684\u5185\u5b58 ipu_log: \u5b58\u50a8log\u4f7f\u7528\u7684\u5185\u5b58 ipu_chn0_networ: channel 0\u88c5\u8f7d\u7f51\u7edc\u6a21\u578b\u4f7f\u7528\u7684\u5185\u5b58 ipu_chn0_input_: channel 0 \u8f93\u5165tensor\u5360\u7528\u7684\u5185\u5b58\uff08\u591a\u4e2a\u5219\u4ee3\u8868\u6709\u591a\u4e2a\u8f93\u5165tensor\u53ef\u540c\u65f6\u4f7f\u7528\uff09 ipu_chn0_output: channel 0\u8f93\u51fatensor\u5360\u7528\u7684\u5185\u5b58\uff08\u591a\u4e2a\u5219\u4ee3\u8868\u6709\u591a\u4e2a\u8f93\u51fatensor\u53ef\u540c\u65f6\u4f7f\u7528\uff09","title":"\u677f\u7aef\u4f7f\u7528\u95ee\u9898"},{"location":"module/FAQ/IPU260/Env_Setting.html","text":"\u4e3a\u4ec0\u4e48\u4f1a\u51fa\u73b0No module named \u2018quantize\u2019\uff0c\u800c\u5728\u5bf9\u5e94\u76ee\u5f55\u4e0b\u786e\u5b9e\u80fd\u627e\u5230quantize.cpython-37m-x86_64-linux-gnu.so\uff1f \u9700\u8981\u4f7f\u7528\u7cfb\u7edf\u7684Python3.7\u73af\u5883\u624d\u80fd\u591f\u6b63\u5e38\u4f7f\u7528\u3002\u8bf7\u9009\u62e9\u63d0\u4f9b\u7684Docker\u73af\u5883\u8fd0\u884c\u3002 \u4e3a\u4ec0\u4e48\u4f1a\u51fa\u73b0ImportError: SGS_IPU_SDK/Scripts/calibrator/utils/quantization/quantize.cpython-37m-x86_64-linux-gnu.so: undefied symbol: PyFPE_jbuf\uff1f \u4f7f\u7528Conda\u73af\u5883\u6216\u8005\u975e\u7cfb\u7edfPython3.7\u53ef\u80fd\u4f1a\u5f15\u53d1\u8fd9\u6837\u7684\u9519\u8bef\u3002\u8bf7\u9009\u62e9\u63d0\u4f9b\u7684Docker\u73af\u5883\u8fd0\u884c\u3002 Docker\u90fd\u53ef\u4ee5\u5728Ubuntu\u6216\u662fWindows\u4e0b\u8bbe\u7f6e\u5417\uff1f\u6700\u5c0f\u5185\u5b58\u9700\u6c42\uff1f \u662f\u7684\uff0c\u5efa\u8bae\u4f7f\u7528docker\uff0c\u6240\u9700\u7684\u6700\u5c0f\u5185\u5b58\u81f3\u5c11\u4e3a6G\uff0c\u5efa\u8bae\u81f3\u5c118G\uff0c\u5982\u679c\u5185\u5b58\u53ea\u662f\u521a\u597d\u591f\u7528\uff0c\u5728\u505acalibration\u65f6\u4f7f\u7528\u592a\u591a\u7684process\u8fd0\u884c\u65f6\uff0c\u53ef\u80fd\u4f1a\u4ea7\u751f\u975e\u9884\u671f\u7684\u9519\u8bef\u800c\u88ab\u4e2d\u65ad\u6389\u3002\u76ee\u524d\u5f00\u53d1\u4eba\u5458\u7684\u64cd\u4f5c\u73af\u5883\u90fd\u662f\u5728Ubuntu\uff0cWindows\u7684docker\u53ef\u80fd\u8fd0\u884c\u4e5f\u6ca1\u6709\u95ee\u9898\uff0c\u4f46\u5b9e\u9645\u4f7f\u7528\u4e0a\u6211\u4eec\u5e76\u4e0d\u786e\u5b9aWindows\u4e0b\u5efa\u7acb\u7684docker\u73af\u5883\u4e0d\u4f1a\u9047\u5230\u95ee\u9898\u3002","title":"\u73af\u5883\u8bbe\u7f6e\u95ee\u9898"},{"location":"module/FAQ/IPU260/Model_Conversion.html","text":"\u53ef\u4ee5\u4f7f\u7528IPU_SDK\u8f6c\u6362\u5de5\u5177\u76f4\u63a5\u8f6c\u6362INT8\u7684\u6a21\u578b\u5417\uff1f \u5f53\u524d\u4e0d\u652f\u63f4\u76f4\u63a5\u8f93\u5165IPU SDK\u7684\u91cf\u5316\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff0c\u6a21\u578b\u5fc5\u987b\u4ece\u6d6e\u70b9\u5f00\u59cb\u8f6c\u6362\u3002\u53ef\u4ee5\u4f7f\u7528\u91cf\u5316\u5bfc\u5165\u5de5\u5177\u5c06\u5df2\u6709\u91cf\u5316\u4fe1\u606f\u5bfc\u5165\u5230\u6a21\u578b\u4e2d\u3002\u8be6\u89c13.4.3\u8282\u3002 \u4e3a\u4ec0\u4e48\u4f7f\u7528ConvertTool.py\u8f6c\u6362keras\u6a21\u578b\u65f6Tensorflow\u62a5\u9519\uff1f \u7531\u4e8e\u9ed8\u8ba4\u4f7f\u7528\u4e86Tensorflow1.14.0\uff0cConvertTool.py\u4e2d\u4e5f\u8c03\u7528\u4e86Tensorflow\u7684\u63a5\u53e3\u5c06keras\u6a21\u578b\u8f6c\u6362\u4e3atflite\u3002\u7531\u4e8eTensorflow1.x\u4e0d\u80fd\u8f6c\u6362Tensorflow2.0\u4ee5\u4e0a\u7248\u672c\u7684keras\u6a21\u578b\uff0c\u56e0\u6b64\u4f1a\u53d1\u751f\u9519\u8bef\u3002\u8bf7\u5148\u4f7f\u7528\u8bad\u7ec3\u7684Tensorflow\u7248\u672c\u5c06keras\u6a21\u578b\u8f6c\u6362\u4e3atflite\uff0c\u7136\u540e\u518d\u4f7f\u7528ConvertTool.py\u8fdb\u884c\u8f6c\u6362\u3002 \u4e3a\u4ec0\u4e48\u4f7f\u7528simulator.py\u5bf9YOLO\u7f51\u7edc\u6d4b\u8bd5mAP\uff0c\u7cbe\u5ea6\u4f1a\u90a3\u4e48\u5dee\uff1f \u7531\u4e8eCOCO\u6570\u636e\u96c6\u867d\u7136\u670980\u4e2a\u5206\u7c7b\uff0c\u4f46\u662flabel\u7684index\u4e0d\u662f\u8fde\u7eed\u7684\uff0c\u52a0\u4e0a\u4e2d\u95f4\u63d2\u7a7a\u7684index\uff0c\u4e00\u5171\u670990\u7c7b\u3002\u6240\u63d0\u4f9b\u7684\u5b98\u65b9YOLO\u7f51\u7edc\u9884\u8bad\u7ec3\u6a21\u578b\u53bb\u9664\u4e86label\u7684\u7a7a\u767d\u9879\uff0c80\u7c7b\u662f\u8fde\u7eed\u7684\u3002\u5982\u679c\u76f4\u63a5\u8c03\u7528COCO\u7684\u63a5\u53e3\u8ba1\u7b97mAP\uff0c\u7ed3\u679c\u662f\u4e0d\u6b63\u786e\u7684\u3002 \u4e3a\u4ec0\u4e48\u5728\u8f6c\u6362\u5b9a\u70b9\u6a21\u578b\u65f6\u6709\u8fd9\u6837\u7684\u62a5\u9519\uff1aSGS_DMA_CoefMartixGen: Assertion s32coef_bgr < HW_COEF_MAX failed.\uff1f \u8fd9\u4e2a\u9519\u8bef\u4fe1\u606f\u8bf4\u660e\u914d\u7f6e\u7684python\u524d\u5904\u7406\u548cinput_config.ini\u4e2d\u4e0d\u4e00\u81f4\uff0c\u4e3b\u8981\u4f53\u73b0\u5728\u914d\u7f6e\u7684mean\u548cstd\u4e0d\u4e00\u81f4\u3002\u5177\u4f53\u8be6\u89c13.2\u8282\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\u548c2.2\u8282input_config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e\u3002\u68c0\u67e5\u7edf\u8ba1\u8f93\u5165\u7684\u8303\u56f4\uff0c\u4e0e\u8bbe\u7f6e\u7684input_config.ini\u4e2d\u7684\u6570\u636e\u6bd4\u8f83\u3002\u5f53\u4f7f\u7528\u91cf\u5316\u5bfc\u5165\u65f6\uff0c\u4e5f\u5e94\u8be5\u6ce8\u610f\u7b2c\u4e00\u5c42\u5377\u79ef\u8f93\u5165\u7684\u8bbe\u7f6e\u8303\u56f4\u5e94\u548cinput_config.ini\u4e2d\u4fdd\u6301\u4e00\u81f4\u3002 \u4e3a\u4ec0\u4e48input_config.ini\u4e2d\u8bbe\u7f6e\u4e86dequantizations\u4e3aFALSE\uff0c\u5728PC\u4eff\u771f\u65f6\u4ecd\u7136\u8f93\u51fa\u6d6e\u70b9\u6570\uff1f input_config.ini\u4e2d\u7684dequantizations\u914d\u7f6e\u6210FALSE\u540e\u662fsimulator.py\u5b8c\u6210\u4e86\u5c06int16\u8f93\u51fa\u7ed3\u679c\u4e58scale\u7684\u8fc7\u7a0b\u3002\u914d\u7f6e\u6210TRUE\uff0c\u4f1a\u5728\u8f6c\u6362Fixed\u6a21\u578b\u65f6\u5728\u8f93\u51fa\u589e\u52a0Fix2float\u7b97\u5b50\uff0c\u6b64\u65f6\u6a21\u578b\u76f4\u63a5\u8f93\u51fa\u6d6e\u70b9\u6570\u636e\u3002\u8fd8\u53ef\u4ee5\u4f7f\u7528calibrator_custom.fixed_simulator\u521b\u5efa\u5b9a\u70b9\u6a21\u578b\u7684\u5b9e\u4f8b\uff0c\u901a\u8fc7get_output_details\u7684\u65b9\u6cd5\u67e5\u770b\u7f51\u7edc\u8f93\u51fa\u7684\u6570\u636e\u7c7b\u578b\u3002 \u4e3a\u4ec0\u4e48\u4ece\u6d6e\u70b9\u6a21\u578b\u8f6c\u5230\u5b9a\u70b9\u6a21\u578b\u7684\u65f6\u5019\uff0c\u4e00\u76f4\u5361\u5728Start to analysis model...\uff1f \u9047\u5230\u8fd9\u4e2a\u60c5\u51b5\uff0c\u8bf7\u68c0\u67e5\u63d0\u4f9b\u91cf\u5316\u4f7f\u7528\u7684\u6570\u636e\u96c6\u4e2d\u6587\u4ef6\u540d\u662f\u5426\u5305\u542b\u6709\u4e2d\u6587\u5b57\u7b26\u3002 \u4e3a\u4ec0\u4e48\u7528DumpDebug\u5de5\u5177\u6bd4\u8f83\u6709\u7cbe\u5ea6\u635f\u5931\u7684\u5b9a\u70b9\u6a21\u578b\u548c\u6d6e\u70b9\u6a21\u578b\u65f6,\u8f93\u51fa\u7684log\u4e2d\u4e0d\u80fd\u663e\u793a\u51fa\u6240\u6709\u5c42\u7684\u6bd4\u8f83\u7ed3\u679c? \u8fd9\u662f\u7531\u4e8eDebugConfig.txt\u4e2d\u7684disableDomainFuseOps\u6ca1\u6709\u5f00\u542f,\u5bfc\u81f4\u6709\u4e9bop\u878d\u5408\u3002\u8bf7\u5148\u5c06DebugConfig.txt\u62f7\u8d1d\u5230\u6267\u884c\u76ee\u5f55\u4e2d,\u5e76\u5c06disableDomainFuseOps\u5f00\u542f,\u5e76\u91cd\u65b0\u8f6c\u6362\u6a21\u578b\u540e\u518d\u8fdb\u884csimulator\u751f\u6210 sigma_outtensor_dump.bin \u6587\u4ef6\u3002 \u4e3a\u4ec0\u4e48\u7528DumpDebug\u5de5\u5177\u6bd4\u8f83\u65f6,\u4f1a\u51fa\u73b0 write file fail... ? \u8fd9\u662f\u7531\u4e8eDebugConfig.txt\u4e2d path= \u914d\u7f6e\u7684\u8def\u5f84\u4e0d\u5b58\u5728,\u8bf7\u68c0\u67e5\u914d\u7f6e\u7684\u8def\u5f84\u5e76\u914d\u7f6e\u5b58\u5728\u7684\u7edd\u5730\u8def\u5f84\u3002\u9ed8\u8ba4\u8def\u5f84\u4e3a\u7528\u6237\u6839\u76ee\u5f55\u3002","title":"\u6a21\u578b\u8f6c\u6362\u95ee\u9898"},{"location":"module/FAQ/IPU260/Other_Anomalies.html","text":"\u7f51\u7edc\u5e94\u8be5\u5982\u4f55\u8bbe\u8ba1\uff0c\u80fd\u5728SigmaStar\u7684\u786c\u4ef6\u4e0a\u9ad8\u6548\u6267\u884c\uff1f \u9700\u8981\u8bf4\u660e\u7684\u662f\uff0cSGS_IPU_SDK\u8f6c\u6362\u540e\u7684\u6a21\u578b\u9ed8\u8ba4\u6570\u636e\u6392\u5e03\u4e3aNHWC\u3002 \u5377\u79ef\u65b9\u9762\uff1a\u5377\u79ef\u7684\u8f93\u5165shape\u7684C\u8d8a\u5927\uff0cHW\u8d8a\u5c0f\uff0c\u5377\u79ef\u7684\u6548\u7387\u8d8a\u9ad8\u3002\u786c\u4ef6\u80fd\u76f4\u63a5\u652f\u6301kernel size\u4e3a3x3\u7684Depthwise\u5377\u79ef\uff0c\u5176\u4ed6size\u7684kernel\u5c06\u8f6c\u6362\u4e3a\u975eDepthwise\u5377\u79ef\u8ba1\u7b97\u3002 \u5176\u4ed6\u5c42\uff1a\u5176\u4ed6\u5c42\u7684C\u7ef4\u5ea6\u6700\u597d\u662f16\u7684\u6574\u6570\u500d\uff0c\u90fd\u80fd\u591f\u52a0\u901f\u8fd0\u7b97\uff0c\u7279\u522b\u662fGather\u3001Unpack\u3001Pack\u3001Concat\u3001Reshape\u3001Slice\u3001Tile\u3001Tanspose\u3001Pad\u3001Split\u7b49\u7b97\u5b50\u52a0\u901f\u5341\u5206\u660e\u663e\u3002 \u7f51\u7edc\u8f93\u5165\u7684\u56fe\u7247\u6570\u636e\u6392\u5e03\u662f\u600e\u6837\u7684\uff1f \u9700\u8981\u8bf4\u660e\u7684\u662f\uff0cSGS_IPU_SDK\u8f6c\u6362\u540e\u7684\u6a21\u578b\u9ed8\u8ba4\u6570\u636e\u6392\u5e03\u4e3aNHWC\u3002\u56e0\u6b64\u5982\u679c\u662fRGB\u901a\u9053\u987a\u5e8f\u7684\u56fe\u7247\u8f93\u5165\u6a21\u578b\uff0c\u56fe\u7247\u6570\u636e\u6392\u5e03\u662f\u2026\u2026RGBRGB\u2026\u2026\u3002\u5982\u679c\u662fBGR\u901a\u9053\u987a\u5e8f\u7684\u56fe\u7247\u8f93\u5165\u6a21\u578b\uff0c\u56fe\u7247\u6570\u636e\u6392\u5e03\u662f\u2026\u2026BGRBGR\u2026\u2026\u3002 NMS\u6700\u5927\u652f\u6301\u591a\u5c11\u4e2abox\u8f93\u5165\uff1f TFLite_Detection_NMS\u7b97\u5b50\u6700\u5927\u652f\u630124576\u4e2abbox\u8f93\u5165\u3002\u7531\u4e8eNMS\u7b97\u6cd5\u7684\u7279\u6b8a\u6027\uff0c\u76ee\u524d\u786c\u4ef6\u6700\u5927\u9650\u5236\u4e3a24576\u4e2a\u8f93\u5165\u624d\u53ef\u4ee5\u505a\u3002 \u975e\u56fe\u7247\u8f93\u5165\u7684\u7f51\u7edc\u53ef\u4ee5\u8fd0\u884c\u5417\uff1f \u53ef\u4ee5\u8fd0\u884c\uff0c\u6570\u636e\u8f93\u5165\u7684\u8981\u6c42\u548c\u56fe\u7247\u8f93\u5165\u7565\u6709\u4e0d\u540c\uff0c\u8be6\u60c5\u8bf7\u53c2\u80038.2\u8282\u3002 \u5982\u4f55\u67e5\u770bIPU\u9891\u7387 cat /sys/dla/freq \u76f8\u6bd4\u4e0a\u4e00\u4ee3\u6709\u54ea\u4e9b\u6539\u8fdb\uff1f \u589e\u52a0Fix2float\u529f\u80fd\uff0c\u80fd\u5c06\u7f51\u7edc\u8f93\u51fa\u8f6c\u6362\u6210float\uff0c\u5e76\u53bb\u9664\u65e0\u7528\u6570\u636e Softmax\u3001Gather\u3001Unpack\u3001Pack\u3001Concat\u3001Reshape\u3001Slice\u3001Tile\u3001Tanspose\u3001Pad\u3001Split\u7b97\u5b50\u52a0\u901f\u8fd0\u884c Resize_bilinear\u7b97\u5b50\u653e\u5927\u500d\u6570\u4e0d\u518d\u9650\u5b9a \u786c\u4ef6DMA\u901f\u5ea6\u52a0\u5feb","title":"\u5176\u4ed6\u5f02\u5e38\u95ee\u9898"},{"location":"module/Introduction/Docker.html","text":"Docker \u5b89\u88c5 \u53ef\u4ee5\u8bbf\u95ee\u7f51\u5740 Docker Official Tutorial \u67e5\u770b\u3002 Sigmastar IPU SDK \u73af\u5883\u5b89\u88c5 \u52a0\u8f7d SGS docker \u955c\u50cf\u6587\u4ef6. tar -jxvf sgs_docker.bz2 docker load < sgs_docker_v1.6.tar \u8fd0\u884c SGS docker. ./run_docker.sh","title":"Docker\u73af\u5883"},{"location":"module/Introduction/Introduction.html","text":"SDK\u4ecb\u7ecd \u00b6 SigmaStar\u6a21\u578b\u4e3asim\uff0c\u5168\u79f0Sigmastar IPU Model\uff0c\u67e5\u770b\u5de5\u5177\u4f7f\u7528 SGS_IPU_SDK/Netron/Netron Setup 5.3.5.exe \u5b89\u88c5\u540e\u6253\u5f00\u3002 \u672c\u6587\u4e2dDLA\u4e0eIPU\u6307\u4ee3\u540c\u4e00\u4e2a\u90e8\u4ef6\u3002\u5373Sigmastar\u7684\u6df1\u5ea6\u5b66\u4e60\u52a0\u901f\u786c\u4ef6 SigmaStar DLA SDK\u4e3b\u8981\u5305\u542b\u4ee5\u4e0b\u5de5\u5177\uff1a Convert Tool\uff1a\u5c06TensorFlow\u3001Keras\u3001Caffe\u548cONNX\u6846\u67b6\u7684\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u4e3aSigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\uff08SGS Float file\uff09\uff1b Calibrator\uff1a\u5c06SigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u5316\u4e3aSigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff08SGS Fixed file\uff09\uff1b Compiler\uff1a\u5c06SigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u5316\u4e3aSigmaStar\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\uff08SGS Offline cmd file\uff09\uff1b Simulator\uff1a\u5bf9SGS Float file / SGS Fixed file / SGS Offline cmd file\u4eff\u771f\u8fd0\u884c\uff1b SGS Netron\uff1a\u67e5\u770bSGS Float file / SGS Fixed file\u6a21\u578b\u7684\u7ed3\u6784\uff1b SigmaStar DLA\u6574\u4f53\u6846\u67b6\u5982\u4e0b\u56fe\u6240\u793a\uff1a SigmaStar DLA SDK\u7684\u4f18\u52bf\uff1a \u00b6 Convert Tool\u80fd\u6839\u636e\u786c\u4ef6\u7279\u6027\uff0c\u5c06\u539f\u7f51\u7edc\u6846\u67b6\u7684\u7b97\u5b50\u8f6c\u6362\u4e3aSigmaStar DLA\u5ba2\u5236\u5316\u7b97\u5b50\uff0c\u5bf9\u7f51\u7edc\u6a21\u578b\u65e0\u635f\u4f18\u5316\uff1b Calibrator\u7edf\u8ba1FeatureMap\u7684\u53d6\u503c\uff0c\u5c06SGS Float file\u91cf\u5316\u4e3a8bit / 16bit\u5b9a\u70b9\u6a21\u578b\uff1b Compiler\u5c06\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8f6c\u5316\u4e3a\u79bb\u7ebf\u6307\u4ee4\u6587\u4ef6\uff0c\u80fd\u591f\u76f4\u63a5\u90e8\u7f72\u5728SigmaStar\u7684\u786c\u4ef6\u4ea7\u54c1\u4e0a\uff1b Simulator\u63d0\u4f9b\u6a21\u62dfSigmaStar\u786c\u4ef6\u7684PC\u7aef\u6a21\u62df\u5668\uff0c\u80fd\u591f\u5b8c\u6574\u8fd0\u884cSGS Float file / SGS Fixed file / SGS Offline cmd file\uff0c\u52a0\u5feb\u7f51\u7edc\u7f51\u7edc\u6a21\u578b\u7684\u8c03\u8bd5\u90e8\u7f72\uff1b SGS Netron\u4e0d\u4ec5\u80fd\u591f\u67e5\u770bSigmaStar\u7684SGS Float file / SGS Fixed file\u6a21\u578b\uff0c\u8fd8\u80fd\u591f\u67e5\u770b\u539f\u751f\u6846\u67b6\u7684\u6a21\u578b\uff1b","title":"Introduction"},{"location":"module/Introduction/Introduction.html#sdk","text":"SigmaStar\u6a21\u578b\u4e3asim\uff0c\u5168\u79f0Sigmastar IPU Model\uff0c\u67e5\u770b\u5de5\u5177\u4f7f\u7528 SGS_IPU_SDK/Netron/Netron Setup 5.3.5.exe \u5b89\u88c5\u540e\u6253\u5f00\u3002 \u672c\u6587\u4e2dDLA\u4e0eIPU\u6307\u4ee3\u540c\u4e00\u4e2a\u90e8\u4ef6\u3002\u5373Sigmastar\u7684\u6df1\u5ea6\u5b66\u4e60\u52a0\u901f\u786c\u4ef6 SigmaStar DLA SDK\u4e3b\u8981\u5305\u542b\u4ee5\u4e0b\u5de5\u5177\uff1a Convert Tool\uff1a\u5c06TensorFlow\u3001Keras\u3001Caffe\u548cONNX\u6846\u67b6\u7684\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u4e3aSigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\uff08SGS Float file\uff09\uff1b Calibrator\uff1a\u5c06SigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u5316\u4e3aSigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff08SGS Fixed file\uff09\uff1b Compiler\uff1a\u5c06SigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u5316\u4e3aSigmaStar\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\uff08SGS Offline cmd file\uff09\uff1b Simulator\uff1a\u5bf9SGS Float file / SGS Fixed file / SGS Offline cmd file\u4eff\u771f\u8fd0\u884c\uff1b SGS Netron\uff1a\u67e5\u770bSGS Float file / SGS Fixed file\u6a21\u578b\u7684\u7ed3\u6784\uff1b SigmaStar DLA\u6574\u4f53\u6846\u67b6\u5982\u4e0b\u56fe\u6240\u793a\uff1a","title":"SDK\u4ecb\u7ecd"},{"location":"module/Introduction/Introduction.html#sigmastar-dla-sdk","text":"Convert Tool\u80fd\u6839\u636e\u786c\u4ef6\u7279\u6027\uff0c\u5c06\u539f\u7f51\u7edc\u6846\u67b6\u7684\u7b97\u5b50\u8f6c\u6362\u4e3aSigmaStar DLA\u5ba2\u5236\u5316\u7b97\u5b50\uff0c\u5bf9\u7f51\u7edc\u6a21\u578b\u65e0\u635f\u4f18\u5316\uff1b Calibrator\u7edf\u8ba1FeatureMap\u7684\u53d6\u503c\uff0c\u5c06SGS Float file\u91cf\u5316\u4e3a8bit / 16bit\u5b9a\u70b9\u6a21\u578b\uff1b Compiler\u5c06\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8f6c\u5316\u4e3a\u79bb\u7ebf\u6307\u4ee4\u6587\u4ef6\uff0c\u80fd\u591f\u76f4\u63a5\u90e8\u7f72\u5728SigmaStar\u7684\u786c\u4ef6\u4ea7\u54c1\u4e0a\uff1b Simulator\u63d0\u4f9b\u6a21\u62dfSigmaStar\u786c\u4ef6\u7684PC\u7aef\u6a21\u62df\u5668\uff0c\u80fd\u591f\u5b8c\u6574\u8fd0\u884cSGS Float file / SGS Fixed file / SGS Offline cmd file\uff0c\u52a0\u5feb\u7f51\u7edc\u7f51\u7edc\u6a21\u578b\u7684\u8c03\u8bd5\u90e8\u7f72\uff1b SGS Netron\u4e0d\u4ec5\u80fd\u591f\u67e5\u770bSigmaStar\u7684SGS Float file / SGS Fixed file\u6a21\u578b\uff0c\u8fd8\u80fd\u591f\u67e5\u770b\u539f\u751f\u6846\u67b6\u7684\u6a21\u578b\uff1b","title":"SigmaStar DLA SDK\u7684\u4f18\u52bf\uff1a"},{"location":"module/Introduction/Introduction_IPU260.html","text":"SDK\u4ecb\u7ecd \u00b6 SigmaStar\u6a21\u578b\u4e3asim\uff0c\u5168\u79f0Sigmastar IPU Model\uff0c\u67e5\u770b\u5de5\u5177\u4f7f\u7528 SGS_IPU_SDK/Netron/Netron Setup 5.3.5.exe \u5b89\u88c5\u540e\u6253\u5f00\u3002 \u672c\u6587\u4e2dDLA\u4e0eIPU\u6307\u4ee3\u540c\u4e00\u4e2a\u90e8\u4ef6\u3002\u5373Sigmastar\u7684\u6df1\u5ea6\u5b66\u4e60\u52a0\u901f\u786c\u4ef6 SigmaStar DLA SDK\u4e3b\u8981\u5305\u542b\u4ee5\u4e0b\u5de5\u5177\uff1a Convert Tool\uff1a\u5c06TensorFlow\u3001Keras\u3001Caffe\u548cONNX\u6846\u67b6\u7684\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u4e3aSigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\uff08SGS Float file\uff09\uff1b Calibrator\uff1a\u5c06SigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u5316\u4e3aSigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff08SGS Fixed file\uff09\uff1b Compiler\uff1a\u5c06SigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u5316\u4e3aSigmaStar\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\uff08SGS Offline cmd file\uff09\uff1b Simulator\uff1a\u5bf9SGS Float file / SGS Fixed file / SGS Offline cmd file\u4eff\u771f\u8fd0\u884c\uff1b SGS Netron\uff1a\u67e5\u770bSGS Float file / SGS Fixed file\u6a21\u578b\u7684\u7ed3\u6784\uff1b SigmaStar DLA\u6574\u4f53\u6846\u67b6\u5982\u4e0b\u56fe\u6240\u793a\uff1a SigmaStar DLA SDK\u7684\u4f18\u52bf\uff1a \u00b6 Convert Tool\u80fd\u6839\u636e\u786c\u4ef6\u7279\u6027\uff0c\u5c06\u539f\u7f51\u7edc\u6846\u67b6\u7684\u7b97\u5b50\u8f6c\u6362\u4e3aSigmaStar DLA\u5ba2\u5236\u5316\u7b97\u5b50\uff0c\u5bf9\u7f51\u7edc\u6a21\u578b\u65e0\u635f\u4f18\u5316\uff1b Calibrator\u7edf\u8ba1FeatureMap\u7684\u53d6\u503c\uff0c\u5c06SGS Float file\u91cf\u5316\u4e3a8bit / 16bit\u5b9a\u70b9\u6a21\u578b\uff1b Compiler\u5c06\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8f6c\u5316\u4e3a\u79bb\u7ebf\u6307\u4ee4\u6587\u4ef6\uff0c\u80fd\u591f\u76f4\u63a5\u90e8\u7f72\u5728SigmaStar\u7684\u786c\u4ef6\u4ea7\u54c1\u4e0a\uff1b Simulator\u63d0\u4f9b\u6a21\u62dfSigmaStar\u786c\u4ef6\u7684PC\u7aef\u6a21\u62df\u5668\uff0c\u80fd\u591f\u5b8c\u6574\u8fd0\u884cSGS Float file / SGS Fixed file / SGS Offline cmd file\uff0c\u52a0\u5feb\u7f51\u7edc\u7f51\u7edc\u6a21\u578b\u7684\u8c03\u8bd5\u90e8\u7f72\uff1b SGS Netron\u4e0d\u4ec5\u80fd\u591f\u67e5\u770bSigmaStar\u7684SGS Float file / SGS Fixed file\u6a21\u578b\uff0c\u8fd8\u80fd\u591f\u67e5\u770b\u539f\u751f\u6846\u67b6\u7684\u6a21\u578b\uff1b","title":"SDK\u6846\u67b6\u4ecb\u7ecd"},{"location":"module/Introduction/Introduction_IPU260.html#sdk","text":"SigmaStar\u6a21\u578b\u4e3asim\uff0c\u5168\u79f0Sigmastar IPU Model\uff0c\u67e5\u770b\u5de5\u5177\u4f7f\u7528 SGS_IPU_SDK/Netron/Netron Setup 5.3.5.exe \u5b89\u88c5\u540e\u6253\u5f00\u3002 \u672c\u6587\u4e2dDLA\u4e0eIPU\u6307\u4ee3\u540c\u4e00\u4e2a\u90e8\u4ef6\u3002\u5373Sigmastar\u7684\u6df1\u5ea6\u5b66\u4e60\u52a0\u901f\u786c\u4ef6 SigmaStar DLA SDK\u4e3b\u8981\u5305\u542b\u4ee5\u4e0b\u5de5\u5177\uff1a Convert Tool\uff1a\u5c06TensorFlow\u3001Keras\u3001Caffe\u548cONNX\u6846\u67b6\u7684\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u4e3aSigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\uff08SGS Float file\uff09\uff1b Calibrator\uff1a\u5c06SigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u5316\u4e3aSigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff08SGS Fixed file\uff09\uff1b Compiler\uff1a\u5c06SigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u5316\u4e3aSigmaStar\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\uff08SGS Offline cmd file\uff09\uff1b Simulator\uff1a\u5bf9SGS Float file / SGS Fixed file / SGS Offline cmd file\u4eff\u771f\u8fd0\u884c\uff1b SGS Netron\uff1a\u67e5\u770bSGS Float file / SGS Fixed file\u6a21\u578b\u7684\u7ed3\u6784\uff1b SigmaStar DLA\u6574\u4f53\u6846\u67b6\u5982\u4e0b\u56fe\u6240\u793a\uff1a","title":"SDK\u4ecb\u7ecd"},{"location":"module/Introduction/Introduction_IPU260.html#sigmastar-dla-sdk","text":"Convert Tool\u80fd\u6839\u636e\u786c\u4ef6\u7279\u6027\uff0c\u5c06\u539f\u7f51\u7edc\u6846\u67b6\u7684\u7b97\u5b50\u8f6c\u6362\u4e3aSigmaStar DLA\u5ba2\u5236\u5316\u7b97\u5b50\uff0c\u5bf9\u7f51\u7edc\u6a21\u578b\u65e0\u635f\u4f18\u5316\uff1b Calibrator\u7edf\u8ba1FeatureMap\u7684\u53d6\u503c\uff0c\u5c06SGS Float file\u91cf\u5316\u4e3a8bit / 16bit\u5b9a\u70b9\u6a21\u578b\uff1b Compiler\u5c06\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8f6c\u5316\u4e3a\u79bb\u7ebf\u6307\u4ee4\u6587\u4ef6\uff0c\u80fd\u591f\u76f4\u63a5\u90e8\u7f72\u5728SigmaStar\u7684\u786c\u4ef6\u4ea7\u54c1\u4e0a\uff1b Simulator\u63d0\u4f9b\u6a21\u62dfSigmaStar\u786c\u4ef6\u7684PC\u7aef\u6a21\u62df\u5668\uff0c\u80fd\u591f\u5b8c\u6574\u8fd0\u884cSGS Float file / SGS Fixed file / SGS Offline cmd file\uff0c\u52a0\u5feb\u7f51\u7edc\u7f51\u7edc\u6a21\u578b\u7684\u8c03\u8bd5\u90e8\u7f72\uff1b SGS Netron\u4e0d\u4ec5\u80fd\u591f\u67e5\u770bSigmaStar\u7684SGS Float file / SGS Fixed file\u6a21\u578b\uff0c\u8fd8\u80fd\u591f\u67e5\u770b\u539f\u751f\u6846\u67b6\u7684\u6a21\u578b\uff1b","title":"SigmaStar DLA SDK\u7684\u4f18\u52bf\uff1a"},{"location":"module/User_Guide/Common/Adding_A_New_Layer.html","text":"8.1. \u6982\u8ff0 \u00b6 \u672c\u8282\u4ec5\u9002\u7528\u4e8ecaffe \u6a21\u578b\u3002\u5bf9\u4e8esigmastar \u8fd8\u672a\u5b9e\u73b0\u7684layer\uff0c\u7528sigmastar \u63d0\u4f9b\u5e95\u5c42\u7b97\u5b50\u6765\u7ec4\u5408\u5b9e\u73b0\u3002\u5e95\u5c42\u7b97\u5b50\u4e0e tensorflow \u7684\u7b97\u5b50\u7c7b\u4f3c\uff0c\u652f\u6301\u7684\u7b97\u5b50\u53c2\u800310.2 \u8282[TensofFlow \u652f\u6301\u7b97\u5b50] \u652f\u6301\u7b97\u5b50\u8f6c\u6362\u6d41\u7a0b\u5982\u4e0b\u56fe CaffeConvert Tool (\u4ee3\u7801\u4f4d\u7f6e\uff1a SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py ) caffe \u6a21\u578b\u8f6c\u6362\u5de5\u5177\u501f\u9274\u4e86\u5c0f\u7c73\u5f00\u6e90\u6846\u67b6mace \u7684\u8bbe\u8ba1\uff0c\u8981\u6dfb\u52a0\u65b0\u7684layer\uff0c\u8bf7\u5148\u5230 Xiaomi MACE \u4e0b\u8f7d\u539f\u59cb\u4ee3\u7801\uff0c\u6309\u7167mace \u5b98\u65b9\u6587\u6863\u914d\u7f6e \u597d\u7f16\u8bd1\u73af\u5883\uff0c\u6216\u8005\u76f4\u63a5\u4f7f\u7528\u6211\u4eec\u63d0\u4f9b\u7684docker \u73af\u5883\u3002 \u4e0b\u9762\u4ee5 reorg layer \u4e3a\u4f8b\u5b50\uff0c\u8bb2\u89e3\u5982\u4f55\u6dfb\u52a0\u65b0\u7684layer\uff0c\u4e3b\u8981\u4fee\u6539\u4ee5\u4e0b\u51e0\u4e2a\u6587\u4ef6 8.2. Caffe proto \u6587\u4ef6\u4fee\u6539 \u00b6 8.2.1 \u4fee\u6539caffe proto \u00b6 Mace \u539f\u59cb\u4ee3\u7801\u4e0b\u8f7d\u540e\uff0c\u7528 SGS_IPU_SDK/Scripts/CaffeConvertTool/third_party/caffe/caffe.proto \u66ff\u6362\u6389mace \u5de5\u7a0b \u8def\u5f84\u4e0bmace/third_party/caffe \u4e0bcaffe.proto \u6587\u4ef6\u3002\u56e0\u4e3asigmastar \u5728mace \u57fa\u7840\u4e0a\u505a\u4e86\u4e8c\u6b21\u5f00\u53d1\uff0c\u6240\u4ee5sigmstar \u652f\u6301 \u7684caffe layer \u5df2\u7ecf\u8fdc\u8fdc\u591a\u4e8e\u539f\u751f\u7684mace \u652f\u6301\u6570\u91cf\u3002\u8981\u6dfb\u52a0\u65b0\u7684layer\uff0c\u8bf7\u4ee5sigmastar \u7684caffe proto \u6587\u4ef6\u4f5c\u4e3a\u57fa\u7840 \u6dfb\u52a0\u3002 optional ReorgParameter reorg_param = 157 ; } message ReorgParameter { optional uint32 stride = 1 ; optional bool reverse = 2 [ default = false ] ; } 8.2.2 \u7f16\u8bd1proto \u6587\u4ef6 \u00b6 \u5728mace \u5f00\u53d1\u73af\u5883\u4e2d cd pathToMace/ bazel build third_party/caffe/caffe_py \u5728bazel-genfiles \u4e0b\u751f\u6210caffe_pb2.py \u5c06\u4e0a\u9762\u4fee\u6539\u540e\u7684caffe.proto \u548c\u751f\u6210\u7684caffe_pb2.py \u66ff\u6362 SGS_IPU_SDK/Scripts/CaffeConvertTool/third_party/caffe \u540c \u540d\u6587\u4ef6\uff0c\u7136\u540e\u6309\u7167\u5982\u4e0b\u987a\u5e8f\u4fee\u6539\u4ee3\u7801 8.3 \u4fee\u6539caffe_converter.py \u00b6 \u6587\u4ef6\u8def\u5f84 SGS_IPU_SDK/Scripts/CaffeConvertTool/mace/python/tools/converter_tool/caffe_converter.py \u8be5\u6587\u4ef6\u7684\u4f5c\u7528\u662f\u628acaffe\u6a21\u578b\u8f6c\u6362\u4e3amace\u6a21\u578b\uff0c\u5e76\u4fdd\u5b58\u8be5layer\u7684\u53c2\u6570 Reorg ':self.convert_Reorg, ... ... def convert_Reorg ( self , caffe_op ): op = self . convert_general_op ( caffe_op ) op . type = \"Reorg\" param = caffe_op . layer . reorg_param stride_arg = op . arg . add () stride_arg . name = \"stride\" stride_arg . i = 1 #default is true if param . HasField ( 'stride' ): stride_arg . i = int ( param . stride ) 8.4. \u4fee\u6539shape_inference.py \u00b6 \u6587\u4ef6\u8def\u5f84 SGS_IPU_SDK/Scripts/CaffeConvertTool/mace/python/tools/converter_tool/shape_inference.py \u8be5\u6587\u4ef6\u7684\u4f5c\u7528\u662f\u8ba1\u7b97layer\u7684output shape Reorg ': self.infer_shape_Reorg, ... ... def infer_shape_Reorg ( self , op ): #only support stride is 2 output_shape = self . _output_shape_cache [ op . input [ 0 ]] input_shape = list ( self . _output_shape_cache [ op . input [ 0 ]]) input_n = input_shape [ 0 ] input_c = input_shape [ 1 ] input_h = input_shape [ 2 ] input_w = input_shape [ 3 ] output_shape = [ input_n , int ( input_c * 4 ), int ( input_h / 2 ), int ( input_w / 2 )] self . add_output_shape ( op , [ output_shape ]) 8.5. \u4fee\u6539SGSModel_transform.py \u00b6 \u5982\u4e0b\u56fe\u6240\u793a\uff0c\u6211\u4eec\u53d1\u73b0reorg\u5728NCHW\u7684\u6392\u5217\u987a\u5e8f\u4e0b\uff0c\u5b83\u5b9e\u9645\u4e0a\u662f\u5bf9\u6570\u636e\u505a\u4e86\u4e00\u4e2a\u91cd\u6392\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u6700\u540e\u62c6\u89e3\u51fa\u6765\u7684\u7b97\u5b50\u7ec4\u5408\u662f \u6309\u7167\u7b97\u5b50\u7ec4\u5408\u987a\u5e8f\uff0c\u7f16\u5199\u4ee3\u7801 \u6587\u4ef6\u8def\u5f84 SGS_IPU_SDK/Scripts/CaffeConvertTool/mace/python/tools/SGSModel_transform.py \u8be5\u6587\u4ef6\u4f5c\u7528\u662f\u589e\u52a0\u8be5layer \u7684\u62c6\u89e3\u51fd\u6570\u3002\u5373\u7528Sigmastar \u63d0\u4f9b\u7684\u57fa\u672c\u7b97\u5b50\u5b9e\u73b0\u8be5layer\u3002 Reorg ':self.split_Reorg, ... ... def split_Reorg ( self , op ): #only support strid is 2 [ n , c , h , w ] = op . output_shape [ 0 ] . dims [:] c = int ( c / 4 ) op_name = op . name xi = op . input [ 0 ] ... ... \u81f3\u6b64\uff0c\u65b0\u7684layer \u652f\u6301\u6dfb\u52a0\u5b8c\u6210 8.6. Layer\u62c6\u89e3\u6ce8\u610f\u4e8b\u9879\u4e0e\u6280\u5de7 \u00b6 8.6.1. Layer\u62c6\u89e3\u6ce8\u610f\u4e8b\u9879\u4e0e\u6280\u5de7 \u6570\u636e\u7ef4\u5ea6\u7684\u95ee\u9898 \u00b6 \u5728caffe\u7f51\u7edc\u4e2d\uff0c\u4f7f\u7528NCHW\u6570\u636e\u6392\u5217\u3002\u800csigmastar\u4f7f\u7528NHWC\u7684\u987a\u5e8f\u8fdb\u884c\u6570\u636e\u8ba1\u7b97\uff08\u4e0etensorflow\u7c7b\u4f3c\uff09\u3002\u6240\u4ee5\u5728\u6a21\u578b\u8f6c\u6362\u6210sim\u6a21\u578b\u7684\u65f6\u5019\uff0c\u4f1a\u5bf9\u6240\u67094\u7ef4\u5ea6\u7684shape\u548c\u6570\u636e\u505a\u4e00\u6b21\u8f6c\u6362\u3002\u5373NCHW\u8f6c\u5230NHWC \u53c2\u8003\u4ee3\u7801\uff1a SGS_IPU_SDK/Scripts/CaffeConvertTool/mace/python/tools/SGSModel_converter.py \u5bf9\u4e8etensor data\u7684\u8f6c\u6362 def _creatBuffer ( self ): ... ... if len ( ori_shape ) == 4 : #transpose data to NHWC six . print_ ( \"Reshape \" , tensor . name , \"to NHWC\" ) data = np . array ( ori_data ) data = data . reshape ( ori_shape ) data = data . transpose ( 0 , 2 , 3 , 1 ) \u5bf9\u4e8eshape\u7684\u8f6c\u6362 def _creatTensor ( self ): ... ... if len ( shape ) == 4 and data_format == mace_pb2 . DT_NCHW : Transformer . transpose_shape ( shape , [ 0 , 2 , 3 , 1 ]) tflite . Tensor . TensorStartShapeVector ( self . _builder , len ( shape )) \u56e0\u4e3ashape\u5728\u521b\u5efasim\u6a21\u578b\u7684\u65f6\u5019\u4f1a\u88ab\u5f3a\u884c\u6539\u53d8\uff0c\u6240\u4ee5\u62c6\u89e3\u7684\u65f6\u5019\u8981\u6ce8\u610f \uff081\uff09\u6709axis\u53c2\u6570\u7684\uff0c\u8981\u6ce8\u610f\u987a\u5e8f\u4ea4\u6362 \u6bd4\u5982`concat layer\uff0ccaffe model\u91cc\u9762\uff0c\u5b83\u8981\u5bf9C\u7eac\u5ea6\u505aconcat\uff0c\u5176axis\u4e3a1\u3002\u7f51\u7edc\u8f6c\u6362\u540e\uff0cC\u4e3a\u6362\u5230\u4e86\u6700\u4f4e\u7ef4\uff0c\u6240 \u4ee5\u8981\u4fee\u6539axis\u4e3a3\uff0c\u4ee3\u7801\u5982\u4e0b\u3002\u76f8\u4f3c\u7684\u8fd8\u6709split\u3001PRelu\u7b49 def split_Concat ( self , op ): ... ... if len ( output_shape [ 0 ] . dims ) == 4 : #nchw -> nhwc if arg [ i ] . i == 1 : arg [ i ] . i = 3 else if arg [ i ] . i == 2 : arg [ i ] . i = 1 else if arg [ i ] . i == 3 : arg [ i ] . i = 2 \uff082\uff09\u6307\u5b9a\u7b97\u5b50output_shape\u7684\u65f6\u5019\uff0c\u7279\u522b\u662f4\u7ef4\u7684\u8f93\u51fa\uff0c\u8981\u6ce8\u610f\u987a\u5e8f\u53d8\u5316\u5e26\u6765\u7684\u5f71\u54cd\u3002\u6bd4\u5982\u5e0c\u671btensor\u7684\u8f93\u51fa\u662f[A,B,C,D]\uff0c\u90a3\u4e48\u4ee3\u7801\u4e2d\u6211\u4eec\u5199\u7684\u6570\u503c\u4e3a[A,D,B,C]\u3002\u56e0\u4e3a[A,D,B,C]\u7ecf\u8fc7\u4e0a\u9762\u4ee3\u7801\u7684\u8f6c\u6362\uff0c\u5c31\u5f97\u5230\u4e86[A,B,C,D]\u8fd9\u4e2a\u987a\u5e8f \uff083\uff09\u5728NCHW \u6570\u636e\u6392\u5217\u4e0b\u6709\u5f88\u5f3a\u89c4\u5f8b\u7684layer\uff0c\u53ef\u4ee5\u5148\u8f6c\u5230NCHW \u4e0b\u64cd\u4f5c\u3002\u6bd4\u5982\u4e0a\u9762\u63d0\u5230\u7684reorg layer\u3002 \uff084\uff09\u7528sdk \u91cc\u9762\u63d0\u4f9b\u7684Netron \u5de5\u5177\u6253\u5f00\u8f6c\u6362\u540e\u7684sim \u6a21\u578b\uff0c\u65b9\u4fbf\u67e5\u770b\u5404\u79cd\u5c5e\u6027\u548cshape\u3002 8.6.2. \u5efa\u8bae\u62c6\u89e3\u6d41\u7a0b \u00b6 \u7efc\u4e0a\u6240\u8ff0\uff0c\u5728\u62c6\u89e3\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u5efa\u8bae\u6309\u7167\u5982\u4e0b\u6d41\u7a0b\u8fdb\u884c 8.6.3. \u6570\u636e\u5bf9\u6bd4\u53ca\u9a8c\u8bc1 \u00b6 \u524d\u671f\u53ef\u4ee5\u7528python \u521b\u5efatensorflow \u7b97\u5b50\u7684\u65b9\u6cd5\uff0c\u8fdb\u884c\u9a8c\u8bc1\u3002 \u5f53\u9a8c\u8bc1\u5b8c\u6210\uff0c\u518d\u4fee\u6539SGS_IPU_SDK \u7684\u76f8\u5173\u4ee3\u7801\uff0c\u53c2\u8003 Dump_Debug TOOL \u7ae0\u8282\uff0cdump \u51fa\u6700\u540e\u7ed3\u679c\u4e0egolden \u6bd4\u5bf9\u3002","title":"Adding A New Layer"},{"location":"module/User_Guide/Common/Adding_A_New_Layer.html#81","text":"\u672c\u8282\u4ec5\u9002\u7528\u4e8ecaffe \u6a21\u578b\u3002\u5bf9\u4e8esigmastar \u8fd8\u672a\u5b9e\u73b0\u7684layer\uff0c\u7528sigmastar \u63d0\u4f9b\u5e95\u5c42\u7b97\u5b50\u6765\u7ec4\u5408\u5b9e\u73b0\u3002\u5e95\u5c42\u7b97\u5b50\u4e0e tensorflow \u7684\u7b97\u5b50\u7c7b\u4f3c\uff0c\u652f\u6301\u7684\u7b97\u5b50\u53c2\u800310.2 \u8282[TensofFlow \u652f\u6301\u7b97\u5b50] \u652f\u6301\u7b97\u5b50\u8f6c\u6362\u6d41\u7a0b\u5982\u4e0b\u56fe CaffeConvert Tool (\u4ee3\u7801\u4f4d\u7f6e\uff1a SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py ) caffe \u6a21\u578b\u8f6c\u6362\u5de5\u5177\u501f\u9274\u4e86\u5c0f\u7c73\u5f00\u6e90\u6846\u67b6mace \u7684\u8bbe\u8ba1\uff0c\u8981\u6dfb\u52a0\u65b0\u7684layer\uff0c\u8bf7\u5148\u5230 Xiaomi MACE \u4e0b\u8f7d\u539f\u59cb\u4ee3\u7801\uff0c\u6309\u7167mace \u5b98\u65b9\u6587\u6863\u914d\u7f6e \u597d\u7f16\u8bd1\u73af\u5883\uff0c\u6216\u8005\u76f4\u63a5\u4f7f\u7528\u6211\u4eec\u63d0\u4f9b\u7684docker \u73af\u5883\u3002 \u4e0b\u9762\u4ee5 reorg layer \u4e3a\u4f8b\u5b50\uff0c\u8bb2\u89e3\u5982\u4f55\u6dfb\u52a0\u65b0\u7684layer\uff0c\u4e3b\u8981\u4fee\u6539\u4ee5\u4e0b\u51e0\u4e2a\u6587\u4ef6","title":"8.1. \u6982\u8ff0"},{"location":"module/User_Guide/Common/Adding_A_New_Layer.html#82-caffe-proto","text":"","title":"8.2. Caffe proto \u6587\u4ef6\u4fee\u6539"},{"location":"module/User_Guide/Common/Adding_A_New_Layer.html#821-caffe-proto","text":"Mace \u539f\u59cb\u4ee3\u7801\u4e0b\u8f7d\u540e\uff0c\u7528 SGS_IPU_SDK/Scripts/CaffeConvertTool/third_party/caffe/caffe.proto \u66ff\u6362\u6389mace \u5de5\u7a0b \u8def\u5f84\u4e0bmace/third_party/caffe \u4e0bcaffe.proto \u6587\u4ef6\u3002\u56e0\u4e3asigmastar \u5728mace \u57fa\u7840\u4e0a\u505a\u4e86\u4e8c\u6b21\u5f00\u53d1\uff0c\u6240\u4ee5sigmstar \u652f\u6301 \u7684caffe layer \u5df2\u7ecf\u8fdc\u8fdc\u591a\u4e8e\u539f\u751f\u7684mace \u652f\u6301\u6570\u91cf\u3002\u8981\u6dfb\u52a0\u65b0\u7684layer\uff0c\u8bf7\u4ee5sigmastar \u7684caffe proto \u6587\u4ef6\u4f5c\u4e3a\u57fa\u7840 \u6dfb\u52a0\u3002 optional ReorgParameter reorg_param = 157 ; } message ReorgParameter { optional uint32 stride = 1 ; optional bool reverse = 2 [ default = false ] ; }","title":"8.2.1 \u4fee\u6539caffe proto"},{"location":"module/User_Guide/Common/Adding_A_New_Layer.html#822-proto","text":"\u5728mace \u5f00\u53d1\u73af\u5883\u4e2d cd pathToMace/ bazel build third_party/caffe/caffe_py \u5728bazel-genfiles \u4e0b\u751f\u6210caffe_pb2.py \u5c06\u4e0a\u9762\u4fee\u6539\u540e\u7684caffe.proto \u548c\u751f\u6210\u7684caffe_pb2.py \u66ff\u6362 SGS_IPU_SDK/Scripts/CaffeConvertTool/third_party/caffe \u540c \u540d\u6587\u4ef6\uff0c\u7136\u540e\u6309\u7167\u5982\u4e0b\u987a\u5e8f\u4fee\u6539\u4ee3\u7801","title":"8.2.2 \u7f16\u8bd1proto \u6587\u4ef6"},{"location":"module/User_Guide/Common/Adding_A_New_Layer.html#83-caffe_converterpy","text":"\u6587\u4ef6\u8def\u5f84 SGS_IPU_SDK/Scripts/CaffeConvertTool/mace/python/tools/converter_tool/caffe_converter.py \u8be5\u6587\u4ef6\u7684\u4f5c\u7528\u662f\u628acaffe\u6a21\u578b\u8f6c\u6362\u4e3amace\u6a21\u578b\uff0c\u5e76\u4fdd\u5b58\u8be5layer\u7684\u53c2\u6570 Reorg ':self.convert_Reorg, ... ... def convert_Reorg ( self , caffe_op ): op = self . convert_general_op ( caffe_op ) op . type = \"Reorg\" param = caffe_op . layer . reorg_param stride_arg = op . arg . add () stride_arg . name = \"stride\" stride_arg . i = 1 #default is true if param . HasField ( 'stride' ): stride_arg . i = int ( param . stride )","title":"8.3 \u4fee\u6539caffe_converter.py"},{"location":"module/User_Guide/Common/Adding_A_New_Layer.html#84-shape_inferencepy","text":"\u6587\u4ef6\u8def\u5f84 SGS_IPU_SDK/Scripts/CaffeConvertTool/mace/python/tools/converter_tool/shape_inference.py \u8be5\u6587\u4ef6\u7684\u4f5c\u7528\u662f\u8ba1\u7b97layer\u7684output shape Reorg ': self.infer_shape_Reorg, ... ... def infer_shape_Reorg ( self , op ): #only support stride is 2 output_shape = self . _output_shape_cache [ op . input [ 0 ]] input_shape = list ( self . _output_shape_cache [ op . input [ 0 ]]) input_n = input_shape [ 0 ] input_c = input_shape [ 1 ] input_h = input_shape [ 2 ] input_w = input_shape [ 3 ] output_shape = [ input_n , int ( input_c * 4 ), int ( input_h / 2 ), int ( input_w / 2 )] self . add_output_shape ( op , [ output_shape ])","title":"8.4. \u4fee\u6539shape_inference.py"},{"location":"module/User_Guide/Common/Adding_A_New_Layer.html#85-sgsmodel_transformpy","text":"\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u6211\u4eec\u53d1\u73b0reorg\u5728NCHW\u7684\u6392\u5217\u987a\u5e8f\u4e0b\uff0c\u5b83\u5b9e\u9645\u4e0a\u662f\u5bf9\u6570\u636e\u505a\u4e86\u4e00\u4e2a\u91cd\u6392\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u6700\u540e\u62c6\u89e3\u51fa\u6765\u7684\u7b97\u5b50\u7ec4\u5408\u662f \u6309\u7167\u7b97\u5b50\u7ec4\u5408\u987a\u5e8f\uff0c\u7f16\u5199\u4ee3\u7801 \u6587\u4ef6\u8def\u5f84 SGS_IPU_SDK/Scripts/CaffeConvertTool/mace/python/tools/SGSModel_transform.py \u8be5\u6587\u4ef6\u4f5c\u7528\u662f\u589e\u52a0\u8be5layer \u7684\u62c6\u89e3\u51fd\u6570\u3002\u5373\u7528Sigmastar \u63d0\u4f9b\u7684\u57fa\u672c\u7b97\u5b50\u5b9e\u73b0\u8be5layer\u3002 Reorg ':self.split_Reorg, ... ... def split_Reorg ( self , op ): #only support strid is 2 [ n , c , h , w ] = op . output_shape [ 0 ] . dims [:] c = int ( c / 4 ) op_name = op . name xi = op . input [ 0 ] ... ... \u81f3\u6b64\uff0c\u65b0\u7684layer \u652f\u6301\u6dfb\u52a0\u5b8c\u6210","title":"8.5. \u4fee\u6539SGSModel_transform.py"},{"location":"module/User_Guide/Common/Adding_A_New_Layer.html#86-layer","text":"","title":"8.6. Layer\u62c6\u89e3\u6ce8\u610f\u4e8b\u9879\u4e0e\u6280\u5de7"},{"location":"module/User_Guide/Common/Adding_A_New_Layer.html#861-layer","text":"\u5728caffe\u7f51\u7edc\u4e2d\uff0c\u4f7f\u7528NCHW\u6570\u636e\u6392\u5217\u3002\u800csigmastar\u4f7f\u7528NHWC\u7684\u987a\u5e8f\u8fdb\u884c\u6570\u636e\u8ba1\u7b97\uff08\u4e0etensorflow\u7c7b\u4f3c\uff09\u3002\u6240\u4ee5\u5728\u6a21\u578b\u8f6c\u6362\u6210sim\u6a21\u578b\u7684\u65f6\u5019\uff0c\u4f1a\u5bf9\u6240\u67094\u7ef4\u5ea6\u7684shape\u548c\u6570\u636e\u505a\u4e00\u6b21\u8f6c\u6362\u3002\u5373NCHW\u8f6c\u5230NHWC \u53c2\u8003\u4ee3\u7801\uff1a SGS_IPU_SDK/Scripts/CaffeConvertTool/mace/python/tools/SGSModel_converter.py \u5bf9\u4e8etensor data\u7684\u8f6c\u6362 def _creatBuffer ( self ): ... ... if len ( ori_shape ) == 4 : #transpose data to NHWC six . print_ ( \"Reshape \" , tensor . name , \"to NHWC\" ) data = np . array ( ori_data ) data = data . reshape ( ori_shape ) data = data . transpose ( 0 , 2 , 3 , 1 ) \u5bf9\u4e8eshape\u7684\u8f6c\u6362 def _creatTensor ( self ): ... ... if len ( shape ) == 4 and data_format == mace_pb2 . DT_NCHW : Transformer . transpose_shape ( shape , [ 0 , 2 , 3 , 1 ]) tflite . Tensor . TensorStartShapeVector ( self . _builder , len ( shape )) \u56e0\u4e3ashape\u5728\u521b\u5efasim\u6a21\u578b\u7684\u65f6\u5019\u4f1a\u88ab\u5f3a\u884c\u6539\u53d8\uff0c\u6240\u4ee5\u62c6\u89e3\u7684\u65f6\u5019\u8981\u6ce8\u610f \uff081\uff09\u6709axis\u53c2\u6570\u7684\uff0c\u8981\u6ce8\u610f\u987a\u5e8f\u4ea4\u6362 \u6bd4\u5982`concat layer\uff0ccaffe model\u91cc\u9762\uff0c\u5b83\u8981\u5bf9C\u7eac\u5ea6\u505aconcat\uff0c\u5176axis\u4e3a1\u3002\u7f51\u7edc\u8f6c\u6362\u540e\uff0cC\u4e3a\u6362\u5230\u4e86\u6700\u4f4e\u7ef4\uff0c\u6240 \u4ee5\u8981\u4fee\u6539axis\u4e3a3\uff0c\u4ee3\u7801\u5982\u4e0b\u3002\u76f8\u4f3c\u7684\u8fd8\u6709split\u3001PRelu\u7b49 def split_Concat ( self , op ): ... ... if len ( output_shape [ 0 ] . dims ) == 4 : #nchw -> nhwc if arg [ i ] . i == 1 : arg [ i ] . i = 3 else if arg [ i ] . i == 2 : arg [ i ] . i = 1 else if arg [ i ] . i == 3 : arg [ i ] . i = 2 \uff082\uff09\u6307\u5b9a\u7b97\u5b50output_shape\u7684\u65f6\u5019\uff0c\u7279\u522b\u662f4\u7ef4\u7684\u8f93\u51fa\uff0c\u8981\u6ce8\u610f\u987a\u5e8f\u53d8\u5316\u5e26\u6765\u7684\u5f71\u54cd\u3002\u6bd4\u5982\u5e0c\u671btensor\u7684\u8f93\u51fa\u662f[A,B,C,D]\uff0c\u90a3\u4e48\u4ee3\u7801\u4e2d\u6211\u4eec\u5199\u7684\u6570\u503c\u4e3a[A,D,B,C]\u3002\u56e0\u4e3a[A,D,B,C]\u7ecf\u8fc7\u4e0a\u9762\u4ee3\u7801\u7684\u8f6c\u6362\uff0c\u5c31\u5f97\u5230\u4e86[A,B,C,D]\u8fd9\u4e2a\u987a\u5e8f \uff083\uff09\u5728NCHW \u6570\u636e\u6392\u5217\u4e0b\u6709\u5f88\u5f3a\u89c4\u5f8b\u7684layer\uff0c\u53ef\u4ee5\u5148\u8f6c\u5230NCHW \u4e0b\u64cd\u4f5c\u3002\u6bd4\u5982\u4e0a\u9762\u63d0\u5230\u7684reorg layer\u3002 \uff084\uff09\u7528sdk \u91cc\u9762\u63d0\u4f9b\u7684Netron \u5de5\u5177\u6253\u5f00\u8f6c\u6362\u540e\u7684sim \u6a21\u578b\uff0c\u65b9\u4fbf\u67e5\u770b\u5404\u79cd\u5c5e\u6027\u548cshape\u3002","title":"8.6.1. Layer\u62c6\u89e3\u6ce8\u610f\u4e8b\u9879\u4e0e\u6280\u5de7 \u6570\u636e\u7ef4\u5ea6\u7684\u95ee\u9898"},{"location":"module/User_Guide/Common/Adding_A_New_Layer.html#862","text":"\u7efc\u4e0a\u6240\u8ff0\uff0c\u5728\u62c6\u89e3\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u5efa\u8bae\u6309\u7167\u5982\u4e0b\u6d41\u7a0b\u8fdb\u884c","title":"8.6.2. \u5efa\u8bae\u62c6\u89e3\u6d41\u7a0b"},{"location":"module/User_Guide/Common/Adding_A_New_Layer.html#863","text":"\u524d\u671f\u53ef\u4ee5\u7528python \u521b\u5efatensorflow \u7b97\u5b50\u7684\u65b9\u6cd5\uff0c\u8fdb\u884c\u9a8c\u8bc1\u3002 \u5f53\u9a8c\u8bc1\u5b8c\u6210\uff0c\u518d\u4fee\u6539SGS_IPU_SDK \u7684\u76f8\u5173\u4ee3\u7801\uff0c\u53c2\u8003 Dump_Debug TOOL \u7ae0\u8282\uff0cdump \u51fa\u6700\u540e\u7ed3\u679c\u4e0egolden \u6bd4\u5bf9\u3002","title":"8.6.3. \u6570\u636e\u5bf9\u6bd4\u53ca\u9a8c\u8bc1"},{"location":"module/User_Guide/Common/Calibrate.html","text":"3.1. \u4f7f\u7528\u65b9\u6cd5 \u00b6 Calibrator\u5de5\u5177\u7684\u4f4d\u7f6e\u5728 SGS_IPU_SDK/Scripts/calibrator/calibrator.py \u3002 \u8be5\u5de5\u5177\u662f\u5c06SigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u4e3aSigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u3002 \u5728SGS_IPU_SDK \u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK source cfg_env.sh \u8fdb\u5165\u5230\u8be5\u5de5\u5177\u76ee\u5f55\uff0c\u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 calibrator.py \\ -i ~/SGS_Models/resource/detection/coco2017_calibration_set32 \\ -m ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1_float.sim \\ -n ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1.py \\ --input_config ~/SGS_Models/tensorflow/ssd_mobilenet_v1/input_config.ini \\ --num_process 20 \u6216\u8005\u53ef\u4ee5\u4f7f\u7528\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\uff1a python3 calibrator.py \\ -i ~/SGS_Models/resource/detection/file.list \\ -m ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1_float.sim \\ -n ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1.py \\ --input_config ~/SGS_Models/tensorflow/ssd_mobilenet_v1/input_config.ini \\ --num_process 20 \u5bf9\u8be5\u5de5\u5177\u53c2\u6570\u7684\u5177\u4f53\u8bf4\u660e\u5982\u4e0b\uff1a 3.1.1 \u5fc5\u9009\u53c2\u6570 \u00b6 -i , --image : \u56fe\u7247\u6587\u4ef6\u6216\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\u6216 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u3002 -m , --model : \u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 \u5177\u4f53\u8bbe\u7f6e\u65b9\u6cd5\u89c1 [input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e]2.2. input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e). -n , --preprocess : \u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4e0e\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\u76f8\u5173\uff0c\u8be6\u89c1[3.2. \u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5]\u3002 \u4e5f\u53ef\u4ee5\u5b8c\u6210\u524d\u5904\u7406\u6587\u4ef6\u914d\u7f6e\u540e\uff0c\u7ed9\u5b9a\u524d\u5904\u7406\u6587\u4ef6\u8def\u5f84\u3002 Please Note: \u82e5\u6a21\u578b\u4e3a \u591a\u8f93\u5165 \u65f6\uff0c -n,--preprocess \u53c2\u6570\u7528\u6cd5\u9700\u8981\u591a\u4e2a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4f8b\u5982 -n preprocess1.py,preprocess2.py \u6216\u8005 --preprocess preprocess1.py,preprocess2.py -i/--image \u53c2\u6570\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\uff1a \u7f51\u7edc\u6a21\u578b\u4e3a\u5355\u8f93\u5165\u65f6\uff1a ~/SGS_IPU_SDK/image_test/2007000364.jpg ~/SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp ... \u7f51\u7edc\u6a21\u578b\u4e3a\u591a\u8f93\u5165\u65f6\uff1a ~/SGS_IPU_SDK/image_test/2007000364.jpg,~/SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp ~/SGS_IPU_SDK/image_test/2007000365.jpg,~/SGS_IPU_SDK/image_test/ILSVRC2012_test_00000003.bmp ... 3.1.2 \u53ef\u9009\u53c2\u6570 \u00b6 -o , --output : \u6a21\u578b\u8f93\u51fa\u8def\u5f84\u3002\u6307\u5b9a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u6570\u636e\u4f4d\u7f6e\uff1a\u6307\u5b9a\u5230\u6587\u4ef6\u5939\uff0c\u5c06\u81ea\u52a8\u4ee5\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u524d\u7f00\u547d\u540d\uff0c\u540e\u63a5fixed.sim\uff1b\u6307\u5b9a\u5230\u5177\u4f53\u8def\u5f84\u548c\u6587\u4ef6\u540d\uff0c\u5c06\u4ee5\u6307\u5b9a\u8def\u5f84\u548c\u6587\u4ef6\u540d\u547d\u540d\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff1b\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\uff0c\u5c06\u4ee5\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u50a8\u5b58\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u3002 --num_process : \u8fdb\u7a0b\u6570\uff0c\u8fd0\u884c\u540c\u65f6\u8fd0\u884c\u7684\u8fdb\u7a0b\u6570\u3002\uff08\u53ef\u9009\u53c2\u6570\uff0c\u4e0d\u52a0\u8be5\u53c2\u6570\u9ed8\u8ba4\u4e3a10\u4e2a\u8fdb\u7a0b\uff09\u3002 --quant_level : \u9009\u62e9\u91cf\u5316\u7b49\u7ea7\uff1a[L1, L2, L3, L4, L5]\u3002\u9ed8\u8ba4L5\u91cf\u5316\u7b49\u7ea7\uff0c\u7b49\u7ea7\u8d8a\u9ad8\uff0c\u91cf\u5316\u7cbe\u5ea6\u8d8a\u9ad8\uff0c\u91cf\u5316\u901f\u5ea6\u4f1a\u76f8\u5e94\u53d8\u6162\u3002\u5404\u91cf\u5316\u7b49\u7ea7\u8bf4\u660e\uff1a L1 : \u91c7\u7528\u6700\u5927\u6700\u5c0f\u503c\u5feb\u901f\u5bf9\u6bd4\u6570\u636e\u91cf\u5316\uff0c\u901f\u5ea6\u8f83\u5feb\u3002 L2 : \u91c7\u7528\u5feb\u901f\u5bf9\u6bd4\u6570\u636e\u91cf\u5316\u6743\u91cd\u6570\u636e\u3002 L3 : \u5bf9\u7edf\u8ba1\u4fe1\u606f\u505a\u8fdb\u4e00\u6b65\u5206\u6790\uff0c\u8fd1\u4f3c\u62df\u5408\u539f\u6709\u6570\u636e\u5206\u5e03\u3002 L4 : \u8fd1\u4f3c\u62df\u5408\u6743\u91cd\u6570\u636e\u5206\u5e03\uff0c\u5e76\u5efa\u8bae\u5347\u7ea7\u67d0\u4e9b\u5377\u79ef\u4e3a16bit\u91cf\u5316\u3002 L5 : \u91c7\u7528\u9ad8\u7cbe\u5ea6\u6570\u636e\u5206\u6790\u65b9\u6cd5\uff0c\u6781\u5927\u9650\u5ea6\u62df\u5408\u539f\u6709\u6570\u636e\u5206\u5e03\uff0c\u5e76\u5efa\u8bae\u5347\u7ea7\u67d0\u4e9b\u5377\u79ef\u4e3a16bit\u91cf\u5316\u3002 3.1.3 \u6ce8\u610f\u4e8b\u9879 \u00b6 \u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u6210\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u9700\u898130\u5f20\u5de6\u53f3\u8bad\u7ec3\u56fe\u7247\u7528\u6765\u5206\u6790\u548c\u91cf\u5316\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u7684\u6570\u636e\uff0c\u56e0\u6b64\u5728\u8f6c\u6362\u4e2d\uff0c -i/--image \u53c2\u6570\u540e\u5e94\u63a5\u56fe\u7247\u6587\u4ef6\u5939\u7684\u8def\u5f84\u3002\u5f53\u7136\uff0c\u5982\u679c -i/--image \u53c2\u6570\u7ed9\u5b9a\u5355\u5f20\u56fe\u7247\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u4f9d\u7136\u53ef\u4ee5\u8f6c\u6362\u4e3a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff0c\u4f46\u662f\u5176\u6a21\u578b\u7cbe\u5ea6\u53ef\u80fd\u4f1a\u6536\u5230\u5f71\u54cd\u3002\u53e6\u5916\uff0c\u7531\u4e8e\u5bf9\u7cbe\u5ea6\u8981\u6c42\u4e0d\u540c\uff0c\u5728\u8f6c\u6362\u7f51\u7edc\u4e2d\u5728input_config.ini\u6587\u4ef6\u4e2d\u53ef\u4ee5\u9488\u5bf9\u5377\u79ef\u914d\u7f6e\u4e0d\u540c\u7684\u91cf\u5316\u4fe1\u606f\uff0c\u4ece\u800c\u83b7\u5f97\u7cbe\u5ea6\u548c\u901f\u5ea6\u7684\u5e73\u8861\u3002 calibrator\u5de5\u5177\u4f1a\u5bfb\u627e\u7cfb\u7edf\u53d8\u91cf\u4ece\u800c\u83b7\u5f97\u5bf9\u5e94\u9636\u6bb5\u4efb\u52a1\u6240\u9700\u5de5\u5177\u8def\u5f84\uff0c\u56e0\u6b64\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u53c2\u6570 -t/--tool \u4e0d\u7528\u6307\u5b9a\u76f8\u5173\u5de5\u5177\u7684\u4f4d\u7f6e\u3002 \u4f7f\u7528calibrator\u5c06\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u4e3a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u65f6\uff0c\u4f1a\u5728\u8fd0\u884c\u76ee\u5f55\u4e0b\u4ea7\u751flog\u76ee\u5f55\uff0clog\u76ee\u5f55\u4e0b\u7684tensor_min_max.txt\u6587\u4ef6\u8bb0\u5f55\u4e86\u7f51\u7edc\u7684\u6bcf\u5c42\u8f93\u5165\u548c\u8f93\u51fa\u7684\u6700\u5927\u4e0e\u6700\u5c0f\u503c\uff0c\u5c06\u5728\u4e4b\u540e\u5206\u6790\u6570\u636e\u65f6\u6709\u7528\u3002log\u76ee\u5f55\u4e0b\u7684\u5185\u5bb9\u4f1a\u5728\u4e0b\u4e00\u6b21\u4f7f\u7528calibrator\u65f6\u5220\u9664\uff0c\u8bf7\u6ce8\u610f\u4fdd\u5b58\u3002 3.2. \u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5 \u00b6 \u7531\u4e8e\u4e0d\u540c\u7f51\u7edc\u6a21\u578b\u7684\u524d\u5904\u7406\u65b9\u5f0f\u4e0d\u5c3d\u76f8\u540c\uff0c\u4e3a\u4e86\u80fd\u591f\u5728\u8f6c\u6362\u7f51\u7edc\u65f6\u5c3d\u53ef\u80fd\u51cf\u5c0f\u7cbe\u5ea6\u7684\u4e22\u5931\uff0c\u5e94\u8be5\u4f7f\u7528\u4e0e\u8bad\u7ec3\u76f8\u540c\u7684\u56fe\u7247\u524d\u5904\u7406\u65b9\u5f0f\uff0c\u6bcf\u79cd\u524d\u5904\u7406\u65b9\u5f0f\u9700\u72ec\u7acb\u7f16\u5199python\u6587\u4ef6\u3002 \u4ee5\u4e0b\u4e24\u79cd\u65b9\u5f0f\u4fdd\u5b58\u524d\u5904\u7406Python\u6587\u4ef6\u5747\u53ef\u88ab\u8c03\u7528\uff1a \u8bf7\u5c06\u6587\u4ef6\u4fdd\u5b58\u5230 SGS_IPU_SDK/Scripts/calibrator/preprocess \u6587\u4ef6\u5939\u5185\uff0c\u5e76\u5728preprocess_method/ init .py \u6587\u4ef6\u4e2d\u589e\u52a0\u6587\u4ef6\u540d\u79f0\u3002\u5728\u4f7f\u7528calibrator\u6216simulator\u65f6\uff0c -n/--preprocess \u53c2\u6570\u4e3a\u7f16\u5199\u7684\u6587\u4ef6\u540d\u79f0\uff0c\u4e0d\u9700\u8981\u6307\u5b9a\u7f16\u5199\u6587\u4ef6\u7684\u8def\u5f84\u3002 -n/--preprocess \u53c2\u6570\u4e3a\u524d\u5904\u7406Python\u7684\u6587\u4ef6\u8def\u5f84\u3002 \u4e0b\u9762\u4ee5caffe_resnet18\u7f51\u7edc\u4e3a\u4f8b\uff0c\u7f16\u5199\u56fe\u7247\u524d\u5904\u7406\u6587\u4ef6\u3002 \u7f16\u5199\u56fe\u7247\u5904\u7406\u51fd\u6570\uff08\u51fd\u6570\u540d\u79f0\u4e0d\u9650\uff09\uff0c\u8fd4\u56denp.array \u683c\u5f0f\u7684\u56fe\u7247\u6570\u636e\uff0c\u51fd\u6570\u5fc5\u987b\u5305\u542b2\u4e2a\u53c2\u6570\uff1a \u56fe\u7247\u8def\u5f84 \u5f52\u4e00\u5316\u6807\u8bb0\uff08norm=True\uff09 \u5f52\u4e00\u5316\u6807\u8bb0\u662f\u4e3a\u4e86\u533a\u5206\u7f51\u7edc\u6a21\u578b\u662f\u5426\u662f\u6d6e\u70b9\u6a21\u578b\u3002\u56e0\u4e3a\u5728\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u9636\u6bb5\uff0c\u56fe\u7247\u7684\u5f52\u4e00\u5316\u9700\u8981\u5728\u9001\u8fdb\u7f51\u7edc\u524d\u5904\u7406\u597d\u3002\u4f46\u662f\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u548c\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u5df2\u7ecf\u5305\u542b\u4e86input_config.ini\u6587\u4ef6\u7684\u8bbe\u7f6e\u4fe1\u606f\uff0c\u80fd\u591f\u5c06\u56fe\u7247\u6570\u636e\u81ea\u884c\u505a\u5f52\u4e00\u5316\u5904\u7406\uff0c\u56e0\u6b64\u9001\u8fdb\u7f51\u7edc\u6a21\u578b\u7684\u6570\u636e\u4e0d\u9700\u8981\u505a\u5f52\u4e00\u5316\uff0c\u8fd9\u4e0e\u5728SigmaStar\u786c\u4ef6\u4e0a\u5904\u7406\u65b9\u5f0f\u76f8\u540c\u3002 import cv2 import numpy as np def get_image ( img_path , resizeH = 224 , resizeW = 224 , resizeC = 3 , norm = True , meanB = 104.0 , meanG = 117.0 , meanR = 123.0 , std = 1.0 , rgb = False , nchw = False ): img = cv2 . imread ( img_path , flags =- 1 ) if img is None : raise FileNotFoundError ( 'No such image: {} ' . format ( img_path )) try : img_dim = img . shape [ 2 ] except IndexError : img_dim = 1 if img_dim == 4 : img = cv2 . cvtColor ( img , cv2 . COLOR_BGRA2BGR ) elif img_dim == 1 : img = cv2 . cvtColor ( img , cv2 . COLOR_GRAY2BGR ) img_float = img . astype ( 'float32' ) img_norm = cv2 . resize ( img_float , ( resizeW , resizeH ), interpolation = cv2 . INTER_LINEAR ) if norm and ( resizeC == 3 ): img_norm = ( img_norm - [ meanB , meanG , meanR ]) / std img_norm = img_norm . astype ( 'float32' ) elif norm and ( resizeC == 1 ): img_norm = ( img_norm - meanB ) / std img_norm = img_norm . astype ( 'float32' ) else : img_norm = np . round ( img_norm ) . astype ( 'uint8' ) if rgb : img_norm = cv2 . cvtColor ( img_norm , cv2 . COLOR_BGR2RGB ) if nchw : # NCHW img_norm = np . transpose ( img_norm , axes = ( 2 , 0 , 1 )) return np . expand_dims ( img_norm , 0 ) def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm ) \u4f7f\u7528image_preprocess\u51fd\u6570\u8c03\u7528\uff0c\u6b64\u5904\u52a1\u5fc5\u6309\u7167\u8be5\u65b9\u6cd5\u4e66\u5199\u3002 def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm ) \u4fdd\u5b58\u4e3a caffe_resnet18.py. \u5728SGS_IPU_SDK/Scripts/calibrator/preprocess_method/ init .py \u6587\u4ef6\u4e2d\u6dfb\u52a0\u521a\u521a\u7f16\u5199\u7684python\u6587\u4ef6 _all_ = [ 'caffe_mobilenet_v2' , 'caffe_resnet18' , 'caffe_resnet50_conv' , 'mobilenet_v1' ] \u4f7f\u7528calibrator\u6216simulator\u65f6 -n/--preprocess \u53c2\u6570\u4e3acaffe_resnet18 \u5373\u53ef\u8c03\u7528\u521a\u521a\u7f16\u5199\u7684\u56fe\u7247\u524d\u5904\u7406\u6587\u4ef6\u3002 \u5982\u679c\u4e0d\u5728SGS_IPU_SDK/Scripts/calibrator/preprocess_method/ init .py \u6587\u4ef6\u4e2d\u589e\u52a0\uff0c -n/--preprocess \u53c2\u6570\u4e3acaffe_resnet18.py\u6587\u4ef6\u8def\u5f84\uff0c\u4e5f\u53ef\u4ee5\u4e3a\u56fe\u7247\u505a\u524d\u5904\u7406\u3002 3.3. \u5377\u79ef\u91cf\u5316\u9009\u9879 \u00b6 \u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u5230\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u65f6\uff0c\u5377\u79ef\u91cf\u5316\u652f\u6301 UINT8 \u548c INT16 \u4e24\u79cd\u91cf\u5316\u65b9\u5f0f\u3002\u4f7f\u7528calibrator\u65f6\uff0c --quant_level \u9009\u62e9L2\u3001L3\u6216L4\u65f6\u4f1a\u6839\u636e\u7edf\u8ba1\u4fe1\u606f\u81ea\u52a8\u914d\u7f6e\u5377\u79ef\u7684\u91cf\u5316\u65b9\u5f0f\uff0c\u5982\u679c\u9700\u8981\u5f3a\u5236\u6307\u5b9a\uff0c\u6307\u5b9a\u65b9\u5f0f\u5728 [2.2.3 CONV_CONFIG]\u4e2d\u6709\u8bf4\u660e\u3002\u53ef\u5bf9\u67d0\u4e9b\u5377\u79ef\u5c42\u5355\u72ec\u8bbe\u7f6eINT16\u91cf\u5316\uff0c\u6216\u8005\u5bf9\u5168\u90e8\u5377\u79efINT16\u91cf\u5316\uff1b\u4e0d\u8bbe\u7f6e\u65f6\u9ed8\u8ba4\u4f7f\u7528calibrator\u7684\u63a8\u8350\u91cf\u5316\u65b9\u5f0f\u3002 3.4. calibrator_custom.calibrator \u00b6 calibrator_custom.calibrator\u662f\u57fa\u4e8ePython\u7684\u5feb\u901f\u91cf\u5316\u548c\u8f6c\u6362\u6a21\u578b\u7684\u6a21\u5757\u3002\u4f7f\u7528calibrator_custom.calibrator\u53ef\u4ee5\u66f4\u65b9\u4fbf\u7075\u6d3b\u7684\u5bf9\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u8fdb\u884c\u91cf\u5316\u548c\u8f6c\u6362\u3002\u76ee\u524d\u57fa\u4e8e\u7684docker\u73af\u5883\uff0c\u63d0\u4f9bPython3.7\u7684\u9884\u7f16\u8bd1\u7684Python\u6a21\u5757\uff0c\u4f7f\u7528\u65b9\u6cd5\u548c\u76f8\u5173API\u63a5\u53e3\u5982\u4e0b\uff1a import calibrator_custom model_path = './mobilenet_v2_float.sim' input_config_path = './input_config.ini' model = calibrator_custom . calibrator ( model_path , input_config_path ) \u4f7f\u7528 calibrator_custom.calibrator \u65f6\uff0c\u9700\u8981\u7ed9\u5b9afloat.sim\u6a21\u578b\u7684\u8def\u5f84\u548c\u5bf9\u5e94\u7684input_config.ini\u7684\u8def\u5f84\uff0c\u7528\u4e8e\u521b\u5efacalibrator\u7684\u5b9e\u4f8b\u3002\u53c2\u6570\u7ed9\u5b9a\u9519\u8bef\uff0c\u5c06\u65e0\u6cd5\u6210\u529f\u521b\u5efacalibrator\u5b9e\u4f8b\uff0c\u5e76\u8fd4\u56deValueError\u3002 3.4.1 calibrator_custom.calibrator\u65b9\u6cd5 \u00b6 get_input_details \u8fd4\u56de\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u4fe1\u606f\uff08list\uff09 input_details = model . get_input_details () >>> print ( input_details ) [{ 'index' : 0 , 'shape' : array ([ 1 , 513 , 513 , 3 ], dtype = int32 ), 'name' : 'sub_7' , 'dtype' : < class ' numpy . float32 '>}] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578b\u8f93\u5165\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a index : \u8f93\u5165Tensor\u5e8f\u53f7 name : \u8f93\u5165Tensor\u540d\u79f0 shape : \u8f93\u5165Tensor\u7684\u5f62\u72b6 dtype : \u8f93\u5165Tensor\u7684\u6570\u636e\u7c7b\u578b get_output_detail \u8fd4\u56de\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u4fe1\u606f\uff08list\uff09 output_details = model . get_output_details () >>> print ( output_details ) [{ 'index' : 0 , 'shape' : array ([ 1 , 257 , 257 , 30 ], dtype = int32 ), 'name' : 'MobilenetV2/Conv/Conv2D' , 'dtype' : < class ' numpy . float32 '>}] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578b\u8f93\u51fa\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a index : \u8f93\u51faTensor\u5e8f\u53f7 name : \u8f93\u51faTensor\u540d\u79f0 shape : \u8f93\u51faTensor\u7684\u5f62\u72b6 dtype : \u8f93\u51faTensor\u7684\u6570\u636e\u7c7b\u578b set_input \u8bbe\u7f6e\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u6570\u636e model . set_input ( 0 , img_data ) \u8f93\u5165\u6570\u636e\uff0c0\u4e3a\u8f93\u5165Tensor\u7684index\uff0c\u53ef\u4ee5\u5728get_input_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230\u3002img_data\u662f\u4e0emodel\u8f93\u5165shape\u548cdtype\u76f8\u540c\u7684numpy.ndarray\u683c\u5f0f\u6570\u636e\uff0c\u9519\u8bef\u7684shape\u6216dtype\uff0c\u5c06\u5bfc\u81f4set_input\u8fd4\u56deValueError\u3002\u5982\u679c\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u53ef\u4ee5\u591a\u6b21\u8c03\u7528set_input\uff0c\u6839\u636eget_input_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230index\u8bbe\u7f6e\u5bf9\u5e94Tensor\u7684\u8f93\u5165\u6570\u636e\u3002 invoke \u6a21\u578b\u8fd0\u884c\u4e00\u6b21 model . invoke () \u8c03\u7528invoke\u524d\u8bf7\u5148\u4f7f\u7528set_input\u8bbe\u7f6e\u8f93\u5165\u6570\u636e\uff0c\u672a\u8c03\u7528set_input\u76f4\u63a5\u8c03\u7528invoke\u4f1a\u8fd4\u56deValueError\u3002 get_output \u83b7\u53d6\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u6570\u636e result = model . get_output ( 0 ) \u83b7\u53d6\u8f93\u51fa\u6570\u636e\uff0c0\u4e3a\u8f93\u51faTensor\u7684index\uff0c\u53ef\u4ee5\u5728get_output_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230\uff0c\u8fd4\u56denumpy.ndarray\u683c\u5f0f\u8f93\u51fa\u6570\u636e\u3002\u5982\u679c\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u51fa\uff0c\u53ef\u4ee5\u591a\u6b21\u8c03\u7528get_output\uff0c\u6839\u636eget_output_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230index\u83b7\u53d6\u5bf9\u5e94Tensor\u7684\u8f93\u51fa\u6570\u636e\u3002 get_tensor_details \u8fd4\u56de\u7f51\u7edc\u6a21\u578b\u6bcf\u4e2aTensor\u7684\u4fe1\u606f\uff08list\uff09 tensor_details = model . get_tensor_details () >>> print ( tensor_details ) [{ 'dtype' : 'FLOAT32' , 'name' : 'MobilenetV2/Conv/Conv2D' , 'qtype' : 'INT16' , 'shape' : array ([ 1 , 257 , 257 , 30 ], dtype = int32 )}, { 'dtype' : 'FLOAT32' , 'name' : 'MobilenetV2/Conv/Conv2D_bias' , 'qtype' : 'INT16' , 'shape' : array ([ 2 , 30 ], dtype = int32 )}, { 'dtype' : 'FLOAT32' , 'name' : 'MobilenetV2/Conv/weights/read' , 'qtype' : 'INT8' , 'shape' : array ([ 30 , 3 , 3 , 3 ], dtype = int32 )}, { 'dtype' : 'FLOAT32' , 'name' : 'sub_7' , 'qtype' : 'UINT8' , 'shape' : array ([ 1 , 513 , 513 , 3 ], dtype = int32 )}] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578bTensor\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a name : Tensor\u540d\u79f0 shape : Tensor\u7684\u5f62\u72b6 dtype : Tensor\u7684\u6570\u636e\u7c7b\u578b qtype : \u5b9a\u70b9\u6a21\u578b\u8be5Tensor\u53ef\u80fd\u7684\u6570\u636e\u7c7b\u578b\uff08quantization type\uff09 3.4.2 calibrator_custom.SIM_Calibrator \u00b6 \u5bf9\u4e8e\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u540c\u65f6\u8f6c\u6362\u65f6\uff0c\u63d0\u4f9bcalibrator_custom.SIM_Calibrator\uff0c\u65b9\u4fbf\u8fdb\u884c\u7b80\u5355\u5b9a\u4e49\u540e\uff0c\u7edf\u4e00\u8f6c\u6362\u3002 calibrator_custom.SIM_Calibrator\u662f\u5df2\u7ecf\u5b9e\u73b0\u597d\u7684class\uff0c\u5f53\u4e2d\u53ea\u6709forward\u65b9\u6cd5\u672a\u5b9e\u73b0\uff0c\u4f7f\u7528\u65f6\u4ec5\u9700\u5b9e\u73b0\u8be5\u65b9\u6cd5\uff0c\u5373\u53ef\u8f6c\u6362\u5b8c\u6210\u3002 \u4e0b\u9762\u4ee5 SGS_IPU_SDK/Scripts/examples/sim_calibrator.py \u4e3a\u4f8b\uff0c\u8bf4\u660ecalibrator_custom.SIM_Calibrator\u7684\u4f7f\u7528\u65b9\u6cd5\uff1a import calibrator_custom class Net ( calibrator_custom . SIM_Calibrator ): def __init__ ( self ): super () . __init__ () self . model = calibrator_custom . calibrator ( model_path , input_config ) def forward ( self , x ): out_details = self . model . get_output_details () self . model . set_input ( 0 , x ) self . model . invoke () result_list = [] for idx in range ( len ( out_details )): result = self . model . get_output ( idx ) result_list . append ( result ) return result_list \u5b9a\u4e49forward\u65b9\u6cd5\uff0cforward\u7684\u53c2\u6570\u4e3a\u6a21\u578b\u8f93\u5165\uff0c\u5982\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u53ef\u589e\u52a0forward\u7684\u53c2\u6570\u3002 \u521b\u5efacalibrator_custom.SIM_Calibrator\u7684\u5b9e\u4f8b net = Net () \u8c03\u7528calibrator_custom.SIM_Calibrator\u7684convert\u65b9\u6cd5 net . convert ( img_gen , fix_model = [ out_model_path ]) convert\u65b9\u6cd5\u5fc5\u987b\u8f93\u5165\u4e24\u4e2a\u53c2\u6570\uff1a\u56fe\u7247\u751f\u6210\u5668\u3001fixed.sim\u6a21\u578b\u7684\u4fdd\u5b58\u8def\u5f84list\u3002 \u56fe\u7247\u751f\u6210\u5668\uff08img_gen\uff09 \u4e3a\u65b9\u4fbf\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u8f6c\u6362\u6a21\u578b\uff0c\u901a\u8fc7\u751f\u6210\u5668\u65b9\u4fbf\u7ec4\u7ec7\u8f93\u5165\u56fe\u7247\u7684\u5e8f\u5217\u3002\u5982\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u751f\u6210\u5668\u5e94\u8be5\u6309\u7167\u5b9a\u4e49forward\u65f6\u7684\u8f93\u5165\u987a\u5e8f\uff0c\u8fd4\u56de\u6709\u591a\u4e2anumpy.ndarray\u7684list\u3002 calibrator_custom.utils.image_preprocess_func\u4f7f\u7528\u9884\u5148\u5b9a\u4e49\u597d\u7684\u524d\u5904\u7406\u65b9\u6cd5\u3002 preprocess_func = calibrator_custom . utils . image_preprocess_func ( model_name ) def image_generator ( folder_path , preprocess_func ): images = [ os . path . join ( folder_path , img ) for img in os . listdir ( folder_path )] for image in images : img = preprocess_func ( image ) yield [ img ] img_gen = image_generator ( './images' , preprocess_func ) fixed.sim\u6a21\u578b\u7684\u4fdd\u5b58\u8def\u5f84list \u5982\u679c\u5728__init__\u4e2d\u5b9a\u4e49\u591a\u4e2a\u6a21\u578b\uff0cfixed\u6a21\u578b\u7684\u4fdd\u5b58\u8def\u5f84list\u5e94\u8be5\u6309\u7167__init__\u4e2d\u5b9a\u4e49\u6a21\u578b\u7684\u987a\u5e8f\uff0c\u4f9d\u6b21\u547d\u540d\u3002 \u5176\u4ed6\u53ef\u9009\u53c2\u6570\uff1a num_process: \u8fdb\u7a0b\u6570\uff0c\u8fd0\u884c\u540c\u65f6\u8fd0\u884c\u7684CPU\u6570\u91cf quant_level: \u9009\u62e9\u91cf\u5316\u7b49\u7ea7\uff1a[L1, L2, L3, L4, L5]\uff0c\u9ed8\u8ba4L5\u91cf\u5316\u7b49\u7ea7\uff0c\u5177\u4f53\u542b\u4e49\u8be6\u89c13.1.2\u8282Calibrator\u7684\u53ef\u9009\u53c2\u6570\u4f7f\u7528\u65b9\u6cd5\u3002 quant_param: \u91cf\u5316\u5bfc\u5165\u53c2\u6570\u3002\u5982\u679c\u5df2\u6709\u5bf9\u5e94\u6a21\u578b\u7684\u91cf\u5316\u53c2\u6570\uff0c\u53ef\u4ee5\u5c06\u91cf\u5316\u7684\u53c2\u6570\u5728\u6a21\u578b\u8f6c\u6362\u4e2d\u5bfc\u5165\u3002 3.4.3 \u5bfc\u5165\u91cf\u5316\u53c2\u6570\u89c4\u5219 \u00b6 3.4.3.1. \u91cf\u5316\u7b56\u7565\u548c\u65b9\u6cd5 \u00b6 Conv2D\u7684\u91cf\u5316\u65b9\u6cd5 Conv2D\u7684\u91cf\u5316\u5206\u4e3a\u8f93\u5165\u3001Weights\u548c\u8f93\u51fa\uff0c\u76ee\u524d\u652f\u63018bit\uff0c16bit\u91cf\u5316\u3002 \u6839\u636e\u7edf\u8ba1\u5f97\u5230\u7684\u8f93\u5165\u3001Weights\u548c\u8f93\u51fa\u7684min\u548cmax\u503c\uff0c\u9996\u5148\u63d0\u524d\u5c06Weights\u91cf\u5316\u5230\u5b9a\u70b9\u6570\u636e\uff0c\u4fdd\u5b58\u5728fixed\u7684\u7f51\u7edc\u5185\u90e8\uff0c\u518d\u5728\u7f51\u7edc\u8fd0\u884c\u65f6\u52a8\u6001\u91cf\u5316\u8f93\u5165\u548c\u8f93\u51fa\u6570\u636e\u3002Weights\u7684min\u548cmax\u503c\u7684\u4e2a\u6570\u7531kernel\u7684\u4e2a\u6570\u51b3\u5b9a\uff0c\u8f93\u5165\u548c\u8f93\u51fa\u7684min\u548cmax\u503c\u7684\u4e2a\u6570\u7531\u8f93\u5165\u8f93\u51fa\u7684C\u7ef4\u5ea6\u51b3\u5b9a\u3002\u5982\u679c\u4f7f\u75288bit\u91cf\u5316\uff0cConv2D\u7684\u8f93\u5165\u4e3aUINT8\uff08\u76f8\u5f53\u4e8eINT9\u7684\u8868\u8fbe\u80fd\u529b\uff09\uff0cWeights\u4e3aINT8\uff1b\u5982\u679c\u4f7f\u752816bit\u91cf\u5316\uff0cConv2D\u7684\u8f93\u5165\u548cWeights\u5747\u4e3aINT16\u3002 DepthwiseConv2D\u7684\u91cf\u5316\u65b9\u6cd5 DepthwiseConv2D\u7684\u91cf\u5316\u5206\u4e3a\u8f93\u5165\u3001Weights\u548c\u8f93\u51fa\uff0c\u76ee\u524d\u652f\u63018bit\uff0c16bit\u91cf\u5316\u3002 \u6839\u636e\u7edf\u8ba1\u5f97\u5230\u7684\u8f93\u5165\u3001Weights\u548c\u8f93\u51fa\u7684min\u548cmax\u503c\uff0c\u9996\u5148\u63d0\u524d\u5c06Weights\u91cf\u5316\u5230\u5b9a\u70b9\u6570\u636e\uff0c\u4fdd\u5b58\u5728fixed\u7684\u7f51\u7edc\u5185\u90e8\uff0c\u518d\u5728\u7f51\u7edc\u8fd0\u884c\u65f6\u52a8\u6001\u91cf\u5316\u8f93\u5165\u548c\u8f93\u51fa\u6570\u636e\u3002Weights\u3001\u8f93\u5165\u548c\u8f93\u51fa\u7684min\u548cmax\u503c\u7684\u4e2a\u6570\u5747\u7531\u5bf9\u5e94Tensor\u7684C\u7ef4\u5ea6\u51b3\u5b9a\u3002\u5982\u679c\u4f7f\u75288bit\u91cf\u5316\uff0cDepthwiseConv2D\u7684\u8f93\u5165\u4e3aUINT8\uff08\u76f8\u5f53\u4e8eINT9\u7684\u8868\u8fbe\u80fd\u529b\uff09\uff0cWeights\u4e3aINT8\uff1b\u5982\u679c\u4f7f\u752816bit\u91cf\u5316\uff0cDepthwiseConv2D\u7684\u8f93\u5165\u548cWeights\u5747\u4e3aINT16\u3002 \u5176\u4ed6Op\u91cf\u5316\u65b9\u6cd5 \u7f51\u7edc\u4e2d\u5176\u4ed6\u7b97\u5b50\u7684\u91cf\u5316min\u548cmax\u5747\u57fa\u4e8eC\u7ef4\u5ea6\u6570\u91cf\uff0c\u4ec5\u652f\u630116bit\u91cf\u5316\u3002\u8c03\u7528calibrator_custom.calibrator\u7684get_tensor_details\u65b9\u6cd5\u53ef\u4ee5\u4eceqtype\u4e2d\u5f97\u77e5\u8be5Tensor\u5728\u5b9a\u70b9\u6a21\u578b\u65f6\u7684data type\u3002 3.4.3.2. \u91cf\u5316\u53c2\u6570\u7684\u5185\u5bb9 \u00b6 \u57fa\u4e8e\u4e0a\u8ff0\u91cf\u5316\u7684\u7b56\u7565\u548c\u65b9\u6cd5\uff0c\u9700\u8981\u4e3aTensor\u63d0\u4f9b\u5982\u4e0b\u4fe1\u606f\uff1a Tensor\u7684\u540d\u5b57\uff08name\uff09[str] \u7b97\u5b50\u7c7b\u578b\u63d0\u4f9b\u5bf9\u5e94\u6570\u91cf\u7684min\uff0cmax\u3002[list] \u91cf\u5316bit\u4f4d\u3002[int] \u5e38\u91cfTensor\u6570\u636e\uff08data\uff09\uff08\u53ef\u9009\uff09[numpy.ndarray] \u4e0b\u8868\u5c55\u793a\u4e86\u5bf9\u5e94\u7684\u53c2\u6570\u65b9\u5f0f\uff0c\u6574\u4e2a\u53c2\u6570\u4e3alist\uff0c\u5176\u4e2d\u6bcf\u4e2aitem\u662f\u4e00\u4e2adict\uff0c\u5305\u542b\u4e0a\u8ff0\u4fe1\u606f\u3002 [ { \"name\" : \"FeatureExtractor/MobilenetV2/Conv2d_0/weights\" , \"min\" : [ - 4.555312 , - 2.876907 , - 1.234419 ], \"max\" : [ 7.364561 , 3.960804 , 6.0 ], \"bit\" : 8 }, { ... }, ... ] \u793a\u4f8bSGS_IPU_SDK/Scripts/examples/sim_calibrator.py\u4e2d\u5df2\u5b8c\u6210\u4e86\u53c2\u6570\u5bfc\u5165\uff0c\u53ef\u4ee5\u63d0\u4f9bjson\u548cpkl\u6587\u4ef6\u7684\u8bfb\u53d6\u548c\u5bfc\u5165\u3002 3.4.3.2.1 \u91cf\u5316\u6a21\u578b\u91cf\u5316\u53c2\u6570\u5bfc\u51fa\u5de5\u5177 \u00b6 \u91cf\u5316\u6a21\u578b\u91cf\u5316\u53c2\u6570\u5bfc\u51fa\u5de5\u5177\u4f4d\u7f6e SGS_IPU_SDK/Scripts/examples/save_quant_param.py \u4f7f\u7528\u793a\u4f8b\uff1a --output_mode \u53c2\u6570\u652f\u6301JSON\u6216Pickle\u683c\u5f0f\u91cf\u5316\u53c2\u6570\u6570\u636e\u7684\u5bfc\u51fa\u3002 python3 save_quant_param.py \\ -m fixed.sim \\ --output_mode {JSON,Pickle} 3.4.3.3. \u5bfc\u5165\u91cf\u5316\u6570\u636e\u6d41\u7a0b \u00b6 \u4e3a\u4e86\u517c\u5bb9\u539f\u6709\u91cf\u5316\u6d41\u7a0b\uff0c\u539f\u6709\u91cf\u5316\u6240\u91c7\u7528\u7684\u7b56\u7565\u4f9d\u7136\u8fdb\u884c\u3002 \u539f\u59cb\u6a21\u578b\u5728\u8f6c\u6210SGS_Float\u6a21\u578b\u4ee5\u540e\uff0c\u4e00\u4e9b\u7b97\u5b50\u4f1a\u88ab\u5408\u5e76\u548c\u4f18\u5316\uff0c\u8ba1\u7b97\u56fe\u4e0e\u539f\u6846\u67b6\u7684\u6a21\u578b\u6709\u8f83\u5927\u5dee\u5f02\u3002\u6240\u63d0\u4f9b\u7684\u91cf\u5316\u6587\u4ef6\u5185\u5bb9\u9700\u57fa\u4e8e\u5df2\u8f6c\u6210\u7684SGS_Float\u6a21\u578b\u9488\u5bf9\u6027\u8c03\u6574\uff0c\u5982Tensor\u540d\u79f0\u7b49\u4fe1\u606f\u3002 \u4e3a\u65b9\u4fbf\u4fee\u6539\u88ab\u5408\u5e76\u548c\u4f18\u5316\u7684\u5c42\uff0c\u53ef\u4ee5\u4f7f\u7528calibrator_custom.calibrator\u7684get_tensor_details\u65b9\u6cd5\u83b7\u53d6Tensor\u7684\u57fa\u672c\u4fe1\u606f\u3002\u53ef\u4ee5\u83b7\u5f97\u6bcf\u4e2aTensor\u7684name\uff0cshape\uff0cdtype\uff0cqtype\u4fe1\u606f\u3002 \u8f6c\u6362\u597d\u7684fixed\u6a21\u578b\u53ef\u4ee5\u4f7f\u7528calibrator_custom.fixed_simulator\u7684get_tensor_details\u65b9\u6cd5\u83b7\u53d6Tensor\u7684\u57fa\u672c\u4fe1\u606f\uff0c\u53ef\u4ee5\u83b7\u5f97\u6bcf\u4e2aTensor\u7684name\uff0cshape\uff0cmin\uff0cmax\uff0cquantization\uff0cdtype\u4fe1\u606f\u3002 \u6839\u636e\u6a21\u578bTensor\u4fe1\u606f\uff0c\u66f4\u65b0\u539f\u59cb\u6a21\u578b\u7684\u91cf\u5316\u6587\u4ef6\u540e\uff0c\u5373\u53ef\u5bfc\u5165\u91cf\u5316\u6570\u636e\u6587\u4ef6\u3002 \u89e3\u6790\u5b8c\u91cf\u5316\u6587\u4ef6\u540e\uff0c\u4f1a\u5339\u914d\u5df2\u6709\u91cf\u5316\u4fe1\u606f\u4e0e\u5bfc\u5165\u7684\u91cf\u5316\u4fe1\u606f\u3002\u4f18\u5148\u4f7f\u7528\u5bfc\u5165\u7684\u91cf\u5316\u4fe1\u606f\uff0c\u4f46\u4e0d\u6392\u9664\u5728\u5408\u5e76\u65f6\u7531\u4e8e\u5bfc\u5165\u4fe1\u606f\u7684\u4e0d\u5408\u7406\u800c\u653e\u5f03\u4f7f\u7528\u3002 3.5. torch_calibrator \u00b6 torch_calibrator\u5de5\u5177\u7684\u4f4d\u7f6e\u5728 SGS_IPU_SDK/Scripts/calibrator/torch_calibrator.py \u3002 torch_calibrator\u662f\u57fa\u4e8ePytorch\u5f00\u53d1\u7684\u65b0\u4e00\u4ee3\u91cf\u5316\u5de5\u5177\uff0c\u4e0e\u65e7\u5de5\u5177\u94fe\u76f8\u6bd4\uff0c\u6709\u4ee5\u4e0b\u7279\u6027\uff1a \u652f\u6301\u4f7f\u7528GPU\uff0c\u540c\u7b49\u7ea7\u7684\u7b97\u6cd5\u5728GPU\u73af\u5883\u4e0b\u91cf\u5316\u901f\u5ea6\u66f4\u5feb\uff08\u9700\u914d\u5408\u4f7f\u7528Nvidia\u00ae GPU Docker\uff09\uff1b \u652f\u63014/8bit\u6df7\u5408\u91cf\u5316\u7b97\u6cd5\uff0c\u5bf9\u4e8e\u6709\u6761\u4ef6\u7684\u6a21\u578b\u57288bit\u91cf\u5316\u7684\u57fa\u7840\u4e0a\u7ee7\u7eed\u5411\u4e0b\u538b\u7f29\uff0c\u8fdb\u4e00\u6b65\u63d0\u9ad8\u8fd0\u884c\u6548\u7387\uff1b \u652f\u6301\u66f4\u590d\u6742\u7684\u91cf\u5316\u6807\u5b9a\u7b97\u6cd5\uff0c\u91cf\u5316\u7cbe\u5ea6\u8fdb\u4e00\u6b65\u5f97\u5230\u63d0\u5347\uff0c\u5bf9\u5c0f\u6a21\u578b\uff08mobilenet\u7cfb\u5217\u3001shufflenet\u7cfb\u5217\u3001nanodet\u7cfb\u5217\u7b49\uff09\u63d0\u5347\u6548\u679c\u66f4\u4e3a\u660e\u663e\u3002 torch_calibrator\u662f\u5bf93.1 calibrator\u5de5\u5177\u7684\u8865\u5145\u3002\u5f53\u6a21\u578b\u53c2\u6570\u91cf\u8f83\u5c0f\uff0c\u4f7f\u75283.1 calibrator\u5de5\u5177\u65e0\u6cd5\u8fbe\u5230\u6ee1\u610f\u7684\u7cbe\u5ea6\u65f6\uff1b\u6216\u8005\u6a21\u578b\u53c2\u6570\u91cf\u8f83\u5927\uff0c\u671f\u5f85\u4f7f\u75284bit\u91cf\u5316\u51cf\u5c0f\u6a21\u578b\u5927\u5c0f\uff0c\u53ef\u4ee5\u4f7f\u7528torch_calibrator\u5de5\u5177\u3002 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 torch_calibrator.py \\ -i ilsvrc2012_calibration_set100 \\ -m caffe_mobilenet_v2_float.sim \\ --input_config input_config.ini \\ --quant_config quant_config.yaml \\ -n caffe_mobilenet_v2.py \\ -q Q2 3.5.1. \u53c2\u6570\u8bf4\u660e \u00b6 -i , --image : \u6807\u5b9a\u6570\u636e\u96c6\u56fe\u50cf\u8def\u5f84\uff0c100\u5f20\u8bad\u7ec3\u56fe\u7247\u3002(\u5fc5\u9009) -m , --model : \u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002(\u5fc5\u9009) --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\u3002(\u5fc5\u9009) --quant_config : \u91cf\u5316\u53c2\u6570(yaml\u683c\u5f0f)\u6587\u4ef6\u8def\u5f84\uff0c\u540e\u9762\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\u8be5\u6587\u4ef6\u7684\u914d\u7f6e\u65b9\u6cd5\u548c\u7528\u9014\u3002(\u5fc5\u9009) -n , --preprocess : \u6a21\u578b\u9884\u5904\u7406\u6587\u4ef6\uff08py\u6587\u4ef6\uff09\u8def\u5f84\u3002(\u5fc5\u9009) -q , --q_mode : \u91cf\u5316\u9009\u9879\uff0c\u540e\u9762\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\u3002(\u5fc5\u9009) -o , --ouptut : \u6a21\u578b\u8f93\u51fa\u8def\u5f84\u3002\u6307\u5b9a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u4f4d\u7f6e\uff1a\u6307\u5b9a\u5230\u6587\u4ef6\u5939\uff0c\u5c06\u81ea\u52a8\u4ee5\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u524d\u7f00\u547d\u540d\uff0c\u540e\u63a5fixed.sim\uff1b\u6307\u5b9a\u5230\u5177\u4f53\u8def\u5f84\u548c\u6587\u4ef6\u540d\uff0c\u5c06\u4ee5\u6307\u5b9a\u8def\u5f84\u548c\u6587\u4ef6\u540d\u547d\u540d\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff1b\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\uff0c\u5c06\u4ee5\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u50a8\u5b58\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u3002 --cal_batchsize : \u6807\u5b9a\u6570\u636e\u96c6\u7684batchsize\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u7b49\u4e8e\u6570\u636e\u96c6\u4e2a\u6570\uff1b\u5982\u679c\u6807\u5b9a\u6570\u636e\u96c6\u5341\u5206\u5e9e\u5927\u6216\u6a21\u578b\u7ed3\u6784\u7279\u6b8a\u65e0\u6cd5\u5728batchsize != 1\u7684\u60c5\u51b5\u4e0b\u63a8\u7406\uff0c\u5219\u53ef\u4ee5\u8bbe\u7f6e\u8fd9\u4e2a\u53c2\u6570\u3002\u9ed8\u8ba4\u4e3a100\u3002 3.5.2. \u91cf\u5316\u9009\u9879 \u00b6 \u91cf\u5316\u7b49\u7ea7 \u91cf\u5316\u7279\u8272\u8bf4\u660e \u91cf\u5316\u5b50\u9009\u9879 \u8be6\u7ec6\u8bf4\u660e Q1 \u4ec5\u505amin\u548cmax\u7684\u6807\u5b9a\uff0c\u4e0d\u4f1a\u4f18\u5316\u5377\u79ef\u53c2\u6570\uff0c\u901f\u5ea6\u6574\u4f53\u8f83\u5feb\uff0c\u9002\u7528\u4e8e\u6ca1\u6709GPU\u7684\u73af\u5883\uff0c\u5982\u679c\u6709GPU\u5219\u53ef\u4ee5\u52a0\u5feb\u6807\u5b9a\u901f\u5ea6\uff1b\u7cbe\u5ea6\u65b9\u9762\u6574\u4f53\u6301\u5e733.1 calibrator\u91cf\u5316\u7684\u7cbe\u5ea6\uff1b Q10 \u516816bit\u91cf\u5316\uff0c\u91cf\u5316\u7cbe\u5ea6\u4e0efloat32\u6a21\u578b\u57fa\u672c\u4e00\u81f4 Q1/Q11 \u51688bit\u5feb\u901f\u91cf\u5316\uff0c\u91cf\u5316\u7cbe\u5ea6\u4e0eL2\u6a21\u5f0f\u76f8\u5f53 Q12 \u81ea\u9002\u5e948bit\u548c16bit\u91cf\u5316\uff0c\u91cf\u5316\u7cbe\u5ea6\u4e0eL5\u6a21\u5f0f\u76f8\u5f53 Q13 4/8bit(8/16bit \u53ef\u6839\u636e\u914d\u7f6e\u6587\u4ef6\u66f4\u6539\uff0c\u9ed8\u8ba44/8bit)\u6df7\u5408\u91cf\u5316\uff0c\u5bf9\u4e8e\u6709\u8fdb\u4e00\u6b65\u538b\u7f29\u9700\u6c42\u7684\u6a21\u578b\u53ef\u4ee5\u9009\u7528\u6b64\u65b9\u5f0f\u3002 Q2 \u91cf\u5316\u7b49\u7ea7\u4f1a\u5bf9\u6a21\u578b\u8fdb\u884c\u9010\u5c42\u4f18\u5316\uff0c\u4f4ebit\u60c5\u51b5\u4e0b\u7cbe\u5ea6\u63d0\u5347\u660e\u663e\uff0c\u5728\u8f7b\u91cf\u7ea7\u6a21\u578b\u6548\u679c\u66f4\u4e3a\u663e\u8457\uff0c\u9002\u7528\u4e8e\u6709\u5355\u5757GPU\u7684\u73af\u5883\uff1b\u7cbe\u5ea6\u4e0a\u6574\u4f53\u4f18\u4e8eQ1 Q20 \u516816bit\u91cf\u5316\uff0c\u91cf\u5316\u7cbe\u5ea6\u4e0efloat32\u6a21\u578b\u57fa\u672c\u4e00\u81f4 Q21 \u51688bit\u91cf\u5316\uff0c\u5728\u4e00\u4e9b\u5c0f\u6a21\u578b\u4e0a\u80fd\u591f\u83b7\u5f97\u66f4\u597d\u7684\u6548\u679c Q2/Q22 \u81ea\u9002\u5e94\u9009\u62e9\u91cf\u5316\u65b9\u5f0f\uff0c\u662f\u76ee\u524d\u6548\u679c\u6700\u597d\u7684\u91cf\u5316\u65b9\u5f0f\uff0c\u751f\u6210\u7684\u5b9a\u70b9\u6a21\u578b\u4e3a\u51688bit\u91cf\u5316\u6216\u63a5\u8fd1\u51688\u76848/16\u6df7\u5408\u91cf\u5316\u3002 Q23 4/8bit\uff088/16bit \u53ef\u6839\u636e\u914d\u7f6e\u6587\u4ef6\u66f4\u6539\uff0c\u9ed8\u8ba44/8bit\uff09\u6df7\u5408\u91cf\u5316\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u538b\u7f29\u6a21\u578b\uff0c\u538b\u7f29\u7a0b\u5ea6\u548c\u7cbe\u5ea6\u5747\u4f18\u4e8eQ13 3.5.3. \u91cf\u5316\u53c2\u6570(yaml\u683c\u5f0f)\u6587\u4ef6 \u00b6 QUANT_CONFIG : retrain_iter_num : 40 device : 'cuda:0' mixed_precisions : [ 4 , 8 ] use_preset_min_max_bit : 0 mp_rate : 0.6 PRESET_MIN_MAX_BIT : # preset tensor min/max and bit [ { name : \"126\" , min : null , max : null , bit : 8 }, { name : \"layer1.0.conv1.weight\" , min : null , max : null , bit : 8 } ] QUANT_CONFIG retrain_iter_num\uff1a\u6bcf\u5c42\u91cd\u8bad\u7ec3\u8fed\u4ee3\u6b21\u6570\uff0c\u5982\u679c\u8be5\u9879\u4e0d\u5199\u5219\u9ed8\u8ba4\u4e3a40\uff0c\u90e8\u5206\u8f7b\u91cf\u7ea7\u6a21\u578b\u53ef\u80fd\u9700\u8981\u66f4\u591a\u7684\u8fed\u4ee3\u6b21\u6570\u3002 device\uff1a\u6307\u5b9aGPU/CPU\uff0c\u5982\u679c\u4e0d\u7ed9\u5219\u4f1a\u81ea\u52a8\u5bfb\u627e\u7a7a\u95f2\u7684GPU\u3002\u82e5\u65e0GPU\u5219\u4f1a\u81ea\u52a8\u8c03\u7528CPU\u3002\u6307\u5b9a'cpu'\u4f1a\u4f7f\u7528CPU\u8fd0\u7b97\u3002 use_preset_min_max_bit\uff1a\u662f\u5426\u4f7f\u7528\u624b\u5de5\u9884\u8bbe\u7684min/max/bit\u4fe1\u606f\uff1b\u5982\u679c\u8be5\u9879\u4e3a1\uff0c\u5219\u4f1a\u4f7f\u7528\u4e0b\u65b9\u624b\u52a8\u8bbe\u7f6e\u7684\u4fe1\u606f\uff1b\u5982\u679c\u8be5\u9879\u4e3a0\u6216\u4e0d\u5199\uff0c\u5219\u4e0d\u4f1a\u4f7f\u7528\u4e0b\u65b9\u7684\u4fe1\u606f\u3002 mixed_precisions: \u6df7\u5408\u91cf\u5316\u6a21\u5f0f\uff0c\u53ef\u9009[4, 8]\uff0c[8, 16]\u3002\u5982\u679c\u4e0d\u586b\uff0c\u9ed8\u8ba4\u662f[4, 8]\u3002\u4ec5\u5728Q13\u3001Q23\u7684\u6a21\u5f0f\u751f\u6548\u3002 mp_rate\uff1a\u6df7\u5408\u91cf\u5316\u6307\u5b9a\u7684\u538b\u7f29\u7387\uff0c\u5982\u672a\u6307\u5b9a\u6216\u4e0d\u5728[0.5, 1]\u7684\u8303\u56f4\u5185\uff0c\u5219\u4f1a\u81ea\u52a8\u63a8\u8350\u4e00\u4e2a\u538b\u7f29\u7387\u3002\u8be5\u53c2\u6570\u4f1a\u914d\u5408 mixed_precisions \uff0c\u751f\u62104/8bit\u62168/16bit\u7684\u6a21\u578b\u3002\u4ec5\u5728Q13\u3001Q23\u7684\u6a21\u5f0f\u4e0b\u751f\u6548\u3002 \u5982\u679c\u81ea\u52a8\u63a8\u8350\u7684\u538b\u7f29\u7387\u6ee1\u8db3\u7cbe\u5ea6\u8981\u6c42\uff0c\u53ef\u901a\u8fc7\u4ee50.05\u6b65\u957f\u4e0b\u8c03\u538b\u7f29\u7387\uff0c\u6ee1\u8db3\u7cbe\u5ea6\u8981\u6c42\u7684\u540c\u65f6\u63d0\u5347\u6a21\u578b\u6027\u80fd\u3002 \u5982\u679c\u81ea\u52a8\u63a8\u8350\u7684\u538b\u7f29\u7387\u4e0d\u6ee1\u8db3\u7cbe\u5ea6\u8981\u6c42\uff0c\u53ef\u901a\u8fc7\u4ee50.05\u6b65\u957f\u4e0a\u8c03\u538b\u7f29\u7387\uff0c\u63d0\u5347\u6a21\u578b\u91cf\u5316\u7cbe\u5ea6\u3002 PRESET_MIN_MAX_BIT\uff1a\u53ef\u4ee5\u9884\u8bbe\u67d0\u4e2aTensor\u7684min/max/bit\u4fe1\u606f\uff0c\u8be6\u89c13.4.3\u8282 \u91cf\u5316\u7b56\u7565\u548c\u65b9\u6cd5 \uff0cTensor\u540d\u5b57\u4ee5float.sim\u6a21\u578b\u4e2d\u4e3a\u51c6\u3002\u9700\u8981\u5c06 use_preset_min_max_bit \u8bbe\u4e3a1\u3002","title":"Calibrate"},{"location":"module/User_Guide/Common/Calibrate.html#31","text":"Calibrator\u5de5\u5177\u7684\u4f4d\u7f6e\u5728 SGS_IPU_SDK/Scripts/calibrator/calibrator.py \u3002 \u8be5\u5de5\u5177\u662f\u5c06SigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u4e3aSigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u3002 \u5728SGS_IPU_SDK \u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK source cfg_env.sh \u8fdb\u5165\u5230\u8be5\u5de5\u5177\u76ee\u5f55\uff0c\u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 calibrator.py \\ -i ~/SGS_Models/resource/detection/coco2017_calibration_set32 \\ -m ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1_float.sim \\ -n ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1.py \\ --input_config ~/SGS_Models/tensorflow/ssd_mobilenet_v1/input_config.ini \\ --num_process 20 \u6216\u8005\u53ef\u4ee5\u4f7f\u7528\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\uff1a python3 calibrator.py \\ -i ~/SGS_Models/resource/detection/file.list \\ -m ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1_float.sim \\ -n ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1.py \\ --input_config ~/SGS_Models/tensorflow/ssd_mobilenet_v1/input_config.ini \\ --num_process 20 \u5bf9\u8be5\u5de5\u5177\u53c2\u6570\u7684\u5177\u4f53\u8bf4\u660e\u5982\u4e0b\uff1a","title":"3.1. \u4f7f\u7528\u65b9\u6cd5"},{"location":"module/User_Guide/Common/Calibrate.html#311","text":"-i , --image : \u56fe\u7247\u6587\u4ef6\u6216\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\u6216 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u3002 -m , --model : \u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 \u5177\u4f53\u8bbe\u7f6e\u65b9\u6cd5\u89c1 [input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e]2.2. input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e). -n , --preprocess : \u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4e0e\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\u76f8\u5173\uff0c\u8be6\u89c1[3.2. \u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5]\u3002 \u4e5f\u53ef\u4ee5\u5b8c\u6210\u524d\u5904\u7406\u6587\u4ef6\u914d\u7f6e\u540e\uff0c\u7ed9\u5b9a\u524d\u5904\u7406\u6587\u4ef6\u8def\u5f84\u3002 Please Note: \u82e5\u6a21\u578b\u4e3a \u591a\u8f93\u5165 \u65f6\uff0c -n,--preprocess \u53c2\u6570\u7528\u6cd5\u9700\u8981\u591a\u4e2a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4f8b\u5982 -n preprocess1.py,preprocess2.py \u6216\u8005 --preprocess preprocess1.py,preprocess2.py -i/--image \u53c2\u6570\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\uff1a \u7f51\u7edc\u6a21\u578b\u4e3a\u5355\u8f93\u5165\u65f6\uff1a ~/SGS_IPU_SDK/image_test/2007000364.jpg ~/SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp ... \u7f51\u7edc\u6a21\u578b\u4e3a\u591a\u8f93\u5165\u65f6\uff1a ~/SGS_IPU_SDK/image_test/2007000364.jpg,~/SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp ~/SGS_IPU_SDK/image_test/2007000365.jpg,~/SGS_IPU_SDK/image_test/ILSVRC2012_test_00000003.bmp ...","title":"3.1.1 \u5fc5\u9009\u53c2\u6570"},{"location":"module/User_Guide/Common/Calibrate.html#312","text":"-o , --output : \u6a21\u578b\u8f93\u51fa\u8def\u5f84\u3002\u6307\u5b9a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u6570\u636e\u4f4d\u7f6e\uff1a\u6307\u5b9a\u5230\u6587\u4ef6\u5939\uff0c\u5c06\u81ea\u52a8\u4ee5\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u524d\u7f00\u547d\u540d\uff0c\u540e\u63a5fixed.sim\uff1b\u6307\u5b9a\u5230\u5177\u4f53\u8def\u5f84\u548c\u6587\u4ef6\u540d\uff0c\u5c06\u4ee5\u6307\u5b9a\u8def\u5f84\u548c\u6587\u4ef6\u540d\u547d\u540d\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff1b\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\uff0c\u5c06\u4ee5\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u50a8\u5b58\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u3002 --num_process : \u8fdb\u7a0b\u6570\uff0c\u8fd0\u884c\u540c\u65f6\u8fd0\u884c\u7684\u8fdb\u7a0b\u6570\u3002\uff08\u53ef\u9009\u53c2\u6570\uff0c\u4e0d\u52a0\u8be5\u53c2\u6570\u9ed8\u8ba4\u4e3a10\u4e2a\u8fdb\u7a0b\uff09\u3002 --quant_level : \u9009\u62e9\u91cf\u5316\u7b49\u7ea7\uff1a[L1, L2, L3, L4, L5]\u3002\u9ed8\u8ba4L5\u91cf\u5316\u7b49\u7ea7\uff0c\u7b49\u7ea7\u8d8a\u9ad8\uff0c\u91cf\u5316\u7cbe\u5ea6\u8d8a\u9ad8\uff0c\u91cf\u5316\u901f\u5ea6\u4f1a\u76f8\u5e94\u53d8\u6162\u3002\u5404\u91cf\u5316\u7b49\u7ea7\u8bf4\u660e\uff1a L1 : \u91c7\u7528\u6700\u5927\u6700\u5c0f\u503c\u5feb\u901f\u5bf9\u6bd4\u6570\u636e\u91cf\u5316\uff0c\u901f\u5ea6\u8f83\u5feb\u3002 L2 : \u91c7\u7528\u5feb\u901f\u5bf9\u6bd4\u6570\u636e\u91cf\u5316\u6743\u91cd\u6570\u636e\u3002 L3 : \u5bf9\u7edf\u8ba1\u4fe1\u606f\u505a\u8fdb\u4e00\u6b65\u5206\u6790\uff0c\u8fd1\u4f3c\u62df\u5408\u539f\u6709\u6570\u636e\u5206\u5e03\u3002 L4 : \u8fd1\u4f3c\u62df\u5408\u6743\u91cd\u6570\u636e\u5206\u5e03\uff0c\u5e76\u5efa\u8bae\u5347\u7ea7\u67d0\u4e9b\u5377\u79ef\u4e3a16bit\u91cf\u5316\u3002 L5 : \u91c7\u7528\u9ad8\u7cbe\u5ea6\u6570\u636e\u5206\u6790\u65b9\u6cd5\uff0c\u6781\u5927\u9650\u5ea6\u62df\u5408\u539f\u6709\u6570\u636e\u5206\u5e03\uff0c\u5e76\u5efa\u8bae\u5347\u7ea7\u67d0\u4e9b\u5377\u79ef\u4e3a16bit\u91cf\u5316\u3002","title":"3.1.2 \u53ef\u9009\u53c2\u6570"},{"location":"module/User_Guide/Common/Calibrate.html#313","text":"\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u6210\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u9700\u898130\u5f20\u5de6\u53f3\u8bad\u7ec3\u56fe\u7247\u7528\u6765\u5206\u6790\u548c\u91cf\u5316\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u7684\u6570\u636e\uff0c\u56e0\u6b64\u5728\u8f6c\u6362\u4e2d\uff0c -i/--image \u53c2\u6570\u540e\u5e94\u63a5\u56fe\u7247\u6587\u4ef6\u5939\u7684\u8def\u5f84\u3002\u5f53\u7136\uff0c\u5982\u679c -i/--image \u53c2\u6570\u7ed9\u5b9a\u5355\u5f20\u56fe\u7247\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u4f9d\u7136\u53ef\u4ee5\u8f6c\u6362\u4e3a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff0c\u4f46\u662f\u5176\u6a21\u578b\u7cbe\u5ea6\u53ef\u80fd\u4f1a\u6536\u5230\u5f71\u54cd\u3002\u53e6\u5916\uff0c\u7531\u4e8e\u5bf9\u7cbe\u5ea6\u8981\u6c42\u4e0d\u540c\uff0c\u5728\u8f6c\u6362\u7f51\u7edc\u4e2d\u5728input_config.ini\u6587\u4ef6\u4e2d\u53ef\u4ee5\u9488\u5bf9\u5377\u79ef\u914d\u7f6e\u4e0d\u540c\u7684\u91cf\u5316\u4fe1\u606f\uff0c\u4ece\u800c\u83b7\u5f97\u7cbe\u5ea6\u548c\u901f\u5ea6\u7684\u5e73\u8861\u3002 calibrator\u5de5\u5177\u4f1a\u5bfb\u627e\u7cfb\u7edf\u53d8\u91cf\u4ece\u800c\u83b7\u5f97\u5bf9\u5e94\u9636\u6bb5\u4efb\u52a1\u6240\u9700\u5de5\u5177\u8def\u5f84\uff0c\u56e0\u6b64\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u53c2\u6570 -t/--tool \u4e0d\u7528\u6307\u5b9a\u76f8\u5173\u5de5\u5177\u7684\u4f4d\u7f6e\u3002 \u4f7f\u7528calibrator\u5c06\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u4e3a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u65f6\uff0c\u4f1a\u5728\u8fd0\u884c\u76ee\u5f55\u4e0b\u4ea7\u751flog\u76ee\u5f55\uff0clog\u76ee\u5f55\u4e0b\u7684tensor_min_max.txt\u6587\u4ef6\u8bb0\u5f55\u4e86\u7f51\u7edc\u7684\u6bcf\u5c42\u8f93\u5165\u548c\u8f93\u51fa\u7684\u6700\u5927\u4e0e\u6700\u5c0f\u503c\uff0c\u5c06\u5728\u4e4b\u540e\u5206\u6790\u6570\u636e\u65f6\u6709\u7528\u3002log\u76ee\u5f55\u4e0b\u7684\u5185\u5bb9\u4f1a\u5728\u4e0b\u4e00\u6b21\u4f7f\u7528calibrator\u65f6\u5220\u9664\uff0c\u8bf7\u6ce8\u610f\u4fdd\u5b58\u3002","title":"3.1.3 \u6ce8\u610f\u4e8b\u9879"},{"location":"module/User_Guide/Common/Calibrate.html#32","text":"\u7531\u4e8e\u4e0d\u540c\u7f51\u7edc\u6a21\u578b\u7684\u524d\u5904\u7406\u65b9\u5f0f\u4e0d\u5c3d\u76f8\u540c\uff0c\u4e3a\u4e86\u80fd\u591f\u5728\u8f6c\u6362\u7f51\u7edc\u65f6\u5c3d\u53ef\u80fd\u51cf\u5c0f\u7cbe\u5ea6\u7684\u4e22\u5931\uff0c\u5e94\u8be5\u4f7f\u7528\u4e0e\u8bad\u7ec3\u76f8\u540c\u7684\u56fe\u7247\u524d\u5904\u7406\u65b9\u5f0f\uff0c\u6bcf\u79cd\u524d\u5904\u7406\u65b9\u5f0f\u9700\u72ec\u7acb\u7f16\u5199python\u6587\u4ef6\u3002 \u4ee5\u4e0b\u4e24\u79cd\u65b9\u5f0f\u4fdd\u5b58\u524d\u5904\u7406Python\u6587\u4ef6\u5747\u53ef\u88ab\u8c03\u7528\uff1a \u8bf7\u5c06\u6587\u4ef6\u4fdd\u5b58\u5230 SGS_IPU_SDK/Scripts/calibrator/preprocess \u6587\u4ef6\u5939\u5185\uff0c\u5e76\u5728preprocess_method/ init .py \u6587\u4ef6\u4e2d\u589e\u52a0\u6587\u4ef6\u540d\u79f0\u3002\u5728\u4f7f\u7528calibrator\u6216simulator\u65f6\uff0c -n/--preprocess \u53c2\u6570\u4e3a\u7f16\u5199\u7684\u6587\u4ef6\u540d\u79f0\uff0c\u4e0d\u9700\u8981\u6307\u5b9a\u7f16\u5199\u6587\u4ef6\u7684\u8def\u5f84\u3002 -n/--preprocess \u53c2\u6570\u4e3a\u524d\u5904\u7406Python\u7684\u6587\u4ef6\u8def\u5f84\u3002 \u4e0b\u9762\u4ee5caffe_resnet18\u7f51\u7edc\u4e3a\u4f8b\uff0c\u7f16\u5199\u56fe\u7247\u524d\u5904\u7406\u6587\u4ef6\u3002 \u7f16\u5199\u56fe\u7247\u5904\u7406\u51fd\u6570\uff08\u51fd\u6570\u540d\u79f0\u4e0d\u9650\uff09\uff0c\u8fd4\u56denp.array \u683c\u5f0f\u7684\u56fe\u7247\u6570\u636e\uff0c\u51fd\u6570\u5fc5\u987b\u5305\u542b2\u4e2a\u53c2\u6570\uff1a \u56fe\u7247\u8def\u5f84 \u5f52\u4e00\u5316\u6807\u8bb0\uff08norm=True\uff09 \u5f52\u4e00\u5316\u6807\u8bb0\u662f\u4e3a\u4e86\u533a\u5206\u7f51\u7edc\u6a21\u578b\u662f\u5426\u662f\u6d6e\u70b9\u6a21\u578b\u3002\u56e0\u4e3a\u5728\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u9636\u6bb5\uff0c\u56fe\u7247\u7684\u5f52\u4e00\u5316\u9700\u8981\u5728\u9001\u8fdb\u7f51\u7edc\u524d\u5904\u7406\u597d\u3002\u4f46\u662f\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u548c\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u5df2\u7ecf\u5305\u542b\u4e86input_config.ini\u6587\u4ef6\u7684\u8bbe\u7f6e\u4fe1\u606f\uff0c\u80fd\u591f\u5c06\u56fe\u7247\u6570\u636e\u81ea\u884c\u505a\u5f52\u4e00\u5316\u5904\u7406\uff0c\u56e0\u6b64\u9001\u8fdb\u7f51\u7edc\u6a21\u578b\u7684\u6570\u636e\u4e0d\u9700\u8981\u505a\u5f52\u4e00\u5316\uff0c\u8fd9\u4e0e\u5728SigmaStar\u786c\u4ef6\u4e0a\u5904\u7406\u65b9\u5f0f\u76f8\u540c\u3002 import cv2 import numpy as np def get_image ( img_path , resizeH = 224 , resizeW = 224 , resizeC = 3 , norm = True , meanB = 104.0 , meanG = 117.0 , meanR = 123.0 , std = 1.0 , rgb = False , nchw = False ): img = cv2 . imread ( img_path , flags =- 1 ) if img is None : raise FileNotFoundError ( 'No such image: {} ' . format ( img_path )) try : img_dim = img . shape [ 2 ] except IndexError : img_dim = 1 if img_dim == 4 : img = cv2 . cvtColor ( img , cv2 . COLOR_BGRA2BGR ) elif img_dim == 1 : img = cv2 . cvtColor ( img , cv2 . COLOR_GRAY2BGR ) img_float = img . astype ( 'float32' ) img_norm = cv2 . resize ( img_float , ( resizeW , resizeH ), interpolation = cv2 . INTER_LINEAR ) if norm and ( resizeC == 3 ): img_norm = ( img_norm - [ meanB , meanG , meanR ]) / std img_norm = img_norm . astype ( 'float32' ) elif norm and ( resizeC == 1 ): img_norm = ( img_norm - meanB ) / std img_norm = img_norm . astype ( 'float32' ) else : img_norm = np . round ( img_norm ) . astype ( 'uint8' ) if rgb : img_norm = cv2 . cvtColor ( img_norm , cv2 . COLOR_BGR2RGB ) if nchw : # NCHW img_norm = np . transpose ( img_norm , axes = ( 2 , 0 , 1 )) return np . expand_dims ( img_norm , 0 ) def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm ) \u4f7f\u7528image_preprocess\u51fd\u6570\u8c03\u7528\uff0c\u6b64\u5904\u52a1\u5fc5\u6309\u7167\u8be5\u65b9\u6cd5\u4e66\u5199\u3002 def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm ) \u4fdd\u5b58\u4e3a caffe_resnet18.py. \u5728SGS_IPU_SDK/Scripts/calibrator/preprocess_method/ init .py \u6587\u4ef6\u4e2d\u6dfb\u52a0\u521a\u521a\u7f16\u5199\u7684python\u6587\u4ef6 _all_ = [ 'caffe_mobilenet_v2' , 'caffe_resnet18' , 'caffe_resnet50_conv' , 'mobilenet_v1' ] \u4f7f\u7528calibrator\u6216simulator\u65f6 -n/--preprocess \u53c2\u6570\u4e3acaffe_resnet18 \u5373\u53ef\u8c03\u7528\u521a\u521a\u7f16\u5199\u7684\u56fe\u7247\u524d\u5904\u7406\u6587\u4ef6\u3002 \u5982\u679c\u4e0d\u5728SGS_IPU_SDK/Scripts/calibrator/preprocess_method/ init .py \u6587\u4ef6\u4e2d\u589e\u52a0\uff0c -n/--preprocess \u53c2\u6570\u4e3acaffe_resnet18.py\u6587\u4ef6\u8def\u5f84\uff0c\u4e5f\u53ef\u4ee5\u4e3a\u56fe\u7247\u505a\u524d\u5904\u7406\u3002","title":"3.2. \u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5"},{"location":"module/User_Guide/Common/Calibrate.html#33","text":"\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u5230\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u65f6\uff0c\u5377\u79ef\u91cf\u5316\u652f\u6301 UINT8 \u548c INT16 \u4e24\u79cd\u91cf\u5316\u65b9\u5f0f\u3002\u4f7f\u7528calibrator\u65f6\uff0c --quant_level \u9009\u62e9L2\u3001L3\u6216L4\u65f6\u4f1a\u6839\u636e\u7edf\u8ba1\u4fe1\u606f\u81ea\u52a8\u914d\u7f6e\u5377\u79ef\u7684\u91cf\u5316\u65b9\u5f0f\uff0c\u5982\u679c\u9700\u8981\u5f3a\u5236\u6307\u5b9a\uff0c\u6307\u5b9a\u65b9\u5f0f\u5728 [2.2.3 CONV_CONFIG]\u4e2d\u6709\u8bf4\u660e\u3002\u53ef\u5bf9\u67d0\u4e9b\u5377\u79ef\u5c42\u5355\u72ec\u8bbe\u7f6eINT16\u91cf\u5316\uff0c\u6216\u8005\u5bf9\u5168\u90e8\u5377\u79efINT16\u91cf\u5316\uff1b\u4e0d\u8bbe\u7f6e\u65f6\u9ed8\u8ba4\u4f7f\u7528calibrator\u7684\u63a8\u8350\u91cf\u5316\u65b9\u5f0f\u3002","title":"3.3. \u5377\u79ef\u91cf\u5316\u9009\u9879"},{"location":"module/User_Guide/Common/Calibrate.html#34-calibrator_customcalibrator","text":"calibrator_custom.calibrator\u662f\u57fa\u4e8ePython\u7684\u5feb\u901f\u91cf\u5316\u548c\u8f6c\u6362\u6a21\u578b\u7684\u6a21\u5757\u3002\u4f7f\u7528calibrator_custom.calibrator\u53ef\u4ee5\u66f4\u65b9\u4fbf\u7075\u6d3b\u7684\u5bf9\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u8fdb\u884c\u91cf\u5316\u548c\u8f6c\u6362\u3002\u76ee\u524d\u57fa\u4e8e\u7684docker\u73af\u5883\uff0c\u63d0\u4f9bPython3.7\u7684\u9884\u7f16\u8bd1\u7684Python\u6a21\u5757\uff0c\u4f7f\u7528\u65b9\u6cd5\u548c\u76f8\u5173API\u63a5\u53e3\u5982\u4e0b\uff1a import calibrator_custom model_path = './mobilenet_v2_float.sim' input_config_path = './input_config.ini' model = calibrator_custom . calibrator ( model_path , input_config_path ) \u4f7f\u7528 calibrator_custom.calibrator \u65f6\uff0c\u9700\u8981\u7ed9\u5b9afloat.sim\u6a21\u578b\u7684\u8def\u5f84\u548c\u5bf9\u5e94\u7684input_config.ini\u7684\u8def\u5f84\uff0c\u7528\u4e8e\u521b\u5efacalibrator\u7684\u5b9e\u4f8b\u3002\u53c2\u6570\u7ed9\u5b9a\u9519\u8bef\uff0c\u5c06\u65e0\u6cd5\u6210\u529f\u521b\u5efacalibrator\u5b9e\u4f8b\uff0c\u5e76\u8fd4\u56deValueError\u3002","title":"3.4. calibrator_custom.calibrator"},{"location":"module/User_Guide/Common/Calibrate.html#341-calibrator_customcalibrator","text":"get_input_details \u8fd4\u56de\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u4fe1\u606f\uff08list\uff09 input_details = model . get_input_details () >>> print ( input_details ) [{ 'index' : 0 , 'shape' : array ([ 1 , 513 , 513 , 3 ], dtype = int32 ), 'name' : 'sub_7' , 'dtype' : < class ' numpy . float32 '>}] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578b\u8f93\u5165\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a index : \u8f93\u5165Tensor\u5e8f\u53f7 name : \u8f93\u5165Tensor\u540d\u79f0 shape : \u8f93\u5165Tensor\u7684\u5f62\u72b6 dtype : \u8f93\u5165Tensor\u7684\u6570\u636e\u7c7b\u578b get_output_detail \u8fd4\u56de\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u4fe1\u606f\uff08list\uff09 output_details = model . get_output_details () >>> print ( output_details ) [{ 'index' : 0 , 'shape' : array ([ 1 , 257 , 257 , 30 ], dtype = int32 ), 'name' : 'MobilenetV2/Conv/Conv2D' , 'dtype' : < class ' numpy . float32 '>}] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578b\u8f93\u51fa\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a index : \u8f93\u51faTensor\u5e8f\u53f7 name : \u8f93\u51faTensor\u540d\u79f0 shape : \u8f93\u51faTensor\u7684\u5f62\u72b6 dtype : \u8f93\u51faTensor\u7684\u6570\u636e\u7c7b\u578b set_input \u8bbe\u7f6e\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u6570\u636e model . set_input ( 0 , img_data ) \u8f93\u5165\u6570\u636e\uff0c0\u4e3a\u8f93\u5165Tensor\u7684index\uff0c\u53ef\u4ee5\u5728get_input_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230\u3002img_data\u662f\u4e0emodel\u8f93\u5165shape\u548cdtype\u76f8\u540c\u7684numpy.ndarray\u683c\u5f0f\u6570\u636e\uff0c\u9519\u8bef\u7684shape\u6216dtype\uff0c\u5c06\u5bfc\u81f4set_input\u8fd4\u56deValueError\u3002\u5982\u679c\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u53ef\u4ee5\u591a\u6b21\u8c03\u7528set_input\uff0c\u6839\u636eget_input_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230index\u8bbe\u7f6e\u5bf9\u5e94Tensor\u7684\u8f93\u5165\u6570\u636e\u3002 invoke \u6a21\u578b\u8fd0\u884c\u4e00\u6b21 model . invoke () \u8c03\u7528invoke\u524d\u8bf7\u5148\u4f7f\u7528set_input\u8bbe\u7f6e\u8f93\u5165\u6570\u636e\uff0c\u672a\u8c03\u7528set_input\u76f4\u63a5\u8c03\u7528invoke\u4f1a\u8fd4\u56deValueError\u3002 get_output \u83b7\u53d6\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u6570\u636e result = model . get_output ( 0 ) \u83b7\u53d6\u8f93\u51fa\u6570\u636e\uff0c0\u4e3a\u8f93\u51faTensor\u7684index\uff0c\u53ef\u4ee5\u5728get_output_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230\uff0c\u8fd4\u56denumpy.ndarray\u683c\u5f0f\u8f93\u51fa\u6570\u636e\u3002\u5982\u679c\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u51fa\uff0c\u53ef\u4ee5\u591a\u6b21\u8c03\u7528get_output\uff0c\u6839\u636eget_output_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230index\u83b7\u53d6\u5bf9\u5e94Tensor\u7684\u8f93\u51fa\u6570\u636e\u3002 get_tensor_details \u8fd4\u56de\u7f51\u7edc\u6a21\u578b\u6bcf\u4e2aTensor\u7684\u4fe1\u606f\uff08list\uff09 tensor_details = model . get_tensor_details () >>> print ( tensor_details ) [{ 'dtype' : 'FLOAT32' , 'name' : 'MobilenetV2/Conv/Conv2D' , 'qtype' : 'INT16' , 'shape' : array ([ 1 , 257 , 257 , 30 ], dtype = int32 )}, { 'dtype' : 'FLOAT32' , 'name' : 'MobilenetV2/Conv/Conv2D_bias' , 'qtype' : 'INT16' , 'shape' : array ([ 2 , 30 ], dtype = int32 )}, { 'dtype' : 'FLOAT32' , 'name' : 'MobilenetV2/Conv/weights/read' , 'qtype' : 'INT8' , 'shape' : array ([ 30 , 3 , 3 , 3 ], dtype = int32 )}, { 'dtype' : 'FLOAT32' , 'name' : 'sub_7' , 'qtype' : 'UINT8' , 'shape' : array ([ 1 , 513 , 513 , 3 ], dtype = int32 )}] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578bTensor\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a name : Tensor\u540d\u79f0 shape : Tensor\u7684\u5f62\u72b6 dtype : Tensor\u7684\u6570\u636e\u7c7b\u578b qtype : \u5b9a\u70b9\u6a21\u578b\u8be5Tensor\u53ef\u80fd\u7684\u6570\u636e\u7c7b\u578b\uff08quantization type\uff09","title":"3.4.1 calibrator_custom.calibrator\u65b9\u6cd5"},{"location":"module/User_Guide/Common/Calibrate.html#342-calibrator_customsim_calibrator","text":"\u5bf9\u4e8e\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u540c\u65f6\u8f6c\u6362\u65f6\uff0c\u63d0\u4f9bcalibrator_custom.SIM_Calibrator\uff0c\u65b9\u4fbf\u8fdb\u884c\u7b80\u5355\u5b9a\u4e49\u540e\uff0c\u7edf\u4e00\u8f6c\u6362\u3002 calibrator_custom.SIM_Calibrator\u662f\u5df2\u7ecf\u5b9e\u73b0\u597d\u7684class\uff0c\u5f53\u4e2d\u53ea\u6709forward\u65b9\u6cd5\u672a\u5b9e\u73b0\uff0c\u4f7f\u7528\u65f6\u4ec5\u9700\u5b9e\u73b0\u8be5\u65b9\u6cd5\uff0c\u5373\u53ef\u8f6c\u6362\u5b8c\u6210\u3002 \u4e0b\u9762\u4ee5 SGS_IPU_SDK/Scripts/examples/sim_calibrator.py \u4e3a\u4f8b\uff0c\u8bf4\u660ecalibrator_custom.SIM_Calibrator\u7684\u4f7f\u7528\u65b9\u6cd5\uff1a import calibrator_custom class Net ( calibrator_custom . SIM_Calibrator ): def __init__ ( self ): super () . __init__ () self . model = calibrator_custom . calibrator ( model_path , input_config ) def forward ( self , x ): out_details = self . model . get_output_details () self . model . set_input ( 0 , x ) self . model . invoke () result_list = [] for idx in range ( len ( out_details )): result = self . model . get_output ( idx ) result_list . append ( result ) return result_list \u5b9a\u4e49forward\u65b9\u6cd5\uff0cforward\u7684\u53c2\u6570\u4e3a\u6a21\u578b\u8f93\u5165\uff0c\u5982\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u53ef\u589e\u52a0forward\u7684\u53c2\u6570\u3002 \u521b\u5efacalibrator_custom.SIM_Calibrator\u7684\u5b9e\u4f8b net = Net () \u8c03\u7528calibrator_custom.SIM_Calibrator\u7684convert\u65b9\u6cd5 net . convert ( img_gen , fix_model = [ out_model_path ]) convert\u65b9\u6cd5\u5fc5\u987b\u8f93\u5165\u4e24\u4e2a\u53c2\u6570\uff1a\u56fe\u7247\u751f\u6210\u5668\u3001fixed.sim\u6a21\u578b\u7684\u4fdd\u5b58\u8def\u5f84list\u3002 \u56fe\u7247\u751f\u6210\u5668\uff08img_gen\uff09 \u4e3a\u65b9\u4fbf\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u8f6c\u6362\u6a21\u578b\uff0c\u901a\u8fc7\u751f\u6210\u5668\u65b9\u4fbf\u7ec4\u7ec7\u8f93\u5165\u56fe\u7247\u7684\u5e8f\u5217\u3002\u5982\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u751f\u6210\u5668\u5e94\u8be5\u6309\u7167\u5b9a\u4e49forward\u65f6\u7684\u8f93\u5165\u987a\u5e8f\uff0c\u8fd4\u56de\u6709\u591a\u4e2anumpy.ndarray\u7684list\u3002 calibrator_custom.utils.image_preprocess_func\u4f7f\u7528\u9884\u5148\u5b9a\u4e49\u597d\u7684\u524d\u5904\u7406\u65b9\u6cd5\u3002 preprocess_func = calibrator_custom . utils . image_preprocess_func ( model_name ) def image_generator ( folder_path , preprocess_func ): images = [ os . path . join ( folder_path , img ) for img in os . listdir ( folder_path )] for image in images : img = preprocess_func ( image ) yield [ img ] img_gen = image_generator ( './images' , preprocess_func ) fixed.sim\u6a21\u578b\u7684\u4fdd\u5b58\u8def\u5f84list \u5982\u679c\u5728__init__\u4e2d\u5b9a\u4e49\u591a\u4e2a\u6a21\u578b\uff0cfixed\u6a21\u578b\u7684\u4fdd\u5b58\u8def\u5f84list\u5e94\u8be5\u6309\u7167__init__\u4e2d\u5b9a\u4e49\u6a21\u578b\u7684\u987a\u5e8f\uff0c\u4f9d\u6b21\u547d\u540d\u3002 \u5176\u4ed6\u53ef\u9009\u53c2\u6570\uff1a num_process: \u8fdb\u7a0b\u6570\uff0c\u8fd0\u884c\u540c\u65f6\u8fd0\u884c\u7684CPU\u6570\u91cf quant_level: \u9009\u62e9\u91cf\u5316\u7b49\u7ea7\uff1a[L1, L2, L3, L4, L5]\uff0c\u9ed8\u8ba4L5\u91cf\u5316\u7b49\u7ea7\uff0c\u5177\u4f53\u542b\u4e49\u8be6\u89c13.1.2\u8282Calibrator\u7684\u53ef\u9009\u53c2\u6570\u4f7f\u7528\u65b9\u6cd5\u3002 quant_param: \u91cf\u5316\u5bfc\u5165\u53c2\u6570\u3002\u5982\u679c\u5df2\u6709\u5bf9\u5e94\u6a21\u578b\u7684\u91cf\u5316\u53c2\u6570\uff0c\u53ef\u4ee5\u5c06\u91cf\u5316\u7684\u53c2\u6570\u5728\u6a21\u578b\u8f6c\u6362\u4e2d\u5bfc\u5165\u3002","title":"3.4.2 calibrator_custom.SIM_Calibrator"},{"location":"module/User_Guide/Common/Calibrate.html#343","text":"","title":"3.4.3 \u5bfc\u5165\u91cf\u5316\u53c2\u6570\u89c4\u5219"},{"location":"module/User_Guide/Common/Calibrate.html#3431","text":"Conv2D\u7684\u91cf\u5316\u65b9\u6cd5 Conv2D\u7684\u91cf\u5316\u5206\u4e3a\u8f93\u5165\u3001Weights\u548c\u8f93\u51fa\uff0c\u76ee\u524d\u652f\u63018bit\uff0c16bit\u91cf\u5316\u3002 \u6839\u636e\u7edf\u8ba1\u5f97\u5230\u7684\u8f93\u5165\u3001Weights\u548c\u8f93\u51fa\u7684min\u548cmax\u503c\uff0c\u9996\u5148\u63d0\u524d\u5c06Weights\u91cf\u5316\u5230\u5b9a\u70b9\u6570\u636e\uff0c\u4fdd\u5b58\u5728fixed\u7684\u7f51\u7edc\u5185\u90e8\uff0c\u518d\u5728\u7f51\u7edc\u8fd0\u884c\u65f6\u52a8\u6001\u91cf\u5316\u8f93\u5165\u548c\u8f93\u51fa\u6570\u636e\u3002Weights\u7684min\u548cmax\u503c\u7684\u4e2a\u6570\u7531kernel\u7684\u4e2a\u6570\u51b3\u5b9a\uff0c\u8f93\u5165\u548c\u8f93\u51fa\u7684min\u548cmax\u503c\u7684\u4e2a\u6570\u7531\u8f93\u5165\u8f93\u51fa\u7684C\u7ef4\u5ea6\u51b3\u5b9a\u3002\u5982\u679c\u4f7f\u75288bit\u91cf\u5316\uff0cConv2D\u7684\u8f93\u5165\u4e3aUINT8\uff08\u76f8\u5f53\u4e8eINT9\u7684\u8868\u8fbe\u80fd\u529b\uff09\uff0cWeights\u4e3aINT8\uff1b\u5982\u679c\u4f7f\u752816bit\u91cf\u5316\uff0cConv2D\u7684\u8f93\u5165\u548cWeights\u5747\u4e3aINT16\u3002 DepthwiseConv2D\u7684\u91cf\u5316\u65b9\u6cd5 DepthwiseConv2D\u7684\u91cf\u5316\u5206\u4e3a\u8f93\u5165\u3001Weights\u548c\u8f93\u51fa\uff0c\u76ee\u524d\u652f\u63018bit\uff0c16bit\u91cf\u5316\u3002 \u6839\u636e\u7edf\u8ba1\u5f97\u5230\u7684\u8f93\u5165\u3001Weights\u548c\u8f93\u51fa\u7684min\u548cmax\u503c\uff0c\u9996\u5148\u63d0\u524d\u5c06Weights\u91cf\u5316\u5230\u5b9a\u70b9\u6570\u636e\uff0c\u4fdd\u5b58\u5728fixed\u7684\u7f51\u7edc\u5185\u90e8\uff0c\u518d\u5728\u7f51\u7edc\u8fd0\u884c\u65f6\u52a8\u6001\u91cf\u5316\u8f93\u5165\u548c\u8f93\u51fa\u6570\u636e\u3002Weights\u3001\u8f93\u5165\u548c\u8f93\u51fa\u7684min\u548cmax\u503c\u7684\u4e2a\u6570\u5747\u7531\u5bf9\u5e94Tensor\u7684C\u7ef4\u5ea6\u51b3\u5b9a\u3002\u5982\u679c\u4f7f\u75288bit\u91cf\u5316\uff0cDepthwiseConv2D\u7684\u8f93\u5165\u4e3aUINT8\uff08\u76f8\u5f53\u4e8eINT9\u7684\u8868\u8fbe\u80fd\u529b\uff09\uff0cWeights\u4e3aINT8\uff1b\u5982\u679c\u4f7f\u752816bit\u91cf\u5316\uff0cDepthwiseConv2D\u7684\u8f93\u5165\u548cWeights\u5747\u4e3aINT16\u3002 \u5176\u4ed6Op\u91cf\u5316\u65b9\u6cd5 \u7f51\u7edc\u4e2d\u5176\u4ed6\u7b97\u5b50\u7684\u91cf\u5316min\u548cmax\u5747\u57fa\u4e8eC\u7ef4\u5ea6\u6570\u91cf\uff0c\u4ec5\u652f\u630116bit\u91cf\u5316\u3002\u8c03\u7528calibrator_custom.calibrator\u7684get_tensor_details\u65b9\u6cd5\u53ef\u4ee5\u4eceqtype\u4e2d\u5f97\u77e5\u8be5Tensor\u5728\u5b9a\u70b9\u6a21\u578b\u65f6\u7684data type\u3002","title":"3.4.3.1. \u91cf\u5316\u7b56\u7565\u548c\u65b9\u6cd5"},{"location":"module/User_Guide/Common/Calibrate.html#3432","text":"\u57fa\u4e8e\u4e0a\u8ff0\u91cf\u5316\u7684\u7b56\u7565\u548c\u65b9\u6cd5\uff0c\u9700\u8981\u4e3aTensor\u63d0\u4f9b\u5982\u4e0b\u4fe1\u606f\uff1a Tensor\u7684\u540d\u5b57\uff08name\uff09[str] \u7b97\u5b50\u7c7b\u578b\u63d0\u4f9b\u5bf9\u5e94\u6570\u91cf\u7684min\uff0cmax\u3002[list] \u91cf\u5316bit\u4f4d\u3002[int] \u5e38\u91cfTensor\u6570\u636e\uff08data\uff09\uff08\u53ef\u9009\uff09[numpy.ndarray] \u4e0b\u8868\u5c55\u793a\u4e86\u5bf9\u5e94\u7684\u53c2\u6570\u65b9\u5f0f\uff0c\u6574\u4e2a\u53c2\u6570\u4e3alist\uff0c\u5176\u4e2d\u6bcf\u4e2aitem\u662f\u4e00\u4e2adict\uff0c\u5305\u542b\u4e0a\u8ff0\u4fe1\u606f\u3002 [ { \"name\" : \"FeatureExtractor/MobilenetV2/Conv2d_0/weights\" , \"min\" : [ - 4.555312 , - 2.876907 , - 1.234419 ], \"max\" : [ 7.364561 , 3.960804 , 6.0 ], \"bit\" : 8 }, { ... }, ... ] \u793a\u4f8bSGS_IPU_SDK/Scripts/examples/sim_calibrator.py\u4e2d\u5df2\u5b8c\u6210\u4e86\u53c2\u6570\u5bfc\u5165\uff0c\u53ef\u4ee5\u63d0\u4f9bjson\u548cpkl\u6587\u4ef6\u7684\u8bfb\u53d6\u548c\u5bfc\u5165\u3002","title":"3.4.3.2. \u91cf\u5316\u53c2\u6570\u7684\u5185\u5bb9"},{"location":"module/User_Guide/Common/Calibrate.html#34321","text":"\u91cf\u5316\u6a21\u578b\u91cf\u5316\u53c2\u6570\u5bfc\u51fa\u5de5\u5177\u4f4d\u7f6e SGS_IPU_SDK/Scripts/examples/save_quant_param.py \u4f7f\u7528\u793a\u4f8b\uff1a --output_mode \u53c2\u6570\u652f\u6301JSON\u6216Pickle\u683c\u5f0f\u91cf\u5316\u53c2\u6570\u6570\u636e\u7684\u5bfc\u51fa\u3002 python3 save_quant_param.py \\ -m fixed.sim \\ --output_mode {JSON,Pickle}","title":"3.4.3.2.1 \u91cf\u5316\u6a21\u578b\u91cf\u5316\u53c2\u6570\u5bfc\u51fa\u5de5\u5177"},{"location":"module/User_Guide/Common/Calibrate.html#3433","text":"\u4e3a\u4e86\u517c\u5bb9\u539f\u6709\u91cf\u5316\u6d41\u7a0b\uff0c\u539f\u6709\u91cf\u5316\u6240\u91c7\u7528\u7684\u7b56\u7565\u4f9d\u7136\u8fdb\u884c\u3002 \u539f\u59cb\u6a21\u578b\u5728\u8f6c\u6210SGS_Float\u6a21\u578b\u4ee5\u540e\uff0c\u4e00\u4e9b\u7b97\u5b50\u4f1a\u88ab\u5408\u5e76\u548c\u4f18\u5316\uff0c\u8ba1\u7b97\u56fe\u4e0e\u539f\u6846\u67b6\u7684\u6a21\u578b\u6709\u8f83\u5927\u5dee\u5f02\u3002\u6240\u63d0\u4f9b\u7684\u91cf\u5316\u6587\u4ef6\u5185\u5bb9\u9700\u57fa\u4e8e\u5df2\u8f6c\u6210\u7684SGS_Float\u6a21\u578b\u9488\u5bf9\u6027\u8c03\u6574\uff0c\u5982Tensor\u540d\u79f0\u7b49\u4fe1\u606f\u3002 \u4e3a\u65b9\u4fbf\u4fee\u6539\u88ab\u5408\u5e76\u548c\u4f18\u5316\u7684\u5c42\uff0c\u53ef\u4ee5\u4f7f\u7528calibrator_custom.calibrator\u7684get_tensor_details\u65b9\u6cd5\u83b7\u53d6Tensor\u7684\u57fa\u672c\u4fe1\u606f\u3002\u53ef\u4ee5\u83b7\u5f97\u6bcf\u4e2aTensor\u7684name\uff0cshape\uff0cdtype\uff0cqtype\u4fe1\u606f\u3002 \u8f6c\u6362\u597d\u7684fixed\u6a21\u578b\u53ef\u4ee5\u4f7f\u7528calibrator_custom.fixed_simulator\u7684get_tensor_details\u65b9\u6cd5\u83b7\u53d6Tensor\u7684\u57fa\u672c\u4fe1\u606f\uff0c\u53ef\u4ee5\u83b7\u5f97\u6bcf\u4e2aTensor\u7684name\uff0cshape\uff0cmin\uff0cmax\uff0cquantization\uff0cdtype\u4fe1\u606f\u3002 \u6839\u636e\u6a21\u578bTensor\u4fe1\u606f\uff0c\u66f4\u65b0\u539f\u59cb\u6a21\u578b\u7684\u91cf\u5316\u6587\u4ef6\u540e\uff0c\u5373\u53ef\u5bfc\u5165\u91cf\u5316\u6570\u636e\u6587\u4ef6\u3002 \u89e3\u6790\u5b8c\u91cf\u5316\u6587\u4ef6\u540e\uff0c\u4f1a\u5339\u914d\u5df2\u6709\u91cf\u5316\u4fe1\u606f\u4e0e\u5bfc\u5165\u7684\u91cf\u5316\u4fe1\u606f\u3002\u4f18\u5148\u4f7f\u7528\u5bfc\u5165\u7684\u91cf\u5316\u4fe1\u606f\uff0c\u4f46\u4e0d\u6392\u9664\u5728\u5408\u5e76\u65f6\u7531\u4e8e\u5bfc\u5165\u4fe1\u606f\u7684\u4e0d\u5408\u7406\u800c\u653e\u5f03\u4f7f\u7528\u3002","title":"3.4.3.3. \u5bfc\u5165\u91cf\u5316\u6570\u636e\u6d41\u7a0b"},{"location":"module/User_Guide/Common/Calibrate.html#35-torch_calibrator","text":"torch_calibrator\u5de5\u5177\u7684\u4f4d\u7f6e\u5728 SGS_IPU_SDK/Scripts/calibrator/torch_calibrator.py \u3002 torch_calibrator\u662f\u57fa\u4e8ePytorch\u5f00\u53d1\u7684\u65b0\u4e00\u4ee3\u91cf\u5316\u5de5\u5177\uff0c\u4e0e\u65e7\u5de5\u5177\u94fe\u76f8\u6bd4\uff0c\u6709\u4ee5\u4e0b\u7279\u6027\uff1a \u652f\u6301\u4f7f\u7528GPU\uff0c\u540c\u7b49\u7ea7\u7684\u7b97\u6cd5\u5728GPU\u73af\u5883\u4e0b\u91cf\u5316\u901f\u5ea6\u66f4\u5feb\uff08\u9700\u914d\u5408\u4f7f\u7528Nvidia\u00ae GPU Docker\uff09\uff1b \u652f\u63014/8bit\u6df7\u5408\u91cf\u5316\u7b97\u6cd5\uff0c\u5bf9\u4e8e\u6709\u6761\u4ef6\u7684\u6a21\u578b\u57288bit\u91cf\u5316\u7684\u57fa\u7840\u4e0a\u7ee7\u7eed\u5411\u4e0b\u538b\u7f29\uff0c\u8fdb\u4e00\u6b65\u63d0\u9ad8\u8fd0\u884c\u6548\u7387\uff1b \u652f\u6301\u66f4\u590d\u6742\u7684\u91cf\u5316\u6807\u5b9a\u7b97\u6cd5\uff0c\u91cf\u5316\u7cbe\u5ea6\u8fdb\u4e00\u6b65\u5f97\u5230\u63d0\u5347\uff0c\u5bf9\u5c0f\u6a21\u578b\uff08mobilenet\u7cfb\u5217\u3001shufflenet\u7cfb\u5217\u3001nanodet\u7cfb\u5217\u7b49\uff09\u63d0\u5347\u6548\u679c\u66f4\u4e3a\u660e\u663e\u3002 torch_calibrator\u662f\u5bf93.1 calibrator\u5de5\u5177\u7684\u8865\u5145\u3002\u5f53\u6a21\u578b\u53c2\u6570\u91cf\u8f83\u5c0f\uff0c\u4f7f\u75283.1 calibrator\u5de5\u5177\u65e0\u6cd5\u8fbe\u5230\u6ee1\u610f\u7684\u7cbe\u5ea6\u65f6\uff1b\u6216\u8005\u6a21\u578b\u53c2\u6570\u91cf\u8f83\u5927\uff0c\u671f\u5f85\u4f7f\u75284bit\u91cf\u5316\u51cf\u5c0f\u6a21\u578b\u5927\u5c0f\uff0c\u53ef\u4ee5\u4f7f\u7528torch_calibrator\u5de5\u5177\u3002 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 torch_calibrator.py \\ -i ilsvrc2012_calibration_set100 \\ -m caffe_mobilenet_v2_float.sim \\ --input_config input_config.ini \\ --quant_config quant_config.yaml \\ -n caffe_mobilenet_v2.py \\ -q Q2","title":"3.5. torch_calibrator"},{"location":"module/User_Guide/Common/Calibrate.html#351","text":"-i , --image : \u6807\u5b9a\u6570\u636e\u96c6\u56fe\u50cf\u8def\u5f84\uff0c100\u5f20\u8bad\u7ec3\u56fe\u7247\u3002(\u5fc5\u9009) -m , --model : \u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002(\u5fc5\u9009) --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\u3002(\u5fc5\u9009) --quant_config : \u91cf\u5316\u53c2\u6570(yaml\u683c\u5f0f)\u6587\u4ef6\u8def\u5f84\uff0c\u540e\u9762\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\u8be5\u6587\u4ef6\u7684\u914d\u7f6e\u65b9\u6cd5\u548c\u7528\u9014\u3002(\u5fc5\u9009) -n , --preprocess : \u6a21\u578b\u9884\u5904\u7406\u6587\u4ef6\uff08py\u6587\u4ef6\uff09\u8def\u5f84\u3002(\u5fc5\u9009) -q , --q_mode : \u91cf\u5316\u9009\u9879\uff0c\u540e\u9762\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\u3002(\u5fc5\u9009) -o , --ouptut : \u6a21\u578b\u8f93\u51fa\u8def\u5f84\u3002\u6307\u5b9a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u4f4d\u7f6e\uff1a\u6307\u5b9a\u5230\u6587\u4ef6\u5939\uff0c\u5c06\u81ea\u52a8\u4ee5\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u524d\u7f00\u547d\u540d\uff0c\u540e\u63a5fixed.sim\uff1b\u6307\u5b9a\u5230\u5177\u4f53\u8def\u5f84\u548c\u6587\u4ef6\u540d\uff0c\u5c06\u4ee5\u6307\u5b9a\u8def\u5f84\u548c\u6587\u4ef6\u540d\u547d\u540d\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff1b\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\uff0c\u5c06\u4ee5\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u50a8\u5b58\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u3002 --cal_batchsize : \u6807\u5b9a\u6570\u636e\u96c6\u7684batchsize\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u7b49\u4e8e\u6570\u636e\u96c6\u4e2a\u6570\uff1b\u5982\u679c\u6807\u5b9a\u6570\u636e\u96c6\u5341\u5206\u5e9e\u5927\u6216\u6a21\u578b\u7ed3\u6784\u7279\u6b8a\u65e0\u6cd5\u5728batchsize != 1\u7684\u60c5\u51b5\u4e0b\u63a8\u7406\uff0c\u5219\u53ef\u4ee5\u8bbe\u7f6e\u8fd9\u4e2a\u53c2\u6570\u3002\u9ed8\u8ba4\u4e3a100\u3002","title":"3.5.1. \u53c2\u6570\u8bf4\u660e"},{"location":"module/User_Guide/Common/Calibrate.html#352","text":"\u91cf\u5316\u7b49\u7ea7 \u91cf\u5316\u7279\u8272\u8bf4\u660e \u91cf\u5316\u5b50\u9009\u9879 \u8be6\u7ec6\u8bf4\u660e Q1 \u4ec5\u505amin\u548cmax\u7684\u6807\u5b9a\uff0c\u4e0d\u4f1a\u4f18\u5316\u5377\u79ef\u53c2\u6570\uff0c\u901f\u5ea6\u6574\u4f53\u8f83\u5feb\uff0c\u9002\u7528\u4e8e\u6ca1\u6709GPU\u7684\u73af\u5883\uff0c\u5982\u679c\u6709GPU\u5219\u53ef\u4ee5\u52a0\u5feb\u6807\u5b9a\u901f\u5ea6\uff1b\u7cbe\u5ea6\u65b9\u9762\u6574\u4f53\u6301\u5e733.1 calibrator\u91cf\u5316\u7684\u7cbe\u5ea6\uff1b Q10 \u516816bit\u91cf\u5316\uff0c\u91cf\u5316\u7cbe\u5ea6\u4e0efloat32\u6a21\u578b\u57fa\u672c\u4e00\u81f4 Q1/Q11 \u51688bit\u5feb\u901f\u91cf\u5316\uff0c\u91cf\u5316\u7cbe\u5ea6\u4e0eL2\u6a21\u5f0f\u76f8\u5f53 Q12 \u81ea\u9002\u5e948bit\u548c16bit\u91cf\u5316\uff0c\u91cf\u5316\u7cbe\u5ea6\u4e0eL5\u6a21\u5f0f\u76f8\u5f53 Q13 4/8bit(8/16bit \u53ef\u6839\u636e\u914d\u7f6e\u6587\u4ef6\u66f4\u6539\uff0c\u9ed8\u8ba44/8bit)\u6df7\u5408\u91cf\u5316\uff0c\u5bf9\u4e8e\u6709\u8fdb\u4e00\u6b65\u538b\u7f29\u9700\u6c42\u7684\u6a21\u578b\u53ef\u4ee5\u9009\u7528\u6b64\u65b9\u5f0f\u3002 Q2 \u91cf\u5316\u7b49\u7ea7\u4f1a\u5bf9\u6a21\u578b\u8fdb\u884c\u9010\u5c42\u4f18\u5316\uff0c\u4f4ebit\u60c5\u51b5\u4e0b\u7cbe\u5ea6\u63d0\u5347\u660e\u663e\uff0c\u5728\u8f7b\u91cf\u7ea7\u6a21\u578b\u6548\u679c\u66f4\u4e3a\u663e\u8457\uff0c\u9002\u7528\u4e8e\u6709\u5355\u5757GPU\u7684\u73af\u5883\uff1b\u7cbe\u5ea6\u4e0a\u6574\u4f53\u4f18\u4e8eQ1 Q20 \u516816bit\u91cf\u5316\uff0c\u91cf\u5316\u7cbe\u5ea6\u4e0efloat32\u6a21\u578b\u57fa\u672c\u4e00\u81f4 Q21 \u51688bit\u91cf\u5316\uff0c\u5728\u4e00\u4e9b\u5c0f\u6a21\u578b\u4e0a\u80fd\u591f\u83b7\u5f97\u66f4\u597d\u7684\u6548\u679c Q2/Q22 \u81ea\u9002\u5e94\u9009\u62e9\u91cf\u5316\u65b9\u5f0f\uff0c\u662f\u76ee\u524d\u6548\u679c\u6700\u597d\u7684\u91cf\u5316\u65b9\u5f0f\uff0c\u751f\u6210\u7684\u5b9a\u70b9\u6a21\u578b\u4e3a\u51688bit\u91cf\u5316\u6216\u63a5\u8fd1\u51688\u76848/16\u6df7\u5408\u91cf\u5316\u3002 Q23 4/8bit\uff088/16bit \u53ef\u6839\u636e\u914d\u7f6e\u6587\u4ef6\u66f4\u6539\uff0c\u9ed8\u8ba44/8bit\uff09\u6df7\u5408\u91cf\u5316\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u538b\u7f29\u6a21\u578b\uff0c\u538b\u7f29\u7a0b\u5ea6\u548c\u7cbe\u5ea6\u5747\u4f18\u4e8eQ13","title":"3.5.2. \u91cf\u5316\u9009\u9879"},{"location":"module/User_Guide/Common/Calibrate.html#353-yaml","text":"QUANT_CONFIG : retrain_iter_num : 40 device : 'cuda:0' mixed_precisions : [ 4 , 8 ] use_preset_min_max_bit : 0 mp_rate : 0.6 PRESET_MIN_MAX_BIT : # preset tensor min/max and bit [ { name : \"126\" , min : null , max : null , bit : 8 }, { name : \"layer1.0.conv1.weight\" , min : null , max : null , bit : 8 } ] QUANT_CONFIG retrain_iter_num\uff1a\u6bcf\u5c42\u91cd\u8bad\u7ec3\u8fed\u4ee3\u6b21\u6570\uff0c\u5982\u679c\u8be5\u9879\u4e0d\u5199\u5219\u9ed8\u8ba4\u4e3a40\uff0c\u90e8\u5206\u8f7b\u91cf\u7ea7\u6a21\u578b\u53ef\u80fd\u9700\u8981\u66f4\u591a\u7684\u8fed\u4ee3\u6b21\u6570\u3002 device\uff1a\u6307\u5b9aGPU/CPU\uff0c\u5982\u679c\u4e0d\u7ed9\u5219\u4f1a\u81ea\u52a8\u5bfb\u627e\u7a7a\u95f2\u7684GPU\u3002\u82e5\u65e0GPU\u5219\u4f1a\u81ea\u52a8\u8c03\u7528CPU\u3002\u6307\u5b9a'cpu'\u4f1a\u4f7f\u7528CPU\u8fd0\u7b97\u3002 use_preset_min_max_bit\uff1a\u662f\u5426\u4f7f\u7528\u624b\u5de5\u9884\u8bbe\u7684min/max/bit\u4fe1\u606f\uff1b\u5982\u679c\u8be5\u9879\u4e3a1\uff0c\u5219\u4f1a\u4f7f\u7528\u4e0b\u65b9\u624b\u52a8\u8bbe\u7f6e\u7684\u4fe1\u606f\uff1b\u5982\u679c\u8be5\u9879\u4e3a0\u6216\u4e0d\u5199\uff0c\u5219\u4e0d\u4f1a\u4f7f\u7528\u4e0b\u65b9\u7684\u4fe1\u606f\u3002 mixed_precisions: \u6df7\u5408\u91cf\u5316\u6a21\u5f0f\uff0c\u53ef\u9009[4, 8]\uff0c[8, 16]\u3002\u5982\u679c\u4e0d\u586b\uff0c\u9ed8\u8ba4\u662f[4, 8]\u3002\u4ec5\u5728Q13\u3001Q23\u7684\u6a21\u5f0f\u751f\u6548\u3002 mp_rate\uff1a\u6df7\u5408\u91cf\u5316\u6307\u5b9a\u7684\u538b\u7f29\u7387\uff0c\u5982\u672a\u6307\u5b9a\u6216\u4e0d\u5728[0.5, 1]\u7684\u8303\u56f4\u5185\uff0c\u5219\u4f1a\u81ea\u52a8\u63a8\u8350\u4e00\u4e2a\u538b\u7f29\u7387\u3002\u8be5\u53c2\u6570\u4f1a\u914d\u5408 mixed_precisions \uff0c\u751f\u62104/8bit\u62168/16bit\u7684\u6a21\u578b\u3002\u4ec5\u5728Q13\u3001Q23\u7684\u6a21\u5f0f\u4e0b\u751f\u6548\u3002 \u5982\u679c\u81ea\u52a8\u63a8\u8350\u7684\u538b\u7f29\u7387\u6ee1\u8db3\u7cbe\u5ea6\u8981\u6c42\uff0c\u53ef\u901a\u8fc7\u4ee50.05\u6b65\u957f\u4e0b\u8c03\u538b\u7f29\u7387\uff0c\u6ee1\u8db3\u7cbe\u5ea6\u8981\u6c42\u7684\u540c\u65f6\u63d0\u5347\u6a21\u578b\u6027\u80fd\u3002 \u5982\u679c\u81ea\u52a8\u63a8\u8350\u7684\u538b\u7f29\u7387\u4e0d\u6ee1\u8db3\u7cbe\u5ea6\u8981\u6c42\uff0c\u53ef\u901a\u8fc7\u4ee50.05\u6b65\u957f\u4e0a\u8c03\u538b\u7f29\u7387\uff0c\u63d0\u5347\u6a21\u578b\u91cf\u5316\u7cbe\u5ea6\u3002 PRESET_MIN_MAX_BIT\uff1a\u53ef\u4ee5\u9884\u8bbe\u67d0\u4e2aTensor\u7684min/max/bit\u4fe1\u606f\uff0c\u8be6\u89c13.4.3\u8282 \u91cf\u5316\u7b56\u7565\u548c\u65b9\u6cd5 \uff0cTensor\u540d\u5b57\u4ee5float.sim\u6a21\u578b\u4e2d\u4e3a\u51c6\u3002\u9700\u8981\u5c06 use_preset_min_max_bit \u8bbe\u4e3a1\u3002","title":"3.5.3. \u91cf\u5316\u53c2\u6570(yaml\u683c\u5f0f)\u6587\u4ef6"},{"location":"module/User_Guide/Common/Compile.html","text":"4. COMPILER \u00b6 Compiler\u5de5\u5177\u4f4d\u7f6e\u5728 SGS_IPU_SDK/Scripts/calibrator/compiler.py \u3002 \u8be5\u5de5\u5177\u662f\u5c06SigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u4e3aSigmaStar\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u3002 \u5728SGS_IPU_SDK \u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK source cfg_env.sh \u8fdb\u5165\u5230\u8be5\u5de5\u5177\u76ee\u5f55\uff0c\u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 compiler.py \\ -m ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_fixed.sim \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a -m , --model : \u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 \u53ef\u9009\u53c2\u6570\uff1a -c , --category : \u6a21\u578b\u7684\u7c7b\u522b\uff0c\u4e3b\u8981\u6709Classification / Detection / Unknown\u3002 Classification : \u6a21\u578b\u67091\u4e2a\u8f93\u51fa\uff0c\u4f1a\u6839\u636e\u8f93\u51fa\u6392\u5e8f\u8f93\u51fa\u5206\u6570\u7531\u9ad8\u81f3\u4f4e\u7684\u524d5\u4e2a\u3002 Detection : \u6a21\u578b\u67094\u4e2a\u8f93\u51fa\uff0c\u4f1a\u6839\u636e\u8f93\u51fa\u8f6c\u6362\u4e3a\u8f93\u5165\u56fe\u7247\u7684bbox\u4f4d\u7f6e\u4ee5\u53ca\u7c7b\u522b\u3002\u53ea\u652f\u6301SigmaStar\u540e\u5904\u7406\u7b97\u5b50[SigmaStar\u540e\u5904\u7406\u6a21\u5757]\u3002\u5176\u4ed6\u540e\u5904\u7406\u8bf7\u4f7f\u7528Unknown\u3002 Unknown : \u6a21\u578b\u8f93\u51fa\u4e0d\u5c5e\u4e8e\u4e0a\u8ff0\u4e24\u79cd\u7c7b\u578b\uff0c\u4f1a\u8f93\u51fa\u5168\u90e8\u7684Tensor\u6570\u503c\u3002\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u5230\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u65f6\u9ed8\u8ba4\u4e3aUnknown\u3002 -o , --output : \u6a21\u578b\u8f93\u51fa\u8def\u5f84\u3002\u6307\u5b9a\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u6570\u636e\u4f4d\u7f6e\uff1a\u6307\u5b9a\u5230\u6587\u4ef6\u5939\uff0c\u5c06\u81ea\u52a8\u4ee5\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u524d\u7f00\u547d\u540d\uff0c\u540e\u63a5sgsimg.img\uff1b\u6307\u5b9a\u5230\u5177\u4f53\u8def\u5f84\u548c\u6587\u4ef6\u540d\uff0c\u5c06\u4ee5\u6307\u5b9a\u8def\u5f84\u548c\u6587\u4ef6\u540d\u547d\u540d\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\uff1b\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\uff0c\u5c06\u4ee5\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u50a8\u5b58\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u3002 --inplace_input_buf : RAWDATA_F32_NHWC \u662f\u5426\u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf. \u4f7f\u7528\u987b\u77e5 training_input_formats \u548c input_formats \u914d\u7f6e\u4e3a RAWDATA_F32_NHWC \u4e14\u4f7f\u7528 --batch_mode \u7684 one_buf \u6a21\u5f0f\u65f6\u624d\u53ef\u4ee5\u914d\u7f6e\u6b64\u53c2\u6570\u3002 \u53ef\u9009True/False\uff0c\u9ed8\u8ba4\u4e3aTrue\u3002 True : \u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf\u3002 False : \u4fdd\u7559\u539f\u59cb\u8f93\u5165buf\u3002","title":"Compile"},{"location":"module/User_Guide/Common/Compile.html#4-compiler","text":"Compiler\u5de5\u5177\u4f4d\u7f6e\u5728 SGS_IPU_SDK/Scripts/calibrator/compiler.py \u3002 \u8be5\u5de5\u5177\u662f\u5c06SigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u4e3aSigmaStar\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u3002 \u5728SGS_IPU_SDK \u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK source cfg_env.sh \u8fdb\u5165\u5230\u8be5\u5de5\u5177\u76ee\u5f55\uff0c\u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 compiler.py \\ -m ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_fixed.sim \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a -m , --model : \u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 \u53ef\u9009\u53c2\u6570\uff1a -c , --category : \u6a21\u578b\u7684\u7c7b\u522b\uff0c\u4e3b\u8981\u6709Classification / Detection / Unknown\u3002 Classification : \u6a21\u578b\u67091\u4e2a\u8f93\u51fa\uff0c\u4f1a\u6839\u636e\u8f93\u51fa\u6392\u5e8f\u8f93\u51fa\u5206\u6570\u7531\u9ad8\u81f3\u4f4e\u7684\u524d5\u4e2a\u3002 Detection : \u6a21\u578b\u67094\u4e2a\u8f93\u51fa\uff0c\u4f1a\u6839\u636e\u8f93\u51fa\u8f6c\u6362\u4e3a\u8f93\u5165\u56fe\u7247\u7684bbox\u4f4d\u7f6e\u4ee5\u53ca\u7c7b\u522b\u3002\u53ea\u652f\u6301SigmaStar\u540e\u5904\u7406\u7b97\u5b50[SigmaStar\u540e\u5904\u7406\u6a21\u5757]\u3002\u5176\u4ed6\u540e\u5904\u7406\u8bf7\u4f7f\u7528Unknown\u3002 Unknown : \u6a21\u578b\u8f93\u51fa\u4e0d\u5c5e\u4e8e\u4e0a\u8ff0\u4e24\u79cd\u7c7b\u578b\uff0c\u4f1a\u8f93\u51fa\u5168\u90e8\u7684Tensor\u6570\u503c\u3002\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u5230\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u65f6\u9ed8\u8ba4\u4e3aUnknown\u3002 -o , --output : \u6a21\u578b\u8f93\u51fa\u8def\u5f84\u3002\u6307\u5b9a\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u6570\u636e\u4f4d\u7f6e\uff1a\u6307\u5b9a\u5230\u6587\u4ef6\u5939\uff0c\u5c06\u81ea\u52a8\u4ee5\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u524d\u7f00\u547d\u540d\uff0c\u540e\u63a5sgsimg.img\uff1b\u6307\u5b9a\u5230\u5177\u4f53\u8def\u5f84\u548c\u6587\u4ef6\u540d\uff0c\u5c06\u4ee5\u6307\u5b9a\u8def\u5f84\u548c\u6587\u4ef6\u540d\u547d\u540d\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\uff1b\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\uff0c\u5c06\u4ee5\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u50a8\u5b58\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u3002 --inplace_input_buf : RAWDATA_F32_NHWC \u662f\u5426\u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf. \u4f7f\u7528\u987b\u77e5 training_input_formats \u548c input_formats \u914d\u7f6e\u4e3a RAWDATA_F32_NHWC \u4e14\u4f7f\u7528 --batch_mode \u7684 one_buf \u6a21\u5f0f\u65f6\u624d\u53ef\u4ee5\u914d\u7f6e\u6b64\u53c2\u6570\u3002 \u53ef\u9009True/False\uff0c\u9ed8\u8ba4\u4e3aTrue\u3002 True : \u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf\u3002 False : \u4fdd\u7559\u539f\u59cb\u8f93\u5165buf\u3002","title":"4. COMPILER"},{"location":"module/User_Guide/Common/DumpDebug_Tool.html","text":"6.1. \u4e3b\u8981\u529f\u80fd \u00b6 DumpDebug Tool\u5de5\u5177\u7684\u4f4d\u7f6e\u5728 SGS_IPU_SDK/DumpDebug/ \u3002 \u8be5\u5de5\u5177\u662f\u4e3b\u8981\u529f\u80fd\u5982\u4e0b\uff1a \u89e3\u6790\u7f51\u7edc\u6a21\u578b\u6570\u636e\uff1b \u5bf9\u6bd4\u4e0d\u540c\u9636\u6bb5\u7684\u7f51\u7edc\u6a21\u578b\u6570\u636e\uff1b \u7ed8\u5236\u5404\u5c42\u7f51\u7edc\u6a21\u578b\u7684Histogram\u56fe\u3002 SigmaStar DLA SDK\u5728\u8f6c\u6362\u7f51\u7edc\u65f6\uff0cCaffe\u3001Onnx\u3001TensorFlow\u7684\u7f51\u7edc\u6a21\u578b\u4e0eSigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u7684\u7ed3\u679c\u5b8c\u5168\u4e00\u81f4\uff0cSigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u4e0eSigmaStar\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u7684\u7ed3\u679c\u5b8c\u5168\u4e00\u81f4\u3002 \u6709\u7cbe\u5ea6\u5dee\u522b\u7684\u53ea\u6709\u5728SigmaStar\u6d6e\u70b9\u6a21\u578b\u8f6c\u6362\u4e3aSigmaStar\u5b9a\u70b9\u8fd9\u4e2a\u9636\u6bb5\uff0c\u56e0\u6b64\u5728\u53d1\u73b0SigmaStar\u5b9a\u70b9\u7f51\u7edc\u7684\u7ed3\u679c\u4e0e\u539f\u6709\u6d6e\u70b9\u7684\u7ed3\u679c\u76f8\u5dee\u8f83\u591a\u65f6\uff0c\u4f7f\u7528DumpDebug Tool\u53ef\u4ee5\u68c0\u67e5\u8f6c\u6362\u540e\u5b9a\u70b9\u7f51\u7edc\u7684\u9519\u8bef\u3002 DumpDebug Tool\u4e5f\u53ef\u7528\u4e8e\u76f4\u63a5dump\u539f\u6a21\u578bCaffe/Onnx\u7684\u6bcf\u4e00\u5c42\u6570\u636e\uff0c\u4ee5\u4fbf\u4e0eSigmaStar\u6a21\u578b\u8fdb\u884c\u5bf9\u6bd4\u3002 6.2. \u4f7f\u7528\u6b65\u9aa4 \u00b6 6.2.1 Dump\u7f51\u7edc\u6a21\u578b\u4e2d\u5404\u5c42\u6570\u636e \u00b6 6.2.1.1 Dump SigmaStar\u6d6e\u70b9\u6216\u5b9a\u70b9\u6a21\u578b \u00b6 \u5728 SGS_IPU_SDK/cfg \u6587\u4ef6\u5939\u4e2d\u627e\u5230DebugConfig.txt\u6587\u4ef6\uff0c\u590d\u5236\u5230\u5f53\u524d\u8fd0\u884c\u8def\u5f84\u4e0b. \u6253\u5f00DebugConfig.txt\uff0c\u4fee\u6539\u6587\u4ef6\u5185\u5bb9\uff1a dumpTensor eliminateGarbage dequantFixed #dumpasstring #disableDomainFuseOps path = DebugConfig.txt\u5404\u53c2\u6570\u4f5c\u7528: dumpTensor : Dump\u7f51\u7edc\u6a21\u578b\u5404\u5c42\u6570\u636e\u603b\u5f00\u5173\u3002 eliminateGarbage : Dump\u7f51\u7edc\u6a21\u578b\u6570\u636e\u65f6\u53bb\u9664\u65e0\u7528\u6570\u636e\uff08\u5efa\u8bae\u5f00\u542f\uff09\u3002 dequantFixed : \u9488\u5bf9\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff0c\u5c06\u6574\u5f62\u6570\u636e\u8f6c\u6362\u4e3a\u6d6e\u70b9\u6570\u636e\uff08\u5efa\u8bae\u5f00\u542f\uff09\u3002 dumpasstring : Dump\u7f51\u7edc\u6a21\u578b\u6570\u636e\u4e3a\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u5173\u95ed\u9009\u9879\u4e3a\u4e8c\u8fdb\u5236\u6587\u4ef6\u7c7b\u578b\u3002\uff08\u5982\u679c\u9700\u8981[6.2.2 \u4f7f\u7528auto_dump_debug.sh\u811a\u672c\u5206\u6790\u6570\u636e]\u529f\u80fd\uff0c\u52a1\u5fc5\u5173\u95ed\u6b64\u9009\u9879\uff09\u3002 disableDomainFuseOps : \u8f6c\u6362\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u65f6\uff0c\u53d6\u6d88\u7f51\u7edc\u5c42\u878d\u5408\uff08\u5efa\u8bae\u5173\u95ed\uff09\u3002 path= : \u6307\u5b9a\u751f\u6210\u6863\u6848\u7684\u8f93\u51fa\u5168\u8def\u5f84\uff08path= \u540e\u9762\u786e\u4fdd\u586b\u5199\u7c7b\u4f3c /home/user \u7684\u7edd\u5bf9\u8def\u5f84\u3002\u5982\u679cpath= \u540e\u9762\u6ca1\u6709\u5185\u5bb9\u6216\u6839\u672c\u6ca1\u6709 path= \u7684\u8bdd\uff0c\u5219\u4f1a\u9ed8\u8ba4\u8f93\u51fa\u5230 $HOME \u4f4d\u7f6e\u3002\u53e6\u5916\uff0c\u7edd\u5bf9\u8def\u5f84\u6216 /home/user \u4e0d\u8d85\u8fc7122\u5b57\u8282\uff09\u3002 \u8fd0\u884csimulator\u5bf9\u5355\u5f20\u56fe\u7247\u63a8\u6f14\u3002 \u63a8\u6f14\u5b8c\u6210\u540e\uff0c\u4f1a\u5728path=\u53c2\u6570\u6307\u5b9a\u7684\u76ee\u5f55\u751f\u6210sigma_outtensor_dump.bin\uff0c\u5373\u4e3aDump\u7f51\u7edc\u6a21\u578b\u4e2d\u5404\u5c42\u7684\u6570\u636e\u3002 Note Dump\u5b8c\u6210\u540e\u91cd\u547d\u540dsigma_outtensor_dump.bin\u6587\u4ef6\uff0c\u8bf7\u52ff\u4fee\u6539\u6587\u4ef6\u540e\u7f00\u3002\u65b0\u7684Dump\u4f1a\u590d\u5199sigma_outtensor_dump.bin\u6587\u4ef6\u3002 DebugConfig.txt\u6587\u4ef6\u4e2ddisableDomainFuseOps \u9009\u9879\u53ea\u5728\u4f7f\u7528calibrator\u5c06\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u6210\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u65f6\u6709\u7528\u3002\u5176\u4f5c\u7528\u662f\u53d6\u6d88\u7f51\u7edc\u878d\u5408\u529f\u80fd\uff0c\u5173\u95ed\u8be5\u9009\u9879\u65f6\uff0c\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u548c\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u80fd\u591f\u5728\u8f6c\u6362\u65f6\u4f18\u5316\u7f51\u7edc\u6a21\u578b\u7684\u7b97\u5b50\uff0c\u52a0\u901f\u6a21\u578b\u7684\u8fd0\u884c\uff0c\u4f46\u662f\u4e5f\u4f1a\u5f71\u54cd\u7f51\u7edc\u7684\u5c42\u7ea7\u7ed3\u6784\uff0c\u4f7f\u5f97\u90e8\u5206\u7b97\u5b50\u7684\u8f93\u51fa\u4e0d\u4f1a\u88abDump\u5230sigma_outtersor_dump.bin\u6587\u4ef6\u4e2d\u3002\u5982\u679c\u9700\u8981\u7f51\u7edc\u6a21\u578b\u7684\u6bcf\u4e00\u5c42\u6570\u636e\uff0c\u53ef\u4ee5\u6253\u5f00disableDomainFuseOps\u9009\u9879\uff0c\u91cd\u65b0\u8fd0\u884ccalibrator\u8f6c\u6362\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff0c\u6b64\u65f6\u8f6c\u51fa\u7684\u6a21\u578b\u6ca1\u6709\u878d\u5408\u4f18\u5316\uff0c\u53ef\u4ee5\u8f93\u51fa\u6bcf\u5c42\u7684\u6570\u636e\u3002 \u5bf9\u6bd4\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u548c\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff0c\u4f7f\u7528simulator\u4e2d\u53c2\u6570 -t/--type \u548c -m/--model \u6307\u5b9a\u4e0d\u540c\u9636\u6bb5\u7684\u6a21\u578b\uff0c\u5373\u53efDump\u51fa\u4e0d\u540c\u9636\u6bb5\u7684\u7f51\u7edc\u6a21\u578b\u6570\u636e\u3002 \u79bb\u7ebf\u6a21\u578b\u4e0d\u652f\u6301Dump Debug,\u79bb\u7ebf\u6a21\u578b\u7f51\u7edc\u7684\u5c42\u7ea7\u7ed3\u6784Domain\u5df2\u7ecf\u878d\u5408\uff0c\u4e0d\u80fdDump\u7f51\u7edc\u6a21\u578b\u4e2d\u5404\u5c42\u7684\u6570\u636e\u3002 \u4f7f\u7528calibrator\u5c06\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u4e3a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u65f6\uff0c\u4f1a\u5728SGS_IPU_SDK\u6839\u76ee\u5f55\u4e0b\u4ea7\u751ftensor_min_max.txt \u6587\u4ef6\uff0c\u6b64\u6587\u4ef6\u8bb0\u5f55\u4e86\u7f51\u7edc\u7684\u6bcf\u5c42\u8f93\u5165\u548c\u8f93\u51fa\u7684\u6700\u5927\u4e0e\u6700\u5c0f\u503c\uff0c\u5c06\u5728\u4e4b\u540e\u5206\u6790Dump\u6570\u636e\u65f6\u6709\u7528\u3002 6.2.1.2 Dump Caffe\u539f\u6a21\u578b \u00b6 \u5de5\u5177\u7684\u4f4d\u7f6e\u5728 SGS_IPU_SDK/DumpDebug/code/caffe_dump_data.py \u3002 caffe_dump_data.py\u811a\u672c\u9700\u8981\u4f7f\u7528 python2 \u8fd0\u884c\uff08Caffe\u4ec5\u652f\u6301python2\uff09\uff0c\u7528\u4e8e\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u6216\u8005\u4e8c\u8fdb\u5236\u5f62\u5f0fdump\u51faCaffe\u539f\u6a21\u578b\u6bcf\u4e00\u5c42\u7684\u6570\u636e\u3002 \u4f7f\u7528\u793a\u4f8b\uff1a \uff081\uff09caffe_dump_data.py\u4e2d\u4fee\u6539Caffe\u7684\u8fd0\u884c\u8def\u5f84\uff0c\u6bd4\u5982\uff1a caffe_root = '/home/your_caffe_root' sys.path.insert ( 0 ,caffe_root+ '/python' ) \uff082\uff09\u8fd0\u884c\u811a\u672c\uff1a python2 caffe_dump_data.py \\ --model_file caffe_mobilenet_v2.prototxt \\ --weight_file caffe_mobilenet_v2.caffemodel \\ --i ./img.bmp \\ --dump_bin True \\ -n ./caffe_mobilenet_v2.py \u5fc5\u9009\u53c2\u6570\u8bf4\u660e\uff1a --model_file : Caffe\u539f\u6a21\u578bprototxt\u6587\u4ef6\u8def\u5f84\u3002 --weight_file : Caffe\u539f\u6a21\u578bcaffemodel\u6587\u4ef6\u8def\u5f84\u3002 -i , --image : \u56fe\u7247\u6587\u4ef6\u6216\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\u6216 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u3002 --dump_bin : \u662f\u5426\u4ee5\u4e8c\u8fdb\u5236\u5f62\u5f0fdump\u6bcf\u4e00\u5c42\u7ed3\u679c\u3002 True: Dump\u7ed3\u679c\u4ee5\u4e8c\u8fdb\u5236\u5f62\u5f0f\u4fdd\u5b58\u4e8e\u5f53\u524d\u8fd0\u884c\u76ee\u5f55\u4e0b\u7684 ./dumpData/caffe_NHWC_outtensor_dump.bin\uff084\u7ef4tensor\u6392\u5e03\u683c\u5f0f\u4e3aNHWC\uff0c\u4e0eSigmaStar\u6a21\u578b\u76f8\u540c\uff09 False: Dump\u7ed3\u679c\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u4fdd\u5b58\u4e8e\u5f53\u524d\u8fd0\u884c\u76ee\u5f55\u4e0b\u7684 ./dumpData/caffe_NHWC_outtensor_dump.txt\uff084\u7ef4tensor\u6392\u5e03\u683c\u5f0f\u4e3aNHWC\uff0c\u4e0eSigmaStar\u6a21\u578b\u76f8\u540c\uff09 ./dumpData/NHWC\uff08\u6bcf\u5c42\u8f93\u51fa\u5355\u72ec\u751f\u6210\u6587\u4ef6\uff0c4\u7ef4tensor\u6392\u5e03\u683c\u5f0f\u4e3aNHWC\uff0c\u4e0eSigmaStar\u6a21\u578b\u76f8\u540c\uff09 ./dumpData/NCHW\uff08\u6bcf\u5c42\u8f93\u51fa\u5355\u72ec\u751f\u6210\u6587\u4ef6\uff0c4\u7ef4tensor\u6392\u5e03\u683c\u5f0f\u4e3aNCHW\uff0c\u4e0e\u539f\u6a21\u578b\u6392\u5e03\u76f8\u540c\uff09 -n , --preprocess : \u524d\u5904\u7406\u65b9\u6cd5\uff0c\u8bf7\u76f4\u63a5\u7ed9\u5b9a\u524d\u5904\u7406python\u6587\u4ef6\u8def\u5f84\u3002\u9700\u8981\u786e\u4fdd\u524d\u5904\u7406python\u6587\u4ef6\u4e2d\u5305\u542b get_image \u51fd\u6570\uff0c\u5e76\u4e14\u8be5\u51fd\u6570\u5e26\u6709 nchw \u53c2\u6570\u7528\u6765\u5904\u7406\u539f\u6a21\u578b4\u7ef4\u8f93\u5165\u7684\u6392\u5e03\u4e3aNCHW\uff08caffe_dump_data.py\u4f1a\u76f4\u63a5\u8c03\u7528get_image\u51fd\u6570\u6765\u751f\u6210\u6a21\u578binput\u6570\u636e\uff0c\u5e76\u4e14\u5f3a\u5236nchw=True\uff09\u3002 \u524d\u5904\u7406\u811a\u672c\u51fd\u6570\u793a\u4f8b\uff1a def get_image ( img_path, resizeH = 224 , resizeW = 224 , resizeC = 3 , norm = True, meanB = 104 , meanG = 117 , meanR = 123 , std = 58 .82, rgb = False, nchw = False ) : ... ... if nchw: # NCHW img_norm = np.transpose ( img_norm.reshape ( resizeH, resizeW, -1 ) , axes =( 2 , 0 , 1 )) return np.expand_dims ( img_norm, 0 ) Please Note: \u82e5\u6a21\u578b\u4e3a \u591a\u8f93\u5165 \u65f6\uff0c -n,--preprocess \u53c2\u6570\u7528\u6cd5\u9700\u8981\u591a\u4e2a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4f8b\u5982 -n preprocess1.py,preprocess2.py \u6216\u8005 --preprocess preprocess1.py,preprocess2.py \u82e5\u6a21\u578b\u4e3a \u591a\u8f93\u5165 \u65f6\uff0c -i/--image \u53c2\u6570\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\u3002 6.2.1.3 Dump Onnx\u539f\u6a21\u578b \u00b6 \u5de5\u5177\u7684\u4f4d\u7f6e\u5728 SGS_IPU_SDK/DumpDebug/code/onnx_dump_data.py \u3002 onnx_dump_data.py\u811a\u672c\u9700\u8981\u4f7f\u7528 python3 \u8fd0\u884c\uff08\u4e0eIPU SDK\u73af\u5883\u76f8\u540c\uff09\uff0c\u7528\u4e8e\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u6216\u8005\u4e8c\u8fdb\u5236\u5f62\u5f0fdump\u51faOnnx\u539f\u6a21\u578b\u6bcf\u4e00\u5c42\u7684\u6570\u636e\u3002 \u4f7f\u7528\u793a\u4f8b\uff1a python3 onnx_dump_data.py \\ --model_file onnx_mobilenet_v2.onnx \\ --image ./img.bmp \\ --dump_bin True \\ -n onnx_mobilenet_v2.py \u5fc5\u9009\u53c2\u6570\u8bf4\u660e\uff1a --model_file : Onnx\u539f\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 -i , --image : \u56fe\u7247\u6587\u4ef6\u6216\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\u6216 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u3002 --dump_bin : \u662f\u5426\u4ee5\u4e8c\u8fdb\u5236\u5f62\u5f0fdump\u6bcf\u4e00\u5c42\u7ed3\u679c\u3002 True: Dump\u7ed3\u679c\u4ee5\u4e8c\u8fdb\u5236\u5f62\u5f0f\u4fdd\u5b58\u4e8e\u5f53\u524d\u8fd0\u884c\u76ee\u5f55\u4e0b\u7684 ./dumpData/onnx_NHWC_outtensor_dump.bin\uff084\u7ef4tensor\u6392\u5e03\u683c\u5f0f\u4e3aNHWC\uff0c\u4e0eSigmaStar\u6a21\u578b\u76f8\u540c\uff09 False: Dump\u7ed3\u679c\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u4fdd\u5b58\u4e8e\u5f53\u524d\u8fd0\u884c\u76ee\u5f55\u4e0b\u7684 ./dumpData/onnx_NHWC_outtensor_dump.txt\uff084\u7ef4tensor\u6392\u5e03\u683c\u5f0f\u4e3aNHWC\uff0c\u4e0eSigmaStar\u6a21\u578b\u76f8\u540c\uff09 ./dumpData/NHWC\uff08\u6bcf\u5c42\u8f93\u51fa\u5355\u72ec\u751f\u6210\u6587\u4ef6\uff0c4\u7ef4tensor\u6392\u5e03\u683c\u5f0f\u4e3aNHWC\uff0c\u4e0eSigmaStar\u6a21\u578b\u76f8\u540c\uff09 ./dumpData/NCHW\uff08\u6bcf\u5c42\u8f93\u51fa\u5355\u72ec\u751f\u6210\u6587\u4ef6\uff0c4\u7ef4tensor\u6392\u5e03\u683c\u5f0f\u4e3aNCHW\uff0c\u4e0e\u539f\u6a21\u578b\u6392\u5e03\u76f8\u540c\uff09 -n , --preprocess : \u524d\u5904\u7406\u65b9\u6cd5\uff0c\u8bf7\u76f4\u63a5\u7ed9\u5b9a\u524d\u5904\u7406python\u6587\u4ef6\u8def\u5f84\u3002\u9700\u8981\u786e\u4fdd\u524d\u5904\u7406python\u6587\u4ef6\u4e2d\u5305\u542b get_image \u51fd\u6570\uff0c\u5e76\u4e14\u8be5\u51fd\u6570\u5e26\u6709 nchw \u53c2\u6570\u7528\u6765\u5904\u7406\u539f\u6a21\u578b4\u7ef4\u8f93\u5165\u7684\u6392\u5e03\u4e3aNCHW\uff08onnx_dump_data.py\u4f1a\u76f4\u63a5\u8c03\u7528get_image\u51fd\u6570\u6765\u751f\u6210\u6a21\u578binput\u6570\u636e\uff0c\u5e76\u4e14\u5f3a\u5236nchw=True\uff09\u3002 \u524d\u5904\u7406\u811a\u672c\u51fd\u6570\u793a\u4f8b\uff1a def get_image ( img_path, resizeH = 224 , resizeW = 224 , resizeC = 3 , norm = True, meanB = 104 , meanG = 117 , meanR = 123 , std = 58 .82, rgb = False, nchw = False ) : ... ... if nchw: # NCHW img_norm = np.transpose ( img_norm.reshape ( resizeH, resizeW, -1 ) , axes =( 2 , 0 , 1 )) return np.expand_dims ( img_norm, 0 ) Please Note: \u82e5\u6a21\u578b\u4e3a \u591a\u8f93\u5165 \u65f6\uff0c -n,--preprocess \u53c2\u6570\u7528\u6cd5\u9700\u8981\u591a\u4e2a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4f8b\u5982 -n preprocess1.py,preprocess2.py \u6216\u8005 --preprocess preprocess1.py,preprocess2.py \u82e5\u6a21\u578b\u4e3a \u591a\u8f93\u5165 \u65f6\uff0c -i/--image \u53c2\u6570\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\u3002 6.2.2 \u4f7f\u7528auto_dump_debug.sh\u811a\u672c\u5206\u6790\u6570\u636e \u00b6 \u5de5\u5177\u7684\u4f4d\u7f6e\u5728 SGS_IPU_SDK/DumpDebug/auto_dump_debug.sh \u3002 6.2.2.1 \u5bf9\u6bd4\u5206\u6790SigmaStar\u6d6e\u70b9\u4e0e\u5b9a\u70b9\u6a21\u578b \u00b6 auto_dump_debug.sh\u811a\u672c\u80fd\u591f\u5bf9\u6bd4\u6837\u672c bin\uff08sample\uff09\u548c\u57fa\u51c6 bin\uff08benchmark\uff09\u7684\u76f8\u540coutput tensor\u5c42\u7684COS\u3001MSE\u548cRMSE\uff0c\u9700\u4f7f\u7528[6.2.1.1 Dump SigmaStar\u6d6e\u70b9\u6216\u5b9a\u70b9\u6a21\u578b]\u4e2dDump\u51fa\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u548c\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u7684bin\u6587\u4ef6\u3002 \u4f7f\u7528\u793a\u4f8b\uff1a ./auto_dump_debug.sh \\ /home/user/SGS_IPU_SDK \\ /home/user/sample.bin \\ /home/user/benchmark.bin \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a Param1 : SGS_IPU_SDK \u7684\u8def\u5f84\uff0c\u5982\u679c\u5728\u5f53\u524d\u4f4d\u7f6e\uff0c\u53ea\u9700\u4f20\u76ee\u5f55\u5939\u540d\u3002 Param2 : \u9700\u8981\u5bf9\u6bd4\u7684\u5df2\u7ecf dump\u51fa\u6765\u7684sample bin\u8def\u5f84\uff0c\u6b64\u5904\u5e94\u4e3a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578bDump\u51fa\u7684bin\u6587\u4ef6\u8def\u5f84\u3002 Param3 : \u4f5c\u4e3a\u53c2\u8003\u7684\u5df2\u7ecf dump\u51fa\u6765\u7684 benchmark bin\u8def\u5f84\uff0c\u6b64\u5904\u5e94\u4e3a\u6d6e\u70b9\u7f51\u7edc\u6a21\u578bDump\u51fa\u7684bin\u6587\u4ef6\u8def\u5f84\u3002 \u672a\u5f00\u542fdisableDomainFuseOps\u9009\u9879\u65f6\uff0c\u5b8c\u6210\u5206\u6790\u540e\u663e\u793a\u5982\u4e0b\uff1a\uff08\u90e8\u5206\uff09 3.conv1_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000046 COS:0.999898 RMSE:0.014310 4.pool1.xx.output0 OP_TYPE:MAX_POOL_2D MSE:0.000057 COS:0.999931 RMSE:0.011018 7.res2a_branch1_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000076 COS:0.999886 RMSE:0.015652 11.res2a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000027 COS:0.999652 RMSE:0.023612 16.res2a_xx.xx.output0 OP_TYPE:RELU MSE:0.000177 COS:0.999644 RMSE:0.025049 20.res2b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000069 COS:0.999242 RMSE:0.039121 25.res2b_xx.xx.output0 OP_TYPE:RELU MSE:0.000430 COS:0.999452 RMSE:0.030551 28.res3a_branch1_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000165 COS:0.998975 RMSE:0.041644 32.res3a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000139 COS:0.998842 RMSE:0.048416 37.res3a_xx.xx.output0 OP_TYPE:RELU MSE:0.000297 COS:0.999069 RMSE:0.041043 41.res3b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000070 COS:0.998836 RMSE:0.051215 46.res3b_xx.xx.output0 OP_TYPE:RELU MSE:0.000366 COS:0.999035 RMSE:0.042863 49.res4a_branch1_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000026 COS:0.999282 RMSE:0.035575 53.res4a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000108 COS:0.998950 RMSE:0.047213 58.res4a_xx.xx.output0 OP_TYPE:RELU MSE:0.000149 COS:0.999174 RMSE:0.040582 62.res4b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000030 COS:0.999020 RMSE:0.046630 67.res4b_xx.xx.output0 OP_TYPE:RELU MSE:0.000168 COS:0.999073 RMSE:0.041229 70.res5a_branch1_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000305 COS:0.999276 RMSE:0.033715 74.res5a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000032 COS:0.998723 RMSE:0.053469 79.res5a_xx.xx.output0 OP_TYPE:RELU MSE:0.000507 COS:0.998762 RMSE:0.050663 83.res5b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000027 COS:0.998182 RMSE:0.064201 88.res5b_xx.xx.output0 OP_TYPE:RELU MSE:0.006022 COS:0.998665 RMSE:0.056931 89.pool5.xx.output0 OP_TYPE:AVG_POOL_2D MSE:0.004321 COS:0.998488 RMSE:0.079694 90.fc1000_reshape#1_output#183.output0 OP_TYPE:ReshapeAliasMSE:0.004321 COS:0.998488 RMSE:0.079694 91.fc1000#185.xx.output0 OP_TYPE:CONV_2D MSE:0.014197 COS:0.998901 RMSE:0.051447 92.fc1000.xx.output0 OP_TYPE:ReshapeAliasMSE:0.014197 COS:0.998901 RMSE:0.051447 93.prob.xx.output0 OP_TYPE:Fix2Float MSE:0.000000 COS:1.000000 RMSE:0.000152 \u5f00\u542fdisableDomainFuseOps\u9009\u9879\u65f6\uff0c\u5b8c\u6210\u5206\u6790\u540e\u663e\u793a\u5982\u4e0b\uff1a\uff08\u90e8\u5206\uff09 0.conv1.xx.output0 OP_TYPE:CONV_2D MSE:2.397930 COS:0.999887 RMSE:0.019312 1.conv1_xx.xx.output0 OP_TYPE:MUL MSE:0.000037 COS:0.999850 RMSE:0.020800 2.conv1_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000037 COS:0.999936 RMSE:0.010667 3.conv1_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000052 COS:0.999885 RMSE:0.015123 4.pool1.xx.output0 OP_TYPE:MAX_POOL_2D MSE:0.000063 COS:0.999924 RMSE:0.011603 5.res2a_branch1.xx.output0 OP_TYPE:CONV_2D MSE:0.000096 COS:0.999952 RMSE:0.009368 6.res2a_branch1_xx.xx.output0 OP_TYPE:MUL MSE:0.000080 COS:0.999956 RMSE:0.009144 7.res2a_branch1_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000080 COS:0.999880 RMSE:0.016141 8.res2a_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.000349 COS:0.999951 RMSE:0.009727 9.res2a_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000049 COS:0.999956 RMSE:0.009349 10.res2a_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000049 COS:0.999886 RMSE:0.016510 11.res2a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000028 COS:0.999641 RMSE:0.024211 12.res2a_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000100 COS:0.999821 RMSE:0.018379 13.res2a_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.000118 COS:0.999832 RMSE:0.017982 14.res2a_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000118 COS:0.999670 RMSE:0.024984 15.res2a.xx.output0 OP_TYPE:ADD MSE:0.000241 COS:0.999771 RMSE:0.021801 16.res2a_xx.xx.output0 OP_TYPE:RELU MSE:0.000182 COS:0.999634 RMSE:0.025262 17.res2b_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.000525 COS:0.999709 RMSE:0.023127 18.res2b_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000193 COS:0.999746 RMSE:0.022434 19.res2b_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000193 COS:0.999474 RMSE:0.032121 20.res2b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000071 COS:0.999219 RMSE:0.039747 21.res2b_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000157 COS:0.999549 RMSE:0.030371 22.res2b_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.000272 COS:0.999587 RMSE:0.029537 23.res2b_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000272 COS:0.999151 RMSE:0.040304 24.res2b.xx.output0 OP_TYPE:ADD MSE:0.000534 COS:0.999425 RMSE:0.031402 25.res2b_xx.xx.output0 OP_TYPE:RELU MSE:0.000448 COS:0.999429 RMSE:0.031203 26.res3a_branch1.xx.output0 OP_TYPE:CONV_2D MSE:0.000267 COS:0.999320 RMSE:0.034101 27.res3a_branch1_xx.xx.output0 OP_TYPE:MUL MSE:0.000169 COS:0.999345 RMSE:0.034331 28.res3a_branch1_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000169 COS:0.998949 RMSE:0.042434 29.res3a_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.001885 COS:0.999472 RMSE:0.030785 30.res3a_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000427 COS:0.999486 RMSE:0.030586 31.res3a_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000427 COS:0.998909 RMSE:0.045188 32.res3a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000147 COS:0.998773 RMSE:0.049700 33.res3a_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000331 COS:0.999425 RMSE:0.034038 34.res3a_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.000368 COS:0.999411 RMSE:0.034275 35.res3a_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000368 COS:0.998931 RMSE:0.044919 36.res3a.xx.output0 OP_TYPE:ADD MSE:0.000585 COS:0.999040 RMSE:0.042398 37.res3a_xx.xx.output0 OP_TYPE:RELU MSE:0.000301 COS:0.999058 RMSE:0.041479 38.res3b_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.000811 COS:0.999530 RMSE:0.029739 39.res3b_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000288 COS:0.999580 RMSE:0.028879 40.res3b_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000288 COS:0.999383 RMSE:0.033874 41.res3b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000073 COS:0.998787 RMSE:0.052493 42.res3b_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000136 COS:0.999469 RMSE:0.033442 43.res3b_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.000314 COS:0.999489 RMSE:0.033050 44.res3b_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000314 COS:0.999308 RMSE:0.036079 45.res3b.xx.output0 OP_TYPE:ADD MSE:0.000659 COS:0.998989 RMSE:0.042628 46.res3b_xx.xx.output0 OP_TYPE:RELU MSE:0.000375 COS:0.999011 RMSE:0.043575 47.res4a_branch1.xx.output0 OP_TYPE:CONV_2D MSE:0.000098 COS:0.999264 RMSE:0.037842 48.res4a_branch1_xx.xx.output0 OP_TYPE:MUL MSE:0.000027 COS:0.999298 RMSE:0.037615 49.res4a_branch1_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000027 COS:0.999253 RMSE:0.036302 50.res4a_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.001011 COS:0.999543 RMSE:0.028507 51.res4a_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000300 COS:0.999544 RMSE:0.028563 52.res4a_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000300 COS:0.999147 RMSE:0.040221 53.res4a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000107 COS:0.998961 RMSE:0.047238 54.res4a_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000335 COS:0.999464 RMSE:0.032660 55.res4a_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.000255 COS:0.999453 RMSE:0.032788 56.res4a_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000255 COS:0.999234 RMSE:0.038888 57.res4a.xx.output0 OP_TYPE:ADD MSE:0.000312 COS:0.999298 RMSE:0.036873 58.res4a_xx.xx.output0 OP_TYPE:RELU MSE:0.000146 COS:0.999191 RMSE:0.040181 59.res4b_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.000369 COS:0.999748 RMSE:0.021992 60.res4b_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000156 COS:0.999772 RMSE:0.021527 61.res4b_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000156 COS:0.999625 RMSE:0.026857 62.res4b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000028 COS:0.999073 RMSE:0.045494 63.res4b_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000048 COS:0.999748 RMSE:0.022612 64.res4b_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.000191 COS:0.999751 RMSE:0.022354 65.res4b_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000191 COS:0.999678 RMSE:0.024581 66.res4b.xx.output0 OP_TYPE:ADD MSE:0.000337 COS:0.999448 RMSE:0.032108 67.res4b_xx.xx.output0 OP_TYPE:RELU MSE:0.000160 COS:0.999113 RMSE:0.040588 68.res5a_branch1.xx.output0 OP_TYPE:CONV_2D MSE:0.000072 COS:0.999179 RMSE:0.038052 69.res5a_branch1_xx.xx.output0 OP_TYPE:MUL MSE:0.000290 COS:0.999179 RMSE:0.038130 70.res5a_branch1_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000290 COS:0.999311 RMSE:0.032880 71.res5a_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.000355 COS:0.999758 RMSE:0.020371 72.res5a_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000133 COS:0.999750 RMSE:0.020561 73.res5a_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000133 COS:0.999613 RMSE:0.026392 74.res5a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000028 COS:0.998859 RMSE:0.051003 75.res5a_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000063 COS:0.999512 RMSE:0.031809 76.res5a_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.001009 COS:0.999480 RMSE:0.032233 77.res5a_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.001009 COS:0.999257 RMSE:0.039436 78.res5a.xx.output0 OP_TYPE:ADD MSE:0.001413 COS:0.999379 RMSE:0.034297 79.res5a_xx.xx.output0 OP_TYPE:RELU MSE:0.000457 COS:0.998876 RMSE:0.048274 80.res5b_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.001387 COS:0.999842 RMSE:0.015781 81.res5b_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000239 COS:0.999839 RMSE:0.015798 82.res5b_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000239 COS:0.999639 RMSE:0.026762 83.res5b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000023 COS:0.998458 RMSE:0.058598 84.res5b_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000041 COS:0.999061 RMSE:0.041137 85.res5b_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.007750 COS:0.999058 RMSE:0.041188 86.res5b_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.007751 COS:0.998732 RMSE:0.052601 87.res5b.xx.output0 OP_TYPE:ADD MSE:0.008533 COS:0.998792 RMSE:0.052043 88.res5b_xx.xx.output0 OP_TYPE:RELU MSE:0.004860 COS:0.998924 RMSE:0.051718 89.pool5.xx.output0 OP_TYPE:AVG_POOL_2D MSE:0.004061 COS:0.998601 RMSE:0.078395 90.fc1000_reshape#1_output#183.output0 OP_TYPE:ReshapeAliasMSE:0.004061 COS:0.998601 RMSE:0.078395 91.fc1000#185.xx.output0 OP_TYPE:CONV_2D MSE:0.013363 COS:0.998935 RMSE:0.050327 92.fc1000.xx.output0 OP_TYPE:ReshapeAliasMSE:0.013363 COS:0.998935 RMSE:0.050327 93.prob.xx.output0 OP_TYPE:SOFTMAX MSE:0.000000 COS:1.000000 RMSE:0.000152 6.2.2.2 \u5bf9\u6bd4\u5206\u6790SigmaStar\uff08\u6d6e\u70b9/\u5b9a\u70b9\uff09\u6a21\u578b\u4e0e\u539f\u6a21\u578b\uff08Caffe/Onnx\uff09 \u00b6 auto_dump_debug.sh\u811a\u672c\u540c\u6837\u80fd\u591f\u5bf9\u6bd4SigmaStar\uff08\u6d6e\u70b9/\u5b9a\u70b9\uff09\u6a21\u578b\u4e0e\u539f\u6a21\u578b\uff08Caffe/Onnx\uff09\u76f8\u540coutput tensor\u5c42\u7684COS\u3001MSE\u548cRMSE\u3002\u6253\u5370\u683c\u5f0f\u4e0e[6.2.2.1 \u5bf9\u6bd4\u5206\u6790SigmaStar\u6d6e\u70b9\u4e0e\u5b9a\u70b9\u6a21\u578b]\u76f8\u540c\u3002 \u5c06[6.2.1.1 Dump SigmaStar\u6d6e\u70b9\u6216\u5b9a\u70b9\u6a21\u578b]\u4e2dDump\u51fa\u7684\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6216\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u7684bin\u6587\u4ef6\u4f5c\u4e3a\u6837\u672c bin\uff08sample\uff09\uff0c\u4f20\u5165Param2\uff0c\u4e0d\u5f97\u4f20\u5165Param3\u3002 \u5c06[6.2.1.2 Dump Caffe\u539f\u6a21\u578b]\u6216[6.2.1.3 Dump Onnx\u539f\u6a21\u578b]\u4e2dDump\u51fa\u7684\u539f\u6a21\u578bbin\u6587\u4ef6\u4f5c\u4e3a\u57fa\u51c6 bin\uff08benchmark\uff09\uff0c\u4f20\u5165Param3\uff0c\u4e0d\u5f97\u4f20\u5165Param2\u3002 \u4e0eCaffe\u539f\u6a21\u578b\u5bf9\u6bd4\uff1a ./auto_dump_debug.sh \\ /home/user/SGS_IPU_SDK \\ /home/user/sigma_outtensor_dump.bin \\ /home/user/caffe_NHWC_outtensor_dump.bin \u4e0eOnnx\u539f\u6a21\u578b\u5bf9\u6bd4\uff1a ./auto_dump_debug.sh \\ /home/user/SGS_IPU_SDK \\ /home/user/sigma_outtensor_dump.bin \\ /home/user/onnx_NHWC_outtensor_dump.bin \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a Param1 : SGS_IPU_SDK \u7684\u8def\u5f84\uff0c\u5982\u679c\u5728\u5f53\u524d\u4f4d\u7f6e\uff0c\u53ea\u9700\u4f20\u76ee\u5f55\u5939\u540d\u3002 Param2 : \u9700\u8981\u5bf9\u6bd4\u7684\u5df2\u7ecf dump\u51fa\u6765\u7684sample bin\u8def\u5f84\uff0c\u6b64\u5904\u5e94\u4e3aSigmaStar\u7f51\u7edc\u6a21\u578b\uff08\u6d6e\u70b9/\u5b9a\u70b9\uff09Dump\u51fa\u7684bin\u6587\u4ef6\u8def\u5f84\u3002 Param3 : \u4f5c\u4e3a\u53c2\u8003\u7684\u5df2\u7ecf dump\u51fa\u6765\u7684 benchmark bin\u8def\u5f84\uff0c\u6b64\u5904\u5e94\u4e3a\u539f\u6a21\u578b\uff08Caffe/Onnx\uff09Dump\u51fa\u7684bin\u6587\u4ef6\u8def\u5f84\u3002 6.3. \u4f7f\u7528histogram.py\u7ed8\u5236\u5404\u5c42\u7f51\u7edc\u6a21\u578b\u7684Histogram\u56fe \u00b6 \u5de5\u5177\u7684\u4f4d\u7f6e\u5728 SGS_IPU_SDK/DumpDebug/histogram.py \u3002 \u8be5\u5de5\u5177\u53ef\u5bf9Dump\u51fa\u6765\u7684\u6570\u636e\u7ed8\u5236\u5404\u5c42\u7684\u6570\u636e\u5206\u5e03\uff0c\u4f7f\u7528\u8be5\u5de5\u5177\u9700Dump\u51fa\u7684\u6570\u636e\u6587\u4ef6\uff0c\u4ee5\u53ca\u4f7f\u7528calibrator \u5de5\u5177\u5c06\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u6210\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u65f6\u5728\u8fd0\u884c\u76ee\u5f55\u4e0b log/tensor_min_max.txt \u6587\u4ef6\u3002 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a Python3 histogram.py sigma_outtensor_dump.bin tensor_min_max.txt \u8fd0\u884c\u4e2d\u5982\u4e0b\u63d0\u793a [===============================================> ]97.61% \u7ed8\u5236\u7684Histogram\u56fe\u5982\u4e0b\u6240\u793a\uff1a \u56fe\u4e2d\u84dd\u8272\u90e8\u5206\u662f\u8be5\u5c42\u7f51\u7edc\u6570\u636e\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u5de6\u53f3\u4e24\u8fb9\u7684\u7ea2\u8272\u865a\u7ebf\u662f\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\u3002 Note \u5de5\u5177\u5728\u8fd0\u884c\u5f53\u524d\u8def\u5f84\u4e0b\uff0c\u4f1a\u521b\u5efaHistograms\u6587\u4ef6\u5939\uff0c\u91cc\u9762\u5305\u542b\u5404\u7f51\u7edc\u5c42\u7684\u6570\u636eHistogram\u56fe\u7247\u3002 \u5bf9\u4e0d\u540cDump\u6570\u636e\u7ed8\u5236\u7f51\u7edc\u6a21\u578b\u7684Histogram\u56fe\u65f6\uff0c\u5e94\u8be5\u91cd\u547d\u540d\u5f53\u524d\u8def\u5f84\u4e0b\u7684Histograms\u6587\u4ef6\u5939\uff0c\u6216\u79fb\u52a8\u81f3\u5176\u4ed6\u8def\u5f84\uff0c histogram.py \u5de5\u5177\u4f1a\u5728\u8fd0\u884c\u65f6\u5220\u9664\u5f53\u524d\u8def\u5f84\u4e0b\u7684Histograms\u6587\u4ef6\u5939\u3002 6.4. \u9519\u8bef\u5904\u7406 \u00b6 \u5f53\u8fd0\u884c\u65f6\u53d1\u751fSegmentFault\u9519\u8bef\u65f6\uff0c\u7a0b\u5e8f\u4e2d\u65ad\u8fd0\u884c\uff0c\u6b64\u65f6\u5b9a\u4f4d\u7a0b\u5e8f\u53d1\u751f\u9519\u8bef\u4f4d\u7f6e\u81f3\u5173\u91cd\u8981\u3002\u8bf7\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\uff0c\u534f\u52a9\u63d0\u4f9b\u76f8\u5173\u4fe1\u606f\u3002 \u4fee\u6539\u751f\u6210core\u6587\u4ef6\u8def\u5f84\u4e3a\u5f53\u524d\u76ee\u5f55\uff0c\u5e76\u8bbe\u7f6ecore\u6587\u4ef6\u5927\u5c0f\u65e0\u4e0a\u9650\uff1a echo core > /proc/sys/kernel/core_pattern ulimit -c unlimited \u91cd\u65b0\u8fd0\u884c\u521a\u521a\u53d1\u751f\u9519\u8bef\u7684\u8f6c\u6362\u7f51\u7edc\u547d\u4ee4\u3002 \u751f\u6210core\u6587\u4ef6\u540e\uff0c\u8fd0\u884c\u5982\u4e0b\u547d\u4ee4\uff0c\u4f1a\u6253\u5370\u7a0b\u5e8f\u76f8\u5173\u4fe1\u606f\uff1a ~/SGS_IPU_SDK/DumpDebug/show_address.sh /path/to/SGS_IPU_SDK/bin/XXX /path/to/core show_address.sh\u811a\u672c\u9700\u8981\u4e24\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u6267\u884c\u547d\u4ee4\u7684bin\u7684\u8def\u5f84\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3acore\u7684\u8def\u5f84\u3002 \u5c4f\u5e55\u4f1a\u6253\u5370\u5185\u5b58\u6620\u5c04\u4fe1\u606f\u4ee5\u53ca\u7a0b\u5e8f\u51fd\u6570\u5806\u6808\u5730\u5740\uff0c\u8bf7\u53cd\u9988\u6b64\u4fe1\u606f\u3002 6.5. \u76f8\u5173\u95ee\u9898\u6c47\u603b \u00b6 DumpDebug Tool\u63d0\u4f9b\u4e86\u6a21\u578b\u91cf\u5316\u540e\u7cbe\u5ea6\u4e0b\u964d\u95ee\u9898\u7684\u6392\u67e5\u65b9\u6cd5\uff0c\u53ef\u7528\u4e8e\u9488\u5bf9\u5b9e\u9645\u95ee\u9898\u53c2\u8003\u3002 \u4f7f\u7528calibrator\u65f6\uff0c --quant_level \u9009\u62e9L2\u3001L3\u3001L4\u6216L5\u65f6\u4f1a\u6839\u636e\u7edf\u8ba1\u4fe1\u606f\u81ea\u52a8\u914d\u7f6e\u5377\u79ef\u7684\u91cf\u5316\u65b9\u5f0f\uff0c\u5982\u679ccalibrator\u672a\u80fd\u5c06\u4e0b\u5217\u60c5\u51b5\u7684\u5377\u79ef\u4fee\u6539\u6210\u201dINT16\u201d\u5377\u79ef\u6a21\u5f0f\uff0c\u8bf7\u624b\u52a8\u5f00\u542f\u3002 \u5728\u5c06SigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u5316\u4e3aSigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u65f6\uff0c\u6ce8\u610f\u4fdd\u5b58\u5728\u8fd0\u884c\u76ee\u5f55\u4e0b\u7684 log/tensor_min_max.txt \u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u8bb0\u5f55\u4e86\u5728\u8f6c\u6362\u8fc7\u7a0b\u4e2d\u5404\u5c42\u7684\u6700\u5927\u548c\u6700\u5c0f\u503c\u3002\u5982\u679c\u5377\u79ef\u8f93\u5165\u5c42\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u76f8\u5dee\u8fc7\u5927\uff08\u4e00\u822c\u8ba4\u4e3a\u5dee\u503c\u5927\u4e8e30\uff09\uff0c\u9700\u8981\u5728\u5bf9\u5e94\u7f51\u7edc\u7684input_config.ini\u6587\u4ef6\u4e2d\u5f00\u542f\u8be5\u5c42\u7684\u201dINT16\u201d\u5377\u79ef\u6a21\u5f0f\uff0c\u5177\u4f53\u4fee\u6539\u65b9\u6cd5\u8bf7\u53c2\u8003[2.2. input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e]\u914d\u7f6e\u4fe1\u606f\u3002\u4fee\u6539input_config.ini\u6587\u4ef6\u540e\u9700\u8981\u91cd\u65b0\u4ece\u539f\u59cb\u6846\u67b6\u8bad\u7ec3\u7684\u6a21\u578b\u8f6c\u6362\u3002 \u4f7f\u7528[6.2.2 \u4f7f\u7528auto_dump_debug.sh\u811a\u672c\u5206\u6790\u6570\u636e]\u7684auto_dump_debug.sh\u811a\u672c\u5bf9\u6bd4\u6570\u636e\u540e\uff0c\u5982\u679cRMSE\u503c\u8f83\u5927\uff08\u4e00\u822c\u8ba4\u4e3a\u5927\u4e8e0.5\uff09\uff0c\u53ef\u5c06\u8be5\u5c42\u524d\u7684\u5377\u79ef\u8f93\u5165\u5c42\u5f00\u542f INT16 \u5377\u79ef\u6a21\u5f0f\u3002\u4fee\u6539input_config.ini\u6587\u4ef6\u540e\u9700\u8981\u91cd\u65b0\u4ece\u539f\u59cb\u6846\u67b6\u8bad\u7ec3\u7684\u6a21\u578b\u8f6c\u6362\u3002 \u4f7f\u7528[6.3. \u4f7f\u7528histogram.py\u7ed8\u5236\u5404\u5c42\u7f51\u7edc\u6a21\u578b\u7684Histogram\u56fe]\u7684histogram.py\u5de5\u5177\u7ed8\u5236Histogram\u56fe\u5e94\u4f7f\u7528SigmaStar\u6d6e\u70b9\u7f51\u7edc\u7684Dump\u6570\u636e\u548c\u5bf9\u5e94\u7684tensor_min_max.txt\u3002\u5982\u679c\u56fe\u4e2d\u7684\u6570\u636e\u5206\u5e03\u5f88\u96c6\u4e2d\uff0c\u4f46\u662f\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u8303\u56f4\u8f83\u5927\uff08\u4e00\u822c\u8ba4\u4e3a\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u7684\u5dee\u503c\u5927\u4e8e30\uff09\uff0c\u53ef\u4ee5\u8003\u8651\u5bf9\u8be5\u5c42\u5377\u79ef\u7684\u8f93\u5165\u5f00\u542f INT16 \u5377\u79ef\u6a21\u5f0f\u3002\u4fee\u6539input_config.ini\u6587\u4ef6\u540e\u9700\u8981\u91cd\u65b0\u4ece\u539f\u59cb\u6846\u67b6\u8bad\u7ec3\u7684\u6a21\u578b\u8f6c\u6362\u3002","title":"DumpDebug Tool"},{"location":"module/User_Guide/Common/DumpDebug_Tool.html#61","text":"DumpDebug Tool\u5de5\u5177\u7684\u4f4d\u7f6e\u5728 SGS_IPU_SDK/DumpDebug/ \u3002 \u8be5\u5de5\u5177\u662f\u4e3b\u8981\u529f\u80fd\u5982\u4e0b\uff1a \u89e3\u6790\u7f51\u7edc\u6a21\u578b\u6570\u636e\uff1b \u5bf9\u6bd4\u4e0d\u540c\u9636\u6bb5\u7684\u7f51\u7edc\u6a21\u578b\u6570\u636e\uff1b \u7ed8\u5236\u5404\u5c42\u7f51\u7edc\u6a21\u578b\u7684Histogram\u56fe\u3002 SigmaStar DLA SDK\u5728\u8f6c\u6362\u7f51\u7edc\u65f6\uff0cCaffe\u3001Onnx\u3001TensorFlow\u7684\u7f51\u7edc\u6a21\u578b\u4e0eSigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u7684\u7ed3\u679c\u5b8c\u5168\u4e00\u81f4\uff0cSigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u4e0eSigmaStar\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u7684\u7ed3\u679c\u5b8c\u5168\u4e00\u81f4\u3002 \u6709\u7cbe\u5ea6\u5dee\u522b\u7684\u53ea\u6709\u5728SigmaStar\u6d6e\u70b9\u6a21\u578b\u8f6c\u6362\u4e3aSigmaStar\u5b9a\u70b9\u8fd9\u4e2a\u9636\u6bb5\uff0c\u56e0\u6b64\u5728\u53d1\u73b0SigmaStar\u5b9a\u70b9\u7f51\u7edc\u7684\u7ed3\u679c\u4e0e\u539f\u6709\u6d6e\u70b9\u7684\u7ed3\u679c\u76f8\u5dee\u8f83\u591a\u65f6\uff0c\u4f7f\u7528DumpDebug Tool\u53ef\u4ee5\u68c0\u67e5\u8f6c\u6362\u540e\u5b9a\u70b9\u7f51\u7edc\u7684\u9519\u8bef\u3002 DumpDebug Tool\u4e5f\u53ef\u7528\u4e8e\u76f4\u63a5dump\u539f\u6a21\u578bCaffe/Onnx\u7684\u6bcf\u4e00\u5c42\u6570\u636e\uff0c\u4ee5\u4fbf\u4e0eSigmaStar\u6a21\u578b\u8fdb\u884c\u5bf9\u6bd4\u3002","title":"6.1. \u4e3b\u8981\u529f\u80fd"},{"location":"module/User_Guide/Common/DumpDebug_Tool.html#62","text":"","title":"6.2. \u4f7f\u7528\u6b65\u9aa4"},{"location":"module/User_Guide/Common/DumpDebug_Tool.html#621-dump","text":"","title":"6.2.1 Dump\u7f51\u7edc\u6a21\u578b\u4e2d\u5404\u5c42\u6570\u636e"},{"location":"module/User_Guide/Common/DumpDebug_Tool.html#6211-dump-sigmastar","text":"\u5728 SGS_IPU_SDK/cfg \u6587\u4ef6\u5939\u4e2d\u627e\u5230DebugConfig.txt\u6587\u4ef6\uff0c\u590d\u5236\u5230\u5f53\u524d\u8fd0\u884c\u8def\u5f84\u4e0b. \u6253\u5f00DebugConfig.txt\uff0c\u4fee\u6539\u6587\u4ef6\u5185\u5bb9\uff1a dumpTensor eliminateGarbage dequantFixed #dumpasstring #disableDomainFuseOps path = DebugConfig.txt\u5404\u53c2\u6570\u4f5c\u7528: dumpTensor : Dump\u7f51\u7edc\u6a21\u578b\u5404\u5c42\u6570\u636e\u603b\u5f00\u5173\u3002 eliminateGarbage : Dump\u7f51\u7edc\u6a21\u578b\u6570\u636e\u65f6\u53bb\u9664\u65e0\u7528\u6570\u636e\uff08\u5efa\u8bae\u5f00\u542f\uff09\u3002 dequantFixed : \u9488\u5bf9\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff0c\u5c06\u6574\u5f62\u6570\u636e\u8f6c\u6362\u4e3a\u6d6e\u70b9\u6570\u636e\uff08\u5efa\u8bae\u5f00\u542f\uff09\u3002 dumpasstring : Dump\u7f51\u7edc\u6a21\u578b\u6570\u636e\u4e3a\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u5173\u95ed\u9009\u9879\u4e3a\u4e8c\u8fdb\u5236\u6587\u4ef6\u7c7b\u578b\u3002\uff08\u5982\u679c\u9700\u8981[6.2.2 \u4f7f\u7528auto_dump_debug.sh\u811a\u672c\u5206\u6790\u6570\u636e]\u529f\u80fd\uff0c\u52a1\u5fc5\u5173\u95ed\u6b64\u9009\u9879\uff09\u3002 disableDomainFuseOps : \u8f6c\u6362\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u65f6\uff0c\u53d6\u6d88\u7f51\u7edc\u5c42\u878d\u5408\uff08\u5efa\u8bae\u5173\u95ed\uff09\u3002 path= : \u6307\u5b9a\u751f\u6210\u6863\u6848\u7684\u8f93\u51fa\u5168\u8def\u5f84\uff08path= \u540e\u9762\u786e\u4fdd\u586b\u5199\u7c7b\u4f3c /home/user \u7684\u7edd\u5bf9\u8def\u5f84\u3002\u5982\u679cpath= \u540e\u9762\u6ca1\u6709\u5185\u5bb9\u6216\u6839\u672c\u6ca1\u6709 path= \u7684\u8bdd\uff0c\u5219\u4f1a\u9ed8\u8ba4\u8f93\u51fa\u5230 $HOME \u4f4d\u7f6e\u3002\u53e6\u5916\uff0c\u7edd\u5bf9\u8def\u5f84\u6216 /home/user \u4e0d\u8d85\u8fc7122\u5b57\u8282\uff09\u3002 \u8fd0\u884csimulator\u5bf9\u5355\u5f20\u56fe\u7247\u63a8\u6f14\u3002 \u63a8\u6f14\u5b8c\u6210\u540e\uff0c\u4f1a\u5728path=\u53c2\u6570\u6307\u5b9a\u7684\u76ee\u5f55\u751f\u6210sigma_outtensor_dump.bin\uff0c\u5373\u4e3aDump\u7f51\u7edc\u6a21\u578b\u4e2d\u5404\u5c42\u7684\u6570\u636e\u3002 Note Dump\u5b8c\u6210\u540e\u91cd\u547d\u540dsigma_outtensor_dump.bin\u6587\u4ef6\uff0c\u8bf7\u52ff\u4fee\u6539\u6587\u4ef6\u540e\u7f00\u3002\u65b0\u7684Dump\u4f1a\u590d\u5199sigma_outtensor_dump.bin\u6587\u4ef6\u3002 DebugConfig.txt\u6587\u4ef6\u4e2ddisableDomainFuseOps \u9009\u9879\u53ea\u5728\u4f7f\u7528calibrator\u5c06\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u6210\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u65f6\u6709\u7528\u3002\u5176\u4f5c\u7528\u662f\u53d6\u6d88\u7f51\u7edc\u878d\u5408\u529f\u80fd\uff0c\u5173\u95ed\u8be5\u9009\u9879\u65f6\uff0c\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u548c\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u80fd\u591f\u5728\u8f6c\u6362\u65f6\u4f18\u5316\u7f51\u7edc\u6a21\u578b\u7684\u7b97\u5b50\uff0c\u52a0\u901f\u6a21\u578b\u7684\u8fd0\u884c\uff0c\u4f46\u662f\u4e5f\u4f1a\u5f71\u54cd\u7f51\u7edc\u7684\u5c42\u7ea7\u7ed3\u6784\uff0c\u4f7f\u5f97\u90e8\u5206\u7b97\u5b50\u7684\u8f93\u51fa\u4e0d\u4f1a\u88abDump\u5230sigma_outtersor_dump.bin\u6587\u4ef6\u4e2d\u3002\u5982\u679c\u9700\u8981\u7f51\u7edc\u6a21\u578b\u7684\u6bcf\u4e00\u5c42\u6570\u636e\uff0c\u53ef\u4ee5\u6253\u5f00disableDomainFuseOps\u9009\u9879\uff0c\u91cd\u65b0\u8fd0\u884ccalibrator\u8f6c\u6362\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff0c\u6b64\u65f6\u8f6c\u51fa\u7684\u6a21\u578b\u6ca1\u6709\u878d\u5408\u4f18\u5316\uff0c\u53ef\u4ee5\u8f93\u51fa\u6bcf\u5c42\u7684\u6570\u636e\u3002 \u5bf9\u6bd4\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u548c\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff0c\u4f7f\u7528simulator\u4e2d\u53c2\u6570 -t/--type \u548c -m/--model \u6307\u5b9a\u4e0d\u540c\u9636\u6bb5\u7684\u6a21\u578b\uff0c\u5373\u53efDump\u51fa\u4e0d\u540c\u9636\u6bb5\u7684\u7f51\u7edc\u6a21\u578b\u6570\u636e\u3002 \u79bb\u7ebf\u6a21\u578b\u4e0d\u652f\u6301Dump Debug,\u79bb\u7ebf\u6a21\u578b\u7f51\u7edc\u7684\u5c42\u7ea7\u7ed3\u6784Domain\u5df2\u7ecf\u878d\u5408\uff0c\u4e0d\u80fdDump\u7f51\u7edc\u6a21\u578b\u4e2d\u5404\u5c42\u7684\u6570\u636e\u3002 \u4f7f\u7528calibrator\u5c06\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u4e3a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u65f6\uff0c\u4f1a\u5728SGS_IPU_SDK\u6839\u76ee\u5f55\u4e0b\u4ea7\u751ftensor_min_max.txt \u6587\u4ef6\uff0c\u6b64\u6587\u4ef6\u8bb0\u5f55\u4e86\u7f51\u7edc\u7684\u6bcf\u5c42\u8f93\u5165\u548c\u8f93\u51fa\u7684\u6700\u5927\u4e0e\u6700\u5c0f\u503c\uff0c\u5c06\u5728\u4e4b\u540e\u5206\u6790Dump\u6570\u636e\u65f6\u6709\u7528\u3002","title":"6.2.1.1 Dump SigmaStar\u6d6e\u70b9\u6216\u5b9a\u70b9\u6a21\u578b"},{"location":"module/User_Guide/Common/DumpDebug_Tool.html#6212-dump-caffe","text":"\u5de5\u5177\u7684\u4f4d\u7f6e\u5728 SGS_IPU_SDK/DumpDebug/code/caffe_dump_data.py \u3002 caffe_dump_data.py\u811a\u672c\u9700\u8981\u4f7f\u7528 python2 \u8fd0\u884c\uff08Caffe\u4ec5\u652f\u6301python2\uff09\uff0c\u7528\u4e8e\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u6216\u8005\u4e8c\u8fdb\u5236\u5f62\u5f0fdump\u51faCaffe\u539f\u6a21\u578b\u6bcf\u4e00\u5c42\u7684\u6570\u636e\u3002 \u4f7f\u7528\u793a\u4f8b\uff1a \uff081\uff09caffe_dump_data.py\u4e2d\u4fee\u6539Caffe\u7684\u8fd0\u884c\u8def\u5f84\uff0c\u6bd4\u5982\uff1a caffe_root = '/home/your_caffe_root' sys.path.insert ( 0 ,caffe_root+ '/python' ) \uff082\uff09\u8fd0\u884c\u811a\u672c\uff1a python2 caffe_dump_data.py \\ --model_file caffe_mobilenet_v2.prototxt \\ --weight_file caffe_mobilenet_v2.caffemodel \\ --i ./img.bmp \\ --dump_bin True \\ -n ./caffe_mobilenet_v2.py \u5fc5\u9009\u53c2\u6570\u8bf4\u660e\uff1a --model_file : Caffe\u539f\u6a21\u578bprototxt\u6587\u4ef6\u8def\u5f84\u3002 --weight_file : Caffe\u539f\u6a21\u578bcaffemodel\u6587\u4ef6\u8def\u5f84\u3002 -i , --image : \u56fe\u7247\u6587\u4ef6\u6216\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\u6216 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u3002 --dump_bin : \u662f\u5426\u4ee5\u4e8c\u8fdb\u5236\u5f62\u5f0fdump\u6bcf\u4e00\u5c42\u7ed3\u679c\u3002 True: Dump\u7ed3\u679c\u4ee5\u4e8c\u8fdb\u5236\u5f62\u5f0f\u4fdd\u5b58\u4e8e\u5f53\u524d\u8fd0\u884c\u76ee\u5f55\u4e0b\u7684 ./dumpData/caffe_NHWC_outtensor_dump.bin\uff084\u7ef4tensor\u6392\u5e03\u683c\u5f0f\u4e3aNHWC\uff0c\u4e0eSigmaStar\u6a21\u578b\u76f8\u540c\uff09 False: Dump\u7ed3\u679c\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u4fdd\u5b58\u4e8e\u5f53\u524d\u8fd0\u884c\u76ee\u5f55\u4e0b\u7684 ./dumpData/caffe_NHWC_outtensor_dump.txt\uff084\u7ef4tensor\u6392\u5e03\u683c\u5f0f\u4e3aNHWC\uff0c\u4e0eSigmaStar\u6a21\u578b\u76f8\u540c\uff09 ./dumpData/NHWC\uff08\u6bcf\u5c42\u8f93\u51fa\u5355\u72ec\u751f\u6210\u6587\u4ef6\uff0c4\u7ef4tensor\u6392\u5e03\u683c\u5f0f\u4e3aNHWC\uff0c\u4e0eSigmaStar\u6a21\u578b\u76f8\u540c\uff09 ./dumpData/NCHW\uff08\u6bcf\u5c42\u8f93\u51fa\u5355\u72ec\u751f\u6210\u6587\u4ef6\uff0c4\u7ef4tensor\u6392\u5e03\u683c\u5f0f\u4e3aNCHW\uff0c\u4e0e\u539f\u6a21\u578b\u6392\u5e03\u76f8\u540c\uff09 -n , --preprocess : \u524d\u5904\u7406\u65b9\u6cd5\uff0c\u8bf7\u76f4\u63a5\u7ed9\u5b9a\u524d\u5904\u7406python\u6587\u4ef6\u8def\u5f84\u3002\u9700\u8981\u786e\u4fdd\u524d\u5904\u7406python\u6587\u4ef6\u4e2d\u5305\u542b get_image \u51fd\u6570\uff0c\u5e76\u4e14\u8be5\u51fd\u6570\u5e26\u6709 nchw \u53c2\u6570\u7528\u6765\u5904\u7406\u539f\u6a21\u578b4\u7ef4\u8f93\u5165\u7684\u6392\u5e03\u4e3aNCHW\uff08caffe_dump_data.py\u4f1a\u76f4\u63a5\u8c03\u7528get_image\u51fd\u6570\u6765\u751f\u6210\u6a21\u578binput\u6570\u636e\uff0c\u5e76\u4e14\u5f3a\u5236nchw=True\uff09\u3002 \u524d\u5904\u7406\u811a\u672c\u51fd\u6570\u793a\u4f8b\uff1a def get_image ( img_path, resizeH = 224 , resizeW = 224 , resizeC = 3 , norm = True, meanB = 104 , meanG = 117 , meanR = 123 , std = 58 .82, rgb = False, nchw = False ) : ... ... if nchw: # NCHW img_norm = np.transpose ( img_norm.reshape ( resizeH, resizeW, -1 ) , axes =( 2 , 0 , 1 )) return np.expand_dims ( img_norm, 0 ) Please Note: \u82e5\u6a21\u578b\u4e3a \u591a\u8f93\u5165 \u65f6\uff0c -n,--preprocess \u53c2\u6570\u7528\u6cd5\u9700\u8981\u591a\u4e2a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4f8b\u5982 -n preprocess1.py,preprocess2.py \u6216\u8005 --preprocess preprocess1.py,preprocess2.py \u82e5\u6a21\u578b\u4e3a \u591a\u8f93\u5165 \u65f6\uff0c -i/--image \u53c2\u6570\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\u3002","title":"6.2.1.2 Dump Caffe\u539f\u6a21\u578b"},{"location":"module/User_Guide/Common/DumpDebug_Tool.html#6213-dump-onnx","text":"\u5de5\u5177\u7684\u4f4d\u7f6e\u5728 SGS_IPU_SDK/DumpDebug/code/onnx_dump_data.py \u3002 onnx_dump_data.py\u811a\u672c\u9700\u8981\u4f7f\u7528 python3 \u8fd0\u884c\uff08\u4e0eIPU SDK\u73af\u5883\u76f8\u540c\uff09\uff0c\u7528\u4e8e\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u6216\u8005\u4e8c\u8fdb\u5236\u5f62\u5f0fdump\u51faOnnx\u539f\u6a21\u578b\u6bcf\u4e00\u5c42\u7684\u6570\u636e\u3002 \u4f7f\u7528\u793a\u4f8b\uff1a python3 onnx_dump_data.py \\ --model_file onnx_mobilenet_v2.onnx \\ --image ./img.bmp \\ --dump_bin True \\ -n onnx_mobilenet_v2.py \u5fc5\u9009\u53c2\u6570\u8bf4\u660e\uff1a --model_file : Onnx\u539f\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 -i , --image : \u56fe\u7247\u6587\u4ef6\u6216\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\u6216 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u3002 --dump_bin : \u662f\u5426\u4ee5\u4e8c\u8fdb\u5236\u5f62\u5f0fdump\u6bcf\u4e00\u5c42\u7ed3\u679c\u3002 True: Dump\u7ed3\u679c\u4ee5\u4e8c\u8fdb\u5236\u5f62\u5f0f\u4fdd\u5b58\u4e8e\u5f53\u524d\u8fd0\u884c\u76ee\u5f55\u4e0b\u7684 ./dumpData/onnx_NHWC_outtensor_dump.bin\uff084\u7ef4tensor\u6392\u5e03\u683c\u5f0f\u4e3aNHWC\uff0c\u4e0eSigmaStar\u6a21\u578b\u76f8\u540c\uff09 False: Dump\u7ed3\u679c\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u4fdd\u5b58\u4e8e\u5f53\u524d\u8fd0\u884c\u76ee\u5f55\u4e0b\u7684 ./dumpData/onnx_NHWC_outtensor_dump.txt\uff084\u7ef4tensor\u6392\u5e03\u683c\u5f0f\u4e3aNHWC\uff0c\u4e0eSigmaStar\u6a21\u578b\u76f8\u540c\uff09 ./dumpData/NHWC\uff08\u6bcf\u5c42\u8f93\u51fa\u5355\u72ec\u751f\u6210\u6587\u4ef6\uff0c4\u7ef4tensor\u6392\u5e03\u683c\u5f0f\u4e3aNHWC\uff0c\u4e0eSigmaStar\u6a21\u578b\u76f8\u540c\uff09 ./dumpData/NCHW\uff08\u6bcf\u5c42\u8f93\u51fa\u5355\u72ec\u751f\u6210\u6587\u4ef6\uff0c4\u7ef4tensor\u6392\u5e03\u683c\u5f0f\u4e3aNCHW\uff0c\u4e0e\u539f\u6a21\u578b\u6392\u5e03\u76f8\u540c\uff09 -n , --preprocess : \u524d\u5904\u7406\u65b9\u6cd5\uff0c\u8bf7\u76f4\u63a5\u7ed9\u5b9a\u524d\u5904\u7406python\u6587\u4ef6\u8def\u5f84\u3002\u9700\u8981\u786e\u4fdd\u524d\u5904\u7406python\u6587\u4ef6\u4e2d\u5305\u542b get_image \u51fd\u6570\uff0c\u5e76\u4e14\u8be5\u51fd\u6570\u5e26\u6709 nchw \u53c2\u6570\u7528\u6765\u5904\u7406\u539f\u6a21\u578b4\u7ef4\u8f93\u5165\u7684\u6392\u5e03\u4e3aNCHW\uff08onnx_dump_data.py\u4f1a\u76f4\u63a5\u8c03\u7528get_image\u51fd\u6570\u6765\u751f\u6210\u6a21\u578binput\u6570\u636e\uff0c\u5e76\u4e14\u5f3a\u5236nchw=True\uff09\u3002 \u524d\u5904\u7406\u811a\u672c\u51fd\u6570\u793a\u4f8b\uff1a def get_image ( img_path, resizeH = 224 , resizeW = 224 , resizeC = 3 , norm = True, meanB = 104 , meanG = 117 , meanR = 123 , std = 58 .82, rgb = False, nchw = False ) : ... ... if nchw: # NCHW img_norm = np.transpose ( img_norm.reshape ( resizeH, resizeW, -1 ) , axes =( 2 , 0 , 1 )) return np.expand_dims ( img_norm, 0 ) Please Note: \u82e5\u6a21\u578b\u4e3a \u591a\u8f93\u5165 \u65f6\uff0c -n,--preprocess \u53c2\u6570\u7528\u6cd5\u9700\u8981\u591a\u4e2a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4f8b\u5982 -n preprocess1.py,preprocess2.py \u6216\u8005 --preprocess preprocess1.py,preprocess2.py \u82e5\u6a21\u578b\u4e3a \u591a\u8f93\u5165 \u65f6\uff0c -i/--image \u53c2\u6570\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\u3002","title":"6.2.1.3 Dump Onnx\u539f\u6a21\u578b"},{"location":"module/User_Guide/Common/DumpDebug_Tool.html#622-auto_dump_debugsh","text":"\u5de5\u5177\u7684\u4f4d\u7f6e\u5728 SGS_IPU_SDK/DumpDebug/auto_dump_debug.sh \u3002","title":"6.2.2 \u4f7f\u7528auto_dump_debug.sh\u811a\u672c\u5206\u6790\u6570\u636e"},{"location":"module/User_Guide/Common/DumpDebug_Tool.html#6221-sigmastar","text":"auto_dump_debug.sh\u811a\u672c\u80fd\u591f\u5bf9\u6bd4\u6837\u672c bin\uff08sample\uff09\u548c\u57fa\u51c6 bin\uff08benchmark\uff09\u7684\u76f8\u540coutput tensor\u5c42\u7684COS\u3001MSE\u548cRMSE\uff0c\u9700\u4f7f\u7528[6.2.1.1 Dump SigmaStar\u6d6e\u70b9\u6216\u5b9a\u70b9\u6a21\u578b]\u4e2dDump\u51fa\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u548c\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u7684bin\u6587\u4ef6\u3002 \u4f7f\u7528\u793a\u4f8b\uff1a ./auto_dump_debug.sh \\ /home/user/SGS_IPU_SDK \\ /home/user/sample.bin \\ /home/user/benchmark.bin \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a Param1 : SGS_IPU_SDK \u7684\u8def\u5f84\uff0c\u5982\u679c\u5728\u5f53\u524d\u4f4d\u7f6e\uff0c\u53ea\u9700\u4f20\u76ee\u5f55\u5939\u540d\u3002 Param2 : \u9700\u8981\u5bf9\u6bd4\u7684\u5df2\u7ecf dump\u51fa\u6765\u7684sample bin\u8def\u5f84\uff0c\u6b64\u5904\u5e94\u4e3a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578bDump\u51fa\u7684bin\u6587\u4ef6\u8def\u5f84\u3002 Param3 : \u4f5c\u4e3a\u53c2\u8003\u7684\u5df2\u7ecf dump\u51fa\u6765\u7684 benchmark bin\u8def\u5f84\uff0c\u6b64\u5904\u5e94\u4e3a\u6d6e\u70b9\u7f51\u7edc\u6a21\u578bDump\u51fa\u7684bin\u6587\u4ef6\u8def\u5f84\u3002 \u672a\u5f00\u542fdisableDomainFuseOps\u9009\u9879\u65f6\uff0c\u5b8c\u6210\u5206\u6790\u540e\u663e\u793a\u5982\u4e0b\uff1a\uff08\u90e8\u5206\uff09 3.conv1_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000046 COS:0.999898 RMSE:0.014310 4.pool1.xx.output0 OP_TYPE:MAX_POOL_2D MSE:0.000057 COS:0.999931 RMSE:0.011018 7.res2a_branch1_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000076 COS:0.999886 RMSE:0.015652 11.res2a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000027 COS:0.999652 RMSE:0.023612 16.res2a_xx.xx.output0 OP_TYPE:RELU MSE:0.000177 COS:0.999644 RMSE:0.025049 20.res2b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000069 COS:0.999242 RMSE:0.039121 25.res2b_xx.xx.output0 OP_TYPE:RELU MSE:0.000430 COS:0.999452 RMSE:0.030551 28.res3a_branch1_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000165 COS:0.998975 RMSE:0.041644 32.res3a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000139 COS:0.998842 RMSE:0.048416 37.res3a_xx.xx.output0 OP_TYPE:RELU MSE:0.000297 COS:0.999069 RMSE:0.041043 41.res3b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000070 COS:0.998836 RMSE:0.051215 46.res3b_xx.xx.output0 OP_TYPE:RELU MSE:0.000366 COS:0.999035 RMSE:0.042863 49.res4a_branch1_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000026 COS:0.999282 RMSE:0.035575 53.res4a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000108 COS:0.998950 RMSE:0.047213 58.res4a_xx.xx.output0 OP_TYPE:RELU MSE:0.000149 COS:0.999174 RMSE:0.040582 62.res4b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000030 COS:0.999020 RMSE:0.046630 67.res4b_xx.xx.output0 OP_TYPE:RELU MSE:0.000168 COS:0.999073 RMSE:0.041229 70.res5a_branch1_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000305 COS:0.999276 RMSE:0.033715 74.res5a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000032 COS:0.998723 RMSE:0.053469 79.res5a_xx.xx.output0 OP_TYPE:RELU MSE:0.000507 COS:0.998762 RMSE:0.050663 83.res5b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000027 COS:0.998182 RMSE:0.064201 88.res5b_xx.xx.output0 OP_TYPE:RELU MSE:0.006022 COS:0.998665 RMSE:0.056931 89.pool5.xx.output0 OP_TYPE:AVG_POOL_2D MSE:0.004321 COS:0.998488 RMSE:0.079694 90.fc1000_reshape#1_output#183.output0 OP_TYPE:ReshapeAliasMSE:0.004321 COS:0.998488 RMSE:0.079694 91.fc1000#185.xx.output0 OP_TYPE:CONV_2D MSE:0.014197 COS:0.998901 RMSE:0.051447 92.fc1000.xx.output0 OP_TYPE:ReshapeAliasMSE:0.014197 COS:0.998901 RMSE:0.051447 93.prob.xx.output0 OP_TYPE:Fix2Float MSE:0.000000 COS:1.000000 RMSE:0.000152 \u5f00\u542fdisableDomainFuseOps\u9009\u9879\u65f6\uff0c\u5b8c\u6210\u5206\u6790\u540e\u663e\u793a\u5982\u4e0b\uff1a\uff08\u90e8\u5206\uff09 0.conv1.xx.output0 OP_TYPE:CONV_2D MSE:2.397930 COS:0.999887 RMSE:0.019312 1.conv1_xx.xx.output0 OP_TYPE:MUL MSE:0.000037 COS:0.999850 RMSE:0.020800 2.conv1_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000037 COS:0.999936 RMSE:0.010667 3.conv1_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000052 COS:0.999885 RMSE:0.015123 4.pool1.xx.output0 OP_TYPE:MAX_POOL_2D MSE:0.000063 COS:0.999924 RMSE:0.011603 5.res2a_branch1.xx.output0 OP_TYPE:CONV_2D MSE:0.000096 COS:0.999952 RMSE:0.009368 6.res2a_branch1_xx.xx.output0 OP_TYPE:MUL MSE:0.000080 COS:0.999956 RMSE:0.009144 7.res2a_branch1_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000080 COS:0.999880 RMSE:0.016141 8.res2a_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.000349 COS:0.999951 RMSE:0.009727 9.res2a_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000049 COS:0.999956 RMSE:0.009349 10.res2a_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000049 COS:0.999886 RMSE:0.016510 11.res2a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000028 COS:0.999641 RMSE:0.024211 12.res2a_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000100 COS:0.999821 RMSE:0.018379 13.res2a_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.000118 COS:0.999832 RMSE:0.017982 14.res2a_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000118 COS:0.999670 RMSE:0.024984 15.res2a.xx.output0 OP_TYPE:ADD MSE:0.000241 COS:0.999771 RMSE:0.021801 16.res2a_xx.xx.output0 OP_TYPE:RELU MSE:0.000182 COS:0.999634 RMSE:0.025262 17.res2b_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.000525 COS:0.999709 RMSE:0.023127 18.res2b_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000193 COS:0.999746 RMSE:0.022434 19.res2b_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000193 COS:0.999474 RMSE:0.032121 20.res2b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000071 COS:0.999219 RMSE:0.039747 21.res2b_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000157 COS:0.999549 RMSE:0.030371 22.res2b_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.000272 COS:0.999587 RMSE:0.029537 23.res2b_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000272 COS:0.999151 RMSE:0.040304 24.res2b.xx.output0 OP_TYPE:ADD MSE:0.000534 COS:0.999425 RMSE:0.031402 25.res2b_xx.xx.output0 OP_TYPE:RELU MSE:0.000448 COS:0.999429 RMSE:0.031203 26.res3a_branch1.xx.output0 OP_TYPE:CONV_2D MSE:0.000267 COS:0.999320 RMSE:0.034101 27.res3a_branch1_xx.xx.output0 OP_TYPE:MUL MSE:0.000169 COS:0.999345 RMSE:0.034331 28.res3a_branch1_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000169 COS:0.998949 RMSE:0.042434 29.res3a_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.001885 COS:0.999472 RMSE:0.030785 30.res3a_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000427 COS:0.999486 RMSE:0.030586 31.res3a_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000427 COS:0.998909 RMSE:0.045188 32.res3a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000147 COS:0.998773 RMSE:0.049700 33.res3a_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000331 COS:0.999425 RMSE:0.034038 34.res3a_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.000368 COS:0.999411 RMSE:0.034275 35.res3a_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000368 COS:0.998931 RMSE:0.044919 36.res3a.xx.output0 OP_TYPE:ADD MSE:0.000585 COS:0.999040 RMSE:0.042398 37.res3a_xx.xx.output0 OP_TYPE:RELU MSE:0.000301 COS:0.999058 RMSE:0.041479 38.res3b_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.000811 COS:0.999530 RMSE:0.029739 39.res3b_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000288 COS:0.999580 RMSE:0.028879 40.res3b_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000288 COS:0.999383 RMSE:0.033874 41.res3b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000073 COS:0.998787 RMSE:0.052493 42.res3b_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000136 COS:0.999469 RMSE:0.033442 43.res3b_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.000314 COS:0.999489 RMSE:0.033050 44.res3b_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000314 COS:0.999308 RMSE:0.036079 45.res3b.xx.output0 OP_TYPE:ADD MSE:0.000659 COS:0.998989 RMSE:0.042628 46.res3b_xx.xx.output0 OP_TYPE:RELU MSE:0.000375 COS:0.999011 RMSE:0.043575 47.res4a_branch1.xx.output0 OP_TYPE:CONV_2D MSE:0.000098 COS:0.999264 RMSE:0.037842 48.res4a_branch1_xx.xx.output0 OP_TYPE:MUL MSE:0.000027 COS:0.999298 RMSE:0.037615 49.res4a_branch1_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000027 COS:0.999253 RMSE:0.036302 50.res4a_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.001011 COS:0.999543 RMSE:0.028507 51.res4a_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000300 COS:0.999544 RMSE:0.028563 52.res4a_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000300 COS:0.999147 RMSE:0.040221 53.res4a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000107 COS:0.998961 RMSE:0.047238 54.res4a_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000335 COS:0.999464 RMSE:0.032660 55.res4a_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.000255 COS:0.999453 RMSE:0.032788 56.res4a_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000255 COS:0.999234 RMSE:0.038888 57.res4a.xx.output0 OP_TYPE:ADD MSE:0.000312 COS:0.999298 RMSE:0.036873 58.res4a_xx.xx.output0 OP_TYPE:RELU MSE:0.000146 COS:0.999191 RMSE:0.040181 59.res4b_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.000369 COS:0.999748 RMSE:0.021992 60.res4b_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000156 COS:0.999772 RMSE:0.021527 61.res4b_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000156 COS:0.999625 RMSE:0.026857 62.res4b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000028 COS:0.999073 RMSE:0.045494 63.res4b_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000048 COS:0.999748 RMSE:0.022612 64.res4b_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.000191 COS:0.999751 RMSE:0.022354 65.res4b_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000191 COS:0.999678 RMSE:0.024581 66.res4b.xx.output0 OP_TYPE:ADD MSE:0.000337 COS:0.999448 RMSE:0.032108 67.res4b_xx.xx.output0 OP_TYPE:RELU MSE:0.000160 COS:0.999113 RMSE:0.040588 68.res5a_branch1.xx.output0 OP_TYPE:CONV_2D MSE:0.000072 COS:0.999179 RMSE:0.038052 69.res5a_branch1_xx.xx.output0 OP_TYPE:MUL MSE:0.000290 COS:0.999179 RMSE:0.038130 70.res5a_branch1_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000290 COS:0.999311 RMSE:0.032880 71.res5a_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.000355 COS:0.999758 RMSE:0.020371 72.res5a_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000133 COS:0.999750 RMSE:0.020561 73.res5a_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000133 COS:0.999613 RMSE:0.026392 74.res5a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000028 COS:0.998859 RMSE:0.051003 75.res5a_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000063 COS:0.999512 RMSE:0.031809 76.res5a_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.001009 COS:0.999480 RMSE:0.032233 77.res5a_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.001009 COS:0.999257 RMSE:0.039436 78.res5a.xx.output0 OP_TYPE:ADD MSE:0.001413 COS:0.999379 RMSE:0.034297 79.res5a_xx.xx.output0 OP_TYPE:RELU MSE:0.000457 COS:0.998876 RMSE:0.048274 80.res5b_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.001387 COS:0.999842 RMSE:0.015781 81.res5b_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000239 COS:0.999839 RMSE:0.015798 82.res5b_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000239 COS:0.999639 RMSE:0.026762 83.res5b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000023 COS:0.998458 RMSE:0.058598 84.res5b_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000041 COS:0.999061 RMSE:0.041137 85.res5b_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.007750 COS:0.999058 RMSE:0.041188 86.res5b_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.007751 COS:0.998732 RMSE:0.052601 87.res5b.xx.output0 OP_TYPE:ADD MSE:0.008533 COS:0.998792 RMSE:0.052043 88.res5b_xx.xx.output0 OP_TYPE:RELU MSE:0.004860 COS:0.998924 RMSE:0.051718 89.pool5.xx.output0 OP_TYPE:AVG_POOL_2D MSE:0.004061 COS:0.998601 RMSE:0.078395 90.fc1000_reshape#1_output#183.output0 OP_TYPE:ReshapeAliasMSE:0.004061 COS:0.998601 RMSE:0.078395 91.fc1000#185.xx.output0 OP_TYPE:CONV_2D MSE:0.013363 COS:0.998935 RMSE:0.050327 92.fc1000.xx.output0 OP_TYPE:ReshapeAliasMSE:0.013363 COS:0.998935 RMSE:0.050327 93.prob.xx.output0 OP_TYPE:SOFTMAX MSE:0.000000 COS:1.000000 RMSE:0.000152","title":"6.2.2.1 \u5bf9\u6bd4\u5206\u6790SigmaStar\u6d6e\u70b9\u4e0e\u5b9a\u70b9\u6a21\u578b"},{"location":"module/User_Guide/Common/DumpDebug_Tool.html#6222-sigmastarcaffeonnx","text":"auto_dump_debug.sh\u811a\u672c\u540c\u6837\u80fd\u591f\u5bf9\u6bd4SigmaStar\uff08\u6d6e\u70b9/\u5b9a\u70b9\uff09\u6a21\u578b\u4e0e\u539f\u6a21\u578b\uff08Caffe/Onnx\uff09\u76f8\u540coutput tensor\u5c42\u7684COS\u3001MSE\u548cRMSE\u3002\u6253\u5370\u683c\u5f0f\u4e0e[6.2.2.1 \u5bf9\u6bd4\u5206\u6790SigmaStar\u6d6e\u70b9\u4e0e\u5b9a\u70b9\u6a21\u578b]\u76f8\u540c\u3002 \u5c06[6.2.1.1 Dump SigmaStar\u6d6e\u70b9\u6216\u5b9a\u70b9\u6a21\u578b]\u4e2dDump\u51fa\u7684\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6216\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u7684bin\u6587\u4ef6\u4f5c\u4e3a\u6837\u672c bin\uff08sample\uff09\uff0c\u4f20\u5165Param2\uff0c\u4e0d\u5f97\u4f20\u5165Param3\u3002 \u5c06[6.2.1.2 Dump Caffe\u539f\u6a21\u578b]\u6216[6.2.1.3 Dump Onnx\u539f\u6a21\u578b]\u4e2dDump\u51fa\u7684\u539f\u6a21\u578bbin\u6587\u4ef6\u4f5c\u4e3a\u57fa\u51c6 bin\uff08benchmark\uff09\uff0c\u4f20\u5165Param3\uff0c\u4e0d\u5f97\u4f20\u5165Param2\u3002 \u4e0eCaffe\u539f\u6a21\u578b\u5bf9\u6bd4\uff1a ./auto_dump_debug.sh \\ /home/user/SGS_IPU_SDK \\ /home/user/sigma_outtensor_dump.bin \\ /home/user/caffe_NHWC_outtensor_dump.bin \u4e0eOnnx\u539f\u6a21\u578b\u5bf9\u6bd4\uff1a ./auto_dump_debug.sh \\ /home/user/SGS_IPU_SDK \\ /home/user/sigma_outtensor_dump.bin \\ /home/user/onnx_NHWC_outtensor_dump.bin \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a Param1 : SGS_IPU_SDK \u7684\u8def\u5f84\uff0c\u5982\u679c\u5728\u5f53\u524d\u4f4d\u7f6e\uff0c\u53ea\u9700\u4f20\u76ee\u5f55\u5939\u540d\u3002 Param2 : \u9700\u8981\u5bf9\u6bd4\u7684\u5df2\u7ecf dump\u51fa\u6765\u7684sample bin\u8def\u5f84\uff0c\u6b64\u5904\u5e94\u4e3aSigmaStar\u7f51\u7edc\u6a21\u578b\uff08\u6d6e\u70b9/\u5b9a\u70b9\uff09Dump\u51fa\u7684bin\u6587\u4ef6\u8def\u5f84\u3002 Param3 : \u4f5c\u4e3a\u53c2\u8003\u7684\u5df2\u7ecf dump\u51fa\u6765\u7684 benchmark bin\u8def\u5f84\uff0c\u6b64\u5904\u5e94\u4e3a\u539f\u6a21\u578b\uff08Caffe/Onnx\uff09Dump\u51fa\u7684bin\u6587\u4ef6\u8def\u5f84\u3002","title":"6.2.2.2 \u5bf9\u6bd4\u5206\u6790SigmaStar\uff08\u6d6e\u70b9/\u5b9a\u70b9\uff09\u6a21\u578b\u4e0e\u539f\u6a21\u578b\uff08Caffe/Onnx\uff09"},{"location":"module/User_Guide/Common/DumpDebug_Tool.html#63-histogrampyhistogram","text":"\u5de5\u5177\u7684\u4f4d\u7f6e\u5728 SGS_IPU_SDK/DumpDebug/histogram.py \u3002 \u8be5\u5de5\u5177\u53ef\u5bf9Dump\u51fa\u6765\u7684\u6570\u636e\u7ed8\u5236\u5404\u5c42\u7684\u6570\u636e\u5206\u5e03\uff0c\u4f7f\u7528\u8be5\u5de5\u5177\u9700Dump\u51fa\u7684\u6570\u636e\u6587\u4ef6\uff0c\u4ee5\u53ca\u4f7f\u7528calibrator \u5de5\u5177\u5c06\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u6210\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u65f6\u5728\u8fd0\u884c\u76ee\u5f55\u4e0b log/tensor_min_max.txt \u6587\u4ef6\u3002 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a Python3 histogram.py sigma_outtensor_dump.bin tensor_min_max.txt \u8fd0\u884c\u4e2d\u5982\u4e0b\u63d0\u793a [===============================================> ]97.61% \u7ed8\u5236\u7684Histogram\u56fe\u5982\u4e0b\u6240\u793a\uff1a \u56fe\u4e2d\u84dd\u8272\u90e8\u5206\u662f\u8be5\u5c42\u7f51\u7edc\u6570\u636e\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u5de6\u53f3\u4e24\u8fb9\u7684\u7ea2\u8272\u865a\u7ebf\u662f\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\u3002 Note \u5de5\u5177\u5728\u8fd0\u884c\u5f53\u524d\u8def\u5f84\u4e0b\uff0c\u4f1a\u521b\u5efaHistograms\u6587\u4ef6\u5939\uff0c\u91cc\u9762\u5305\u542b\u5404\u7f51\u7edc\u5c42\u7684\u6570\u636eHistogram\u56fe\u7247\u3002 \u5bf9\u4e0d\u540cDump\u6570\u636e\u7ed8\u5236\u7f51\u7edc\u6a21\u578b\u7684Histogram\u56fe\u65f6\uff0c\u5e94\u8be5\u91cd\u547d\u540d\u5f53\u524d\u8def\u5f84\u4e0b\u7684Histograms\u6587\u4ef6\u5939\uff0c\u6216\u79fb\u52a8\u81f3\u5176\u4ed6\u8def\u5f84\uff0c histogram.py \u5de5\u5177\u4f1a\u5728\u8fd0\u884c\u65f6\u5220\u9664\u5f53\u524d\u8def\u5f84\u4e0b\u7684Histograms\u6587\u4ef6\u5939\u3002","title":"6.3. \u4f7f\u7528histogram.py\u7ed8\u5236\u5404\u5c42\u7f51\u7edc\u6a21\u578b\u7684Histogram\u56fe"},{"location":"module/User_Guide/Common/DumpDebug_Tool.html#64","text":"\u5f53\u8fd0\u884c\u65f6\u53d1\u751fSegmentFault\u9519\u8bef\u65f6\uff0c\u7a0b\u5e8f\u4e2d\u65ad\u8fd0\u884c\uff0c\u6b64\u65f6\u5b9a\u4f4d\u7a0b\u5e8f\u53d1\u751f\u9519\u8bef\u4f4d\u7f6e\u81f3\u5173\u91cd\u8981\u3002\u8bf7\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\uff0c\u534f\u52a9\u63d0\u4f9b\u76f8\u5173\u4fe1\u606f\u3002 \u4fee\u6539\u751f\u6210core\u6587\u4ef6\u8def\u5f84\u4e3a\u5f53\u524d\u76ee\u5f55\uff0c\u5e76\u8bbe\u7f6ecore\u6587\u4ef6\u5927\u5c0f\u65e0\u4e0a\u9650\uff1a echo core > /proc/sys/kernel/core_pattern ulimit -c unlimited \u91cd\u65b0\u8fd0\u884c\u521a\u521a\u53d1\u751f\u9519\u8bef\u7684\u8f6c\u6362\u7f51\u7edc\u547d\u4ee4\u3002 \u751f\u6210core\u6587\u4ef6\u540e\uff0c\u8fd0\u884c\u5982\u4e0b\u547d\u4ee4\uff0c\u4f1a\u6253\u5370\u7a0b\u5e8f\u76f8\u5173\u4fe1\u606f\uff1a ~/SGS_IPU_SDK/DumpDebug/show_address.sh /path/to/SGS_IPU_SDK/bin/XXX /path/to/core show_address.sh\u811a\u672c\u9700\u8981\u4e24\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u6267\u884c\u547d\u4ee4\u7684bin\u7684\u8def\u5f84\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3acore\u7684\u8def\u5f84\u3002 \u5c4f\u5e55\u4f1a\u6253\u5370\u5185\u5b58\u6620\u5c04\u4fe1\u606f\u4ee5\u53ca\u7a0b\u5e8f\u51fd\u6570\u5806\u6808\u5730\u5740\uff0c\u8bf7\u53cd\u9988\u6b64\u4fe1\u606f\u3002","title":"6.4. \u9519\u8bef\u5904\u7406"},{"location":"module/User_Guide/Common/DumpDebug_Tool.html#65","text":"DumpDebug Tool\u63d0\u4f9b\u4e86\u6a21\u578b\u91cf\u5316\u540e\u7cbe\u5ea6\u4e0b\u964d\u95ee\u9898\u7684\u6392\u67e5\u65b9\u6cd5\uff0c\u53ef\u7528\u4e8e\u9488\u5bf9\u5b9e\u9645\u95ee\u9898\u53c2\u8003\u3002 \u4f7f\u7528calibrator\u65f6\uff0c --quant_level \u9009\u62e9L2\u3001L3\u3001L4\u6216L5\u65f6\u4f1a\u6839\u636e\u7edf\u8ba1\u4fe1\u606f\u81ea\u52a8\u914d\u7f6e\u5377\u79ef\u7684\u91cf\u5316\u65b9\u5f0f\uff0c\u5982\u679ccalibrator\u672a\u80fd\u5c06\u4e0b\u5217\u60c5\u51b5\u7684\u5377\u79ef\u4fee\u6539\u6210\u201dINT16\u201d\u5377\u79ef\u6a21\u5f0f\uff0c\u8bf7\u624b\u52a8\u5f00\u542f\u3002 \u5728\u5c06SigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u5316\u4e3aSigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u65f6\uff0c\u6ce8\u610f\u4fdd\u5b58\u5728\u8fd0\u884c\u76ee\u5f55\u4e0b\u7684 log/tensor_min_max.txt \u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u8bb0\u5f55\u4e86\u5728\u8f6c\u6362\u8fc7\u7a0b\u4e2d\u5404\u5c42\u7684\u6700\u5927\u548c\u6700\u5c0f\u503c\u3002\u5982\u679c\u5377\u79ef\u8f93\u5165\u5c42\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u76f8\u5dee\u8fc7\u5927\uff08\u4e00\u822c\u8ba4\u4e3a\u5dee\u503c\u5927\u4e8e30\uff09\uff0c\u9700\u8981\u5728\u5bf9\u5e94\u7f51\u7edc\u7684input_config.ini\u6587\u4ef6\u4e2d\u5f00\u542f\u8be5\u5c42\u7684\u201dINT16\u201d\u5377\u79ef\u6a21\u5f0f\uff0c\u5177\u4f53\u4fee\u6539\u65b9\u6cd5\u8bf7\u53c2\u8003[2.2. input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e]\u914d\u7f6e\u4fe1\u606f\u3002\u4fee\u6539input_config.ini\u6587\u4ef6\u540e\u9700\u8981\u91cd\u65b0\u4ece\u539f\u59cb\u6846\u67b6\u8bad\u7ec3\u7684\u6a21\u578b\u8f6c\u6362\u3002 \u4f7f\u7528[6.2.2 \u4f7f\u7528auto_dump_debug.sh\u811a\u672c\u5206\u6790\u6570\u636e]\u7684auto_dump_debug.sh\u811a\u672c\u5bf9\u6bd4\u6570\u636e\u540e\uff0c\u5982\u679cRMSE\u503c\u8f83\u5927\uff08\u4e00\u822c\u8ba4\u4e3a\u5927\u4e8e0.5\uff09\uff0c\u53ef\u5c06\u8be5\u5c42\u524d\u7684\u5377\u79ef\u8f93\u5165\u5c42\u5f00\u542f INT16 \u5377\u79ef\u6a21\u5f0f\u3002\u4fee\u6539input_config.ini\u6587\u4ef6\u540e\u9700\u8981\u91cd\u65b0\u4ece\u539f\u59cb\u6846\u67b6\u8bad\u7ec3\u7684\u6a21\u578b\u8f6c\u6362\u3002 \u4f7f\u7528[6.3. \u4f7f\u7528histogram.py\u7ed8\u5236\u5404\u5c42\u7f51\u7edc\u6a21\u578b\u7684Histogram\u56fe]\u7684histogram.py\u5de5\u5177\u7ed8\u5236Histogram\u56fe\u5e94\u4f7f\u7528SigmaStar\u6d6e\u70b9\u7f51\u7edc\u7684Dump\u6570\u636e\u548c\u5bf9\u5e94\u7684tensor_min_max.txt\u3002\u5982\u679c\u56fe\u4e2d\u7684\u6570\u636e\u5206\u5e03\u5f88\u96c6\u4e2d\uff0c\u4f46\u662f\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u8303\u56f4\u8f83\u5927\uff08\u4e00\u822c\u8ba4\u4e3a\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u7684\u5dee\u503c\u5927\u4e8e30\uff09\uff0c\u53ef\u4ee5\u8003\u8651\u5bf9\u8be5\u5c42\u5377\u79ef\u7684\u8f93\u5165\u5f00\u542f INT16 \u5377\u79ef\u6a21\u5f0f\u3002\u4fee\u6539input_config.ini\u6587\u4ef6\u540e\u9700\u8981\u91cd\u65b0\u4ece\u539f\u59cb\u6846\u67b6\u8bad\u7ec3\u7684\u6a21\u578b\u8f6c\u6362\u3002","title":"6.5. \u76f8\u5173\u95ee\u9898\u6c47\u603b"},{"location":"module/User_Guide/Common/Environment_Construction.html","text":"1.1. \u5b89\u88c5\u73af\u5883\u4f9d\u8d56 \u00b6 \ud83d\udcddSigmaStar DLA SDK\u57fa\u4e8eAVX2\u6307\u4ee4\u96c6\u7f16\u5199\uff0c\u8bf7\u4f7f\u7528\u652f\u63f4AVX2\u7684Intel\u00ae\u5904\u7406\u5668\u8fd0\u884c\u3002 \u63a8\u8350\u914d\u7f6e \ud83d\udda5\ufe0f\ud83d\udcbb \u2699\ufe0f CPU Intel\u00ae CoreTM i7 or Higher RAM 8G or Higher \u6700\u4f4e\u914d\u7f6e \ud83d\udda5\ufe0f\ud83d\udcbb \u2699\ufe0f CPU Intel\u00ae CoreTM i5 RAM 6G \u7cfb\u7edf\u4f9d\u8d56 \u00b6 Package Installation command i386 dpkg --add-architecture i386 build-essential sudo apt install build-essential cmake sudo apt install cmake libc6-dev sudo apt install libc6-dev libc6-dev:i386 libc6-dev-i386 libbz2-dev sudo apt install libbz2-dev libbz2-dev:i386 libncurses5-dev sudo apt install libncurses5-dev libncurses5-dev:i386 libglib2.0-dev sudo apt install libglib2.0-dev libglib2.0-dev:i386 libsm6 sudo apt install libsm6 libsm6:i386 libxrender1 sudo apt install libxrender1 libxrender1:i386 libxext6 sudo apt install libxext6 libxext6:i386 libgdbm-dev sudo apt install libgdbm-dev libgdbm-dev:i386 liblzma-dev sudo apt install liblzma-dev liblzma-dev:i386 libsqlite3-dev sudo apt install libsqlite3-dev libsqlite3-dev:i386 libssl-dev sudo apt install libssl-dev libssl-dev:i386 libreadline6-dev sudo apt install libreadline6-dev libreadline6-dev:i386 libffi-dev sudo apt install libffi-dev libffi-dev:i386 zlib1g-dev sudo apt install zlib1g-dev zlib1g-dev:i386 libncursesw5-dev sudo apt install libncursesw5-dev libncursesw5-dev:i386 libsqlite3-dev sudo apt install libsqlite3-dev libsqlite3-dev:i386 libgdbm-dev sudo apt install libgdbm-dev libgdbm-dev:i386 libbz2-dev sudo apt install libbz2-dev libbz2-dev:i386 checkinstall sudo apt install checkinstall openssl sudo apt install openssl Python \u4f9d\u8d56 \u00b6 \u4f7f\u7528SigmaStar DLA SDK\u9700\u8981\u5b89\u88c5\u4ee5\u4e0b\u4f9d\u8d56\u5e93\uff1a Software Installation Command Tested Version Python 3.7 enum34 pip install enum34==1.1.10 ==1.1.10 numpy pip install numpy==1.16.6 ==1.16.6 protobuf pip install protobuf >=3.8.0 six pip install six >=1.12.0 OpenCV-python pip install opencv-python ==4.2.0.34 TensorFlow pip install tensorflow ==1.14.0 Cython pip install cython >=0.29.13 pycocotools pip install pycocotools >=2.0.0 matplotlib pip install matplotlib >=3.0.3 SciPy pip install scipy >=1.3.1 Pillow pip install pillow ==6.1.0 joblib pip install joblib ==0.13.2 onnx-simplifier pip install onnx-simplifier ==0.2.10 sympy pip install sympy ==1.6.1 packaging pip install packaging ==20.4 onnx pip install onnx ==1.8.1 onnxruntime pip install onnxruntime ==1.7.0 onnxoptimizer pip install onnxoptimizer==0.2.4 ==0.2.4 python3-tk sudo apt install python3-tk libc6 sudo apt install libc6-dev-i386 libstdc++6 sudo apt install libstdc++6 python-qt4 sudo apt install python-qt4 torch sudo install torch==1.8.0+cpu ==1.8.0 torchvision sudo install torchvision==0.9.0+cpu ==0.9.0 wheel sudo install wheel scikit-image sudo install scikit-image scikit-learn sudo install scikit-learn pulp sudo install pulp 1.2. \u5feb\u901f\u4e0a\u624b \u00b6 \u9ed8\u8ba4\u8bbe\u7f6e \u8bf7\u5c06SGS_Models\u548cSGS_IPU_SDK\u653e\u5230\u4e3b\u76ee\u5f55 ~/ \u4e0b\uff0c\u4ee5\u4e0b\u547d\u4ee4\u5747\u57fa\u4e8e\u8be5\u76ee\u5f55\u7ed3\u6784\u8fdb\u884c\u3002\u8bf7\u4f7f\u7528Linux\u73af\u5883\u8fd0\u884c\u672c\u5de5\u5177\u3002 1.2.1 \u5b89\u88c5\u73af\u5883\u4f9d\u8d56 \u00b6 SigmaStar DLA SDK\u57fa\u4e8eAVX2\u6307\u4ee4\u96c6\u7f16\u5199\uff0c\u8bf7\u4f7f\u7528\u652f\u63f4AVX2\u7684Intel\u00ae\u5904\u7406\u5668\u8fd0\u884c\u3002\u5982\u679c\u4f7f\u7528docker\u7b49\u865a\u62df\u673a\u73af\u5883\uff0c\u8bf7\u4fdd\u8bc1\u865a\u62df\u673a\u5185\u6700\u4f4e\u5206\u914d6G\u5185\u5b58\u3002 1.2.2 \u5feb\u901f\u5b89\u88c5\u73af\u5883\u4f9d\u8d56 \u00b6 \u547d\u4ee4\u5982\u4e0b\uff1a sudo apt update sudo apt install python3-tk python-qt4 libc6-dev-i386 libstdc++6 cd ~/SGS_IPU_SDK pip3 install -r Scripts/calibrator/setup/requirements.txt \\ \u2013i https://pypi.tuna.tsinghua.edu.cn/simple 1.2.3 \u73af\u5883\u8bbe\u7f6e \u00b6 \u547d\u4ee4\u5982\u4e0b\uff1a cd ~/SGS_IPU_SDK source cfg_env.sh 1.2.4 \u5feb\u901f\u4e0a\u624b\u8bf4\u660e \u00b6 \u672c\u624b\u518c\u4f7f\u7528caffe\u8bad\u7ec3\u7684mobilenet_v2\u4f5c\u4e3a\u53c2\u8003\u4f8b\u5b50\u3002 \u5728SGS_IPU_SDK \u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff1a cd ~/ mkdir caffe_mobilenet_v2 cd caffe_mobilenet_v2 1.2.4.1 \u539f\u59cb\u6a21\u578b\u8f6c\u5316\u4e3aSigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b \u00b6 python3 ~/SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py caffe \\ --model_file ~/SGS_Models/caffe/caffe_mobilenet_v2/caffe_mobilenet_v2.prototxt \\ --weight_file ~/SGS_Models/caffe/caffe_mobilenet_v2/caffe_mobilenet_v2.caffemodel \\ --output_file ./caffe_mobilenet_v2_float.sim \\ --input_config ~/SGS_Models/caffe/caffe_mobilenet_v2/input_config.ini \u4e0d\u540c\u6846\u67b6\u6a21\u578b\u8f6c\u5316\u4e3aSigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u7684\u4f7f\u7528\u65b9\u5f0f\u8be6\u89c1\u7528\u6237\u624b\u518cchapter2\u3002 1.2.4.2 SigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u5316\u4e3aSigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b \u00b6 \u8fdb\u5165caffe_mobilenet_v2\u6587\u4ef6\u5939\uff0c\u8fd0\u884c: python3 ~/SGS_IPU_SDK/Scripts/calibrator/calibrator.py \\ -i ~/SGS_Models/resource/classify/ilsvrc2012_calibration_set32/ \\ -m ./caffe_mobilenet_v2_float.sim \\ -c Classification \\ --input_config ~/SGS_Models/caffe/caffe_mobilenet_v2/input_config.ini \\ -n caffe_mobilenet_v2 \u5173\u4e8eSigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u4e3aSigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u7684\u8be6\u7ec6\u4ecb\u7ecd\u8bf7\u53c2\u8003\u7528\u6237\u624b\u518cchapter3\u3002 1.2.4.3 SigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u5316\u4e3aSigmaStar\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b \u00b6 \u8fdb\u5165caffe_mobilenet_v2 \u6587\u4ef6\u5939\uff0c\u8fd0\u884c: python3 ~/SGS_IPU_SDK/Scripts/calibrator/compiler.py \\ -m ./caffe_mobilenet_v2_fixed.sim SigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u4e3aSigmaStar\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u7684\u8be6\u7ec6\u4ecb\u7ecd\u8bf7\u53c2\u8003\u7528\u6237\u624b\u518cchapter4\u3002 1.2.5 \u6a21\u578b\u4eff\u771f \u00b6 1.2.5.1 \u4f7f\u7528simulator\u5bf9SigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u9a8c\u8bc1 \u00b6 python3 ~/SGS_IPU_SDK/Scripts/calibrator/simulator.py \\ -i ~/SGS_Models/resource/classify/ilsvrc2012_val_set100 \\ -l ~/SGS_Models/resource/classify/caffe_labels.txt \\ -m ./caffe_mobilenet_v2_float.sim \\ -c Classification \\ -t Float \\ -n ~/SGS_Models/caffe/caffe_mobilenet_v2/caffe_mobilenet_v2.py \\ --num_process 20 1.2.5.2 \u4f7f\u7528simulator\u5bf9SigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u9a8c\u8bc1 \u00b6 python3 ~/SGS_IPU_SDK/Scripts/calibrator/simulator.py \\ -i ~/SGS_Models/resource/classify/ilsvrc2012_val_set100 \\ -l ~/SGS_Models/resource/classify/caffe_labels.txt \\ -m ./caffe_mobilenet_v2_fixed.sim \\ -c Classification \\ -t Fixed \\ -n ~/SGS_Models/caffe/caffe_mobilenet_v2/caffe_mobilenet_v2.py \\ --num_process 20 1.2.5.3 \u4f7f\u7528simulator\u5bf9SigmaStar\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u9a8c\u8bc1 \u00b6 python3 ~/SGS_IPU_SDK/Scripts/calibrator/simulator.py \\ -i ~/SGS_Models/resource/classify/ILSVRC2012_test_00000002.bmp \\ -m caffe_mobilenet_v2_fixed.sim_sgsimg.img \\ -l ~/SGS_Models/resource/classify/labels.txt \\ -c Classification \\ -t Offline \\ -n ~/SGS_Models/caffe/caffe_mobilenet_v2/caffe_mobilenet_v2.py Simulator\u5de5\u5177\u7684\u4f7f\u7528\u65b9\u5f0f\u8be6\u89c1\u7528\u6237\u624b\u518cchapter5\u3002","title":"1.  \u73af\u5883\u642d\u5efa"},{"location":"module/User_Guide/Common/Environment_Construction.html#11","text":"\ud83d\udcddSigmaStar DLA SDK\u57fa\u4e8eAVX2\u6307\u4ee4\u96c6\u7f16\u5199\uff0c\u8bf7\u4f7f\u7528\u652f\u63f4AVX2\u7684Intel\u00ae\u5904\u7406\u5668\u8fd0\u884c\u3002 \u63a8\u8350\u914d\u7f6e \ud83d\udda5\ufe0f\ud83d\udcbb \u2699\ufe0f CPU Intel\u00ae CoreTM i7 or Higher RAM 8G or Higher \u6700\u4f4e\u914d\u7f6e \ud83d\udda5\ufe0f\ud83d\udcbb \u2699\ufe0f CPU Intel\u00ae CoreTM i5 RAM 6G","title":"1.1. \u5b89\u88c5\u73af\u5883\u4f9d\u8d56"},{"location":"module/User_Guide/Common/Environment_Construction.html#_1","text":"Package Installation command i386 dpkg --add-architecture i386 build-essential sudo apt install build-essential cmake sudo apt install cmake libc6-dev sudo apt install libc6-dev libc6-dev:i386 libc6-dev-i386 libbz2-dev sudo apt install libbz2-dev libbz2-dev:i386 libncurses5-dev sudo apt install libncurses5-dev libncurses5-dev:i386 libglib2.0-dev sudo apt install libglib2.0-dev libglib2.0-dev:i386 libsm6 sudo apt install libsm6 libsm6:i386 libxrender1 sudo apt install libxrender1 libxrender1:i386 libxext6 sudo apt install libxext6 libxext6:i386 libgdbm-dev sudo apt install libgdbm-dev libgdbm-dev:i386 liblzma-dev sudo apt install liblzma-dev liblzma-dev:i386 libsqlite3-dev sudo apt install libsqlite3-dev libsqlite3-dev:i386 libssl-dev sudo apt install libssl-dev libssl-dev:i386 libreadline6-dev sudo apt install libreadline6-dev libreadline6-dev:i386 libffi-dev sudo apt install libffi-dev libffi-dev:i386 zlib1g-dev sudo apt install zlib1g-dev zlib1g-dev:i386 libncursesw5-dev sudo apt install libncursesw5-dev libncursesw5-dev:i386 libsqlite3-dev sudo apt install libsqlite3-dev libsqlite3-dev:i386 libgdbm-dev sudo apt install libgdbm-dev libgdbm-dev:i386 libbz2-dev sudo apt install libbz2-dev libbz2-dev:i386 checkinstall sudo apt install checkinstall openssl sudo apt install openssl","title":"\u7cfb\u7edf\u4f9d\u8d56"},{"location":"module/User_Guide/Common/Environment_Construction.html#python","text":"\u4f7f\u7528SigmaStar DLA SDK\u9700\u8981\u5b89\u88c5\u4ee5\u4e0b\u4f9d\u8d56\u5e93\uff1a Software Installation Command Tested Version Python 3.7 enum34 pip install enum34==1.1.10 ==1.1.10 numpy pip install numpy==1.16.6 ==1.16.6 protobuf pip install protobuf >=3.8.0 six pip install six >=1.12.0 OpenCV-python pip install opencv-python ==4.2.0.34 TensorFlow pip install tensorflow ==1.14.0 Cython pip install cython >=0.29.13 pycocotools pip install pycocotools >=2.0.0 matplotlib pip install matplotlib >=3.0.3 SciPy pip install scipy >=1.3.1 Pillow pip install pillow ==6.1.0 joblib pip install joblib ==0.13.2 onnx-simplifier pip install onnx-simplifier ==0.2.10 sympy pip install sympy ==1.6.1 packaging pip install packaging ==20.4 onnx pip install onnx ==1.8.1 onnxruntime pip install onnxruntime ==1.7.0 onnxoptimizer pip install onnxoptimizer==0.2.4 ==0.2.4 python3-tk sudo apt install python3-tk libc6 sudo apt install libc6-dev-i386 libstdc++6 sudo apt install libstdc++6 python-qt4 sudo apt install python-qt4 torch sudo install torch==1.8.0+cpu ==1.8.0 torchvision sudo install torchvision==0.9.0+cpu ==0.9.0 wheel sudo install wheel scikit-image sudo install scikit-image scikit-learn sudo install scikit-learn pulp sudo install pulp","title":"Python \u4f9d\u8d56"},{"location":"module/User_Guide/Common/Environment_Construction.html#12","text":"\u9ed8\u8ba4\u8bbe\u7f6e \u8bf7\u5c06SGS_Models\u548cSGS_IPU_SDK\u653e\u5230\u4e3b\u76ee\u5f55 ~/ \u4e0b\uff0c\u4ee5\u4e0b\u547d\u4ee4\u5747\u57fa\u4e8e\u8be5\u76ee\u5f55\u7ed3\u6784\u8fdb\u884c\u3002\u8bf7\u4f7f\u7528Linux\u73af\u5883\u8fd0\u884c\u672c\u5de5\u5177\u3002","title":"1.2. \u5feb\u901f\u4e0a\u624b"},{"location":"module/User_Guide/Common/Environment_Construction.html#121","text":"SigmaStar DLA SDK\u57fa\u4e8eAVX2\u6307\u4ee4\u96c6\u7f16\u5199\uff0c\u8bf7\u4f7f\u7528\u652f\u63f4AVX2\u7684Intel\u00ae\u5904\u7406\u5668\u8fd0\u884c\u3002\u5982\u679c\u4f7f\u7528docker\u7b49\u865a\u62df\u673a\u73af\u5883\uff0c\u8bf7\u4fdd\u8bc1\u865a\u62df\u673a\u5185\u6700\u4f4e\u5206\u914d6G\u5185\u5b58\u3002","title":"1.2.1 \u5b89\u88c5\u73af\u5883\u4f9d\u8d56"},{"location":"module/User_Guide/Common/Environment_Construction.html#122","text":"\u547d\u4ee4\u5982\u4e0b\uff1a sudo apt update sudo apt install python3-tk python-qt4 libc6-dev-i386 libstdc++6 cd ~/SGS_IPU_SDK pip3 install -r Scripts/calibrator/setup/requirements.txt \\ \u2013i https://pypi.tuna.tsinghua.edu.cn/simple","title":"1.2.2 \u5feb\u901f\u5b89\u88c5\u73af\u5883\u4f9d\u8d56"},{"location":"module/User_Guide/Common/Environment_Construction.html#123","text":"\u547d\u4ee4\u5982\u4e0b\uff1a cd ~/SGS_IPU_SDK source cfg_env.sh","title":"1.2.3 \u73af\u5883\u8bbe\u7f6e"},{"location":"module/User_Guide/Common/Environment_Construction.html#124","text":"\u672c\u624b\u518c\u4f7f\u7528caffe\u8bad\u7ec3\u7684mobilenet_v2\u4f5c\u4e3a\u53c2\u8003\u4f8b\u5b50\u3002 \u5728SGS_IPU_SDK \u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff1a cd ~/ mkdir caffe_mobilenet_v2 cd caffe_mobilenet_v2","title":"1.2.4 \u5feb\u901f\u4e0a\u624b\u8bf4\u660e"},{"location":"module/User_Guide/Common/Environment_Construction.html#1241-sigmastar","text":"python3 ~/SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py caffe \\ --model_file ~/SGS_Models/caffe/caffe_mobilenet_v2/caffe_mobilenet_v2.prototxt \\ --weight_file ~/SGS_Models/caffe/caffe_mobilenet_v2/caffe_mobilenet_v2.caffemodel \\ --output_file ./caffe_mobilenet_v2_float.sim \\ --input_config ~/SGS_Models/caffe/caffe_mobilenet_v2/input_config.ini \u4e0d\u540c\u6846\u67b6\u6a21\u578b\u8f6c\u5316\u4e3aSigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u7684\u4f7f\u7528\u65b9\u5f0f\u8be6\u89c1\u7528\u6237\u624b\u518cchapter2\u3002","title":"1.2.4.1 \u539f\u59cb\u6a21\u578b\u8f6c\u5316\u4e3aSigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b"},{"location":"module/User_Guide/Common/Environment_Construction.html#1242-sigmastarsigmastar","text":"\u8fdb\u5165caffe_mobilenet_v2\u6587\u4ef6\u5939\uff0c\u8fd0\u884c: python3 ~/SGS_IPU_SDK/Scripts/calibrator/calibrator.py \\ -i ~/SGS_Models/resource/classify/ilsvrc2012_calibration_set32/ \\ -m ./caffe_mobilenet_v2_float.sim \\ -c Classification \\ --input_config ~/SGS_Models/caffe/caffe_mobilenet_v2/input_config.ini \\ -n caffe_mobilenet_v2 \u5173\u4e8eSigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u4e3aSigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u7684\u8be6\u7ec6\u4ecb\u7ecd\u8bf7\u53c2\u8003\u7528\u6237\u624b\u518cchapter3\u3002","title":"1.2.4.2 SigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u5316\u4e3aSigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b"},{"location":"module/User_Guide/Common/Environment_Construction.html#1243-sigmastarsigmastar","text":"\u8fdb\u5165caffe_mobilenet_v2 \u6587\u4ef6\u5939\uff0c\u8fd0\u884c: python3 ~/SGS_IPU_SDK/Scripts/calibrator/compiler.py \\ -m ./caffe_mobilenet_v2_fixed.sim SigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u4e3aSigmaStar\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u7684\u8be6\u7ec6\u4ecb\u7ecd\u8bf7\u53c2\u8003\u7528\u6237\u624b\u518cchapter4\u3002","title":"1.2.4.3 SigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u5316\u4e3aSigmaStar\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b"},{"location":"module/User_Guide/Common/Environment_Construction.html#125","text":"","title":"1.2.5 \u6a21\u578b\u4eff\u771f"},{"location":"module/User_Guide/Common/Environment_Construction.html#1251-simulatorsigmastar","text":"python3 ~/SGS_IPU_SDK/Scripts/calibrator/simulator.py \\ -i ~/SGS_Models/resource/classify/ilsvrc2012_val_set100 \\ -l ~/SGS_Models/resource/classify/caffe_labels.txt \\ -m ./caffe_mobilenet_v2_float.sim \\ -c Classification \\ -t Float \\ -n ~/SGS_Models/caffe/caffe_mobilenet_v2/caffe_mobilenet_v2.py \\ --num_process 20","title":"1.2.5.1 \u4f7f\u7528simulator\u5bf9SigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u9a8c\u8bc1"},{"location":"module/User_Guide/Common/Environment_Construction.html#1252-simulatorsigmastar","text":"python3 ~/SGS_IPU_SDK/Scripts/calibrator/simulator.py \\ -i ~/SGS_Models/resource/classify/ilsvrc2012_val_set100 \\ -l ~/SGS_Models/resource/classify/caffe_labels.txt \\ -m ./caffe_mobilenet_v2_fixed.sim \\ -c Classification \\ -t Fixed \\ -n ~/SGS_Models/caffe/caffe_mobilenet_v2/caffe_mobilenet_v2.py \\ --num_process 20","title":"1.2.5.2 \u4f7f\u7528simulator\u5bf9SigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u9a8c\u8bc1"},{"location":"module/User_Guide/Common/Environment_Construction.html#1253-simulatorsigmastar","text":"python3 ~/SGS_IPU_SDK/Scripts/calibrator/simulator.py \\ -i ~/SGS_Models/resource/classify/ILSVRC2012_test_00000002.bmp \\ -m caffe_mobilenet_v2_fixed.sim_sgsimg.img \\ -l ~/SGS_Models/resource/classify/labels.txt \\ -c Classification \\ -t Offline \\ -n ~/SGS_Models/caffe/caffe_mobilenet_v2/caffe_mobilenet_v2.py Simulator\u5de5\u5177\u7684\u4f7f\u7528\u65b9\u5f0f\u8be6\u89c1\u7528\u6237\u624b\u518cchapter5\u3002","title":"1.2.5.3 \u4f7f\u7528simulator\u5bf9SigmaStar\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u9a8c\u8bc1"},{"location":"module/User_Guide/Common/Running_Offline_Network_Model_On_Development_Board.html","text":"\u5efa\u8bae\u5728\u5f00\u53d1\u677f\u4e0a\u8fd0\u884c\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u4e4b\u524d\uff0c\u4f7f\u7528Simulator\u5bf9\u6a21\u578b\u8fdb\u884c\u9a8c\u8bc1\u3002Simulator\u80fd\u591f\u5728PC\u7aef\u6a21\u62df\u677f\u4e0a\u8fd0\u884c\u73af\u5883\u3002 \u9996\u5148\u786e\u4fdd\u5f00\u53d1\u677f\u5df2\u7ecf\u70e7\u5f55\u597d\u6700\u65b0\u7684\u56fa\u4ef6\uff0c\u4f7f\u7528Demo\u4e2d\u7684dla_classify\u53ef\u5bf9\u5355\u5f20\u56fe\u7247\u63a8\u6f14\u4e00\u6b21\uff0c\u7ed3\u679c\u4e3a\u63a8\u6f14\u7ed3\u679c\u7684TOP5\u3002\u4e0b\u9762\u5206\u89e3dla_classify.cpp\u6587\u4ef6\uff0c\u9488\u5bf9\u4f7f\u7528MI_IPU API\u7684\u987a\u5e8f\u4e3e\u4f8b\u8bf4\u660e\u3002 dla_classify.cpp\u6587\u4ef6\u8def\u5f84\u4e3a\uff1a sdk/verify/mi_demo/source/dla_classify/dla_classify.cpp 11.1. \u521b\u5efaIPU\u8bbe\u5907 \u00b6 MI_S32 IPUCreateDevice ( char * pFirmwarePath , MI_U32 u32VarBufSize ) { MI_S32 s32Ret = MI_SUCCESS ; MI_IPU_DevAttr_t stDevAttr ; stDevAttr . u32MaxVariableBufSize = u32VarBufSize ; stDevAttr . u32YUV420_W_Pitch_Alignment = 16 ; stDevAttr . u32YUV420_H_Pitch_Alignment = 2 ; stDevAttr . u32XRGB_W_Pitch_Alignment = 16 ; s32Ret = MI_IPU_CreateDevice ( & stDevAttr , NULL , pFirmwarePath , 0 ); return s32Ret ; } \u8f93\u5165\u53c2\u6570\uff1a ```ini pFirmwarePath\uff1aFirmware\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u4f20NULL\u65f6\u4f1a\u8c03\u7528/config/dla/ipu_firmware.bin u32VarBufSize\uff1a\u6a21\u578b\u5185\u90e8Tensor\u4f7f\u7528\u7684memory\u7684\u6700\u5927\u5927\u5c0f ``` u32VarBufSize\u83b7\u53d6\u65b9\u6cd5\u5982\u4e0b \uff1a \u65b9\u6cd5 1 : \u53ef\u4ee5\u901a\u8fc7 parse_net\u5de5\u5177\u83b7\u53d6 parse_net\u5de5\u5177\u8def\u5f84 \uff1a SGS_IPU_SDK / bin / parse_net \u4f7f\u7528\u65f6\u76f4\u63a5\u5728 parse_net\u547d\u4ee4\u540e\u52a0\u4e0a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8def\u5f84\u5373\u53ef \uff0c\u53ef\u53c2\u8003\u4ee5\u4e0b\u547d\u4ee4\uff1a . / parse_net xxx_fixed . sim | grep Variable \u8f93\u51fa\uff1a | |--> SubGraph [ 0 ] : Variable buffer 0xd2f00 @ 0x82f3b40 . \u5176\u4e2d 0xd2f00 \u5411 2 \u5bf9\u9f50\u540e\u4e3a u32VarBufSize\u5927\u5c0f \u3002 \u5728 C / C ++ \u4e2d\uff0c\u5411 2 \u5bf9\u9f50\u7684\u5b9a\u4e49\u4e3a\uff1a #define alignment_up(a, size) ((a + size - 1) & (~(size - 1))) \u6240\u4ee5 u32VarBufSize\u4e3a864000 \u3002 \u65b9\u6cd5 2 : \u4f7f\u7528 MI\u7684API\u83b7\u53d6 MI_IPU_OfflineModelStaticInfo_t OfflineModelInfo ; ret = MI_IPU_GetOfflineModeStaticInfo ( NULL , modelFilePath , & OfflineModelInfo ); if ( ret != MI_SUCCESS ) { std :: cerr << \"get model variable buffer size failed!\" << std :: endl ; return ; } u32VarBufSize = OfflineModelInfo . u32VariableBufferSize \u5982\u679c\u6709\u591a\u4e2a\u6a21\u578b\u9700\u8981\u8fd0\u884c\uff0c\u9009\u53d6\u6700\u5927\u7684 u32VarBufSize\u521b\u5efaIPU\u8bbe\u5907\u5373\u53ef \u3002 \u8f93\u51fa\u53c2\u6570\uff1aMI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b 11.2. \u521b\u5efaIPU\u901a\u9053 \u00b6 MI_S32 IPUCreateChannel ( MI_U32 * u32Channel , char * pModelImage ) { MI_S32 s32Ret ; MI_IPUChnAttr_t stChnAttr ; //create channel memset ( & stChnAttr , 0 , sizeof ( stChnAttr )); stChnAttr . u32InputBufDepth = 2 ; stChnAttr . u32OutputBufDepth = 2 ; return MI_IPU_CreateCHN ( u32Channel , & stChnAttr , NULL , pModelImage ); } MI_U32 u32Channel ; ret = IPUCreateChannel ( & u32ChannelID , \u201c . / mobilenet_v1_fixed . img \u201d ); \u8f93\u5165\u53c2\u6570\uff1a s32Channel\uff1a\u521b\u5efaIPU\u901a\u9053\u7684ID pModelImage\uff1a\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u79bb\u7ebf \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b 11.3. \u83b7\u53d6\u6a21\u578b\u8f93\u5165\u8f93\u51faTensor\u5c5e\u6027 \u00b6 MI_IPU_SubNet_InputOutputDesc_t desc ; MI_IPU_GetInOutTensorDesc ( u32ChannelID , & desc ); \u8f93\u5165\u53c2\u6570\uff1a u32ChnId\uff1aIPU\u901a\u9053\u7684ID pstDesc\uff1aIPU\u5b50\u7f51\u7edc\u8f93\u5165/\u8f93\u51fa\u63cf\u8ff0\u7ed3\u6784\u4f53 \u8f93\u51fa\u53c2\u6570\uff1aMI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b 11.4. \u83b7\u53d6\u8f93\u5165\u8f93\u51faTensor \u00b6 MI_IPU_TensorVector_t InputTensorVector ; MI_IPU_TensorVector_t OutputTensorVector ; MI_IPU_GetInputTensors ( u32ChannelID , & InputTensorVector ); MI_IPU_GetOutputTensors ( u32ChannelID , & OutputTensorVector ); \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID InputTensorVector\uff1a\u8f93\u5165IPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 OutputTensorVector\uff1a\u8f93\u51faIPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b 11.5. \u6a21\u578b\u6570\u636e\u8f93\u5165 \u00b6 11.5.1. \u62f7\u8d1d\u6570\u636e \u00b6 \u5c06\u6570\u636e\u62f7\u8d1d\u81f3\u6a21\u578b\u8f93\u5165Tensor\u7684\u865a\u62df\u5730\u5740\uff0c\u62f7\u8d1d\u5b8c\u6210\u540e\u8c03\u7528MI_SYS_FlushInvCache\uff1a MI_U8 * pdata = ( MI_U8 * ) InputTensorVector . astArrayTensors [ 0 ]. ptTensorData [ 0 ]; MI_U8 * pSrc = ( MI_U8 * ) Input_Data ; for ( int i = 0 ; i < imageSize ; i ++ ) { * ( pdata + i ) = * ( pSrc + i ); } MI_SYS_FlushInvCache ( pdata , imageSize ); \u6a21\u578b\u4e2dinput formats\u8bbe\u7f6e\u4e3a BGR \u6216\u8005 RGB \u65f6\uff0cstride\u4e0d\u8981\u505aalignment\uff0c\u505a\u4e86alignment\u53cd\u800c\u6709\u95ee\u9898\u3002 \u6a21\u578b\u4e2dinput formats\u8bbe\u7f6e\u4e3a BGRA \u6216\u8005 RGBA \uff08A channel\u5728\u9ad8\u5730\u5740\uff09\uff0calignmet\u89c4\u5219\u662fstride = alignment_up(width*4, 16 )\u3002 input_formats\u8bbe\u7f6e\u4e3a BGRA \uff0c\u5bf9\u5e94MI_SYS_PixelFormat_e\u4e3a E_MI_SYSPIXEL_FRAME_ARGB8888 \u3002 input_formats\u8bbe\u7f6e\u4e3a RGBA \uff0c\u5bf9\u5e94MI_SYS_PixelFormat_e\u4e3a E_MI_SYSPIXEL_FRAME_ABGR8888 \u3002 input formats\u8bbe\u7f6e\u4e3a YUV_NV12 \u6216\u8005 GRAY \u65f6\uff0calignment\u89c4\u5219\u662fstride = alignment_up(width,16)\uff0cheight\u9700\u89812 alignment\u3002 input_formats\u8bbe\u7f6e\u4e3a YUV_NV12 \u6216\u8005 GRAY \u65f6\uff0c\u5bf9\u5e94MI_SYS_PixelFormat_e\u4e3a E_MI_SYSPIXEL_FRAME_YUV_SEMIPLANAR_420 \u3002 11.5.2.\u96f6\u62f7\u8d1d\u6570\u636e \u00b6 \u5982\u679c\u4f7f\u7528MI\u7684\u5176\u4ed6\u6a21\u5757\uff0c\u4e3a\u6a21\u578b\u8f93\u5165\u505a\u597d\u4e86\u6570\u636e\u51c6\u5907\uff0c\u53ef\u4ee5\u4e0d\u7528\u62f7\u8d1d\u6570\u636e\uff0c\u76f4\u63a5\u7ed9\u4f20\u9012\u5176\u4ed6MI\u6a21\u5757\u7684\u7269\u7406\u5730\u5740\u3002 \u4ee5\u4e0b\u4ee5MI_SYS\u6a21\u5757\u793a\u4f8b\u6a21\u578b\u8f93\u5165\u96f6\u62f7\u8d1d\u6570\u636e\uff0c\u9700\u6ce8\u610f\uff1a \u521b\u5efaIPU\u901a\u9053\u65f6\uff0c\u8f93\u5165InputBufDepth\u8bbe\u4e3a\u96f6\uff0c\u4e0d\u518d\u4f7f\u7528MI_IPU_GetInputTensors\u5206\u914d\u8f93\u5165\u7a7a\u95f4 stChnAttr.u32InputBufDepth = 0; \u7531\u4e8e\u4e0d\u4f7f\u7528MI_IPU_GetInputTensors\uff0c\u9700\u624b\u52a8\u5c06\u7f51\u7edc\u63cf\u8ff0\u7684\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u4e2a\u6570\u8d4b\u7ed9 InputTensorVector.u32TensorCount\u3002 InputTensorVector.u32TensorCount = desc.u32InputTensorCount; \u4f7f\u7528MI_SYS\u7684API\u5206\u914d\u7a7a\u95f4: MI_S32 s32ret = 0 ; MI_PHY phyAddr = 0 ; void * pVirAddr = NULL ; s32ret = MI_SYS_MMA_Alloc ( NULL , BufSize , & phyAddr ); if ( s32ret != MI_SUCCESS ) { throw std :: runtime_error ( \"Alloc buffer failed!\" ); } s32ret = MI_SYS_Mmap ( phyAddr , BufSize , & pVirAddr , TRUE ); if ( s32ret != MI_SUCCESS ) { MI_SYS_MMA_Free ( phyAddr ); throw std :: runtime_error ( \"Mmap buffer failed!\" ); } \u4f20\u9012\u865a\u62df\u5730\u5740\u548c\u7269\u7406\u5730\u5740\u7ed9InputTensorVector InputTensorVector . astArrayTensors [ 0 ]. ptTensorData [ 0 ] = pVirAddr ; InputTensorVector . astArrayTensors [ 0 ]. phyTensorAddr [ 0 ] = phyAddr ; \u4e4b\u540e\u53ef\u4ee5\u8fdb\u884c\u6a21\u578b\u63a8\u6f14\u3002 \u4f7f\u7528\u96f6\u62f7\u8d1d\u6570\u636e\uff0c\u4e0d\u9700\u8981\u518d\u91ca\u653e\u8f93\u5165Tensor\uff0c\u5373\u4e0d\u518d\u8c03\u7528MI_IPU_PutInputTensors\u51fd\u6570\uff0c\u91ca\u653eBuffer\u8c03\u7528MI_SYS\u7684API\u5b8c\u6210\u3002 \u91ca\u653eMI_SYS\u7684Buffer MI_SYS_Munmap ( pVirAddr , BufSize ); MI_SYS_MMA_Free ( phyAddr ); 11.6. \u6a21\u578b\u63a8\u6f14 \u00b6 ret = MI_IPU_Invoke ( u32ChannelID , & InputTensorVector , & OutputTensorVector ); if ( ret != MI_SUCCESS ) { MI_IPU_DestroyCHN ( u32ChannelID ); MI_IPU_DestroyDevice (); std :: cerr << \"IPU invoke failed!!\" << std :: endl ; } \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID InputTensorVector\uff1a\u8f93\u5165IPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 OutputTensorVector\uff1a\u8f93\u51faIPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b 11.7. \u91ca\u653e\u8f93\u5165\u8f93\u51faTensor \u00b6 MI_IPU_PutInputTensors ( u32ChannelID , & InputTensorVector ); MI_IPU_PutOutputTensors ( u32ChannelID , & OutputTensorVector ); \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID InputTensorVector\uff1a\u8f93\u5165IPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 OutputTensorVector\uff1a\u8f93\u51faIPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b 11.8. \u9500\u6bc1IPU\u901a\u9053 \u00b6 MI_IPU_DestroyCHN ( u32ChannelID ); \u8f93\u5165\u53c2\u6570\uff1a s32Channel\uff1a\u521b\u5efaIPU\u901a\u9053\u7684ID \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b 11.9. \u9500\u6bc1IPU\u8bbe\u5907 \u00b6 MI_IPU_DestroyDevice (); \u8f93\u5165\u53c2\u6570\uff1a \u7a7a \u8f93\u51fa\u53c2\u6570\uff1aMI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b 11.10. Py_dla\u63a5\u53e3\u4f7f\u7528 \u00b6 Py_dla\u662fPython\u5c01\u88c5\u540e\u7684MI_IPU\u63a5\u53e3\uff0c\u53ef\u4ee5\u5728\u5f00\u53d1\u677f\u4e0a\u5feb\u901f\u5904\u7406\u6a21\u578b\u8f93\u51fa\u6570\u636e\uff0c\u65b9\u4fbf\u5feb\u901f\u9a8c\u8bc1\u6a21\u578b\u7684\u51c6\u786e\u6027\u3002 \u5df2\u51c6\u5907\u597dARM\u7684Python3.8\u7684\u5e93\uff0c\u5b58\u653e\u5728 sdk/verify/mi_demo/source/py_dla/Python3.8.tar.bz2 \uff0c \u4f7f\u7528\u65f6\u8bf7\u5148\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u89e3\u538b\u5230\u53ef\u4ee5mount\u5230\u5f00\u53d1\u677f\u7684\u672c\u5730\u8def\u5f84\uff1a tar -jxvf Python3.8.tar.bz2 \u5728\u5f00\u53d1\u677f\u4e2d\u8bbe\u7f6ePython3.8\u7684\u8def\u5f84\uff1a export LD_LIBRARY_PATH = path/to/Python3.8/usr/lib/: $LD_LIBRARY_PATH export PATH = path/to/Python3.8/usr/bin: $PATH \u4ee5\u4e0b\u6587\u4ef6\u4e3aPy_dla\u63a5\u53e3\u6587\u4ef6\uff0c\u53ef\u4ee5\u4f7f\u7528python\u76f4\u63a5import\u4f7f\u7528\uff1a sdk/verify/mi_demo/source/py_dla/_misim.cpython-38-arm-linux-gnueabihf.so \u5c06\u8be5\u6587\u4ef6\u4e0e\u7f16\u5199python\u811a\u672c\u653e\u5728\u540c\u4e00\u8def\u5f84\u4e0b\uff0c\u5373\u53ef\u4f7f\u7528Py_dla\u3002\u4e0b\u9762\u8bf4\u660epython\u4e2d\u8c03\u7528 _misim.cpython-38-arm-linux-gnueabihf.so \u4ee5\u53caAPI\u4e3e\u4f8b\u4ecb\u7ecd\u3002 \u4f7f\u7528\u5982\u4e0b\u65b9\u5f0f\uff0c\u52a0\u8f7d _misim.cpython-38-arm-linux-gnueabihf.so \uff1a from _misim import MI_simulator from _misim import IPU_GetOfflineModeStaticInfo from _misim import IPU_CreateDevice API\u4e3e\u4f8b\u8bf4\u660e\uff1a IPU_GetOfflineModeStaticInfo\uff1a\u83b7\u53d6\u6a21\u578bvariable buffer size >>> model_path = 'mobilenet_v1_fixed.sim_sgsimg.img' >>> variable_buffer_size = IPU_GetOfflineModeStaticInfo ( model_path ) IPU_CreateDevice\uff1a\u521b\u5efaIPU\u8bbe\u5907\uff08\u5982\u679c\u6709\u591a\u4e2a\u6a21\u578b\u9700\u8981\u8fd0\u884c\uff0c\u9009\u53d6\u6700\u5927\u7684variable_buffer_size \u521b\u5efaIPU\u8bbe\u5907\uff09 >>> IPU_CreateDevice ( variable_buffer_size ) \u53ef\u9009\u53c2\u6570\uff1a ipu_firmware\uff08\u7528\u6765\u6307\u5b9aipu_firmware.bin\u7684\u8def\u5f84\uff0c\u9ed8\u8ba4\u4e3a/config/dla/ipu_firmware.bin\uff09 >>> IPU_CreateDevice ( variable_buffer_size , '/path/to/ipu_firmware' ) MI_simulator\uff1a\u521b\u5efa\u6a21\u578b\u5b9e\u4f8b >>> model = MI_simulator ( model_path ) \u83b7\u53d6\u6a21\u578b\u8f93\u5165\u4fe1\u606f >>> in_details = model . get_input_details () >>> print ( in_details ) [{ 'name' : 'input' , 'index' : 0 , 'dtype' : < class ' numpy . uint8 '>, ' shape ': array([ 1, 224, 224, 3])}] \u83b7\u53d6\u6a21\u578b\u8f93\u51fa\u4fe1\u606f >>> out_details = model . get_output_details () >>> print ( out_details ) [{ 'name' : 'MobilenetV2/Predictions/Reshape_1' , 'index' : 0 , 'dtype' : < class ' numpy . float32 '>, ' shape ': array([ 1, 1001])}] \u7ed9\u7b2c0\u4e2aindex\u8f93\u5165\u6570\u636e\uff08img_data\u4e3a\u4e0e\u8f93\u5165shape\u3001dtype\u4e00\u81f4\u7684numpy.ndarray\u6570\u636e model . set_input ( in_details [ 0 ][ 'index' ], img_data ) \u6a21\u578b\u524d\u5411\u63a8\u6f14 model . invoke () \u83b7\u53d6\u7b2c0\u4e2aindex\u7684\u8f93\u51fa\uff08\u8f93\u51fa\u4e3anumpy.ndarray\uff09\uff0c\u5efa\u8bae\u4f7f\u7528numpy\u7684copy()\u65b9\u6cd5 >>> output0 = model . get_output ( out_details [ 0 ][ 'index' ]) \u83b7\u53d6\u7b2c1\u4e2aindex\u7684\u8f93\u51fa\uff0c\u4f7f\u7528numpy\u7684copy()\u65b9\u6cd5\uff0c\u62f7\u8d1d\u5185\u5b58\u5230\u65b0\u7684\u5185\u5b58\u91cc >>> output1 = model . get_output ( out_details [ 1 ][ 'index' ]) . copy ()","title":"Running Offline Network Model On Development Board"},{"location":"module/User_Guide/Common/Running_Offline_Network_Model_On_Development_Board.html#111-ipu","text":"MI_S32 IPUCreateDevice ( char * pFirmwarePath , MI_U32 u32VarBufSize ) { MI_S32 s32Ret = MI_SUCCESS ; MI_IPU_DevAttr_t stDevAttr ; stDevAttr . u32MaxVariableBufSize = u32VarBufSize ; stDevAttr . u32YUV420_W_Pitch_Alignment = 16 ; stDevAttr . u32YUV420_H_Pitch_Alignment = 2 ; stDevAttr . u32XRGB_W_Pitch_Alignment = 16 ; s32Ret = MI_IPU_CreateDevice ( & stDevAttr , NULL , pFirmwarePath , 0 ); return s32Ret ; } \u8f93\u5165\u53c2\u6570\uff1a ```ini pFirmwarePath\uff1aFirmware\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u4f20NULL\u65f6\u4f1a\u8c03\u7528/config/dla/ipu_firmware.bin u32VarBufSize\uff1a\u6a21\u578b\u5185\u90e8Tensor\u4f7f\u7528\u7684memory\u7684\u6700\u5927\u5927\u5c0f ``` u32VarBufSize\u83b7\u53d6\u65b9\u6cd5\u5982\u4e0b \uff1a \u65b9\u6cd5 1 : \u53ef\u4ee5\u901a\u8fc7 parse_net\u5de5\u5177\u83b7\u53d6 parse_net\u5de5\u5177\u8def\u5f84 \uff1a SGS_IPU_SDK / bin / parse_net \u4f7f\u7528\u65f6\u76f4\u63a5\u5728 parse_net\u547d\u4ee4\u540e\u52a0\u4e0a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8def\u5f84\u5373\u53ef \uff0c\u53ef\u53c2\u8003\u4ee5\u4e0b\u547d\u4ee4\uff1a . / parse_net xxx_fixed . sim | grep Variable \u8f93\u51fa\uff1a | |--> SubGraph [ 0 ] : Variable buffer 0xd2f00 @ 0x82f3b40 . \u5176\u4e2d 0xd2f00 \u5411 2 \u5bf9\u9f50\u540e\u4e3a u32VarBufSize\u5927\u5c0f \u3002 \u5728 C / C ++ \u4e2d\uff0c\u5411 2 \u5bf9\u9f50\u7684\u5b9a\u4e49\u4e3a\uff1a #define alignment_up(a, size) ((a + size - 1) & (~(size - 1))) \u6240\u4ee5 u32VarBufSize\u4e3a864000 \u3002 \u65b9\u6cd5 2 : \u4f7f\u7528 MI\u7684API\u83b7\u53d6 MI_IPU_OfflineModelStaticInfo_t OfflineModelInfo ; ret = MI_IPU_GetOfflineModeStaticInfo ( NULL , modelFilePath , & OfflineModelInfo ); if ( ret != MI_SUCCESS ) { std :: cerr << \"get model variable buffer size failed!\" << std :: endl ; return ; } u32VarBufSize = OfflineModelInfo . u32VariableBufferSize \u5982\u679c\u6709\u591a\u4e2a\u6a21\u578b\u9700\u8981\u8fd0\u884c\uff0c\u9009\u53d6\u6700\u5927\u7684 u32VarBufSize\u521b\u5efaIPU\u8bbe\u5907\u5373\u53ef \u3002 \u8f93\u51fa\u53c2\u6570\uff1aMI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b","title":"11.1. \u521b\u5efaIPU\u8bbe\u5907"},{"location":"module/User_Guide/Common/Running_Offline_Network_Model_On_Development_Board.html#112-ipu","text":"MI_S32 IPUCreateChannel ( MI_U32 * u32Channel , char * pModelImage ) { MI_S32 s32Ret ; MI_IPUChnAttr_t stChnAttr ; //create channel memset ( & stChnAttr , 0 , sizeof ( stChnAttr )); stChnAttr . u32InputBufDepth = 2 ; stChnAttr . u32OutputBufDepth = 2 ; return MI_IPU_CreateCHN ( u32Channel , & stChnAttr , NULL , pModelImage ); } MI_U32 u32Channel ; ret = IPUCreateChannel ( & u32ChannelID , \u201c . / mobilenet_v1_fixed . img \u201d ); \u8f93\u5165\u53c2\u6570\uff1a s32Channel\uff1a\u521b\u5efaIPU\u901a\u9053\u7684ID pModelImage\uff1a\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u79bb\u7ebf \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b","title":"11.2. \u521b\u5efaIPU\u901a\u9053"},{"location":"module/User_Guide/Common/Running_Offline_Network_Model_On_Development_Board.html#113-tensor","text":"MI_IPU_SubNet_InputOutputDesc_t desc ; MI_IPU_GetInOutTensorDesc ( u32ChannelID , & desc ); \u8f93\u5165\u53c2\u6570\uff1a u32ChnId\uff1aIPU\u901a\u9053\u7684ID pstDesc\uff1aIPU\u5b50\u7f51\u7edc\u8f93\u5165/\u8f93\u51fa\u63cf\u8ff0\u7ed3\u6784\u4f53 \u8f93\u51fa\u53c2\u6570\uff1aMI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b","title":"11.3. \u83b7\u53d6\u6a21\u578b\u8f93\u5165\u8f93\u51faTensor\u5c5e\u6027"},{"location":"module/User_Guide/Common/Running_Offline_Network_Model_On_Development_Board.html#114-tensor","text":"MI_IPU_TensorVector_t InputTensorVector ; MI_IPU_TensorVector_t OutputTensorVector ; MI_IPU_GetInputTensors ( u32ChannelID , & InputTensorVector ); MI_IPU_GetOutputTensors ( u32ChannelID , & OutputTensorVector ); \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID InputTensorVector\uff1a\u8f93\u5165IPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 OutputTensorVector\uff1a\u8f93\u51faIPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b","title":"11.4. \u83b7\u53d6\u8f93\u5165\u8f93\u51faTensor"},{"location":"module/User_Guide/Common/Running_Offline_Network_Model_On_Development_Board.html#115","text":"","title":"11.5. \u6a21\u578b\u6570\u636e\u8f93\u5165"},{"location":"module/User_Guide/Common/Running_Offline_Network_Model_On_Development_Board.html#1151","text":"\u5c06\u6570\u636e\u62f7\u8d1d\u81f3\u6a21\u578b\u8f93\u5165Tensor\u7684\u865a\u62df\u5730\u5740\uff0c\u62f7\u8d1d\u5b8c\u6210\u540e\u8c03\u7528MI_SYS_FlushInvCache\uff1a MI_U8 * pdata = ( MI_U8 * ) InputTensorVector . astArrayTensors [ 0 ]. ptTensorData [ 0 ]; MI_U8 * pSrc = ( MI_U8 * ) Input_Data ; for ( int i = 0 ; i < imageSize ; i ++ ) { * ( pdata + i ) = * ( pSrc + i ); } MI_SYS_FlushInvCache ( pdata , imageSize ); \u6a21\u578b\u4e2dinput formats\u8bbe\u7f6e\u4e3a BGR \u6216\u8005 RGB \u65f6\uff0cstride\u4e0d\u8981\u505aalignment\uff0c\u505a\u4e86alignment\u53cd\u800c\u6709\u95ee\u9898\u3002 \u6a21\u578b\u4e2dinput formats\u8bbe\u7f6e\u4e3a BGRA \u6216\u8005 RGBA \uff08A channel\u5728\u9ad8\u5730\u5740\uff09\uff0calignmet\u89c4\u5219\u662fstride = alignment_up(width*4, 16 )\u3002 input_formats\u8bbe\u7f6e\u4e3a BGRA \uff0c\u5bf9\u5e94MI_SYS_PixelFormat_e\u4e3a E_MI_SYSPIXEL_FRAME_ARGB8888 \u3002 input_formats\u8bbe\u7f6e\u4e3a RGBA \uff0c\u5bf9\u5e94MI_SYS_PixelFormat_e\u4e3a E_MI_SYSPIXEL_FRAME_ABGR8888 \u3002 input formats\u8bbe\u7f6e\u4e3a YUV_NV12 \u6216\u8005 GRAY \u65f6\uff0calignment\u89c4\u5219\u662fstride = alignment_up(width,16)\uff0cheight\u9700\u89812 alignment\u3002 input_formats\u8bbe\u7f6e\u4e3a YUV_NV12 \u6216\u8005 GRAY \u65f6\uff0c\u5bf9\u5e94MI_SYS_PixelFormat_e\u4e3a E_MI_SYSPIXEL_FRAME_YUV_SEMIPLANAR_420 \u3002","title":"11.5.1. \u62f7\u8d1d\u6570\u636e"},{"location":"module/User_Guide/Common/Running_Offline_Network_Model_On_Development_Board.html#1152","text":"\u5982\u679c\u4f7f\u7528MI\u7684\u5176\u4ed6\u6a21\u5757\uff0c\u4e3a\u6a21\u578b\u8f93\u5165\u505a\u597d\u4e86\u6570\u636e\u51c6\u5907\uff0c\u53ef\u4ee5\u4e0d\u7528\u62f7\u8d1d\u6570\u636e\uff0c\u76f4\u63a5\u7ed9\u4f20\u9012\u5176\u4ed6MI\u6a21\u5757\u7684\u7269\u7406\u5730\u5740\u3002 \u4ee5\u4e0b\u4ee5MI_SYS\u6a21\u5757\u793a\u4f8b\u6a21\u578b\u8f93\u5165\u96f6\u62f7\u8d1d\u6570\u636e\uff0c\u9700\u6ce8\u610f\uff1a \u521b\u5efaIPU\u901a\u9053\u65f6\uff0c\u8f93\u5165InputBufDepth\u8bbe\u4e3a\u96f6\uff0c\u4e0d\u518d\u4f7f\u7528MI_IPU_GetInputTensors\u5206\u914d\u8f93\u5165\u7a7a\u95f4 stChnAttr.u32InputBufDepth = 0; \u7531\u4e8e\u4e0d\u4f7f\u7528MI_IPU_GetInputTensors\uff0c\u9700\u624b\u52a8\u5c06\u7f51\u7edc\u63cf\u8ff0\u7684\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u4e2a\u6570\u8d4b\u7ed9 InputTensorVector.u32TensorCount\u3002 InputTensorVector.u32TensorCount = desc.u32InputTensorCount; \u4f7f\u7528MI_SYS\u7684API\u5206\u914d\u7a7a\u95f4: MI_S32 s32ret = 0 ; MI_PHY phyAddr = 0 ; void * pVirAddr = NULL ; s32ret = MI_SYS_MMA_Alloc ( NULL , BufSize , & phyAddr ); if ( s32ret != MI_SUCCESS ) { throw std :: runtime_error ( \"Alloc buffer failed!\" ); } s32ret = MI_SYS_Mmap ( phyAddr , BufSize , & pVirAddr , TRUE ); if ( s32ret != MI_SUCCESS ) { MI_SYS_MMA_Free ( phyAddr ); throw std :: runtime_error ( \"Mmap buffer failed!\" ); } \u4f20\u9012\u865a\u62df\u5730\u5740\u548c\u7269\u7406\u5730\u5740\u7ed9InputTensorVector InputTensorVector . astArrayTensors [ 0 ]. ptTensorData [ 0 ] = pVirAddr ; InputTensorVector . astArrayTensors [ 0 ]. phyTensorAddr [ 0 ] = phyAddr ; \u4e4b\u540e\u53ef\u4ee5\u8fdb\u884c\u6a21\u578b\u63a8\u6f14\u3002 \u4f7f\u7528\u96f6\u62f7\u8d1d\u6570\u636e\uff0c\u4e0d\u9700\u8981\u518d\u91ca\u653e\u8f93\u5165Tensor\uff0c\u5373\u4e0d\u518d\u8c03\u7528MI_IPU_PutInputTensors\u51fd\u6570\uff0c\u91ca\u653eBuffer\u8c03\u7528MI_SYS\u7684API\u5b8c\u6210\u3002 \u91ca\u653eMI_SYS\u7684Buffer MI_SYS_Munmap ( pVirAddr , BufSize ); MI_SYS_MMA_Free ( phyAddr );","title":"11.5.2.\u96f6\u62f7\u8d1d\u6570\u636e"},{"location":"module/User_Guide/Common/Running_Offline_Network_Model_On_Development_Board.html#116","text":"ret = MI_IPU_Invoke ( u32ChannelID , & InputTensorVector , & OutputTensorVector ); if ( ret != MI_SUCCESS ) { MI_IPU_DestroyCHN ( u32ChannelID ); MI_IPU_DestroyDevice (); std :: cerr << \"IPU invoke failed!!\" << std :: endl ; } \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID InputTensorVector\uff1a\u8f93\u5165IPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 OutputTensorVector\uff1a\u8f93\u51faIPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b","title":"11.6. \u6a21\u578b\u63a8\u6f14"},{"location":"module/User_Guide/Common/Running_Offline_Network_Model_On_Development_Board.html#117-tensor","text":"MI_IPU_PutInputTensors ( u32ChannelID , & InputTensorVector ); MI_IPU_PutOutputTensors ( u32ChannelID , & OutputTensorVector ); \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID InputTensorVector\uff1a\u8f93\u5165IPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 OutputTensorVector\uff1a\u8f93\u51faIPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b","title":"11.7. \u91ca\u653e\u8f93\u5165\u8f93\u51faTensor"},{"location":"module/User_Guide/Common/Running_Offline_Network_Model_On_Development_Board.html#118-ipu","text":"MI_IPU_DestroyCHN ( u32ChannelID ); \u8f93\u5165\u53c2\u6570\uff1a s32Channel\uff1a\u521b\u5efaIPU\u901a\u9053\u7684ID \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b","title":"11.8. \u9500\u6bc1IPU\u901a\u9053"},{"location":"module/User_Guide/Common/Running_Offline_Network_Model_On_Development_Board.html#119-ipu","text":"MI_IPU_DestroyDevice (); \u8f93\u5165\u53c2\u6570\uff1a \u7a7a \u8f93\u51fa\u53c2\u6570\uff1aMI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b","title":"11.9. \u9500\u6bc1IPU\u8bbe\u5907"},{"location":"module/User_Guide/Common/Running_Offline_Network_Model_On_Development_Board.html#1110-py_dla","text":"Py_dla\u662fPython\u5c01\u88c5\u540e\u7684MI_IPU\u63a5\u53e3\uff0c\u53ef\u4ee5\u5728\u5f00\u53d1\u677f\u4e0a\u5feb\u901f\u5904\u7406\u6a21\u578b\u8f93\u51fa\u6570\u636e\uff0c\u65b9\u4fbf\u5feb\u901f\u9a8c\u8bc1\u6a21\u578b\u7684\u51c6\u786e\u6027\u3002 \u5df2\u51c6\u5907\u597dARM\u7684Python3.8\u7684\u5e93\uff0c\u5b58\u653e\u5728 sdk/verify/mi_demo/source/py_dla/Python3.8.tar.bz2 \uff0c \u4f7f\u7528\u65f6\u8bf7\u5148\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u89e3\u538b\u5230\u53ef\u4ee5mount\u5230\u5f00\u53d1\u677f\u7684\u672c\u5730\u8def\u5f84\uff1a tar -jxvf Python3.8.tar.bz2 \u5728\u5f00\u53d1\u677f\u4e2d\u8bbe\u7f6ePython3.8\u7684\u8def\u5f84\uff1a export LD_LIBRARY_PATH = path/to/Python3.8/usr/lib/: $LD_LIBRARY_PATH export PATH = path/to/Python3.8/usr/bin: $PATH \u4ee5\u4e0b\u6587\u4ef6\u4e3aPy_dla\u63a5\u53e3\u6587\u4ef6\uff0c\u53ef\u4ee5\u4f7f\u7528python\u76f4\u63a5import\u4f7f\u7528\uff1a sdk/verify/mi_demo/source/py_dla/_misim.cpython-38-arm-linux-gnueabihf.so \u5c06\u8be5\u6587\u4ef6\u4e0e\u7f16\u5199python\u811a\u672c\u653e\u5728\u540c\u4e00\u8def\u5f84\u4e0b\uff0c\u5373\u53ef\u4f7f\u7528Py_dla\u3002\u4e0b\u9762\u8bf4\u660epython\u4e2d\u8c03\u7528 _misim.cpython-38-arm-linux-gnueabihf.so \u4ee5\u53caAPI\u4e3e\u4f8b\u4ecb\u7ecd\u3002 \u4f7f\u7528\u5982\u4e0b\u65b9\u5f0f\uff0c\u52a0\u8f7d _misim.cpython-38-arm-linux-gnueabihf.so \uff1a from _misim import MI_simulator from _misim import IPU_GetOfflineModeStaticInfo from _misim import IPU_CreateDevice API\u4e3e\u4f8b\u8bf4\u660e\uff1a IPU_GetOfflineModeStaticInfo\uff1a\u83b7\u53d6\u6a21\u578bvariable buffer size >>> model_path = 'mobilenet_v1_fixed.sim_sgsimg.img' >>> variable_buffer_size = IPU_GetOfflineModeStaticInfo ( model_path ) IPU_CreateDevice\uff1a\u521b\u5efaIPU\u8bbe\u5907\uff08\u5982\u679c\u6709\u591a\u4e2a\u6a21\u578b\u9700\u8981\u8fd0\u884c\uff0c\u9009\u53d6\u6700\u5927\u7684variable_buffer_size \u521b\u5efaIPU\u8bbe\u5907\uff09 >>> IPU_CreateDevice ( variable_buffer_size ) \u53ef\u9009\u53c2\u6570\uff1a ipu_firmware\uff08\u7528\u6765\u6307\u5b9aipu_firmware.bin\u7684\u8def\u5f84\uff0c\u9ed8\u8ba4\u4e3a/config/dla/ipu_firmware.bin\uff09 >>> IPU_CreateDevice ( variable_buffer_size , '/path/to/ipu_firmware' ) MI_simulator\uff1a\u521b\u5efa\u6a21\u578b\u5b9e\u4f8b >>> model = MI_simulator ( model_path ) \u83b7\u53d6\u6a21\u578b\u8f93\u5165\u4fe1\u606f >>> in_details = model . get_input_details () >>> print ( in_details ) [{ 'name' : 'input' , 'index' : 0 , 'dtype' : < class ' numpy . uint8 '>, ' shape ': array([ 1, 224, 224, 3])}] \u83b7\u53d6\u6a21\u578b\u8f93\u51fa\u4fe1\u606f >>> out_details = model . get_output_details () >>> print ( out_details ) [{ 'name' : 'MobilenetV2/Predictions/Reshape_1' , 'index' : 0 , 'dtype' : < class ' numpy . float32 '>, ' shape ': array([ 1, 1001])}] \u7ed9\u7b2c0\u4e2aindex\u8f93\u5165\u6570\u636e\uff08img_data\u4e3a\u4e0e\u8f93\u5165shape\u3001dtype\u4e00\u81f4\u7684numpy.ndarray\u6570\u636e model . set_input ( in_details [ 0 ][ 'index' ], img_data ) \u6a21\u578b\u524d\u5411\u63a8\u6f14 model . invoke () \u83b7\u53d6\u7b2c0\u4e2aindex\u7684\u8f93\u51fa\uff08\u8f93\u51fa\u4e3anumpy.ndarray\uff09\uff0c\u5efa\u8bae\u4f7f\u7528numpy\u7684copy()\u65b9\u6cd5 >>> output0 = model . get_output ( out_details [ 0 ][ 'index' ]) \u83b7\u53d6\u7b2c1\u4e2aindex\u7684\u8f93\u51fa\uff0c\u4f7f\u7528numpy\u7684copy()\u65b9\u6cd5\uff0c\u62f7\u8d1d\u5185\u5b58\u5230\u65b0\u7684\u5185\u5b58\u91cc >>> output1 = model . get_output ( out_details [ 1 ][ 'index' ]) . copy ()","title":"11.10. Py_dla\u63a5\u53e3\u4f7f\u7528"},{"location":"module/User_Guide/Common/SigmaStar_Post_Processing_Module.html","text":"7.1.\u6a21\u5757\u4ecb\u7ecd \u00b6 SigmaStar\u540e\u5904\u7406\u6a21\u5757\u4f4d\u7f6e\u5728 SGS_IPU_SDK/Scripts/postprocess \u3002 \u8be5\u6a21\u5757\u4e3b\u8981\u4ee5sgs_chalk\u751f\u6210\u4e00\u4e2a\u68c0\u6d4b\u7f51\u7edc\u540e\u5904\u7406\u7684\u901a\u7528\u751f\u6210\u65b9\u6cd5\u3002 \u4f7f\u7528\u8be5\u6a21\u5757\u65f6\uff0c\u5148\u6839\u636e\u540e\u5904\u7406\u65b9\u6cd5\u7f16\u5199python\u540e\u5904\u7406\u6587\u4ef6\uff0c\u751f\u6210\u72ec\u7acb\u7684\u540e\u5904\u7406\u6a21\u578b\u6587\u4ef6\uff0c\u518d\u5728\u4f7f\u7528ConvertTool\u8f6c\u6362float\u6a21\u578b\u7684\u8fc7\u7a0b\u4e2d\u52a0\u4e0a--postprocess\u53c2\u6570\uff0c\u4f20\u8f93\u7f16\u5199\u597d\u540e\u5904\u7406\u6587\u4ef6\u7684\u5b8c\u6574\u8def\u5f84\uff0c\u6700\u7ec8\u751f\u6210\u7684\u662f\u5c06Backbone\u7f51\u7edc\u6a21\u578b\u548c\u540e\u5904\u7406\u6a21\u578b\u8fde\u63a5\u5728\u4e00\u8d77\u7684\u5b8c\u6574\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u3002\u53e6\u5916\u53ef\u4ee5\u901a\u8fc7--postprocess_input_config\u4f20\u5165\u5b8c\u6574\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u7684ini\u6587\u4ef6\uff0c\u5982\u679c\u4e0d\u4f20\u6b64\u53c2\u6570\uff0c\u5219\u81ea\u52a8\u751f\u6210\u7684ini\u6587\u4ef6\u4e2d\u9ed8\u8ba4quantizations\u548cdequantizations\u90fd\u8bbe\u7f6e\u4e3aTrue\u3002 \u7f16\u5199\u7684python\u6587\u4ef6\u53ef\u53c2\u8003 SGS_IPU_SDK/Scripts/postprocess/sgs_chalk_postprocess_method \u6587\u4ef6\u5939\u4e0b\u7684\u793a\u4f8b\u3002 \u4ee5\u4e0b\u7ae0\u8282\u8be6\u7ec6\u4ecb\u7ecd\u5c01\u88c5\u597d\u7684\u540e\u5904\u7406\u6d41\u7a0b\u548c\u81ea\u5b9a\u4e49\u540e\u5904\u7406\u6d41\u7a0b\u7684python\u6587\u4ef6\u7f16\u5199\uff0c\u7528\u4ee5\u751f\u6210\u540e\u5904\u7406\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u3002 7.2. bbox\u5750\u6807\u89e3\u7801\u6a21\u5757\u4f7f\u7528 \u00b6 \u4e3a\u65b9\u4fbf\u4f7f\u7528\uff0cSigmastar\u5206\u6790\u4e86SSD\u3001YOLOv1\u3001YOLOv2\u3001YOLOv3\u7b49\u7f51\u7edc\u7684\u540e\u5904\u7406\uff0c\u9488\u5bf9bbox\u5750\u6807\u7684\u63d0\u53d6\u5df2\u7ecf\u62bd\u8c61\u51fa\u4e00\u5957\u89e3\u7801\u6d41\u7a0b\uff0c\u4e0d\u540c\u7f51\u7edc\u5728\u7ed3\u6784\u4e0a\u4e00\u6837\uff0c\u4e0d\u540c\u70b9\u5728\u90e8\u5206\u7684\u7b97\u5b50\u4f7f\u7528\u548canchor\u53c2\u6570\u7684\u4f20\u5165\u3002\u56e0\u6b64\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6econfig\u5b57\u5178\u53d8\u91cf\uff0c\u5373\u53ef\u751f\u6210bbox\u5750\u6807\u7684\u540e\u5904\u7406\u7f51\u7edc\u6a21\u578b\u3002bbox\u5750\u6807\u89e3\u7801\u7f51\u7edc\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u751f\u6210bbox\u5750\u6807\u89e3\u7801\u7f51\u7edc\u6a21\u578b\uff0c\u53ef\u4fee\u6539config\u5b57\u5178\u53d8\u91cf\uff0c\u8be5\u53d8\u91cf\u53c2\u6570\u610f\u4e49\u5982\u4e0b\u8868\u6240\u793a\uff1a \u53c2\u6570\u540d \u53c2\u6570\u7c7b\u578b \u63cf\u8ff0\u4fe1\u606f sh ape [ int] bbox tensor\u7684\u5f62\u72b6\uff0c\u6bd4\u5982 [1,837] tx_func (tflite.BuiltinOperator, str) 1. tflite.BuiltinOperator\u4e3atflite\u5185\u7f6e\u7b97\u5b50\u7c7b\u578b\uff1b 2. str\u4e3a\u5b57\u7b26\u4e32 x_scale \u6216\u8005 None \uff1a\u5f531\u4e2d\u6307\u5b9a\u7684\u7b97\u5b50\u4e3a\u5355\u53e3\u7b97\u5b50\u65f6str\u586b None \uff0c\u5982\u679c\u4e3a\u53cc\u53e3\u7b97\u5b50\uff0c\u8fd9\u91cc\u586b x_scale \u5e76\u5728\u6210\u5458\u53d8\u91cf x_scale \u4e2d\u6307\u5b9a\u5176\u503c\u3002 ty_func (tflite.BuiltinOperator, str) 1. tflite.BuiltinOperator\u4e3atflite\u5185\u7f6e\u7b97\u5b50\u7c7b\u578b\uff1b 2. str\u4e3a\u5b57\u7b26\u4e32 y_scale \u6216\u8005 None \uff1a\u5f531\u4e2d\u6307\u5b9a\u7684\u7b97\u5b50\u4e3a\u5355\u53e3\u7b97\u5b50\u65f6str\u586b None \uff0c\u5982\u679c\u4e3a\u53cc\u53e3\u7b97\u5b50\uff0c\u8fd9\u91cc\u586b y_scale \u5e76\u5728\u6210\u5458\u53d8\u91cf y_scale \u4e2d\u6307\u5b9a\u5176\u503c\u3002 tw_func (tflite.BuiltinOperator, str) 1. tflite.BuiltinOperator\u4e3atflite\u5185\u7f6e\u7b97\u5b50\u7c7b\u578b\uff1b 2. str\u4e3a\u5b57\u7b26\u4e32 w_scale \u6216\u8005 None \uff1a\u5f531\u4e2d\u6307\u5b9a\u7684\u7b97\u5b50\u4e3a\u5355\u53e3\u7b97\u5b50\u65f6str\u586b None \uff0c\u5982\u679c\u4e3a\u53cc\u53e3\u7b97\u5b50\uff0c\u8fd9\u91cc\u586bw_scale\u5e76\u5728\u6210\u5458\u53d8\u91cfw_scale\u4e2d\u6307\u5b9a\u5176\u503c\u3002 th_func (tflite.BuiltinOperator, str) 1. tflite.BuiltinOperator\u4e3atflite\u5185\u7f6e\u7b97\u5b50\u7c7b\u578b\uff1b 2. str\u4e3a\u5b57\u7b26\u4e32 h_scale \u6216\u8005 None \uff1a\u5f531\u4e2d\u6307\u5b9a\u7684\u7b97\u5b50\u4e3a\u5355\u53e3\u7b97\u5b50\u65f6str\u586b None \uff0c\u5982\u679c\u4e3a\u53cc\u53e3\u7b97\u5b50\uff0c\u8fd9\u91cc\u586b h_scale \u5e76\u5728\u6210\u5458\u53d8\u91cf h_scale \u4e2d\u6307\u5b9a\u5176\u503c\u3002 x_scale float tx_func[1]\u4e3a x_scale \u65f6\u6307\u5b9a\u7684\u503c y_scale float tx_func[1]\u4e3a y_scale \u65f6\u6307\u5b9a\u7684\u503c w_scale float tx_func[1]\u4e3a w_scale \u65f6\u6307\u5b9a\u7684\u503c h_scale float tx_func[1]\u4e3a h_scale \u65f6\u6307\u5b9a\u7684\u503c anchor_selector str constant \u6216\u8005\u4e3a None \u6307\u5b9apw\u548cph\u662f constant \u8fd8\u662f\u6709pw_func\u548cph_func\u751f\u6210 pw [ float ] \u5982\u679canchor_selector\u4e3a constant \u65f6pw\u6307\u5b9a\u4e3a\u4e00\u4e2afloat\u5217\u8868 ph [ float ] \u5982\u679canchor_selector\u4e3a constant \u65f6ph\u6307\u5b9a\u4e3a\u4e00\u4e2afloat\u5217\u8868 ppw [ float ] \u5982\u679canchor_selector\u4e3a constant \u65f6ppw\u6307\u5b9a\u4e3a\u4e00\u4e2afloat\u5217\u8868 pph [ float ] \u5982\u679canchor_selector\u4e3a constant \u65f6pph\u6307\u5b9a\u4e3a\u4e00\u4e2afloat\u5217\u8868 px [ float ] px\u6307\u5b9a\u4e3a\u4e00\u4e2afloat\u5217\u8868 py [ float ] py\u6307\u5b9a\u4e3a\u4e00\u4e2afloat\u5217\u8868 sx [ float ] sx\u6307\u5b9a\u4e3a\u4e00\u4e2afloat\u5217\u8868 sy [ float ] sy\u6307\u5b9a\u4e3a\u4e00\u4e2afloat\u5217\u8868 sw [ float ] sw\u6307\u5b9a\u4e3a\u4e00\u4e2afloat\u5217\u8868 sh [ float ] sh\u6307\u5b9a\u4e3a\u4e00\u4e2afloat\u5217\u8868 7.3. SigmaStar\u5b9a\u5236\u540e\u5904\u7406\u7b97\u5b50 \u00b6 sgs_chalk\u63d0\u4f9b\u4e86\u540e\u5904\u7406\u7b97\u5b50\u7684API\uff0c\u4ecb\u7ecd\u5982\u4e0b\uff1a 7.3.1. PostProcess_Unpack \u00b6 PostProcess_Unpack\u7b97\u5b50\u76ee\u7684\u662f\u5c06Backbone\u7f51\u7edc\u7684\u8f93\u51fa\u5206\u79bb\uff0c\u652f\u6301\u6700\u5927\u5206\u79bb\u51fa7\u4e2a\u5206\u652f\u3002 \u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a unpack_out_tensors1 = [] for i in range ( 7 ): unpack_out_tensors1 . append ( \"SGS_unpack\" + str ( i )) output_list = sgs_chalk . PostProcess_Unpack ( input , mode = 'YOLO' , num_classes = 20 , name = unpack_out_tensors1 ) \u6839\u636e\u7f51\u7edc\u7684\u4e0d\u540c\uff0c\u4fee\u6539\u6bcf\u884c\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u3002\u5982\u679c\u8be5\u5206\u652f\u4e0d\u9700\u8981\uff0c\u5219\u5bf9\u5e94\u7684offset\u548clengh\u586b0\u3002 input\uff1a \u8f93\u5165tensor mode\uff1a \u8f93\u5165\u5b57\u7b26\u4e32\uff0c\u53ea\u652f\u6301 YOLO \u6216\u8005 SSD num_classes\uff1a \u9700\u8981\u68c0\u6d4b\u7684\u7c7b\u522b\u6570 name\uff1a \u8f93\u51fatensor\u540d\u5b57\u7684list \u7ed3\u5408bbox\u5750\u6807\u89e3\u7801\u6a21\u5757\uff0cPostProcess_Unpack\u6709\u5982\u4e0b\u540e\u5904\u7406\u7f51\u7edc\u793a\u4f8b\uff1a 1.SSD\u6a21\u5f0f\u4e0b\uff1a\u5206\u79bbbbox\u5750\u6807 2.YOLO\u6a21\u5f0f\u4e0b\uff1a\u5206\u79bbbbox\u5750\u6807\u3001confidence\u3001scores\u3001max_score 7.3.2. TFLite_Detection_NMS \u00b6 TFLite_Detection_NMS\u7b97\u5b50\u5c06NMS\u64cd\u4f5c\u7ec4\u5408\u6210\u4e3a\u4e00\u4e2a\u7b97\u5b50\uff0c\u4e0ePostProcess_Unpack\u7b97\u5b50\u914d\u5408\uff0c\u6700\u5927\u652f\u63017\u4e2a\u8f93\u5165\uff0c\u8f93\u51fa\u4e3a4\u4e2a\u62165\u4e2a\u3002 \u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a out1 = sgs_chalk . TFLite_Detection_NMS ( x1 , y1 , x2 , y2 , confidence , score , max_score = None , mode = 'YOLO' , max_detections = 100 , nms_score_threshold = 0.4 , nms_iou_threshold = 0.45 , num_classes = 20 , is_need_index = False ) \u6839\u636e\u7f51\u7edc\u7684\u4e0d\u540c\uff0c\u4fee\u6539\u6bcf\u884c\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u3002\u5982\u679c\u8be5\u53c2\u6570\u4e0d\u9700\u8981\uff0c\u5219\u5bf9\u5e94\u53c2\u6570\u586b-1\u3002 x1\uff1a \u5bf9\u5e94PostProcess_Unpack\u7b97\u5b50\u5206\u79bb\u51fa\u7684x1 tensor\u3002 y1\uff1a \u5bf9\u5e94PostProcess_Unpack\u7b97\u5b50\u5206\u79bb\u51fa\u7684y1 tensor\u3002 x2\uff1a \u5bf9\u5e94PostProcess_Unpack\u7b97\u5b50\u5206\u79bb\u51fa\u7684x2 tensor\u3002 y2\uff1a \u5bf9\u5e94PostProcess_Unpack\u7b97\u5b50\u5206\u79bb\u51fa\u7684y2 tensor\u3002 confidence\uff1a \u5bf9\u5e94PostProcess_Unpack\u7b97\u5b50\u5206\u79bb\u51fa\u7684 bbox \u7f6e\u4fe1\u5ea6\u3002 score\uff1a \u5bf9\u5e94PostProcess_Unpack\u7b97\u5b50\u5206\u79bb\u51fa\u7684 bbox \u5f97\u5206\u3002 max_score\uff1a \u5bf9\u5e94PostProcess_Unpack\u7b97\u5b50\u5206\u79bb\u51fa\u7684 score\u6700\u5927\u503c\uff0c\u53ea\u6709 YOLO \u6a21\u5f0f\u4e0b\u9700\u8981\u4f20\u5165\u3002 mode\uff1a \u8f93\u5165\u5b57\u7b26\u4e32\uff0c\u53ea\u652f\u6301 YOLO \u6216\u8005 SSD \u3002 max_detections\uff1a \u6700\u5927\u68c0\u6d4b\u6570\u3002 nms_score_threshold\uff1a nms score\u9608\u503c\u3002 nms_iou_threshold\uff1a nms iou\u9608\u503c\u3002 num_classes\uff1a \u68c0\u6d4b\u7c7b\u522b\u6570\u3002 is_need_index\uff1a \u662f\u5426\u8f93\u51faindex\uff0c\u9ed8\u8ba4\u4e3afalse\u3002 Please Note: TFLite_Detection_NMS\u7b97\u5b50SSD\u6a21\u5f0f\u6700\u5927\u652f\u630124576\u4e2abbox\u8f93\u5165\u3002 TFLite_Detection_NMS\u7b97\u5b50YOLO\u6a21\u5f0f\u5148\u6309\u7167confidence\u53d6\u6ee1\u8db3 nms_score_threshold \u7684\u524d4096\u4e2a\u6846\uff0c\u518d\u505aIOU\u7b5b\u9009\u3002 TFLite_Detection_NMS\u7b97\u5b50\u505a\u591a\u8f93\u51fa400\u4e2a\u68c0\u6d4b\u7ed3\u679c\u3002 7.4. \u83b7\u53d6\u79bb\u7ebfanchor\u6570\u636e \u00b6 Caffe\u7f51\u7edc\u4e2d\u5982\u679cPriorBox\u8282\u70b9\u4e2d\u6570\u636e\u662f\u79bb\u7ebf\u751f\u6210\u7684\uff0c\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u6cd5\u83b7\u53d6\u3002 \u5177\u4f53\u7f51\u7edc\u8bf7\u53c2\u8003SGS_Models/caffe/caffe_ssd_mobilenet_v1\u3002 \u8f6c\u6362\u5e26PriorBox\u8282\u70b9\u7684backbone\u7f51\u7edc\uff0c\u4f7f\u7528Netron\u6253\u5f00\u7f51\u7edcprototxt\u6587\u4ef6\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u4fee\u6539\u5bf9\u5e94\u7684input_config.ini\u6587\u4ef6\u548cConvertTool\u8f6c\u6362\u547d\u4ee4\uff0c\u67093\u4e2a\u8f93\u51fa\uff0c\u751f\u6210backbone\u7f51\u7edc\u90e8\u5206\u3002 \u8f6c\u6362\u5b8c\u6210\u540e\uff0c\u6240\u6709PriorBox\u8282\u70b9\u751f\u6210\u4e3a\u4e00\u4e2a\u8282\u70b9\u3002\u4f7f\u7528Netron\u6253\u5f00\u751f\u6210\u7684backbone\u7f51\u7edc\uff0c\u5148\u70b9\u51fbmbox_priorbox\u8282\u70b9\uff0c\u518d\u70b9\u51fb\u7ea2\u6846\u4e2d\u7684\u4fdd\u5b58\u6309\u94ae\uff0c\u5373\u53ef\u5c06anchor\u7684\u6570\u636e\u4fdd\u5b58\u4e3a.npy\u6587\u4ef6\u3002 \u5728\u914d\u7f6ebbox\u5750\u6807\u89e3\u7801\u6a21\u5757\u65f6\uff0c\u4f7f\u7528numpy.load\u8bfb\u53d6.npy\u6587\u4ef6\uff0c\u914d\u7f6e\u597d\u5bf9\u5e94\u7684\u53d8\u91cf\u3002\u5982\u679c\u5df2\u6709anchor\u6570\u636e\uff0c\u53ef\u4ee5\u4e0d\u7528\u6b64\u65b9\u6cd5\uff0c\u76f4\u63a5\u4f7f\u7528anchor\u6570\u636e\u3002 \u540e\u5904\u7406python\u6587\u4ef6\u5728\u7f16\u5199\u65f6\uff0c\u589e\u52a0\u6a21\u578b\u914d\u7f6e\u7684\u8f93\u5165\u4e3a3\u4e2a\u8f93\u5165\uff0c\u589e\u52a0mbox_priorbox\u7684shape\uff0c\u5177\u4f53\u4ee3\u7801\u8be6\u89c1 SGS_IPU_SDK/Scripts/postprocess/sgs_chalk_postprocess_method/caffe_ssd_mobilenet_v1_postprocess.py model_config = { \"name\" : \"caffe_ssd_mobilenet_v1\" , \"input\" : [ \"mbox_loc\" , \"mbox_conf_softmax\" , \"mbox_priorbox\" ], \"input_shape\" : [[ 1 , 1917 , 4 ],[ 1 , 1917 , 21 ],[ 1917 , 4 ]], \"shape\" : [ 1 , 1917 ], \"out_shapes\" : [[ 1 , 10 , 4 ],[ 1 , 10 ],[ 1 , 10 ],[ 1 ]]} \u751f\u6210\u540e\u5904\u7406\u6a21\u578b\u540e\uff0c\u4f7f\u7528concat_net\u5de5\u5177\u8fde\u63a5\u4f1a\u81ea\u52a8\u6e05\u9664mbox_priorbox\u8282\u70b9\u3002 7.5. \u4e3e\u4f8b\u4f7f\u7528 \u00b6 \u4ee5\u4e0b\u793a\u4f8b\u4ee5caffe_yolo_v2\u6a21\u578b\u7684\u540e\u5904\u7406\u4e3a\u4f8b\uff0c\u5177\u4f53\u4ee3\u7801\u8be6\u89c1 SGS_IPU_SDK/Scripts/postprocess/sgs_chalk_postprocess_method/caffe_yolo_v2_postprocess.py 7.5.1. \u53c2\u6570\u914d\u7f6e \u00b6 \u9996\u5148\u914d\u7f6eget_postprocess()\u51fd\u6570\u4e2d\u7684model_config\u5b57\u5178\u53d8\u91cf\uff1a model_config = { \"name\" : \"caffe_yolo_v2\" , \"input\" : [ 'conv23' ], \"input_shape\" : [ 1 , 13 , 13 , 125 ], \"shape\" : [ 1 , 845 ], \"out_shapes\" : [[ 1 , 100 , 4 ],[ 1 , 100 ],[ 1 , 100 ],[ 1 ]]} \u5176\u6b21\u914d\u7f6econfig\u5b57\u5178\u53d8\u91cf\u7528\u4e8eboxdecoder\uff0c\u6839\u636ebbox\u5750\u6807\u89e3\u7801\u7684\u5b9e\u9645\u8ba1\u7b97\u65b9\u6cd5\u914d\u7f6econfig\u7684\u5404\u4e2a\u53c2\u6570\u3002 \u914d\u7f6e\u53c2\u6570\uff1a \u9700\u8981\u7528\u6237\u914d\u7f6e\u7684\u53c2\u6570\u6709box_num,side_x,side_y,num_classes,biases box_num = 5 side_x = [ 13 ] side_y = [ 13 ] num_classes = 20 num_anchors = 0 for i in range ( len ( side_x )): num_anchors += box_num * side_x [ i ] * side_y [ i ] ppw = np . ones ( num_anchors ) pph = np . ones ( num_anchors ) for k in range ( len ( side_x )): for i in range ( side_y [ k ] * side_x [ k ]): tempX = i % side_y [ k ] tempY = math . floor ( i / side_y [ k ]) for n in range ( box_num ): px . append ( tempX ) py . append ( tempY ) pw = np . ones ( num_anchors ) ph = np . ones ( num_anchors ) sx = np . ones ( num_anchors ) * ( 1.0 / side_y [ 0 ]) sy = np . ones ( num_anchors ) * ( 1.0 / side_x [ 0 ]) biases = [[ 1.3221 , 1.73145 ],[ 3.19275 , 4.00944 ],[ 5.05587 , 8.09892 ],[ 9.47112 , 4.84053 ],[ 11.2364 , 10.0071 ]] sw = [ x [ 0 ] / ( 2 * side_x [ 0 ]) for x in biases ] * ( side_x [ 0 ] * side_y [ 0 ]) sh = [ x [ 1 ] / ( 2 * side_y [ 0 ]) for x in biases ] * ( side_x [ 0 ] * side_y [ 0 ]) \u914d\u7f6econfig\u5b57\u5178\u53d8\u91cf\uff1a config = { \"shape\" : [ 1 , num_anchors ], \"tx_func\" : ( tflite . BuiltinOperator . BuiltinOperator () . LOGISTIC , None ), #None or 'x_scale' \"ty_func\" : ( tflite . BuiltinOperator . BuiltinOperator () . LOGISTIC , None ), #None or 'y_scale' \"tw_func\" : ( tflite . BuiltinOperator . BuiltinOperator () . RESHAPE , None ), #None or 'w_scale' \"th_func\" : ( tflite . BuiltinOperator . BuiltinOperator () . RESHAPE , None ), #None or 'h_scale' \"x_scale\" : 0.1 , \"y_scale\" : 0.1 , \"w_scale\" : 1 , \"h_scale\" : 1 , \"anchor_selector\" : \"constant\" , \"pw\" : pw , \"ph\" : ph , \"pw_func\" : ( None , None ), \"ph_func\" : ( None , None ), \"ppw\" : ppw , \"px\" : px , \"pph\" : pph , \"py\" : py , \"sx\" : sx , \"sy\" : sy , \"sw\" : sw , \"sh\" : sh } 7.5.2. \u521b\u5efa\u5e38\u91cfTensor \u00b6 constant1 = sgs_chalk . Tensor ( data = np . array ([ 1 ]) . astype ( np . float32 ), name = prefix + \"mul_constant\" ) \u8c03\u7528sgs_chalk\u7684\u521b\u5efaTensor API,\u4f20\u5165data\u548cname\u5373\u53ef 7.5.3. \u521b\u5efa\u4e00\u4e2a\u7b97\u5b50 \u00b6 \u521b\u5efa\u4e00\u4e2a\u53cc\u53e3Mul\u7b97\u5b50\uff1a SGS_score1 = sgs_chalk . Mul ( confidence_tensor , SGS_score0 , name = \"SGS_score1\" ) \u8c03\u7528\u521b\u5efasgs_chalk\u7684\u521b\u5efaMul\u7b97\u5b50API\uff0c\u4f20\u5165\u8f93\u5165tensor\uff0c\u8f93\u51fatensor\u7684name\u5373\u53ef \u521b\u5efa\u4e00\u4e2aReshape\u7b97\u5b50\uff0c\u9700\u8981\u521b\u5efa\u5e38\u91cfTensor\uff1a reshape_tensor = sgs_chalk . Reshape ( in0 ,[ 1 , 845 , 25 ], name = \"reshape_tensor\" ) \u8c03\u7528sgs_chalk\u7684\u521b\u5efaReshape\u7b97\u5b50API\uff0c\u4f20\u5165\u8f93\u5165tensor,shape,\u8f93\u51fatensor\u7684name\u5373\u53ef 7.5.4. \u521b\u5efa\u5ba2\u5236\u5316\u7b97\u5b50 \u00b6 \u89c17.4\u8282 \u5e76\u4e14\u6700\u7ec8\u8981\u8fd4\u56de\u521b\u5efa\u597d\u7684\u540e\u5904\u7406\u6a21\u578b\u7684\u6587\u4ef6\u540d\u7528\u4e8e\u5728ConvertTool\u4e2d\u751f\u6210\u6700\u7ec8\u7684float\u6a21\u578b\u3002","title":"SigmaStar Post Processing Module"},{"location":"module/User_Guide/Common/SigmaStar_Post_Processing_Module.html#71","text":"SigmaStar\u540e\u5904\u7406\u6a21\u5757\u4f4d\u7f6e\u5728 SGS_IPU_SDK/Scripts/postprocess \u3002 \u8be5\u6a21\u5757\u4e3b\u8981\u4ee5sgs_chalk\u751f\u6210\u4e00\u4e2a\u68c0\u6d4b\u7f51\u7edc\u540e\u5904\u7406\u7684\u901a\u7528\u751f\u6210\u65b9\u6cd5\u3002 \u4f7f\u7528\u8be5\u6a21\u5757\u65f6\uff0c\u5148\u6839\u636e\u540e\u5904\u7406\u65b9\u6cd5\u7f16\u5199python\u540e\u5904\u7406\u6587\u4ef6\uff0c\u751f\u6210\u72ec\u7acb\u7684\u540e\u5904\u7406\u6a21\u578b\u6587\u4ef6\uff0c\u518d\u5728\u4f7f\u7528ConvertTool\u8f6c\u6362float\u6a21\u578b\u7684\u8fc7\u7a0b\u4e2d\u52a0\u4e0a--postprocess\u53c2\u6570\uff0c\u4f20\u8f93\u7f16\u5199\u597d\u540e\u5904\u7406\u6587\u4ef6\u7684\u5b8c\u6574\u8def\u5f84\uff0c\u6700\u7ec8\u751f\u6210\u7684\u662f\u5c06Backbone\u7f51\u7edc\u6a21\u578b\u548c\u540e\u5904\u7406\u6a21\u578b\u8fde\u63a5\u5728\u4e00\u8d77\u7684\u5b8c\u6574\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u3002\u53e6\u5916\u53ef\u4ee5\u901a\u8fc7--postprocess_input_config\u4f20\u5165\u5b8c\u6574\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u7684ini\u6587\u4ef6\uff0c\u5982\u679c\u4e0d\u4f20\u6b64\u53c2\u6570\uff0c\u5219\u81ea\u52a8\u751f\u6210\u7684ini\u6587\u4ef6\u4e2d\u9ed8\u8ba4quantizations\u548cdequantizations\u90fd\u8bbe\u7f6e\u4e3aTrue\u3002 \u7f16\u5199\u7684python\u6587\u4ef6\u53ef\u53c2\u8003 SGS_IPU_SDK/Scripts/postprocess/sgs_chalk_postprocess_method \u6587\u4ef6\u5939\u4e0b\u7684\u793a\u4f8b\u3002 \u4ee5\u4e0b\u7ae0\u8282\u8be6\u7ec6\u4ecb\u7ecd\u5c01\u88c5\u597d\u7684\u540e\u5904\u7406\u6d41\u7a0b\u548c\u81ea\u5b9a\u4e49\u540e\u5904\u7406\u6d41\u7a0b\u7684python\u6587\u4ef6\u7f16\u5199\uff0c\u7528\u4ee5\u751f\u6210\u540e\u5904\u7406\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u3002","title":"7.1.\u6a21\u5757\u4ecb\u7ecd"},{"location":"module/User_Guide/Common/SigmaStar_Post_Processing_Module.html#72-bbox","text":"\u4e3a\u65b9\u4fbf\u4f7f\u7528\uff0cSigmastar\u5206\u6790\u4e86SSD\u3001YOLOv1\u3001YOLOv2\u3001YOLOv3\u7b49\u7f51\u7edc\u7684\u540e\u5904\u7406\uff0c\u9488\u5bf9bbox\u5750\u6807\u7684\u63d0\u53d6\u5df2\u7ecf\u62bd\u8c61\u51fa\u4e00\u5957\u89e3\u7801\u6d41\u7a0b\uff0c\u4e0d\u540c\u7f51\u7edc\u5728\u7ed3\u6784\u4e0a\u4e00\u6837\uff0c\u4e0d\u540c\u70b9\u5728\u90e8\u5206\u7684\u7b97\u5b50\u4f7f\u7528\u548canchor\u53c2\u6570\u7684\u4f20\u5165\u3002\u56e0\u6b64\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6econfig\u5b57\u5178\u53d8\u91cf\uff0c\u5373\u53ef\u751f\u6210bbox\u5750\u6807\u7684\u540e\u5904\u7406\u7f51\u7edc\u6a21\u578b\u3002bbox\u5750\u6807\u89e3\u7801\u7f51\u7edc\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u751f\u6210bbox\u5750\u6807\u89e3\u7801\u7f51\u7edc\u6a21\u578b\uff0c\u53ef\u4fee\u6539config\u5b57\u5178\u53d8\u91cf\uff0c\u8be5\u53d8\u91cf\u53c2\u6570\u610f\u4e49\u5982\u4e0b\u8868\u6240\u793a\uff1a \u53c2\u6570\u540d \u53c2\u6570\u7c7b\u578b \u63cf\u8ff0\u4fe1\u606f sh ape [ int] bbox tensor\u7684\u5f62\u72b6\uff0c\u6bd4\u5982 [1,837] tx_func (tflite.BuiltinOperator, str) 1. tflite.BuiltinOperator\u4e3atflite\u5185\u7f6e\u7b97\u5b50\u7c7b\u578b\uff1b 2. str\u4e3a\u5b57\u7b26\u4e32 x_scale \u6216\u8005 None \uff1a\u5f531\u4e2d\u6307\u5b9a\u7684\u7b97\u5b50\u4e3a\u5355\u53e3\u7b97\u5b50\u65f6str\u586b None \uff0c\u5982\u679c\u4e3a\u53cc\u53e3\u7b97\u5b50\uff0c\u8fd9\u91cc\u586b x_scale \u5e76\u5728\u6210\u5458\u53d8\u91cf x_scale \u4e2d\u6307\u5b9a\u5176\u503c\u3002 ty_func (tflite.BuiltinOperator, str) 1. tflite.BuiltinOperator\u4e3atflite\u5185\u7f6e\u7b97\u5b50\u7c7b\u578b\uff1b 2. str\u4e3a\u5b57\u7b26\u4e32 y_scale \u6216\u8005 None \uff1a\u5f531\u4e2d\u6307\u5b9a\u7684\u7b97\u5b50\u4e3a\u5355\u53e3\u7b97\u5b50\u65f6str\u586b None \uff0c\u5982\u679c\u4e3a\u53cc\u53e3\u7b97\u5b50\uff0c\u8fd9\u91cc\u586b y_scale \u5e76\u5728\u6210\u5458\u53d8\u91cf y_scale \u4e2d\u6307\u5b9a\u5176\u503c\u3002 tw_func (tflite.BuiltinOperator, str) 1. tflite.BuiltinOperator\u4e3atflite\u5185\u7f6e\u7b97\u5b50\u7c7b\u578b\uff1b 2. str\u4e3a\u5b57\u7b26\u4e32 w_scale \u6216\u8005 None \uff1a\u5f531\u4e2d\u6307\u5b9a\u7684\u7b97\u5b50\u4e3a\u5355\u53e3\u7b97\u5b50\u65f6str\u586b None \uff0c\u5982\u679c\u4e3a\u53cc\u53e3\u7b97\u5b50\uff0c\u8fd9\u91cc\u586bw_scale\u5e76\u5728\u6210\u5458\u53d8\u91cfw_scale\u4e2d\u6307\u5b9a\u5176\u503c\u3002 th_func (tflite.BuiltinOperator, str) 1. tflite.BuiltinOperator\u4e3atflite\u5185\u7f6e\u7b97\u5b50\u7c7b\u578b\uff1b 2. str\u4e3a\u5b57\u7b26\u4e32 h_scale \u6216\u8005 None \uff1a\u5f531\u4e2d\u6307\u5b9a\u7684\u7b97\u5b50\u4e3a\u5355\u53e3\u7b97\u5b50\u65f6str\u586b None \uff0c\u5982\u679c\u4e3a\u53cc\u53e3\u7b97\u5b50\uff0c\u8fd9\u91cc\u586b h_scale \u5e76\u5728\u6210\u5458\u53d8\u91cf h_scale \u4e2d\u6307\u5b9a\u5176\u503c\u3002 x_scale float tx_func[1]\u4e3a x_scale \u65f6\u6307\u5b9a\u7684\u503c y_scale float tx_func[1]\u4e3a y_scale \u65f6\u6307\u5b9a\u7684\u503c w_scale float tx_func[1]\u4e3a w_scale \u65f6\u6307\u5b9a\u7684\u503c h_scale float tx_func[1]\u4e3a h_scale \u65f6\u6307\u5b9a\u7684\u503c anchor_selector str constant \u6216\u8005\u4e3a None \u6307\u5b9apw\u548cph\u662f constant \u8fd8\u662f\u6709pw_func\u548cph_func\u751f\u6210 pw [ float ] \u5982\u679canchor_selector\u4e3a constant \u65f6pw\u6307\u5b9a\u4e3a\u4e00\u4e2afloat\u5217\u8868 ph [ float ] \u5982\u679canchor_selector\u4e3a constant \u65f6ph\u6307\u5b9a\u4e3a\u4e00\u4e2afloat\u5217\u8868 ppw [ float ] \u5982\u679canchor_selector\u4e3a constant \u65f6ppw\u6307\u5b9a\u4e3a\u4e00\u4e2afloat\u5217\u8868 pph [ float ] \u5982\u679canchor_selector\u4e3a constant \u65f6pph\u6307\u5b9a\u4e3a\u4e00\u4e2afloat\u5217\u8868 px [ float ] px\u6307\u5b9a\u4e3a\u4e00\u4e2afloat\u5217\u8868 py [ float ] py\u6307\u5b9a\u4e3a\u4e00\u4e2afloat\u5217\u8868 sx [ float ] sx\u6307\u5b9a\u4e3a\u4e00\u4e2afloat\u5217\u8868 sy [ float ] sy\u6307\u5b9a\u4e3a\u4e00\u4e2afloat\u5217\u8868 sw [ float ] sw\u6307\u5b9a\u4e3a\u4e00\u4e2afloat\u5217\u8868 sh [ float ] sh\u6307\u5b9a\u4e3a\u4e00\u4e2afloat\u5217\u8868","title":"7.2. bbox\u5750\u6807\u89e3\u7801\u6a21\u5757\u4f7f\u7528"},{"location":"module/User_Guide/Common/SigmaStar_Post_Processing_Module.html#73-sigmastar","text":"sgs_chalk\u63d0\u4f9b\u4e86\u540e\u5904\u7406\u7b97\u5b50\u7684API\uff0c\u4ecb\u7ecd\u5982\u4e0b\uff1a","title":"7.3. SigmaStar\u5b9a\u5236\u540e\u5904\u7406\u7b97\u5b50"},{"location":"module/User_Guide/Common/SigmaStar_Post_Processing_Module.html#731-postprocess_unpack","text":"PostProcess_Unpack\u7b97\u5b50\u76ee\u7684\u662f\u5c06Backbone\u7f51\u7edc\u7684\u8f93\u51fa\u5206\u79bb\uff0c\u652f\u6301\u6700\u5927\u5206\u79bb\u51fa7\u4e2a\u5206\u652f\u3002 \u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a unpack_out_tensors1 = [] for i in range ( 7 ): unpack_out_tensors1 . append ( \"SGS_unpack\" + str ( i )) output_list = sgs_chalk . PostProcess_Unpack ( input , mode = 'YOLO' , num_classes = 20 , name = unpack_out_tensors1 ) \u6839\u636e\u7f51\u7edc\u7684\u4e0d\u540c\uff0c\u4fee\u6539\u6bcf\u884c\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u3002\u5982\u679c\u8be5\u5206\u652f\u4e0d\u9700\u8981\uff0c\u5219\u5bf9\u5e94\u7684offset\u548clengh\u586b0\u3002 input\uff1a \u8f93\u5165tensor mode\uff1a \u8f93\u5165\u5b57\u7b26\u4e32\uff0c\u53ea\u652f\u6301 YOLO \u6216\u8005 SSD num_classes\uff1a \u9700\u8981\u68c0\u6d4b\u7684\u7c7b\u522b\u6570 name\uff1a \u8f93\u51fatensor\u540d\u5b57\u7684list \u7ed3\u5408bbox\u5750\u6807\u89e3\u7801\u6a21\u5757\uff0cPostProcess_Unpack\u6709\u5982\u4e0b\u540e\u5904\u7406\u7f51\u7edc\u793a\u4f8b\uff1a 1.SSD\u6a21\u5f0f\u4e0b\uff1a\u5206\u79bbbbox\u5750\u6807 2.YOLO\u6a21\u5f0f\u4e0b\uff1a\u5206\u79bbbbox\u5750\u6807\u3001confidence\u3001scores\u3001max_score","title":"7.3.1. PostProcess_Unpack"},{"location":"module/User_Guide/Common/SigmaStar_Post_Processing_Module.html#732-tflite_detection_nms","text":"TFLite_Detection_NMS\u7b97\u5b50\u5c06NMS\u64cd\u4f5c\u7ec4\u5408\u6210\u4e3a\u4e00\u4e2a\u7b97\u5b50\uff0c\u4e0ePostProcess_Unpack\u7b97\u5b50\u914d\u5408\uff0c\u6700\u5927\u652f\u63017\u4e2a\u8f93\u5165\uff0c\u8f93\u51fa\u4e3a4\u4e2a\u62165\u4e2a\u3002 \u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a out1 = sgs_chalk . TFLite_Detection_NMS ( x1 , y1 , x2 , y2 , confidence , score , max_score = None , mode = 'YOLO' , max_detections = 100 , nms_score_threshold = 0.4 , nms_iou_threshold = 0.45 , num_classes = 20 , is_need_index = False ) \u6839\u636e\u7f51\u7edc\u7684\u4e0d\u540c\uff0c\u4fee\u6539\u6bcf\u884c\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u3002\u5982\u679c\u8be5\u53c2\u6570\u4e0d\u9700\u8981\uff0c\u5219\u5bf9\u5e94\u53c2\u6570\u586b-1\u3002 x1\uff1a \u5bf9\u5e94PostProcess_Unpack\u7b97\u5b50\u5206\u79bb\u51fa\u7684x1 tensor\u3002 y1\uff1a \u5bf9\u5e94PostProcess_Unpack\u7b97\u5b50\u5206\u79bb\u51fa\u7684y1 tensor\u3002 x2\uff1a \u5bf9\u5e94PostProcess_Unpack\u7b97\u5b50\u5206\u79bb\u51fa\u7684x2 tensor\u3002 y2\uff1a \u5bf9\u5e94PostProcess_Unpack\u7b97\u5b50\u5206\u79bb\u51fa\u7684y2 tensor\u3002 confidence\uff1a \u5bf9\u5e94PostProcess_Unpack\u7b97\u5b50\u5206\u79bb\u51fa\u7684 bbox \u7f6e\u4fe1\u5ea6\u3002 score\uff1a \u5bf9\u5e94PostProcess_Unpack\u7b97\u5b50\u5206\u79bb\u51fa\u7684 bbox \u5f97\u5206\u3002 max_score\uff1a \u5bf9\u5e94PostProcess_Unpack\u7b97\u5b50\u5206\u79bb\u51fa\u7684 score\u6700\u5927\u503c\uff0c\u53ea\u6709 YOLO \u6a21\u5f0f\u4e0b\u9700\u8981\u4f20\u5165\u3002 mode\uff1a \u8f93\u5165\u5b57\u7b26\u4e32\uff0c\u53ea\u652f\u6301 YOLO \u6216\u8005 SSD \u3002 max_detections\uff1a \u6700\u5927\u68c0\u6d4b\u6570\u3002 nms_score_threshold\uff1a nms score\u9608\u503c\u3002 nms_iou_threshold\uff1a nms iou\u9608\u503c\u3002 num_classes\uff1a \u68c0\u6d4b\u7c7b\u522b\u6570\u3002 is_need_index\uff1a \u662f\u5426\u8f93\u51faindex\uff0c\u9ed8\u8ba4\u4e3afalse\u3002 Please Note: TFLite_Detection_NMS\u7b97\u5b50SSD\u6a21\u5f0f\u6700\u5927\u652f\u630124576\u4e2abbox\u8f93\u5165\u3002 TFLite_Detection_NMS\u7b97\u5b50YOLO\u6a21\u5f0f\u5148\u6309\u7167confidence\u53d6\u6ee1\u8db3 nms_score_threshold \u7684\u524d4096\u4e2a\u6846\uff0c\u518d\u505aIOU\u7b5b\u9009\u3002 TFLite_Detection_NMS\u7b97\u5b50\u505a\u591a\u8f93\u51fa400\u4e2a\u68c0\u6d4b\u7ed3\u679c\u3002","title":"7.3.2. TFLite_Detection_NMS"},{"location":"module/User_Guide/Common/SigmaStar_Post_Processing_Module.html#74-anchor","text":"Caffe\u7f51\u7edc\u4e2d\u5982\u679cPriorBox\u8282\u70b9\u4e2d\u6570\u636e\u662f\u79bb\u7ebf\u751f\u6210\u7684\uff0c\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u6cd5\u83b7\u53d6\u3002 \u5177\u4f53\u7f51\u7edc\u8bf7\u53c2\u8003SGS_Models/caffe/caffe_ssd_mobilenet_v1\u3002 \u8f6c\u6362\u5e26PriorBox\u8282\u70b9\u7684backbone\u7f51\u7edc\uff0c\u4f7f\u7528Netron\u6253\u5f00\u7f51\u7edcprototxt\u6587\u4ef6\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u4fee\u6539\u5bf9\u5e94\u7684input_config.ini\u6587\u4ef6\u548cConvertTool\u8f6c\u6362\u547d\u4ee4\uff0c\u67093\u4e2a\u8f93\u51fa\uff0c\u751f\u6210backbone\u7f51\u7edc\u90e8\u5206\u3002 \u8f6c\u6362\u5b8c\u6210\u540e\uff0c\u6240\u6709PriorBox\u8282\u70b9\u751f\u6210\u4e3a\u4e00\u4e2a\u8282\u70b9\u3002\u4f7f\u7528Netron\u6253\u5f00\u751f\u6210\u7684backbone\u7f51\u7edc\uff0c\u5148\u70b9\u51fbmbox_priorbox\u8282\u70b9\uff0c\u518d\u70b9\u51fb\u7ea2\u6846\u4e2d\u7684\u4fdd\u5b58\u6309\u94ae\uff0c\u5373\u53ef\u5c06anchor\u7684\u6570\u636e\u4fdd\u5b58\u4e3a.npy\u6587\u4ef6\u3002 \u5728\u914d\u7f6ebbox\u5750\u6807\u89e3\u7801\u6a21\u5757\u65f6\uff0c\u4f7f\u7528numpy.load\u8bfb\u53d6.npy\u6587\u4ef6\uff0c\u914d\u7f6e\u597d\u5bf9\u5e94\u7684\u53d8\u91cf\u3002\u5982\u679c\u5df2\u6709anchor\u6570\u636e\uff0c\u53ef\u4ee5\u4e0d\u7528\u6b64\u65b9\u6cd5\uff0c\u76f4\u63a5\u4f7f\u7528anchor\u6570\u636e\u3002 \u540e\u5904\u7406python\u6587\u4ef6\u5728\u7f16\u5199\u65f6\uff0c\u589e\u52a0\u6a21\u578b\u914d\u7f6e\u7684\u8f93\u5165\u4e3a3\u4e2a\u8f93\u5165\uff0c\u589e\u52a0mbox_priorbox\u7684shape\uff0c\u5177\u4f53\u4ee3\u7801\u8be6\u89c1 SGS_IPU_SDK/Scripts/postprocess/sgs_chalk_postprocess_method/caffe_ssd_mobilenet_v1_postprocess.py model_config = { \"name\" : \"caffe_ssd_mobilenet_v1\" , \"input\" : [ \"mbox_loc\" , \"mbox_conf_softmax\" , \"mbox_priorbox\" ], \"input_shape\" : [[ 1 , 1917 , 4 ],[ 1 , 1917 , 21 ],[ 1917 , 4 ]], \"shape\" : [ 1 , 1917 ], \"out_shapes\" : [[ 1 , 10 , 4 ],[ 1 , 10 ],[ 1 , 10 ],[ 1 ]]} \u751f\u6210\u540e\u5904\u7406\u6a21\u578b\u540e\uff0c\u4f7f\u7528concat_net\u5de5\u5177\u8fde\u63a5\u4f1a\u81ea\u52a8\u6e05\u9664mbox_priorbox\u8282\u70b9\u3002","title":"7.4. \u83b7\u53d6\u79bb\u7ebfanchor\u6570\u636e"},{"location":"module/User_Guide/Common/SigmaStar_Post_Processing_Module.html#75","text":"\u4ee5\u4e0b\u793a\u4f8b\u4ee5caffe_yolo_v2\u6a21\u578b\u7684\u540e\u5904\u7406\u4e3a\u4f8b\uff0c\u5177\u4f53\u4ee3\u7801\u8be6\u89c1 SGS_IPU_SDK/Scripts/postprocess/sgs_chalk_postprocess_method/caffe_yolo_v2_postprocess.py","title":"7.5. \u4e3e\u4f8b\u4f7f\u7528"},{"location":"module/User_Guide/Common/SigmaStar_Post_Processing_Module.html#751","text":"\u9996\u5148\u914d\u7f6eget_postprocess()\u51fd\u6570\u4e2d\u7684model_config\u5b57\u5178\u53d8\u91cf\uff1a model_config = { \"name\" : \"caffe_yolo_v2\" , \"input\" : [ 'conv23' ], \"input_shape\" : [ 1 , 13 , 13 , 125 ], \"shape\" : [ 1 , 845 ], \"out_shapes\" : [[ 1 , 100 , 4 ],[ 1 , 100 ],[ 1 , 100 ],[ 1 ]]} \u5176\u6b21\u914d\u7f6econfig\u5b57\u5178\u53d8\u91cf\u7528\u4e8eboxdecoder\uff0c\u6839\u636ebbox\u5750\u6807\u89e3\u7801\u7684\u5b9e\u9645\u8ba1\u7b97\u65b9\u6cd5\u914d\u7f6econfig\u7684\u5404\u4e2a\u53c2\u6570\u3002 \u914d\u7f6e\u53c2\u6570\uff1a \u9700\u8981\u7528\u6237\u914d\u7f6e\u7684\u53c2\u6570\u6709box_num,side_x,side_y,num_classes,biases box_num = 5 side_x = [ 13 ] side_y = [ 13 ] num_classes = 20 num_anchors = 0 for i in range ( len ( side_x )): num_anchors += box_num * side_x [ i ] * side_y [ i ] ppw = np . ones ( num_anchors ) pph = np . ones ( num_anchors ) for k in range ( len ( side_x )): for i in range ( side_y [ k ] * side_x [ k ]): tempX = i % side_y [ k ] tempY = math . floor ( i / side_y [ k ]) for n in range ( box_num ): px . append ( tempX ) py . append ( tempY ) pw = np . ones ( num_anchors ) ph = np . ones ( num_anchors ) sx = np . ones ( num_anchors ) * ( 1.0 / side_y [ 0 ]) sy = np . ones ( num_anchors ) * ( 1.0 / side_x [ 0 ]) biases = [[ 1.3221 , 1.73145 ],[ 3.19275 , 4.00944 ],[ 5.05587 , 8.09892 ],[ 9.47112 , 4.84053 ],[ 11.2364 , 10.0071 ]] sw = [ x [ 0 ] / ( 2 * side_x [ 0 ]) for x in biases ] * ( side_x [ 0 ] * side_y [ 0 ]) sh = [ x [ 1 ] / ( 2 * side_y [ 0 ]) for x in biases ] * ( side_x [ 0 ] * side_y [ 0 ]) \u914d\u7f6econfig\u5b57\u5178\u53d8\u91cf\uff1a config = { \"shape\" : [ 1 , num_anchors ], \"tx_func\" : ( tflite . BuiltinOperator . BuiltinOperator () . LOGISTIC , None ), #None or 'x_scale' \"ty_func\" : ( tflite . BuiltinOperator . BuiltinOperator () . LOGISTIC , None ), #None or 'y_scale' \"tw_func\" : ( tflite . BuiltinOperator . BuiltinOperator () . RESHAPE , None ), #None or 'w_scale' \"th_func\" : ( tflite . BuiltinOperator . BuiltinOperator () . RESHAPE , None ), #None or 'h_scale' \"x_scale\" : 0.1 , \"y_scale\" : 0.1 , \"w_scale\" : 1 , \"h_scale\" : 1 , \"anchor_selector\" : \"constant\" , \"pw\" : pw , \"ph\" : ph , \"pw_func\" : ( None , None ), \"ph_func\" : ( None , None ), \"ppw\" : ppw , \"px\" : px , \"pph\" : pph , \"py\" : py , \"sx\" : sx , \"sy\" : sy , \"sw\" : sw , \"sh\" : sh }","title":"7.5.1. \u53c2\u6570\u914d\u7f6e"},{"location":"module/User_Guide/Common/SigmaStar_Post_Processing_Module.html#752-tensor","text":"constant1 = sgs_chalk . Tensor ( data = np . array ([ 1 ]) . astype ( np . float32 ), name = prefix + \"mul_constant\" ) \u8c03\u7528sgs_chalk\u7684\u521b\u5efaTensor API,\u4f20\u5165data\u548cname\u5373\u53ef","title":"7.5.2. \u521b\u5efa\u5e38\u91cfTensor"},{"location":"module/User_Guide/Common/SigmaStar_Post_Processing_Module.html#753","text":"\u521b\u5efa\u4e00\u4e2a\u53cc\u53e3Mul\u7b97\u5b50\uff1a SGS_score1 = sgs_chalk . Mul ( confidence_tensor , SGS_score0 , name = \"SGS_score1\" ) \u8c03\u7528\u521b\u5efasgs_chalk\u7684\u521b\u5efaMul\u7b97\u5b50API\uff0c\u4f20\u5165\u8f93\u5165tensor\uff0c\u8f93\u51fatensor\u7684name\u5373\u53ef \u521b\u5efa\u4e00\u4e2aReshape\u7b97\u5b50\uff0c\u9700\u8981\u521b\u5efa\u5e38\u91cfTensor\uff1a reshape_tensor = sgs_chalk . Reshape ( in0 ,[ 1 , 845 , 25 ], name = \"reshape_tensor\" ) \u8c03\u7528sgs_chalk\u7684\u521b\u5efaReshape\u7b97\u5b50API\uff0c\u4f20\u5165\u8f93\u5165tensor,shape,\u8f93\u51fatensor\u7684name\u5373\u53ef","title":"7.5.3. \u521b\u5efa\u4e00\u4e2a\u7b97\u5b50"},{"location":"module/User_Guide/Common/SigmaStar_Post_Processing_Module.html#754","text":"\u89c17.4\u8282 \u5e76\u4e14\u6700\u7ec8\u8981\u8fd4\u56de\u521b\u5efa\u597d\u7684\u540e\u5904\u7406\u6a21\u578b\u7684\u6587\u4ef6\u540d\u7528\u4e8e\u5728ConvertTool\u4e2d\u751f\u6210\u6700\u7ec8\u7684float\u6a21\u578b\u3002","title":"7.5.4. \u521b\u5efa\u5ba2\u5236\u5316\u7b97\u5b50"},{"location":"module/User_Guide/Develop/Adding_A_New_Layer.html","text":"8.1. \u6982\u8ff0 \u00b6 \u672c\u8282\u4ec5\u9002\u7528\u4e8ecaffe \u6a21\u578b\u3002\u5bf9\u4e8esigmastar \u8fd8\u672a\u5b9e\u73b0\u7684layer\uff0c\u7528sigmastar \u63d0\u4f9b\u5e95\u5c42\u7b97\u5b50\u6765\u7ec4\u5408\u5b9e\u73b0\u3002\u5e95\u5c42\u7b97\u5b50\u4e0e tensorflow \u7684\u7b97\u5b50\u7c7b\u4f3c\uff0c\u652f\u6301\u7684\u7b97\u5b50\u53c2\u800310.2 \u8282[TensofFlow \u652f\u6301\u7b97\u5b50] \u652f\u6301\u7b97\u5b50\u8f6c\u6362\u6d41\u7a0b\u5982\u4e0b\u56fe CaffeConvert Tool (\u4ee3\u7801\u4f4d\u7f6e\uff1a SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py ) caffe \u6a21\u578b\u8f6c\u6362\u5de5\u5177\u501f\u9274\u4e86\u5c0f\u7c73\u5f00\u6e90\u6846\u67b6mace \u7684\u8bbe\u8ba1\uff0c\u8981\u6dfb\u52a0\u65b0\u7684layer\uff0c\u8bf7\u5148\u5230 Xiaomi MACE \u4e0b\u8f7d\u539f\u59cb\u4ee3\u7801\uff0c\u6309\u7167mace \u5b98\u65b9\u6587\u6863\u914d\u7f6e \u597d\u7f16\u8bd1\u73af\u5883\uff0c\u6216\u8005\u76f4\u63a5\u4f7f\u7528\u6211\u4eec\u63d0\u4f9b\u7684docker \u73af\u5883\u3002 \u4e0b\u9762\u4ee5 reorg layer \u4e3a\u4f8b\u5b50\uff0c\u8bb2\u89e3\u5982\u4f55\u6dfb\u52a0\u65b0\u7684layer\uff0c\u4e3b\u8981\u4fee\u6539\u4ee5\u4e0b\u51e0\u4e2a\u6587\u4ef6 8.2. Caffe proto \u6587\u4ef6\u4fee\u6539 \u00b6 8.2.1 \u4fee\u6539caffe proto \u00b6 Mace \u539f\u59cb\u4ee3\u7801\u4e0b\u8f7d\u540e\uff0c\u7528 SGS_IPU_SDK/Scripts/CaffeConvertTool/third_party/caffe/caffe.proto \u66ff\u6362\u6389mace \u5de5\u7a0b \u8def\u5f84\u4e0bmace/third_party/caffe \u4e0bcaffe.proto \u6587\u4ef6\u3002\u56e0\u4e3asigmastar \u5728mace \u57fa\u7840\u4e0a\u505a\u4e86\u4e8c\u6b21\u5f00\u53d1\uff0c\u6240\u4ee5sigmstar \u652f\u6301 \u7684caffe layer \u5df2\u7ecf\u8fdc\u8fdc\u591a\u4e8e\u539f\u751f\u7684mace \u652f\u6301\u6570\u91cf\u3002\u8981\u6dfb\u52a0\u65b0\u7684layer\uff0c\u8bf7\u4ee5sigmastar \u7684caffe proto \u6587\u4ef6\u4f5c\u4e3a\u57fa\u7840 \u6dfb\u52a0\u3002 optional ReorgParameter reorg_param = 157 ; } message ReorgParameter { optional uint32 stride = 1 ; optional bool reverse = 2 [ default = false ] ; } 8.2.2 \u7f16\u8bd1proto \u6587\u4ef6 \u00b6 \u5728mace \u5f00\u53d1\u73af\u5883\u4e2d cd pathToMace/ bazel build third_party/caffe/caffe_py \u5728bazel-genfiles \u4e0b\u751f\u6210caffe_pb2.py \u5c06\u4e0a\u9762\u4fee\u6539\u540e\u7684caffe.proto \u548c\u751f\u6210\u7684caffe_pb2.py \u66ff\u6362 SGS_IPU_SDK/Scripts/CaffeConvertTool/third_party/caffe \u540c \u540d\u6587\u4ef6\uff0c\u7136\u540e\u6309\u7167\u5982\u4e0b\u987a\u5e8f\u4fee\u6539\u4ee3\u7801 8.3 \u4fee\u6539caffe_converter.py \u00b6 \u6587\u4ef6\u8def\u5f84 SGS_IPU_SDK/Scripts/CaffeConvertTool/mace/python/tools/converter_tool/caffe_converter.py \u8be5\u6587\u4ef6\u7684\u4f5c\u7528\u662f\u628acaffe\u6a21\u578b\u8f6c\u6362\u4e3amace\u6a21\u578b\uff0c\u5e76\u4fdd\u5b58\u8be5layer\u7684\u53c2\u6570 Reorg ':self.convert_Reorg, ... ... def convert_Reorg ( self , caffe_op ): op = self . convert_general_op ( caffe_op ) op . type = \"Reorg\" param = caffe_op . layer . reorg_param stride_arg = op . arg . add () stride_arg . name = \"stride\" stride_arg . i = 1 #default is true if param . HasField ( 'stride' ): stride_arg . i = int ( param . stride ) 8.4. \u4fee\u6539shape_inference.py \u00b6 \u6587\u4ef6\u8def\u5f84 SGS_IPU_SDK/Scripts/CaffeConvertTool/mace/python/tools/converter_tool/shape_inference.py \u8be5\u6587\u4ef6\u7684\u4f5c\u7528\u662f\u8ba1\u7b97layer\u7684output shape Reorg ': self.infer_shape_Reorg, ... ... def infer_shape_Reorg ( self , op ): #only support stride is 2 output_shape = self . _output_shape_cache [ op . input [ 0 ]] input_shape = list ( self . _output_shape_cache [ op . input [ 0 ]]) input_n = input_shape [ 0 ] input_c = input_shape [ 1 ] input_h = input_shape [ 2 ] input_w = input_shape [ 3 ] output_shape = [ input_n , int ( input_c * 4 ), int ( input_h / 2 ), int ( input_w / 2 )] self . add_output_shape ( op , [ output_shape ]) 8.5. \u4fee\u6539SGSModel_transform.py \u00b6 \u5982\u4e0b\u56fe\u6240\u793a\uff0c\u6211\u4eec\u53d1\u73b0reorg\u5728NCHW\u7684\u6392\u5217\u987a\u5e8f\u4e0b\uff0c\u5b83\u5b9e\u9645\u4e0a\u662f\u5bf9\u6570\u636e\u505a\u4e86\u4e00\u4e2a\u91cd\u6392\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u6700\u540e\u62c6\u89e3\u51fa\u6765\u7684\u7b97\u5b50\u7ec4\u5408\u662f \u6309\u7167\u7b97\u5b50\u7ec4\u5408\u987a\u5e8f\uff0c\u7f16\u5199\u4ee3\u7801 \u6587\u4ef6\u8def\u5f84 SGS_IPU_SDK/Scripts/CaffeConvertTool/mace/python/tools/SGSModel_transform.py \u8be5\u6587\u4ef6\u4f5c\u7528\u662f\u589e\u52a0\u8be5layer \u7684\u62c6\u89e3\u51fd\u6570\u3002\u5373\u7528Sigmastar \u63d0\u4f9b\u7684\u57fa\u672c\u7b97\u5b50\u5b9e\u73b0\u8be5layer\u3002 Reorg ':self.split_Reorg, ... ... def split_Reorg ( self , op ): #only support strid is 2 [ n , c , h , w ] = op . output_shape [ 0 ] . dims [:] c = int ( c / 4 ) op_name = op . name xi = op . input [ 0 ] ... ... \u81f3\u6b64\uff0c\u65b0\u7684layer \u652f\u6301\u6dfb\u52a0\u5b8c\u6210 8.6. Layer\u62c6\u89e3\u6ce8\u610f\u4e8b\u9879\u4e0e\u6280\u5de7 \u00b6 8.6.1. Layer\u62c6\u89e3\u6ce8\u610f\u4e8b\u9879\u4e0e\u6280\u5de7 \u6570\u636e\u7ef4\u5ea6\u7684\u95ee\u9898 \u00b6 \u5728caffe\u7f51\u7edc\u4e2d\uff0c\u4f7f\u7528NCHW\u6570\u636e\u6392\u5217\u3002\u800csigmastar\u4f7f\u7528NHWC\u7684\u987a\u5e8f\u8fdb\u884c\u6570\u636e\u8ba1\u7b97\uff08\u4e0etensorflow\u7c7b\u4f3c\uff09\u3002\u6240\u4ee5\u5728\u6a21\u578b\u8f6c\u6362\u6210sim\u6a21\u578b\u7684\u65f6\u5019\uff0c\u4f1a\u5bf9\u6240\u67094\u7ef4\u5ea6\u7684shape\u548c\u6570\u636e\u505a\u4e00\u6b21\u8f6c\u6362\u3002\u5373NCHW\u8f6c\u5230NHWC \u53c2\u8003\u4ee3\u7801\uff1a SGS_IPU_SDK/Scripts/CaffeConvertTool/mace/python/tools/SGSModel_converter.py \u5bf9\u4e8etensor data\u7684\u8f6c\u6362 def _creatBuffer ( self ): ... ... if len ( ori_shape ) == 4 : #transpose data to NHWC six . print_ ( \"Reshape \" , tensor . name , \"to NHWC\" ) data = np . array ( ori_data ) data = data . reshape ( ori_shape ) data = data . transpose ( 0 , 2 , 3 , 1 ) \u5bf9\u4e8eshape\u7684\u8f6c\u6362 def _creatTensor ( self ): ... ... if len ( shape ) == 4 and data_format == mace_pb2 . DT_NCHW : Transformer . transpose_shape ( shape , [ 0 , 2 , 3 , 1 ]) tflite . Tensor . TensorStartShapeVector ( self . _builder , len ( shape )) \u56e0\u4e3ashape\u5728\u521b\u5efasim\u6a21\u578b\u7684\u65f6\u5019\u4f1a\u88ab\u5f3a\u884c\u6539\u53d8\uff0c\u6240\u4ee5\u62c6\u89e3\u7684\u65f6\u5019\u8981\u6ce8\u610f \uff081\uff09\u6709axis\u53c2\u6570\u7684\uff0c\u8981\u6ce8\u610f\u987a\u5e8f\u4ea4\u6362 \u6bd4\u5982`concat layer\uff0ccaffe model\u91cc\u9762\uff0c\u5b83\u8981\u5bf9C\u7eac\u5ea6\u505aconcat\uff0c\u5176axis\u4e3a1\u3002\u7f51\u7edc\u8f6c\u6362\u540e\uff0cC\u4e3a\u6362\u5230\u4e86\u6700\u4f4e\u7ef4\uff0c\u6240 \u4ee5\u8981\u4fee\u6539axis\u4e3a3\uff0c\u4ee3\u7801\u5982\u4e0b\u3002\u76f8\u4f3c\u7684\u8fd8\u6709split\u3001PRelu\u7b49 def split_Concat ( self , op ): ... ... if len ( output_shape [ 0 ] . dims ) == 4 : #nchw -> nhwc if arg [ i ] . i == 1 : arg [ i ] . i = 3 else if arg [ i ] . i == 2 : arg [ i ] . i = 1 else if arg [ i ] . i == 3 : arg [ i ] . i = 2 \uff082\uff09\u6307\u5b9a\u7b97\u5b50output_shape\u7684\u65f6\u5019\uff0c\u7279\u522b\u662f4\u7ef4\u7684\u8f93\u51fa\uff0c\u8981\u6ce8\u610f\u987a\u5e8f\u53d8\u5316\u5e26\u6765\u7684\u5f71\u54cd\u3002\u6bd4\u5982\u5e0c\u671btensor\u7684\u8f93\u51fa\u662f[A,B,C,D]\uff0c\u90a3\u4e48\u4ee3\u7801\u4e2d\u6211\u4eec\u5199\u7684\u6570\u503c\u4e3a[A,D,B,C]\u3002\u56e0\u4e3a[A,D,B,C]\u7ecf\u8fc7\u4e0a\u9762\u4ee3\u7801\u7684\u8f6c\u6362\uff0c\u5c31\u5f97\u5230\u4e86[A,B,C,D]\u8fd9\u4e2a\u987a\u5e8f \uff083\uff09\u5728NCHW \u6570\u636e\u6392\u5217\u4e0b\u6709\u5f88\u5f3a\u89c4\u5f8b\u7684layer\uff0c\u53ef\u4ee5\u5148\u8f6c\u5230NCHW \u4e0b\u64cd\u4f5c\u3002\u6bd4\u5982\u4e0a\u9762\u63d0\u5230\u7684reorg layer\u3002 \uff084\uff09\u7528sdk \u91cc\u9762\u63d0\u4f9b\u7684Netron \u5de5\u5177\u6253\u5f00\u8f6c\u6362\u540e\u7684sim \u6a21\u578b\uff0c\u65b9\u4fbf\u67e5\u770b\u5404\u79cd\u5c5e\u6027\u548cshape\u3002 8.6.2. \u5efa\u8bae\u62c6\u89e3\u6d41\u7a0b \u00b6 \u7efc\u4e0a\u6240\u8ff0\uff0c\u5728\u62c6\u89e3\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u5efa\u8bae\u6309\u7167\u5982\u4e0b\u6d41\u7a0b\u8fdb\u884c 8.6.3. \u6570\u636e\u5bf9\u6bd4\u53ca\u9a8c\u8bc1 \u00b6 \u524d\u671f\u53ef\u4ee5\u7528python \u521b\u5efatensorflow \u7b97\u5b50\u7684\u65b9\u6cd5\uff0c\u8fdb\u884c\u9a8c\u8bc1\u3002 \u5f53\u9a8c\u8bc1\u5b8c\u6210\uff0c\u518d\u4fee\u6539SGS_IPU_SDK \u7684\u76f8\u5173\u4ee3\u7801\uff0c\u53c2\u8003\u7b2c6 \u7ae0[DUMPDEBUG TOOL]\u7684\u65b9\u6cd5\uff0cdump \u51fa\u6700\u540e\u7ed3\u679c\u4e0e golden \u6bd4\u5bf9\u3002","title":"Adding A New Layer"},{"location":"module/User_Guide/Develop/Adding_A_New_Layer.html#81","text":"\u672c\u8282\u4ec5\u9002\u7528\u4e8ecaffe \u6a21\u578b\u3002\u5bf9\u4e8esigmastar \u8fd8\u672a\u5b9e\u73b0\u7684layer\uff0c\u7528sigmastar \u63d0\u4f9b\u5e95\u5c42\u7b97\u5b50\u6765\u7ec4\u5408\u5b9e\u73b0\u3002\u5e95\u5c42\u7b97\u5b50\u4e0e tensorflow \u7684\u7b97\u5b50\u7c7b\u4f3c\uff0c\u652f\u6301\u7684\u7b97\u5b50\u53c2\u800310.2 \u8282[TensofFlow \u652f\u6301\u7b97\u5b50] \u652f\u6301\u7b97\u5b50\u8f6c\u6362\u6d41\u7a0b\u5982\u4e0b\u56fe CaffeConvert Tool (\u4ee3\u7801\u4f4d\u7f6e\uff1a SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py ) caffe \u6a21\u578b\u8f6c\u6362\u5de5\u5177\u501f\u9274\u4e86\u5c0f\u7c73\u5f00\u6e90\u6846\u67b6mace \u7684\u8bbe\u8ba1\uff0c\u8981\u6dfb\u52a0\u65b0\u7684layer\uff0c\u8bf7\u5148\u5230 Xiaomi MACE \u4e0b\u8f7d\u539f\u59cb\u4ee3\u7801\uff0c\u6309\u7167mace \u5b98\u65b9\u6587\u6863\u914d\u7f6e \u597d\u7f16\u8bd1\u73af\u5883\uff0c\u6216\u8005\u76f4\u63a5\u4f7f\u7528\u6211\u4eec\u63d0\u4f9b\u7684docker \u73af\u5883\u3002 \u4e0b\u9762\u4ee5 reorg layer \u4e3a\u4f8b\u5b50\uff0c\u8bb2\u89e3\u5982\u4f55\u6dfb\u52a0\u65b0\u7684layer\uff0c\u4e3b\u8981\u4fee\u6539\u4ee5\u4e0b\u51e0\u4e2a\u6587\u4ef6","title":"8.1. \u6982\u8ff0"},{"location":"module/User_Guide/Develop/Adding_A_New_Layer.html#82-caffe-proto","text":"","title":"8.2. Caffe proto \u6587\u4ef6\u4fee\u6539"},{"location":"module/User_Guide/Develop/Adding_A_New_Layer.html#821-caffe-proto","text":"Mace \u539f\u59cb\u4ee3\u7801\u4e0b\u8f7d\u540e\uff0c\u7528 SGS_IPU_SDK/Scripts/CaffeConvertTool/third_party/caffe/caffe.proto \u66ff\u6362\u6389mace \u5de5\u7a0b \u8def\u5f84\u4e0bmace/third_party/caffe \u4e0bcaffe.proto \u6587\u4ef6\u3002\u56e0\u4e3asigmastar \u5728mace \u57fa\u7840\u4e0a\u505a\u4e86\u4e8c\u6b21\u5f00\u53d1\uff0c\u6240\u4ee5sigmstar \u652f\u6301 \u7684caffe layer \u5df2\u7ecf\u8fdc\u8fdc\u591a\u4e8e\u539f\u751f\u7684mace \u652f\u6301\u6570\u91cf\u3002\u8981\u6dfb\u52a0\u65b0\u7684layer\uff0c\u8bf7\u4ee5sigmastar \u7684caffe proto \u6587\u4ef6\u4f5c\u4e3a\u57fa\u7840 \u6dfb\u52a0\u3002 optional ReorgParameter reorg_param = 157 ; } message ReorgParameter { optional uint32 stride = 1 ; optional bool reverse = 2 [ default = false ] ; }","title":"8.2.1 \u4fee\u6539caffe proto"},{"location":"module/User_Guide/Develop/Adding_A_New_Layer.html#822-proto","text":"\u5728mace \u5f00\u53d1\u73af\u5883\u4e2d cd pathToMace/ bazel build third_party/caffe/caffe_py \u5728bazel-genfiles \u4e0b\u751f\u6210caffe_pb2.py \u5c06\u4e0a\u9762\u4fee\u6539\u540e\u7684caffe.proto \u548c\u751f\u6210\u7684caffe_pb2.py \u66ff\u6362 SGS_IPU_SDK/Scripts/CaffeConvertTool/third_party/caffe \u540c \u540d\u6587\u4ef6\uff0c\u7136\u540e\u6309\u7167\u5982\u4e0b\u987a\u5e8f\u4fee\u6539\u4ee3\u7801","title":"8.2.2 \u7f16\u8bd1proto \u6587\u4ef6"},{"location":"module/User_Guide/Develop/Adding_A_New_Layer.html#83-caffe_converterpy","text":"\u6587\u4ef6\u8def\u5f84 SGS_IPU_SDK/Scripts/CaffeConvertTool/mace/python/tools/converter_tool/caffe_converter.py \u8be5\u6587\u4ef6\u7684\u4f5c\u7528\u662f\u628acaffe\u6a21\u578b\u8f6c\u6362\u4e3amace\u6a21\u578b\uff0c\u5e76\u4fdd\u5b58\u8be5layer\u7684\u53c2\u6570 Reorg ':self.convert_Reorg, ... ... def convert_Reorg ( self , caffe_op ): op = self . convert_general_op ( caffe_op ) op . type = \"Reorg\" param = caffe_op . layer . reorg_param stride_arg = op . arg . add () stride_arg . name = \"stride\" stride_arg . i = 1 #default is true if param . HasField ( 'stride' ): stride_arg . i = int ( param . stride )","title":"8.3 \u4fee\u6539caffe_converter.py"},{"location":"module/User_Guide/Develop/Adding_A_New_Layer.html#84-shape_inferencepy","text":"\u6587\u4ef6\u8def\u5f84 SGS_IPU_SDK/Scripts/CaffeConvertTool/mace/python/tools/converter_tool/shape_inference.py \u8be5\u6587\u4ef6\u7684\u4f5c\u7528\u662f\u8ba1\u7b97layer\u7684output shape Reorg ': self.infer_shape_Reorg, ... ... def infer_shape_Reorg ( self , op ): #only support stride is 2 output_shape = self . _output_shape_cache [ op . input [ 0 ]] input_shape = list ( self . _output_shape_cache [ op . input [ 0 ]]) input_n = input_shape [ 0 ] input_c = input_shape [ 1 ] input_h = input_shape [ 2 ] input_w = input_shape [ 3 ] output_shape = [ input_n , int ( input_c * 4 ), int ( input_h / 2 ), int ( input_w / 2 )] self . add_output_shape ( op , [ output_shape ])","title":"8.4. \u4fee\u6539shape_inference.py"},{"location":"module/User_Guide/Develop/Adding_A_New_Layer.html#85-sgsmodel_transformpy","text":"\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u6211\u4eec\u53d1\u73b0reorg\u5728NCHW\u7684\u6392\u5217\u987a\u5e8f\u4e0b\uff0c\u5b83\u5b9e\u9645\u4e0a\u662f\u5bf9\u6570\u636e\u505a\u4e86\u4e00\u4e2a\u91cd\u6392\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u6700\u540e\u62c6\u89e3\u51fa\u6765\u7684\u7b97\u5b50\u7ec4\u5408\u662f \u6309\u7167\u7b97\u5b50\u7ec4\u5408\u987a\u5e8f\uff0c\u7f16\u5199\u4ee3\u7801 \u6587\u4ef6\u8def\u5f84 SGS_IPU_SDK/Scripts/CaffeConvertTool/mace/python/tools/SGSModel_transform.py \u8be5\u6587\u4ef6\u4f5c\u7528\u662f\u589e\u52a0\u8be5layer \u7684\u62c6\u89e3\u51fd\u6570\u3002\u5373\u7528Sigmastar \u63d0\u4f9b\u7684\u57fa\u672c\u7b97\u5b50\u5b9e\u73b0\u8be5layer\u3002 Reorg ':self.split_Reorg, ... ... def split_Reorg ( self , op ): #only support strid is 2 [ n , c , h , w ] = op . output_shape [ 0 ] . dims [:] c = int ( c / 4 ) op_name = op . name xi = op . input [ 0 ] ... ... \u81f3\u6b64\uff0c\u65b0\u7684layer \u652f\u6301\u6dfb\u52a0\u5b8c\u6210","title":"8.5. \u4fee\u6539SGSModel_transform.py"},{"location":"module/User_Guide/Develop/Adding_A_New_Layer.html#86-layer","text":"","title":"8.6. Layer\u62c6\u89e3\u6ce8\u610f\u4e8b\u9879\u4e0e\u6280\u5de7"},{"location":"module/User_Guide/Develop/Adding_A_New_Layer.html#861-layer","text":"\u5728caffe\u7f51\u7edc\u4e2d\uff0c\u4f7f\u7528NCHW\u6570\u636e\u6392\u5217\u3002\u800csigmastar\u4f7f\u7528NHWC\u7684\u987a\u5e8f\u8fdb\u884c\u6570\u636e\u8ba1\u7b97\uff08\u4e0etensorflow\u7c7b\u4f3c\uff09\u3002\u6240\u4ee5\u5728\u6a21\u578b\u8f6c\u6362\u6210sim\u6a21\u578b\u7684\u65f6\u5019\uff0c\u4f1a\u5bf9\u6240\u67094\u7ef4\u5ea6\u7684shape\u548c\u6570\u636e\u505a\u4e00\u6b21\u8f6c\u6362\u3002\u5373NCHW\u8f6c\u5230NHWC \u53c2\u8003\u4ee3\u7801\uff1a SGS_IPU_SDK/Scripts/CaffeConvertTool/mace/python/tools/SGSModel_converter.py \u5bf9\u4e8etensor data\u7684\u8f6c\u6362 def _creatBuffer ( self ): ... ... if len ( ori_shape ) == 4 : #transpose data to NHWC six . print_ ( \"Reshape \" , tensor . name , \"to NHWC\" ) data = np . array ( ori_data ) data = data . reshape ( ori_shape ) data = data . transpose ( 0 , 2 , 3 , 1 ) \u5bf9\u4e8eshape\u7684\u8f6c\u6362 def _creatTensor ( self ): ... ... if len ( shape ) == 4 and data_format == mace_pb2 . DT_NCHW : Transformer . transpose_shape ( shape , [ 0 , 2 , 3 , 1 ]) tflite . Tensor . TensorStartShapeVector ( self . _builder , len ( shape )) \u56e0\u4e3ashape\u5728\u521b\u5efasim\u6a21\u578b\u7684\u65f6\u5019\u4f1a\u88ab\u5f3a\u884c\u6539\u53d8\uff0c\u6240\u4ee5\u62c6\u89e3\u7684\u65f6\u5019\u8981\u6ce8\u610f \uff081\uff09\u6709axis\u53c2\u6570\u7684\uff0c\u8981\u6ce8\u610f\u987a\u5e8f\u4ea4\u6362 \u6bd4\u5982`concat layer\uff0ccaffe model\u91cc\u9762\uff0c\u5b83\u8981\u5bf9C\u7eac\u5ea6\u505aconcat\uff0c\u5176axis\u4e3a1\u3002\u7f51\u7edc\u8f6c\u6362\u540e\uff0cC\u4e3a\u6362\u5230\u4e86\u6700\u4f4e\u7ef4\uff0c\u6240 \u4ee5\u8981\u4fee\u6539axis\u4e3a3\uff0c\u4ee3\u7801\u5982\u4e0b\u3002\u76f8\u4f3c\u7684\u8fd8\u6709split\u3001PRelu\u7b49 def split_Concat ( self , op ): ... ... if len ( output_shape [ 0 ] . dims ) == 4 : #nchw -> nhwc if arg [ i ] . i == 1 : arg [ i ] . i = 3 else if arg [ i ] . i == 2 : arg [ i ] . i = 1 else if arg [ i ] . i == 3 : arg [ i ] . i = 2 \uff082\uff09\u6307\u5b9a\u7b97\u5b50output_shape\u7684\u65f6\u5019\uff0c\u7279\u522b\u662f4\u7ef4\u7684\u8f93\u51fa\uff0c\u8981\u6ce8\u610f\u987a\u5e8f\u53d8\u5316\u5e26\u6765\u7684\u5f71\u54cd\u3002\u6bd4\u5982\u5e0c\u671btensor\u7684\u8f93\u51fa\u662f[A,B,C,D]\uff0c\u90a3\u4e48\u4ee3\u7801\u4e2d\u6211\u4eec\u5199\u7684\u6570\u503c\u4e3a[A,D,B,C]\u3002\u56e0\u4e3a[A,D,B,C]\u7ecf\u8fc7\u4e0a\u9762\u4ee3\u7801\u7684\u8f6c\u6362\uff0c\u5c31\u5f97\u5230\u4e86[A,B,C,D]\u8fd9\u4e2a\u987a\u5e8f \uff083\uff09\u5728NCHW \u6570\u636e\u6392\u5217\u4e0b\u6709\u5f88\u5f3a\u89c4\u5f8b\u7684layer\uff0c\u53ef\u4ee5\u5148\u8f6c\u5230NCHW \u4e0b\u64cd\u4f5c\u3002\u6bd4\u5982\u4e0a\u9762\u63d0\u5230\u7684reorg layer\u3002 \uff084\uff09\u7528sdk \u91cc\u9762\u63d0\u4f9b\u7684Netron \u5de5\u5177\u6253\u5f00\u8f6c\u6362\u540e\u7684sim \u6a21\u578b\uff0c\u65b9\u4fbf\u67e5\u770b\u5404\u79cd\u5c5e\u6027\u548cshape\u3002","title":"8.6.1. Layer\u62c6\u89e3\u6ce8\u610f\u4e8b\u9879\u4e0e\u6280\u5de7 \u6570\u636e\u7ef4\u5ea6\u7684\u95ee\u9898"},{"location":"module/User_Guide/Develop/Adding_A_New_Layer.html#862","text":"\u7efc\u4e0a\u6240\u8ff0\uff0c\u5728\u62c6\u89e3\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u5efa\u8bae\u6309\u7167\u5982\u4e0b\u6d41\u7a0b\u8fdb\u884c","title":"8.6.2. \u5efa\u8bae\u62c6\u89e3\u6d41\u7a0b"},{"location":"module/User_Guide/Develop/Adding_A_New_Layer.html#863","text":"\u524d\u671f\u53ef\u4ee5\u7528python \u521b\u5efatensorflow \u7b97\u5b50\u7684\u65b9\u6cd5\uff0c\u8fdb\u884c\u9a8c\u8bc1\u3002 \u5f53\u9a8c\u8bc1\u5b8c\u6210\uff0c\u518d\u4fee\u6539SGS_IPU_SDK \u7684\u76f8\u5173\u4ee3\u7801\uff0c\u53c2\u8003\u7b2c6 \u7ae0[DUMPDEBUG TOOL]\u7684\u65b9\u6cd5\uff0cdump \u51fa\u6700\u540e\u7ed3\u679c\u4e0e golden \u6bd4\u5bf9\u3002","title":"8.6.3. \u6570\u636e\u5bf9\u6bd4\u53ca\u9a8c\u8bc1"},{"location":"module/User_Guide/Develop/Calibrate.html","text":"3.1. \u4f7f\u7528\u65b9\u6cd5 \u00b6 Calibrator\u5de5\u5177\u7684\u4f4d\u7f6e\u5728 ~/SGS_IPU_SDK/SRC/Tool/Scripts/calibrator/calibrator.py \u3002 \u8be5\u5de5\u5177\u662f\u5c06SigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u4e3aSigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u3002 \u5728SGS_IPU_SDK \u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK/Project make distclean ;source build/{IPU_Version}/cfg_cmodel_float.sh ;make -j32 (IPU_Version \u53ef\u9009\u62e9IPU100,IPU200M,IPU260) \u8fdb\u5165\u5230\u8be5\u5de5\u5177\u76ee\u5f55\uff0c\u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ~/SGS_IPU_SDK/SRC/Tool/Scripts/calibrator/calibrator.py \\ -i ~/SGS_IPU_SDK/SGS_Models/resource/detection/coco2017_calibration_set32 \\ -m ~/tensorflow_ssd/ssd_mobilenet_v1_float.sim -c Detection \\ -n ssd_mobilenet_v1 --input_config ~/SGS_IPU_SDK/SGS_Models/tensorflow/ssd_mobilenet_v1/input_config.ini \\ --num_process 20 -p Statistics python3 ~/SGS_IPU_SDK/SRC/Tool/Scripts/calibrator/calibrator.py \\ -i ~/SGS_IPU_SDK/SGS_Models/resource/detection/coco2017_calibration_set32 \\ -m ~/tensorflow_ssd/ssd_mobilenet_v1_cmodel_float.sim -c Detection \\ -n ssd_mobilenet_v1 --input_config ~/SGS_IPU_SDK/SGS_Models/tensorflow/ssd_mobilenet_v1/input_config.ini \\ --num_process 20 -p Fixed \u6216\u8005\u53ef\u4ee5\u4f7f\u7528\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\uff1a python3 ~/SGS_IPU_SDK/SRC/Tool/Scripts/calibrator/calibrator.py \\ -i ~/SGS_IPU_SDK/SGS_Models/resource/detection/file.list \\ -m ~/SGS_IPU_SDK/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1_float.sim \\ -c Detection \\ -n ssd_mobilenet_v1 \\ --input_config ~/SGS_IPU_SDK/SGS_Models/tensorflow/ssd_mobilenet_v1/input_config.ini \\ --num_process 20 -p Statistics python3 ~/SGS_IPU_SDK/SRC/Tool/Scripts/calibrator/calibrator.py \\ -i ~/SGS_IPU_SDK/SGS_Models/resource/detection/file.list \\ -m ~/tensorflow_ssd/ssd_mobilenet_v1_cmodel_float.sim -c Detection \\ -n ssd_mobilenet_v1 --input_config ~/SGS_IPU_SDK/SGS_Models/tensorflow/ssd_mobilenet_v1/input_config.ini \\ --num_process 20 -p Fixed \u5bf9\u8be5\u5de5\u5177\u53c2\u6570\u7684\u5177\u4f53\u8bf4\u660e\u5982\u4e0b\uff1a 3.1.1 \u5fc5\u9009\u53c2\u6570 \u00b6 -i , --image : \u56fe\u7247\u6587\u4ef6\u6216\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\u6216 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u3002 -m , --model : \u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 -c , --category : \u6a21\u578b\u7684\u7c7b\u522b\uff0c\u4e3b\u8981\u6709Classification / Detection / Unknown Classification : \u6a21\u578b\u67091\u4e2a\u8f93\u51fa\uff0c\u4f1a\u6839\u636e\u8f93\u51fa\u6392\u5e8f\u8f93\u51fa\u5206\u6570\u7531\u9ad8\u81f3\u4f4e\u7684\u524d5\u4e2a\u3002 Detection : \u6a21\u578b\u67094\u4e2a\u8f93\u51fa\uff0c\u4f1a\u6839\u636e\u8f93\u51fa\u8f6c\u6362\u4e3a\u8f93\u5165\u56fe\u7247\u7684bbox\u4f4d\u7f6e\u4ee5\u53ca\u7c7b\u522b\u3002\u53ea\u652f\u6301SigmaStar\u540e\u5904\u7406\u65b9\u6cd5 [SigmaStar\u540e\u5904\u7406\u6a21\u5757]\u3002\u5176\u4ed6\u540e\u5904\u7406\u8bf7\u4f7f\u7528Unknown\u3002 Unknown : \u6a21\u578b\u8f93\u51fa\u4e0d\u5c5e\u4e8e\u4e0a\u8ff0\u4e24\u79cd\u7c7b\u578b\uff0c\u4f1a\u8f93\u51fa\u5168\u90e8\u7684Tensor\u6570\u503c\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 \u5177\u4f53\u8bbe\u7f6e\u65b9\u6cd5\u89c1 [input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e]2.2. input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e). Please Note: \u4e0d\u52a0 -n/--preprocess \u53c2\u6570\u65f6\uff0c -i/--image \u4e0d\u80fd\u7ed9\u56fe\u7247\u6216\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\u3002 -i/--image \u53c2\u6570\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\u65f6\uff1a \u7f51\u7edc\u6a21\u578b\u4e3a\u5355\u8f93\u5165\u65f6\uff1a ~/SGS_IPU_SDK/image_test/2007000364.jpg ~/SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp ... \u7f51\u7edc\u6a21\u578b\u4e3a\u591a\u8f93\u5165\u65f6\uff1a ~/SGS_IPU_SDK/image_test/2007000364.jpg,~/SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp ~/SGS_IPU_SDK/image_test/2007000365.jpg,~/SGS_IPU_SDK/image_test/ILSVRC2012_test_00000003.bmp ... 3.1.2 \u53ef\u9009\u53c2\u6570 \u00b6 -t , --tool : sgs_calibrator\u6587\u4ef6\u8def\u5f84\u3002 -n , --preprocess : \u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4e0e\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\u76f8\u5173\uff0c\u8be6\u89c1[3.2. \u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5]\u3002 \u4e5f\u53ef\u4ee5\u5b8c\u6210\u524d\u5904\u7406\u6587\u4ef6\u914d\u7f6e\u540e\uff0c\u7ed9\u5b9a\u524d\u5904\u7406\u6587\u4ef6\u8def\u5f84\u3002\u4e0d\u52a0\u8be5\u53c2\u6570\uff0c\u56fe\u7247\u53c2\u6570\u9700\u8981\u7ed9\u539f\u59cb\u6570\u636e\uff0c\u53ef\u91c7\u7528--save_input\u4fdd\u5b58\u56fe\u7247\u6570\u636e\u540e\uff0c\u6839\u636e\u8be5\u683c\u5f0f\u5236\u5b9a\u5176\u4ed6\u7684\u539f\u59cb\u6570\u636e\u3002 \u6ce8\u610f\u4e8b\u9879 \u82e5\u6a21\u578b\u4e3a**\u591a\u8f93\u5165**\u65f6\uff0c -n,--preprocess \u53c2\u6570\u7528\u6cd5\u9700\u8981\u4e24\u4e2a\u524d\u5904\u7406\u65b9\u6cd5\uff0c -n preprocess1.py,preprocess2.py \u6216\u8005 --preprocess preprocess1.py,preprocess2.py -o , --output : \u6a21\u578b\u8f93\u51fa\u8def\u5f84\u3002\u6307\u5b9a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u6570\u636e\u4f4d\u7f6e\uff1a\u6307\u5b9a\u5230\u6587\u4ef6\u5939\uff0c\u5c06\u81ea\u52a8\u4ee5\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u524d\u7f00\u547d\u540d\uff0c\u540e\u63a5fixed.sim\uff1b\u6307\u5b9a\u5230\u5177\u4f53\u8def\u5f84\u548c\u6587\u4ef6\u540d\uff0c\u5c06\u4ee5\u6307\u5b9a\u8def\u5f84\u548c\u6587\u4ef6\u540d\u547d\u540d\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff1b\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\uff0c\u5c06\u4ee5\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u50a8\u5b58\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u3002 --num_process : \u8fdb\u7a0b\u6570\uff0c\u8fd0\u884c\u540c\u65f6\u8fd0\u884c\u7684\u8fdb\u7a0b\u6570\u3002\uff08\u53ef\u9009\u53c2\u6570\uff0c\u4e0d\u52a0\u8be5\u53c2\u6570\u9ed8\u8ba4\u4e3a10\u4e2a\u8fdb\u7a0b\uff09\u3002 --quant_level : \u9009\u62e9\u91cf\u5316\u7b49\u7ea7\uff1a[L1, L2, L3, L4, L5]\u3002\u9ed8\u8ba4L5\u91cf\u5316\u7b49\u7ea7\uff0c\u7b49\u7ea7\u8d8a\u9ad8\uff0c\u91cf\u5316\u7cbe\u5ea6\u8d8a\u9ad8\uff0c\u91cf\u5316\u901f\u5ea6\u4f1a\u76f8\u5e94\u53d8\u6162\u3002\u5404\u91cf\u5316\u7b49\u7ea7\u8bf4\u660e\uff1a L1 : \u91c7\u7528\u6700\u5927\u6700\u5c0f\u503c\u5feb\u901f\u5bf9\u6bd4\u6570\u636e\u91cf\u5316\uff0c\u901f\u5ea6\u8f83\u5feb\u3002 L2 : \u91c7\u7528\u5feb\u901f\u5bf9\u6bd4\u6570\u636e\u91cf\u5316\u6743\u91cd\u6570\u636e\u3002 L3 : \u5bf9\u7edf\u8ba1\u4fe1\u606f\u505a\u8fdb\u4e00\u6b65\u5206\u6790\uff0c\u8fd1\u4f3c\u62df\u5408\u539f\u6709\u6570\u636e\u5206\u5e03\u3002 L4 : \u8fd1\u4f3c\u62df\u5408\u6743\u91cd\u6570\u636e\u5206\u5e03\uff0c\u5e76\u5efa\u8bae\u5347\u7ea7\u67d0\u4e9b\u5377\u79ef\u4e3a16bit\u91cf\u5316\u3002 L5 : \u91c7\u7528\u9ad8\u7cbe\u5ea6\u6570\u636e\u5206\u6790\u65b9\u6cd5\uff0c\u6781\u5927\u9650\u5ea6\u62df\u5408\u539f\u6709\u6570\u636e\u5206\u5e03\uff0c\u5e76\u5efa\u8bae\u5347\u7ea7\u67d0\u4e9b\u5377\u79ef\u4e3a16bit\u91cf\u5316\u3002 --save_input : \u4fdd\u5b58\u524d\u5904\u7406\u540e\u7684\u6587\u4ef6\uff0c\u9ed8\u8ba4\u4e0d\u4fdd\u5b58\u3002\u6587\u4ef6\u4e3a\u6587\u672c\u6587\u4ef6\uff0c\u4fdd\u5b58\u5728\u8fd0\u884c\u8def\u5f84\u4e0b\uff0c\u6587\u4ef6\u540d\u4e3a\u201c\u56fe\u7247\u540d.\u6a21\u578b\u540d.data\u201d\u3002 3.1.3 \u6ce8\u610f\u4e8b\u9879 \u00b6 \u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u6210\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u9700\u898130\u5f20\u5de6\u53f3\u8bad\u7ec3\u56fe\u7247\u7528\u6765\u5206\u6790\u548c\u91cf\u5316\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u7684\u6570\u636e\uff0c\u56e0\u6b64\u5728\u8f6c\u6362\u4e2d\uff0c -i/--image \u53c2\u6570\u540e\u5e94\u63a5\u56fe\u7247\u6587\u4ef6\u5939\u7684\u8def\u5f84\u3002\u5f53\u7136\uff0c\u5982\u679c -i/--image \u53c2\u6570\u7ed9\u5b9a\u5355\u5f20\u56fe\u7247\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u4f9d\u7136\u53ef\u4ee5\u8f6c\u6362\u4e3a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff0c\u4f46\u662f\u5176\u6a21\u578b\u7cbe\u5ea6\u53ef\u80fd\u4f1a\u6536\u5230\u5f71\u54cd\u3002\u53e6\u5916\uff0c\u7531\u4e8e\u5bf9\u7cbe\u5ea6\u8981\u6c42\u4e0d\u540c\uff0c\u5728\u8f6c\u6362\u7f51\u7edc\u4e2d\u5728input_config.ini\u6587\u4ef6\u4e2d\u53ef\u4ee5\u9488\u5bf9\u5377\u79ef\u914d\u7f6e\u4e0d\u540c\u7684\u91cf\u5316\u4fe1\u606f\uff0c\u4ece\u800c\u83b7\u5f97\u7cbe\u5ea6\u548c\u901f\u5ea6\u7684\u5e73\u8861\u3002 calibrator\u5de5\u5177\u4f1a\u5bfb\u627e\u7cfb\u7edf\u53d8\u91cf\u4ece\u800c\u83b7\u5f97\u5bf9\u5e94\u9636\u6bb5\u4efb\u52a1\u6240\u9700\u5de5\u5177\u8def\u5f84\uff0c\u56e0\u6b64\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u53c2\u6570 -t/--tool \u4e0d\u7528\u6307\u5b9a\u76f8\u5173\u5de5\u5177\u7684\u4f4d\u7f6e\u3002 \u4f7f\u7528calibrator\u5c06\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u4e3a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u65f6\uff0c\u4f1a\u5728\u8fd0\u884c\u76ee\u5f55\u4e0b\u4ea7\u751flog\u76ee\u5f55\uff0clog\u76ee\u5f55\u4e0b\u7684tensor_min_max.txt\u6587\u4ef6\u8bb0\u5f55\u4e86\u7f51\u7edc\u7684\u6bcf\u5c42\u8f93\u5165\u548c\u8f93\u51fa\u7684\u6700\u5927\u4e0e\u6700\u5c0f\u503c\uff0c\u5c06\u5728\u4e4b\u540e\u5206\u6790\u6570\u636e\u65f6\u6709\u7528\u3002log\u76ee\u5f55\u4e0b\u7684\u5185\u5bb9\u4f1a\u5728\u4e0b\u4e00\u6b21\u4f7f\u7528calibrator\u65f6\u5220\u9664\uff0c\u8bf7\u6ce8\u610f\u4fdd\u5b58\u3002 3.2. \u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5 \u00b6 \u7531\u4e8e\u4e0d\u540c\u7f51\u7edc\u6a21\u578b\u7684\u524d\u5904\u7406\u65b9\u5f0f\u4e0d\u5c3d\u76f8\u540c\uff0c\u4e3a\u4e86\u80fd\u591f\u5728\u8f6c\u6362\u7f51\u7edc\u65f6\u5c3d\u53ef\u80fd\u51cf\u5c0f\u7cbe\u5ea6\u7684\u4e22\u5931\uff0c\u5e94\u8be5\u4f7f\u7528\u4e0e\u8bad\u7ec3\u76f8\u540c\u7684\u56fe\u7247\u524d\u5904\u7406\u65b9\u5f0f\uff0c\u6bcf\u79cd\u524d\u5904\u7406\u65b9\u5f0f\u9700\u72ec\u7acb\u7f16\u5199python\u6587\u4ef6\u3002 \u4ee5\u4e0b\u4e24\u79cd\u65b9\u5f0f\u4fdd\u5b58\u524d\u5904\u7406Python\u6587\u4ef6\u5747\u53ef\u88ab\u8c03\u7528\uff1a \u8bf7\u5c06\u6587\u4ef6\u4fdd\u5b58\u5230 SGS_IPU_SDK/Scripts/calibrator/preprocess \u6587\u4ef6\u5939\u5185\uff0c\u5e76\u5728preprocess_method/ init .py \u6587\u4ef6\u4e2d\u589e\u52a0\u6587\u4ef6\u540d\u79f0\u3002\u5728\u4f7f\u7528calibrator\u6216simulator\u65f6\uff0c -n/--preprocess \u53c2\u6570\u4e3a\u7f16\u5199\u7684\u6587\u4ef6\u540d\u79f0\uff0c\u4e0d\u9700\u8981\u6307\u5b9a\u7f16\u5199\u6587\u4ef6\u7684\u8def\u5f84\u3002 -n/--preprocess \u53c2\u6570\u4e3a\u524d\u5904\u7406Python\u7684\u6587\u4ef6\u8def\u5f84\u3002 \u4e0b\u9762\u4ee5mobilenet_v1\u7f51\u7edc\u4e3a\u4f8b\uff0c\u7f16\u5199\u56fe\u7247\u524d\u5904\u7406\u6587\u4ef6\u3002 \u7f16\u5199\u56fe\u7247\u5904\u7406\u51fd\u6570\uff08\u51fd\u6570\u540d\u79f0\u4e0d\u9650\uff09\uff0c\u8fd4\u56denp.array \u683c\u5f0f\u7684\u56fe\u7247\u6570\u636e\uff0c\u51fd\u6570\u5fc5\u987b\u5305\u542b2\u4e2a\u53c2\u6570\uff1a \u56fe\u7247\u8def\u5f84 \u5f52\u4e00\u5316\u6807\u8bb0\uff08norm=True\uff09 \u5f52\u4e00\u5316\u6807\u8bb0\u662f\u4e3a\u4e86\u533a\u5206\u7f51\u7edc\u6a21\u578b\u662f\u5426\u662f\u6d6e\u70b9\u6a21\u578b\u3002\u56e0\u4e3a\u5728\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u9636\u6bb5\uff0c\u56fe\u7247\u7684\u5f52\u4e00\u5316\u9700\u8981\u5728\u9001\u8fdb\u7f51\u7edc\u524d\u5904\u7406\u597d\u3002\u4f46\u662f\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u548c\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u5df2\u7ecf\u5305\u542b\u4e86input_config.ini\u6587\u4ef6\u7684\u8bbe\u7f6e\u4fe1\u606f\uff0c\u80fd\u591f\u5c06\u56fe\u7247\u6570\u636e\u81ea\u884c\u505a\u5f52\u4e00\u5316\u5904\u7406\uff0c\u56e0\u6b64\u9001\u8fdb\u7f51\u7edc\u6a21\u578b\u7684\u6570\u636e\u4e0d\u9700\u8981\u505a\u5f52\u4e00\u5316\uff0c\u8fd9\u4e0e\u5728SigmaStar\u786c\u4ef6\u4e0a\u5904\u7406\u65b9\u5f0f\u76f8\u540c\u3002 import cv2 import tensorflow as tf def preprocess_mobilenet_v1 ( image_file , norm = True , resize_strategy = \"cv\" , central_crop =. 875 ): im = cv2 . imread ( image_file ) rgb = cv2 . cvtColor ( im , cv2 . COLOR_BGR2RGB ) # 1. central crop h , w = rgb . shape [ 0 ], rgb . shape [ 1 ] h_cropped = int ( h * central_crop ) w_cropped = int ( w * central_crop ) h_start = ( h - h_cropped ) // 2 h_end = h_cropped + h_start w_start = ( w - w_cropped ) // 2 w_end = w_cropped + w_start image = rgb [ h_start : h_end , w_start : w_end , :] # 2. resize to target shape ( scaled_w , scaled_h ) = ( 224 , 224 ) if resize_strategy == 'tf' : import tensorflow as tf image = np . expand_dims ( image , 0 ) tf_resized_image = tf . compat . v1 . image . resize_bilinear ( image , ( scaled_w , scaled_h )) with tf . Session (): resized_image = tf_resized_image . eval () else : cv_resized_image = cv2 . resize ( image , ( scaled_w , scaled_h )) resized_image = np . expand_dims ( cv_resized_image , 0 ) if norm : # normalize to [-1,1] normalized_image = ( 2.0 / 255.0 ) * resized_image - 1.0 else : normalized_image = resized_image return normalized_image \u4f7f\u7528image_preprocess\u51fd\u6570\u8c03\u7528\uff0c\u6b64\u5904\u52a1\u5fc5\u6309\u7167\u8be5\u65b9\u6cd5\u4e66\u5199\u3002 def image_preprocess ( img_path , norm = True ): return preprocess_mobilenet_v1 ( img_path , norm = norm ) \u4fdd\u5b58\u4e3a mobilenet_v1.py. \u5728SGS_IPU_SDK/Scripts/calibrator/preprocess_method/ init .py \u6587\u4ef6\u4e2d\u6dfb\u52a0\u521a\u521a\u7f16\u5199\u7684python\u6587\u4ef6 _all_ = [ 'caffe_mobilenet_v2' , 'caffe_resnet18' , 'caffe_resnet50_conv' , 'mobilenet_v1' ] \u4f7f\u7528calibrator\u6216simulator\u65f6 -n/--preprocess \u53c2\u6570\u4e3amobilenet_v1 \u5373\u53ef\u8c03\u7528\u521a\u521a\u7f16\u5199\u7684\u56fe\u7247\u524d\u5904\u7406\u6587\u4ef6\u3002 \u5982\u679c\u4e0d\u5728SGS_IPU_SDK/Scripts/calibrator/preprocess_method/ init .py \u6587\u4ef6\u4e2d\u589e\u52a0\uff0c -n/--preprocess \u53c2\u6570\u4e3amobilenet_v1.py\u6587\u4ef6\u8def\u5f84\uff0c\u4e5f\u53ef\u4ee5\u4e3a\u56fe\u7247\u505a\u524d\u5904\u7406\u3002 3.3. \u5377\u79ef\u91cf\u5316\u9009\u9879 \u00b6 \u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u5230\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u65f6\uff0c\u5377\u79ef\u91cf\u5316\u652f\u6301 UINT8 \u548c INT16 \u4e24\u79cd\u91cf\u5316\u65b9\u5f0f\u3002\u4f7f\u7528calibrator\u65f6\uff0c --quant_level \u9009\u62e9L2\u3001L3\u6216L4\u65f6\u4f1a\u6839\u636e\u7edf\u8ba1\u4fe1\u606f\u81ea\u52a8\u914d\u7f6e\u5377\u79ef\u7684\u91cf\u5316\u65b9\u5f0f\uff0c\u5982\u679c\u9700\u8981\u5f3a\u5236\u6307\u5b9a\uff0c\u6307\u5b9a\u65b9\u5f0f\u5728 [2.2.3 CONV_CONFIG]\u4e2d\u6709\u8bf4\u660e\u3002\u53ef\u5bf9\u67d0\u4e9b\u5377\u79ef\u5c42\u5355\u72ec\u8bbe\u7f6eINT16\u91cf\u5316\uff0c\u6216\u8005\u5bf9\u5168\u90e8\u5377\u79efINT16\u91cf\u5316\uff1b\u4e0d\u8bbe\u7f6e\u65f6\u9ed8\u8ba4\u4f7f\u7528calibrator\u7684\u63a8\u8350\u91cf\u5316\u65b9\u5f0f\u3002 3.4. calibrator_custom.calibrator \u00b6 calibrator_custom.calibrator\u662f\u57fa\u4e8ePython\u7684\u5feb\u901f\u91cf\u5316\u548c\u8f6c\u6362\u6a21\u578b\u7684\u6a21\u5757\u3002\u4f7f\u7528calibrator_custom.calibrator\u53ef\u4ee5\u66f4\u65b9\u4fbf\u7075\u6d3b\u7684\u5bf9\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u8fdb\u884c\u91cf\u5316\u548c\u8f6c\u6362\u3002\u76ee\u524d\u57fa\u4e8e\u7684docker\u73af\u5883\uff0c\u63d0\u4f9bPython3.5\u7684\u9884\u7f16\u8bd1\u7684Python\u6a21\u5757\uff0c\u4f7f\u7528\u65b9\u6cd5\u548c\u76f8\u5173API\u63a5\u53e3\u5982\u4e0b\uff1a import calibrator_custom model_path = './mobilenet_v2_float.sim' input_config_path = './input_config.ini' model = calibrator_custom . calibrator ( model_path , input_config_path ) \u4f7f\u7528 calibrator_custom.calibrator \u65f6\uff0c\u9700\u8981\u7ed9\u5b9afloat.sim\u6a21\u578b\u7684\u8def\u5f84\u548c\u5bf9\u5e94\u7684input_config.ini\u7684\u8def\u5f84\uff0c\u7528\u4e8e\u521b\u5efacalibrator\u7684\u5b9e\u4f8b\u3002\u53c2\u6570\u7ed9\u5b9a\u9519\u8bef\uff0c\u5c06\u65e0\u6cd5\u6210\u529f\u521b\u5efacalibrator\u5b9e\u4f8b\uff0c\u5e76\u8fd4\u56deValueError\u3002 3.4.1 calibrator_custom.calibrator\u65b9\u6cd5 \u00b6 get_input_details \u8fd4\u56de\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u4fe1\u606f\uff08list\uff09 input_details = model . get_input_details () >>> print ( input_details ) [{ 'index' : 0 , 'shape' : array ([ 1 , 513 , 513 , 3 ], dtype = int32 ), 'name' : 'sub_7' , 'dtype' : < class ' numpy . float32 '>}] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578b\u8f93\u5165\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a index : \u8f93\u5165Tensor\u5e8f\u53f7 name : \u8f93\u5165Tensor\u540d\u79f0 shape : \u8f93\u5165Tensor\u7684\u5f62\u72b6 dtype : \u8f93\u5165Tensor\u7684\u6570\u636e\u7c7b\u578b get_output_detail \u8fd4\u56de\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u4fe1\u606f\uff08list\uff09 output_details = model . get_output_details () >>> print ( output_details ) [{ 'index' : 0 , 'shape' : array ([ 1 , 257 , 257 , 30 ], dtype = int32 ), 'name' : 'MobilenetV2/Conv/Conv2D' , 'dtype' : < class ' numpy . float32 '>}] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578b\u8f93\u51fa\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a index : \u8f93\u51faTensor\u5e8f\u53f7 name : \u8f93\u51faTensor\u540d\u79f0 shape : \u8f93\u51faTensor\u7684\u5f62\u72b6 dtype : \u8f93\u51faTensor\u7684\u6570\u636e\u7c7b\u578b set_input \u8bbe\u7f6e\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u6570\u636e model . set_input ( 0 , img_data ) \u8f93\u5165\u6570\u636e\uff0c0\u4e3a\u8f93\u5165Tensor\u7684index\uff0c\u53ef\u4ee5\u5728get_input_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230\u3002img_data\u662f\u4e0emodel\u8f93\u5165shape\u548cdtype\u76f8\u540c\u7684numpy.ndarray\u683c\u5f0f\u6570\u636e\uff0c\u9519\u8bef\u7684shape\u6216dtype\uff0c\u5c06\u5bfc\u81f4set_input\u8fd4\u56deValueError\u3002\u5982\u679c\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u53ef\u4ee5\u591a\u6b21\u8c03\u7528set_input\uff0c\u6839\u636eget_input_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230index\u8bbe\u7f6e\u5bf9\u5e94Tensor\u7684\u8f93\u5165\u6570\u636e\u3002 invoke \u6a21\u578b\u8fd0\u884c\u4e00\u6b21 model . invoke () \u8c03\u7528invoke\u524d\u8bf7\u5148\u4f7f\u7528set_input\u8bbe\u7f6e\u8f93\u5165\u6570\u636e\uff0c\u672a\u8c03\u7528set_input\u76f4\u63a5\u8c03\u7528invoke\u4f1a\u8fd4\u56deValueError\u3002 get_output \u83b7\u53d6\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u6570\u636e result = model . get_output ( 0 ) \u83b7\u53d6\u8f93\u51fa\u6570\u636e\uff0c0\u4e3a\u8f93\u51faTensor\u7684index\uff0c\u53ef\u4ee5\u5728get_output_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230\uff0c\u8fd4\u56denumpy.ndarray\u683c\u5f0f\u8f93\u51fa\u6570\u636e\u3002\u5982\u679c\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u51fa\uff0c\u53ef\u4ee5\u591a\u6b21\u8c03\u7528get_output\uff0c\u6839\u636eget_output_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230index\u83b7\u53d6\u5bf9\u5e94Tensor\u7684\u8f93\u51fa\u6570\u636e\u3002 get_tensor_details \u8fd4\u56de\u7f51\u7edc\u6a21\u578b\u6bcf\u4e2aTensor\u7684\u4fe1\u606f\uff08list\uff09 tensor_details = model . get_tensor_details () >>> print ( tensor_details ) [{ 'dtype' : 'FLOAT32' , 'name' : 'MobilenetV2/Conv/Conv2D' , 'qtype' : 'INT16' , 'shape' : array ([ 1 , 257 , 257 , 30 ], dtype = int32 )}, { 'dtype' : 'FLOAT32' , 'name' : 'MobilenetV2/Conv/Conv2D_bias' , 'qtype' : 'INT16' , 'shape' : array ([ 2 , 30 ], dtype = int32 )}, { 'dtype' : 'FLOAT32' , 'name' : 'MobilenetV2/Conv/weights/read' , 'qtype' : 'INT8' , 'shape' : array ([ 30 , 3 , 3 , 3 ], dtype = int32 )}, { 'dtype' : 'FLOAT32' , 'name' : 'sub_7' , 'qtype' : 'UINT8' , 'shape' : array ([ 1 , 513 , 513 , 3 ], dtype = int32 )}] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578bTensor\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a name : Tensor\u540d\u79f0 shape : Tensor\u7684\u5f62\u72b6 dtype : Tensor\u7684\u6570\u636e\u7c7b\u578b qtype : \u5b9a\u70b9\u6a21\u578b\u8be5Tensor\u53ef\u80fd\u7684\u6570\u636e\u7c7b\u578b\uff08quantization type\uff09 3.4.2 calibrator_custom.SIM_Calibrator \u00b6 \u5bf9\u4e8e\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u540c\u65f6\u8f6c\u6362\u65f6\uff0c\u63d0\u4f9bcalibrator_custom.SIM_Calibrator\uff0c\u65b9\u4fbf\u8fdb\u884c\u7b80\u5355\u5b9a\u4e49\u540e\uff0c\u7edf\u4e00\u8f6c\u6362\u3002 calibrator_custom.SIM_Calibrator\u662f\u5df2\u7ecf\u5b9e\u73b0\u597d\u7684class\uff0c\u5f53\u4e2d\u53ea\u6709forward\u65b9\u6cd5\u672a\u5b9e\u73b0\uff0c\u4f7f\u7528\u65f6\u4ec5\u9700\u5b9e\u73b0\u8be5\u65b9\u6cd5\uff0c\u5373\u53ef\u8f6c\u6362\u5b8c\u6210\u3002 \u4e0b\u9762\u4ee5**SGS_IPU_SDK/Scripts/examples/sim_calibrator.py**\u4e3a\u4f8b\uff0c\u8bf4\u660ecalibrator_custom.SIM_Calibrator\u7684\u4f7f\u7528\u65b9\u6cd5\uff1a import calibrator_custom class Net ( calibrator_custom . SIM_Calibrator ): def __init__ ( self ): super () . __init__ () self . model = calibrator_custom . calibrator ( model_path , input_config ) def forward ( self , x ): out_details = self . model . get_output_details () self . model . set_input ( 0 , x ) self . model . invoke () result_list = [] for idx in range ( len ( out_details )): result = self . model . get_output ( idx ) result_list . append ( result ) return result_list \u5b9a\u4e49forward\u65b9\u6cd5\uff0cforward\u7684\u53c2\u6570\u4e3a\u6a21\u578b\u8f93\u5165\uff0c\u5982\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u53ef\u589e\u52a0forward\u7684\u53c2\u6570\u3002 \u521b\u5efacalibrator_custom.SIM_Calibrator\u7684\u5b9e\u4f8b net = Net () \u8c03\u7528calibrator_custom.SIM_Calibrator\u7684convert\u65b9\u6cd5 net . convert ( img_gen , fix_model = [ out_model_path ]) convert\u65b9\u6cd5\u5fc5\u987b\u8f93\u5165\u4e24\u4e2a\u53c2\u6570\uff1a\u56fe\u7247\u751f\u6210\u5668\u3001fixed.sim\u6a21\u578b\u7684\u4fdd\u5b58\u8def\u5f84list\u3002 \u56fe\u7247\u751f\u6210\u5668\uff08img_gen\uff09 \u4e3a\u65b9\u4fbf\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u8f6c\u6362\u6a21\u578b\uff0c\u901a\u8fc7\u751f\u6210\u5668\u65b9\u4fbf\u7ec4\u7ec7\u8f93\u5165\u56fe\u7247\u7684\u5e8f\u5217\u3002\u5982\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u751f\u6210\u5668\u5e94\u8be5\u6309\u7167\u5b9a\u4e49forward\u65f6\u7684\u8f93\u5165\u987a\u5e8f\uff0c\u8fd4\u56de\u6709\u591a\u4e2anumpy.ndarray\u7684list\u3002 calibrator_custom.utils.image_preprocess_func\u4f7f\u7528\u9884\u5148\u5b9a\u4e49\u597d\u7684\u524d\u5904\u7406\u65b9\u6cd5\u3002 preprocess_func = calibrator_custom . utils . image_preprocess_func ( model_name ) def image_generator ( folder_path , preprocess_func ): images = [ os . path . join ( folder_path , img ) for img in os . listdir ( folder_path )] for image in images : img = preprocess_func ( image ) yield [ img ] img_gen = image_generator ( './images' , preprocess_func ) fixed.sim\u6a21\u578b\u7684\u4fdd\u5b58\u8def\u5f84list \u5982\u679c\u5728__init__\u4e2d\u5b9a\u4e49\u591a\u4e2a\u6a21\u578b\uff0cfixed\u6a21\u578b\u7684\u4fdd\u5b58\u8def\u5f84list\u5e94\u8be5\u6309\u7167__init__\u4e2d\u5b9a\u4e49\u6a21\u578b\u7684\u987a\u5e8f\uff0c\u4f9d\u6b21\u547d\u540d\u3002 \u5176\u4ed6\u53ef\u9009\u53c2\u6570\uff1a num_process: \u8fdb\u7a0b\u6570\uff0c\u8fd0\u884c\u540c\u65f6\u8fd0\u884c\u7684CPU\u6570\u91cf quant_level: \u9009\u62e9\u91cf\u5316\u7b49\u7ea7\uff1a[L1, L2, L3, L4, L5]\uff0c\u9ed8\u8ba4L5\u91cf\u5316\u7b49\u7ea7\uff0c\u5177\u4f53\u542b\u4e49\u8be6\u89c13.1.2\u8282Calibrator\u7684\u53ef\u9009\u53c2\u6570\u4f7f\u7528\u65b9\u6cd5\u3002 quant_param: \u91cf\u5316\u5bfc\u5165\u53c2\u6570\u3002\u5982\u679c\u5df2\u6709\u5bf9\u5e94\u6a21\u578b\u7684\u91cf\u5316\u53c2\u6570\uff0c\u53ef\u4ee5\u5c06\u91cf\u5316\u7684\u53c2\u6570\u5728\u6a21\u578b\u8f6c\u6362\u4e2d\u5bfc\u5165\u3002 3.4.3 \u5bfc\u5165\u91cf\u5316\u53c2\u6570\u89c4\u5219 \u00b6 3.4.3.1. \u91cf\u5316\u7b56\u7565\u548c\u65b9\u6cd5 \u00b6 Conv2D\u7684\u91cf\u5316\u65b9\u6cd5 Conv2D\u7684\u91cf\u5316\u5206\u4e3a\u8f93\u5165\u3001Weights\u548c\u8f93\u51fa\uff0c\u76ee\u524d\u652f\u63018bit\uff0c16bit\u91cf\u5316\u3002 \u6839\u636e\u7edf\u8ba1\u5f97\u5230\u7684\u8f93\u5165\u3001Weights\u548c\u8f93\u51fa\u7684min\u548cmax\u503c\uff0c\u9996\u5148\u63d0\u524d\u5c06Weights\u91cf\u5316\u5230\u5b9a\u70b9\u6570\u636e\uff0c\u4fdd\u5b58\u5728fixed\u7684\u7f51\u7edc\u5185\u90e8\uff0c\u518d\u5728\u7f51\u7edc\u8fd0\u884c\u65f6\u52a8\u6001\u91cf\u5316\u8f93\u5165\u548c\u8f93\u51fa\u6570\u636e\u3002Weights\u7684min\u548cmax\u503c\u7684\u4e2a\u6570\u7531kernel\u7684\u4e2a\u6570\u51b3\u5b9a\uff0c\u8f93\u5165\u548c\u8f93\u51fa\u7684min\u548cmax\u503c\u7684\u4e2a\u6570\u7531\u8f93\u5165\u8f93\u51fa\u7684C\u7ef4\u5ea6\u51b3\u5b9a\u3002\u5982\u679c\u4f7f\u75288bit\u91cf\u5316\uff0cConv2D\u7684\u8f93\u5165\u4e3aUINT8\uff08\u76f8\u5f53\u4e8eINT9\u7684\u8868\u8fbe\u80fd\u529b\uff09\uff0cWeights\u4e3aINT8\uff1b\u5982\u679c\u4f7f\u752816bit\u91cf\u5316\uff0cConv2D\u7684\u8f93\u5165\u548cWeights\u5747\u4e3aINT16\u3002 DepthwiseConv2D\u7684\u91cf\u5316\u65b9\u6cd5 DepthwiseConv2D\u7684\u91cf\u5316\u5206\u4e3a\u8f93\u5165\u3001Weights\u548c\u8f93\u51fa\uff0c\u76ee\u524d\u652f\u63018bit\uff0c16bit\u91cf\u5316\u3002 \u6839\u636e\u7edf\u8ba1\u5f97\u5230\u7684\u8f93\u5165\u3001Weights\u548c\u8f93\u51fa\u7684min\u548cmax\u503c\uff0c\u9996\u5148\u63d0\u524d\u5c06Weights\u91cf\u5316\u5230\u5b9a\u70b9\u6570\u636e\uff0c\u4fdd\u5b58\u5728fixed\u7684\u7f51\u7edc\u5185\u90e8\uff0c\u518d\u5728\u7f51\u7edc\u8fd0\u884c\u65f6\u52a8\u6001\u91cf\u5316\u8f93\u5165\u548c\u8f93\u51fa\u6570\u636e\u3002Weights\u3001\u8f93\u5165\u548c\u8f93\u51fa\u7684min\u548cmax\u503c\u7684\u4e2a\u6570\u5747\u7531\u5bf9\u5e94Tensor\u7684C\u7ef4\u5ea6\u51b3\u5b9a\u3002\u5982\u679c\u4f7f\u75288bit\u91cf\u5316\uff0cDepthwiseConv2D\u7684\u8f93\u5165\u4e3aUINT8\uff08\u76f8\u5f53\u4e8eINT9\u7684\u8868\u8fbe\u80fd\u529b\uff09\uff0cWeights\u4e3aINT8\uff1b\u5982\u679c\u4f7f\u752816bit\u91cf\u5316\uff0cDepthwiseConv2D\u7684\u8f93\u5165\u548cWeights\u5747\u4e3aINT16\u3002 \u5176\u4ed6Op\u91cf\u5316\u65b9\u6cd5 \u7f51\u7edc\u4e2d\u5176\u4ed6\u7b97\u5b50\u7684\u91cf\u5316min\u548cmax\u5747\u57fa\u4e8eC\u7ef4\u5ea6\u6570\u91cf\uff0c\u4ec5\u652f\u630116bit\u91cf\u5316\u3002\u8c03\u7528calibrator_custom.calibrator\u7684get_tensor_details\u65b9\u6cd5\u53ef\u4ee5\u4eceqtype\u4e2d\u5f97\u77e5\u8be5Tensor\u5728\u5b9a\u70b9\u6a21\u578b\u65f6\u7684data type\u3002 3.4.3.2. \u91cf\u5316\u53c2\u6570\u7684\u5185\u5bb9 \u00b6 \u57fa\u4e8e\u4e0a\u8ff0\u91cf\u5316\u7684\u7b56\u7565\u548c\u65b9\u6cd5\uff0c\u9700\u8981\u4e3aTensor\u63d0\u4f9b\u5982\u4e0b\u4fe1\u606f\uff1a Tensor\u7684\u540d\u5b57\uff08name\uff09[str] \u7b97\u5b50\u7c7b\u578b\u63d0\u4f9b\u5bf9\u5e94\u6570\u91cf\u7684min\uff0cmax\u3002[list] \u91cf\u5316bit\u4f4d\u3002[int] \u5e38\u91cfTensor\u6570\u636e\uff08data\uff09\uff08\u53ef\u9009\uff09[numpy.ndarray] \u4e0b\u8868\u5c55\u793a\u4e86\u5bf9\u5e94\u7684\u53c2\u6570\u65b9\u5f0f\uff0c\u6574\u4e2a\u53c2\u6570\u4e3alist\uff0c\u5176\u4e2d\u6bcf\u4e2aitem\u662f\u4e00\u4e2adict\uff0c\u5305\u542b\u4e0a\u8ff0\u4fe1\u606f\u3002 [ { \"name\" : \"FeatureExtractor/MobilenetV2/Conv2d_0/weights\" , \"min\" : [ - 4.555312 , - 2.876907 , - 1.234419 ], \"max\" : [ 7.364561 , 3.960804 , 6.0 ], \"bit\" : 8 }, { ... }, ... ] \u793a\u4f8bSGS_IPU_SDK/Scripts/examples/sim_calibrator.py\u4e2d\u5df2\u5b8c\u6210\u4e86\u53c2\u6570\u5bfc\u5165\uff0c\u53ef\u4ee5\u63d0\u4f9bjson\u548cpkl\u6587\u4ef6\u7684\u8bfb\u53d6\u548c\u5bfc\u5165\u3002 3.4.3.3. \u5bfc\u5165\u91cf\u5316\u6570\u636e\u6d41\u7a0b \u00b6 \u4e3a\u4e86\u517c\u5bb9\u539f\u6709\u91cf\u5316\u6d41\u7a0b\uff0c\u539f\u6709\u91cf\u5316\u6240\u91c7\u7528\u7684\u7b56\u7565\u4f9d\u7136\u8fdb\u884c\u3002 \u539f\u59cb\u6a21\u578b\u5728\u8f6c\u6210SGS_Float\u6a21\u578b\u4ee5\u540e\uff0c\u4e00\u4e9b\u7b97\u5b50\u4f1a\u88ab\u5408\u5e76\u548c\u4f18\u5316\uff0c\u8ba1\u7b97\u56fe\u4e0e\u539f\u6846\u67b6\u7684\u6a21\u578b\u6709\u8f83\u5927\u5dee\u5f02\u3002\u6240\u63d0\u4f9b\u7684\u91cf\u5316\u6587\u4ef6\u5185\u5bb9\u9700\u57fa\u4e8e\u5df2\u8f6c\u6210\u7684SGS_Float\u6a21\u578b\u9488\u5bf9\u6027\u8c03\u6574\uff0c\u5982Tensor\u540d\u79f0\u7b49\u4fe1\u606f\u3002 \u4e3a\u65b9\u4fbf\u4fee\u6539\u88ab\u5408\u5e76\u548c\u4f18\u5316\u7684\u5c42\uff0c\u53ef\u4ee5\u4f7f\u7528calibrator_custom.calibrator\u7684get_tensor_details\u65b9\u6cd5\u83b7\u53d6Tensor\u7684\u57fa\u672c\u4fe1\u606f\u3002\u53ef\u4ee5\u83b7\u5f97\u6bcf\u4e2aTensor\u7684name\uff0cshape\uff0cdtype\uff0cqtype\u4fe1\u606f\u3002 \u8f6c\u6362\u597d\u7684fixed\u6a21\u578b\u53ef\u4ee5\u4f7f\u7528calibrator_custom.fixed_simulator\u7684get_tensor_details\u65b9\u6cd5\u83b7\u53d6Tensor\u7684\u57fa\u672c\u4fe1\u606f\uff0c\u53ef\u4ee5\u83b7\u5f97\u6bcf\u4e2aTensor\u7684name\uff0cshape\uff0cmin\uff0cmax\uff0cquantization\uff0cdtype\u4fe1\u606f\u3002 \u6839\u636e\u6a21\u578bTensor\u4fe1\u606f\uff0c\u66f4\u65b0\u539f\u59cb\u6a21\u578b\u7684\u91cf\u5316\u6587\u4ef6\u540e\uff0c\u5373\u53ef\u5bfc\u5165\u91cf\u5316\u6570\u636e\u6587\u4ef6\u3002 \u89e3\u6790\u5b8c\u91cf\u5316\u6587\u4ef6\u540e\uff0c\u4f1a\u5339\u914d\u5df2\u6709\u91cf\u5316\u4fe1\u606f\u4e0e\u5bfc\u5165\u7684\u91cf\u5316\u4fe1\u606f\u3002\u4f18\u5148\u4f7f\u7528\u5bfc\u5165\u7684\u91cf\u5316\u4fe1\u606f\uff0c\u4f46\u4e0d\u6392\u9664\u5728\u5408\u5e76\u65f6\u7531\u4e8e\u5bfc\u5165\u4fe1\u606f\u7684\u4e0d\u5408\u7406\u800c\u653e\u5f03\u4f7f\u7528\u3002","title":"Calibrate"},{"location":"module/User_Guide/Develop/Calibrate.html#31","text":"Calibrator\u5de5\u5177\u7684\u4f4d\u7f6e\u5728 ~/SGS_IPU_SDK/SRC/Tool/Scripts/calibrator/calibrator.py \u3002 \u8be5\u5de5\u5177\u662f\u5c06SigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u4e3aSigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u3002 \u5728SGS_IPU_SDK \u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK/Project make distclean ;source build/{IPU_Version}/cfg_cmodel_float.sh ;make -j32 (IPU_Version \u53ef\u9009\u62e9IPU100,IPU200M,IPU260) \u8fdb\u5165\u5230\u8be5\u5de5\u5177\u76ee\u5f55\uff0c\u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ~/SGS_IPU_SDK/SRC/Tool/Scripts/calibrator/calibrator.py \\ -i ~/SGS_IPU_SDK/SGS_Models/resource/detection/coco2017_calibration_set32 \\ -m ~/tensorflow_ssd/ssd_mobilenet_v1_float.sim -c Detection \\ -n ssd_mobilenet_v1 --input_config ~/SGS_IPU_SDK/SGS_Models/tensorflow/ssd_mobilenet_v1/input_config.ini \\ --num_process 20 -p Statistics python3 ~/SGS_IPU_SDK/SRC/Tool/Scripts/calibrator/calibrator.py \\ -i ~/SGS_IPU_SDK/SGS_Models/resource/detection/coco2017_calibration_set32 \\ -m ~/tensorflow_ssd/ssd_mobilenet_v1_cmodel_float.sim -c Detection \\ -n ssd_mobilenet_v1 --input_config ~/SGS_IPU_SDK/SGS_Models/tensorflow/ssd_mobilenet_v1/input_config.ini \\ --num_process 20 -p Fixed \u6216\u8005\u53ef\u4ee5\u4f7f\u7528\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\uff1a python3 ~/SGS_IPU_SDK/SRC/Tool/Scripts/calibrator/calibrator.py \\ -i ~/SGS_IPU_SDK/SGS_Models/resource/detection/file.list \\ -m ~/SGS_IPU_SDK/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1_float.sim \\ -c Detection \\ -n ssd_mobilenet_v1 \\ --input_config ~/SGS_IPU_SDK/SGS_Models/tensorflow/ssd_mobilenet_v1/input_config.ini \\ --num_process 20 -p Statistics python3 ~/SGS_IPU_SDK/SRC/Tool/Scripts/calibrator/calibrator.py \\ -i ~/SGS_IPU_SDK/SGS_Models/resource/detection/file.list \\ -m ~/tensorflow_ssd/ssd_mobilenet_v1_cmodel_float.sim -c Detection \\ -n ssd_mobilenet_v1 --input_config ~/SGS_IPU_SDK/SGS_Models/tensorflow/ssd_mobilenet_v1/input_config.ini \\ --num_process 20 -p Fixed \u5bf9\u8be5\u5de5\u5177\u53c2\u6570\u7684\u5177\u4f53\u8bf4\u660e\u5982\u4e0b\uff1a","title":"3.1. \u4f7f\u7528\u65b9\u6cd5"},{"location":"module/User_Guide/Develop/Calibrate.html#311","text":"-i , --image : \u56fe\u7247\u6587\u4ef6\u6216\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\u6216 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u3002 -m , --model : \u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 -c , --category : \u6a21\u578b\u7684\u7c7b\u522b\uff0c\u4e3b\u8981\u6709Classification / Detection / Unknown Classification : \u6a21\u578b\u67091\u4e2a\u8f93\u51fa\uff0c\u4f1a\u6839\u636e\u8f93\u51fa\u6392\u5e8f\u8f93\u51fa\u5206\u6570\u7531\u9ad8\u81f3\u4f4e\u7684\u524d5\u4e2a\u3002 Detection : \u6a21\u578b\u67094\u4e2a\u8f93\u51fa\uff0c\u4f1a\u6839\u636e\u8f93\u51fa\u8f6c\u6362\u4e3a\u8f93\u5165\u56fe\u7247\u7684bbox\u4f4d\u7f6e\u4ee5\u53ca\u7c7b\u522b\u3002\u53ea\u652f\u6301SigmaStar\u540e\u5904\u7406\u65b9\u6cd5 [SigmaStar\u540e\u5904\u7406\u6a21\u5757]\u3002\u5176\u4ed6\u540e\u5904\u7406\u8bf7\u4f7f\u7528Unknown\u3002 Unknown : \u6a21\u578b\u8f93\u51fa\u4e0d\u5c5e\u4e8e\u4e0a\u8ff0\u4e24\u79cd\u7c7b\u578b\uff0c\u4f1a\u8f93\u51fa\u5168\u90e8\u7684Tensor\u6570\u503c\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 \u5177\u4f53\u8bbe\u7f6e\u65b9\u6cd5\u89c1 [input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e]2.2. input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e). Please Note: \u4e0d\u52a0 -n/--preprocess \u53c2\u6570\u65f6\uff0c -i/--image \u4e0d\u80fd\u7ed9\u56fe\u7247\u6216\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\u3002 -i/--image \u53c2\u6570\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\u65f6\uff1a \u7f51\u7edc\u6a21\u578b\u4e3a\u5355\u8f93\u5165\u65f6\uff1a ~/SGS_IPU_SDK/image_test/2007000364.jpg ~/SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp ... \u7f51\u7edc\u6a21\u578b\u4e3a\u591a\u8f93\u5165\u65f6\uff1a ~/SGS_IPU_SDK/image_test/2007000364.jpg,~/SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp ~/SGS_IPU_SDK/image_test/2007000365.jpg,~/SGS_IPU_SDK/image_test/ILSVRC2012_test_00000003.bmp ...","title":"3.1.1 \u5fc5\u9009\u53c2\u6570"},{"location":"module/User_Guide/Develop/Calibrate.html#312","text":"-t , --tool : sgs_calibrator\u6587\u4ef6\u8def\u5f84\u3002 -n , --preprocess : \u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4e0e\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\u76f8\u5173\uff0c\u8be6\u89c1[3.2. \u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5]\u3002 \u4e5f\u53ef\u4ee5\u5b8c\u6210\u524d\u5904\u7406\u6587\u4ef6\u914d\u7f6e\u540e\uff0c\u7ed9\u5b9a\u524d\u5904\u7406\u6587\u4ef6\u8def\u5f84\u3002\u4e0d\u52a0\u8be5\u53c2\u6570\uff0c\u56fe\u7247\u53c2\u6570\u9700\u8981\u7ed9\u539f\u59cb\u6570\u636e\uff0c\u53ef\u91c7\u7528--save_input\u4fdd\u5b58\u56fe\u7247\u6570\u636e\u540e\uff0c\u6839\u636e\u8be5\u683c\u5f0f\u5236\u5b9a\u5176\u4ed6\u7684\u539f\u59cb\u6570\u636e\u3002 \u6ce8\u610f\u4e8b\u9879 \u82e5\u6a21\u578b\u4e3a**\u591a\u8f93\u5165**\u65f6\uff0c -n,--preprocess \u53c2\u6570\u7528\u6cd5\u9700\u8981\u4e24\u4e2a\u524d\u5904\u7406\u65b9\u6cd5\uff0c -n preprocess1.py,preprocess2.py \u6216\u8005 --preprocess preprocess1.py,preprocess2.py -o , --output : \u6a21\u578b\u8f93\u51fa\u8def\u5f84\u3002\u6307\u5b9a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u6570\u636e\u4f4d\u7f6e\uff1a\u6307\u5b9a\u5230\u6587\u4ef6\u5939\uff0c\u5c06\u81ea\u52a8\u4ee5\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u524d\u7f00\u547d\u540d\uff0c\u540e\u63a5fixed.sim\uff1b\u6307\u5b9a\u5230\u5177\u4f53\u8def\u5f84\u548c\u6587\u4ef6\u540d\uff0c\u5c06\u4ee5\u6307\u5b9a\u8def\u5f84\u548c\u6587\u4ef6\u540d\u547d\u540d\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff1b\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\uff0c\u5c06\u4ee5\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u50a8\u5b58\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u3002 --num_process : \u8fdb\u7a0b\u6570\uff0c\u8fd0\u884c\u540c\u65f6\u8fd0\u884c\u7684\u8fdb\u7a0b\u6570\u3002\uff08\u53ef\u9009\u53c2\u6570\uff0c\u4e0d\u52a0\u8be5\u53c2\u6570\u9ed8\u8ba4\u4e3a10\u4e2a\u8fdb\u7a0b\uff09\u3002 --quant_level : \u9009\u62e9\u91cf\u5316\u7b49\u7ea7\uff1a[L1, L2, L3, L4, L5]\u3002\u9ed8\u8ba4L5\u91cf\u5316\u7b49\u7ea7\uff0c\u7b49\u7ea7\u8d8a\u9ad8\uff0c\u91cf\u5316\u7cbe\u5ea6\u8d8a\u9ad8\uff0c\u91cf\u5316\u901f\u5ea6\u4f1a\u76f8\u5e94\u53d8\u6162\u3002\u5404\u91cf\u5316\u7b49\u7ea7\u8bf4\u660e\uff1a L1 : \u91c7\u7528\u6700\u5927\u6700\u5c0f\u503c\u5feb\u901f\u5bf9\u6bd4\u6570\u636e\u91cf\u5316\uff0c\u901f\u5ea6\u8f83\u5feb\u3002 L2 : \u91c7\u7528\u5feb\u901f\u5bf9\u6bd4\u6570\u636e\u91cf\u5316\u6743\u91cd\u6570\u636e\u3002 L3 : \u5bf9\u7edf\u8ba1\u4fe1\u606f\u505a\u8fdb\u4e00\u6b65\u5206\u6790\uff0c\u8fd1\u4f3c\u62df\u5408\u539f\u6709\u6570\u636e\u5206\u5e03\u3002 L4 : \u8fd1\u4f3c\u62df\u5408\u6743\u91cd\u6570\u636e\u5206\u5e03\uff0c\u5e76\u5efa\u8bae\u5347\u7ea7\u67d0\u4e9b\u5377\u79ef\u4e3a16bit\u91cf\u5316\u3002 L5 : \u91c7\u7528\u9ad8\u7cbe\u5ea6\u6570\u636e\u5206\u6790\u65b9\u6cd5\uff0c\u6781\u5927\u9650\u5ea6\u62df\u5408\u539f\u6709\u6570\u636e\u5206\u5e03\uff0c\u5e76\u5efa\u8bae\u5347\u7ea7\u67d0\u4e9b\u5377\u79ef\u4e3a16bit\u91cf\u5316\u3002 --save_input : \u4fdd\u5b58\u524d\u5904\u7406\u540e\u7684\u6587\u4ef6\uff0c\u9ed8\u8ba4\u4e0d\u4fdd\u5b58\u3002\u6587\u4ef6\u4e3a\u6587\u672c\u6587\u4ef6\uff0c\u4fdd\u5b58\u5728\u8fd0\u884c\u8def\u5f84\u4e0b\uff0c\u6587\u4ef6\u540d\u4e3a\u201c\u56fe\u7247\u540d.\u6a21\u578b\u540d.data\u201d\u3002","title":"3.1.2 \u53ef\u9009\u53c2\u6570"},{"location":"module/User_Guide/Develop/Calibrate.html#313","text":"\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u6210\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u9700\u898130\u5f20\u5de6\u53f3\u8bad\u7ec3\u56fe\u7247\u7528\u6765\u5206\u6790\u548c\u91cf\u5316\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u7684\u6570\u636e\uff0c\u56e0\u6b64\u5728\u8f6c\u6362\u4e2d\uff0c -i/--image \u53c2\u6570\u540e\u5e94\u63a5\u56fe\u7247\u6587\u4ef6\u5939\u7684\u8def\u5f84\u3002\u5f53\u7136\uff0c\u5982\u679c -i/--image \u53c2\u6570\u7ed9\u5b9a\u5355\u5f20\u56fe\u7247\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u4f9d\u7136\u53ef\u4ee5\u8f6c\u6362\u4e3a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff0c\u4f46\u662f\u5176\u6a21\u578b\u7cbe\u5ea6\u53ef\u80fd\u4f1a\u6536\u5230\u5f71\u54cd\u3002\u53e6\u5916\uff0c\u7531\u4e8e\u5bf9\u7cbe\u5ea6\u8981\u6c42\u4e0d\u540c\uff0c\u5728\u8f6c\u6362\u7f51\u7edc\u4e2d\u5728input_config.ini\u6587\u4ef6\u4e2d\u53ef\u4ee5\u9488\u5bf9\u5377\u79ef\u914d\u7f6e\u4e0d\u540c\u7684\u91cf\u5316\u4fe1\u606f\uff0c\u4ece\u800c\u83b7\u5f97\u7cbe\u5ea6\u548c\u901f\u5ea6\u7684\u5e73\u8861\u3002 calibrator\u5de5\u5177\u4f1a\u5bfb\u627e\u7cfb\u7edf\u53d8\u91cf\u4ece\u800c\u83b7\u5f97\u5bf9\u5e94\u9636\u6bb5\u4efb\u52a1\u6240\u9700\u5de5\u5177\u8def\u5f84\uff0c\u56e0\u6b64\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u53c2\u6570 -t/--tool \u4e0d\u7528\u6307\u5b9a\u76f8\u5173\u5de5\u5177\u7684\u4f4d\u7f6e\u3002 \u4f7f\u7528calibrator\u5c06\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u4e3a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u65f6\uff0c\u4f1a\u5728\u8fd0\u884c\u76ee\u5f55\u4e0b\u4ea7\u751flog\u76ee\u5f55\uff0clog\u76ee\u5f55\u4e0b\u7684tensor_min_max.txt\u6587\u4ef6\u8bb0\u5f55\u4e86\u7f51\u7edc\u7684\u6bcf\u5c42\u8f93\u5165\u548c\u8f93\u51fa\u7684\u6700\u5927\u4e0e\u6700\u5c0f\u503c\uff0c\u5c06\u5728\u4e4b\u540e\u5206\u6790\u6570\u636e\u65f6\u6709\u7528\u3002log\u76ee\u5f55\u4e0b\u7684\u5185\u5bb9\u4f1a\u5728\u4e0b\u4e00\u6b21\u4f7f\u7528calibrator\u65f6\u5220\u9664\uff0c\u8bf7\u6ce8\u610f\u4fdd\u5b58\u3002","title":"3.1.3 \u6ce8\u610f\u4e8b\u9879"},{"location":"module/User_Guide/Develop/Calibrate.html#32","text":"\u7531\u4e8e\u4e0d\u540c\u7f51\u7edc\u6a21\u578b\u7684\u524d\u5904\u7406\u65b9\u5f0f\u4e0d\u5c3d\u76f8\u540c\uff0c\u4e3a\u4e86\u80fd\u591f\u5728\u8f6c\u6362\u7f51\u7edc\u65f6\u5c3d\u53ef\u80fd\u51cf\u5c0f\u7cbe\u5ea6\u7684\u4e22\u5931\uff0c\u5e94\u8be5\u4f7f\u7528\u4e0e\u8bad\u7ec3\u76f8\u540c\u7684\u56fe\u7247\u524d\u5904\u7406\u65b9\u5f0f\uff0c\u6bcf\u79cd\u524d\u5904\u7406\u65b9\u5f0f\u9700\u72ec\u7acb\u7f16\u5199python\u6587\u4ef6\u3002 \u4ee5\u4e0b\u4e24\u79cd\u65b9\u5f0f\u4fdd\u5b58\u524d\u5904\u7406Python\u6587\u4ef6\u5747\u53ef\u88ab\u8c03\u7528\uff1a \u8bf7\u5c06\u6587\u4ef6\u4fdd\u5b58\u5230 SGS_IPU_SDK/Scripts/calibrator/preprocess \u6587\u4ef6\u5939\u5185\uff0c\u5e76\u5728preprocess_method/ init .py \u6587\u4ef6\u4e2d\u589e\u52a0\u6587\u4ef6\u540d\u79f0\u3002\u5728\u4f7f\u7528calibrator\u6216simulator\u65f6\uff0c -n/--preprocess \u53c2\u6570\u4e3a\u7f16\u5199\u7684\u6587\u4ef6\u540d\u79f0\uff0c\u4e0d\u9700\u8981\u6307\u5b9a\u7f16\u5199\u6587\u4ef6\u7684\u8def\u5f84\u3002 -n/--preprocess \u53c2\u6570\u4e3a\u524d\u5904\u7406Python\u7684\u6587\u4ef6\u8def\u5f84\u3002 \u4e0b\u9762\u4ee5mobilenet_v1\u7f51\u7edc\u4e3a\u4f8b\uff0c\u7f16\u5199\u56fe\u7247\u524d\u5904\u7406\u6587\u4ef6\u3002 \u7f16\u5199\u56fe\u7247\u5904\u7406\u51fd\u6570\uff08\u51fd\u6570\u540d\u79f0\u4e0d\u9650\uff09\uff0c\u8fd4\u56denp.array \u683c\u5f0f\u7684\u56fe\u7247\u6570\u636e\uff0c\u51fd\u6570\u5fc5\u987b\u5305\u542b2\u4e2a\u53c2\u6570\uff1a \u56fe\u7247\u8def\u5f84 \u5f52\u4e00\u5316\u6807\u8bb0\uff08norm=True\uff09 \u5f52\u4e00\u5316\u6807\u8bb0\u662f\u4e3a\u4e86\u533a\u5206\u7f51\u7edc\u6a21\u578b\u662f\u5426\u662f\u6d6e\u70b9\u6a21\u578b\u3002\u56e0\u4e3a\u5728\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u9636\u6bb5\uff0c\u56fe\u7247\u7684\u5f52\u4e00\u5316\u9700\u8981\u5728\u9001\u8fdb\u7f51\u7edc\u524d\u5904\u7406\u597d\u3002\u4f46\u662f\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u548c\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u5df2\u7ecf\u5305\u542b\u4e86input_config.ini\u6587\u4ef6\u7684\u8bbe\u7f6e\u4fe1\u606f\uff0c\u80fd\u591f\u5c06\u56fe\u7247\u6570\u636e\u81ea\u884c\u505a\u5f52\u4e00\u5316\u5904\u7406\uff0c\u56e0\u6b64\u9001\u8fdb\u7f51\u7edc\u6a21\u578b\u7684\u6570\u636e\u4e0d\u9700\u8981\u505a\u5f52\u4e00\u5316\uff0c\u8fd9\u4e0e\u5728SigmaStar\u786c\u4ef6\u4e0a\u5904\u7406\u65b9\u5f0f\u76f8\u540c\u3002 import cv2 import tensorflow as tf def preprocess_mobilenet_v1 ( image_file , norm = True , resize_strategy = \"cv\" , central_crop =. 875 ): im = cv2 . imread ( image_file ) rgb = cv2 . cvtColor ( im , cv2 . COLOR_BGR2RGB ) # 1. central crop h , w = rgb . shape [ 0 ], rgb . shape [ 1 ] h_cropped = int ( h * central_crop ) w_cropped = int ( w * central_crop ) h_start = ( h - h_cropped ) // 2 h_end = h_cropped + h_start w_start = ( w - w_cropped ) // 2 w_end = w_cropped + w_start image = rgb [ h_start : h_end , w_start : w_end , :] # 2. resize to target shape ( scaled_w , scaled_h ) = ( 224 , 224 ) if resize_strategy == 'tf' : import tensorflow as tf image = np . expand_dims ( image , 0 ) tf_resized_image = tf . compat . v1 . image . resize_bilinear ( image , ( scaled_w , scaled_h )) with tf . Session (): resized_image = tf_resized_image . eval () else : cv_resized_image = cv2 . resize ( image , ( scaled_w , scaled_h )) resized_image = np . expand_dims ( cv_resized_image , 0 ) if norm : # normalize to [-1,1] normalized_image = ( 2.0 / 255.0 ) * resized_image - 1.0 else : normalized_image = resized_image return normalized_image \u4f7f\u7528image_preprocess\u51fd\u6570\u8c03\u7528\uff0c\u6b64\u5904\u52a1\u5fc5\u6309\u7167\u8be5\u65b9\u6cd5\u4e66\u5199\u3002 def image_preprocess ( img_path , norm = True ): return preprocess_mobilenet_v1 ( img_path , norm = norm ) \u4fdd\u5b58\u4e3a mobilenet_v1.py. \u5728SGS_IPU_SDK/Scripts/calibrator/preprocess_method/ init .py \u6587\u4ef6\u4e2d\u6dfb\u52a0\u521a\u521a\u7f16\u5199\u7684python\u6587\u4ef6 _all_ = [ 'caffe_mobilenet_v2' , 'caffe_resnet18' , 'caffe_resnet50_conv' , 'mobilenet_v1' ] \u4f7f\u7528calibrator\u6216simulator\u65f6 -n/--preprocess \u53c2\u6570\u4e3amobilenet_v1 \u5373\u53ef\u8c03\u7528\u521a\u521a\u7f16\u5199\u7684\u56fe\u7247\u524d\u5904\u7406\u6587\u4ef6\u3002 \u5982\u679c\u4e0d\u5728SGS_IPU_SDK/Scripts/calibrator/preprocess_method/ init .py \u6587\u4ef6\u4e2d\u589e\u52a0\uff0c -n/--preprocess \u53c2\u6570\u4e3amobilenet_v1.py\u6587\u4ef6\u8def\u5f84\uff0c\u4e5f\u53ef\u4ee5\u4e3a\u56fe\u7247\u505a\u524d\u5904\u7406\u3002","title":"3.2. \u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5"},{"location":"module/User_Guide/Develop/Calibrate.html#33","text":"\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u5230\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u65f6\uff0c\u5377\u79ef\u91cf\u5316\u652f\u6301 UINT8 \u548c INT16 \u4e24\u79cd\u91cf\u5316\u65b9\u5f0f\u3002\u4f7f\u7528calibrator\u65f6\uff0c --quant_level \u9009\u62e9L2\u3001L3\u6216L4\u65f6\u4f1a\u6839\u636e\u7edf\u8ba1\u4fe1\u606f\u81ea\u52a8\u914d\u7f6e\u5377\u79ef\u7684\u91cf\u5316\u65b9\u5f0f\uff0c\u5982\u679c\u9700\u8981\u5f3a\u5236\u6307\u5b9a\uff0c\u6307\u5b9a\u65b9\u5f0f\u5728 [2.2.3 CONV_CONFIG]\u4e2d\u6709\u8bf4\u660e\u3002\u53ef\u5bf9\u67d0\u4e9b\u5377\u79ef\u5c42\u5355\u72ec\u8bbe\u7f6eINT16\u91cf\u5316\uff0c\u6216\u8005\u5bf9\u5168\u90e8\u5377\u79efINT16\u91cf\u5316\uff1b\u4e0d\u8bbe\u7f6e\u65f6\u9ed8\u8ba4\u4f7f\u7528calibrator\u7684\u63a8\u8350\u91cf\u5316\u65b9\u5f0f\u3002","title":"3.3. \u5377\u79ef\u91cf\u5316\u9009\u9879"},{"location":"module/User_Guide/Develop/Calibrate.html#34-calibrator_customcalibrator","text":"calibrator_custom.calibrator\u662f\u57fa\u4e8ePython\u7684\u5feb\u901f\u91cf\u5316\u548c\u8f6c\u6362\u6a21\u578b\u7684\u6a21\u5757\u3002\u4f7f\u7528calibrator_custom.calibrator\u53ef\u4ee5\u66f4\u65b9\u4fbf\u7075\u6d3b\u7684\u5bf9\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u8fdb\u884c\u91cf\u5316\u548c\u8f6c\u6362\u3002\u76ee\u524d\u57fa\u4e8e\u7684docker\u73af\u5883\uff0c\u63d0\u4f9bPython3.5\u7684\u9884\u7f16\u8bd1\u7684Python\u6a21\u5757\uff0c\u4f7f\u7528\u65b9\u6cd5\u548c\u76f8\u5173API\u63a5\u53e3\u5982\u4e0b\uff1a import calibrator_custom model_path = './mobilenet_v2_float.sim' input_config_path = './input_config.ini' model = calibrator_custom . calibrator ( model_path , input_config_path ) \u4f7f\u7528 calibrator_custom.calibrator \u65f6\uff0c\u9700\u8981\u7ed9\u5b9afloat.sim\u6a21\u578b\u7684\u8def\u5f84\u548c\u5bf9\u5e94\u7684input_config.ini\u7684\u8def\u5f84\uff0c\u7528\u4e8e\u521b\u5efacalibrator\u7684\u5b9e\u4f8b\u3002\u53c2\u6570\u7ed9\u5b9a\u9519\u8bef\uff0c\u5c06\u65e0\u6cd5\u6210\u529f\u521b\u5efacalibrator\u5b9e\u4f8b\uff0c\u5e76\u8fd4\u56deValueError\u3002","title":"3.4. calibrator_custom.calibrator"},{"location":"module/User_Guide/Develop/Calibrate.html#341-calibrator_customcalibrator","text":"get_input_details \u8fd4\u56de\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u4fe1\u606f\uff08list\uff09 input_details = model . get_input_details () >>> print ( input_details ) [{ 'index' : 0 , 'shape' : array ([ 1 , 513 , 513 , 3 ], dtype = int32 ), 'name' : 'sub_7' , 'dtype' : < class ' numpy . float32 '>}] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578b\u8f93\u5165\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a index : \u8f93\u5165Tensor\u5e8f\u53f7 name : \u8f93\u5165Tensor\u540d\u79f0 shape : \u8f93\u5165Tensor\u7684\u5f62\u72b6 dtype : \u8f93\u5165Tensor\u7684\u6570\u636e\u7c7b\u578b get_output_detail \u8fd4\u56de\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u4fe1\u606f\uff08list\uff09 output_details = model . get_output_details () >>> print ( output_details ) [{ 'index' : 0 , 'shape' : array ([ 1 , 257 , 257 , 30 ], dtype = int32 ), 'name' : 'MobilenetV2/Conv/Conv2D' , 'dtype' : < class ' numpy . float32 '>}] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578b\u8f93\u51fa\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a index : \u8f93\u51faTensor\u5e8f\u53f7 name : \u8f93\u51faTensor\u540d\u79f0 shape : \u8f93\u51faTensor\u7684\u5f62\u72b6 dtype : \u8f93\u51faTensor\u7684\u6570\u636e\u7c7b\u578b set_input \u8bbe\u7f6e\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u6570\u636e model . set_input ( 0 , img_data ) \u8f93\u5165\u6570\u636e\uff0c0\u4e3a\u8f93\u5165Tensor\u7684index\uff0c\u53ef\u4ee5\u5728get_input_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230\u3002img_data\u662f\u4e0emodel\u8f93\u5165shape\u548cdtype\u76f8\u540c\u7684numpy.ndarray\u683c\u5f0f\u6570\u636e\uff0c\u9519\u8bef\u7684shape\u6216dtype\uff0c\u5c06\u5bfc\u81f4set_input\u8fd4\u56deValueError\u3002\u5982\u679c\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u53ef\u4ee5\u591a\u6b21\u8c03\u7528set_input\uff0c\u6839\u636eget_input_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230index\u8bbe\u7f6e\u5bf9\u5e94Tensor\u7684\u8f93\u5165\u6570\u636e\u3002 invoke \u6a21\u578b\u8fd0\u884c\u4e00\u6b21 model . invoke () \u8c03\u7528invoke\u524d\u8bf7\u5148\u4f7f\u7528set_input\u8bbe\u7f6e\u8f93\u5165\u6570\u636e\uff0c\u672a\u8c03\u7528set_input\u76f4\u63a5\u8c03\u7528invoke\u4f1a\u8fd4\u56deValueError\u3002 get_output \u83b7\u53d6\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u6570\u636e result = model . get_output ( 0 ) \u83b7\u53d6\u8f93\u51fa\u6570\u636e\uff0c0\u4e3a\u8f93\u51faTensor\u7684index\uff0c\u53ef\u4ee5\u5728get_output_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230\uff0c\u8fd4\u56denumpy.ndarray\u683c\u5f0f\u8f93\u51fa\u6570\u636e\u3002\u5982\u679c\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u51fa\uff0c\u53ef\u4ee5\u591a\u6b21\u8c03\u7528get_output\uff0c\u6839\u636eget_output_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230index\u83b7\u53d6\u5bf9\u5e94Tensor\u7684\u8f93\u51fa\u6570\u636e\u3002 get_tensor_details \u8fd4\u56de\u7f51\u7edc\u6a21\u578b\u6bcf\u4e2aTensor\u7684\u4fe1\u606f\uff08list\uff09 tensor_details = model . get_tensor_details () >>> print ( tensor_details ) [{ 'dtype' : 'FLOAT32' , 'name' : 'MobilenetV2/Conv/Conv2D' , 'qtype' : 'INT16' , 'shape' : array ([ 1 , 257 , 257 , 30 ], dtype = int32 )}, { 'dtype' : 'FLOAT32' , 'name' : 'MobilenetV2/Conv/Conv2D_bias' , 'qtype' : 'INT16' , 'shape' : array ([ 2 , 30 ], dtype = int32 )}, { 'dtype' : 'FLOAT32' , 'name' : 'MobilenetV2/Conv/weights/read' , 'qtype' : 'INT8' , 'shape' : array ([ 30 , 3 , 3 , 3 ], dtype = int32 )}, { 'dtype' : 'FLOAT32' , 'name' : 'sub_7' , 'qtype' : 'UINT8' , 'shape' : array ([ 1 , 513 , 513 , 3 ], dtype = int32 )}] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578bTensor\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a name : Tensor\u540d\u79f0 shape : Tensor\u7684\u5f62\u72b6 dtype : Tensor\u7684\u6570\u636e\u7c7b\u578b qtype : \u5b9a\u70b9\u6a21\u578b\u8be5Tensor\u53ef\u80fd\u7684\u6570\u636e\u7c7b\u578b\uff08quantization type\uff09","title":"3.4.1 calibrator_custom.calibrator\u65b9\u6cd5"},{"location":"module/User_Guide/Develop/Calibrate.html#342-calibrator_customsim_calibrator","text":"\u5bf9\u4e8e\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u540c\u65f6\u8f6c\u6362\u65f6\uff0c\u63d0\u4f9bcalibrator_custom.SIM_Calibrator\uff0c\u65b9\u4fbf\u8fdb\u884c\u7b80\u5355\u5b9a\u4e49\u540e\uff0c\u7edf\u4e00\u8f6c\u6362\u3002 calibrator_custom.SIM_Calibrator\u662f\u5df2\u7ecf\u5b9e\u73b0\u597d\u7684class\uff0c\u5f53\u4e2d\u53ea\u6709forward\u65b9\u6cd5\u672a\u5b9e\u73b0\uff0c\u4f7f\u7528\u65f6\u4ec5\u9700\u5b9e\u73b0\u8be5\u65b9\u6cd5\uff0c\u5373\u53ef\u8f6c\u6362\u5b8c\u6210\u3002 \u4e0b\u9762\u4ee5**SGS_IPU_SDK/Scripts/examples/sim_calibrator.py**\u4e3a\u4f8b\uff0c\u8bf4\u660ecalibrator_custom.SIM_Calibrator\u7684\u4f7f\u7528\u65b9\u6cd5\uff1a import calibrator_custom class Net ( calibrator_custom . SIM_Calibrator ): def __init__ ( self ): super () . __init__ () self . model = calibrator_custom . calibrator ( model_path , input_config ) def forward ( self , x ): out_details = self . model . get_output_details () self . model . set_input ( 0 , x ) self . model . invoke () result_list = [] for idx in range ( len ( out_details )): result = self . model . get_output ( idx ) result_list . append ( result ) return result_list \u5b9a\u4e49forward\u65b9\u6cd5\uff0cforward\u7684\u53c2\u6570\u4e3a\u6a21\u578b\u8f93\u5165\uff0c\u5982\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u53ef\u589e\u52a0forward\u7684\u53c2\u6570\u3002 \u521b\u5efacalibrator_custom.SIM_Calibrator\u7684\u5b9e\u4f8b net = Net () \u8c03\u7528calibrator_custom.SIM_Calibrator\u7684convert\u65b9\u6cd5 net . convert ( img_gen , fix_model = [ out_model_path ]) convert\u65b9\u6cd5\u5fc5\u987b\u8f93\u5165\u4e24\u4e2a\u53c2\u6570\uff1a\u56fe\u7247\u751f\u6210\u5668\u3001fixed.sim\u6a21\u578b\u7684\u4fdd\u5b58\u8def\u5f84list\u3002 \u56fe\u7247\u751f\u6210\u5668\uff08img_gen\uff09 \u4e3a\u65b9\u4fbf\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u8f6c\u6362\u6a21\u578b\uff0c\u901a\u8fc7\u751f\u6210\u5668\u65b9\u4fbf\u7ec4\u7ec7\u8f93\u5165\u56fe\u7247\u7684\u5e8f\u5217\u3002\u5982\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u751f\u6210\u5668\u5e94\u8be5\u6309\u7167\u5b9a\u4e49forward\u65f6\u7684\u8f93\u5165\u987a\u5e8f\uff0c\u8fd4\u56de\u6709\u591a\u4e2anumpy.ndarray\u7684list\u3002 calibrator_custom.utils.image_preprocess_func\u4f7f\u7528\u9884\u5148\u5b9a\u4e49\u597d\u7684\u524d\u5904\u7406\u65b9\u6cd5\u3002 preprocess_func = calibrator_custom . utils . image_preprocess_func ( model_name ) def image_generator ( folder_path , preprocess_func ): images = [ os . path . join ( folder_path , img ) for img in os . listdir ( folder_path )] for image in images : img = preprocess_func ( image ) yield [ img ] img_gen = image_generator ( './images' , preprocess_func ) fixed.sim\u6a21\u578b\u7684\u4fdd\u5b58\u8def\u5f84list \u5982\u679c\u5728__init__\u4e2d\u5b9a\u4e49\u591a\u4e2a\u6a21\u578b\uff0cfixed\u6a21\u578b\u7684\u4fdd\u5b58\u8def\u5f84list\u5e94\u8be5\u6309\u7167__init__\u4e2d\u5b9a\u4e49\u6a21\u578b\u7684\u987a\u5e8f\uff0c\u4f9d\u6b21\u547d\u540d\u3002 \u5176\u4ed6\u53ef\u9009\u53c2\u6570\uff1a num_process: \u8fdb\u7a0b\u6570\uff0c\u8fd0\u884c\u540c\u65f6\u8fd0\u884c\u7684CPU\u6570\u91cf quant_level: \u9009\u62e9\u91cf\u5316\u7b49\u7ea7\uff1a[L1, L2, L3, L4, L5]\uff0c\u9ed8\u8ba4L5\u91cf\u5316\u7b49\u7ea7\uff0c\u5177\u4f53\u542b\u4e49\u8be6\u89c13.1.2\u8282Calibrator\u7684\u53ef\u9009\u53c2\u6570\u4f7f\u7528\u65b9\u6cd5\u3002 quant_param: \u91cf\u5316\u5bfc\u5165\u53c2\u6570\u3002\u5982\u679c\u5df2\u6709\u5bf9\u5e94\u6a21\u578b\u7684\u91cf\u5316\u53c2\u6570\uff0c\u53ef\u4ee5\u5c06\u91cf\u5316\u7684\u53c2\u6570\u5728\u6a21\u578b\u8f6c\u6362\u4e2d\u5bfc\u5165\u3002","title":"3.4.2 calibrator_custom.SIM_Calibrator"},{"location":"module/User_Guide/Develop/Calibrate.html#343","text":"","title":"3.4.3 \u5bfc\u5165\u91cf\u5316\u53c2\u6570\u89c4\u5219"},{"location":"module/User_Guide/Develop/Calibrate.html#3431","text":"Conv2D\u7684\u91cf\u5316\u65b9\u6cd5 Conv2D\u7684\u91cf\u5316\u5206\u4e3a\u8f93\u5165\u3001Weights\u548c\u8f93\u51fa\uff0c\u76ee\u524d\u652f\u63018bit\uff0c16bit\u91cf\u5316\u3002 \u6839\u636e\u7edf\u8ba1\u5f97\u5230\u7684\u8f93\u5165\u3001Weights\u548c\u8f93\u51fa\u7684min\u548cmax\u503c\uff0c\u9996\u5148\u63d0\u524d\u5c06Weights\u91cf\u5316\u5230\u5b9a\u70b9\u6570\u636e\uff0c\u4fdd\u5b58\u5728fixed\u7684\u7f51\u7edc\u5185\u90e8\uff0c\u518d\u5728\u7f51\u7edc\u8fd0\u884c\u65f6\u52a8\u6001\u91cf\u5316\u8f93\u5165\u548c\u8f93\u51fa\u6570\u636e\u3002Weights\u7684min\u548cmax\u503c\u7684\u4e2a\u6570\u7531kernel\u7684\u4e2a\u6570\u51b3\u5b9a\uff0c\u8f93\u5165\u548c\u8f93\u51fa\u7684min\u548cmax\u503c\u7684\u4e2a\u6570\u7531\u8f93\u5165\u8f93\u51fa\u7684C\u7ef4\u5ea6\u51b3\u5b9a\u3002\u5982\u679c\u4f7f\u75288bit\u91cf\u5316\uff0cConv2D\u7684\u8f93\u5165\u4e3aUINT8\uff08\u76f8\u5f53\u4e8eINT9\u7684\u8868\u8fbe\u80fd\u529b\uff09\uff0cWeights\u4e3aINT8\uff1b\u5982\u679c\u4f7f\u752816bit\u91cf\u5316\uff0cConv2D\u7684\u8f93\u5165\u548cWeights\u5747\u4e3aINT16\u3002 DepthwiseConv2D\u7684\u91cf\u5316\u65b9\u6cd5 DepthwiseConv2D\u7684\u91cf\u5316\u5206\u4e3a\u8f93\u5165\u3001Weights\u548c\u8f93\u51fa\uff0c\u76ee\u524d\u652f\u63018bit\uff0c16bit\u91cf\u5316\u3002 \u6839\u636e\u7edf\u8ba1\u5f97\u5230\u7684\u8f93\u5165\u3001Weights\u548c\u8f93\u51fa\u7684min\u548cmax\u503c\uff0c\u9996\u5148\u63d0\u524d\u5c06Weights\u91cf\u5316\u5230\u5b9a\u70b9\u6570\u636e\uff0c\u4fdd\u5b58\u5728fixed\u7684\u7f51\u7edc\u5185\u90e8\uff0c\u518d\u5728\u7f51\u7edc\u8fd0\u884c\u65f6\u52a8\u6001\u91cf\u5316\u8f93\u5165\u548c\u8f93\u51fa\u6570\u636e\u3002Weights\u3001\u8f93\u5165\u548c\u8f93\u51fa\u7684min\u548cmax\u503c\u7684\u4e2a\u6570\u5747\u7531\u5bf9\u5e94Tensor\u7684C\u7ef4\u5ea6\u51b3\u5b9a\u3002\u5982\u679c\u4f7f\u75288bit\u91cf\u5316\uff0cDepthwiseConv2D\u7684\u8f93\u5165\u4e3aUINT8\uff08\u76f8\u5f53\u4e8eINT9\u7684\u8868\u8fbe\u80fd\u529b\uff09\uff0cWeights\u4e3aINT8\uff1b\u5982\u679c\u4f7f\u752816bit\u91cf\u5316\uff0cDepthwiseConv2D\u7684\u8f93\u5165\u548cWeights\u5747\u4e3aINT16\u3002 \u5176\u4ed6Op\u91cf\u5316\u65b9\u6cd5 \u7f51\u7edc\u4e2d\u5176\u4ed6\u7b97\u5b50\u7684\u91cf\u5316min\u548cmax\u5747\u57fa\u4e8eC\u7ef4\u5ea6\u6570\u91cf\uff0c\u4ec5\u652f\u630116bit\u91cf\u5316\u3002\u8c03\u7528calibrator_custom.calibrator\u7684get_tensor_details\u65b9\u6cd5\u53ef\u4ee5\u4eceqtype\u4e2d\u5f97\u77e5\u8be5Tensor\u5728\u5b9a\u70b9\u6a21\u578b\u65f6\u7684data type\u3002","title":"3.4.3.1. \u91cf\u5316\u7b56\u7565\u548c\u65b9\u6cd5"},{"location":"module/User_Guide/Develop/Calibrate.html#3432","text":"\u57fa\u4e8e\u4e0a\u8ff0\u91cf\u5316\u7684\u7b56\u7565\u548c\u65b9\u6cd5\uff0c\u9700\u8981\u4e3aTensor\u63d0\u4f9b\u5982\u4e0b\u4fe1\u606f\uff1a Tensor\u7684\u540d\u5b57\uff08name\uff09[str] \u7b97\u5b50\u7c7b\u578b\u63d0\u4f9b\u5bf9\u5e94\u6570\u91cf\u7684min\uff0cmax\u3002[list] \u91cf\u5316bit\u4f4d\u3002[int] \u5e38\u91cfTensor\u6570\u636e\uff08data\uff09\uff08\u53ef\u9009\uff09[numpy.ndarray] \u4e0b\u8868\u5c55\u793a\u4e86\u5bf9\u5e94\u7684\u53c2\u6570\u65b9\u5f0f\uff0c\u6574\u4e2a\u53c2\u6570\u4e3alist\uff0c\u5176\u4e2d\u6bcf\u4e2aitem\u662f\u4e00\u4e2adict\uff0c\u5305\u542b\u4e0a\u8ff0\u4fe1\u606f\u3002 [ { \"name\" : \"FeatureExtractor/MobilenetV2/Conv2d_0/weights\" , \"min\" : [ - 4.555312 , - 2.876907 , - 1.234419 ], \"max\" : [ 7.364561 , 3.960804 , 6.0 ], \"bit\" : 8 }, { ... }, ... ] \u793a\u4f8bSGS_IPU_SDK/Scripts/examples/sim_calibrator.py\u4e2d\u5df2\u5b8c\u6210\u4e86\u53c2\u6570\u5bfc\u5165\uff0c\u53ef\u4ee5\u63d0\u4f9bjson\u548cpkl\u6587\u4ef6\u7684\u8bfb\u53d6\u548c\u5bfc\u5165\u3002","title":"3.4.3.2. \u91cf\u5316\u53c2\u6570\u7684\u5185\u5bb9"},{"location":"module/User_Guide/Develop/Calibrate.html#3433","text":"\u4e3a\u4e86\u517c\u5bb9\u539f\u6709\u91cf\u5316\u6d41\u7a0b\uff0c\u539f\u6709\u91cf\u5316\u6240\u91c7\u7528\u7684\u7b56\u7565\u4f9d\u7136\u8fdb\u884c\u3002 \u539f\u59cb\u6a21\u578b\u5728\u8f6c\u6210SGS_Float\u6a21\u578b\u4ee5\u540e\uff0c\u4e00\u4e9b\u7b97\u5b50\u4f1a\u88ab\u5408\u5e76\u548c\u4f18\u5316\uff0c\u8ba1\u7b97\u56fe\u4e0e\u539f\u6846\u67b6\u7684\u6a21\u578b\u6709\u8f83\u5927\u5dee\u5f02\u3002\u6240\u63d0\u4f9b\u7684\u91cf\u5316\u6587\u4ef6\u5185\u5bb9\u9700\u57fa\u4e8e\u5df2\u8f6c\u6210\u7684SGS_Float\u6a21\u578b\u9488\u5bf9\u6027\u8c03\u6574\uff0c\u5982Tensor\u540d\u79f0\u7b49\u4fe1\u606f\u3002 \u4e3a\u65b9\u4fbf\u4fee\u6539\u88ab\u5408\u5e76\u548c\u4f18\u5316\u7684\u5c42\uff0c\u53ef\u4ee5\u4f7f\u7528calibrator_custom.calibrator\u7684get_tensor_details\u65b9\u6cd5\u83b7\u53d6Tensor\u7684\u57fa\u672c\u4fe1\u606f\u3002\u53ef\u4ee5\u83b7\u5f97\u6bcf\u4e2aTensor\u7684name\uff0cshape\uff0cdtype\uff0cqtype\u4fe1\u606f\u3002 \u8f6c\u6362\u597d\u7684fixed\u6a21\u578b\u53ef\u4ee5\u4f7f\u7528calibrator_custom.fixed_simulator\u7684get_tensor_details\u65b9\u6cd5\u83b7\u53d6Tensor\u7684\u57fa\u672c\u4fe1\u606f\uff0c\u53ef\u4ee5\u83b7\u5f97\u6bcf\u4e2aTensor\u7684name\uff0cshape\uff0cmin\uff0cmax\uff0cquantization\uff0cdtype\u4fe1\u606f\u3002 \u6839\u636e\u6a21\u578bTensor\u4fe1\u606f\uff0c\u66f4\u65b0\u539f\u59cb\u6a21\u578b\u7684\u91cf\u5316\u6587\u4ef6\u540e\uff0c\u5373\u53ef\u5bfc\u5165\u91cf\u5316\u6570\u636e\u6587\u4ef6\u3002 \u89e3\u6790\u5b8c\u91cf\u5316\u6587\u4ef6\u540e\uff0c\u4f1a\u5339\u914d\u5df2\u6709\u91cf\u5316\u4fe1\u606f\u4e0e\u5bfc\u5165\u7684\u91cf\u5316\u4fe1\u606f\u3002\u4f18\u5148\u4f7f\u7528\u5bfc\u5165\u7684\u91cf\u5316\u4fe1\u606f\uff0c\u4f46\u4e0d\u6392\u9664\u5728\u5408\u5e76\u65f6\u7531\u4e8e\u5bfc\u5165\u4fe1\u606f\u7684\u4e0d\u5408\u7406\u800c\u653e\u5f03\u4f7f\u7528\u3002","title":"3.4.3.3. \u5bfc\u5165\u91cf\u5316\u6570\u636e\u6d41\u7a0b"},{"location":"module/User_Guide/Develop/Compile.html","text":"4. COMPILER \u00b6 Compiler\u5de5\u5177\u4f4d\u7f6e\u5728 ~/SGS_IPU_SDK/SRC/Tool/Scripts/calibrator/compiler.py \u3002 \u8be5\u5de5\u5177\u662f\u5c06SigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u4e3aSigmaStar\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u3002 \u5728SGS_IPU_SDK \u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK/Project make distclean ;source build/{IPU_Version}/cfg_cmodel_fixed_record_offline.sh ;make -j32 (IPU_Version \u53ef\u9009\u62e9IPU100,IPU200M,IPU260) \u8fdb\u5165\u5230\u8be5\u5de5\u5177\u76ee\u5f55\uff0c\u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ~/SGS_IPU_SDK/SRC/Tool/Scripts/calibrator/compiler.py --model ~/tensorflow_ssd/ssd_mobilenet_v1_fixed.sim \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a -m , --model : \u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 \u53ef\u9009\u53c2\u6570\uff1a -c , --category : \u6a21\u578b\u7684\u7c7b\u522b\uff0c\u4e3b\u8981\u6709Classification / Detection / Unknown\u3002 Classification : \u6a21\u578b\u67091\u4e2a\u8f93\u51fa\uff0c\u4f1a\u6839\u636e\u8f93\u51fa\u6392\u5e8f\u8f93\u51fa\u5206\u6570\u7531\u9ad8\u81f3\u4f4e\u7684\u524d5\u4e2a\u3002 Detection : \u6a21\u578b\u67094\u4e2a\u8f93\u51fa\uff0c\u4f1a\u6839\u636e\u8f93\u51fa\u8f6c\u6362\u4e3a\u8f93\u5165\u56fe\u7247\u7684bbox\u4f4d\u7f6e\u4ee5\u53ca\u7c7b\u522b\u3002\u53ea\u652f\u6301SigmaStar\u540e\u5904\u7406\u7b97\u5b50[SigmaStar\u540e\u5904\u7406\u6a21\u5757]\u3002\u5176\u4ed6\u540e\u5904\u7406\u8bf7\u4f7f\u7528Unknown\u3002 Unknown : \u6a21\u578b\u8f93\u51fa\u4e0d\u5c5e\u4e8e\u4e0a\u8ff0\u4e24\u79cd\u7c7b\u578b\uff0c\u4f1a\u8f93\u51fa\u5168\u90e8\u7684Tensor\u6570\u503c\u3002\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u5230\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u65f6\u9ed8\u8ba4\u4e3aUnknown\u3002 -o , --output : \u6a21\u578b\u8f93\u51fa\u8def\u5f84\u3002\u6307\u5b9a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u6570\u636e\u4f4d\u7f6e\uff1a\u6307\u5b9a\u5230\u6587\u4ef6\u5939\uff0c\u5c06\u81ea\u52a8\u4ee5\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u524d\u7f00\u547d\u540d\uff0c\u540e\u63a5sgsimg.img\uff1b\u6307\u5b9a\u5230\u5177\u4f53\u8def\u5f84\u548c\u6587\u4ef6\u540d\uff0c\u5c06\u4ee5\u6307\u5b9a\u8def\u5f84\u548c\u6587\u4ef6\u540d\u547d\u540d\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff1b\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\uff0c\u5c06\u4ee5\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u50a8\u5b58\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u3002","title":"Compile"},{"location":"module/User_Guide/Develop/Compile.html#4-compiler","text":"Compiler\u5de5\u5177\u4f4d\u7f6e\u5728 ~/SGS_IPU_SDK/SRC/Tool/Scripts/calibrator/compiler.py \u3002 \u8be5\u5de5\u5177\u662f\u5c06SigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u4e3aSigmaStar\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u3002 \u5728SGS_IPU_SDK \u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK/Project make distclean ;source build/{IPU_Version}/cfg_cmodel_fixed_record_offline.sh ;make -j32 (IPU_Version \u53ef\u9009\u62e9IPU100,IPU200M,IPU260) \u8fdb\u5165\u5230\u8be5\u5de5\u5177\u76ee\u5f55\uff0c\u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ~/SGS_IPU_SDK/SRC/Tool/Scripts/calibrator/compiler.py --model ~/tensorflow_ssd/ssd_mobilenet_v1_fixed.sim \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a -m , --model : \u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 \u53ef\u9009\u53c2\u6570\uff1a -c , --category : \u6a21\u578b\u7684\u7c7b\u522b\uff0c\u4e3b\u8981\u6709Classification / Detection / Unknown\u3002 Classification : \u6a21\u578b\u67091\u4e2a\u8f93\u51fa\uff0c\u4f1a\u6839\u636e\u8f93\u51fa\u6392\u5e8f\u8f93\u51fa\u5206\u6570\u7531\u9ad8\u81f3\u4f4e\u7684\u524d5\u4e2a\u3002 Detection : \u6a21\u578b\u67094\u4e2a\u8f93\u51fa\uff0c\u4f1a\u6839\u636e\u8f93\u51fa\u8f6c\u6362\u4e3a\u8f93\u5165\u56fe\u7247\u7684bbox\u4f4d\u7f6e\u4ee5\u53ca\u7c7b\u522b\u3002\u53ea\u652f\u6301SigmaStar\u540e\u5904\u7406\u7b97\u5b50[SigmaStar\u540e\u5904\u7406\u6a21\u5757]\u3002\u5176\u4ed6\u540e\u5904\u7406\u8bf7\u4f7f\u7528Unknown\u3002 Unknown : \u6a21\u578b\u8f93\u51fa\u4e0d\u5c5e\u4e8e\u4e0a\u8ff0\u4e24\u79cd\u7c7b\u578b\uff0c\u4f1a\u8f93\u51fa\u5168\u90e8\u7684Tensor\u6570\u503c\u3002\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u5230\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u65f6\u9ed8\u8ba4\u4e3aUnknown\u3002 -o , --output : \u6a21\u578b\u8f93\u51fa\u8def\u5f84\u3002\u6307\u5b9a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u6570\u636e\u4f4d\u7f6e\uff1a\u6307\u5b9a\u5230\u6587\u4ef6\u5939\uff0c\u5c06\u81ea\u52a8\u4ee5\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u524d\u7f00\u547d\u540d\uff0c\u540e\u63a5sgsimg.img\uff1b\u6307\u5b9a\u5230\u5177\u4f53\u8def\u5f84\u548c\u6587\u4ef6\u540d\uff0c\u5c06\u4ee5\u6307\u5b9a\u8def\u5f84\u548c\u6587\u4ef6\u540d\u547d\u540d\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff1b\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\uff0c\u5c06\u4ee5\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u50a8\u5b58\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u3002","title":"4. COMPILER"},{"location":"module/User_Guide/Develop/Convert.html","text":"2.1. \u4f7f\u7528\u65b9\u6cd5 \u00b6 Convert Tool\u5de5\u5177\u7684\u4f4d\u7f6e\u5728 ~/SGS_IPU_SDK/SRC/Tool/Scripts/ConvertTool/ConvertTool.py \u3002 \u76ee\u524dConvert Tool\u652f\u6301\u4ecetensorflow_graphdef\uff0ctensorflow_savemodel\uff0ckeras\uff0ctflite\uff0ccaffe\uff0connx \u516d\u79cd\u6846\u67b6\u6a21\u578b\u8f6c\u6362\u4e3aSGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u3002 \u4f7f\u7528\u524d\u5148\u5728SGS_IPU_SDK\u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK/Project make distclean ;source build/{IPU_Version}/cfg_cmodel_float.sh ;make -j32 (IPU_Version \u53ef\u9009\u62e9IPU100,IPU200M,IPU260) ln -s ~/SGS_IPU_SDK/SRC/Tool/Scripts/ConvertTool/ConvertTool.py ConvertTool.py \u4e0b\u9762\u662fConvert Tool\u76ee\u524d\u652f\u6301\u7684platform information\uff1a python3 ConvertTool.py -h usage : ConvertTool.py [-h] {tensorflow_graphdef,tensorflow_savemodel,keras,tflite,caffe} ... Convert Tool positional arguments : {tensorflow_graphdef,tensorflow_savemodel,keras,tflite,caffe} platform info tensorflow_graphdef tensorflow graphdef commands tensorflow_savemodel tensorflow save_model commands keras keras commands tflite tflite commands caffe caffe commands optional arguments : -h, --help show this help message and exit \u5982\u679c\u60f3\u8fdb\u4e00\u6b65\u770b\u770b\u5404\u4e2a\u5e73\u53f0\u8f6c\u6362\u6240\u9700\u8981\u7684\u53c2\u6570\u4fe1\u606f\uff0c\u53ef\u4ee5\u6267\u884c python3 ConvertTool.py {platform} \u2013h \uff0c\u5404\u4e2a\u5e73\u53f0\u5177\u4f53\u4fe1\u606f\u548c\u67e5\u770b\u6307\u4ee4\u5982\u4e0b\uff1a 2.1.1 tensorflow_graphdef \u6846\u67b6\u6307\u4ee4 \u00b6 python3 ConvertTool.py tensorflow_graphdef -h usage : ConvertTool.py tensorflow_graphdef [-h] --graph_def_file GRAPH_DEF_FILE --input_arrays INPUT_ARRAYS --output_arrays OUTPUT_ARRAYS --input_config INPUT_CONFIG --output_file OUTPUT_FILE --input_shapes INPUT_SHAPES (optional) --debug (optional) optional arguments : -h, --help show this help message and exit. --graph_def_file GRAPH_DEF_FILE Full filepath of file containing frozen GraphDef. --input_arrays INPUT_ARRAYS Names of the input arrays, comma-separated. --output_arrays OUTPUT_ARRAYS Names of the output arrays, comma-separated. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth. Default : None --debug Run gdb in Debug mode. Default : False. \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ~/SGS_IPU_SDK/SRC/Tool/Scripts/ConvertTool/ConvertTool.py tensorflow_graphdef \\ --graph_def_file ~/SGS_IPU_SDK/SGS_Models/tensorflow/resnet_v2_50/resnet_v2_50.pb \\ --output_file ./resnet_v2_float.sim \\ --input_arrays input \\ --output_arrays resnet_v2_50/predictions/Reshape_1 \\ --input_shapes 1,299,299,3 \\ --input_config ~/SGS_IPU_SDK/SGS_Models/tensorflow/resnet_v2_50/input_config.ini \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a --graph_def_file : \u8f93\u5165\u7684\u6a21\u578b\u4e3aTensorFlow frozen\u7684graphdef\u7684pb\u683c\u5f0f\u6587\u4ef6\u8def\u5f84\u3002 --output_file : \u8f93\u51fa\u7684\u6a21\u578b\u6587\u4ef6\uff0cflatbuffer\u683c\u5f0f\uff0csim\u540e\u7f00\u6587\u4ef6\u3002 --input_arrays : \u7f51\u7edc\u8f93\u5165Tensor\u7684\u540d\u5b57\uff0c\u4ee5\u5b57\u7b26\u4e32\u7c7b\u578b\u6307\u5b9a\uff0c\u591a\u4e2ainputs\u7684\u8bdd\uff0c\u4e2d\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0c\u5982\uff1a--input_arrays='Input1','Input2'\u3002 --output_arrays : \u7f51\u7edc\u8f93\u51faTensor\u7684\u540d\u5b57\uff0c\u4ee5\u5b57\u7b26\u4e32\u7c7b\u578b\u6307\u5b9a\uff0c\u591a\u4e2aoutputs\u7684\u8bdd\uff0c\u4e2d\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\u3002 --input_shapes : \u7f51\u7edc\u8f93\u5165Tensor\u7684shape\uff0c\u683c\u5f0f\u4e3aNHWC\uff0cdimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0cshape\u4e2a\u6570\u548cinputs\u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 2.1.2 tensorflow_savemodel \u6846\u67b6\u6307\u4ee4 \u00b6 python3 ConvertTool.py tensorflow_savemodel -h usage : ConvertTool.py tensorflow_savemodel [-h] --saved_model_dir SAVED_MODEL_DIR [--input_arrays INPUT_ARRAYS] [--input_shapes INPUT_SHAPES] [--output_arrays OUTPUT_ARRAYS] [--tag_set TAG_SET] [--signature_key SIGNATURE_KEY] --input_config INPUT_CONFIG --output_file OUTPUT_FILE [--debug] optional arguments : -h, --help show this help message and exit --saved_model_dir SAVED_MODEL_DIR SavedModel directory to convert --input_arrays INPUT_ARRAYS Names of the input arrays, comma-separated. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth. (default None) --output_arrays OUTPUT_ARRAYS Names of the output arrays, comma-separated. --tag_set TAG_SET Set of tags identifying the MetaGraphDef within the SavedModel to analyze. All tags in the tag set must be present. (default None) --signature_key SIGNATURE_KEY Key identifying SignatureDef containing inputs and outputs.(default DEFAULT_SERVING_SIGNATURE_DEF_KEY) --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. --debug Run gdb in Debug mode. \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ~/SGS_IPU_SDK/SRC/Tool/Scripts/ConvertTool/ConvertTool.py tensorflow_savemodel \\ --saved_model_dir ~/test/tensorflow_model/save_model \\ --input_config ~/test/tensorflow_model/input_config.ini \\ --output_file ~/test/tensorflow_model/save_model_float.sim \\ --tag_set test_saved_model \\ --signature_key test_signature \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a --saved_model_dir : \u8f93\u5165\u7684\u6a21\u578b\u4e3aTensorFlow saved_model.builder\u751f\u6210\u7684\u6587\u4ef6\u8def\u5f84\u3002 --output_file : \u8f93\u51fa\u7684\u6a21\u578b\u6587\u4ef6\uff0cflatbuffer\u683c\u5f0f\uff0csim\u540e\u7f00\u6587\u4ef6\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 \u53ef\u9009\u53c2\u6570\uff1a --input_arrays : \u7f51\u7edc\u8f93\u5165Tensor\u7684\u540d\u5b57\uff0c\u4ee5\u5b57\u7b26\u4e32\u7c7b\u578b\u6307\u5b9a\uff0c\u591a\u4e2ainputs\u7684\u8bdd\uff0c\u4e2d\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0c\u5982\uff1a--input_arrays='Input1','Input2'\uff0c\u82e5\u4e0d\u6307\u5b9a\u5219\u4ecesaved_model_dir\u4e2d\u83b7\u53d6\u3002 --output_arrays : \u7f51\u7edc\u8f93\u51faTensor\u7684\u540d\u5b57\uff0c\u4ee5\u5b57\u7b26\u4e32\u7c7b\u578b\u6307\u5b9a\uff0c\u591a\u4e2aoutputs\u7684\u8bdd\uff0c\u4e2d\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\u3002\u82e5\u4e0d\u6307\u5b9a\u5219\u4ecesaved_model_dir\u4e2d\u83b7\u53d6\u3002 --input_shapes : \u7f51\u7edc\u8f93\u5165Tensor\u7684shape\uff0c\u683c\u5f0f\u4e3aNHWC\uff0cdimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0cshape\u4e2a\u6570\u548cinputs \u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002\u82e5\u4e0d\u6307\u5b9a\u5219\u4ecesaved_model_dir\u4e2d\u83b7\u53d6\u3002 --tag_set : \u9700\u8981\u548csave model\u65f6\u6240\u6307\u5b9a\u7684tag\u5339\u914d\uff0c\u5982\u679c\u4e0d\u505a\u8bbe\u5b9a\uff0c\u5219\u9ed8\u8ba4\u4e3a\u2018serve\u2019\u3002 --signature_key : \u9700\u8981\u548csave model\u65f6\u6240\u6307\u5b9a\u7684signature\u5339\u914d\u3002\u5982\u679c\u4e0d\u505a\u8bbe\u5b9a\uff0c\u5219\u9ed8\u8ba4\u4e3a \u2018DEFAULT_SERVING_SIGNATURE_DEF_KEY\u2019 2.1.3 keras\u6846\u67b6\u6307\u4ee4 \u00b6 python3 ConvertTool.py keras -h usage : ConvertTool.py keras [-h] --model_file MODEL_FILE --input_config INPUT_CONFIG --output_file OUTPUT_FILE --input_arrays INPUT_ARRAYS (optional) --output_arrays OUTPUT_ARRAYS (optional) --input_shapes INPUT_SHAPES (optional) --custom_objects CUSTOM_OBJECTS (optional) --debug (optional) optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of HDF5 file containing the tf.keras model. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. --input_arrays INPUT_ARRAYS Names of the input arrays, comma-separated. Default : None. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth. Default : None. --output_arrays OUTPUT_ARRAYS Names of the output arrays, comma-separated. Default : None. --custom_objects CUSTOM_OBJECTS Dict mapping names (strings) to custom classes or functions to be considered during model deserialization. Default : None. --debug Run gdb in Debug mode. Default : False. \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ~/SGS_IPU_SDK/SRC/Tool/Scripts/ConvertTool/ConvertTool.py keras \\ --model_file ./TEST_h5/resnet50/resnet50.h5 \\ --input_config ./TEST_h5/resnet50/input_config.ini \\ --output_file ./TEST_h5/resnet50/resnet50_float.sim \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a --model_file : \u8f93\u5165\u7684\u6a21\u578b\u4e3akeras h5\u683c\u5f0f\u6587\u4ef6\u8def\u5f84\u3002 --output_file : \u8f93\u51fa\u7684\u6a21\u578b\u6587\u4ef6\uff0cflatbuffer\u683c\u5f0f\uff0csim\u540e\u7f00\u6587\u4ef6\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 \u53ef\u9009\u53c2\u6570\uff1a --input_arrays : \u7f51\u7edc\u8f93\u5165Tensor\u7684\u540d\u5b57\uff0c\u4ee5\u5b57\u7b26\u4e32\u7c7b\u578b\u6307\u5b9a\uff0c\u591a\u4e2ainputs\u7684\u8bdd\uff0c\u4e2d\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0c\u5982\uff1a--input_arrays='Input1','Input2'\u3002 --output_arrays : \u7f51\u7edc\u8f93\u51faTensor\u7684\u540d\u5b57\uff0c\u4ee5\u5b57\u7b26\u4e32\u7c7b\u578b\u6307\u5b9a\uff0c\u591a\u4e2aoutputs\u7684\u8bdd\uff0c\u4e2d\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\u3002 --input_shapes : \u7f51\u7edc\u8f93\u5165Tensor\u7684shape\uff0c\u683c\u5f0f\u4e3aNHWC\uff0cdimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0cshape\u4e2a\u6570\u548cinputs \u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002 --custom_objects : Dict mapping names (strings) to custom classes or functions to be considered during model deserialization (default None). 2.1.4 tflite\u6846\u67b6\u6307\u4ee4 \u00b6 python3 ConvertTool.py tflite -h usage : ConvertTool.py tflite [-h] --model_file MODEL_FILE --input_config INPUT_CONFIG --output_file OUTPUT_FILE --debug (optional) optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of tflite file containing the tflite model. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. --debug Run gdb in Debug mode. Default : False. \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ~/SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py tflite \\ --model_file ~/test/tensorflow_model/Debug_save_model_float.tflite \\ --input_config ~/test/tensorflow_model/input_config.ini \\ --output_file ~/test/tensorflow_model/save_model_float.sim \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a --model_file : \u8f93\u5165\u7684\u6a21\u578b\u4e3atflite\u683c\u5f0f\u6587\u4ef6\u8def\u5f84(\u5fc5\u987b\u4e3a\u975e\u91cf\u5316\u6a21\u578b)\u3002 --output_file : \u8f93\u51fa\u7684\u6a21\u578b\u6587\u4ef6\uff0cflatbuffer\u683c\u5f0f\uff0csim\u540e\u7f00\u6587\u4ef6\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 2.1.5 caffe\u6846\u67b6\u6307\u4ee4 \u00b6 python3 ConvertTool.py caffe -h usage : ConvertTool.py caffe [-h] --model_file MODEL_FILE --weight_file WEIGHT_FILE --input_config INPUT_CONFIG --output_file OUTPUT_FILE --input_arrays INPUT_ARRAYS (optional) --output_arrays OUTPUT_ARRAYS (optional) --debug (optional) optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of tflite file containing the caffe model. --weight_file WEIGHT_FILE Full filepath of tflite file containing the caffe weight. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. --input_arrays INPUT_ARRAYS Names of the input arrays, comma-separated. Default : None. --output_arrays OUTPUT_ARRAYS Names of the output arrays, comma-separated. Default : None. --input_pack_model_arrays INPUT_PACK_MODEL_ARRAYS Set input Pack model, specify name pack model like caffe(NCHW),comma-separated. All inputTersors will be NCHW if set \"caffe\" (default is NHWC) --output_pack_model_arrays OUTPUT_PACK_MODEL_ARRAYS Set output Pack model, specify name pack model like caffe(NCHW),comma-separated. All outputTensors will be NCHW if set \"caffe\" (default is NHWC) --debug Run gdb in Debug mode. \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ~/SGS_IPU_SDK/SRC/Tool/Scripts/ConvertTool/ConvertTool.py caffe \\ --model_file ~/SGS_IPU_SDK/SGS_Models/caffe/caffe_resnet50_conv/caffe_resnet50_conv.prototxt \\ --weight_file ~/SGS_IPU_SDK/SGS_Models/caffe/caffe_resnet50_conv/caffe_resnet50_conv.caffemodel \\ --input_arrays data \\ --output_arrays prob \\ --input_config ~/SGS_IPU_SDK/SGS_Models/caffe/caffe_resnet50_conv/input_config.ini \\ --output_file ./resnet50.sim \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a --model_file : Caffe\u6a21\u578b\u6587\u4ef6\u7684\u8def\u5f84 --weight_file : Caffe\u6743\u91cd\u6587\u4ef6\u7684\u8def\u5f84 --input_arrays : Caffe\u6a21\u578b\u8f93\u5165\u7684\u8282\u70b9\u540d\u79f0\uff0c\u4f7f\u7528input\u7684\u540d\u5b57 --output_arrays : \u6a21\u578b\u8f93\u51fa\u7684\u8282\u70b9\u540d\u79f0\uff0c\u4f7f\u7528\u6700\u540elayer\u7684top\u540d\u5b57\uff0c\u5982\u6709\u591a\u4e2a\u8f93\u51fa\u8282\u70b9\uff0c\u8bf7\u7528\u9017\u53f7( , )\u5206\u9694 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput config\u7684\u914d\u7f6e\u4fe1\u606f\u3002 --output_file : \u8f6c\u6362\u6a21\u578b\u7684\u8f93\u51fa\u8def\u5f84\u3002 --input_pack_model_arrays : \u53ef\u9009\u53c2\u6570\u3002\u6307\u5b9a\u8f93\u5165\u8282\u70b9\u540d\u79f0\uff0c\u6309\u7167caffe\u6a21\u5f0f\u8f93\u5165\uff08NCHW\uff09\u3002\u8f93\u5165\u201ccaffe\u201d\u65f6\uff0c\u6240\u6709\u8f93\u5165\u90fd\u8f6c\u6362\u6210caffe\u6a21\u5f0f\u3002 --output_pack_model_arrays : \u53ef\u9009\u53c2\u6570\u3002\u6307\u5b9a\u8f93\u51fa\u8282\u70b9\u540d\u79f0\uff0c\u6309\u7167caffe\u6a21\u5f0f\u8f93\u51fa\uff08NCHW\uff09\u3002\u8f93\u5165\u201ccaffe\u201d\u65f6\uff0c\u6240\u6709\u8f93\u51fa\u90fd\u8f6c\u6362\u6210caffe\u6a21\u5f0f\u3002 2.1.5.1. Deprecated caffe convert tool command \u00b6 Caffe Convert Tool\u5de5\u5177\u7684\u4f4d\u7f6e\u5728 ~/SGS_IPU_SDK/SRC/Tool/Scripts/CaffeConvertTool/converter.py \u3002\u8be5\u6307\u4ee4\u4e3a\u4e86\u517c\u5bb9\u8001\u7248\u672cSDK\uff0c\u4e0d\u5efa\u8bae\u4f7f\u7528\u8be5\u547d\u4ee4\u8f6c\u6362caffe model\u3002 \u8fdb\u5165\u5230\u8be5\u5de5\u5177\u76ee\u5f55\uff0c\u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ~/SGS_IPU_SDK/SRC/Tool/Scripts/CaffeConvertTool/converter.py \\ --model_file ~/SGS_IPU_SDK/SGS_Models/caffe/caffe_resnet50_conv/caffe_resnet50_conv.prototxt \\ --weight_file ~/SGS_IPU_SDK/SGS_Models/caffe/caffe_resnet50_conv/caffe_resnet50_conv.caffemodel \\ --input_node data --output_node prob \\ --input_config ~/SGS_IPU_SDK/SGS_Models/caffe/caffe_resnet50_conv/input_config.ini \\ --output_dir ./resnet50.sim \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a --model_file : Caffe\u6a21\u578b\u6587\u4ef6\u7684\u8def\u5f84 --weight_file : Caffe\u6743\u91cd\u6587\u4ef6\u7684\u8def\u5f84 --input_node : Caffe\u6a21\u578b\u8f93\u5165\u7684\u8282\u70b9\u540d\u79f0\uff0c\u4f7f\u7528input\u7684\u540d\u5b57 --output_node : \u6a21\u578b\u8f93\u51fa\u7684\u8282\u70b9\u540d\u79f0\uff0c\u4f7f\u7528\u6700\u540elayer\u7684top\u540d\u5b57\uff0c\u5982\u6709\u591a\u4e2a\u8f93\u51fa\u8282\u70b9\uff0c\u8bf7\u7528\u9017\u53f7( , )\u5206\u9694 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput config\u7684\u914d\u7f6e\u4fe1\u606f\u3002 --output_dir : \u8f6c\u6362\u6a21\u578b\u7684\u8f93\u51fa\u8def\u5f84\uff08\u9ed8\u8ba4\u4e3a./Converted_Net_float.sim\uff09\u3002 2.1.6 Onnx\u6846\u67b6\u6307\u4ee4 \u00b6 python3 Path_to_SGS_IPU_SDK/Scripts/ConvertTool onnx -h usage : ConvertTool.py onnx [-h] --model_file MODEL_FILE --input_arrays INPUT_ARRAYS --input_shapes INPUT_SHAPES --output_arrays OUTPUT_ARRAYS --input_config INPUT_CONFIG --output_file OUTPUT_FILE [--debug] optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of tflite file containing the onnx model. --input_arrays INPUT_ARRAYS Names of the input arrays, comma-separated. (default None). --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon-separated. For many models each shape takes the form N C H W (default None) --output_arrays OUTPUT_ARRAYS Names of the output arrays, comma-separated. (default None) --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. --input_pack_model INPUT_PACK_MODEL input tensor pack model,NCHW(caffe pytorch) or NHWC(tensorflow). default NCHW \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ~/SGS_IPU_SDK/SRC/Tool/Scripts/ConvertTool/ConvertTool.py onnx \\ --model_file ~/SGS_IPU_SDK/SGS_Models/onnx/onnx_mobilenet_v2/onnx_mobilenet_v2.onnx \\ --input_arrays data \\ --input_shapes 1,3,224,224 \\ --output_arrays mobilenetv20_output_flatten0_reshape0 \\ --input_config ~/SGS_IPU_SDK/SGS_Models/onnx/onnx_mobilenet_v2/input_config.ini \\ --output_file ./onnx_mobilenet_v2_float.sim \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a --model_file : Onnx\u6a21\u578b\u6587\u4ef6\u7684\u8def\u5f84 --input_arrays : Onnx\u6a21\u578b\u8f93\u5165\u7684\u8282\u70b9\u540d\u79f0\uff0c\u4f7f\u7528input\u7684\u540d\u5b57,\u591a\u8f93\u5165\u7528\u9017\u53f7( , )\u5206\u9694 --input_shapes : Onnx \u6a21\u578b\u8f93\u5165shape\uff0c \u591a\u8f93\u5165\u7528\u5192\u53f7( : )\u5206\u9694 --output_arrays : \u6a21\u578b\u8f93\u51fa\u7684\u8282\u70b9\u540d\u79f0\uff0c\u4f7f\u7528\u6700\u540elayer\u7684top\u540d\u5b57\uff0c\u5982\u6709\u591a\u4e2a\u8f93\u51fa\u8282\u70b9\uff0c\u8bf7\u7528\u9017\u53f7( , )\u5206\u9694 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput config\u7684\u914d\u7f6e\u4fe1\u606f\u3002 --output_dir : \u8f6c\u6362\u6a21\u578b\u7684\u8f93\u51fa\u8def\u5f84\u3002 --input_pack_model : \u6a21\u578b\u8f93\u5165\u7684\u6392\u5217\u65b9\u5f0f\u3002\u7531Tensorflow\u8f6c\u8fc7\u6765\u7684onnx\u6a21\u578b\uff0c\u901a\u5e38\u4e3aNHWC\uff1b\u7531caffe\u6216\u8005pytorch\u8f6c\u8fc7\u6765\u7684onnx\u6a21\u578b\uff0c\u901a\u5e38\u4e3aNCHW --output_file \uff1a\u8f6c\u6362\u6a21\u578b\u7684\u8f93\u51fa\u540d\u5b57\u3002 2.1.6.1. Onnx\u6a21\u578b\u8f6c\u6362\u6ce8\u610f\u4e8b\u9879 \u00b6 \u5982\u679c\u6a21\u578b\u4e2d\u5e26\u6709\u540e\u5904\u7406\u7684\u7b97\u5b50\uff0c\u8bf7\u5148\u53bb\u9664\uff0c\u76ee\u524d\u53ea\u652f\u6301\u4e3b\u5e72\u7f51\u7edc\u7684\u8f6c\u6362\u3002 2.1.7 \u6ce8\u610f\u4e8b\u9879 \u00b6 Convert Tool\u8f6c\u6362\u5de5\u5177\u8f6c\u6362\u5b8c\u6210\u540e\u4f1a\u751f\u6210\u4e24\u4e2a\u6587\u4ef6\uff0c\u4f8b\u5982 --output_dir \u6307\u5b9a\u4e3a ./resnet50.sim\uff0c\u8f6c\u6362\u5b8c\u6210\u540e\u4f1a\u751f\u6210Debug_resnet50.sim\u548cresnet50.sim\u3002\u5176\u4e2d\uff0cresnet50.sim\u662f\u771f\u6b63\u8f6c\u6362\u597d\u7684\u6587\u4ef6\uff0cDebug_resnet50.sim\u662f\u7ecf\u8fc7\u8f6c\u6362\u540e\u7684\u4e2d\u95f4\u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u672a\u7ecf\u8fc7\u4f18\u5316\uff0c\u4e0e\u539f\u6846\u67b6\u6a21\u578b\u62e5\u6709\u76f8\u540c\u7684\u7f51\u7edc\u7ed3\u6784\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f5c\u4e3a\u8f6c\u6362\u540e\u8c03\u8bd5\u4f7f\u7528\uff0c\u4f46\u662f\u65e0\u6cd5\u5728DLA SDK\u4e2d\u8fd0\u884c\u3002 2.2. input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e \u00b6 \u5de5\u5177\u7684\u53c2\u6570 --input_config \u9700\u8981\u6307\u5b9ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u6587\u4ef6input_config.ini\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u7684\u4e3b\u8981\u529f\u80fd\u6709\uff1a \u2022 \u914d\u7f6e\u7f51\u7edc\u6a21\u578b\u56fe\u7247\u524d\u5904\u7406\u7684\u5f52\u4e00\u5316\u4fe1\u606f\uff1b \u2022 \u914d\u7f6e\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u8f93\u51fa\u7684\u91cf\u5316\u5904\u7406\u4fe1\u606f\uff1b \u2022 \u914d\u7f6e\u7f51\u7edc\u6a21\u578b\u4e2d\u5377\u79ef\u7684\u91cf\u5316\u4fe1\u606f\u3002 \u914d\u7f6einput_config.ini\u6587\u4ef6\u4e3b\u8981\u662f\u4e3a\u4e86\u80fd\u5c06\u7f51\u7edc\u6a21\u578b\u5feb\u901f\u9002\u914d\u5230SigmaStar\u82af\u7247\u4e2d\u4f7f\u7528\u3002\u5728\u7f51\u7edc\u6a21\u578b\u7684\u8bad\u7ec3\u4e2d\uff0c\u4e0d\u540c\u7684\u6846\u67b6\u548c\u8bad\u7ec3\u6570\u636e\u96c6\u9700\u8981\u7f51\u7edc\u4f7f\u7528\u4e0d\u540c\u7684\u56fe\u7247\u5f52\u4e00\u5316\u65b9\u6cd5\uff0c\u800c\u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0c\u4e3a\u4e86\u80fd\u591f\u8ba9\u7f51\u7edc\u6a21\u578b\u7684\u9884\u6d4b\u66f4\u52a0\u51c6\u786e\uff0c\u9700\u8981\u8fd8\u539f\u8bad\u7ec3\u6a21\u578b\u65f6\u7684\u56fe\u7247\u524d\u5904\u7406\u5f52\u4e00\u5316\u65b9\u6cd5\u3002 \u5c06RGB\u4e09\u4e2a\u901a\u9053\u7684\u5747\u503c\u548cstd_value\u8bbe\u7f6e\u597d\u540e\uff0c\u5728\u8f6c\u6362\u6a21\u578b\u65f6\u4f1a\u5199\u5165\u5230\u6a21\u578b\u5185\u90e8\uff0c\u8fd9\u6837\u5728\u786c\u4ef6\u4e0a\u5b9e\u9645\u4f7f\u7528\u65f6\uff0c\u4ec5\u9700\u8981\u5c06\u56fe\u7247resize\u5230\u7f51\u7edc\u6a21\u578b\u7684\u8f93\u5165\u7684\u5c3a\u5bf8\uff0c\u56fe\u7247\u5f52\u4e00\u5316\u7684\u5de5\u4f5c\u5728\u7f51\u7edc\u5185\u90e8\u5b8c\u6210\u3002 \u53e6\u5916\uff0c\u5b9e\u9645\u786c\u4ef6\u4e0a\u4f7f\u7528\u65f6\u56fe\u7247\u8f93\u5165\u683c\u5f0f\u4e0e\u8bad\u7ec3\u65f6\u4f7f\u7528\u7684RGB\u53ef\u80fd\u6709\u5f88\u5927\u533a\u522b\uff0c\u6b63\u786e\u914d\u7f6e\u8fd9\u4e9b\u9009\u9879\u80fd\u4f7f\u8f6c\u6362\u597d\u7684\u6a21\u578b\u5185\u62e5\u6709\u8fd9\u4e9b\u914d\u7f6e\u4fe1\u606f\uff0c\u80fd\u591f\u76f4\u63a5\u5728SigmaStar\u7684\u786c\u4ef6\u4e0a\u90e8\u7f72\u3002 [INPUT_CONFIG] ;Names of the input arrays, comma-separated.image input must be the first. inputs = 'data'; ;Memory formats of input arrays, comma-separated. ;One of RGB, BGR, RGBA, BGRA, YUV_NV12, RAWDATA_S16_NHWC, RAWDATA_S16_NHWX, ;RAWDATA_U8_NHWC, RAWDATA_U8_NHWX ;Each entry in the list should match an entry in inputs arrays. training_input_formats = BGR; input_formats = BGR; ;Indicate the input data need qauntize or not. ;Each entry in the list should match an entry in inputs arrays. quantizations = TRUE; ;mean_values parameter for image models, ;Each entry in the list match RGB channel of\uff08RGB,BGR,RGBA,BGRA,YUV_NV12\uff09 mean_red = 0.0; mean_green = 0.0; mean_blue = 0.0; ;std_value parameter for image models, std_value = 1.0; [OUTPUT_CONFIG] ;Names of the output arrays, comma-separated. outputs = 'prob'; ;Indicate the output data need deqauntize or not. ;Each entry in the list should match an entry in outputs arrays. dequantizations = TRUE; [CONV_CONFIG] tensor_arrays = 'conv1-1,conv2-1'; \u8be5\u6587\u4ef6\u4e3b\u8981\u5206\u4e3a\u4e09\u4e2a\u8bbe\u7f6e\u4fe1\u606f\uff1a [INPUT_CONFIG] [OUTPUT_CONFIG] [CONV_CONFIG] \u9488\u5bf9\u8fd9\u4e09\u4e2a\u8bbe\u7f6e\u4fe1\u606f\u5177\u4f53\u8bf4\u660e\uff1a \u6ce8\u610f String\u7c7b\u578b\u7684\u503c\uff0c\u5982tensor name\uff0c\u9700\u7528('')\u5c06\u5185\u5bb9\u5305\u542b\u8d77\u6765\uff0c\u4f8b\u5982outputs='detectionBoxes,detectionClasses,detectionScores,numDetections'; 2.2.1 INPUT_CONFIG \u00b6 inputs : \u7f51\u7edc\u8f93\u5165Tensor\u7684name\uff0c\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u8bf7\u7528\u9017\u53f7( , )\u5206\u9694\u3002\u6a21\u578b\u8f93\u5165Tensor\u987a\u5e8f\u4e0e inputs \u7684\u914d\u7f6e\u987a\u5e8f\u4e00\u81f4\u3002 training_input_formats : \u7f51\u7edc\u8bad\u7ec3\u65f6\u7684\u56fe\u7247\u683c\u5f0f\uff0c\u6570\u91cf\u548c\u987a\u5e8f\u4e0einputs\u4e00\u4e00\u5bf9\u5e94\uff0c\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u3002\u8fd9\u4e9b\u683c\u5f0f\u5305\u62ecRGB\uff0cBGR\uff0cRAWDATA_S16_NHWC(\u82e5 training_input_formats \u8bbe\u7f6e\u4e3a RAWDATA_S16_NHWC ,\u5219 input_formats \u4e5f\u5fc5\u987b\u8bbe\u7f6e\u4e3a RAWDATA_S16_NHWC ) \u5176\u4e2d\u4e4b\u4e00\u3002training_input_formats\u53ef\u4ee5\u548cinput_formats \u4e0d\u4e00\u6837\u3002\u4f8b\u5982\u5728\u5728SigmaStar\u5f00\u53d1\u677f\u4e0a\uff0cinput_formats\u662fYUV_NV12\uff0c\u4f46\u662ftraining input formats \u662fRGB\u3002 input_formats : \u7f51\u7edc\u6a21\u578b\u5728SigmaStar\u82af\u7247\u4e0a\u8fd0\u884c\u7684\u56fe\u7247\u8f93\u5165\u683c\u5f0f\uff0c\u6570\u91cf\u548c\u987a\u5e8f\u4e0einputs\u4e00\u4e00\u5bf9\u5e94\uff0c\u9017\u53f7( , )\u5206\u9694\u3002 \u8fd9\u4e9b\u683c\u5f0f\u5305\u62ec\uff1a RGB BGR RGBA BGRA YUV_NV12 RAWDATA_S16_NHWC \u6ce8\u610f\uff1a \u7070\u5ea6\u56fe\u7247\u8bf7\u6309\u5982\u4e0b\u65b9\u5f0f\u914d\u7f6e\uff1a training_input_formats = RGB input_formats = GRAY quantizations : \u7528\u6765\u6807\u8bc6\u6240\u6709\u8f93\u5165Tensor\u7684\u6570\u636e\u662f\u5426\u9700\u8981\u505a\u91cf\u5316\uff0cTRUE\u6216\u8005FALSE\uff0c\u6570\u91cf\u7b49\u4e8einputs \u4e2a\u6570\u3002\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 mean_red / mean_green / mean_blue : \u7f51\u7edc\u8bad\u7ec3\u9636\u6bb5\uff0c\u4e00\u822c\u4f1a\u5bf9\u56fe\u7247\u505a\u524d\u5904\u7406\uff0c\u5bf9\u4e8eRGB\u901a\u9053\u7684\u56fe\u7247\uff0c\u4f7f\u7528\u5982\u4e0b\u516c\u5f0f\u5bf9\u56fe\u7247\u8fdb\u884c\u9884\u5904\u7406\uff1a mean_red / mean_green / mean_blue \u5c31\u662f\u76f8\u5e94\u901a\u9053\u4e0a\u7684mean\u503c\u3002\u5982\u679c\u8fd9\u4e2a\u7f51\u7edc\u6ca1\u6709\u505a\u4efb\u4f55\u5f52\u4e00\u5316\u5904\u7406\uff0c\u8fd9\u4e2a\u503c\u8bbe\u4e3a0\u5373\u53ef\u3002\u6bcf\u4e2amean\u6570\u91cf\u7b49\u4e8einputs \u4e2a\u6570\u3002\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 std_value : \u5982\u4e0a\u516c\u5f0f\uff0c\u5982\u679c\u6ca1\u6709\u505a\u4efb\u4f55\u5f52\u4e00\u5316\u5904\u7406\uff0c\u8fd9\u4e2a\u503c\u8bbe\u4e3a1\u5373\u53ef\u3002\u5982\u679c\u6bcf\u4e2a\u901a\u9053\u90fd\u6709\u5bf9\u5e94\u7684std_value\u503c\uff0c\u4ee5\u82f1\u6587\u5192\u53f7( : )\u5206\u9694\uff0c\u987a\u5e8f\u4e3aRGB\u3002\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 yuv420_h_pitch_alignment \uff1a\u7528\u6765\u6807\u8bc6YUV\u6570\u636e\u4f5c\u4e3a\u7f51\u7edc\u8f93\u5165\u65f6H\u65b9\u5411\u5bf9\u9f50\u7684\u6570\u91cf\uff0c\u9ed8\u8ba4\u4e3a16\u3002 yuv420_v_pitch_alignment \uff1a\u7528\u6765\u6807\u8bc6YUV\u6570\u636e\u4f5c\u4e3a\u7f51\u7edc\u8f93\u5165\u65f6V\u65b9\u5411\u5bf9\u9f50\u7684\u6570\u91cf\uff0c\u9ed8\u8ba4\u4e3a2\u3002 xrgb_h_pitch_alignment \uff1a\u7528\u6765\u6807\u8bc6XRGB\u6570\u636e\u4f5c\u4e3a\u7f51\u7edc\u8f93\u5165\u65f6H\u65b9\u5411\u5bf9\u9f50\u7684\u6570\u91cf\uff0c\u9ed8\u8ba4\u4e3a16\u3002 \u6ce8\u610f \u4ee5\u4e0a\u4e09\u4e2a\u914d\u7f6e\u53ea\u80fd\u914d\u7f6e\u9ed8\u8ba4\u503c\u7684\u6574\u6570\u500d\u3002 \u4f8b\u5982\uff1ayuv420_h_pitch_alignment=32; 2.2.2 OUTPUT_CONFIG \u00b6 outputs : \u7f51\u7edc\u8f93\u51faTensor\u7684name\uff0c\u5982\u679c\u6709\u591a\u4e2a\u8f93\u51faTensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u3002\u8f6c\u6362\u5e26\u540e\u5904\u7406\u7f51\u7edc\u65f6\uff0cBackbone\u7f51\u7edc\u7684outputs\u4e0e\u5b8c\u6574\u7f51\u7edcoutputs\u7684\u540d\u79f0\u4e0d\u540c\uff0c\u5176\u4f59\u8bbe\u7f6e\u5e94\u5b8c\u5168\u4e00\u81f4\u3002\u6a21\u578b\u8f93\u51faTensor\u987a\u5e8f\u4e0e outputs \u7684\u914d\u7f6e\u987a\u5e8f\u4e00\u81f4\u3002 dequantizations : \u7528\u6765\u6807\u8bc6\u6240\u6709\u8f93\u51faTensor\u7684\u6570\u636e\u662f\u5426\u9700\u8981\u505a\u53cd\u91cf\u5316\uff0cTRUE\u6216\u8005FALSE\uff0c\u6570\u91cf\u7b49\u4e8eoutputs\u3002\u5982\u679c\u6709\u591a\u4e2a\u8f93\u51faTensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002\u8be5\u9009\u9879\u4ec5\u5728\u677f\u4e0a\u8fd0\u884c\u65f6\u751f\u6548\u3002\u8be5\u9009\u9879\u4ec5\u5728\u677f\u4e0a\u8fd0\u884c\u65f6\u751f\u6548\u3002\u8be5\u9009\u9879\u8bbe\u4e3aTRUE\u65f6\uff0c\u4f1a\u5728\u8f6c\u6362\u5230Fixed\u6a21\u578b\u540e\u5728\u5bf9\u5e94\u7684\u8f93\u51fa\u589e\u52a0Fix2float\u7b97\u5b50\uff0c\u5b8c\u6210\u8f93\u51fa\u6570\u636e\u4e58scale\u8f6c\u6362\u6210float\u7684\u64cd\u4f5c\u3002 2.2.3 CONV_CONFIG \u00b6 input_format : \u6307\u5b9a\u7f51\u7edc\u4e2d\u6240\u6709\u5377\u79ef\u7684\u91cf\u5316\u65b9\u5f0f\uff0c\u9ed8\u8ba4ALL_UINT8\uff0c\u53ef\u9009\u65b9\u6848ALL_UINT8\uff0cALL_INT16\uff0c CONV2D_INT16\uff0cDEPTHWISE_INT16\u3002 ALL_UINT8 : \u6307\u5b9a\u6240\u6709\u5377\u79ef\u6309\u7167UINT8\u91cf\u5316\uff08\u9ed8\u8ba4\u65b9\u5f0f\uff09\u3002 ALL_INT16 : \u6307\u5b9a\u6240\u6709\u5377\u79ef\u6309\u7167INT16\u91cf\u5316\u3002 CONV2D_INT16 : \u53ea\u6307\u5b9a\u6240\u6709\u666e\u901a\u5377\u79ef\u6309\u7167INT16\u91cf\u5316\u3002 DEPTHWISE_INT16 : \u53ea\u6307\u5b9a\u6240\u6709Depthwise \u5377\u79ef\u6309\u7167INT16\u91cf\u5316\u3002 \u5728 UINT8 \u6a21\u5f0f \u4e0b\uff0c\u5377\u79ef\u8fd0\u884c\u6240\u5360\u5e26\u5bbd\u5c0f\uff0c\u8fd0\u884c\u901f\u5ea6\u5feb\uff1b\u5728 INT16\u6a21\u5f0f \u4e0b\uff0c\u53ef\u4ee5\u6781\u5927\u7684\u63d0\u9ad8\u5377\u79ef\u7684\u7cbe\u5ea6\uff0c\u4f46\u662f\u8fd0\u884c\u7684\u901f\u5ea6\u4f1a\u6709\u5f71\u54cd\u3002 tensor_arrays : \u6307\u5b9a\u7f51\u7edc\u4e2d\u67d0\u4e9b\u5c42\u7684\u5377\u79ef\u91cf\u5316\u65b9\u5f0f\u3002\u6574\u4e2a\u7f51\u7edc\u5377\u79ef\u90fd\u91c7\u7528\u9ed8\u8ba4\u7684UINT8 \uff0c\u4f46\u662f\u67d0\u4e9b\u5377\u79ef\u5c42\u9700\u8981\u66f4\u9ad8\u7684\u7cbe\u5ea6\uff0c\u8fd9\u65f6\u76f4\u63a5\u586b\u5199\u90a3\u4e9b\u5377\u79ef\u5c42\u7684\u7b2c\u4e00\u4e2a\u8f93\u5165\u7684 input id name\u5373\u53ef\u3002\u591a\u5c42\u65f6\uff0cname\u4ee5\u9017\u53f7( , )\u5206\u9694\u3002 \u6ce8\u610f \u5377\u79ef\u7b2c\u4e00\u4e2a\u8f93\u5165\u7684input id \u540d\u5b57\u53ef\u901a\u8fc7netron\u5de5\u5177\u67e5\u770b\u3002\u6307\u5b9a\u91cf\u5316\u65f6\uff0c\u7f51\u7edc\u4e2d\u7684\u7b2c\u4e00\u5c42\u5377\u79ef\u4e0d\u751f\u6548\u3002 2.2.4 OPTIMIZE_CONFIG \u00b6 skip_concatenation : \u7f51\u7edc\u4e2d\u7684Concatenation\u5c42\uff0c\u5982\u679c\u53ea\u9488\u5bf9\u6700\u540e\u4e00\u4e2a\u7ef4\u5ea6\u5408\u5e76\uff0c\u4f1a\u8d70\u8fdb\u8be5\u4f18\u5316\u4e2d\u3002Fixed\u6a21\u578b\u4f1a\u5c06Concatenation\u5c42\u8f6c\u6362\u4e3askip_concatenation\uff0cskip_concatenation\u5c42\u4f1a\u5927\u5e45\u51cf\u5c0f\u8fd0\u884c\u65f6\u95f4\u3002 2.3. \u4e00\u952e\u8f6c\u6362\u6a21\u578b \u00b6 ConvertModels\u5de5\u5177\u7684\u4f4d\u7f6e\u5728 SourceCode/SRC/Tool/Scripts/ConvertTool/ConvertModels.py \u8be5\u5de5\u5177\u662f\u4e00\u6b21\u6027\u5c06\u539f\u59cb\u6a21\u578b\u8f6c\u6362\u4e3aSigmaStar\u79bb\u7ebf\u6a21\u578b\u3002\u4ec5\u9700\u914d\u7f6e\u4e00\u4e2ainput_config.ini\u6587\u4ef6\uff0c\u5c06\u5404\u9636\u6bb5\u6a21\u578b\u8f6c\u6362 \u8fc7\u7a0b\u4e2d\u6240\u9700\u8981\u7684\u53c2\u6570\u914d\u7f6e\u5230\u8be5\u6587\u4ef6\u5373\u53ef\u3002 \u5728 SourceCode/Project \u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SourceCode/Project source auto_convertModels.sh \u914d\u7f6e\u597dinput_config.ini\u6587\u4ef6\u4e2d\u7684\u5fc5\u9009\u53c2\u6570\uff0c\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u4e00\u952e\u751f\u6210SigmaStar\u79bb\u7ebf\u6a21\u578b\u3002 python3 ~/ SourceCode / SRC / Tool / Scripts / ConvertTool / ConvertModels . py -- input_config ./ input_config . ini input_config.ini\u6587\u4ef6\u53c2\u6570\u793a\u4f8b\uff1a [PLATFORM] ;Name of model framework. one of onnx,caffe,tensorflow_graphdef, keras,tflite platform = caffe; ipu = IPU100; [INPUT_MODEL_NAME] ;Name of models,where is the models location.comma-separated. model_files = xxxx.caffemodel,xxxx.prototxt; ;Name of special case in the models, eg. lstm [SPECIAL_MODEL_CASE] special_case = [OUTPUT_MODEL_NAME] ;Name of output models. output_file = xxxx_float.sim; [SPECIAL_PARAMS] ; (only tensorflow save_model)Set of tags identifying the MetaGraphDef within the SavedModel to analyze. All tags in the tag set must be present. (default None) tag_set = ; (only tensorflow save_model) Key identifying SignatureDef containing inputs and outputs.(default DEFAULT_SERVING_SIGNATURE_DEF_KEY) signature_key = ; (only keras)Dict mapping names (strings) to custom classes or functions to be considered during model deserialization. (default None) custom_objects = ;preprocess py name,if null,will automatic generation preprocesspy_name = ; (only caffe)Set input Pack model, specify name pack model like caffe(NCHW),comma-separated. ;All inputTersors will be NCHW if set \"caffe\" (default is NHWC) input_pack_model_arrays = ;(only caffe)Set output Pack model, specify name pack model like caffe(NCHW),comma-separated.; All outputTersors will be NCHW if set \"caffe\" (default is NHWC) output_pack_model_arrays = ;(only onnx) input tensor pack model,NCHW(caffe pytorch) or NHWC(tensorflow). ; default NCHW input_pack_model = [CALIBRATOR] ;images file or dir if mult_inputs,file which lists of images images_path = ./ILSVRC2012_test_00000002.bmp; ;category one of Classification,Detection,Unknown category_name = Unknown; ;number of process num_process = ;quantlization level, one of L1,L2,L3,L4,L5 quant_level = [INPUT_CONFIG] ;Names of the input arrays, comma-separated.image input must be the first. inputs = input; ;Memory formats of input arrays, comma-separated. ;One of RGB, BGR, RGBA, BGRA, ARGB, ABGR YUV_NV12, RAWDATA_S16_NHWC ;Each entry in the list should match an entry in inputs arrays. training_input_formats = BGR; input_formats = RGB; ;Indicate the input data need qauntize or not. ;Each entry in the list should match an entry in inputs arrays. quantizations = TRUE; ;mean_values parameter for image models, ;Each entry in the list match RGB channel of\uff08RGB,BGR,RGBA,BGRA,YUV_NV12\uff09 mean_red = 123.68; mean_green = 116.78; mean_blue = 103.94; ;std_value parameter for image models, std_value = 1.0; ;input data shape; input_shapes = 1,3,224,224; [OUTPUT_CONFIG] ;Names of the output arrays, comma-separated. outputs = prob; ;Indicate the output data need deqauntize or not. ;Each entry in the list should match an entry in outputs arrays. dequantizations = TRUE; [CONV_CONFIG] tensor_arrays = conv1-1,conv2-1; 2.3.1 \u5fc5\u9009\u53c2\u6570 \u00b6 platform: \u8f6c\u6362\u6a21\u578b\u6240\u5c5e\u6846\u67b6\u5e73\u53f0\uff0c\u5982:caffe ,onnx,tflite,keras,tensorflow_graphdef,tensorflow_savemodel\u3002 model_files: \u539f\u59cb\u6a21\u578b\u6587\u4ef6\u540d\u3002 output_file: \u6d6e\u70b9\u6a21\u578b\u8f93\u51fa\u6587\u4ef6\u540d(\u6a21\u578b\u751f\u6210\u5230\u5f53\u524d\u64cd\u4f5c\u76ee\u5f55\u3002\u5982\u679c\u4e3a\u7edd\u5bf9\u8def\u7ecf\uff0c\u5219\u6a21\u578b\u8f93\u51fa\u5230\u6307\u5b9a\u76ee\u5f55)\u3002 images_path: \u6a21\u578b\u91cf\u5316\u6240\u9700\u56fe\u7247\u540d\u6216\u56fe\u7247\u6587\u4ef6\u5939\u540d\uff1b\u591a\u8f93\u5165\u6a21\u578b\u65f6\uff0c\u4f20\u5199\u5165\u56fe\u7247\u8def\u5f84\u6587\u4ef6\u3002 category_name: \u6a21\u578b\u6240\u5c5e\u7c7b\u522b\uff0c\u5982\uff1aClassification,Detection,Unknown\u3002 inputs: \u7f51\u7edc\u8f93\u5165Tensor\u7684name\uff0c\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u8bf7\u7528\u9017\u53f7( , )\u5206\u9694\u3002 training_input_formats: \u6a21\u578b\u8bad\u7ec3\u65f6\u56fe\u7247\u683c\u5f0f\u3002\u3010\u53c2\u80032.2.1 INPUT_CONFIG\u3011 input_formats: \u6a21\u578b\u8f6c\u6362\u65f6\u6240\u9700\u56fe\u7247\u683c\u5f0f\u3002 \u3010\u53c2\u80032.2.1 INPUT_CONFIG\u3011 quantizations: \u8f93\u5165\u8282\u70b9\u91cf\u5316\uff0c\u5982TRUE,FALSE\u3002\u3010\u53c2\u80032.2.1 INPUT_CONFIG\u3011 mean_red: \u56fe\u7247R\u901a\u9053\u5f52\u4e00\u5316\u503c\u3002\u3010\u53c2\u80032.2.1 INPUT_CONFIG\u3011 mean_green: \u56fe\u7247G\u901a\u9053\u5f52\u4e00\u5316\u503c\u3002\u3010\u53c2\u80032.2.1 INPUT_CONFIG\u3011 mean_blue: \u56fe\u7247B\u901a\u9053\u5f52\u4e00\u5316\u503c\u3002\u3010\u53c2\u80032.2.1 INPUT_CONFIG\u3011 std_value: \u56fe\u7247\u5f52\u4e00\u5316\u503c\u3002\u3010\u53c2\u80032.2.1 INPUT_CONFIG\u3011 input_shapes: \u6a21\u578b\u8f93\u5165\u56fe\u7247\u7ef4\u5ea6\u4fe1\u606f\uff0c\u59821,3,224,224 or 1,224,224,3\u3002 outputs: \u6a21\u578b\u8f93\u51fa\u8282\u70b9\u3002\u3010\u53c2\u80032.2.2 OUTPUT_CONFIG\u3011 dequantizations: \u8f93\u51fa\u8282\u70b9\u53cd\u91cf\u5316\uff0c\u5982TRUE,FALSE\u3002\u3010\u53c2\u80032.2.2 OUTPUT_CONFIG\u3011 2.3.2 \u53ef\u9009\u53c2\u6570 \u00b6 special_case: \u6a21\u578b\u4e2d\u7684\u7279\u6b8a\u7b97\u5b50\u8282\u70b9,\u5982lstm\u3002 tag_set: \u9700\u8981\u548csave model\u65f6\u6240\u6307\u5b9a\u7684tag\u5339\u914d\uff0c\u5219\u9ed8\u8ba4\u4e3a\u2018serve\u2019\uff0c(only tensorflow_savemodel )\u3002 signature_key: \u9700\u8981\u548csave model\u65f6\u6240\u6307\u5b9a\u7684signature\u5339\u914d\u3002(only tensorflow_savemodel)\u3002 custom_objects: \u5728\u6a21\u578b\u53cd\u5e8f\u5217\u5316\u65f6\uff0c\u5e94\u8003\u8651\u5c06\u540d\u5b57\u5b57\u7b26\u4e32\u7528\u5b57\u5178\u6620\u5c04\u5230\u7c7b\u6216\u8005\u51fd\u6570(only keras)\u3002 preprocesspy_name: \u56fe\u7247\u524d\u5904\u7406\u6587\u4ef6\uff0c\u5982\u679c\u4e3a\u7a7a\uff0c\u5c06\u81ea\u52a8\u751f\u6210\u3002 num_process: \u8fdb\u7a0b\u6570\uff0c\u8fd0\u884c\u540c\u65f6\u8fd0\u884c\u7684\u8fdb\u7a0b\u6570\u3002\uff08\u53ef\u9009\u53c2\u6570\uff0c\u4e0d\u52a0\u8be5\u53c2\u6570\u9ed8\u8ba4\u4e3a10\u4e2a\u8fdb\u7a0b\uff09\u3002 quant_level: \u9009\u62e9\u91cf\u5316\u7b49\u7ea7\uff1a[L1, L2, L3, L4, L5]\u3002\u9ed8\u8ba4L5\u91cf\u5316\u7b49\u7ea7\u3002 input_pack_model_arrays: \u8f93\u5165Tensors\u6570\u636e\u9ed8\u8ba4\u6392\u5e03\u4e3aNHWC,\u9ed8\u8ba4\u4e3aNone\uff1b\u5f53\u8bbe\u4e3a \u2018caffe\u2019\u65f6\uff0c\u6240\u6709\u8f93\u5165Tensors\u7684\u6570\u636e\u6392\u5e03\u4e3aNCHW\uff1b\u5f53\u8bbe\u4e3a\u8f93\u5165Tensors\u540d\u5b57\u65f6\uff0c\u8be5\u8f93\u5165Tensor\u7684\u6570\u636e\u6392\u5e03\u4e3aNCHW(only caffe)\u3002 output_pack_model_arrays: \u8f93\u51faTensors\u6570\u636e\u9ed8\u8ba4\u6392\u5e03\u4e3aNHWC,\u9ed8\u8ba4\u4e3aNone\uff1b\u5f53\u8bbe\u4e3a \u2018caffe\u2019\u65f6\uff0c\u6240\u6709shu\u51faTensors\u7684\u6570\u636e\u6392\u5e03\u4e3aNCHW\uff1b\u5f53\u8bbe\u4e3a\u8f93\u51faTensors\u540d\u5b57\u65f6\uff0c\u8be5\u8f93\u51faTensor\u7684\u6570\u636e\u6392\u5e03\u4e3aNCHW(only caffe)\u3002 input_pack_model: onnx\u6a21\u578b\u8f93\u5165Tensors\u7684\u9ed8\u8ba4\u6570\u636e\u6392\u5e03\u4e3aNCHW,\u9ed8\u8ba4\u503c\u4e3a \u2018NCHW\u2019\uff0c\u5f53\u6b64onnx\u6a21\u578b tensorflow\u8f6c\u6362\u800c\u6765\u65f6\uff0c\u6b64\u503c\u5e94\u8bbe\u4e3a \u2018NHWC\u2019\u3002","title":"Convert"},{"location":"module/User_Guide/Develop/Convert.html#21","text":"Convert Tool\u5de5\u5177\u7684\u4f4d\u7f6e\u5728 ~/SGS_IPU_SDK/SRC/Tool/Scripts/ConvertTool/ConvertTool.py \u3002 \u76ee\u524dConvert Tool\u652f\u6301\u4ecetensorflow_graphdef\uff0ctensorflow_savemodel\uff0ckeras\uff0ctflite\uff0ccaffe\uff0connx \u516d\u79cd\u6846\u67b6\u6a21\u578b\u8f6c\u6362\u4e3aSGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u3002 \u4f7f\u7528\u524d\u5148\u5728SGS_IPU_SDK\u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK/Project make distclean ;source build/{IPU_Version}/cfg_cmodel_float.sh ;make -j32 (IPU_Version \u53ef\u9009\u62e9IPU100,IPU200M,IPU260) ln -s ~/SGS_IPU_SDK/SRC/Tool/Scripts/ConvertTool/ConvertTool.py ConvertTool.py \u4e0b\u9762\u662fConvert Tool\u76ee\u524d\u652f\u6301\u7684platform information\uff1a python3 ConvertTool.py -h usage : ConvertTool.py [-h] {tensorflow_graphdef,tensorflow_savemodel,keras,tflite,caffe} ... Convert Tool positional arguments : {tensorflow_graphdef,tensorflow_savemodel,keras,tflite,caffe} platform info tensorflow_graphdef tensorflow graphdef commands tensorflow_savemodel tensorflow save_model commands keras keras commands tflite tflite commands caffe caffe commands optional arguments : -h, --help show this help message and exit \u5982\u679c\u60f3\u8fdb\u4e00\u6b65\u770b\u770b\u5404\u4e2a\u5e73\u53f0\u8f6c\u6362\u6240\u9700\u8981\u7684\u53c2\u6570\u4fe1\u606f\uff0c\u53ef\u4ee5\u6267\u884c python3 ConvertTool.py {platform} \u2013h \uff0c\u5404\u4e2a\u5e73\u53f0\u5177\u4f53\u4fe1\u606f\u548c\u67e5\u770b\u6307\u4ee4\u5982\u4e0b\uff1a","title":"2.1. \u4f7f\u7528\u65b9\u6cd5"},{"location":"module/User_Guide/Develop/Convert.html#211-tensorflow_graphdef","text":"python3 ConvertTool.py tensorflow_graphdef -h usage : ConvertTool.py tensorflow_graphdef [-h] --graph_def_file GRAPH_DEF_FILE --input_arrays INPUT_ARRAYS --output_arrays OUTPUT_ARRAYS --input_config INPUT_CONFIG --output_file OUTPUT_FILE --input_shapes INPUT_SHAPES (optional) --debug (optional) optional arguments : -h, --help show this help message and exit. --graph_def_file GRAPH_DEF_FILE Full filepath of file containing frozen GraphDef. --input_arrays INPUT_ARRAYS Names of the input arrays, comma-separated. --output_arrays OUTPUT_ARRAYS Names of the output arrays, comma-separated. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth. Default : None --debug Run gdb in Debug mode. Default : False. \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ~/SGS_IPU_SDK/SRC/Tool/Scripts/ConvertTool/ConvertTool.py tensorflow_graphdef \\ --graph_def_file ~/SGS_IPU_SDK/SGS_Models/tensorflow/resnet_v2_50/resnet_v2_50.pb \\ --output_file ./resnet_v2_float.sim \\ --input_arrays input \\ --output_arrays resnet_v2_50/predictions/Reshape_1 \\ --input_shapes 1,299,299,3 \\ --input_config ~/SGS_IPU_SDK/SGS_Models/tensorflow/resnet_v2_50/input_config.ini \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a --graph_def_file : \u8f93\u5165\u7684\u6a21\u578b\u4e3aTensorFlow frozen\u7684graphdef\u7684pb\u683c\u5f0f\u6587\u4ef6\u8def\u5f84\u3002 --output_file : \u8f93\u51fa\u7684\u6a21\u578b\u6587\u4ef6\uff0cflatbuffer\u683c\u5f0f\uff0csim\u540e\u7f00\u6587\u4ef6\u3002 --input_arrays : \u7f51\u7edc\u8f93\u5165Tensor\u7684\u540d\u5b57\uff0c\u4ee5\u5b57\u7b26\u4e32\u7c7b\u578b\u6307\u5b9a\uff0c\u591a\u4e2ainputs\u7684\u8bdd\uff0c\u4e2d\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0c\u5982\uff1a--input_arrays='Input1','Input2'\u3002 --output_arrays : \u7f51\u7edc\u8f93\u51faTensor\u7684\u540d\u5b57\uff0c\u4ee5\u5b57\u7b26\u4e32\u7c7b\u578b\u6307\u5b9a\uff0c\u591a\u4e2aoutputs\u7684\u8bdd\uff0c\u4e2d\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\u3002 --input_shapes : \u7f51\u7edc\u8f93\u5165Tensor\u7684shape\uff0c\u683c\u5f0f\u4e3aNHWC\uff0cdimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0cshape\u4e2a\u6570\u548cinputs\u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002","title":"2.1.1 tensorflow_graphdef \u6846\u67b6\u6307\u4ee4"},{"location":"module/User_Guide/Develop/Convert.html#212-tensorflow_savemodel","text":"python3 ConvertTool.py tensorflow_savemodel -h usage : ConvertTool.py tensorflow_savemodel [-h] --saved_model_dir SAVED_MODEL_DIR [--input_arrays INPUT_ARRAYS] [--input_shapes INPUT_SHAPES] [--output_arrays OUTPUT_ARRAYS] [--tag_set TAG_SET] [--signature_key SIGNATURE_KEY] --input_config INPUT_CONFIG --output_file OUTPUT_FILE [--debug] optional arguments : -h, --help show this help message and exit --saved_model_dir SAVED_MODEL_DIR SavedModel directory to convert --input_arrays INPUT_ARRAYS Names of the input arrays, comma-separated. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth. (default None) --output_arrays OUTPUT_ARRAYS Names of the output arrays, comma-separated. --tag_set TAG_SET Set of tags identifying the MetaGraphDef within the SavedModel to analyze. All tags in the tag set must be present. (default None) --signature_key SIGNATURE_KEY Key identifying SignatureDef containing inputs and outputs.(default DEFAULT_SERVING_SIGNATURE_DEF_KEY) --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. --debug Run gdb in Debug mode. \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ~/SGS_IPU_SDK/SRC/Tool/Scripts/ConvertTool/ConvertTool.py tensorflow_savemodel \\ --saved_model_dir ~/test/tensorflow_model/save_model \\ --input_config ~/test/tensorflow_model/input_config.ini \\ --output_file ~/test/tensorflow_model/save_model_float.sim \\ --tag_set test_saved_model \\ --signature_key test_signature \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a --saved_model_dir : \u8f93\u5165\u7684\u6a21\u578b\u4e3aTensorFlow saved_model.builder\u751f\u6210\u7684\u6587\u4ef6\u8def\u5f84\u3002 --output_file : \u8f93\u51fa\u7684\u6a21\u578b\u6587\u4ef6\uff0cflatbuffer\u683c\u5f0f\uff0csim\u540e\u7f00\u6587\u4ef6\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 \u53ef\u9009\u53c2\u6570\uff1a --input_arrays : \u7f51\u7edc\u8f93\u5165Tensor\u7684\u540d\u5b57\uff0c\u4ee5\u5b57\u7b26\u4e32\u7c7b\u578b\u6307\u5b9a\uff0c\u591a\u4e2ainputs\u7684\u8bdd\uff0c\u4e2d\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0c\u5982\uff1a--input_arrays='Input1','Input2'\uff0c\u82e5\u4e0d\u6307\u5b9a\u5219\u4ecesaved_model_dir\u4e2d\u83b7\u53d6\u3002 --output_arrays : \u7f51\u7edc\u8f93\u51faTensor\u7684\u540d\u5b57\uff0c\u4ee5\u5b57\u7b26\u4e32\u7c7b\u578b\u6307\u5b9a\uff0c\u591a\u4e2aoutputs\u7684\u8bdd\uff0c\u4e2d\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\u3002\u82e5\u4e0d\u6307\u5b9a\u5219\u4ecesaved_model_dir\u4e2d\u83b7\u53d6\u3002 --input_shapes : \u7f51\u7edc\u8f93\u5165Tensor\u7684shape\uff0c\u683c\u5f0f\u4e3aNHWC\uff0cdimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0cshape\u4e2a\u6570\u548cinputs \u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002\u82e5\u4e0d\u6307\u5b9a\u5219\u4ecesaved_model_dir\u4e2d\u83b7\u53d6\u3002 --tag_set : \u9700\u8981\u548csave model\u65f6\u6240\u6307\u5b9a\u7684tag\u5339\u914d\uff0c\u5982\u679c\u4e0d\u505a\u8bbe\u5b9a\uff0c\u5219\u9ed8\u8ba4\u4e3a\u2018serve\u2019\u3002 --signature_key : \u9700\u8981\u548csave model\u65f6\u6240\u6307\u5b9a\u7684signature\u5339\u914d\u3002\u5982\u679c\u4e0d\u505a\u8bbe\u5b9a\uff0c\u5219\u9ed8\u8ba4\u4e3a \u2018DEFAULT_SERVING_SIGNATURE_DEF_KEY\u2019","title":"2.1.2 tensorflow_savemodel \u6846\u67b6\u6307\u4ee4"},{"location":"module/User_Guide/Develop/Convert.html#213-keras","text":"python3 ConvertTool.py keras -h usage : ConvertTool.py keras [-h] --model_file MODEL_FILE --input_config INPUT_CONFIG --output_file OUTPUT_FILE --input_arrays INPUT_ARRAYS (optional) --output_arrays OUTPUT_ARRAYS (optional) --input_shapes INPUT_SHAPES (optional) --custom_objects CUSTOM_OBJECTS (optional) --debug (optional) optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of HDF5 file containing the tf.keras model. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. --input_arrays INPUT_ARRAYS Names of the input arrays, comma-separated. Default : None. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth. Default : None. --output_arrays OUTPUT_ARRAYS Names of the output arrays, comma-separated. Default : None. --custom_objects CUSTOM_OBJECTS Dict mapping names (strings) to custom classes or functions to be considered during model deserialization. Default : None. --debug Run gdb in Debug mode. Default : False. \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ~/SGS_IPU_SDK/SRC/Tool/Scripts/ConvertTool/ConvertTool.py keras \\ --model_file ./TEST_h5/resnet50/resnet50.h5 \\ --input_config ./TEST_h5/resnet50/input_config.ini \\ --output_file ./TEST_h5/resnet50/resnet50_float.sim \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a --model_file : \u8f93\u5165\u7684\u6a21\u578b\u4e3akeras h5\u683c\u5f0f\u6587\u4ef6\u8def\u5f84\u3002 --output_file : \u8f93\u51fa\u7684\u6a21\u578b\u6587\u4ef6\uff0cflatbuffer\u683c\u5f0f\uff0csim\u540e\u7f00\u6587\u4ef6\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 \u53ef\u9009\u53c2\u6570\uff1a --input_arrays : \u7f51\u7edc\u8f93\u5165Tensor\u7684\u540d\u5b57\uff0c\u4ee5\u5b57\u7b26\u4e32\u7c7b\u578b\u6307\u5b9a\uff0c\u591a\u4e2ainputs\u7684\u8bdd\uff0c\u4e2d\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0c\u5982\uff1a--input_arrays='Input1','Input2'\u3002 --output_arrays : \u7f51\u7edc\u8f93\u51faTensor\u7684\u540d\u5b57\uff0c\u4ee5\u5b57\u7b26\u4e32\u7c7b\u578b\u6307\u5b9a\uff0c\u591a\u4e2aoutputs\u7684\u8bdd\uff0c\u4e2d\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\u3002 --input_shapes : \u7f51\u7edc\u8f93\u5165Tensor\u7684shape\uff0c\u683c\u5f0f\u4e3aNHWC\uff0cdimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0cshape\u4e2a\u6570\u548cinputs \u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002 --custom_objects : Dict mapping names (strings) to custom classes or functions to be considered during model deserialization (default None).","title":"2.1.3 keras\u6846\u67b6\u6307\u4ee4"},{"location":"module/User_Guide/Develop/Convert.html#214-tflite","text":"python3 ConvertTool.py tflite -h usage : ConvertTool.py tflite [-h] --model_file MODEL_FILE --input_config INPUT_CONFIG --output_file OUTPUT_FILE --debug (optional) optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of tflite file containing the tflite model. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. --debug Run gdb in Debug mode. Default : False. \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ~/SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py tflite \\ --model_file ~/test/tensorflow_model/Debug_save_model_float.tflite \\ --input_config ~/test/tensorflow_model/input_config.ini \\ --output_file ~/test/tensorflow_model/save_model_float.sim \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a --model_file : \u8f93\u5165\u7684\u6a21\u578b\u4e3atflite\u683c\u5f0f\u6587\u4ef6\u8def\u5f84(\u5fc5\u987b\u4e3a\u975e\u91cf\u5316\u6a21\u578b)\u3002 --output_file : \u8f93\u51fa\u7684\u6a21\u578b\u6587\u4ef6\uff0cflatbuffer\u683c\u5f0f\uff0csim\u540e\u7f00\u6587\u4ef6\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002","title":"2.1.4 tflite\u6846\u67b6\u6307\u4ee4"},{"location":"module/User_Guide/Develop/Convert.html#215-caffe","text":"python3 ConvertTool.py caffe -h usage : ConvertTool.py caffe [-h] --model_file MODEL_FILE --weight_file WEIGHT_FILE --input_config INPUT_CONFIG --output_file OUTPUT_FILE --input_arrays INPUT_ARRAYS (optional) --output_arrays OUTPUT_ARRAYS (optional) --debug (optional) optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of tflite file containing the caffe model. --weight_file WEIGHT_FILE Full filepath of tflite file containing the caffe weight. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. --input_arrays INPUT_ARRAYS Names of the input arrays, comma-separated. Default : None. --output_arrays OUTPUT_ARRAYS Names of the output arrays, comma-separated. Default : None. --input_pack_model_arrays INPUT_PACK_MODEL_ARRAYS Set input Pack model, specify name pack model like caffe(NCHW),comma-separated. All inputTersors will be NCHW if set \"caffe\" (default is NHWC) --output_pack_model_arrays OUTPUT_PACK_MODEL_ARRAYS Set output Pack model, specify name pack model like caffe(NCHW),comma-separated. All outputTensors will be NCHW if set \"caffe\" (default is NHWC) --debug Run gdb in Debug mode. \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ~/SGS_IPU_SDK/SRC/Tool/Scripts/ConvertTool/ConvertTool.py caffe \\ --model_file ~/SGS_IPU_SDK/SGS_Models/caffe/caffe_resnet50_conv/caffe_resnet50_conv.prototxt \\ --weight_file ~/SGS_IPU_SDK/SGS_Models/caffe/caffe_resnet50_conv/caffe_resnet50_conv.caffemodel \\ --input_arrays data \\ --output_arrays prob \\ --input_config ~/SGS_IPU_SDK/SGS_Models/caffe/caffe_resnet50_conv/input_config.ini \\ --output_file ./resnet50.sim \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a --model_file : Caffe\u6a21\u578b\u6587\u4ef6\u7684\u8def\u5f84 --weight_file : Caffe\u6743\u91cd\u6587\u4ef6\u7684\u8def\u5f84 --input_arrays : Caffe\u6a21\u578b\u8f93\u5165\u7684\u8282\u70b9\u540d\u79f0\uff0c\u4f7f\u7528input\u7684\u540d\u5b57 --output_arrays : \u6a21\u578b\u8f93\u51fa\u7684\u8282\u70b9\u540d\u79f0\uff0c\u4f7f\u7528\u6700\u540elayer\u7684top\u540d\u5b57\uff0c\u5982\u6709\u591a\u4e2a\u8f93\u51fa\u8282\u70b9\uff0c\u8bf7\u7528\u9017\u53f7( , )\u5206\u9694 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput config\u7684\u914d\u7f6e\u4fe1\u606f\u3002 --output_file : \u8f6c\u6362\u6a21\u578b\u7684\u8f93\u51fa\u8def\u5f84\u3002 --input_pack_model_arrays : \u53ef\u9009\u53c2\u6570\u3002\u6307\u5b9a\u8f93\u5165\u8282\u70b9\u540d\u79f0\uff0c\u6309\u7167caffe\u6a21\u5f0f\u8f93\u5165\uff08NCHW\uff09\u3002\u8f93\u5165\u201ccaffe\u201d\u65f6\uff0c\u6240\u6709\u8f93\u5165\u90fd\u8f6c\u6362\u6210caffe\u6a21\u5f0f\u3002 --output_pack_model_arrays : \u53ef\u9009\u53c2\u6570\u3002\u6307\u5b9a\u8f93\u51fa\u8282\u70b9\u540d\u79f0\uff0c\u6309\u7167caffe\u6a21\u5f0f\u8f93\u51fa\uff08NCHW\uff09\u3002\u8f93\u5165\u201ccaffe\u201d\u65f6\uff0c\u6240\u6709\u8f93\u51fa\u90fd\u8f6c\u6362\u6210caffe\u6a21\u5f0f\u3002","title":"2.1.5 caffe\u6846\u67b6\u6307\u4ee4"},{"location":"module/User_Guide/Develop/Convert.html#2151-deprecated-caffe-convert-tool-command","text":"Caffe Convert Tool\u5de5\u5177\u7684\u4f4d\u7f6e\u5728 ~/SGS_IPU_SDK/SRC/Tool/Scripts/CaffeConvertTool/converter.py \u3002\u8be5\u6307\u4ee4\u4e3a\u4e86\u517c\u5bb9\u8001\u7248\u672cSDK\uff0c\u4e0d\u5efa\u8bae\u4f7f\u7528\u8be5\u547d\u4ee4\u8f6c\u6362caffe model\u3002 \u8fdb\u5165\u5230\u8be5\u5de5\u5177\u76ee\u5f55\uff0c\u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ~/SGS_IPU_SDK/SRC/Tool/Scripts/CaffeConvertTool/converter.py \\ --model_file ~/SGS_IPU_SDK/SGS_Models/caffe/caffe_resnet50_conv/caffe_resnet50_conv.prototxt \\ --weight_file ~/SGS_IPU_SDK/SGS_Models/caffe/caffe_resnet50_conv/caffe_resnet50_conv.caffemodel \\ --input_node data --output_node prob \\ --input_config ~/SGS_IPU_SDK/SGS_Models/caffe/caffe_resnet50_conv/input_config.ini \\ --output_dir ./resnet50.sim \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a --model_file : Caffe\u6a21\u578b\u6587\u4ef6\u7684\u8def\u5f84 --weight_file : Caffe\u6743\u91cd\u6587\u4ef6\u7684\u8def\u5f84 --input_node : Caffe\u6a21\u578b\u8f93\u5165\u7684\u8282\u70b9\u540d\u79f0\uff0c\u4f7f\u7528input\u7684\u540d\u5b57 --output_node : \u6a21\u578b\u8f93\u51fa\u7684\u8282\u70b9\u540d\u79f0\uff0c\u4f7f\u7528\u6700\u540elayer\u7684top\u540d\u5b57\uff0c\u5982\u6709\u591a\u4e2a\u8f93\u51fa\u8282\u70b9\uff0c\u8bf7\u7528\u9017\u53f7( , )\u5206\u9694 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput config\u7684\u914d\u7f6e\u4fe1\u606f\u3002 --output_dir : \u8f6c\u6362\u6a21\u578b\u7684\u8f93\u51fa\u8def\u5f84\uff08\u9ed8\u8ba4\u4e3a./Converted_Net_float.sim\uff09\u3002","title":"2.1.5.1. Deprecated caffe convert tool command"},{"location":"module/User_Guide/Develop/Convert.html#216-onnx","text":"python3 Path_to_SGS_IPU_SDK/Scripts/ConvertTool onnx -h usage : ConvertTool.py onnx [-h] --model_file MODEL_FILE --input_arrays INPUT_ARRAYS --input_shapes INPUT_SHAPES --output_arrays OUTPUT_ARRAYS --input_config INPUT_CONFIG --output_file OUTPUT_FILE [--debug] optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of tflite file containing the onnx model. --input_arrays INPUT_ARRAYS Names of the input arrays, comma-separated. (default None). --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon-separated. For many models each shape takes the form N C H W (default None) --output_arrays OUTPUT_ARRAYS Names of the output arrays, comma-separated. (default None) --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. --input_pack_model INPUT_PACK_MODEL input tensor pack model,NCHW(caffe pytorch) or NHWC(tensorflow). default NCHW \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ~/SGS_IPU_SDK/SRC/Tool/Scripts/ConvertTool/ConvertTool.py onnx \\ --model_file ~/SGS_IPU_SDK/SGS_Models/onnx/onnx_mobilenet_v2/onnx_mobilenet_v2.onnx \\ --input_arrays data \\ --input_shapes 1,3,224,224 \\ --output_arrays mobilenetv20_output_flatten0_reshape0 \\ --input_config ~/SGS_IPU_SDK/SGS_Models/onnx/onnx_mobilenet_v2/input_config.ini \\ --output_file ./onnx_mobilenet_v2_float.sim \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a --model_file : Onnx\u6a21\u578b\u6587\u4ef6\u7684\u8def\u5f84 --input_arrays : Onnx\u6a21\u578b\u8f93\u5165\u7684\u8282\u70b9\u540d\u79f0\uff0c\u4f7f\u7528input\u7684\u540d\u5b57,\u591a\u8f93\u5165\u7528\u9017\u53f7( , )\u5206\u9694 --input_shapes : Onnx \u6a21\u578b\u8f93\u5165shape\uff0c \u591a\u8f93\u5165\u7528\u5192\u53f7( : )\u5206\u9694 --output_arrays : \u6a21\u578b\u8f93\u51fa\u7684\u8282\u70b9\u540d\u79f0\uff0c\u4f7f\u7528\u6700\u540elayer\u7684top\u540d\u5b57\uff0c\u5982\u6709\u591a\u4e2a\u8f93\u51fa\u8282\u70b9\uff0c\u8bf7\u7528\u9017\u53f7( , )\u5206\u9694 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput config\u7684\u914d\u7f6e\u4fe1\u606f\u3002 --output_dir : \u8f6c\u6362\u6a21\u578b\u7684\u8f93\u51fa\u8def\u5f84\u3002 --input_pack_model : \u6a21\u578b\u8f93\u5165\u7684\u6392\u5217\u65b9\u5f0f\u3002\u7531Tensorflow\u8f6c\u8fc7\u6765\u7684onnx\u6a21\u578b\uff0c\u901a\u5e38\u4e3aNHWC\uff1b\u7531caffe\u6216\u8005pytorch\u8f6c\u8fc7\u6765\u7684onnx\u6a21\u578b\uff0c\u901a\u5e38\u4e3aNCHW --output_file \uff1a\u8f6c\u6362\u6a21\u578b\u7684\u8f93\u51fa\u540d\u5b57\u3002","title":"2.1.6 Onnx\u6846\u67b6\u6307\u4ee4"},{"location":"module/User_Guide/Develop/Convert.html#2161-onnx","text":"\u5982\u679c\u6a21\u578b\u4e2d\u5e26\u6709\u540e\u5904\u7406\u7684\u7b97\u5b50\uff0c\u8bf7\u5148\u53bb\u9664\uff0c\u76ee\u524d\u53ea\u652f\u6301\u4e3b\u5e72\u7f51\u7edc\u7684\u8f6c\u6362\u3002","title":"2.1.6.1. Onnx\u6a21\u578b\u8f6c\u6362\u6ce8\u610f\u4e8b\u9879"},{"location":"module/User_Guide/Develop/Convert.html#217","text":"Convert Tool\u8f6c\u6362\u5de5\u5177\u8f6c\u6362\u5b8c\u6210\u540e\u4f1a\u751f\u6210\u4e24\u4e2a\u6587\u4ef6\uff0c\u4f8b\u5982 --output_dir \u6307\u5b9a\u4e3a ./resnet50.sim\uff0c\u8f6c\u6362\u5b8c\u6210\u540e\u4f1a\u751f\u6210Debug_resnet50.sim\u548cresnet50.sim\u3002\u5176\u4e2d\uff0cresnet50.sim\u662f\u771f\u6b63\u8f6c\u6362\u597d\u7684\u6587\u4ef6\uff0cDebug_resnet50.sim\u662f\u7ecf\u8fc7\u8f6c\u6362\u540e\u7684\u4e2d\u95f4\u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u672a\u7ecf\u8fc7\u4f18\u5316\uff0c\u4e0e\u539f\u6846\u67b6\u6a21\u578b\u62e5\u6709\u76f8\u540c\u7684\u7f51\u7edc\u7ed3\u6784\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f5c\u4e3a\u8f6c\u6362\u540e\u8c03\u8bd5\u4f7f\u7528\uff0c\u4f46\u662f\u65e0\u6cd5\u5728DLA SDK\u4e2d\u8fd0\u884c\u3002","title":"2.1.7 \u6ce8\u610f\u4e8b\u9879"},{"location":"module/User_Guide/Develop/Convert.html#22-input-config","text":"\u5de5\u5177\u7684\u53c2\u6570 --input_config \u9700\u8981\u6307\u5b9ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u6587\u4ef6input_config.ini\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u7684\u4e3b\u8981\u529f\u80fd\u6709\uff1a \u2022 \u914d\u7f6e\u7f51\u7edc\u6a21\u578b\u56fe\u7247\u524d\u5904\u7406\u7684\u5f52\u4e00\u5316\u4fe1\u606f\uff1b \u2022 \u914d\u7f6e\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u8f93\u51fa\u7684\u91cf\u5316\u5904\u7406\u4fe1\u606f\uff1b \u2022 \u914d\u7f6e\u7f51\u7edc\u6a21\u578b\u4e2d\u5377\u79ef\u7684\u91cf\u5316\u4fe1\u606f\u3002 \u914d\u7f6einput_config.ini\u6587\u4ef6\u4e3b\u8981\u662f\u4e3a\u4e86\u80fd\u5c06\u7f51\u7edc\u6a21\u578b\u5feb\u901f\u9002\u914d\u5230SigmaStar\u82af\u7247\u4e2d\u4f7f\u7528\u3002\u5728\u7f51\u7edc\u6a21\u578b\u7684\u8bad\u7ec3\u4e2d\uff0c\u4e0d\u540c\u7684\u6846\u67b6\u548c\u8bad\u7ec3\u6570\u636e\u96c6\u9700\u8981\u7f51\u7edc\u4f7f\u7528\u4e0d\u540c\u7684\u56fe\u7247\u5f52\u4e00\u5316\u65b9\u6cd5\uff0c\u800c\u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0c\u4e3a\u4e86\u80fd\u591f\u8ba9\u7f51\u7edc\u6a21\u578b\u7684\u9884\u6d4b\u66f4\u52a0\u51c6\u786e\uff0c\u9700\u8981\u8fd8\u539f\u8bad\u7ec3\u6a21\u578b\u65f6\u7684\u56fe\u7247\u524d\u5904\u7406\u5f52\u4e00\u5316\u65b9\u6cd5\u3002 \u5c06RGB\u4e09\u4e2a\u901a\u9053\u7684\u5747\u503c\u548cstd_value\u8bbe\u7f6e\u597d\u540e\uff0c\u5728\u8f6c\u6362\u6a21\u578b\u65f6\u4f1a\u5199\u5165\u5230\u6a21\u578b\u5185\u90e8\uff0c\u8fd9\u6837\u5728\u786c\u4ef6\u4e0a\u5b9e\u9645\u4f7f\u7528\u65f6\uff0c\u4ec5\u9700\u8981\u5c06\u56fe\u7247resize\u5230\u7f51\u7edc\u6a21\u578b\u7684\u8f93\u5165\u7684\u5c3a\u5bf8\uff0c\u56fe\u7247\u5f52\u4e00\u5316\u7684\u5de5\u4f5c\u5728\u7f51\u7edc\u5185\u90e8\u5b8c\u6210\u3002 \u53e6\u5916\uff0c\u5b9e\u9645\u786c\u4ef6\u4e0a\u4f7f\u7528\u65f6\u56fe\u7247\u8f93\u5165\u683c\u5f0f\u4e0e\u8bad\u7ec3\u65f6\u4f7f\u7528\u7684RGB\u53ef\u80fd\u6709\u5f88\u5927\u533a\u522b\uff0c\u6b63\u786e\u914d\u7f6e\u8fd9\u4e9b\u9009\u9879\u80fd\u4f7f\u8f6c\u6362\u597d\u7684\u6a21\u578b\u5185\u62e5\u6709\u8fd9\u4e9b\u914d\u7f6e\u4fe1\u606f\uff0c\u80fd\u591f\u76f4\u63a5\u5728SigmaStar\u7684\u786c\u4ef6\u4e0a\u90e8\u7f72\u3002 [INPUT_CONFIG] ;Names of the input arrays, comma-separated.image input must be the first. inputs = 'data'; ;Memory formats of input arrays, comma-separated. ;One of RGB, BGR, RGBA, BGRA, YUV_NV12, RAWDATA_S16_NHWC, RAWDATA_S16_NHWX, ;RAWDATA_U8_NHWC, RAWDATA_U8_NHWX ;Each entry in the list should match an entry in inputs arrays. training_input_formats = BGR; input_formats = BGR; ;Indicate the input data need qauntize or not. ;Each entry in the list should match an entry in inputs arrays. quantizations = TRUE; ;mean_values parameter for image models, ;Each entry in the list match RGB channel of\uff08RGB,BGR,RGBA,BGRA,YUV_NV12\uff09 mean_red = 0.0; mean_green = 0.0; mean_blue = 0.0; ;std_value parameter for image models, std_value = 1.0; [OUTPUT_CONFIG] ;Names of the output arrays, comma-separated. outputs = 'prob'; ;Indicate the output data need deqauntize or not. ;Each entry in the list should match an entry in outputs arrays. dequantizations = TRUE; [CONV_CONFIG] tensor_arrays = 'conv1-1,conv2-1'; \u8be5\u6587\u4ef6\u4e3b\u8981\u5206\u4e3a\u4e09\u4e2a\u8bbe\u7f6e\u4fe1\u606f\uff1a [INPUT_CONFIG] [OUTPUT_CONFIG] [CONV_CONFIG] \u9488\u5bf9\u8fd9\u4e09\u4e2a\u8bbe\u7f6e\u4fe1\u606f\u5177\u4f53\u8bf4\u660e\uff1a \u6ce8\u610f String\u7c7b\u578b\u7684\u503c\uff0c\u5982tensor name\uff0c\u9700\u7528('')\u5c06\u5185\u5bb9\u5305\u542b\u8d77\u6765\uff0c\u4f8b\u5982outputs='detectionBoxes,detectionClasses,detectionScores,numDetections';","title":"2.2. input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e"},{"location":"module/User_Guide/Develop/Convert.html#221-input_config","text":"inputs : \u7f51\u7edc\u8f93\u5165Tensor\u7684name\uff0c\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u8bf7\u7528\u9017\u53f7( , )\u5206\u9694\u3002\u6a21\u578b\u8f93\u5165Tensor\u987a\u5e8f\u4e0e inputs \u7684\u914d\u7f6e\u987a\u5e8f\u4e00\u81f4\u3002 training_input_formats : \u7f51\u7edc\u8bad\u7ec3\u65f6\u7684\u56fe\u7247\u683c\u5f0f\uff0c\u6570\u91cf\u548c\u987a\u5e8f\u4e0einputs\u4e00\u4e00\u5bf9\u5e94\uff0c\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u3002\u8fd9\u4e9b\u683c\u5f0f\u5305\u62ecRGB\uff0cBGR\uff0cRAWDATA_S16_NHWC(\u82e5 training_input_formats \u8bbe\u7f6e\u4e3a RAWDATA_S16_NHWC ,\u5219 input_formats \u4e5f\u5fc5\u987b\u8bbe\u7f6e\u4e3a RAWDATA_S16_NHWC ) \u5176\u4e2d\u4e4b\u4e00\u3002training_input_formats\u53ef\u4ee5\u548cinput_formats \u4e0d\u4e00\u6837\u3002\u4f8b\u5982\u5728\u5728SigmaStar\u5f00\u53d1\u677f\u4e0a\uff0cinput_formats\u662fYUV_NV12\uff0c\u4f46\u662ftraining input formats \u662fRGB\u3002 input_formats : \u7f51\u7edc\u6a21\u578b\u5728SigmaStar\u82af\u7247\u4e0a\u8fd0\u884c\u7684\u56fe\u7247\u8f93\u5165\u683c\u5f0f\uff0c\u6570\u91cf\u548c\u987a\u5e8f\u4e0einputs\u4e00\u4e00\u5bf9\u5e94\uff0c\u9017\u53f7( , )\u5206\u9694\u3002 \u8fd9\u4e9b\u683c\u5f0f\u5305\u62ec\uff1a RGB BGR RGBA BGRA YUV_NV12 RAWDATA_S16_NHWC \u6ce8\u610f\uff1a \u7070\u5ea6\u56fe\u7247\u8bf7\u6309\u5982\u4e0b\u65b9\u5f0f\u914d\u7f6e\uff1a training_input_formats = RGB input_formats = GRAY quantizations : \u7528\u6765\u6807\u8bc6\u6240\u6709\u8f93\u5165Tensor\u7684\u6570\u636e\u662f\u5426\u9700\u8981\u505a\u91cf\u5316\uff0cTRUE\u6216\u8005FALSE\uff0c\u6570\u91cf\u7b49\u4e8einputs \u4e2a\u6570\u3002\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 mean_red / mean_green / mean_blue : \u7f51\u7edc\u8bad\u7ec3\u9636\u6bb5\uff0c\u4e00\u822c\u4f1a\u5bf9\u56fe\u7247\u505a\u524d\u5904\u7406\uff0c\u5bf9\u4e8eRGB\u901a\u9053\u7684\u56fe\u7247\uff0c\u4f7f\u7528\u5982\u4e0b\u516c\u5f0f\u5bf9\u56fe\u7247\u8fdb\u884c\u9884\u5904\u7406\uff1a mean_red / mean_green / mean_blue \u5c31\u662f\u76f8\u5e94\u901a\u9053\u4e0a\u7684mean\u503c\u3002\u5982\u679c\u8fd9\u4e2a\u7f51\u7edc\u6ca1\u6709\u505a\u4efb\u4f55\u5f52\u4e00\u5316\u5904\u7406\uff0c\u8fd9\u4e2a\u503c\u8bbe\u4e3a0\u5373\u53ef\u3002\u6bcf\u4e2amean\u6570\u91cf\u7b49\u4e8einputs \u4e2a\u6570\u3002\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 std_value : \u5982\u4e0a\u516c\u5f0f\uff0c\u5982\u679c\u6ca1\u6709\u505a\u4efb\u4f55\u5f52\u4e00\u5316\u5904\u7406\uff0c\u8fd9\u4e2a\u503c\u8bbe\u4e3a1\u5373\u53ef\u3002\u5982\u679c\u6bcf\u4e2a\u901a\u9053\u90fd\u6709\u5bf9\u5e94\u7684std_value\u503c\uff0c\u4ee5\u82f1\u6587\u5192\u53f7( : )\u5206\u9694\uff0c\u987a\u5e8f\u4e3aRGB\u3002\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 yuv420_h_pitch_alignment \uff1a\u7528\u6765\u6807\u8bc6YUV\u6570\u636e\u4f5c\u4e3a\u7f51\u7edc\u8f93\u5165\u65f6H\u65b9\u5411\u5bf9\u9f50\u7684\u6570\u91cf\uff0c\u9ed8\u8ba4\u4e3a16\u3002 yuv420_v_pitch_alignment \uff1a\u7528\u6765\u6807\u8bc6YUV\u6570\u636e\u4f5c\u4e3a\u7f51\u7edc\u8f93\u5165\u65f6V\u65b9\u5411\u5bf9\u9f50\u7684\u6570\u91cf\uff0c\u9ed8\u8ba4\u4e3a2\u3002 xrgb_h_pitch_alignment \uff1a\u7528\u6765\u6807\u8bc6XRGB\u6570\u636e\u4f5c\u4e3a\u7f51\u7edc\u8f93\u5165\u65f6H\u65b9\u5411\u5bf9\u9f50\u7684\u6570\u91cf\uff0c\u9ed8\u8ba4\u4e3a16\u3002 \u6ce8\u610f \u4ee5\u4e0a\u4e09\u4e2a\u914d\u7f6e\u53ea\u80fd\u914d\u7f6e\u9ed8\u8ba4\u503c\u7684\u6574\u6570\u500d\u3002 \u4f8b\u5982\uff1ayuv420_h_pitch_alignment=32;","title":"2.2.1 INPUT_CONFIG"},{"location":"module/User_Guide/Develop/Convert.html#222-output_config","text":"outputs : \u7f51\u7edc\u8f93\u51faTensor\u7684name\uff0c\u5982\u679c\u6709\u591a\u4e2a\u8f93\u51faTensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u3002\u8f6c\u6362\u5e26\u540e\u5904\u7406\u7f51\u7edc\u65f6\uff0cBackbone\u7f51\u7edc\u7684outputs\u4e0e\u5b8c\u6574\u7f51\u7edcoutputs\u7684\u540d\u79f0\u4e0d\u540c\uff0c\u5176\u4f59\u8bbe\u7f6e\u5e94\u5b8c\u5168\u4e00\u81f4\u3002\u6a21\u578b\u8f93\u51faTensor\u987a\u5e8f\u4e0e outputs \u7684\u914d\u7f6e\u987a\u5e8f\u4e00\u81f4\u3002 dequantizations : \u7528\u6765\u6807\u8bc6\u6240\u6709\u8f93\u51faTensor\u7684\u6570\u636e\u662f\u5426\u9700\u8981\u505a\u53cd\u91cf\u5316\uff0cTRUE\u6216\u8005FALSE\uff0c\u6570\u91cf\u7b49\u4e8eoutputs\u3002\u5982\u679c\u6709\u591a\u4e2a\u8f93\u51faTensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002\u8be5\u9009\u9879\u4ec5\u5728\u677f\u4e0a\u8fd0\u884c\u65f6\u751f\u6548\u3002\u8be5\u9009\u9879\u4ec5\u5728\u677f\u4e0a\u8fd0\u884c\u65f6\u751f\u6548\u3002\u8be5\u9009\u9879\u8bbe\u4e3aTRUE\u65f6\uff0c\u4f1a\u5728\u8f6c\u6362\u5230Fixed\u6a21\u578b\u540e\u5728\u5bf9\u5e94\u7684\u8f93\u51fa\u589e\u52a0Fix2float\u7b97\u5b50\uff0c\u5b8c\u6210\u8f93\u51fa\u6570\u636e\u4e58scale\u8f6c\u6362\u6210float\u7684\u64cd\u4f5c\u3002","title":"2.2.2 OUTPUT_CONFIG"},{"location":"module/User_Guide/Develop/Convert.html#223-conv_config","text":"input_format : \u6307\u5b9a\u7f51\u7edc\u4e2d\u6240\u6709\u5377\u79ef\u7684\u91cf\u5316\u65b9\u5f0f\uff0c\u9ed8\u8ba4ALL_UINT8\uff0c\u53ef\u9009\u65b9\u6848ALL_UINT8\uff0cALL_INT16\uff0c CONV2D_INT16\uff0cDEPTHWISE_INT16\u3002 ALL_UINT8 : \u6307\u5b9a\u6240\u6709\u5377\u79ef\u6309\u7167UINT8\u91cf\u5316\uff08\u9ed8\u8ba4\u65b9\u5f0f\uff09\u3002 ALL_INT16 : \u6307\u5b9a\u6240\u6709\u5377\u79ef\u6309\u7167INT16\u91cf\u5316\u3002 CONV2D_INT16 : \u53ea\u6307\u5b9a\u6240\u6709\u666e\u901a\u5377\u79ef\u6309\u7167INT16\u91cf\u5316\u3002 DEPTHWISE_INT16 : \u53ea\u6307\u5b9a\u6240\u6709Depthwise \u5377\u79ef\u6309\u7167INT16\u91cf\u5316\u3002 \u5728 UINT8 \u6a21\u5f0f \u4e0b\uff0c\u5377\u79ef\u8fd0\u884c\u6240\u5360\u5e26\u5bbd\u5c0f\uff0c\u8fd0\u884c\u901f\u5ea6\u5feb\uff1b\u5728 INT16\u6a21\u5f0f \u4e0b\uff0c\u53ef\u4ee5\u6781\u5927\u7684\u63d0\u9ad8\u5377\u79ef\u7684\u7cbe\u5ea6\uff0c\u4f46\u662f\u8fd0\u884c\u7684\u901f\u5ea6\u4f1a\u6709\u5f71\u54cd\u3002 tensor_arrays : \u6307\u5b9a\u7f51\u7edc\u4e2d\u67d0\u4e9b\u5c42\u7684\u5377\u79ef\u91cf\u5316\u65b9\u5f0f\u3002\u6574\u4e2a\u7f51\u7edc\u5377\u79ef\u90fd\u91c7\u7528\u9ed8\u8ba4\u7684UINT8 \uff0c\u4f46\u662f\u67d0\u4e9b\u5377\u79ef\u5c42\u9700\u8981\u66f4\u9ad8\u7684\u7cbe\u5ea6\uff0c\u8fd9\u65f6\u76f4\u63a5\u586b\u5199\u90a3\u4e9b\u5377\u79ef\u5c42\u7684\u7b2c\u4e00\u4e2a\u8f93\u5165\u7684 input id name\u5373\u53ef\u3002\u591a\u5c42\u65f6\uff0cname\u4ee5\u9017\u53f7( , )\u5206\u9694\u3002 \u6ce8\u610f \u5377\u79ef\u7b2c\u4e00\u4e2a\u8f93\u5165\u7684input id \u540d\u5b57\u53ef\u901a\u8fc7netron\u5de5\u5177\u67e5\u770b\u3002\u6307\u5b9a\u91cf\u5316\u65f6\uff0c\u7f51\u7edc\u4e2d\u7684\u7b2c\u4e00\u5c42\u5377\u79ef\u4e0d\u751f\u6548\u3002","title":"2.2.3 CONV_CONFIG"},{"location":"module/User_Guide/Develop/Convert.html#224-optimize_config","text":"skip_concatenation : \u7f51\u7edc\u4e2d\u7684Concatenation\u5c42\uff0c\u5982\u679c\u53ea\u9488\u5bf9\u6700\u540e\u4e00\u4e2a\u7ef4\u5ea6\u5408\u5e76\uff0c\u4f1a\u8d70\u8fdb\u8be5\u4f18\u5316\u4e2d\u3002Fixed\u6a21\u578b\u4f1a\u5c06Concatenation\u5c42\u8f6c\u6362\u4e3askip_concatenation\uff0cskip_concatenation\u5c42\u4f1a\u5927\u5e45\u51cf\u5c0f\u8fd0\u884c\u65f6\u95f4\u3002","title":"2.2.4 OPTIMIZE_CONFIG"},{"location":"module/User_Guide/Develop/Convert.html#23","text":"ConvertModels\u5de5\u5177\u7684\u4f4d\u7f6e\u5728 SourceCode/SRC/Tool/Scripts/ConvertTool/ConvertModels.py \u8be5\u5de5\u5177\u662f\u4e00\u6b21\u6027\u5c06\u539f\u59cb\u6a21\u578b\u8f6c\u6362\u4e3aSigmaStar\u79bb\u7ebf\u6a21\u578b\u3002\u4ec5\u9700\u914d\u7f6e\u4e00\u4e2ainput_config.ini\u6587\u4ef6\uff0c\u5c06\u5404\u9636\u6bb5\u6a21\u578b\u8f6c\u6362 \u8fc7\u7a0b\u4e2d\u6240\u9700\u8981\u7684\u53c2\u6570\u914d\u7f6e\u5230\u8be5\u6587\u4ef6\u5373\u53ef\u3002 \u5728 SourceCode/Project \u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SourceCode/Project source auto_convertModels.sh \u914d\u7f6e\u597dinput_config.ini\u6587\u4ef6\u4e2d\u7684\u5fc5\u9009\u53c2\u6570\uff0c\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u4e00\u952e\u751f\u6210SigmaStar\u79bb\u7ebf\u6a21\u578b\u3002 python3 ~/ SourceCode / SRC / Tool / Scripts / ConvertTool / ConvertModels . py -- input_config ./ input_config . ini input_config.ini\u6587\u4ef6\u53c2\u6570\u793a\u4f8b\uff1a [PLATFORM] ;Name of model framework. one of onnx,caffe,tensorflow_graphdef, keras,tflite platform = caffe; ipu = IPU100; [INPUT_MODEL_NAME] ;Name of models,where is the models location.comma-separated. model_files = xxxx.caffemodel,xxxx.prototxt; ;Name of special case in the models, eg. lstm [SPECIAL_MODEL_CASE] special_case = [OUTPUT_MODEL_NAME] ;Name of output models. output_file = xxxx_float.sim; [SPECIAL_PARAMS] ; (only tensorflow save_model)Set of tags identifying the MetaGraphDef within the SavedModel to analyze. All tags in the tag set must be present. (default None) tag_set = ; (only tensorflow save_model) Key identifying SignatureDef containing inputs and outputs.(default DEFAULT_SERVING_SIGNATURE_DEF_KEY) signature_key = ; (only keras)Dict mapping names (strings) to custom classes or functions to be considered during model deserialization. (default None) custom_objects = ;preprocess py name,if null,will automatic generation preprocesspy_name = ; (only caffe)Set input Pack model, specify name pack model like caffe(NCHW),comma-separated. ;All inputTersors will be NCHW if set \"caffe\" (default is NHWC) input_pack_model_arrays = ;(only caffe)Set output Pack model, specify name pack model like caffe(NCHW),comma-separated.; All outputTersors will be NCHW if set \"caffe\" (default is NHWC) output_pack_model_arrays = ;(only onnx) input tensor pack model,NCHW(caffe pytorch) or NHWC(tensorflow). ; default NCHW input_pack_model = [CALIBRATOR] ;images file or dir if mult_inputs,file which lists of images images_path = ./ILSVRC2012_test_00000002.bmp; ;category one of Classification,Detection,Unknown category_name = Unknown; ;number of process num_process = ;quantlization level, one of L1,L2,L3,L4,L5 quant_level = [INPUT_CONFIG] ;Names of the input arrays, comma-separated.image input must be the first. inputs = input; ;Memory formats of input arrays, comma-separated. ;One of RGB, BGR, RGBA, BGRA, ARGB, ABGR YUV_NV12, RAWDATA_S16_NHWC ;Each entry in the list should match an entry in inputs arrays. training_input_formats = BGR; input_formats = RGB; ;Indicate the input data need qauntize or not. ;Each entry in the list should match an entry in inputs arrays. quantizations = TRUE; ;mean_values parameter for image models, ;Each entry in the list match RGB channel of\uff08RGB,BGR,RGBA,BGRA,YUV_NV12\uff09 mean_red = 123.68; mean_green = 116.78; mean_blue = 103.94; ;std_value parameter for image models, std_value = 1.0; ;input data shape; input_shapes = 1,3,224,224; [OUTPUT_CONFIG] ;Names of the output arrays, comma-separated. outputs = prob; ;Indicate the output data need deqauntize or not. ;Each entry in the list should match an entry in outputs arrays. dequantizations = TRUE; [CONV_CONFIG] tensor_arrays = conv1-1,conv2-1;","title":"2.3. \u4e00\u952e\u8f6c\u6362\u6a21\u578b"},{"location":"module/User_Guide/Develop/Convert.html#231","text":"platform: \u8f6c\u6362\u6a21\u578b\u6240\u5c5e\u6846\u67b6\u5e73\u53f0\uff0c\u5982:caffe ,onnx,tflite,keras,tensorflow_graphdef,tensorflow_savemodel\u3002 model_files: \u539f\u59cb\u6a21\u578b\u6587\u4ef6\u540d\u3002 output_file: \u6d6e\u70b9\u6a21\u578b\u8f93\u51fa\u6587\u4ef6\u540d(\u6a21\u578b\u751f\u6210\u5230\u5f53\u524d\u64cd\u4f5c\u76ee\u5f55\u3002\u5982\u679c\u4e3a\u7edd\u5bf9\u8def\u7ecf\uff0c\u5219\u6a21\u578b\u8f93\u51fa\u5230\u6307\u5b9a\u76ee\u5f55)\u3002 images_path: \u6a21\u578b\u91cf\u5316\u6240\u9700\u56fe\u7247\u540d\u6216\u56fe\u7247\u6587\u4ef6\u5939\u540d\uff1b\u591a\u8f93\u5165\u6a21\u578b\u65f6\uff0c\u4f20\u5199\u5165\u56fe\u7247\u8def\u5f84\u6587\u4ef6\u3002 category_name: \u6a21\u578b\u6240\u5c5e\u7c7b\u522b\uff0c\u5982\uff1aClassification,Detection,Unknown\u3002 inputs: \u7f51\u7edc\u8f93\u5165Tensor\u7684name\uff0c\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u8bf7\u7528\u9017\u53f7( , )\u5206\u9694\u3002 training_input_formats: \u6a21\u578b\u8bad\u7ec3\u65f6\u56fe\u7247\u683c\u5f0f\u3002\u3010\u53c2\u80032.2.1 INPUT_CONFIG\u3011 input_formats: \u6a21\u578b\u8f6c\u6362\u65f6\u6240\u9700\u56fe\u7247\u683c\u5f0f\u3002 \u3010\u53c2\u80032.2.1 INPUT_CONFIG\u3011 quantizations: \u8f93\u5165\u8282\u70b9\u91cf\u5316\uff0c\u5982TRUE,FALSE\u3002\u3010\u53c2\u80032.2.1 INPUT_CONFIG\u3011 mean_red: \u56fe\u7247R\u901a\u9053\u5f52\u4e00\u5316\u503c\u3002\u3010\u53c2\u80032.2.1 INPUT_CONFIG\u3011 mean_green: \u56fe\u7247G\u901a\u9053\u5f52\u4e00\u5316\u503c\u3002\u3010\u53c2\u80032.2.1 INPUT_CONFIG\u3011 mean_blue: \u56fe\u7247B\u901a\u9053\u5f52\u4e00\u5316\u503c\u3002\u3010\u53c2\u80032.2.1 INPUT_CONFIG\u3011 std_value: \u56fe\u7247\u5f52\u4e00\u5316\u503c\u3002\u3010\u53c2\u80032.2.1 INPUT_CONFIG\u3011 input_shapes: \u6a21\u578b\u8f93\u5165\u56fe\u7247\u7ef4\u5ea6\u4fe1\u606f\uff0c\u59821,3,224,224 or 1,224,224,3\u3002 outputs: \u6a21\u578b\u8f93\u51fa\u8282\u70b9\u3002\u3010\u53c2\u80032.2.2 OUTPUT_CONFIG\u3011 dequantizations: \u8f93\u51fa\u8282\u70b9\u53cd\u91cf\u5316\uff0c\u5982TRUE,FALSE\u3002\u3010\u53c2\u80032.2.2 OUTPUT_CONFIG\u3011","title":"2.3.1 \u5fc5\u9009\u53c2\u6570"},{"location":"module/User_Guide/Develop/Convert.html#232","text":"special_case: \u6a21\u578b\u4e2d\u7684\u7279\u6b8a\u7b97\u5b50\u8282\u70b9,\u5982lstm\u3002 tag_set: \u9700\u8981\u548csave model\u65f6\u6240\u6307\u5b9a\u7684tag\u5339\u914d\uff0c\u5219\u9ed8\u8ba4\u4e3a\u2018serve\u2019\uff0c(only tensorflow_savemodel )\u3002 signature_key: \u9700\u8981\u548csave model\u65f6\u6240\u6307\u5b9a\u7684signature\u5339\u914d\u3002(only tensorflow_savemodel)\u3002 custom_objects: \u5728\u6a21\u578b\u53cd\u5e8f\u5217\u5316\u65f6\uff0c\u5e94\u8003\u8651\u5c06\u540d\u5b57\u5b57\u7b26\u4e32\u7528\u5b57\u5178\u6620\u5c04\u5230\u7c7b\u6216\u8005\u51fd\u6570(only keras)\u3002 preprocesspy_name: \u56fe\u7247\u524d\u5904\u7406\u6587\u4ef6\uff0c\u5982\u679c\u4e3a\u7a7a\uff0c\u5c06\u81ea\u52a8\u751f\u6210\u3002 num_process: \u8fdb\u7a0b\u6570\uff0c\u8fd0\u884c\u540c\u65f6\u8fd0\u884c\u7684\u8fdb\u7a0b\u6570\u3002\uff08\u53ef\u9009\u53c2\u6570\uff0c\u4e0d\u52a0\u8be5\u53c2\u6570\u9ed8\u8ba4\u4e3a10\u4e2a\u8fdb\u7a0b\uff09\u3002 quant_level: \u9009\u62e9\u91cf\u5316\u7b49\u7ea7\uff1a[L1, L2, L3, L4, L5]\u3002\u9ed8\u8ba4L5\u91cf\u5316\u7b49\u7ea7\u3002 input_pack_model_arrays: \u8f93\u5165Tensors\u6570\u636e\u9ed8\u8ba4\u6392\u5e03\u4e3aNHWC,\u9ed8\u8ba4\u4e3aNone\uff1b\u5f53\u8bbe\u4e3a \u2018caffe\u2019\u65f6\uff0c\u6240\u6709\u8f93\u5165Tensors\u7684\u6570\u636e\u6392\u5e03\u4e3aNCHW\uff1b\u5f53\u8bbe\u4e3a\u8f93\u5165Tensors\u540d\u5b57\u65f6\uff0c\u8be5\u8f93\u5165Tensor\u7684\u6570\u636e\u6392\u5e03\u4e3aNCHW(only caffe)\u3002 output_pack_model_arrays: \u8f93\u51faTensors\u6570\u636e\u9ed8\u8ba4\u6392\u5e03\u4e3aNHWC,\u9ed8\u8ba4\u4e3aNone\uff1b\u5f53\u8bbe\u4e3a \u2018caffe\u2019\u65f6\uff0c\u6240\u6709shu\u51faTensors\u7684\u6570\u636e\u6392\u5e03\u4e3aNCHW\uff1b\u5f53\u8bbe\u4e3a\u8f93\u51faTensors\u540d\u5b57\u65f6\uff0c\u8be5\u8f93\u51faTensor\u7684\u6570\u636e\u6392\u5e03\u4e3aNCHW(only caffe)\u3002 input_pack_model: onnx\u6a21\u578b\u8f93\u5165Tensors\u7684\u9ed8\u8ba4\u6570\u636e\u6392\u5e03\u4e3aNCHW,\u9ed8\u8ba4\u503c\u4e3a \u2018NCHW\u2019\uff0c\u5f53\u6b64onnx\u6a21\u578b tensorflow\u8f6c\u6362\u800c\u6765\u65f6\uff0c\u6b64\u503c\u5e94\u8bbe\u4e3a \u2018NHWC\u2019\u3002","title":"2.3.2 \u53ef\u9009\u53c2\u6570"},{"location":"module/User_Guide/Develop/DLA_SDK_Support.html","text":"10.1. Caffe\u652f\u6301\u7b97\u5b50 \u00b6 \u7b97\u5b50 \u5907\u6ce8 ArgMax BatchNorm Concat Convolution \u9650\u5236\u6761\u4ef6\uff1aPad\u8303\u56f4\uff1a[0, 7]\uff0cKernel_size\uff1aH * W < 255 group\u4e3a1\u65f6\uff1a\u8f6c\u6362\u6210Depthwise Convolution group\u4e3aC\u65f6\uff1a\u8f6c\u6362\u4e3aConvolution group\u4e3a (1, C) \u65f6\uff1a\u62c6\u89e3\u6210\u82e5\u5e72Convolution ConvolutionDepthwise \u539f\u751f\u652f\u6301Kernel_size\u4e3a3*3\uff0c6*6\uff0c9*9\uff0c\u5176\u4f59\u60c5\u51b5\u8f6c\u6362\u6210Convolution\u5904\u7406\u9650\u5236\u6761\u4ef6\uff1aPad\u8303\u56f4\uff1a[0, 1] CReLU ContinuationIndicator Crop Deconvolution Dropout Eltwise \u652f\u6301Add\u3001Sub\u3001Mul\u3001Maximum Flatten InnerProduct Permute Pooling PriorBox Power \u4ec5\u652f\u6301\u6307\u6570\u4e3a\u6b63\u6574\u6570 Reshape Reverse ROIPooling ROIPooling\u7684rois\u8f93\u5165\u7ef4\u5ea6\u4e3a\uff08N\u00d75\uff09\uff0c\u5f53\u540e\u6bb5\u7f51\u7edc\u5168\u90e8\u662fInnerProduct\u65f6\uff0cN\u624d\u53ef\u4ee5\u8bbe\u7f6e\u5927\u4e8e1\uff0c\u5982\u679c\u540e\u6bb5\u7f51\u7edc\u4e2d\u6709\u5377\u79ef\u65f6\uff0cN\u4ec5\u53ef\u4ee5\u8bbe\u7f6e\u4e3a1\uff0c\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u9700\u8981\u5faa\u73af\u6267\u884cN\u6b21\u3002\u4f7f\u7528\u65b9\u6cd5\u548c\u9650\u5236\u8be6\u89c1\u4e0b\u65b9Please Note\u3002 ReLU PReLU Sigmoid Slice Scale Softmax \u5982\u9700\u5bf9\u6307\u5b9a\u7ef4\u5ea6\u8fdb\u884c\u8fd0\u7b97\uff0c\u5c06\u8981\u8ba1\u7b97\u7684\u7ef4\u5ea6\u8f6c\u7f6e\u5230\u6700\u540e\u7684\u7ef4\u5ea6\uff08\u6700\u5185\u7ef4\u5ea6\uff09 Split Tanh Threshold Tile Upsample Upsample\u7b97\u5b50\u5728caffe\u4e2d\u6ca1\u6709\uff0c\u53ef\u4ee5\u624b\u52a8\u5c06Deconvolution\u4fee\u6539\u6210Upsample Reorg \u53ea\u652f\u6301stride = 2 LSTM \u8f93\u5165c0,h0\u5fc5\u987b\u662fconst tensor,cn,hn\u4e0d\u652f\u6301\u5355\u72ec\u8f93\u51fa\uff0c\u4e00\u4e2aNet\u4e2d\u53ea\u652f\u6301\u4e00\u4e2aLSTM\uff0c\u4e0d\u652f\u6301\u591a\u4e2aLSTM\u5728\u540c\u4e00\u4e2aNet\u4e2d Please Note: Upsample\u7b97\u5b50\u5728prototxt\u4e2d\u8fd9\u6837\u63cf\u8ff0\uff1a layer { bottom : \"layer85-conv\" top : \"layer86-upsample\" name : \"layer86-upsample\" type : \"Upsample\" upsample_param { scale : 2 } } scale\u53c2\u6570\u4e0eDeconvolution\u7684Stride\u542b\u4e49\u76f8\u540c\u3002\u4f46\u9700\u6ce8\u610fUpsample\u76f8\u5f53\u4e8e\u6743\u91cd\u5168\u4e3a1\u7684Deconvolution\u7b97\u5b50\u3002 ROIPooling\u7b97\u5b50\u5728prototxt\u4e2d\u8fd9\u6837\u63cf\u8ff0\uff1a layer { name : \"roi_pool5\" type : \"ROIPooling\" bottom : \"conv5_3\" bottom : \"rois\" top : \"pool5\" roi_pooling_param { pooled_w : 7 pooled_h : 7 spatial_scale : 0.0625 } } Roi_pooling_param\u4ec5\u652f\u6301pooled_w\uff0cpooled_h\u548cspatial_scale\u3002Float\u6a21\u578b\u7684rois\u8f93\u5165\u4e3arpn\u5c42\u8f93\u51fa\u7684\u5750\u6807\uff0cFixed\u548cOffline\u6a21\u578b\u7684rois\u8f93\u5165\u4e3arpn\u5c42\u8f93\u51fa\u5750\u6807\u4e58spatial_scale\u503c\u540e\u518d\u91cf\u5316\u5230int16\u540e\u9001\u5165\u6a21\u578b\u3002 10.1. TensorFlow\u652f\u6301\u7b97\u5b50 \u00b6 \u7c7b\u522b \u7b97\u5b50 \u5907\u6ce8 Convolution Conv \u9650\u5236\u6761\u4ef6\uff1aKernel_size\uff1aH * W < 255 Convolution DepthwiseConv2dNative \u539f\u751f\u652f\u6301Kernel_size\u4e3a3*3\uff0c6*6\uff0c9*9\uff0c\u5176\u4f59\u60c5\u51b5\u8f6c\u6362\u6210Convolution\u5904\u7406 Convolution FullyConnected Pooling Max pooling Pooling Average Pooling Activation ReLU Activation PReLU Activation ReLU6 Activation LeakyReLU Activation Sigmoid Math Less Math Greater Math GreaterEqual Math Equal Math Add Math Sub Math Mul Math RealDiv \u4ec5\u652f\u6301\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u6570\u4e3a\u5e38\u91cfTensor Math Maximum Math Minimum Math Mean Math Max Math Sqrt Math Rsqrt Math Round Math Softmax \u5982\u9700\u5bf9\u6307\u5b9a\u7ef4\u5ea6\u8fdb\u884c\u8fd0\u7b97\uff0c\u5c06\u8981\u8ba1\u7b97\u7684\u7ef4\u5ea6\u8f6c\u7f6e\u5230\u6700\u540e\u7684\u7ef4\u5ea6\uff08\u6700\u5185\u7ef4\u5ea6\uff09 Math FusedBatchNorm Math Exp DMA Align DMA ConcatV2 DMA Fill DMA Gather DMA GatherV2 DMA Pack DMA Pad DMA SpaceToBatchND DMA BatchToSpaceND DMA Zeroslike DMA Split DMA Slice DMA Unpack DMA Tile DMA Reshape DMA Transpose DMA Resize_bilinear \u76ee\u524d\u7684\u53cc\u7ebf\u6027\u63d2\u503c\u7684\u7248\u672c\u53ea\u80fd\u652f\u6301\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6\u7684case\uff1a\uff081\uff09\u53ea\u80fd\u652f\u6301\u6574\u6570\u500d\u7684\u653e\u5927\u3002\uff082\uff09\u653e\u5927\u500d\u6570\u5fc5\u987b\u5c0f\u4e8e\u7b49\u4e8e8\u500d\u3002\uff083\uff09\u53ea\u652f\u63f43\u7ef4\u6570\u636e\u7684\u5dee\u503c\uff0c\u5373NHWC\u4e2d\u7684N\u5fc5\u987b\u4e3a1\uff0c\u8fd9\u70b9\u548c\u5377\u79ef\u7c7b\u4f3c DMA Resize_NearestNeighbor Misc TopKV2 Misc shape 10.3. Onnx\u652f\u6301\u7b97\u5b50 \u00b6 \u7b97\u5b50 \u5907\u6ce8 Add \u4ec5\u652f\u6301\u5982\u4e0bbroadcast cases: (\u6700\u59274\u7ef4\uff0cInput1/Input2\u53ef\u4ee5\u4e92\u6362, N,C,D1,D2\u5747\u5927\u4e8e0) 1. Input1 [N,C,D1,D2] Input2 [N,C,D1,D2] 2. Input1 [N,C,D1,D2] Input2 [N or 1,C or 1,D1 or 1,D2 or 1] 3. Input1 [N,C,D1,D2] Input2 [1] 4. Input1 [N,C,D1] Input2 [N,C,D1] 5. Input1 [N,C,D1] Input2 [N or 1,C or 1,D1 or 1] 6. Input1 [N,C,D1] Input2 [C or 1,D1 or 1] 7. Input1 [N,C,D1] Input2 [D1 or 1] 8. Input1 [N,C] Input2 [N,C] 9. Input1 [N,C] Input2 [N or 1,C or 1] 10.Input1 [N,C] Input2 [C or 1] 11.Input1 [N] Input2 [N or 1] Abs BatchNorm Concat Convolution \u652f\u6301autoPad\u7684SAME_UPPER\u5c5e\u6027; \u9650\u5236\u6761\u4ef6\uff1aPads\u8303\u56f4\uff1a[0, 7]\uff0cKernel_size\uff1aH * W < 255 Clip Max == 6\u4e0eRelu6\u76f8\u7b49 DepthwiseConv2D \u539f\u751f\u652f\u6301Kernel_size\u4e3a3*3\uff0c6*6\uff0c9*9\uff0c\u5176\u4f59\u60c5\u51b5\u8f6c\u6362\u6210Convolution\u5904\u7406 Div \u4ec5\u652f\u6301\u53f3\u64cd\u4f5c\u6570\u4e3aconst\uff0cbroadcast\u7684\u652f\u6301\u4e0eAdd\u7b97\u5b50\u76f8\u540c Dropout Expand Exp Gemm GlobalAveragePool Group converlution LSTM \u8f93\u5165c0,h0\u5fc5\u987b\u662fconst tensor,cn,hn\u4e0d\u652f\u6301\u5355\u72ec\u8f93\u51fa\uff0c\u652f\u6301\u591a\u4e2aLSTM\u5728\u540c\u4e00\u4e2aNet\u4e2d\uff0c\u652f\u6301\u5355\u5411LSTM\u548c\u53cc\u5411LSTM Matmul \u4ec5\u652f\u63012\u7ef4\u7684\u77e9\u9635\u4e58\u6cd5 Mul broadcast\u7684\u652f\u6301\u4e0eAdd\u7b97\u5b50\u76f8\u540c Pad Reshape ReduceSum ReduceMean ReduceMax \u4ec5\u652f\u6301\u540c\u65f6\u5bf9\u4e00\u4e2aaxis\u8fdb\u884c\u8ba1\u7b97 Resize \u4e0d\u652f\u6301roi\u53c2\u6570\uff0c\u53ea\u5bf9\u6574\u4e2a\u7ef4\u5ea6\u8fdb\u884c\u7f29\u653e\u3002Bilinear \u65b9\u5f0fcoordinate_transformation_mod \u53c2\u6570\u4ec5\u652f\u6301align_corners\uff0casymmetric\uff1b \u9650\u5236\u6761\u4ef6\uff1a\u4e0d\u652f\u6301\u4e0b\u91c7\u6837 ReLU PReLU LeakyReLU TanH Sigmoid Slice Softmax \u5982\u9700\u5bf9\u6307\u5b9a\u7ef4\u5ea6\u8fdb\u884c\u8fd0\u7b97\uff0c\u5c06\u8981\u8ba1\u7b97\u7684\u7ef4\u5ea6\u8f6c\u7f6e\u5230\u6700\u540e\u7684\u7ef4\u5ea6\uff08\u6700\u5185\u7ef4\u5ea6\uff09 Split SpaceToDepth Squeeze Sub broadcast\u7684\u652f\u6301\u4e0eAdd\u7b97\u5b50\u76f8\u540c Transpose Tile Unsqueeze Upsample 10.4. SigmaStar DLA SDK\u5bf9\u6a21\u578b\u7684\u9650\u5236 \u00b6 1. \u5bf9\u4e8e\u6307\u5b9a\u7ef4\u5ea6\u7684Softmax\uff0c\u6211\u4eec\u53ea\u652f\u6301\u5bf9\u6700\u5185\u7ef4\u5ea6\u7684\u64cd\u4f5c\uff08\u591a\u4f59\u591a\u7ef4Tensor\u6240Softmax\u8fd0\u7b97\uff0c\u6211\u4eec\u53ea\u652f\u6301Softmax\u5236\u5b9a\u5728\u6700\u5185\u7ef4\u5ea6\u505a\uff09\u3002 2. \u9664\u7b2c\u4e00\u5c42Conv\u5916\uff0c\u5176\u4ed6\u5c42\u7684Conv DI\u7ef4\u5ea6\uff08\u5373NHWC \u4e2dC\u8fd9\u4e2a\u7ef4\u5ea6\uff09\u8d8a\u5927\u6548\u7387\u4f1a\u8d8a\u9ad8\uff0c\u6700\u5927\u652f\u63f42048\u3002 3. Math\u7c7b\u7b97\u5b50\uff08\u5305\u62ecAdd\u3001Sub\u3001Mul\u3001Div\u7b49\u5143\u7d20\u64cd\u4f5c\u7684\u7b97\u5b50\uff09\uff0c\u5982\u679c\u53f3\u64cd\u4f5c\u6570\u662fscaler\uff08\u5355\u4e2a\u6570\u5b57\uff09 \u6216\u8005 1 \u7ef4\u5411\u91cf\uff08HW\u7ef4\u5ea6\u6570\u636e\u76f8\u540c\uff0cC\u7ef4\u5ea6\u4e0d\u540c\uff09\uff0c\u6548\u7387\u4f1a\u66f4\u9ad8\u3002 4. \u7f51\u7edc\u7ed3\u6784\u4e2d\u5c3d\u91cf\u51cf\u5c11\u4e00\u4e2a\u7b97\u5b50\u7684\u8f93\u51fa\u88ab\u591a\u4e2a\u7b97\u5b50\u4f5c\u4e3a\u8f93\u5165\u7684\u60c5\u51b5\uff0c\u5982ResNet\u7684\u6b8b\u5dee\u7ed3\u6784\uff0cGoogLeNet\u7684Inception\u6a21\u5757\u7b49\u3002","title":"DLA SDK Support"},{"location":"module/User_Guide/Develop/DLA_SDK_Support.html#101-caffe","text":"\u7b97\u5b50 \u5907\u6ce8 ArgMax BatchNorm Concat Convolution \u9650\u5236\u6761\u4ef6\uff1aPad\u8303\u56f4\uff1a[0, 7]\uff0cKernel_size\uff1aH * W < 255 group\u4e3a1\u65f6\uff1a\u8f6c\u6362\u6210Depthwise Convolution group\u4e3aC\u65f6\uff1a\u8f6c\u6362\u4e3aConvolution group\u4e3a (1, C) \u65f6\uff1a\u62c6\u89e3\u6210\u82e5\u5e72Convolution ConvolutionDepthwise \u539f\u751f\u652f\u6301Kernel_size\u4e3a3*3\uff0c6*6\uff0c9*9\uff0c\u5176\u4f59\u60c5\u51b5\u8f6c\u6362\u6210Convolution\u5904\u7406\u9650\u5236\u6761\u4ef6\uff1aPad\u8303\u56f4\uff1a[0, 1] CReLU ContinuationIndicator Crop Deconvolution Dropout Eltwise \u652f\u6301Add\u3001Sub\u3001Mul\u3001Maximum Flatten InnerProduct Permute Pooling PriorBox Power \u4ec5\u652f\u6301\u6307\u6570\u4e3a\u6b63\u6574\u6570 Reshape Reverse ROIPooling ROIPooling\u7684rois\u8f93\u5165\u7ef4\u5ea6\u4e3a\uff08N\u00d75\uff09\uff0c\u5f53\u540e\u6bb5\u7f51\u7edc\u5168\u90e8\u662fInnerProduct\u65f6\uff0cN\u624d\u53ef\u4ee5\u8bbe\u7f6e\u5927\u4e8e1\uff0c\u5982\u679c\u540e\u6bb5\u7f51\u7edc\u4e2d\u6709\u5377\u79ef\u65f6\uff0cN\u4ec5\u53ef\u4ee5\u8bbe\u7f6e\u4e3a1\uff0c\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u9700\u8981\u5faa\u73af\u6267\u884cN\u6b21\u3002\u4f7f\u7528\u65b9\u6cd5\u548c\u9650\u5236\u8be6\u89c1\u4e0b\u65b9Please Note\u3002 ReLU PReLU Sigmoid Slice Scale Softmax \u5982\u9700\u5bf9\u6307\u5b9a\u7ef4\u5ea6\u8fdb\u884c\u8fd0\u7b97\uff0c\u5c06\u8981\u8ba1\u7b97\u7684\u7ef4\u5ea6\u8f6c\u7f6e\u5230\u6700\u540e\u7684\u7ef4\u5ea6\uff08\u6700\u5185\u7ef4\u5ea6\uff09 Split Tanh Threshold Tile Upsample Upsample\u7b97\u5b50\u5728caffe\u4e2d\u6ca1\u6709\uff0c\u53ef\u4ee5\u624b\u52a8\u5c06Deconvolution\u4fee\u6539\u6210Upsample Reorg \u53ea\u652f\u6301stride = 2 LSTM \u8f93\u5165c0,h0\u5fc5\u987b\u662fconst tensor,cn,hn\u4e0d\u652f\u6301\u5355\u72ec\u8f93\u51fa\uff0c\u4e00\u4e2aNet\u4e2d\u53ea\u652f\u6301\u4e00\u4e2aLSTM\uff0c\u4e0d\u652f\u6301\u591a\u4e2aLSTM\u5728\u540c\u4e00\u4e2aNet\u4e2d Please Note: Upsample\u7b97\u5b50\u5728prototxt\u4e2d\u8fd9\u6837\u63cf\u8ff0\uff1a layer { bottom : \"layer85-conv\" top : \"layer86-upsample\" name : \"layer86-upsample\" type : \"Upsample\" upsample_param { scale : 2 } } scale\u53c2\u6570\u4e0eDeconvolution\u7684Stride\u542b\u4e49\u76f8\u540c\u3002\u4f46\u9700\u6ce8\u610fUpsample\u76f8\u5f53\u4e8e\u6743\u91cd\u5168\u4e3a1\u7684Deconvolution\u7b97\u5b50\u3002 ROIPooling\u7b97\u5b50\u5728prototxt\u4e2d\u8fd9\u6837\u63cf\u8ff0\uff1a layer { name : \"roi_pool5\" type : \"ROIPooling\" bottom : \"conv5_3\" bottom : \"rois\" top : \"pool5\" roi_pooling_param { pooled_w : 7 pooled_h : 7 spatial_scale : 0.0625 } } Roi_pooling_param\u4ec5\u652f\u6301pooled_w\uff0cpooled_h\u548cspatial_scale\u3002Float\u6a21\u578b\u7684rois\u8f93\u5165\u4e3arpn\u5c42\u8f93\u51fa\u7684\u5750\u6807\uff0cFixed\u548cOffline\u6a21\u578b\u7684rois\u8f93\u5165\u4e3arpn\u5c42\u8f93\u51fa\u5750\u6807\u4e58spatial_scale\u503c\u540e\u518d\u91cf\u5316\u5230int16\u540e\u9001\u5165\u6a21\u578b\u3002","title":"10.1. Caffe\u652f\u6301\u7b97\u5b50"},{"location":"module/User_Guide/Develop/DLA_SDK_Support.html#101-tensorflow","text":"\u7c7b\u522b \u7b97\u5b50 \u5907\u6ce8 Convolution Conv \u9650\u5236\u6761\u4ef6\uff1aKernel_size\uff1aH * W < 255 Convolution DepthwiseConv2dNative \u539f\u751f\u652f\u6301Kernel_size\u4e3a3*3\uff0c6*6\uff0c9*9\uff0c\u5176\u4f59\u60c5\u51b5\u8f6c\u6362\u6210Convolution\u5904\u7406 Convolution FullyConnected Pooling Max pooling Pooling Average Pooling Activation ReLU Activation PReLU Activation ReLU6 Activation LeakyReLU Activation Sigmoid Math Less Math Greater Math GreaterEqual Math Equal Math Add Math Sub Math Mul Math RealDiv \u4ec5\u652f\u6301\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u6570\u4e3a\u5e38\u91cfTensor Math Maximum Math Minimum Math Mean Math Max Math Sqrt Math Rsqrt Math Round Math Softmax \u5982\u9700\u5bf9\u6307\u5b9a\u7ef4\u5ea6\u8fdb\u884c\u8fd0\u7b97\uff0c\u5c06\u8981\u8ba1\u7b97\u7684\u7ef4\u5ea6\u8f6c\u7f6e\u5230\u6700\u540e\u7684\u7ef4\u5ea6\uff08\u6700\u5185\u7ef4\u5ea6\uff09 Math FusedBatchNorm Math Exp DMA Align DMA ConcatV2 DMA Fill DMA Gather DMA GatherV2 DMA Pack DMA Pad DMA SpaceToBatchND DMA BatchToSpaceND DMA Zeroslike DMA Split DMA Slice DMA Unpack DMA Tile DMA Reshape DMA Transpose DMA Resize_bilinear \u76ee\u524d\u7684\u53cc\u7ebf\u6027\u63d2\u503c\u7684\u7248\u672c\u53ea\u80fd\u652f\u6301\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6\u7684case\uff1a\uff081\uff09\u53ea\u80fd\u652f\u6301\u6574\u6570\u500d\u7684\u653e\u5927\u3002\uff082\uff09\u653e\u5927\u500d\u6570\u5fc5\u987b\u5c0f\u4e8e\u7b49\u4e8e8\u500d\u3002\uff083\uff09\u53ea\u652f\u63f43\u7ef4\u6570\u636e\u7684\u5dee\u503c\uff0c\u5373NHWC\u4e2d\u7684N\u5fc5\u987b\u4e3a1\uff0c\u8fd9\u70b9\u548c\u5377\u79ef\u7c7b\u4f3c DMA Resize_NearestNeighbor Misc TopKV2 Misc shape","title":"10.1. TensorFlow\u652f\u6301\u7b97\u5b50"},{"location":"module/User_Guide/Develop/DLA_SDK_Support.html#103-onnx","text":"\u7b97\u5b50 \u5907\u6ce8 Add \u4ec5\u652f\u6301\u5982\u4e0bbroadcast cases: (\u6700\u59274\u7ef4\uff0cInput1/Input2\u53ef\u4ee5\u4e92\u6362, N,C,D1,D2\u5747\u5927\u4e8e0) 1. Input1 [N,C,D1,D2] Input2 [N,C,D1,D2] 2. Input1 [N,C,D1,D2] Input2 [N or 1,C or 1,D1 or 1,D2 or 1] 3. Input1 [N,C,D1,D2] Input2 [1] 4. Input1 [N,C,D1] Input2 [N,C,D1] 5. Input1 [N,C,D1] Input2 [N or 1,C or 1,D1 or 1] 6. Input1 [N,C,D1] Input2 [C or 1,D1 or 1] 7. Input1 [N,C,D1] Input2 [D1 or 1] 8. Input1 [N,C] Input2 [N,C] 9. Input1 [N,C] Input2 [N or 1,C or 1] 10.Input1 [N,C] Input2 [C or 1] 11.Input1 [N] Input2 [N or 1] Abs BatchNorm Concat Convolution \u652f\u6301autoPad\u7684SAME_UPPER\u5c5e\u6027; \u9650\u5236\u6761\u4ef6\uff1aPads\u8303\u56f4\uff1a[0, 7]\uff0cKernel_size\uff1aH * W < 255 Clip Max == 6\u4e0eRelu6\u76f8\u7b49 DepthwiseConv2D \u539f\u751f\u652f\u6301Kernel_size\u4e3a3*3\uff0c6*6\uff0c9*9\uff0c\u5176\u4f59\u60c5\u51b5\u8f6c\u6362\u6210Convolution\u5904\u7406 Div \u4ec5\u652f\u6301\u53f3\u64cd\u4f5c\u6570\u4e3aconst\uff0cbroadcast\u7684\u652f\u6301\u4e0eAdd\u7b97\u5b50\u76f8\u540c Dropout Expand Exp Gemm GlobalAveragePool Group converlution LSTM \u8f93\u5165c0,h0\u5fc5\u987b\u662fconst tensor,cn,hn\u4e0d\u652f\u6301\u5355\u72ec\u8f93\u51fa\uff0c\u652f\u6301\u591a\u4e2aLSTM\u5728\u540c\u4e00\u4e2aNet\u4e2d\uff0c\u652f\u6301\u5355\u5411LSTM\u548c\u53cc\u5411LSTM Matmul \u4ec5\u652f\u63012\u7ef4\u7684\u77e9\u9635\u4e58\u6cd5 Mul broadcast\u7684\u652f\u6301\u4e0eAdd\u7b97\u5b50\u76f8\u540c Pad Reshape ReduceSum ReduceMean ReduceMax \u4ec5\u652f\u6301\u540c\u65f6\u5bf9\u4e00\u4e2aaxis\u8fdb\u884c\u8ba1\u7b97 Resize \u4e0d\u652f\u6301roi\u53c2\u6570\uff0c\u53ea\u5bf9\u6574\u4e2a\u7ef4\u5ea6\u8fdb\u884c\u7f29\u653e\u3002Bilinear \u65b9\u5f0fcoordinate_transformation_mod \u53c2\u6570\u4ec5\u652f\u6301align_corners\uff0casymmetric\uff1b \u9650\u5236\u6761\u4ef6\uff1a\u4e0d\u652f\u6301\u4e0b\u91c7\u6837 ReLU PReLU LeakyReLU TanH Sigmoid Slice Softmax \u5982\u9700\u5bf9\u6307\u5b9a\u7ef4\u5ea6\u8fdb\u884c\u8fd0\u7b97\uff0c\u5c06\u8981\u8ba1\u7b97\u7684\u7ef4\u5ea6\u8f6c\u7f6e\u5230\u6700\u540e\u7684\u7ef4\u5ea6\uff08\u6700\u5185\u7ef4\u5ea6\uff09 Split SpaceToDepth Squeeze Sub broadcast\u7684\u652f\u6301\u4e0eAdd\u7b97\u5b50\u76f8\u540c Transpose Tile Unsqueeze Upsample","title":"10.3. Onnx\u652f\u6301\u7b97\u5b50"},{"location":"module/User_Guide/Develop/DLA_SDK_Support.html#104-sigmastar-dla-sdk","text":"1. \u5bf9\u4e8e\u6307\u5b9a\u7ef4\u5ea6\u7684Softmax\uff0c\u6211\u4eec\u53ea\u652f\u6301\u5bf9\u6700\u5185\u7ef4\u5ea6\u7684\u64cd\u4f5c\uff08\u591a\u4f59\u591a\u7ef4Tensor\u6240Softmax\u8fd0\u7b97\uff0c\u6211\u4eec\u53ea\u652f\u6301Softmax\u5236\u5b9a\u5728\u6700\u5185\u7ef4\u5ea6\u505a\uff09\u3002 2. \u9664\u7b2c\u4e00\u5c42Conv\u5916\uff0c\u5176\u4ed6\u5c42\u7684Conv DI\u7ef4\u5ea6\uff08\u5373NHWC \u4e2dC\u8fd9\u4e2a\u7ef4\u5ea6\uff09\u8d8a\u5927\u6548\u7387\u4f1a\u8d8a\u9ad8\uff0c\u6700\u5927\u652f\u63f42048\u3002 3. Math\u7c7b\u7b97\u5b50\uff08\u5305\u62ecAdd\u3001Sub\u3001Mul\u3001Div\u7b49\u5143\u7d20\u64cd\u4f5c\u7684\u7b97\u5b50\uff09\uff0c\u5982\u679c\u53f3\u64cd\u4f5c\u6570\u662fscaler\uff08\u5355\u4e2a\u6570\u5b57\uff09 \u6216\u8005 1 \u7ef4\u5411\u91cf\uff08HW\u7ef4\u5ea6\u6570\u636e\u76f8\u540c\uff0cC\u7ef4\u5ea6\u4e0d\u540c\uff09\uff0c\u6548\u7387\u4f1a\u66f4\u9ad8\u3002 4. \u7f51\u7edc\u7ed3\u6784\u4e2d\u5c3d\u91cf\u51cf\u5c11\u4e00\u4e2a\u7b97\u5b50\u7684\u8f93\u51fa\u88ab\u591a\u4e2a\u7b97\u5b50\u4f5c\u4e3a\u8f93\u5165\u7684\u60c5\u51b5\uff0c\u5982ResNet\u7684\u6b8b\u5dee\u7ed3\u6784\uff0cGoogLeNet\u7684Inception\u6a21\u5757\u7b49\u3002","title":"10.4. SigmaStar DLA SDK\u5bf9\u6a21\u578b\u7684\u9650\u5236"},{"location":"module/User_Guide/Develop/DumpDebug_Tool.html","text":"6.1. \u4e3b\u8981\u529f\u80fd \u00b6 DumpDebug Tool\u5de5\u5177\u7684\u4f4d\u7f6e\u5728 SGS_IPU_SDK/DumpDebug/ \u3002 \u8be5\u5de5\u5177\u662f\u4e3b\u8981\u529f\u80fd\u5982\u4e0b\uff1a \u89e3\u6790\u7f51\u7edc\u6a21\u578b\u6570\u636e\uff1b \u5bf9\u6bd4\u4e0d\u540c\u9636\u6bb5\u7684\u7f51\u7edc\u6a21\u578b\u6570\u636e\uff1b \u7ed8\u5236\u5404\u5c42\u7f51\u7edc\u6a21\u578b\u7684Histogram\u56fe\u3002 SigmaStar DLA SDK\u5728\u8f6c\u6362\u7f51\u7edc\u65f6\uff0cCaffe\u548cTensorFlow\u7684\u7f51\u7edc\u6a21\u578b\u4e0eSigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u7684\u7ed3\u679c\u5b8c\u5168\u4e00\u81f4\uff0cSigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u4e0eSigmaStar\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u7684\u7ed3\u679c\u5b8c\u5168\u4e00\u81f4\u3002 \u6709\u7cbe\u5ea6\u5dee\u522b\u7684\u53ea\u6709\u5728SigmaStar\u6d6e\u70b9\u6a21\u578b\u8f6c\u6362\u4e3aSigmaStar\u5b9a\u70b9\u8fd9\u4e2a\u9636\u6bb5\uff0c\u56e0\u6b64\u5728\u53d1\u73b0SigmaStar\u5b9a\u70b9\u7f51\u7edc\u7684\u7ed3\u679c\u4e0e\u539f\u6709\u6d6e\u70b9\u7684\u7ed3\u679c\u76f8\u5dee\u8f83\u591a\u65f6\uff0c\u4f7f\u7528DumpDebug Tool\u53ef\u4ee5\u68c0\u67e5\u8f6c\u6362\u540e\u5b9a\u70b9\u7f51\u7edc\u7684\u9519\u8bef\u3002 6.2. \u4f7f\u7528\u6b65\u9aa4 \u00b6 6.2.1 Dump\u7f51\u7edc\u6a21\u578b\u4e2d\u5404\u5c42\u6570\u636e \u00b6 \u5728 SGS_IPU_SDK/cfg \u6587\u4ef6\u5939\u4e2d\u627e\u5230DebugConfig.txt\u6587\u4ef6\uff0c\u590d\u5236\u5230\u5f53\u524d\u8fd0\u884c\u8def\u5f84\u4e0b. \u6253\u5f00DebugConfig.txt\uff0c\u4fee\u6539\u6587\u4ef6\u5185\u5bb9\uff1a dumpTensor eliminateGarbage dequantFixed #dumpasstring #disableDomainFuseOps path = DebugConfig.txt\u5404\u53c2\u6570\u4f5c\u7528: dumpTensor : Dump\u7f51\u7edc\u6a21\u578b\u5404\u5c42\u6570\u636e\u603b\u5f00\u5173\u3002 eliminateGarbage : Dump\u7f51\u7edc\u6a21\u578b\u6570\u636e\u65f6\u53bb\u9664\u65e0\u7528\u6570\u636e\uff08\u5efa\u8bae\u5f00\u542f\uff09\u3002 dequantFixed : \u9488\u5bf9\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff0c\u5c06\u6574\u5f62\u6570\u636e\u8f6c\u6362\u4e3a\u6d6e\u70b9\u6570\u636e\uff08\u5efa\u8bae\u5f00\u542f\uff09\u3002 dumpasstring : Dump\u7f51\u7edc\u6a21\u578b\u6570\u636e\u4e3a\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u5173\u95ed\u9009\u9879\u4e3a\u4e8c\u8fdb\u5236\u6587\u4ef6\u7c7b\u578b\u3002\uff08\u5982\u679c\u9700\u8981[6.2.2 \u4f7f\u7528auto_dump_debug.sh\u811a\u672c\u5206\u6790\u6570\u636e]\u529f\u80fd\uff0c\u52a1\u5fc5\u5173\u95ed\u6b64\u9009\u9879\uff09\u3002 disableDomainFuseOps : \u8f6c\u6362\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u65f6\uff0c\u53d6\u6d88\u7f51\u7edc\u5c42\u878d\u5408\uff08\u5efa\u8bae\u5173\u95ed\uff09\u3002 path= : \u6307\u5b9a\u751f\u6210\u6863\u6848\u7684\u8f93\u51fa\u5168\u8def\u5f84\uff08path= \u540e\u9762\u786e\u4fdd\u586b\u5199\u7c7b\u4f3c /home/user \u7684\u7edd\u5bf9\u8def\u5f84\u3002\u5982\u679cpath= \u540e\u9762\u6ca1\u6709\u5185\u5bb9\u6216\u6839\u672c\u6ca1\u6709 path= \u7684\u8bdd\uff0c\u5219\u4f1a\u9ed8\u8ba4\u8f93\u51fa\u5230 $HOME \u4f4d\u7f6e\u3002\u53e6\u5916\uff0c\u7edd\u5bf9\u8def\u5f84\u6216 /home/user \u4e0d\u8d85\u8fc7122\u5b57\u8282\uff09\u3002 \u8fd0\u884csimulator\u5bf9\u5355\u5f20\u56fe\u7247\u63a8\u6f14\u3002 \u63a8\u6f14\u5b8c\u6210\u540e\uff0c\u4f1a\u5728path=\u53c2\u6570\u6307\u5b9a\u7684\u76ee\u5f55\u751f\u6210sigma_outtensor_dump.bin\uff0c\u5373\u4e3aDump\u7f51\u7edc\u6a21\u578b\u4e2d\u5404\u5c42\u7684\u6570\u636e\u3002 Note Dump\u5b8c\u6210\u540e\u91cd\u547d\u540dsigma_outtensor_dump.bin\u6587\u4ef6\uff0c\u8bf7\u52ff\u4fee\u6539\u6587\u4ef6\u540e\u7f00\u3002\u65b0\u7684Dump\u4f1a\u590d\u5199sigma_outtensor_dump.bin\u6587\u4ef6\u3002 DebugConfig.txt\u6587\u4ef6\u4e2ddisableDomainFuseOps \u9009\u9879\u53ea\u5728\u4f7f\u7528calibrator\u5c06\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u6210\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u65f6\u6709\u7528\u3002\u5176\u4f5c\u7528\u662f\u53d6\u6d88\u7f51\u7edc\u878d\u5408\u529f\u80fd\uff0c\u5173\u95ed\u8be5\u9009\u9879\u65f6\uff0c\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u548c\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u80fd\u591f\u5728\u8f6c\u6362\u65f6\u4f18\u5316\u7f51\u7edc\u6a21\u578b\u7684\u7b97\u5b50\uff0c\u52a0\u901f\u6a21\u578b\u7684\u8fd0\u884c\uff0c\u4f46\u662f\u4e5f\u4f1a\u5f71\u54cd\u7f51\u7edc\u7684\u5c42\u7ea7\u7ed3\u6784\uff0c\u4f7f\u5f97\u90e8\u5206\u7b97\u5b50\u7684\u8f93\u51fa\u4e0d\u4f1a\u88abDump\u5230sigma_outtersor_dump.bin\u6587\u4ef6\u4e2d\u3002\u5982\u679c\u9700\u8981\u7f51\u7edc\u6a21\u578b\u7684\u6bcf\u4e00\u5c42\u6570\u636e\uff0c\u53ef\u4ee5\u6253\u5f00disableDomainFuseOps\u9009\u9879\uff0c\u91cd\u65b0\u8fd0\u884ccalibrator\u8f6c\u6362\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff0c\u6b64\u65f6\u8f6c\u51fa\u7684\u6a21\u578b\u6ca1\u6709\u878d\u5408\u4f18\u5316\uff0c\u53ef\u4ee5\u8f93\u51fa\u6bcf\u5c42\u7684\u6570\u636e\u3002 \u5bf9\u6bd4\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u548c\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff0c\u4f7f\u7528simulator\u4e2d\u53c2\u6570 -t/--type \u548c -m/--model \u6307\u5b9a\u4e0d\u540c\u9636\u6bb5\u7684\u6a21\u578b\uff0c\u5373\u53efDump\u51fa\u4e0d\u540c\u9636\u6bb5\u7684\u7f51\u7edc\u6a21\u578b\u6570\u636e\u3002 \u79bb\u7ebf\u6a21\u578b\u4e0d\u652f\u6301Dump Debug,\u79bb\u7ebf\u6a21\u578b\u7f51\u7edc\u7684\u5c42\u7ea7\u7ed3\u6784Domain\u5df2\u7ecf\u878d\u5408\uff0c\u4e0d\u80fdDump\u7f51\u7edc\u6a21\u578b\u4e2d\u5404\u5c42\u7684\u6570\u636e\u3002 \u4f7f\u7528calibrator\u5c06\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u4e3a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u65f6\uff0c\u4f1a\u5728SGS_IPU_SDK\u6839\u76ee\u5f55\u4e0b\u4ea7\u751ftensor_min_max.txt \u6587\u4ef6\uff0c\u6b64\u6587\u4ef6\u8bb0\u5f55\u4e86\u7f51\u7edc\u7684\u6bcf\u5c42\u8f93\u5165\u548c\u8f93\u51fa\u7684\u6700\u5927\u4e0e\u6700\u5c0f\u503c\uff0c\u5c06\u5728\u4e4b\u540e\u5206\u6790Dump\u6570\u636e\u65f6\u6709\u7528\u3002 6.2.2 \u4f7f\u7528auto_dump_debug.sh\u811a\u672c\u5206\u6790\u6570\u636e \u00b6 \u5de5\u5177\u7684\u4f4d\u7f6e\u5728 SGS_IPU_SDK/DumpDebug/auto_dump_debug.sh \u3002 auto_dump_debug.sh\u811a\u672c\u80fd\u591f\u5bf9\u6bd4\u6837\u672c bin\uff08sample\uff09\u548c\u57fa\u51c6 bin\uff08benchmark\uff09\u7684\u76f8\u540coutput tensor\u5c42\u7684COS\u3001MSE\u548cRMSE\uff0c\u9700\u4f7f\u7528[6.2.1 Dump\u7f51\u7edc\u6a21\u578b\u4e2d\u5404\u5c42\u6570\u636e]\u4e2dDump\u51fa\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u548c\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u7684bin\u6587\u4ef6\u3002 \u4f7f\u7528\u793a\u4f8b\uff1a ./auto_dump_debug.sh \\ /home/user/SGS_IPU_SDK \\ /home/user/sample.bin \\ /home/user/benchmark.bin \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a Param1 : SGS_IPU_SDK \u7684\u8def\u5f84\uff0c\u5982\u679c\u5728\u5f53\u524d\u4f4d\u7f6e\uff0c\u53ea\u9700\u4f20\u76ee\u5f55\u5939\u540d\u3002 Param2 : \u9700\u8981\u5bf9\u6bd4\u7684\u5df2\u7ecf dump\u51fa\u6765\u7684sample bin\u8def\u5f84\uff0c\u6b64\u5904\u5e94\u4e3a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578bDump\u51fa\u7684bin\u6587\u4ef6\u8def\u5f84\u3002 Param3 : \u4f5c\u4e3a\u53c2\u8003\u7684\u5df2\u7ecf dump\u51fa\u6765\u7684 benchmark bin\u8def\u5f84\uff0c\u6b64\u5904\u5e94\u4e3a\u6d6e\u70b9\u7f51\u7edc\u6a21\u578bDump\u51fa\u7684bin\u6587\u4ef6\u8def\u5f84\u3002 \u672a\u5f00\u542fdisableDomainFuseOps\u9009\u9879\u65f6\uff0c\u5b8c\u6210\u5206\u6790\u540e\u663e\u793a\u5982\u4e0b\uff1a\uff08\u90e8\u5206\uff09 3.conv1_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000046 COS:0.999898 RMSE:0.014310 4.pool1.xx.output0 OP_TYPE:MAX_POOL_2D MSE:0.000057 COS:0.999931 RMSE:0.011018 7.res2a_branch1_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000076 COS:0.999886 RMSE:0.015652 11.res2a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000027 COS:0.999652 RMSE:0.023612 16.res2a_xx.xx.output0 OP_TYPE:RELU MSE:0.000177 COS:0.999644 RMSE:0.025049 20.res2b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000069 COS:0.999242 RMSE:0.039121 25.res2b_xx.xx.output0 OP_TYPE:RELU MSE:0.000430 COS:0.999452 RMSE:0.030551 28.res3a_branch1_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000165 COS:0.998975 RMSE:0.041644 32.res3a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000139 COS:0.998842 RMSE:0.048416 37.res3a_xx.xx.output0 OP_TYPE:RELU MSE:0.000297 COS:0.999069 RMSE:0.041043 41.res3b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000070 COS:0.998836 RMSE:0.051215 46.res3b_xx.xx.output0 OP_TYPE:RELU MSE:0.000366 COS:0.999035 RMSE:0.042863 49.res4a_branch1_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000026 COS:0.999282 RMSE:0.035575 53.res4a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000108 COS:0.998950 RMSE:0.047213 58.res4a_xx.xx.output0 OP_TYPE:RELU MSE:0.000149 COS:0.999174 RMSE:0.040582 62.res4b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000030 COS:0.999020 RMSE:0.046630 67.res4b_xx.xx.output0 OP_TYPE:RELU MSE:0.000168 COS:0.999073 RMSE:0.041229 70.res5a_branch1_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000305 COS:0.999276 RMSE:0.033715 74.res5a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000032 COS:0.998723 RMSE:0.053469 79.res5a_xx.xx.output0 OP_TYPE:RELU MSE:0.000507 COS:0.998762 RMSE:0.050663 83.res5b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000027 COS:0.998182 RMSE:0.064201 88.res5b_xx.xx.output0 OP_TYPE:RELU MSE:0.006022 COS:0.998665 RMSE:0.056931 89.pool5.xx.output0 OP_TYPE:AVG_POOL_2D MSE:0.004321 COS:0.998488 RMSE:0.079694 90.fc1000_reshape#1_output#183.output0 OP_TYPE:ReshapeAliasMSE:0.004321 COS:0.998488 RMSE:0.079694 91.fc1000#185.xx.output0 OP_TYPE:CONV_2D MSE:0.014197 COS:0.998901 RMSE:0.051447 92.fc1000.xx.output0 OP_TYPE:ReshapeAliasMSE:0.014197 COS:0.998901 RMSE:0.051447 93.prob.xx.output0 OP_TYPE:Fix2Float MSE:0.000000 COS:1.000000 RMSE:0.000152 \u5f00\u542fdisableDomainFuseOps\u9009\u9879\u65f6\uff0c\u5b8c\u6210\u5206\u6790\u540e\u663e\u793a\u5982\u4e0b\uff1a\uff08\u90e8\u5206\uff09 0.conv1.xx.output0 OP_TYPE:CONV_2D MSE:2.397930 COS:0.999887 RMSE:0.019312 1.conv1_xx.xx.output0 OP_TYPE:MUL MSE:0.000037 COS:0.999850 RMSE:0.020800 2.conv1_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000037 COS:0.999936 RMSE:0.010667 3.conv1_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000052 COS:0.999885 RMSE:0.015123 4.pool1.xx.output0 OP_TYPE:MAX_POOL_2D MSE:0.000063 COS:0.999924 RMSE:0.011603 5.res2a_branch1.xx.output0 OP_TYPE:CONV_2D MSE:0.000096 COS:0.999952 RMSE:0.009368 6.res2a_branch1_xx.xx.output0 OP_TYPE:MUL MSE:0.000080 COS:0.999956 RMSE:0.009144 7.res2a_branch1_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000080 COS:0.999880 RMSE:0.016141 8.res2a_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.000349 COS:0.999951 RMSE:0.009727 9.res2a_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000049 COS:0.999956 RMSE:0.009349 10.res2a_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000049 COS:0.999886 RMSE:0.016510 11.res2a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000028 COS:0.999641 RMSE:0.024211 12.res2a_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000100 COS:0.999821 RMSE:0.018379 13.res2a_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.000118 COS:0.999832 RMSE:0.017982 14.res2a_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000118 COS:0.999670 RMSE:0.024984 15.res2a.xx.output0 OP_TYPE:ADD MSE:0.000241 COS:0.999771 RMSE:0.021801 16.res2a_xx.xx.output0 OP_TYPE:RELU MSE:0.000182 COS:0.999634 RMSE:0.025262 17.res2b_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.000525 COS:0.999709 RMSE:0.023127 18.res2b_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000193 COS:0.999746 RMSE:0.022434 19.res2b_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000193 COS:0.999474 RMSE:0.032121 20.res2b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000071 COS:0.999219 RMSE:0.039747 21.res2b_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000157 COS:0.999549 RMSE:0.030371 22.res2b_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.000272 COS:0.999587 RMSE:0.029537 23.res2b_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000272 COS:0.999151 RMSE:0.040304 24.res2b.xx.output0 OP_TYPE:ADD MSE:0.000534 COS:0.999425 RMSE:0.031402 25.res2b_xx.xx.output0 OP_TYPE:RELU MSE:0.000448 COS:0.999429 RMSE:0.031203 26.res3a_branch1.xx.output0 OP_TYPE:CONV_2D MSE:0.000267 COS:0.999320 RMSE:0.034101 27.res3a_branch1_xx.xx.output0 OP_TYPE:MUL MSE:0.000169 COS:0.999345 RMSE:0.034331 28.res3a_branch1_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000169 COS:0.998949 RMSE:0.042434 29.res3a_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.001885 COS:0.999472 RMSE:0.030785 30.res3a_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000427 COS:0.999486 RMSE:0.030586 31.res3a_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000427 COS:0.998909 RMSE:0.045188 32.res3a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000147 COS:0.998773 RMSE:0.049700 33.res3a_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000331 COS:0.999425 RMSE:0.034038 34.res3a_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.000368 COS:0.999411 RMSE:0.034275 35.res3a_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000368 COS:0.998931 RMSE:0.044919 36.res3a.xx.output0 OP_TYPE:ADD MSE:0.000585 COS:0.999040 RMSE:0.042398 37.res3a_xx.xx.output0 OP_TYPE:RELU MSE:0.000301 COS:0.999058 RMSE:0.041479 38.res3b_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.000811 COS:0.999530 RMSE:0.029739 39.res3b_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000288 COS:0.999580 RMSE:0.028879 40.res3b_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000288 COS:0.999383 RMSE:0.033874 41.res3b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000073 COS:0.998787 RMSE:0.052493 42.res3b_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000136 COS:0.999469 RMSE:0.033442 43.res3b_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.000314 COS:0.999489 RMSE:0.033050 44.res3b_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000314 COS:0.999308 RMSE:0.036079 45.res3b.xx.output0 OP_TYPE:ADD MSE:0.000659 COS:0.998989 RMSE:0.042628 46.res3b_xx.xx.output0 OP_TYPE:RELU MSE:0.000375 COS:0.999011 RMSE:0.043575 47.res4a_branch1.xx.output0 OP_TYPE:CONV_2D MSE:0.000098 COS:0.999264 RMSE:0.037842 48.res4a_branch1_xx.xx.output0 OP_TYPE:MUL MSE:0.000027 COS:0.999298 RMSE:0.037615 49.res4a_branch1_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000027 COS:0.999253 RMSE:0.036302 50.res4a_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.001011 COS:0.999543 RMSE:0.028507 51.res4a_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000300 COS:0.999544 RMSE:0.028563 52.res4a_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000300 COS:0.999147 RMSE:0.040221 53.res4a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000107 COS:0.998961 RMSE:0.047238 54.res4a_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000335 COS:0.999464 RMSE:0.032660 55.res4a_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.000255 COS:0.999453 RMSE:0.032788 56.res4a_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000255 COS:0.999234 RMSE:0.038888 57.res4a.xx.output0 OP_TYPE:ADD MSE:0.000312 COS:0.999298 RMSE:0.036873 58.res4a_xx.xx.output0 OP_TYPE:RELU MSE:0.000146 COS:0.999191 RMSE:0.040181 59.res4b_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.000369 COS:0.999748 RMSE:0.021992 60.res4b_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000156 COS:0.999772 RMSE:0.021527 61.res4b_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000156 COS:0.999625 RMSE:0.026857 62.res4b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000028 COS:0.999073 RMSE:0.045494 63.res4b_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000048 COS:0.999748 RMSE:0.022612 64.res4b_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.000191 COS:0.999751 RMSE:0.022354 65.res4b_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000191 COS:0.999678 RMSE:0.024581 66.res4b.xx.output0 OP_TYPE:ADD MSE:0.000337 COS:0.999448 RMSE:0.032108 67.res4b_xx.xx.output0 OP_TYPE:RELU MSE:0.000160 COS:0.999113 RMSE:0.040588 68.res5a_branch1.xx.output0 OP_TYPE:CONV_2D MSE:0.000072 COS:0.999179 RMSE:0.038052 69.res5a_branch1_xx.xx.output0 OP_TYPE:MUL MSE:0.000290 COS:0.999179 RMSE:0.038130 70.res5a_branch1_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000290 COS:0.999311 RMSE:0.032880 71.res5a_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.000355 COS:0.999758 RMSE:0.020371 72.res5a_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000133 COS:0.999750 RMSE:0.020561 73.res5a_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000133 COS:0.999613 RMSE:0.026392 74.res5a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000028 COS:0.998859 RMSE:0.051003 75.res5a_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000063 COS:0.999512 RMSE:0.031809 76.res5a_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.001009 COS:0.999480 RMSE:0.032233 77.res5a_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.001009 COS:0.999257 RMSE:0.039436 78.res5a.xx.output0 OP_TYPE:ADD MSE:0.001413 COS:0.999379 RMSE:0.034297 79.res5a_xx.xx.output0 OP_TYPE:RELU MSE:0.000457 COS:0.998876 RMSE:0.048274 80.res5b_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.001387 COS:0.999842 RMSE:0.015781 81.res5b_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000239 COS:0.999839 RMSE:0.015798 82.res5b_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000239 COS:0.999639 RMSE:0.026762 83.res5b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000023 COS:0.998458 RMSE:0.058598 84.res5b_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000041 COS:0.999061 RMSE:0.041137 85.res5b_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.007750 COS:0.999058 RMSE:0.041188 86.res5b_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.007751 COS:0.998732 RMSE:0.052601 87.res5b.xx.output0 OP_TYPE:ADD MSE:0.008533 COS:0.998792 RMSE:0.052043 88.res5b_xx.xx.output0 OP_TYPE:RELU MSE:0.004860 COS:0.998924 RMSE:0.051718 89.pool5.xx.output0 OP_TYPE:AVG_POOL_2D MSE:0.004061 COS:0.998601 RMSE:0.078395 90.fc1000_reshape#1_output#183.output0 OP_TYPE:ReshapeAliasMSE:0.004061 COS:0.998601 RMSE:0.078395 91.fc1000#185.xx.output0 OP_TYPE:CONV_2D MSE:0.013363 COS:0.998935 RMSE:0.050327 92.fc1000.xx.output0 OP_TYPE:ReshapeAliasMSE:0.013363 COS:0.998935 RMSE:0.050327 93.prob.xx.output0 OP_TYPE:SOFTMAX MSE:0.000000 COS:1.000000 RMSE:0.000152 6.3. \u4f7f\u7528histogram.py\u7ed8\u5236\u5404\u5c42\u7f51\u7edc\u6a21\u578b\u7684Histogram\u56fe \u00b6 \u5de5\u5177\u7684\u4f4d\u7f6e\u5728 SGS_IPU_SDK/DumpDebug/histogram.py \u3002 \u8be5\u5de5\u5177\u53ef\u5bf9Dump\u51fa\u6765\u7684\u6570\u636e\u7ed8\u5236\u5404\u5c42\u7684\u6570\u636e\u5206\u5e03\uff0c\u4f7f\u7528\u8be5\u5de5\u5177\u9700Dump\u51fa\u7684\u6570\u636e\u6587\u4ef6\uff0c\u4ee5\u53ca\u4f7f\u7528calibrator \u5de5\u5177\u5c06\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u6210\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u65f6\u5728\u8fd0\u884c\u76ee\u5f55\u4e0b log/tensor_min_max.txt \u6587\u4ef6\u3002 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a Python3 histogram.py sigma_outtensor_dump.bin tensor_min_max.txt \u8fd0\u884c\u4e2d\u5982\u4e0b\u63d0\u793a [===============================================> ]97.61% \u7ed8\u5236\u7684Histogram\u56fe\u5982\u4e0b\u6240\u793a\uff1a \u56fe\u4e2d\u84dd\u8272\u90e8\u5206\u662f\u8be5\u5c42\u7f51\u7edc\u6570\u636e\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u5de6\u53f3\u4e24\u8fb9\u7684\u7ea2\u8272\u865a\u7ebf\u662f\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\u3002 Note \u5de5\u5177\u5728\u8fd0\u884c\u5f53\u524d\u8def\u5f84\u4e0b\uff0c\u4f1a\u521b\u5efaHistograms\u6587\u4ef6\u5939\uff0c\u91cc\u9762\u5305\u542b\u5404\u7f51\u7edc\u5c42\u7684\u6570\u636eHistogram\u56fe\u7247\u3002 \u5bf9\u4e0d\u540cDump\u6570\u636e\u7ed8\u5236\u7f51\u7edc\u6a21\u578b\u7684Histogram\u56fe\u65f6\uff0c\u5e94\u8be5\u91cd\u547d\u540d\u5f53\u524d\u8def\u5f84\u4e0b\u7684Histograms\u6587\u4ef6\u5939\uff0c\u6216\u79fb\u52a8\u81f3\u5176\u4ed6\u8def\u5f84\uff0c histogram.py \u5de5\u5177\u4f1a\u5728\u8fd0\u884c\u65f6\u5220\u9664\u5f53\u524d\u8def\u5f84\u4e0b\u7684Histograms\u6587\u4ef6\u5939\u3002 6.4. \u9519\u8bef\u5904\u7406 \u00b6 \u5f53\u8fd0\u884c\u65f6\u53d1\u751fSegmentFault\u9519\u8bef\u65f6\uff0c\u7a0b\u5e8f\u4e2d\u65ad\u8fd0\u884c\uff0c\u6b64\u65f6\u5b9a\u4f4d\u7a0b\u5e8f\u53d1\u751f\u9519\u8bef\u4f4d\u7f6e\u81f3\u5173\u91cd\u8981\u3002\u8bf7\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\uff0c\u534f\u52a9\u63d0\u4f9b\u76f8\u5173\u4fe1\u606f\u3002 \u4fee\u6539\u751f\u6210core\u6587\u4ef6\u8def\u5f84\u4e3a\u5f53\u524d\u76ee\u5f55\uff0c\u5e76\u8bbe\u7f6ecore\u6587\u4ef6\u5927\u5c0f\u65e0\u4e0a\u9650\uff1a echo core > /proc/sys/kernel/core_pattern ulimit -c unlimited \u91cd\u65b0\u8fd0\u884c\u521a\u521a\u53d1\u751f\u9519\u8bef\u7684\u8f6c\u6362\u7f51\u7edc\u547d\u4ee4\u3002 \u751f\u6210core\u6587\u4ef6\u540e\uff0c\u8fd0\u884c\u5982\u4e0b\u547d\u4ee4\uff0c\u4f1a\u6253\u5370\u7a0b\u5e8f\u76f8\u5173\u4fe1\u606f\uff1a ~/SGS_IPU_SDK/DumpDebug/show_address.sh /path/to/SGS_IPU_SDK/bin/XXX /path/to/core show_address.sh\u811a\u672c\u9700\u8981\u4e24\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u6267\u884c\u547d\u4ee4\u7684bin\u7684\u8def\u5f84\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3acore\u7684\u8def\u5f84\u3002 \u5c4f\u5e55\u4f1a\u6253\u5370\u5185\u5b58\u6620\u5c04\u4fe1\u606f\u4ee5\u53ca\u7a0b\u5e8f\u51fd\u6570\u5806\u6808\u5730\u5740\uff0c\u8bf7\u53cd\u9988\u6b64\u4fe1\u606f\u3002 6.5. \u4f7f\u7528sim_optimizer\u4f18\u5316\u6a21\u578b\u7cbe\u5ea6 \u00b6 \u4f7f\u7528calibrator\u5c06\u6839\u636e\u7edf\u8ba1\u4fe1\u606f\u81ea\u52a8\u914d\u7f6e\u5377\u79ef\u7684\u91cf\u5316\u65b9\u5f0f\uff0c\u76ee\u524d\u6709 --quant_level \u53c2\u6570\u53ef\u4ee5\u9009\u62e9L1\u3001L2\u3001L3\u3001L4\u6216L5\u3002\u5982\u679cfixed\u6a21\u578b\u7684\u7cbe\u5ea6\u4e0efloat\u6a21\u578b\u76f8\u6bd4\u635f\u5931\u8f83\u5927\uff0c\u800c\u901a\u8fc7\u4fee\u6539input_config.ini\u4e2d\u7684[CONV_CONFIG]\uff0c\u4f7f\u7528ALL_INT16\u80fd\u4f7f\u5f97fixed\u6a21\u578b\u7cbe\u5ea6\u4e0efloat\u6a21\u578b\u76f8\u8fd1\uff0c\u53ef\u4ee5\u4f7f\u7528sim_optimizer.py\u5de5\u5177\u4f18\u5316\u8bad\u7ec3\uff0c\u5f97\u5230\u8f83\u4e3a\u5408\u9002\u7684\u6a21\u578b\u7cbe\u5ea6\u3002 sim_optimizer.py\u5de5\u5177\u7684\u4f4d\u7f6e\u5728 SGS_IPU_SDK/Scripts/examples/sim_optimizer.py \u3002 6.5.1 \u5fc5\u9009\u53c2\u6570 \u00b6 -i, --image : \u56fe\u7247\u6587\u4ef6 / \u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\u3002 -m, --model : Float\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 -n, --preprocess : \u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4e0e\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\u76f8\u5173\uff0c\u4e5f\u53ef\u4ee5\u5b8c\u6210\u524d\u5904\u7406\u6587\u4ef6\u914d\u7f6e\u540e\uff0c\u7ed9\u5b9a\u524d\u5904\u7406\u6587\u4ef6\u8def\u5f84\u3002 6.5.2 \u53ef\u9009\u53c2\u6570 \u00b6 --num_process : \u8fdb\u7a0b\u6570\uff0c\u8fd0\u884c\u540c\u65f6\u8fd0\u884c\u7684\u8fdb\u7a0b\u6570\u3002\uff08\u53ef\u9009\u53c2\u6570\uff0c\u4e0d\u52a0\u8be5\u53c2\u6570\u9ed8\u8ba4\u4e3a10\u4e2a\u8fdb\u7a0b\uff09\u3002 6.5.3 \u4f7f\u7528\u793a\u4f8b \u00b6 \u4f7f\u7528sim_optimizer.py\u524d\uff0c\u5e94\u9996\u5148\u901a\u8fc7\u4fee\u6539input_config.ini\u914d\u7f6e\u5377\u79ef\u4e3a\u516816bit\u7cbe\u5ea6\uff0c\u91cd\u65b0\u8f6c\u6362float\u548cfixed\u6a21\u578b\u540e\uff0c\u9a8c\u8bc1fixed\u6a21\u578b\u4e0e\u539f\u6709\u6a21\u578b\u7cbe\u5ea6\u57fa\u672c\u4e00\u81f4\uff0c\u672c\u5de5\u5177\u624d\u6709\u53ef\u7528\u4e4b\u5904\u3002\u4f7f\u7528sim_optimizer.py\u65f6\uff0c\u5e94\u8fd8\u539finput_config.ini\uff0c\u4f7f\u5f97\u6240\u6709\u5377\u79ef\u9ed8\u8ba4\u4e3a8bit\u91cf\u5316\uff0c\u7136\u540e\u91cd\u65b0\u751f\u6210float\u548cfixed\u6a21\u578b\u3002\u5728float\u6a21\u578b\u8f6c\u6362\u5230fixed\u6a21\u578b\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u751f\u6210cmodel_float.sim\u7ed3\u5c3e\u7684\u6a21\u578b\uff0c\u8be5\u6a21\u578b\u5305\u542b\u4e868bit\u7684\u91cf\u5316\u4fe1\u606f\uff0c\u5c06\u4f5c\u4e3asim_optimizer.py\u7684 -c/--cmodel_model \u7684\u53c2\u6570\u4f7f\u7528\u3002\u4f7f\u7528sim_optimizer.py\u793a\u4f8b\u5982\u4e0b\uff1a python3 ~/SGS_IPU_SDK/Scripts/examples/sim_optimizer.py \\ -i ~/SGS_Models/resource/detection/coco2017_calibration_set32 \\ -m ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1_float.sim \\ -c ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1_cmodel_float.im \\ -n ssd_mobilenet_v1 \\ --input_config ~/SGS_Models/tensorflow/ssd_mobilenet_v1/input_config.ini \\ --num_process 20 sim_optimizer.py\u8fd0\u884c\u7ed3\u675f\u540e\uff0c\u4f1a\u751f\u6210\u82e5\u5e72\u91cf\u5316\u5bfc\u5165\u6587\u4ef6\uff0c\u751f\u6210\u7684\u91cf\u5316\u5bfc\u5165\u6587\u4ef6\u6570\u91cf\u4e0esim_optimizer.py\u4e2d\u5b9a\u4e49\u7684compression_rates\u7684list\u4e2d\u6570\u91cf\u76f8\u540c\uff0c\u56e0\u6b64\u53ef\u4ee5\u4fee\u6539\u8be5list\u4e2d\u7684\u53c2\u6570\uff0c\u53c2\u6570\u7684\u8303\u56f4\u662f (0.5, 1)\u3002 \u518d\u4f7f\u7528sim_calibrator.py\u5de5\u5177\u5c06\u91cf\u5316\u4fe1\u606f\u5bfc\u5165\u5230\u6a21\u578b\u4e2d\uff0c\u751f\u6210fixed\u6a21\u578b\u3002 python3 ~/SGS_IPU_SDK/Scripts/examples/sim_calibrator.py \\ -i ~/SGS_Models/resource/detection/coco2017_calibration_set32 \\ -m ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1_float.sim \\ -n ssd_mobilenet_v1 \\ --input_config ~/SGS_Models/tensorflow/ssd_mobilenet_v1/input_config.ini \\ --quant_file ./optimized_quant_info_0.pkl \\ --num_process 20 6.6. \u76f8\u5173\u95ee\u9898\u6c47\u603b \u00b6 DumpDebug Tool\u63d0\u4f9b\u4e86\u6a21\u578b\u91cf\u5316\u540e\u7cbe\u5ea6\u4e0b\u964d\u95ee\u9898\u7684\u6392\u67e5\u65b9\u6cd5\uff0c\u53ef\u7528\u4e8e\u9488\u5bf9\u5b9e\u9645\u95ee\u9898\u53c2\u8003\u3002 \u4f7f\u7528calibrator\u65f6\uff0c --quant_level \u9009\u62e9L2\u3001L3\u3001L4\u6216L5\u65f6\u4f1a\u6839\u636e\u7edf\u8ba1\u4fe1\u606f\u81ea\u52a8\u914d\u7f6e\u5377\u79ef\u7684\u91cf\u5316\u65b9\u5f0f\uff0c\u5982\u679ccalibrator\u672a\u80fd\u5c06\u4e0b\u5217\u60c5\u51b5\u7684\u5377\u79ef\u4fee\u6539\u6210\u201dINT16\u201d\u5377\u79ef\u6a21\u5f0f\uff0c\u8bf7\u624b\u52a8\u5f00\u542f\u3002 \u5728\u5c06SigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u5316\u4e3aSigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u65f6\uff0c\u6ce8\u610f\u4fdd\u5b58\u5728\u8fd0\u884c\u76ee\u5f55\u4e0b\u7684 log/tensor_min_max.txt \u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u8bb0\u5f55\u4e86\u5728\u8f6c\u6362\u8fc7\u7a0b\u4e2d\u5404\u5c42\u7684\u6700\u5927\u548c\u6700\u5c0f\u503c\u3002\u5982\u679c\u5377\u79ef\u8f93\u5165\u5c42\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u76f8\u5dee\u8fc7\u5927\uff08\u4e00\u822c\u8ba4\u4e3a\u5dee\u503c\u5927\u4e8e30\uff09\uff0c\u9700\u8981\u5728\u5bf9\u5e94\u7f51\u7edc\u7684input_config.ini\u6587\u4ef6\u4e2d\u5f00\u542f\u8be5\u5c42\u7684\u201dINT16\u201d\u5377\u79ef\u6a21\u5f0f\uff0c\u5177\u4f53\u4fee\u6539\u65b9\u6cd5\u8bf7\u53c2\u8003[2.2. input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e]\u914d\u7f6e\u4fe1\u606f\u3002\u4fee\u6539input_config.ini\u6587\u4ef6\u540e\u9700\u8981\u91cd\u65b0\u4ece\u539f\u59cb\u6846\u67b6\u8bad\u7ec3\u7684\u6a21\u578b\u8f6c\u6362\u3002 \u4f7f\u7528[6.2.2 \u4f7f\u7528auto_dump_debug.sh\u811a\u672c\u5206\u6790\u6570\u636e]\u7684auto_dump_debug.sh\u811a\u672c\u5bf9\u6bd4\u6570\u636e\u540e\uff0c\u5982\u679cRMSE\u503c\u8f83\u5927\uff08\u4e00\u822c\u8ba4\u4e3a\u5927\u4e8e0.5\uff09\uff0c\u53ef\u5c06\u8be5\u5c42\u524d\u7684\u5377\u79ef\u8f93\u5165\u5c42\u5f00\u542f INT16 \u5377\u79ef\u6a21\u5f0f\u3002\u4fee\u6539input_config.ini\u6587\u4ef6\u540e\u9700\u8981\u91cd\u65b0\u4ece\u539f\u59cb\u6846\u67b6\u8bad\u7ec3\u7684\u6a21\u578b\u8f6c\u6362\u3002 \u4f7f\u7528[6.3. \u4f7f\u7528histogram.py\u7ed8\u5236\u5404\u5c42\u7f51\u7edc\u6a21\u578b\u7684Histogram\u56fe]\u7684histogram.py\u5de5\u5177\u7ed8\u5236Histogram\u56fe\u5e94\u4f7f\u7528SigmaStar\u6d6e\u70b9\u7f51\u7edc\u7684Dump\u6570\u636e\u548c\u5bf9\u5e94\u7684tensor_min_max.txt\u3002\u5982\u679c\u56fe\u4e2d\u7684\u6570\u636e\u5206\u5e03\u5f88\u96c6\u4e2d\uff0c\u4f46\u662f\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u8303\u56f4\u8f83\u5927\uff08\u4e00\u822c\u8ba4\u4e3a\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u7684\u5dee\u503c\u5927\u4e8e30\uff09\uff0c\u53ef\u4ee5\u8003\u8651\u5bf9\u8be5\u5c42\u5377\u79ef\u7684\u8f93\u5165\u5f00\u542f INT16 \u5377\u79ef\u6a21\u5f0f\u3002\u4fee\u6539input_config.ini\u6587\u4ef6\u540e\u9700\u8981\u91cd\u65b0\u4ece\u539f\u59cb\u6846\u67b6\u8bad\u7ec3\u7684\u6a21\u578b\u8f6c\u6362\u3002","title":"DumpDebug Tool"},{"location":"module/User_Guide/Develop/DumpDebug_Tool.html#61","text":"DumpDebug Tool\u5de5\u5177\u7684\u4f4d\u7f6e\u5728 SGS_IPU_SDK/DumpDebug/ \u3002 \u8be5\u5de5\u5177\u662f\u4e3b\u8981\u529f\u80fd\u5982\u4e0b\uff1a \u89e3\u6790\u7f51\u7edc\u6a21\u578b\u6570\u636e\uff1b \u5bf9\u6bd4\u4e0d\u540c\u9636\u6bb5\u7684\u7f51\u7edc\u6a21\u578b\u6570\u636e\uff1b \u7ed8\u5236\u5404\u5c42\u7f51\u7edc\u6a21\u578b\u7684Histogram\u56fe\u3002 SigmaStar DLA SDK\u5728\u8f6c\u6362\u7f51\u7edc\u65f6\uff0cCaffe\u548cTensorFlow\u7684\u7f51\u7edc\u6a21\u578b\u4e0eSigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u7684\u7ed3\u679c\u5b8c\u5168\u4e00\u81f4\uff0cSigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u4e0eSigmaStar\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u7684\u7ed3\u679c\u5b8c\u5168\u4e00\u81f4\u3002 \u6709\u7cbe\u5ea6\u5dee\u522b\u7684\u53ea\u6709\u5728SigmaStar\u6d6e\u70b9\u6a21\u578b\u8f6c\u6362\u4e3aSigmaStar\u5b9a\u70b9\u8fd9\u4e2a\u9636\u6bb5\uff0c\u56e0\u6b64\u5728\u53d1\u73b0SigmaStar\u5b9a\u70b9\u7f51\u7edc\u7684\u7ed3\u679c\u4e0e\u539f\u6709\u6d6e\u70b9\u7684\u7ed3\u679c\u76f8\u5dee\u8f83\u591a\u65f6\uff0c\u4f7f\u7528DumpDebug Tool\u53ef\u4ee5\u68c0\u67e5\u8f6c\u6362\u540e\u5b9a\u70b9\u7f51\u7edc\u7684\u9519\u8bef\u3002","title":"6.1. \u4e3b\u8981\u529f\u80fd"},{"location":"module/User_Guide/Develop/DumpDebug_Tool.html#62","text":"","title":"6.2. \u4f7f\u7528\u6b65\u9aa4"},{"location":"module/User_Guide/Develop/DumpDebug_Tool.html#621-dump","text":"\u5728 SGS_IPU_SDK/cfg \u6587\u4ef6\u5939\u4e2d\u627e\u5230DebugConfig.txt\u6587\u4ef6\uff0c\u590d\u5236\u5230\u5f53\u524d\u8fd0\u884c\u8def\u5f84\u4e0b. \u6253\u5f00DebugConfig.txt\uff0c\u4fee\u6539\u6587\u4ef6\u5185\u5bb9\uff1a dumpTensor eliminateGarbage dequantFixed #dumpasstring #disableDomainFuseOps path = DebugConfig.txt\u5404\u53c2\u6570\u4f5c\u7528: dumpTensor : Dump\u7f51\u7edc\u6a21\u578b\u5404\u5c42\u6570\u636e\u603b\u5f00\u5173\u3002 eliminateGarbage : Dump\u7f51\u7edc\u6a21\u578b\u6570\u636e\u65f6\u53bb\u9664\u65e0\u7528\u6570\u636e\uff08\u5efa\u8bae\u5f00\u542f\uff09\u3002 dequantFixed : \u9488\u5bf9\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff0c\u5c06\u6574\u5f62\u6570\u636e\u8f6c\u6362\u4e3a\u6d6e\u70b9\u6570\u636e\uff08\u5efa\u8bae\u5f00\u542f\uff09\u3002 dumpasstring : Dump\u7f51\u7edc\u6a21\u578b\u6570\u636e\u4e3a\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u5173\u95ed\u9009\u9879\u4e3a\u4e8c\u8fdb\u5236\u6587\u4ef6\u7c7b\u578b\u3002\uff08\u5982\u679c\u9700\u8981[6.2.2 \u4f7f\u7528auto_dump_debug.sh\u811a\u672c\u5206\u6790\u6570\u636e]\u529f\u80fd\uff0c\u52a1\u5fc5\u5173\u95ed\u6b64\u9009\u9879\uff09\u3002 disableDomainFuseOps : \u8f6c\u6362\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u65f6\uff0c\u53d6\u6d88\u7f51\u7edc\u5c42\u878d\u5408\uff08\u5efa\u8bae\u5173\u95ed\uff09\u3002 path= : \u6307\u5b9a\u751f\u6210\u6863\u6848\u7684\u8f93\u51fa\u5168\u8def\u5f84\uff08path= \u540e\u9762\u786e\u4fdd\u586b\u5199\u7c7b\u4f3c /home/user \u7684\u7edd\u5bf9\u8def\u5f84\u3002\u5982\u679cpath= \u540e\u9762\u6ca1\u6709\u5185\u5bb9\u6216\u6839\u672c\u6ca1\u6709 path= \u7684\u8bdd\uff0c\u5219\u4f1a\u9ed8\u8ba4\u8f93\u51fa\u5230 $HOME \u4f4d\u7f6e\u3002\u53e6\u5916\uff0c\u7edd\u5bf9\u8def\u5f84\u6216 /home/user \u4e0d\u8d85\u8fc7122\u5b57\u8282\uff09\u3002 \u8fd0\u884csimulator\u5bf9\u5355\u5f20\u56fe\u7247\u63a8\u6f14\u3002 \u63a8\u6f14\u5b8c\u6210\u540e\uff0c\u4f1a\u5728path=\u53c2\u6570\u6307\u5b9a\u7684\u76ee\u5f55\u751f\u6210sigma_outtensor_dump.bin\uff0c\u5373\u4e3aDump\u7f51\u7edc\u6a21\u578b\u4e2d\u5404\u5c42\u7684\u6570\u636e\u3002 Note Dump\u5b8c\u6210\u540e\u91cd\u547d\u540dsigma_outtensor_dump.bin\u6587\u4ef6\uff0c\u8bf7\u52ff\u4fee\u6539\u6587\u4ef6\u540e\u7f00\u3002\u65b0\u7684Dump\u4f1a\u590d\u5199sigma_outtensor_dump.bin\u6587\u4ef6\u3002 DebugConfig.txt\u6587\u4ef6\u4e2ddisableDomainFuseOps \u9009\u9879\u53ea\u5728\u4f7f\u7528calibrator\u5c06\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u6210\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u65f6\u6709\u7528\u3002\u5176\u4f5c\u7528\u662f\u53d6\u6d88\u7f51\u7edc\u878d\u5408\u529f\u80fd\uff0c\u5173\u95ed\u8be5\u9009\u9879\u65f6\uff0c\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u548c\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u80fd\u591f\u5728\u8f6c\u6362\u65f6\u4f18\u5316\u7f51\u7edc\u6a21\u578b\u7684\u7b97\u5b50\uff0c\u52a0\u901f\u6a21\u578b\u7684\u8fd0\u884c\uff0c\u4f46\u662f\u4e5f\u4f1a\u5f71\u54cd\u7f51\u7edc\u7684\u5c42\u7ea7\u7ed3\u6784\uff0c\u4f7f\u5f97\u90e8\u5206\u7b97\u5b50\u7684\u8f93\u51fa\u4e0d\u4f1a\u88abDump\u5230sigma_outtersor_dump.bin\u6587\u4ef6\u4e2d\u3002\u5982\u679c\u9700\u8981\u7f51\u7edc\u6a21\u578b\u7684\u6bcf\u4e00\u5c42\u6570\u636e\uff0c\u53ef\u4ee5\u6253\u5f00disableDomainFuseOps\u9009\u9879\uff0c\u91cd\u65b0\u8fd0\u884ccalibrator\u8f6c\u6362\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff0c\u6b64\u65f6\u8f6c\u51fa\u7684\u6a21\u578b\u6ca1\u6709\u878d\u5408\u4f18\u5316\uff0c\u53ef\u4ee5\u8f93\u51fa\u6bcf\u5c42\u7684\u6570\u636e\u3002 \u5bf9\u6bd4\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u548c\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff0c\u4f7f\u7528simulator\u4e2d\u53c2\u6570 -t/--type \u548c -m/--model \u6307\u5b9a\u4e0d\u540c\u9636\u6bb5\u7684\u6a21\u578b\uff0c\u5373\u53efDump\u51fa\u4e0d\u540c\u9636\u6bb5\u7684\u7f51\u7edc\u6a21\u578b\u6570\u636e\u3002 \u79bb\u7ebf\u6a21\u578b\u4e0d\u652f\u6301Dump Debug,\u79bb\u7ebf\u6a21\u578b\u7f51\u7edc\u7684\u5c42\u7ea7\u7ed3\u6784Domain\u5df2\u7ecf\u878d\u5408\uff0c\u4e0d\u80fdDump\u7f51\u7edc\u6a21\u578b\u4e2d\u5404\u5c42\u7684\u6570\u636e\u3002 \u4f7f\u7528calibrator\u5c06\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u4e3a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u65f6\uff0c\u4f1a\u5728SGS_IPU_SDK\u6839\u76ee\u5f55\u4e0b\u4ea7\u751ftensor_min_max.txt \u6587\u4ef6\uff0c\u6b64\u6587\u4ef6\u8bb0\u5f55\u4e86\u7f51\u7edc\u7684\u6bcf\u5c42\u8f93\u5165\u548c\u8f93\u51fa\u7684\u6700\u5927\u4e0e\u6700\u5c0f\u503c\uff0c\u5c06\u5728\u4e4b\u540e\u5206\u6790Dump\u6570\u636e\u65f6\u6709\u7528\u3002","title":"6.2.1 Dump\u7f51\u7edc\u6a21\u578b\u4e2d\u5404\u5c42\u6570\u636e"},{"location":"module/User_Guide/Develop/DumpDebug_Tool.html#622-auto_dump_debugsh","text":"\u5de5\u5177\u7684\u4f4d\u7f6e\u5728 SGS_IPU_SDK/DumpDebug/auto_dump_debug.sh \u3002 auto_dump_debug.sh\u811a\u672c\u80fd\u591f\u5bf9\u6bd4\u6837\u672c bin\uff08sample\uff09\u548c\u57fa\u51c6 bin\uff08benchmark\uff09\u7684\u76f8\u540coutput tensor\u5c42\u7684COS\u3001MSE\u548cRMSE\uff0c\u9700\u4f7f\u7528[6.2.1 Dump\u7f51\u7edc\u6a21\u578b\u4e2d\u5404\u5c42\u6570\u636e]\u4e2dDump\u51fa\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u548c\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u7684bin\u6587\u4ef6\u3002 \u4f7f\u7528\u793a\u4f8b\uff1a ./auto_dump_debug.sh \\ /home/user/SGS_IPU_SDK \\ /home/user/sample.bin \\ /home/user/benchmark.bin \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a Param1 : SGS_IPU_SDK \u7684\u8def\u5f84\uff0c\u5982\u679c\u5728\u5f53\u524d\u4f4d\u7f6e\uff0c\u53ea\u9700\u4f20\u76ee\u5f55\u5939\u540d\u3002 Param2 : \u9700\u8981\u5bf9\u6bd4\u7684\u5df2\u7ecf dump\u51fa\u6765\u7684sample bin\u8def\u5f84\uff0c\u6b64\u5904\u5e94\u4e3a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578bDump\u51fa\u7684bin\u6587\u4ef6\u8def\u5f84\u3002 Param3 : \u4f5c\u4e3a\u53c2\u8003\u7684\u5df2\u7ecf dump\u51fa\u6765\u7684 benchmark bin\u8def\u5f84\uff0c\u6b64\u5904\u5e94\u4e3a\u6d6e\u70b9\u7f51\u7edc\u6a21\u578bDump\u51fa\u7684bin\u6587\u4ef6\u8def\u5f84\u3002 \u672a\u5f00\u542fdisableDomainFuseOps\u9009\u9879\u65f6\uff0c\u5b8c\u6210\u5206\u6790\u540e\u663e\u793a\u5982\u4e0b\uff1a\uff08\u90e8\u5206\uff09 3.conv1_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000046 COS:0.999898 RMSE:0.014310 4.pool1.xx.output0 OP_TYPE:MAX_POOL_2D MSE:0.000057 COS:0.999931 RMSE:0.011018 7.res2a_branch1_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000076 COS:0.999886 RMSE:0.015652 11.res2a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000027 COS:0.999652 RMSE:0.023612 16.res2a_xx.xx.output0 OP_TYPE:RELU MSE:0.000177 COS:0.999644 RMSE:0.025049 20.res2b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000069 COS:0.999242 RMSE:0.039121 25.res2b_xx.xx.output0 OP_TYPE:RELU MSE:0.000430 COS:0.999452 RMSE:0.030551 28.res3a_branch1_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000165 COS:0.998975 RMSE:0.041644 32.res3a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000139 COS:0.998842 RMSE:0.048416 37.res3a_xx.xx.output0 OP_TYPE:RELU MSE:0.000297 COS:0.999069 RMSE:0.041043 41.res3b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000070 COS:0.998836 RMSE:0.051215 46.res3b_xx.xx.output0 OP_TYPE:RELU MSE:0.000366 COS:0.999035 RMSE:0.042863 49.res4a_branch1_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000026 COS:0.999282 RMSE:0.035575 53.res4a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000108 COS:0.998950 RMSE:0.047213 58.res4a_xx.xx.output0 OP_TYPE:RELU MSE:0.000149 COS:0.999174 RMSE:0.040582 62.res4b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000030 COS:0.999020 RMSE:0.046630 67.res4b_xx.xx.output0 OP_TYPE:RELU MSE:0.000168 COS:0.999073 RMSE:0.041229 70.res5a_branch1_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000305 COS:0.999276 RMSE:0.033715 74.res5a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000032 COS:0.998723 RMSE:0.053469 79.res5a_xx.xx.output0 OP_TYPE:RELU MSE:0.000507 COS:0.998762 RMSE:0.050663 83.res5b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000027 COS:0.998182 RMSE:0.064201 88.res5b_xx.xx.output0 OP_TYPE:RELU MSE:0.006022 COS:0.998665 RMSE:0.056931 89.pool5.xx.output0 OP_TYPE:AVG_POOL_2D MSE:0.004321 COS:0.998488 RMSE:0.079694 90.fc1000_reshape#1_output#183.output0 OP_TYPE:ReshapeAliasMSE:0.004321 COS:0.998488 RMSE:0.079694 91.fc1000#185.xx.output0 OP_TYPE:CONV_2D MSE:0.014197 COS:0.998901 RMSE:0.051447 92.fc1000.xx.output0 OP_TYPE:ReshapeAliasMSE:0.014197 COS:0.998901 RMSE:0.051447 93.prob.xx.output0 OP_TYPE:Fix2Float MSE:0.000000 COS:1.000000 RMSE:0.000152 \u5f00\u542fdisableDomainFuseOps\u9009\u9879\u65f6\uff0c\u5b8c\u6210\u5206\u6790\u540e\u663e\u793a\u5982\u4e0b\uff1a\uff08\u90e8\u5206\uff09 0.conv1.xx.output0 OP_TYPE:CONV_2D MSE:2.397930 COS:0.999887 RMSE:0.019312 1.conv1_xx.xx.output0 OP_TYPE:MUL MSE:0.000037 COS:0.999850 RMSE:0.020800 2.conv1_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000037 COS:0.999936 RMSE:0.010667 3.conv1_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000052 COS:0.999885 RMSE:0.015123 4.pool1.xx.output0 OP_TYPE:MAX_POOL_2D MSE:0.000063 COS:0.999924 RMSE:0.011603 5.res2a_branch1.xx.output0 OP_TYPE:CONV_2D MSE:0.000096 COS:0.999952 RMSE:0.009368 6.res2a_branch1_xx.xx.output0 OP_TYPE:MUL MSE:0.000080 COS:0.999956 RMSE:0.009144 7.res2a_branch1_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000080 COS:0.999880 RMSE:0.016141 8.res2a_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.000349 COS:0.999951 RMSE:0.009727 9.res2a_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000049 COS:0.999956 RMSE:0.009349 10.res2a_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000049 COS:0.999886 RMSE:0.016510 11.res2a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000028 COS:0.999641 RMSE:0.024211 12.res2a_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000100 COS:0.999821 RMSE:0.018379 13.res2a_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.000118 COS:0.999832 RMSE:0.017982 14.res2a_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000118 COS:0.999670 RMSE:0.024984 15.res2a.xx.output0 OP_TYPE:ADD MSE:0.000241 COS:0.999771 RMSE:0.021801 16.res2a_xx.xx.output0 OP_TYPE:RELU MSE:0.000182 COS:0.999634 RMSE:0.025262 17.res2b_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.000525 COS:0.999709 RMSE:0.023127 18.res2b_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000193 COS:0.999746 RMSE:0.022434 19.res2b_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000193 COS:0.999474 RMSE:0.032121 20.res2b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000071 COS:0.999219 RMSE:0.039747 21.res2b_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000157 COS:0.999549 RMSE:0.030371 22.res2b_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.000272 COS:0.999587 RMSE:0.029537 23.res2b_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000272 COS:0.999151 RMSE:0.040304 24.res2b.xx.output0 OP_TYPE:ADD MSE:0.000534 COS:0.999425 RMSE:0.031402 25.res2b_xx.xx.output0 OP_TYPE:RELU MSE:0.000448 COS:0.999429 RMSE:0.031203 26.res3a_branch1.xx.output0 OP_TYPE:CONV_2D MSE:0.000267 COS:0.999320 RMSE:0.034101 27.res3a_branch1_xx.xx.output0 OP_TYPE:MUL MSE:0.000169 COS:0.999345 RMSE:0.034331 28.res3a_branch1_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000169 COS:0.998949 RMSE:0.042434 29.res3a_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.001885 COS:0.999472 RMSE:0.030785 30.res3a_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000427 COS:0.999486 RMSE:0.030586 31.res3a_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000427 COS:0.998909 RMSE:0.045188 32.res3a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000147 COS:0.998773 RMSE:0.049700 33.res3a_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000331 COS:0.999425 RMSE:0.034038 34.res3a_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.000368 COS:0.999411 RMSE:0.034275 35.res3a_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000368 COS:0.998931 RMSE:0.044919 36.res3a.xx.output0 OP_TYPE:ADD MSE:0.000585 COS:0.999040 RMSE:0.042398 37.res3a_xx.xx.output0 OP_TYPE:RELU MSE:0.000301 COS:0.999058 RMSE:0.041479 38.res3b_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.000811 COS:0.999530 RMSE:0.029739 39.res3b_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000288 COS:0.999580 RMSE:0.028879 40.res3b_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000288 COS:0.999383 RMSE:0.033874 41.res3b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000073 COS:0.998787 RMSE:0.052493 42.res3b_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000136 COS:0.999469 RMSE:0.033442 43.res3b_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.000314 COS:0.999489 RMSE:0.033050 44.res3b_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000314 COS:0.999308 RMSE:0.036079 45.res3b.xx.output0 OP_TYPE:ADD MSE:0.000659 COS:0.998989 RMSE:0.042628 46.res3b_xx.xx.output0 OP_TYPE:RELU MSE:0.000375 COS:0.999011 RMSE:0.043575 47.res4a_branch1.xx.output0 OP_TYPE:CONV_2D MSE:0.000098 COS:0.999264 RMSE:0.037842 48.res4a_branch1_xx.xx.output0 OP_TYPE:MUL MSE:0.000027 COS:0.999298 RMSE:0.037615 49.res4a_branch1_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000027 COS:0.999253 RMSE:0.036302 50.res4a_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.001011 COS:0.999543 RMSE:0.028507 51.res4a_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000300 COS:0.999544 RMSE:0.028563 52.res4a_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000300 COS:0.999147 RMSE:0.040221 53.res4a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000107 COS:0.998961 RMSE:0.047238 54.res4a_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000335 COS:0.999464 RMSE:0.032660 55.res4a_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.000255 COS:0.999453 RMSE:0.032788 56.res4a_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000255 COS:0.999234 RMSE:0.038888 57.res4a.xx.output0 OP_TYPE:ADD MSE:0.000312 COS:0.999298 RMSE:0.036873 58.res4a_xx.xx.output0 OP_TYPE:RELU MSE:0.000146 COS:0.999191 RMSE:0.040181 59.res4b_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.000369 COS:0.999748 RMSE:0.021992 60.res4b_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000156 COS:0.999772 RMSE:0.021527 61.res4b_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000156 COS:0.999625 RMSE:0.026857 62.res4b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000028 COS:0.999073 RMSE:0.045494 63.res4b_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000048 COS:0.999748 RMSE:0.022612 64.res4b_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.000191 COS:0.999751 RMSE:0.022354 65.res4b_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000191 COS:0.999678 RMSE:0.024581 66.res4b.xx.output0 OP_TYPE:ADD MSE:0.000337 COS:0.999448 RMSE:0.032108 67.res4b_xx.xx.output0 OP_TYPE:RELU MSE:0.000160 COS:0.999113 RMSE:0.040588 68.res5a_branch1.xx.output0 OP_TYPE:CONV_2D MSE:0.000072 COS:0.999179 RMSE:0.038052 69.res5a_branch1_xx.xx.output0 OP_TYPE:MUL MSE:0.000290 COS:0.999179 RMSE:0.038130 70.res5a_branch1_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000290 COS:0.999311 RMSE:0.032880 71.res5a_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.000355 COS:0.999758 RMSE:0.020371 72.res5a_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000133 COS:0.999750 RMSE:0.020561 73.res5a_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000133 COS:0.999613 RMSE:0.026392 74.res5a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000028 COS:0.998859 RMSE:0.051003 75.res5a_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000063 COS:0.999512 RMSE:0.031809 76.res5a_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.001009 COS:0.999480 RMSE:0.032233 77.res5a_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.001009 COS:0.999257 RMSE:0.039436 78.res5a.xx.output0 OP_TYPE:ADD MSE:0.001413 COS:0.999379 RMSE:0.034297 79.res5a_xx.xx.output0 OP_TYPE:RELU MSE:0.000457 COS:0.998876 RMSE:0.048274 80.res5b_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.001387 COS:0.999842 RMSE:0.015781 81.res5b_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000239 COS:0.999839 RMSE:0.015798 82.res5b_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000239 COS:0.999639 RMSE:0.026762 83.res5b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000023 COS:0.998458 RMSE:0.058598 84.res5b_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000041 COS:0.999061 RMSE:0.041137 85.res5b_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.007750 COS:0.999058 RMSE:0.041188 86.res5b_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.007751 COS:0.998732 RMSE:0.052601 87.res5b.xx.output0 OP_TYPE:ADD MSE:0.008533 COS:0.998792 RMSE:0.052043 88.res5b_xx.xx.output0 OP_TYPE:RELU MSE:0.004860 COS:0.998924 RMSE:0.051718 89.pool5.xx.output0 OP_TYPE:AVG_POOL_2D MSE:0.004061 COS:0.998601 RMSE:0.078395 90.fc1000_reshape#1_output#183.output0 OP_TYPE:ReshapeAliasMSE:0.004061 COS:0.998601 RMSE:0.078395 91.fc1000#185.xx.output0 OP_TYPE:CONV_2D MSE:0.013363 COS:0.998935 RMSE:0.050327 92.fc1000.xx.output0 OP_TYPE:ReshapeAliasMSE:0.013363 COS:0.998935 RMSE:0.050327 93.prob.xx.output0 OP_TYPE:SOFTMAX MSE:0.000000 COS:1.000000 RMSE:0.000152","title":"6.2.2 \u4f7f\u7528auto_dump_debug.sh\u811a\u672c\u5206\u6790\u6570\u636e"},{"location":"module/User_Guide/Develop/DumpDebug_Tool.html#63-histogrampyhistogram","text":"\u5de5\u5177\u7684\u4f4d\u7f6e\u5728 SGS_IPU_SDK/DumpDebug/histogram.py \u3002 \u8be5\u5de5\u5177\u53ef\u5bf9Dump\u51fa\u6765\u7684\u6570\u636e\u7ed8\u5236\u5404\u5c42\u7684\u6570\u636e\u5206\u5e03\uff0c\u4f7f\u7528\u8be5\u5de5\u5177\u9700Dump\u51fa\u7684\u6570\u636e\u6587\u4ef6\uff0c\u4ee5\u53ca\u4f7f\u7528calibrator \u5de5\u5177\u5c06\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u6210\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u65f6\u5728\u8fd0\u884c\u76ee\u5f55\u4e0b log/tensor_min_max.txt \u6587\u4ef6\u3002 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a Python3 histogram.py sigma_outtensor_dump.bin tensor_min_max.txt \u8fd0\u884c\u4e2d\u5982\u4e0b\u63d0\u793a [===============================================> ]97.61% \u7ed8\u5236\u7684Histogram\u56fe\u5982\u4e0b\u6240\u793a\uff1a \u56fe\u4e2d\u84dd\u8272\u90e8\u5206\u662f\u8be5\u5c42\u7f51\u7edc\u6570\u636e\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u5de6\u53f3\u4e24\u8fb9\u7684\u7ea2\u8272\u865a\u7ebf\u662f\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\u3002 Note \u5de5\u5177\u5728\u8fd0\u884c\u5f53\u524d\u8def\u5f84\u4e0b\uff0c\u4f1a\u521b\u5efaHistograms\u6587\u4ef6\u5939\uff0c\u91cc\u9762\u5305\u542b\u5404\u7f51\u7edc\u5c42\u7684\u6570\u636eHistogram\u56fe\u7247\u3002 \u5bf9\u4e0d\u540cDump\u6570\u636e\u7ed8\u5236\u7f51\u7edc\u6a21\u578b\u7684Histogram\u56fe\u65f6\uff0c\u5e94\u8be5\u91cd\u547d\u540d\u5f53\u524d\u8def\u5f84\u4e0b\u7684Histograms\u6587\u4ef6\u5939\uff0c\u6216\u79fb\u52a8\u81f3\u5176\u4ed6\u8def\u5f84\uff0c histogram.py \u5de5\u5177\u4f1a\u5728\u8fd0\u884c\u65f6\u5220\u9664\u5f53\u524d\u8def\u5f84\u4e0b\u7684Histograms\u6587\u4ef6\u5939\u3002","title":"6.3. \u4f7f\u7528histogram.py\u7ed8\u5236\u5404\u5c42\u7f51\u7edc\u6a21\u578b\u7684Histogram\u56fe"},{"location":"module/User_Guide/Develop/DumpDebug_Tool.html#64","text":"\u5f53\u8fd0\u884c\u65f6\u53d1\u751fSegmentFault\u9519\u8bef\u65f6\uff0c\u7a0b\u5e8f\u4e2d\u65ad\u8fd0\u884c\uff0c\u6b64\u65f6\u5b9a\u4f4d\u7a0b\u5e8f\u53d1\u751f\u9519\u8bef\u4f4d\u7f6e\u81f3\u5173\u91cd\u8981\u3002\u8bf7\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\uff0c\u534f\u52a9\u63d0\u4f9b\u76f8\u5173\u4fe1\u606f\u3002 \u4fee\u6539\u751f\u6210core\u6587\u4ef6\u8def\u5f84\u4e3a\u5f53\u524d\u76ee\u5f55\uff0c\u5e76\u8bbe\u7f6ecore\u6587\u4ef6\u5927\u5c0f\u65e0\u4e0a\u9650\uff1a echo core > /proc/sys/kernel/core_pattern ulimit -c unlimited \u91cd\u65b0\u8fd0\u884c\u521a\u521a\u53d1\u751f\u9519\u8bef\u7684\u8f6c\u6362\u7f51\u7edc\u547d\u4ee4\u3002 \u751f\u6210core\u6587\u4ef6\u540e\uff0c\u8fd0\u884c\u5982\u4e0b\u547d\u4ee4\uff0c\u4f1a\u6253\u5370\u7a0b\u5e8f\u76f8\u5173\u4fe1\u606f\uff1a ~/SGS_IPU_SDK/DumpDebug/show_address.sh /path/to/SGS_IPU_SDK/bin/XXX /path/to/core show_address.sh\u811a\u672c\u9700\u8981\u4e24\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u6267\u884c\u547d\u4ee4\u7684bin\u7684\u8def\u5f84\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3acore\u7684\u8def\u5f84\u3002 \u5c4f\u5e55\u4f1a\u6253\u5370\u5185\u5b58\u6620\u5c04\u4fe1\u606f\u4ee5\u53ca\u7a0b\u5e8f\u51fd\u6570\u5806\u6808\u5730\u5740\uff0c\u8bf7\u53cd\u9988\u6b64\u4fe1\u606f\u3002","title":"6.4. \u9519\u8bef\u5904\u7406"},{"location":"module/User_Guide/Develop/DumpDebug_Tool.html#65-sim_optimizer","text":"\u4f7f\u7528calibrator\u5c06\u6839\u636e\u7edf\u8ba1\u4fe1\u606f\u81ea\u52a8\u914d\u7f6e\u5377\u79ef\u7684\u91cf\u5316\u65b9\u5f0f\uff0c\u76ee\u524d\u6709 --quant_level \u53c2\u6570\u53ef\u4ee5\u9009\u62e9L1\u3001L2\u3001L3\u3001L4\u6216L5\u3002\u5982\u679cfixed\u6a21\u578b\u7684\u7cbe\u5ea6\u4e0efloat\u6a21\u578b\u76f8\u6bd4\u635f\u5931\u8f83\u5927\uff0c\u800c\u901a\u8fc7\u4fee\u6539input_config.ini\u4e2d\u7684[CONV_CONFIG]\uff0c\u4f7f\u7528ALL_INT16\u80fd\u4f7f\u5f97fixed\u6a21\u578b\u7cbe\u5ea6\u4e0efloat\u6a21\u578b\u76f8\u8fd1\uff0c\u53ef\u4ee5\u4f7f\u7528sim_optimizer.py\u5de5\u5177\u4f18\u5316\u8bad\u7ec3\uff0c\u5f97\u5230\u8f83\u4e3a\u5408\u9002\u7684\u6a21\u578b\u7cbe\u5ea6\u3002 sim_optimizer.py\u5de5\u5177\u7684\u4f4d\u7f6e\u5728 SGS_IPU_SDK/Scripts/examples/sim_optimizer.py \u3002","title":"6.5. \u4f7f\u7528sim_optimizer\u4f18\u5316\u6a21\u578b\u7cbe\u5ea6"},{"location":"module/User_Guide/Develop/DumpDebug_Tool.html#651","text":"-i, --image : \u56fe\u7247\u6587\u4ef6 / \u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\u3002 -m, --model : Float\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 -n, --preprocess : \u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4e0e\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\u76f8\u5173\uff0c\u4e5f\u53ef\u4ee5\u5b8c\u6210\u524d\u5904\u7406\u6587\u4ef6\u914d\u7f6e\u540e\uff0c\u7ed9\u5b9a\u524d\u5904\u7406\u6587\u4ef6\u8def\u5f84\u3002","title":"6.5.1 \u5fc5\u9009\u53c2\u6570"},{"location":"module/User_Guide/Develop/DumpDebug_Tool.html#652","text":"--num_process : \u8fdb\u7a0b\u6570\uff0c\u8fd0\u884c\u540c\u65f6\u8fd0\u884c\u7684\u8fdb\u7a0b\u6570\u3002\uff08\u53ef\u9009\u53c2\u6570\uff0c\u4e0d\u52a0\u8be5\u53c2\u6570\u9ed8\u8ba4\u4e3a10\u4e2a\u8fdb\u7a0b\uff09\u3002","title":"6.5.2 \u53ef\u9009\u53c2\u6570"},{"location":"module/User_Guide/Develop/DumpDebug_Tool.html#653","text":"\u4f7f\u7528sim_optimizer.py\u524d\uff0c\u5e94\u9996\u5148\u901a\u8fc7\u4fee\u6539input_config.ini\u914d\u7f6e\u5377\u79ef\u4e3a\u516816bit\u7cbe\u5ea6\uff0c\u91cd\u65b0\u8f6c\u6362float\u548cfixed\u6a21\u578b\u540e\uff0c\u9a8c\u8bc1fixed\u6a21\u578b\u4e0e\u539f\u6709\u6a21\u578b\u7cbe\u5ea6\u57fa\u672c\u4e00\u81f4\uff0c\u672c\u5de5\u5177\u624d\u6709\u53ef\u7528\u4e4b\u5904\u3002\u4f7f\u7528sim_optimizer.py\u65f6\uff0c\u5e94\u8fd8\u539finput_config.ini\uff0c\u4f7f\u5f97\u6240\u6709\u5377\u79ef\u9ed8\u8ba4\u4e3a8bit\u91cf\u5316\uff0c\u7136\u540e\u91cd\u65b0\u751f\u6210float\u548cfixed\u6a21\u578b\u3002\u5728float\u6a21\u578b\u8f6c\u6362\u5230fixed\u6a21\u578b\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u751f\u6210cmodel_float.sim\u7ed3\u5c3e\u7684\u6a21\u578b\uff0c\u8be5\u6a21\u578b\u5305\u542b\u4e868bit\u7684\u91cf\u5316\u4fe1\u606f\uff0c\u5c06\u4f5c\u4e3asim_optimizer.py\u7684 -c/--cmodel_model \u7684\u53c2\u6570\u4f7f\u7528\u3002\u4f7f\u7528sim_optimizer.py\u793a\u4f8b\u5982\u4e0b\uff1a python3 ~/SGS_IPU_SDK/Scripts/examples/sim_optimizer.py \\ -i ~/SGS_Models/resource/detection/coco2017_calibration_set32 \\ -m ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1_float.sim \\ -c ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1_cmodel_float.im \\ -n ssd_mobilenet_v1 \\ --input_config ~/SGS_Models/tensorflow/ssd_mobilenet_v1/input_config.ini \\ --num_process 20 sim_optimizer.py\u8fd0\u884c\u7ed3\u675f\u540e\uff0c\u4f1a\u751f\u6210\u82e5\u5e72\u91cf\u5316\u5bfc\u5165\u6587\u4ef6\uff0c\u751f\u6210\u7684\u91cf\u5316\u5bfc\u5165\u6587\u4ef6\u6570\u91cf\u4e0esim_optimizer.py\u4e2d\u5b9a\u4e49\u7684compression_rates\u7684list\u4e2d\u6570\u91cf\u76f8\u540c\uff0c\u56e0\u6b64\u53ef\u4ee5\u4fee\u6539\u8be5list\u4e2d\u7684\u53c2\u6570\uff0c\u53c2\u6570\u7684\u8303\u56f4\u662f (0.5, 1)\u3002 \u518d\u4f7f\u7528sim_calibrator.py\u5de5\u5177\u5c06\u91cf\u5316\u4fe1\u606f\u5bfc\u5165\u5230\u6a21\u578b\u4e2d\uff0c\u751f\u6210fixed\u6a21\u578b\u3002 python3 ~/SGS_IPU_SDK/Scripts/examples/sim_calibrator.py \\ -i ~/SGS_Models/resource/detection/coco2017_calibration_set32 \\ -m ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1_float.sim \\ -n ssd_mobilenet_v1 \\ --input_config ~/SGS_Models/tensorflow/ssd_mobilenet_v1/input_config.ini \\ --quant_file ./optimized_quant_info_0.pkl \\ --num_process 20","title":"6.5.3 \u4f7f\u7528\u793a\u4f8b"},{"location":"module/User_Guide/Develop/DumpDebug_Tool.html#66","text":"DumpDebug Tool\u63d0\u4f9b\u4e86\u6a21\u578b\u91cf\u5316\u540e\u7cbe\u5ea6\u4e0b\u964d\u95ee\u9898\u7684\u6392\u67e5\u65b9\u6cd5\uff0c\u53ef\u7528\u4e8e\u9488\u5bf9\u5b9e\u9645\u95ee\u9898\u53c2\u8003\u3002 \u4f7f\u7528calibrator\u65f6\uff0c --quant_level \u9009\u62e9L2\u3001L3\u3001L4\u6216L5\u65f6\u4f1a\u6839\u636e\u7edf\u8ba1\u4fe1\u606f\u81ea\u52a8\u914d\u7f6e\u5377\u79ef\u7684\u91cf\u5316\u65b9\u5f0f\uff0c\u5982\u679ccalibrator\u672a\u80fd\u5c06\u4e0b\u5217\u60c5\u51b5\u7684\u5377\u79ef\u4fee\u6539\u6210\u201dINT16\u201d\u5377\u79ef\u6a21\u5f0f\uff0c\u8bf7\u624b\u52a8\u5f00\u542f\u3002 \u5728\u5c06SigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u5316\u4e3aSigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u65f6\uff0c\u6ce8\u610f\u4fdd\u5b58\u5728\u8fd0\u884c\u76ee\u5f55\u4e0b\u7684 log/tensor_min_max.txt \u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u8bb0\u5f55\u4e86\u5728\u8f6c\u6362\u8fc7\u7a0b\u4e2d\u5404\u5c42\u7684\u6700\u5927\u548c\u6700\u5c0f\u503c\u3002\u5982\u679c\u5377\u79ef\u8f93\u5165\u5c42\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u76f8\u5dee\u8fc7\u5927\uff08\u4e00\u822c\u8ba4\u4e3a\u5dee\u503c\u5927\u4e8e30\uff09\uff0c\u9700\u8981\u5728\u5bf9\u5e94\u7f51\u7edc\u7684input_config.ini\u6587\u4ef6\u4e2d\u5f00\u542f\u8be5\u5c42\u7684\u201dINT16\u201d\u5377\u79ef\u6a21\u5f0f\uff0c\u5177\u4f53\u4fee\u6539\u65b9\u6cd5\u8bf7\u53c2\u8003[2.2. input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e]\u914d\u7f6e\u4fe1\u606f\u3002\u4fee\u6539input_config.ini\u6587\u4ef6\u540e\u9700\u8981\u91cd\u65b0\u4ece\u539f\u59cb\u6846\u67b6\u8bad\u7ec3\u7684\u6a21\u578b\u8f6c\u6362\u3002 \u4f7f\u7528[6.2.2 \u4f7f\u7528auto_dump_debug.sh\u811a\u672c\u5206\u6790\u6570\u636e]\u7684auto_dump_debug.sh\u811a\u672c\u5bf9\u6bd4\u6570\u636e\u540e\uff0c\u5982\u679cRMSE\u503c\u8f83\u5927\uff08\u4e00\u822c\u8ba4\u4e3a\u5927\u4e8e0.5\uff09\uff0c\u53ef\u5c06\u8be5\u5c42\u524d\u7684\u5377\u79ef\u8f93\u5165\u5c42\u5f00\u542f INT16 \u5377\u79ef\u6a21\u5f0f\u3002\u4fee\u6539input_config.ini\u6587\u4ef6\u540e\u9700\u8981\u91cd\u65b0\u4ece\u539f\u59cb\u6846\u67b6\u8bad\u7ec3\u7684\u6a21\u578b\u8f6c\u6362\u3002 \u4f7f\u7528[6.3. \u4f7f\u7528histogram.py\u7ed8\u5236\u5404\u5c42\u7f51\u7edc\u6a21\u578b\u7684Histogram\u56fe]\u7684histogram.py\u5de5\u5177\u7ed8\u5236Histogram\u56fe\u5e94\u4f7f\u7528SigmaStar\u6d6e\u70b9\u7f51\u7edc\u7684Dump\u6570\u636e\u548c\u5bf9\u5e94\u7684tensor_min_max.txt\u3002\u5982\u679c\u56fe\u4e2d\u7684\u6570\u636e\u5206\u5e03\u5f88\u96c6\u4e2d\uff0c\u4f46\u662f\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u8303\u56f4\u8f83\u5927\uff08\u4e00\u822c\u8ba4\u4e3a\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u7684\u5dee\u503c\u5927\u4e8e30\uff09\uff0c\u53ef\u4ee5\u8003\u8651\u5bf9\u8be5\u5c42\u5377\u79ef\u7684\u8f93\u5165\u5f00\u542f INT16 \u5377\u79ef\u6a21\u5f0f\u3002\u4fee\u6539input_config.ini\u6587\u4ef6\u540e\u9700\u8981\u91cd\u65b0\u4ece\u539f\u59cb\u6846\u67b6\u8bad\u7ec3\u7684\u6a21\u578b\u8f6c\u6362\u3002","title":"6.6. \u76f8\u5173\u95ee\u9898\u6c47\u603b"},{"location":"module/User_Guide/Develop/Environment_Construction.html","text":"1.1. \u5b89\u88c5\u73af\u5883\u4f9d\u8d56 \u00b6 \ud83d\udcddSigmaStar DLA SDK\u57fa\u4e8eAVX2\u6307\u4ee4\u96c6\u7f16\u5199\uff0c\u8bf7\u4f7f\u7528\u652f\u63f4AVX2\u7684Intel\u00ae\u5904\u7406\u5668\u8fd0\u884c\u3002 \u63a8\u8350\u914d\u7f6e \ud83d\udda5\ufe0f\ud83d\udcbb \u2699\ufe0f CPU Intel\u00ae CoreTM i7 or Higher RAM 8G or Higher \u6700\u4f4e\u914d\u7f6e \ud83d\udda5\ufe0f\ud83d\udcbb \u2699\ufe0f CPU Intel\u00ae CoreTM i5 RAM 6G \u7cfb\u7edf\u4f9d\u8d56 \u00b6 Package Installation command i386 dpkg --add-architecture i386 build-essential sudo apt install build-essential cmake sudo apt install cmake libc6-dev sudo apt install libc6-dev libc6-dev:i386 libc6-dev-i386 libbz2-dev sudo apt install libbz2-dev libbz2-dev:i386 libncurses5-dev sudo apt install libncurses5-dev libncurses5-dev:i386 libglib2.0-dev sudo apt install libglib2.0-dev libglib2.0-dev:i386 libsm6 sudo apt install libsm6 libsm6:i386 libxrender1 sudo apt install libxrender1 libxrender1:i386 libxext6 sudo apt install libxext6 libxext6:i386 libgdbm-dev sudo apt install libgdbm-dev libgdbm-dev:i386 liblzma-dev sudo apt install liblzma-dev liblzma-dev:i386 libsqlite3-dev sudo apt install libsqlite3-dev libsqlite3-dev:i386 libssl-dev sudo apt install libssl-dev libssl-dev:i386 libreadline6-dev sudo apt install libreadline6-dev libreadline6-dev:i386 libffi-dev sudo apt install libffi-dev libffi-dev:i386 zlib1g-dev sudo apt install zlib1g-dev zlib1g-dev:i386 libncursesw5-dev sudo apt install libncursesw5-dev libncursesw5-dev:i386 libsqlite3-dev sudo apt install libsqlite3-dev libsqlite3-dev:i386 libgdbm-dev sudo apt install libgdbm-dev libgdbm-dev:i386 libbz2-dev sudo apt install libbz2-dev libbz2-dev:i386 checkinstall sudo apt install checkinstall openssl sudo apt install openssl Python \u4f9d\u8d56 \u00b6 \u4f7f\u7528SigmaStar DLA SDK\u9700\u8981\u5b89\u88c5\u4ee5\u4e0b\u4f9d\u8d56\u5e93\uff1a Software Installation Command Tested Version Python 3.7 enum34 pip install enum34==1.1.10 ==1.1.10 numpy pip install numpy==1.16.6 ==1.16.6 protobuf pip install protobuf >=3.8.0 six pip install six >=1.12.0 OpenCV-python pip install opencv-python ==4.2.0.34 TensorFlow pip install tensorflow ==1.14.0 Cython pip install cython >=0.29.13 pycocotools pip install pycocotools >=2.0.0 matplotlib pip install matplotlib >=3.0.3 SciPy pip install scipy >=1.3.1 Pillow pip install pillow ==6.1.0 joblib pip install joblib ==0.13.2 onnx-simplifier pip install onnx-simplifier ==0.2.10 sympy pip install sympy ==1.6.1 packaging pip install packaging ==20.4 onnx pip install onnx ==1.8.1 onnxruntime pip install onnxruntime ==1.7.0 onnxoptimizer pip install onnxoptimizer==0.2.4 ==0.2.4 python3-tk sudo apt install python3-tk libc6 sudo apt install libc6-dev-i386 libstdc++6 sudo apt install libstdc++6 python-qt4 sudo apt install python-qt4 torch sudo install torch==1.8.0+cpu ==1.8.0 torchvision sudo install torchvision==0.9.0+cpu ==0.9.0 wheel sudo install wheel scikit-image sudo install scikit-image scikit-learn sudo install scikit-learn pulp sudo install pulp 1.2. \u5feb\u901f\u4e0a\u624b \u00b6 \u9ed8\u8ba4\u8bbe\u7f6e \u8bf7\u5c06SGS_Models\u548cSGS_IPU_SDK\u653e\u5230\u4e3b\u76ee\u5f55 ~/ \u4e0b\uff0c\u4ee5\u4e0b\u547d\u4ee4\u5747\u57fa\u4e8e\u8be5\u76ee\u5f55\u7ed3\u6784\u8fdb\u884c\u3002\u8bf7\u4f7f\u7528Linux\u73af\u5883\u8fd0\u884c\u672c\u5de5\u5177\u3002 1.2.1 \u5b89\u88c5\u73af\u5883\u4f9d\u8d56 \u00b6 SigmaStar DLA SDK\u57fa\u4e8eAVX2\u6307\u4ee4\u96c6\u7f16\u5199\uff0c\u8bf7\u4f7f\u7528\u652f\u63f4AVX2\u7684Intel\u00ae\u5904\u7406\u5668\u8fd0\u884c\u3002\u5982\u679c\u4f7f\u7528docker\u7b49\u865a\u62df\u673a\u73af\u5883\uff0c\u8bf7\u4fdd\u8bc1\u865a\u62df\u673a\u5185\u6700\u4f4e\u5206\u914d6G\u5185\u5b58\u3002 1.2.2 \u5feb\u901f\u5b89\u88c5\u73af\u5883\u4f9d\u8d56 \u00b6 \u547d\u4ee4\u5982\u4e0b\uff1a sudo apt update sudo apt install python3-tk python-qt4 libc6-dev-i386 libstdc++6 cd ~/SGS_IPU_SDK pip3 install -r Scripts/calibrator/setup/requirements.txt \\ \u2013i https://pypi.tuna.tsinghua.edu.cn/simple 1.2.3 \u73af\u5883\u8bbe\u7f6e \u00b6 \u672c\u90e8\u5206\u4e3b\u8981\u4ee5\u793a\u4f8b\u65b9\u5f0f\u4ecb\u7ecd\u5982\u4f55\u5feb\u901f\u4f7f\u7528SigmaStar DLA SDK. \u8bf7\u5148\u83b7\u53d6SGS_IPU_SDK\u6e90\u7801\uff0c\u6e90\u7801\u4e0b\u8f7d\u6743\u9650\uff0c\u8bf7\u8054\u7cfb abel.he@sigmastar.com.cn \u8bf7\u5728\u4e3b\u76ee\u5f55 ~/ \u4e0b\uff0c\u8fdb\u884c\u4ee5\u4e0b\u547d\u4ee4\u3002 mkdir ~/SGS_IPU_SDK cd ~/SGS_IPU_SDK \u4e0b\u8f7dgit\u8def\u5f84\uff0c\u6267\u884c\u547d\u4ee4\uff1a repo init -u http://hcgit04:9080/manifest/IPU --reference=/mirror/ repo sync -c --no-tags -j8 1.2.4 \u5feb\u901f\u4e0a\u624b\u8bf4\u660e \u00b6 \u672c\u624b\u518c\u4f7f\u7528caffe\u8bad\u7ec3\u7684mobilenet_v2\u4f5c\u4e3a\u53c2\u8003\u4f8b\u5b50\u3002 \u5728SGS_IPU_SDK \u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff1a cd ~/SGS_IPU_SDK/Project make distclean ;source build/{IPU_Version}/cfg_cmodel_float.sh ;make -j32 (IPU_Version \u53ef\u9009\u62e9IPU100,IPU200M,IPU260) cd ~/ mkdir caffe_mobilenet_v2 cd caffe_mobilenet_v2 1.2.4.1 \u539f\u59cb\u6a21\u578b\u8f6c\u5316\u4e3aSigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b \u00b6 python3 ~/SGS_IPU_SDK/SRC/Tool/Scripts/ConvertTool/ConvertTool.py caffe \\ --model_file ~/SGS_IPU_SDK/SGS_Models/caffe/caffe_mobilenet_v2/caffe_mobilenet_v2.prototxt \\ --weight_file ~/SGS_IPU_SDK/SGS_Models/caffe/caffe_mobilenet_v2/caffe_mobilenet_v2.caffemodel \\ --input_arrays data \\ --output_arrays prob \\ --output_file ./caffe_mobilenet_v2_float.sim \\ --input_config ~/SGS_IPU_SDK/SGS_Models/caffe/caffe_mobilenet_v2/input_config.ini 1.2.4.2 SigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u5316\u4e3aSigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b \u00b6 \u8fdb\u5165caffe_mobilenet_v2\u6587\u4ef6\u5939\uff0c\u8fd0\u884c: python3 ~/SGS_IPU_SDK/SRC/Tool/Scripts/calibrator/calibrator.py \\ -i ~/SGS_IPU_SDK/SGS_Models/resource/classify/ilsvrc2012_calibration_set32/ \\ -m ./caffe_mobilenet_v2_float.sim \\ -c Classification \\ --input_config ~/SGS_IPU_SDK/SGS_Models/caffe/caffe_mobilenet_v2/input_config.ini \\ -n caffe_mobilenet_v2 \\ -p Statistics python3 ~/SGS_IPU_SDK/SRC/Tool/Scripts/calibrator/calibrator.py \\ -i ~/SGS_IPU_SDK/SGS_Models/resource/classify/ilsvrc2012_calibration_set32/ \\ -m ./caffe_mobilenet_v2_cmodel_float.sim \\ -c Classification \\ --input_config ~/SGS_IPU_SDK/SGS_Models/caffe/caffe_mobilenet_v2/input_config.ini \\ -n caffe_mobilenet_v2 \\ -p Fixed 1.2.4.3 SigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u5316\u4e3aSigmaStar\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b \u00b6 \u5de5\u5177\u4f4d\u7f6e\u5728~/SGS_IPU_SDK/SRC/Tool/Scripts/calibrator/compiler.py \uff0ccompiler\u5177\u4f53\u7528\u6cd5\u8bf7\u53c2\u9605\u7b2c4\u7ae0Compiler\u3002 1. \u5c06\u521a\u521a\u751f\u6210\u7684caffe_mobilenet_v2_fixed.sim\u8f6c\u6362\u4e3aSigmaStar\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\uff1a \u8fdb\u5165~/SGS_IPU_SDK/Project/\u6587\u4ef6\u5939\u4e0b\uff0c\u8fd0\u884c\uff1a cd ~/SGS_IPU_SDK/Project/ make distclean ;source build/{IPU_Version}/cfg_cmodel_fixed_record_offline.sh ;make -j32 (IPU_Version \u53ef\u9009\u62e9IPU100,IPU200M,IPU260) \u8fdb\u5165caffe_mobilenet_v2 \u6587\u4ef6\u5939\uff0c\u8fd0\u884c python3 ~/SGS_IPU_SDK/SRC/Tool/Scripts/calibrator/compiler.py -m ./caffe_mobilenet_v2_fixed.sim 1.2.5 \u6a21\u578b\u4eff\u771f \u00b6 1.2.5.1 \u4f7f\u7528simulator\u5bf9SigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u9a8c\u8bc1 \u00b6 \u5de5\u5177\u4f4d\u7f6e\u5728~/SGS_IPU_SDK/SRC/Tool/Scripts/calibrator/simulator.py\uff0csimulator\u5177\u4f53\u7528\u6cd5\u8bf7\u53c2\u9605\u7b2c5\u7ae0Simulator\u3002 \u8fdb\u5165~/SGS_IPU_SDK/Project/\u6587\u4ef6\u5939\u4e0b\uff0c\u8fd0\u884c\uff1a cd ~/SGS_IPU_SDK/Project/ make distclean ;source build/{IPU_Version}/cfg_tf.sh ;make -j32 (IPU_Version \u53ef\u9009\u62e9IPU100,IPU200M,IPU260) \u8fdb\u5165~/caffe_mobilenet_v2 \u6587\u4ef6\u5939\uff0c\u8fd0\u884c python3 ~/SGS_IPU_SDK/SRC/Tool/Scripts/calibrator/simulator.py \\ -i ~/SGS_IPU_SDK/SGS_Models/resource/classify/ilsvrc2012_val_set100 \\ -l ~/SGS_IPU_SDK/SGS_Models/resource/classify/caffe_labels.txt \\ -m ./caffe_mobilenet_v2_float.sim \\ -c Classification \\ -t Float \\ -n caffe_mobilenet_v2 \\ --num_process 20 1.2.5.2 \u4f7f\u7528simulator\u5bf9SigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u9a8c\u8bc1 \u00b6 \u8fdb\u5165~/SGS_IPU_SDK/Project/\u6587\u4ef6\u5939\u4e0b\uff0c\u8fd0\u884c\uff1a cd ~/SGS_IPU_SDK/Project/ make distclean ;source build/{IPU_Version}/cfg_cmodel_fixed.sh ;make -j32 (IPU_Version \u53ef\u9009\u62e9IPU100,IPU200M,IPU260) \u8fdb\u5165~/caffe_mobilenet_v2 \u6587\u4ef6\u5939\uff0c\u8fd0\u884c python3 ~/SGS_IPU_SDK/SRC/Tool/Scripts/calibrator/simulator.py \\ -i ~/SGS_IPU_SDK/SGS_Models/resource/classify/ilsvrc2012_val_set100 \\ -l ~/SGS_IPU_SDK/SGS_Models/resource/classify/caffe_labels.txt \\ -m ./caffe_mobilenet_v2_fixed.sim \\ -c Classification \\ -t Fixed \\ -n caffe_mobilenet_v2 \\ --num_process 20 1.2.5.3 \u4f7f\u7528simulator\u5bf9SigmaStar\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u9a8c\u8bc1 \u00b6 \u5bf9\u8f6c\u51fa\u7684caffe_mobilenet_v2_fixed.sim_sgsimg.img\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u6d4b\u8bd5 \u8fdb\u5165~/SGS_IPU_SDK/Project/\u6587\u4ef6\u5939\u4e0b\uff0c\u8fd0\u884c\uff1a cd ~/SGS_IPU_SDK/Project/ make distclean ;source build/{IPU_Version}/cfg_cmodel_fixed.sh ;make -j32 (IPU_Version \u53ef\u9009\u62e9IPU100,IPU200M,IPU260) \u8fdb\u5165~/caffe_mobilenet_v2 \u6587\u4ef6\u5939\uff0c\u8fd0\u884c python3 ~/SGS_IPU_SDK/SRC/Tool/Scripts/calibrator/simulator.py \\ -i ~/SGS_IPU_SDK/SGS_Models/resource/classify/ILSVRC2012_test_00000002.bmp \\ -m caffe_mobilenet_v2_fixed.sim_sgsimg.img \\ -l ~/SGS_IPU_SDK/SGS_Models/resource/classify/labels.txt \\ -c Classification \\ -t Offline \\ -n caffe_mobilenet_v2 1.3.\u5982\u4f55\u5728mt\u4e2d\u624b\u52a8\u5ba2\u5236\u53ef\u6267\u884cbin\u6587\u4ef6 \u00b6 \u6839\u636e\u6a21\u578b\u8f93\u51fa\u7ed3\u679c\u7684\u4e0d\u540c\u7528\u9014\u53ef\u5206\u4e3aCLASSIFICATION\u3001DETECTION\u3001UNKNOWN\uff0c\u5728SGS_IPU_SDK/SRC/Verify/mt\u76ee\u5f55\u4e0b\u5206\u522b\u7ed9\u51fa\u4e86\u5bf9\u5e94\u7684\u53c2\u8003 Demo\uff0c\u5982mobilenet_v1\u3001ssd_mobilenet_v1\u3001caffe_fr\u3002\u4e0b\u9762\u4ee5caffe_fr\u4e3a\u4f8b\u6765\u8bf4\u660e\u5982\u4f55\u751f\u6210\u53ef\u6267\u884cbin\u6587\u4ef6\u3002 1.3.1. \u5982\u4f55\u5728IPU260\u4e0b\u751f\u6210 PZ1\u4e0a\u53ef\u6267\u884cbin\u6587\u4ef6 \u00b6 \u8bf7\u5230SGS_IPU_SDK/SRC/Verify/mt\u76ee\u5f55\u4e0b,\u62f7\u8d1dcaffe_fr\u5e76\u547d\u540d\u4e3axxx,\u5c06\u6a21\u578b\u8f6c\u6362Offline\u9636\u6bb5\u751f\u6210\u7684xxx_fixed.sim_sgsimg.img_array.c\u548c \u5b9a\u70b9\u6a21\u578bsimulator\u9636\u6bb5\u751f\u6210\u7684input_buffer.c\u66ff\u6362xxx\u6587\u4ef6\u5939\u4e2d\u7684caffe_fr_fixed.sim_sgsimg.img_array.c\u548c00010_jpg.c\u3002 \u89e3\u6790\u51fa\u5b9a\u70b9\u6a21\u578b\u4e2d\u7684Variable buffer\u5927\u5c0f\u548cinput tensor\u5927\u5c0f\uff0c\u5199\u5165xxx_fpga.c\u6587\u4ef6MT_VARIABLE_BUF_SIZE\u548cMT_OUT_BUF_TOTAL_SIZE\u3002 ~/IPU/Project/out/x86_64-linux-gnu/64/bin/parse_net ./xxxx_fixed.sim | grep \"Variable buffer\" ~/IPU/Project/out/x86_64-linux-gnu/64/bin/parse_net ./xxxx_fixed.sim | grep \"output tensor\" \u5982\u4f55\u751f\u6210input_buffer.c \u5148make\u73af\u5883\uff0c\u7136\u540e\u5bf9\u5b9a\u70b9\u6a21\u578b\u505asimulator\uff0c\u4f1a\u5728\u6a21\u578b\u76ee\u5f55\u751f\u6210input_buffer.c\u6587\u4ef6\u3002 export GEN_INPUT_BUFFER = 1 make distclean ; source build/IPU260/cfg_cmodel_fixed.sh ; make -j18 ; \u5982\u4f55\u5728IPU260\u4e0a\u751f\u6210PZ1\u4e0a\u53ef\u6267\u884cbin\u6587\u4ef6 \u5148make\u73af\u5883 make distclean ; source build/IPU260/cfg_riscv_pz1.sh ; make -j18 ; \u7136\u540e\u5230SGS_IPU_SDK/SRC/Verify/mt/xxx\u4e2d make -j 18 \u4f1a\u5728SGS_IPU_SDK/Project/out/riscv64-unknown-elf/32/bin\u76ee\u5f55\u4e0b\u751f\u6210xxx.bin\u6587\u4ef6\u3002 1.3.2. \u5982\u4f55\u5728IPU200M\u4e0b\u751f\u6210\u53ef\u6267\u884cbin\u6587\u4ef6 \u00b6 \u8bf7\u5230SGS_IPU_SDK/SRC/Verify/mt\u76ee\u5f55\u4e0b,\u62f7\u8d1dcaffe_fr\u5e76\u547d\u540d\u4e3axxx,\u5c06\u6a21\u578b\u8f6c\u6362Offline\u9636\u6bb5\u751f\u6210\u7684xxx_fixed.sim_sgsimg.img_array.c\u548c \u5b9a\u70b9\u6a21\u578bsimulator\u9636\u6bb5\u751f\u6210\u7684input_buffer.c\u66ff\u6362xxx\u6587\u4ef6\u5939\u4e2d\u7684caffe_fr_fixed.sim_sgsimg.img_array.c\u548c00010_jpg.c\u3002 \u89e3\u6790\u51fa\u5b9a\u70b9\u6a21\u578b\u4e2d\u7684Variable buffer\u5927\u5c0f\u548cinput tensor\u5927\u5c0f\uff0c\u5199\u5165xxx_fpga.c\u6587\u4ef6MT_VARIABLE_BUF_SIZE\u548cMT_OUT_BUF_TOTAL_SIZE\u3002 ~/IPU/Project/out/x86_64-linux-gnu/64/bin/parse_net ./xxxx_fixed.sim | grep \"Variable buffer\" ~/IPU/Project/out/x86_64-linux-gnu/64/bin/parse_net ./xxxx_fixed.sim | grep \"output tensor\" \u5148make\u73af\u5883 make distclean ; source build/IPU200M/cfg_m6.sh ; make -j8 ; export BUILD_ST = 1 ; make FreeRTOS -j8 ; unset BUILD_ST \u7136\u540e\u5230SGS_IPU_SDK/SRC/Verify/mt/xxx\u4e2d make -j 18 \u4f1a\u5728SGS_IPU_SDK/Project/out/riscv64-unknown-elf/32/bin\u76ee\u5f55\u4e0b\u751f\u6210xxx.bin\u6587\u4ef6\u3002 1.3.2. \u5982\u4f55\u5728IPU100\u4e0b\u751f\u6210\u53ef\u6267\u884cbin\u6587\u4ef6 \u00b6 \u8bf7\u5230SGS_IPU_SDK/SRC/Verify/mt\u76ee\u5f55\u4e0b,\u62f7\u8d1dcaffe_fr\u5e76\u547d\u540d\u4e3axxx,\u5c06\u6a21\u578b\u8f6c\u6362Offline\u9636\u6bb5\u751f\u6210\u7684xxx_fixed.sim_sgsimg.img_array.c\u548c \u5b9a\u70b9\u6a21\u578bsimulator\u9636\u6bb5\u751f\u6210\u7684input_buffer.c\u66ff\u6362xxx\u6587\u4ef6\u5939\u4e2d\u7684caffe_fr_fixed.sim_sgsimg.img_array.c\u548c00010_jpg.c\u3002 \u89e3\u6790\u51fa\u5b9a\u70b9\u6a21\u578b\u4e2d\u7684Variable buffer\u5927\u5c0f\u548cinput tensor\u5927\u5c0f\uff0c\u5199\u5165xxx_fpga.c\u6587\u4ef6MT_VARIABLE_BUF_SIZE\u548cMT_OUT_BUF_TOTAL_SIZE\u3002 ~/IPU/Project/out/x86_64-linux-gnu/64/bin/parse_net ./xxxx_fixed.sim | grep \"Variable buffer\" ~/IPU/Project/out/x86_64-linux-gnu/64/bin/parse_net ./xxxx_fixed.sim | grep \"output tensor\" \u5148make\u73af\u5883 make distclean ; source build/IPU100/cfg_i6e_012b.sh ; make -j8 ; export BUILD_ST = 1 ; make FreeRTOS -j8 ; unset BUILD_ST \u7136\u540e\u5230SGS_IPU_SDK/SRC/Verify/mt/xxx \u4e2d make -j 18 \u4f1a\u5728SGS_IPU_SDK/Project/out/riscv64-unknown-elf/32/bin\u76ee\u5f55\u4e0b\u751f\u6210xxx.bin\u6587\u4ef6\u3002","title":"Environment Construction"},{"location":"module/User_Guide/Develop/Environment_Construction.html#11","text":"\ud83d\udcddSigmaStar DLA SDK\u57fa\u4e8eAVX2\u6307\u4ee4\u96c6\u7f16\u5199\uff0c\u8bf7\u4f7f\u7528\u652f\u63f4AVX2\u7684Intel\u00ae\u5904\u7406\u5668\u8fd0\u884c\u3002 \u63a8\u8350\u914d\u7f6e \ud83d\udda5\ufe0f\ud83d\udcbb \u2699\ufe0f CPU Intel\u00ae CoreTM i7 or Higher RAM 8G or Higher \u6700\u4f4e\u914d\u7f6e \ud83d\udda5\ufe0f\ud83d\udcbb \u2699\ufe0f CPU Intel\u00ae CoreTM i5 RAM 6G","title":"1.1. \u5b89\u88c5\u73af\u5883\u4f9d\u8d56"},{"location":"module/User_Guide/Develop/Environment_Construction.html#_1","text":"Package Installation command i386 dpkg --add-architecture i386 build-essential sudo apt install build-essential cmake sudo apt install cmake libc6-dev sudo apt install libc6-dev libc6-dev:i386 libc6-dev-i386 libbz2-dev sudo apt install libbz2-dev libbz2-dev:i386 libncurses5-dev sudo apt install libncurses5-dev libncurses5-dev:i386 libglib2.0-dev sudo apt install libglib2.0-dev libglib2.0-dev:i386 libsm6 sudo apt install libsm6 libsm6:i386 libxrender1 sudo apt install libxrender1 libxrender1:i386 libxext6 sudo apt install libxext6 libxext6:i386 libgdbm-dev sudo apt install libgdbm-dev libgdbm-dev:i386 liblzma-dev sudo apt install liblzma-dev liblzma-dev:i386 libsqlite3-dev sudo apt install libsqlite3-dev libsqlite3-dev:i386 libssl-dev sudo apt install libssl-dev libssl-dev:i386 libreadline6-dev sudo apt install libreadline6-dev libreadline6-dev:i386 libffi-dev sudo apt install libffi-dev libffi-dev:i386 zlib1g-dev sudo apt install zlib1g-dev zlib1g-dev:i386 libncursesw5-dev sudo apt install libncursesw5-dev libncursesw5-dev:i386 libsqlite3-dev sudo apt install libsqlite3-dev libsqlite3-dev:i386 libgdbm-dev sudo apt install libgdbm-dev libgdbm-dev:i386 libbz2-dev sudo apt install libbz2-dev libbz2-dev:i386 checkinstall sudo apt install checkinstall openssl sudo apt install openssl","title":"\u7cfb\u7edf\u4f9d\u8d56"},{"location":"module/User_Guide/Develop/Environment_Construction.html#python","text":"\u4f7f\u7528SigmaStar DLA SDK\u9700\u8981\u5b89\u88c5\u4ee5\u4e0b\u4f9d\u8d56\u5e93\uff1a Software Installation Command Tested Version Python 3.7 enum34 pip install enum34==1.1.10 ==1.1.10 numpy pip install numpy==1.16.6 ==1.16.6 protobuf pip install protobuf >=3.8.0 six pip install six >=1.12.0 OpenCV-python pip install opencv-python ==4.2.0.34 TensorFlow pip install tensorflow ==1.14.0 Cython pip install cython >=0.29.13 pycocotools pip install pycocotools >=2.0.0 matplotlib pip install matplotlib >=3.0.3 SciPy pip install scipy >=1.3.1 Pillow pip install pillow ==6.1.0 joblib pip install joblib ==0.13.2 onnx-simplifier pip install onnx-simplifier ==0.2.10 sympy pip install sympy ==1.6.1 packaging pip install packaging ==20.4 onnx pip install onnx ==1.8.1 onnxruntime pip install onnxruntime ==1.7.0 onnxoptimizer pip install onnxoptimizer==0.2.4 ==0.2.4 python3-tk sudo apt install python3-tk libc6 sudo apt install libc6-dev-i386 libstdc++6 sudo apt install libstdc++6 python-qt4 sudo apt install python-qt4 torch sudo install torch==1.8.0+cpu ==1.8.0 torchvision sudo install torchvision==0.9.0+cpu ==0.9.0 wheel sudo install wheel scikit-image sudo install scikit-image scikit-learn sudo install scikit-learn pulp sudo install pulp","title":"Python \u4f9d\u8d56"},{"location":"module/User_Guide/Develop/Environment_Construction.html#12","text":"\u9ed8\u8ba4\u8bbe\u7f6e \u8bf7\u5c06SGS_Models\u548cSGS_IPU_SDK\u653e\u5230\u4e3b\u76ee\u5f55 ~/ \u4e0b\uff0c\u4ee5\u4e0b\u547d\u4ee4\u5747\u57fa\u4e8e\u8be5\u76ee\u5f55\u7ed3\u6784\u8fdb\u884c\u3002\u8bf7\u4f7f\u7528Linux\u73af\u5883\u8fd0\u884c\u672c\u5de5\u5177\u3002","title":"1.2. \u5feb\u901f\u4e0a\u624b"},{"location":"module/User_Guide/Develop/Environment_Construction.html#121","text":"SigmaStar DLA SDK\u57fa\u4e8eAVX2\u6307\u4ee4\u96c6\u7f16\u5199\uff0c\u8bf7\u4f7f\u7528\u652f\u63f4AVX2\u7684Intel\u00ae\u5904\u7406\u5668\u8fd0\u884c\u3002\u5982\u679c\u4f7f\u7528docker\u7b49\u865a\u62df\u673a\u73af\u5883\uff0c\u8bf7\u4fdd\u8bc1\u865a\u62df\u673a\u5185\u6700\u4f4e\u5206\u914d6G\u5185\u5b58\u3002","title":"1.2.1 \u5b89\u88c5\u73af\u5883\u4f9d\u8d56"},{"location":"module/User_Guide/Develop/Environment_Construction.html#122","text":"\u547d\u4ee4\u5982\u4e0b\uff1a sudo apt update sudo apt install python3-tk python-qt4 libc6-dev-i386 libstdc++6 cd ~/SGS_IPU_SDK pip3 install -r Scripts/calibrator/setup/requirements.txt \\ \u2013i https://pypi.tuna.tsinghua.edu.cn/simple","title":"1.2.2 \u5feb\u901f\u5b89\u88c5\u73af\u5883\u4f9d\u8d56"},{"location":"module/User_Guide/Develop/Environment_Construction.html#123","text":"\u672c\u90e8\u5206\u4e3b\u8981\u4ee5\u793a\u4f8b\u65b9\u5f0f\u4ecb\u7ecd\u5982\u4f55\u5feb\u901f\u4f7f\u7528SigmaStar DLA SDK. \u8bf7\u5148\u83b7\u53d6SGS_IPU_SDK\u6e90\u7801\uff0c\u6e90\u7801\u4e0b\u8f7d\u6743\u9650\uff0c\u8bf7\u8054\u7cfb abel.he@sigmastar.com.cn \u8bf7\u5728\u4e3b\u76ee\u5f55 ~/ \u4e0b\uff0c\u8fdb\u884c\u4ee5\u4e0b\u547d\u4ee4\u3002 mkdir ~/SGS_IPU_SDK cd ~/SGS_IPU_SDK \u4e0b\u8f7dgit\u8def\u5f84\uff0c\u6267\u884c\u547d\u4ee4\uff1a repo init -u http://hcgit04:9080/manifest/IPU --reference=/mirror/ repo sync -c --no-tags -j8","title":"1.2.3 \u73af\u5883\u8bbe\u7f6e"},{"location":"module/User_Guide/Develop/Environment_Construction.html#124","text":"\u672c\u624b\u518c\u4f7f\u7528caffe\u8bad\u7ec3\u7684mobilenet_v2\u4f5c\u4e3a\u53c2\u8003\u4f8b\u5b50\u3002 \u5728SGS_IPU_SDK \u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff1a cd ~/SGS_IPU_SDK/Project make distclean ;source build/{IPU_Version}/cfg_cmodel_float.sh ;make -j32 (IPU_Version \u53ef\u9009\u62e9IPU100,IPU200M,IPU260) cd ~/ mkdir caffe_mobilenet_v2 cd caffe_mobilenet_v2","title":"1.2.4 \u5feb\u901f\u4e0a\u624b\u8bf4\u660e"},{"location":"module/User_Guide/Develop/Environment_Construction.html#1241-sigmastar","text":"python3 ~/SGS_IPU_SDK/SRC/Tool/Scripts/ConvertTool/ConvertTool.py caffe \\ --model_file ~/SGS_IPU_SDK/SGS_Models/caffe/caffe_mobilenet_v2/caffe_mobilenet_v2.prototxt \\ --weight_file ~/SGS_IPU_SDK/SGS_Models/caffe/caffe_mobilenet_v2/caffe_mobilenet_v2.caffemodel \\ --input_arrays data \\ --output_arrays prob \\ --output_file ./caffe_mobilenet_v2_float.sim \\ --input_config ~/SGS_IPU_SDK/SGS_Models/caffe/caffe_mobilenet_v2/input_config.ini","title":"1.2.4.1 \u539f\u59cb\u6a21\u578b\u8f6c\u5316\u4e3aSigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b"},{"location":"module/User_Guide/Develop/Environment_Construction.html#1242-sigmastarsigmastar","text":"\u8fdb\u5165caffe_mobilenet_v2\u6587\u4ef6\u5939\uff0c\u8fd0\u884c: python3 ~/SGS_IPU_SDK/SRC/Tool/Scripts/calibrator/calibrator.py \\ -i ~/SGS_IPU_SDK/SGS_Models/resource/classify/ilsvrc2012_calibration_set32/ \\ -m ./caffe_mobilenet_v2_float.sim \\ -c Classification \\ --input_config ~/SGS_IPU_SDK/SGS_Models/caffe/caffe_mobilenet_v2/input_config.ini \\ -n caffe_mobilenet_v2 \\ -p Statistics python3 ~/SGS_IPU_SDK/SRC/Tool/Scripts/calibrator/calibrator.py \\ -i ~/SGS_IPU_SDK/SGS_Models/resource/classify/ilsvrc2012_calibration_set32/ \\ -m ./caffe_mobilenet_v2_cmodel_float.sim \\ -c Classification \\ --input_config ~/SGS_IPU_SDK/SGS_Models/caffe/caffe_mobilenet_v2/input_config.ini \\ -n caffe_mobilenet_v2 \\ -p Fixed","title":"1.2.4.2 SigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u5316\u4e3aSigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b"},{"location":"module/User_Guide/Develop/Environment_Construction.html#1243-sigmastarsigmastar","text":"\u5de5\u5177\u4f4d\u7f6e\u5728~/SGS_IPU_SDK/SRC/Tool/Scripts/calibrator/compiler.py \uff0ccompiler\u5177\u4f53\u7528\u6cd5\u8bf7\u53c2\u9605\u7b2c4\u7ae0Compiler\u3002 1. \u5c06\u521a\u521a\u751f\u6210\u7684caffe_mobilenet_v2_fixed.sim\u8f6c\u6362\u4e3aSigmaStar\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\uff1a \u8fdb\u5165~/SGS_IPU_SDK/Project/\u6587\u4ef6\u5939\u4e0b\uff0c\u8fd0\u884c\uff1a cd ~/SGS_IPU_SDK/Project/ make distclean ;source build/{IPU_Version}/cfg_cmodel_fixed_record_offline.sh ;make -j32 (IPU_Version \u53ef\u9009\u62e9IPU100,IPU200M,IPU260) \u8fdb\u5165caffe_mobilenet_v2 \u6587\u4ef6\u5939\uff0c\u8fd0\u884c python3 ~/SGS_IPU_SDK/SRC/Tool/Scripts/calibrator/compiler.py -m ./caffe_mobilenet_v2_fixed.sim","title":"1.2.4.3 SigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u5316\u4e3aSigmaStar\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b"},{"location":"module/User_Guide/Develop/Environment_Construction.html#125","text":"","title":"1.2.5 \u6a21\u578b\u4eff\u771f"},{"location":"module/User_Guide/Develop/Environment_Construction.html#1251-simulatorsigmastar","text":"\u5de5\u5177\u4f4d\u7f6e\u5728~/SGS_IPU_SDK/SRC/Tool/Scripts/calibrator/simulator.py\uff0csimulator\u5177\u4f53\u7528\u6cd5\u8bf7\u53c2\u9605\u7b2c5\u7ae0Simulator\u3002 \u8fdb\u5165~/SGS_IPU_SDK/Project/\u6587\u4ef6\u5939\u4e0b\uff0c\u8fd0\u884c\uff1a cd ~/SGS_IPU_SDK/Project/ make distclean ;source build/{IPU_Version}/cfg_tf.sh ;make -j32 (IPU_Version \u53ef\u9009\u62e9IPU100,IPU200M,IPU260) \u8fdb\u5165~/caffe_mobilenet_v2 \u6587\u4ef6\u5939\uff0c\u8fd0\u884c python3 ~/SGS_IPU_SDK/SRC/Tool/Scripts/calibrator/simulator.py \\ -i ~/SGS_IPU_SDK/SGS_Models/resource/classify/ilsvrc2012_val_set100 \\ -l ~/SGS_IPU_SDK/SGS_Models/resource/classify/caffe_labels.txt \\ -m ./caffe_mobilenet_v2_float.sim \\ -c Classification \\ -t Float \\ -n caffe_mobilenet_v2 \\ --num_process 20","title":"1.2.5.1 \u4f7f\u7528simulator\u5bf9SigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u9a8c\u8bc1"},{"location":"module/User_Guide/Develop/Environment_Construction.html#1252-simulatorsigmastar","text":"\u8fdb\u5165~/SGS_IPU_SDK/Project/\u6587\u4ef6\u5939\u4e0b\uff0c\u8fd0\u884c\uff1a cd ~/SGS_IPU_SDK/Project/ make distclean ;source build/{IPU_Version}/cfg_cmodel_fixed.sh ;make -j32 (IPU_Version \u53ef\u9009\u62e9IPU100,IPU200M,IPU260) \u8fdb\u5165~/caffe_mobilenet_v2 \u6587\u4ef6\u5939\uff0c\u8fd0\u884c python3 ~/SGS_IPU_SDK/SRC/Tool/Scripts/calibrator/simulator.py \\ -i ~/SGS_IPU_SDK/SGS_Models/resource/classify/ilsvrc2012_val_set100 \\ -l ~/SGS_IPU_SDK/SGS_Models/resource/classify/caffe_labels.txt \\ -m ./caffe_mobilenet_v2_fixed.sim \\ -c Classification \\ -t Fixed \\ -n caffe_mobilenet_v2 \\ --num_process 20","title":"1.2.5.2 \u4f7f\u7528simulator\u5bf9SigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u9a8c\u8bc1"},{"location":"module/User_Guide/Develop/Environment_Construction.html#1253-simulatorsigmastar","text":"\u5bf9\u8f6c\u51fa\u7684caffe_mobilenet_v2_fixed.sim_sgsimg.img\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u6d4b\u8bd5 \u8fdb\u5165~/SGS_IPU_SDK/Project/\u6587\u4ef6\u5939\u4e0b\uff0c\u8fd0\u884c\uff1a cd ~/SGS_IPU_SDK/Project/ make distclean ;source build/{IPU_Version}/cfg_cmodel_fixed.sh ;make -j32 (IPU_Version \u53ef\u9009\u62e9IPU100,IPU200M,IPU260) \u8fdb\u5165~/caffe_mobilenet_v2 \u6587\u4ef6\u5939\uff0c\u8fd0\u884c python3 ~/SGS_IPU_SDK/SRC/Tool/Scripts/calibrator/simulator.py \\ -i ~/SGS_IPU_SDK/SGS_Models/resource/classify/ILSVRC2012_test_00000002.bmp \\ -m caffe_mobilenet_v2_fixed.sim_sgsimg.img \\ -l ~/SGS_IPU_SDK/SGS_Models/resource/classify/labels.txt \\ -c Classification \\ -t Offline \\ -n caffe_mobilenet_v2","title":"1.2.5.3 \u4f7f\u7528simulator\u5bf9SigmaStar\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u9a8c\u8bc1"},{"location":"module/User_Guide/Develop/Environment_Construction.html#13mtbin","text":"\u6839\u636e\u6a21\u578b\u8f93\u51fa\u7ed3\u679c\u7684\u4e0d\u540c\u7528\u9014\u53ef\u5206\u4e3aCLASSIFICATION\u3001DETECTION\u3001UNKNOWN\uff0c\u5728SGS_IPU_SDK/SRC/Verify/mt\u76ee\u5f55\u4e0b\u5206\u522b\u7ed9\u51fa\u4e86\u5bf9\u5e94\u7684\u53c2\u8003 Demo\uff0c\u5982mobilenet_v1\u3001ssd_mobilenet_v1\u3001caffe_fr\u3002\u4e0b\u9762\u4ee5caffe_fr\u4e3a\u4f8b\u6765\u8bf4\u660e\u5982\u4f55\u751f\u6210\u53ef\u6267\u884cbin\u6587\u4ef6\u3002","title":"1.3.\u5982\u4f55\u5728mt\u4e2d\u624b\u52a8\u5ba2\u5236\u53ef\u6267\u884cbin\u6587\u4ef6"},{"location":"module/User_Guide/Develop/Environment_Construction.html#131-ipu260-pz1bin","text":"\u8bf7\u5230SGS_IPU_SDK/SRC/Verify/mt\u76ee\u5f55\u4e0b,\u62f7\u8d1dcaffe_fr\u5e76\u547d\u540d\u4e3axxx,\u5c06\u6a21\u578b\u8f6c\u6362Offline\u9636\u6bb5\u751f\u6210\u7684xxx_fixed.sim_sgsimg.img_array.c\u548c \u5b9a\u70b9\u6a21\u578bsimulator\u9636\u6bb5\u751f\u6210\u7684input_buffer.c\u66ff\u6362xxx\u6587\u4ef6\u5939\u4e2d\u7684caffe_fr_fixed.sim_sgsimg.img_array.c\u548c00010_jpg.c\u3002 \u89e3\u6790\u51fa\u5b9a\u70b9\u6a21\u578b\u4e2d\u7684Variable buffer\u5927\u5c0f\u548cinput tensor\u5927\u5c0f\uff0c\u5199\u5165xxx_fpga.c\u6587\u4ef6MT_VARIABLE_BUF_SIZE\u548cMT_OUT_BUF_TOTAL_SIZE\u3002 ~/IPU/Project/out/x86_64-linux-gnu/64/bin/parse_net ./xxxx_fixed.sim | grep \"Variable buffer\" ~/IPU/Project/out/x86_64-linux-gnu/64/bin/parse_net ./xxxx_fixed.sim | grep \"output tensor\" \u5982\u4f55\u751f\u6210input_buffer.c \u5148make\u73af\u5883\uff0c\u7136\u540e\u5bf9\u5b9a\u70b9\u6a21\u578b\u505asimulator\uff0c\u4f1a\u5728\u6a21\u578b\u76ee\u5f55\u751f\u6210input_buffer.c\u6587\u4ef6\u3002 export GEN_INPUT_BUFFER = 1 make distclean ; source build/IPU260/cfg_cmodel_fixed.sh ; make -j18 ; \u5982\u4f55\u5728IPU260\u4e0a\u751f\u6210PZ1\u4e0a\u53ef\u6267\u884cbin\u6587\u4ef6 \u5148make\u73af\u5883 make distclean ; source build/IPU260/cfg_riscv_pz1.sh ; make -j18 ; \u7136\u540e\u5230SGS_IPU_SDK/SRC/Verify/mt/xxx\u4e2d make -j 18 \u4f1a\u5728SGS_IPU_SDK/Project/out/riscv64-unknown-elf/32/bin\u76ee\u5f55\u4e0b\u751f\u6210xxx.bin\u6587\u4ef6\u3002","title":"1.3.1. \u5982\u4f55\u5728IPU260\u4e0b\u751f\u6210 PZ1\u4e0a\u53ef\u6267\u884cbin\u6587\u4ef6"},{"location":"module/User_Guide/Develop/Environment_Construction.html#132-ipu200mbin","text":"\u8bf7\u5230SGS_IPU_SDK/SRC/Verify/mt\u76ee\u5f55\u4e0b,\u62f7\u8d1dcaffe_fr\u5e76\u547d\u540d\u4e3axxx,\u5c06\u6a21\u578b\u8f6c\u6362Offline\u9636\u6bb5\u751f\u6210\u7684xxx_fixed.sim_sgsimg.img_array.c\u548c \u5b9a\u70b9\u6a21\u578bsimulator\u9636\u6bb5\u751f\u6210\u7684input_buffer.c\u66ff\u6362xxx\u6587\u4ef6\u5939\u4e2d\u7684caffe_fr_fixed.sim_sgsimg.img_array.c\u548c00010_jpg.c\u3002 \u89e3\u6790\u51fa\u5b9a\u70b9\u6a21\u578b\u4e2d\u7684Variable buffer\u5927\u5c0f\u548cinput tensor\u5927\u5c0f\uff0c\u5199\u5165xxx_fpga.c\u6587\u4ef6MT_VARIABLE_BUF_SIZE\u548cMT_OUT_BUF_TOTAL_SIZE\u3002 ~/IPU/Project/out/x86_64-linux-gnu/64/bin/parse_net ./xxxx_fixed.sim | grep \"Variable buffer\" ~/IPU/Project/out/x86_64-linux-gnu/64/bin/parse_net ./xxxx_fixed.sim | grep \"output tensor\" \u5148make\u73af\u5883 make distclean ; source build/IPU200M/cfg_m6.sh ; make -j8 ; export BUILD_ST = 1 ; make FreeRTOS -j8 ; unset BUILD_ST \u7136\u540e\u5230SGS_IPU_SDK/SRC/Verify/mt/xxx\u4e2d make -j 18 \u4f1a\u5728SGS_IPU_SDK/Project/out/riscv64-unknown-elf/32/bin\u76ee\u5f55\u4e0b\u751f\u6210xxx.bin\u6587\u4ef6\u3002","title":"1.3.2. \u5982\u4f55\u5728IPU200M\u4e0b\u751f\u6210\u53ef\u6267\u884cbin\u6587\u4ef6"},{"location":"module/User_Guide/Develop/Environment_Construction.html#132-ipu100bin","text":"\u8bf7\u5230SGS_IPU_SDK/SRC/Verify/mt\u76ee\u5f55\u4e0b,\u62f7\u8d1dcaffe_fr\u5e76\u547d\u540d\u4e3axxx,\u5c06\u6a21\u578b\u8f6c\u6362Offline\u9636\u6bb5\u751f\u6210\u7684xxx_fixed.sim_sgsimg.img_array.c\u548c \u5b9a\u70b9\u6a21\u578bsimulator\u9636\u6bb5\u751f\u6210\u7684input_buffer.c\u66ff\u6362xxx\u6587\u4ef6\u5939\u4e2d\u7684caffe_fr_fixed.sim_sgsimg.img_array.c\u548c00010_jpg.c\u3002 \u89e3\u6790\u51fa\u5b9a\u70b9\u6a21\u578b\u4e2d\u7684Variable buffer\u5927\u5c0f\u548cinput tensor\u5927\u5c0f\uff0c\u5199\u5165xxx_fpga.c\u6587\u4ef6MT_VARIABLE_BUF_SIZE\u548cMT_OUT_BUF_TOTAL_SIZE\u3002 ~/IPU/Project/out/x86_64-linux-gnu/64/bin/parse_net ./xxxx_fixed.sim | grep \"Variable buffer\" ~/IPU/Project/out/x86_64-linux-gnu/64/bin/parse_net ./xxxx_fixed.sim | grep \"output tensor\" \u5148make\u73af\u5883 make distclean ; source build/IPU100/cfg_i6e_012b.sh ; make -j8 ; export BUILD_ST = 1 ; make FreeRTOS -j8 ; unset BUILD_ST \u7136\u540e\u5230SGS_IPU_SDK/SRC/Verify/mt/xxx \u4e2d make -j 18 \u4f1a\u5728SGS_IPU_SDK/Project/out/riscv64-unknown-elf/32/bin\u76ee\u5f55\u4e0b\u751f\u6210xxx.bin\u6587\u4ef6\u3002","title":"1.3.2. \u5982\u4f55\u5728IPU100\u4e0b\u751f\u6210\u53ef\u6267\u884cbin\u6587\u4ef6"},{"location":"module/User_Guide/Develop/Running_Offline_Network_Model_On_Development_Board.html","text":"\u5efa\u8bae\u5728\u5f00\u53d1\u677f\u4e0a\u8fd0\u884c\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u4e4b\u524d\uff0c\u4f7f\u7528Simulator\u5bf9\u6a21\u578b\u8fdb\u884c\u9a8c\u8bc1\u3002Simulator\u80fd\u591f\u5728PC\u7aef\u6a21\u62df\u677f\u4e0a\u8fd0\u884c\u73af\u5883\u3002 \u9996\u5148\u786e\u4fdd\u5f00\u53d1\u677f\u5df2\u7ecf\u70e7\u5f55\u597d\u6700\u65b0\u7684\u56fa\u4ef6\uff0c\u4f7f\u7528Demo\u4e2d\u7684dla_classify\u53ef\u5bf9\u5355\u5f20\u56fe\u7247\u63a8\u6f14\u4e00\u6b21\uff0c\u7ed3\u679c\u4e3a\u63a8\u6f14\u7ed3\u679c\u7684TOP5\u3002\u4e0b\u9762\u5206\u89e3dla_classify.cpp\u6587\u4ef6\uff0c\u9488\u5bf9\u4f7f\u7528MI_IPU API\u7684\u987a\u5e8f\u4e3e\u4f8b\u8bf4\u660e\u3002 dla_classify.cpp\u6587\u4ef6\u8def\u5f84\u4e3a\uff1a sdk/verify/mi_demo/source/dla_classify/dla_classify.cpp 11.1. \u521b\u5efaIPU\u8bbe\u5907 \u00b6 MI_S32 IPUCreateDevice ( char * pFirmwarePath , MI_U32 u32VarBufSize ) { MI_S32 s32Ret = MI_SUCCESS ; MI_IPU_DevAttr_t stDevAttr ; stDevAttr . u32MaxVariableBufSize = u32VarBufSize ; stDevAttr . u32YUV420_W_Pitch_Alignment = 16 ; stDevAttr . u32YUV420_H_Pitch_Alignment = 2 ; stDevAttr . u32XRGB_W_Pitch_Alignment = 16 ; s32Ret = MI_IPU_CreateDevice ( & stDevAttr , NULL , pFirmwarePath , 0 ); return s32Ret ; } \u8f93\u5165\u53c2\u6570\uff1a ```ini pFirmwarePath\uff1aFirmware\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u4f20NULL\u65f6\u4f1a\u8c03\u7528/config/dla/ipu_firmware.bin u32VarBufSize\uff1a\u6a21\u578b\u5185\u90e8Tensor\u4f7f\u7528\u7684memory\u7684\u6700\u5927\u5927\u5c0f ``` u32VarBufSize\u83b7\u53d6\u65b9\u6cd5\u5982\u4e0b \uff1a \u65b9\u6cd5 1 : \u53ef\u4ee5\u901a\u8fc7 parse_net\u5de5\u5177\u83b7\u53d6 parse_net\u5de5\u5177\u8def\u5f84 \uff1a SGS_IPU_SDK / bin / parse_net \u4f7f\u7528\u65f6\u76f4\u63a5\u5728 parse_net\u547d\u4ee4\u540e\u52a0\u4e0a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8def\u5f84\u5373\u53ef \uff0c\u53ef\u53c2\u8003\u4ee5\u4e0b\u547d\u4ee4\uff1a . / parse_net xxx_fixed . sim | grep Variable \u8f93\u51fa\uff1a | |--> SubGraph [ 0 ] : Variable buffer 0xd2f00 @ 0x82f3b40 . \u5176\u4e2d 0xd2f00 \u5411 2 \u5bf9\u9f50\u540e\u4e3a u32VarBufSize\u5927\u5c0f \u3002 \u5728 C / C ++ \u4e2d\uff0c\u5411 2 \u5bf9\u9f50\u7684\u5b9a\u4e49\u4e3a\uff1a #define alignment_up(a, size) ((a + size - 1) & (~(size - 1))) \u6240\u4ee5 u32VarBufSize\u4e3a864000 \u3002 \u65b9\u6cd5 2 : \u4f7f\u7528 MI\u7684API\u83b7\u53d6 MI_IPU_OfflineModelStaticInfo_t OfflineModelInfo ; ret = MI_IPU_GetOfflineModeStaticInfo ( NULL , modelFilePath , & OfflineModelInfo ); if ( ret != MI_SUCCESS ) { std :: cerr << \"get model variable buffer size failed!\" << std :: endl ; return ; } u32VarBufSize = OfflineModelInfo . u32VariableBufferSize \u5982\u679c\u6709\u591a\u4e2a\u6a21\u578b\u9700\u8981\u8fd0\u884c\uff0c\u9009\u53d6\u6700\u5927\u7684 u32VarBufSize\u521b\u5efaIPU\u8bbe\u5907\u5373\u53ef \u3002 \u8f93\u51fa\u53c2\u6570\uff1aMI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b 11.2. \u521b\u5efaIPU\u901a\u9053 \u00b6 MI_S32 IPUCreateChannel ( MI_U32 * u32Channel , char * pModelImage ) { MI_S32 s32Ret ; MI_IPUChnAttr_t stChnAttr ; //create channel memset ( & stChnAttr , 0 , sizeof ( stChnAttr )); stChnAttr . u32InputBufDepth = 2 ; stChnAttr . u32OutputBufDepth = 2 ; return MI_IPU_CreateCHN ( u32Channel , & stChnAttr , NULL , pModelImage ); } MI_U32 u32Channel ; ret = IPUCreateChannel ( & u32ChannelID , \u201c . / mobilenet_v1_fixed . img \u201d ); \u8f93\u5165\u53c2\u6570\uff1a s32Channel\uff1a\u521b\u5efaIPU\u901a\u9053\u7684ID pModelImage\uff1a\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u79bb\u7ebf \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b 11.3. \u83b7\u53d6\u6a21\u578b\u8f93\u5165\u8f93\u51faTensor\u5c5e\u6027 \u00b6 MI_IPU_SubNet_InputOutputDesc_t desc ; MI_IPU_GetInOutTensorDesc ( u32ChannelID , & desc ); \u8f93\u5165\u53c2\u6570\uff1a u32ChnId\uff1aIPU\u901a\u9053\u7684ID pstDesc\uff1aIPU\u5b50\u7f51\u7edc\u8f93\u5165/\u8f93\u51fa\u63cf\u8ff0\u7ed3\u6784\u4f53 \u8f93\u51fa\u53c2\u6570\uff1aMI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b 11.4. \u83b7\u53d6\u8f93\u5165\u8f93\u51faTensor \u00b6 MI_IPU_TensorVector_t InputTensorVector ; MI_IPU_TensorVector_t OutputTensorVector ; MI_IPU_GetInputTensors ( u32ChannelID , & InputTensorVector ); MI_IPU_GetOutputTensors ( u32ChannelID , & OutputTensorVector ); \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID InputTensorVector\uff1a\u8f93\u5165IPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 OutputTensorVector\uff1a\u8f93\u51faIPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b 11.5. \u6a21\u578b\u6570\u636e\u8f93\u5165 \u00b6 11.5.1. \u62f7\u8d1d\u6570\u636e \u00b6 \u5c06\u6570\u636e\u62f7\u8d1d\u81f3\u6a21\u578b\u8f93\u5165Tensor\u7684\u865a\u62df\u5730\u5740\uff0c\u62f7\u8d1d\u5b8c\u6210\u540e\u8c03\u7528MI_SYS_FlushInvCache\uff1a MI_U8 * pdata = ( MI_U8 * ) InputTensorVector . astArrayTensors [ 0 ]. ptTensorData [ 0 ]; MI_U8 * pSrc = ( MI_U8 * ) Input_Data ; for ( int i = 0 ; i < imageSize ; i ++ ) { * ( pdata + i ) = * ( pSrc + i ); } MI_SYS_FlushInvCache ( pdata , imageSize ); \u6a21\u578b\u4e2dinput formats\u8bbe\u7f6e\u4e3a BGR \u6216\u8005 RGB \u65f6\uff0cstride\u4e0d\u8981\u505aalignment\uff0c\u505a\u4e86alignment\u53cd\u800c\u6709\u95ee\u9898\u3002 \u6a21\u578b\u4e2dinput formats\u8bbe\u7f6e\u4e3a BGRA \u6216\u8005 RGBA \uff08A channel\u5728\u9ad8\u5730\u5740\uff09\uff0calignmet\u89c4\u5219\u662fstride = alignment_up(width*4, 16 )\u3002 input_formats\u8bbe\u7f6e\u4e3a BGRA \uff0c\u5bf9\u5e94MI_SYS_PixelFormat_e\u4e3a E_MI_SYSPIXEL_FRAME_ARGB8888 \u3002 input_formats\u8bbe\u7f6e\u4e3a RGBA \uff0c\u5bf9\u5e94MI_SYS_PixelFormat_e\u4e3a E_MI_SYSPIXEL_FRAME_ABGR8888 \u3002 input formats\u8bbe\u7f6e\u4e3a YUV_NV12 \u6216\u8005 GRAY \u65f6\uff0calignment\u89c4\u5219\u662fstride = alignment_up(width,16)\uff0cheight\u9700\u89812 alignment\u3002 input_formats\u8bbe\u7f6e\u4e3a YUV_NV12 \u6216\u8005 GRAY \u65f6\uff0c\u5bf9\u5e94MI_SYS_PixelFormat_e\u4e3a E_MI_SYSPIXEL_FRAME_YUV_SEMIPLANAR_420 \u3002 11.5.2.\u96f6\u62f7\u8d1d\u6570\u636e \u00b6 \u5982\u679c\u4f7f\u7528MI\u7684\u5176\u4ed6\u6a21\u5757\uff0c\u4e3a\u6a21\u578b\u8f93\u5165\u505a\u597d\u4e86\u6570\u636e\u51c6\u5907\uff0c\u53ef\u4ee5\u4e0d\u7528\u62f7\u8d1d\u6570\u636e\uff0c\u76f4\u63a5\u7ed9\u4f20\u9012\u5176\u4ed6MI\u6a21\u5757\u7684\u7269\u7406\u5730\u5740\u3002 \u4ee5\u4e0b\u4ee5MI_DIVP\u6a21\u5757\u793a\u4f8b\u6a21\u578b\u8f93\u5165\u96f6\u62f7\u8d1d\u6570\u636e\uff0c\u9700\u6ce8\u610f\uff1a \u521b\u5efaIPU\u901a\u9053\u65f6\uff0c\u8f93\u5165InputBufDepth\u8bbe\u4e3a\u96f6\uff0c\u4e0d\u518d\u4f7f\u7528MI_IPU_GetInputTensors\u5206\u914d\u8f93\u5165\u7a7a\u95f4 stChnAttr.u32InputBufDepth = 0; \u7531\u4e8e\u4e0d\u4f7f\u7528MI_IPU_GetInputTensors\uff0c\u9700\u624b\u52a8\u5c06\u7f51\u7edc\u63cf\u8ff0\u7684\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u4e2a\u6570\u8d4b\u7ed9 InputTensorVector.u32TensorCount\u3002 InputTensorVector.u32TensorCount = desc.u32InputTensorCount; \u4f7f\u7528MI_DIVP\u7f29\u653e\u56fe\u7247\uff1a \u5206\u914dMI_DIVP\u7684\u7a7a\u95f4 MI_PHY phySrcBufAddr = 0 ; MI_PHY phyDstBufAddr = 0 ; void * pVirSrcBufAddr ; void * pVirDstBufAddr ; MI_S32 ret ; ret = MI_SYS_MMA_Alloc ( NULL , SRC_BUFF_SIZE , & phySrcBufAddr ); if ( ret != MI_SUCCESS ) { divp_ut_dbg ( \"alloc src buff failed \\n \" ); return -1 ; } ret = MI_SYS_Mmap ( phySrcBufAddr , SRC_BUFF_SIZE , & pVirSrcBufAddr , TRUE ); if ( ret != MI_SUCCESS ) { MI_SYS_MMA_Free ( phySrcBufAddr ); divp_ut_dbg ( \"mmap src buff failed \\n \" ); return -1 ; } ret = MI_SYS_MMA_Alloc ( NULL , DST_BUFF_SIZE , & phyDstBufAddr ); if ( ret != MI_SUCCESS ) { MI_SYS_Munmap ( pVirSrcBufAddr , SRC_BUFF_SIZE ); MI_SYS_MMA_Free ( phySrcBufAddr ); divp_ut_dbg ( \"alloc dst buff failed \\n \" ); return -1 ; } ret = MI_SYS_Mmap ( phyDstBufAddr , DST_BUFF_SIZE , & pVirDstBufAddr , TRUE ); if ( ret != MI_SUCCESS ) { MI_SYS_Munmap ( pVirSrcBufAddr , SRC_BUFF_SIZE ); MI_SYS_MMA_Free ( phySrcBufAddr ); MI_SYS_MMA_Free ( phyDstBufAddr ); divp_ut_dbg ( \"mmap dst buff failed \\n \" ); return -1 ; } \u914d\u7f6eMI_DIVP\u53c2\u6570\uff1a MI_DIVP_DirectBuf_t stSrcBuf ; MI_DIVP_DirectBuf_t stDstBuf ; MI_SYS_WindowRect_t stSrcCrop ; stSrcBuf . ePixelFormat = E_MI_SYS_PIXEL_FRAME_YUV_SEMIPLANAR_420 ; stSrcBuf . u32Width = SRC_WIDTH ; stSrcBuf . u32Height = SRC_HEIGHT ; stSrcBuf . u32Stride [ 0 ] = SRC_BUFF_STRIDE ; stSrcBuf . u32Stride [ 1 ] = SRC_BUFF_STRIDE ; stSrcBuf . phyAddr [ 0 ] = phySrcBufAddr ; stSrcBuf . phyAddr [ 1 ] = stSrcBuf . phyAddr [ 0 ] + SRC_BUFF_STRIDE * SRC_HEIGHT ; stDstBuf . ePixelFormat = E_MI_SYS_PIXEL_FRAME_YUV_SEMIPLANAR_420 ; stDstBuf . u32Width = DST_WIDTH ; stDstBuf . u32Height = DST_HEIGHT ; stDstBuf . u32Stride [ 0 ] = DST_BUFF_STRIDE ; stDstBuf . u32Stride [ 1 ] = DST_BUFF_STRIDE ; stDstBuf . phyAddr [ 0 ] = phyDstBufAddr ; stDstBuf . phyAddr [ 1 ] = stDstBuf . phyAddr [ 0 ] + DST_BUFF_STRIDE * DST_HEIGHT ; stSrcCrop . u16X = CROP_X ; stSrcCrop . u16Y = CROP_Y ; stSrcCrop . u16Width = CROP_W ; stSrcCrop . u16Height = CROP_H ; \u8f93\u5165\u56fe\u7247\u6570\u636e\uff1a int ReadSize = 0 ; FILE * input_fp ; input_fp = fopen ( \"./1920x1080_yuv420.yuv\" , \"r\" ); if ( ! input_fp ) { divp_ut_dbg ( \"open file[%s] failed \\n \" , \"./1920x1080_yuv420.yuv\" ); return -1 ; } for ( Idx = 0 ; Idx < SRC_HEIGHT * 3 / 2 ; Idx ++ ) { ReadSize = fread ( pVirSrcBufAddr + Idx * SRC_BUFF_STRIDE , 1 , SRC_WIDTH , input_fp ); if ( ReadSize != width ) { return -1 ; } } \u4f7f\u7528MI_DIVP\u7f29\u653e\u56fe\u7247\uff1a MI_DIVP_StretchBuf(&stSrcBuf, &stSrcCrop, &stDstBuf) \u5c06MI_DIVP\u7684\u8f93\u51fa\u7269\u7406\u5730\u5740\u8d4b\u7ed9MI_IPU\u7684\u8f93\u5165Tensor\u7269\u7406\u5730\u5740\uff1a InputTensorVector . astArrayTensors [ 0 ]. phyTensorAddr [ 0 ] = stDstBuf . phyAddr [ 0 ]; InputTensorVector . astArrayTensors [ 0 ]. phyTensorAddr [ 1 ] = stDstBuf . phyAddr [ 1 ]; \u4e4b\u540e\u53ef\u4ee5\u8fdb\u884c\u6a21\u578b\u63a8\u6f14\u3002 \u4f7f\u7528\u96f6\u62f7\u8d1d\u6570\u636e\uff0c\u4e0d\u9700\u8981\u518d\u91ca\u653e\u8f93\u5165Tensor\uff0c\u5373\u4e0d\u518d\u8c03\u7528MI_IPU_PutInputTensors\u51fd\u6570\u3002 11.6. \u6a21\u578b\u63a8\u6f14 \u00b6 ret = MI_IPU_Invoke ( u32ChannelID , & InputTensorVector , & OutputTensorVector ); if ( ret != MI_SUCCESS ) { MI_IPU_DestroyCHN ( u32ChannelID ); MI_IPU_DestroyDevice (); std :: cerr << \"IPU invoke failed!!\" << std :: endl ; } \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID InputTensorVector\uff1a\u8f93\u5165IPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 OutputTensorVector\uff1a\u8f93\u51faIPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b 11.7. \u91ca\u653e\u8f93\u5165\u8f93\u51faTensor \u00b6 MI_IPU_PutInputTensors ( u32ChannelID , & InputTensorVector ); MI_IPU_PutOutputTensors ( u32ChannelID , & OutputTensorVector ); \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID InputTensorVector\uff1a\u8f93\u5165IPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 OutputTensorVector\uff1a\u8f93\u51faIPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b 11.8. \u9500\u6bc1IPU\u901a\u9053 \u00b6 MI_IPU_DestroyCHN ( u32ChannelID ); \u8f93\u5165\u53c2\u6570\uff1a s32Channel\uff1a\u521b\u5efaIPU\u901a\u9053\u7684ID \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b 11.9. \u9500\u6bc1IPU\u8bbe\u5907 \u00b6 MI_IPU_DestroyDevice (); \u8f93\u5165\u53c2\u6570\uff1a \u7a7a \u8f93\u51fa\u53c2\u6570\uff1aMI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b 11.10. Py_dla\u63a5\u53e3\u4f7f\u7528 \u00b6 Py_dla\u662fPython\u5c01\u88c5\u540e\u7684MI_IPU\u63a5\u53e3\uff0c\u53ef\u4ee5\u5728\u5f00\u53d1\u677f\u4e0a\u5feb\u901f\u5904\u7406\u6a21\u578b\u8f93\u51fa\u6570\u636e\uff0c\u65b9\u4fbf\u5feb\u901f\u9a8c\u8bc1\u6a21\u578b\u7684\u51c6\u786e\u6027\u3002 \u5df2\u51c6\u5907\u597dARM\u7684Python3.8\u7684\u5e93\uff0c\u5b58\u653e\u5728 sdk/verify/mi_demo/source/py_dla/Python3.8.tar.bz2 \uff0c \u4f7f\u7528\u65f6\u8bf7\u5148\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u89e3\u538b\u5230\u53ef\u4ee5mount\u5230\u5f00\u53d1\u677f\u7684\u672c\u5730\u8def\u5f84\uff1a tar -jxvf Python3.8.tar.bz2 \u5728\u5f00\u53d1\u677f\u4e2d\u8bbe\u7f6ePython3.8\u7684\u8def\u5f84\uff1a export LD_LIBRARY_PATH = path/to/Python3.8/usr/lib/: $LD_LIBRARY_PATH export PATH = path/to/Python3.8/usr/bin: $PATH \u4ee5\u4e0b\u6587\u4ef6\u4e3aPy_dla\u63a5\u53e3\u6587\u4ef6\uff0c\u53ef\u4ee5\u4f7f\u7528python\u76f4\u63a5import\u4f7f\u7528\uff1a sdk/verify/mi_demo/source/py_dla/_misim.cpython-38-arm-linux-gnueabihf.so \u5c06\u8be5\u6587\u4ef6\u4e0e\u7f16\u5199python\u811a\u672c\u653e\u5728\u540c\u4e00\u8def\u5f84\u4e0b\uff0c\u5373\u53ef\u4f7f\u7528Py_dla\u3002\u4e0b\u9762\u8bf4\u660epython\u4e2d\u8c03\u7528 _misim.cpython-38-arm-linux-gnueabihf.so \u4ee5\u53caAPI\u4e3e\u4f8b\u4ecb\u7ecd\u3002 \u4f7f\u7528\u5982\u4e0b\u65b9\u5f0f\uff0c\u52a0\u8f7d _misim.cpython-38-arm-linux-gnueabihf.so \uff1a from _misim import MI_simulator from _misim import IPU_GetOfflineModeStaticInfo from _misim import IPU_CreateDevice API\u4e3e\u4f8b\u8bf4\u660e\uff1a IPU_GetOfflineModeStaticInfo\uff1a\u83b7\u53d6\u6a21\u578bvariable buffer size >>> model_path = 'mobilenet_v1_fixed.sim_sgsimg.img' >>> variable_buffer_size = IPU_GetOfflineModeStaticInfo ( model_path ) IPU_CreateDevice\uff1a\u521b\u5efaIPU\u8bbe\u5907\uff08\u5982\u679c\u6709\u591a\u4e2a\u6a21\u578b\u9700\u8981\u8fd0\u884c\uff0c\u9009\u53d6\u6700\u5927\u7684variable_buffer_size \u521b\u5efaIPU\u8bbe\u5907\uff09 >>> IPU_CreateDevice ( variable_buffer_size ) \u53ef\u9009\u53c2\u6570\uff1a ipu_firmware\uff08\u7528\u6765\u6307\u5b9aipu_firmware.bin\u7684\u8def\u5f84\uff0c\u9ed8\u8ba4\u4e3a/config/dla/ipu_firmware.bin\uff09 >>> IPU_CreateDevice ( variable_buffer_size , '/path/to/ipu_firmware' ) MI_simulator\uff1a\u521b\u5efa\u6a21\u578b\u5b9e\u4f8b >>> model = MI_simulator ( model_path ) \u83b7\u53d6\u6a21\u578b\u8f93\u5165\u4fe1\u606f >>> in_details = model . get_input_details () >>> print ( in_details ) [{ 'name' : 'input' , 'index' : 0 , 'dtype' : < class ' numpy . uint8 '>, ' shape ': array([ 1, 224, 224, 3])}] \u83b7\u53d6\u6a21\u578b\u8f93\u51fa\u4fe1\u606f >>> out_details = model . get_output_details () >>> print ( out_details ) [{ 'name' : 'MobilenetV2/Predictions/Reshape_1' , 'index' : 0 , 'dtype' : < class ' numpy . float32 '>, ' shape ': array([ 1, 1001])}] \u7ed9\u7b2c0\u4e2aindex\u8f93\u5165\u6570\u636e\uff08img_data\u4e3a\u4e0e\u8f93\u5165shape\u3001dtype\u4e00\u81f4\u7684numpy.ndarray\u6570\u636e model . set_input ( in_details [ 0 ][ 'index' ], img_data ) \u6a21\u578b\u524d\u5411\u63a8\u6f14 model . invoke () \u83b7\u53d6\u7b2c0\u4e2aindex\u7684\u8f93\u51fa\uff08\u8f93\u51fa\u4e3anumpy.ndarray\uff09\uff0c\u5efa\u8bae\u4f7f\u7528numpy\u7684copy()\u65b9\u6cd5 >>> output0 = model . get_output ( out_details [ 0 ][ 'index' ]) \u83b7\u53d6\u7b2c1\u4e2aindex\u7684\u8f93\u51fa\uff0c\u4f7f\u7528numpy\u7684copy()\u65b9\u6cd5\uff0c\u62f7\u8d1d\u5185\u5b58\u5230\u65b0\u7684\u5185\u5b58\u91cc >>> output1 = model . get_output ( out_details [ 1 ][ 'index' ]) . copy ()","title":"Running Offline Network Model On Development Board"},{"location":"module/User_Guide/Develop/Running_Offline_Network_Model_On_Development_Board.html#111-ipu","text":"MI_S32 IPUCreateDevice ( char * pFirmwarePath , MI_U32 u32VarBufSize ) { MI_S32 s32Ret = MI_SUCCESS ; MI_IPU_DevAttr_t stDevAttr ; stDevAttr . u32MaxVariableBufSize = u32VarBufSize ; stDevAttr . u32YUV420_W_Pitch_Alignment = 16 ; stDevAttr . u32YUV420_H_Pitch_Alignment = 2 ; stDevAttr . u32XRGB_W_Pitch_Alignment = 16 ; s32Ret = MI_IPU_CreateDevice ( & stDevAttr , NULL , pFirmwarePath , 0 ); return s32Ret ; } \u8f93\u5165\u53c2\u6570\uff1a ```ini pFirmwarePath\uff1aFirmware\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u4f20NULL\u65f6\u4f1a\u8c03\u7528/config/dla/ipu_firmware.bin u32VarBufSize\uff1a\u6a21\u578b\u5185\u90e8Tensor\u4f7f\u7528\u7684memory\u7684\u6700\u5927\u5927\u5c0f ``` u32VarBufSize\u83b7\u53d6\u65b9\u6cd5\u5982\u4e0b \uff1a \u65b9\u6cd5 1 : \u53ef\u4ee5\u901a\u8fc7 parse_net\u5de5\u5177\u83b7\u53d6 parse_net\u5de5\u5177\u8def\u5f84 \uff1a SGS_IPU_SDK / bin / parse_net \u4f7f\u7528\u65f6\u76f4\u63a5\u5728 parse_net\u547d\u4ee4\u540e\u52a0\u4e0a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8def\u5f84\u5373\u53ef \uff0c\u53ef\u53c2\u8003\u4ee5\u4e0b\u547d\u4ee4\uff1a . / parse_net xxx_fixed . sim | grep Variable \u8f93\u51fa\uff1a | |--> SubGraph [ 0 ] : Variable buffer 0xd2f00 @ 0x82f3b40 . \u5176\u4e2d 0xd2f00 \u5411 2 \u5bf9\u9f50\u540e\u4e3a u32VarBufSize\u5927\u5c0f \u3002 \u5728 C / C ++ \u4e2d\uff0c\u5411 2 \u5bf9\u9f50\u7684\u5b9a\u4e49\u4e3a\uff1a #define alignment_up(a, size) ((a + size - 1) & (~(size - 1))) \u6240\u4ee5 u32VarBufSize\u4e3a864000 \u3002 \u65b9\u6cd5 2 : \u4f7f\u7528 MI\u7684API\u83b7\u53d6 MI_IPU_OfflineModelStaticInfo_t OfflineModelInfo ; ret = MI_IPU_GetOfflineModeStaticInfo ( NULL , modelFilePath , & OfflineModelInfo ); if ( ret != MI_SUCCESS ) { std :: cerr << \"get model variable buffer size failed!\" << std :: endl ; return ; } u32VarBufSize = OfflineModelInfo . u32VariableBufferSize \u5982\u679c\u6709\u591a\u4e2a\u6a21\u578b\u9700\u8981\u8fd0\u884c\uff0c\u9009\u53d6\u6700\u5927\u7684 u32VarBufSize\u521b\u5efaIPU\u8bbe\u5907\u5373\u53ef \u3002 \u8f93\u51fa\u53c2\u6570\uff1aMI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b","title":"11.1. \u521b\u5efaIPU\u8bbe\u5907"},{"location":"module/User_Guide/Develop/Running_Offline_Network_Model_On_Development_Board.html#112-ipu","text":"MI_S32 IPUCreateChannel ( MI_U32 * u32Channel , char * pModelImage ) { MI_S32 s32Ret ; MI_IPUChnAttr_t stChnAttr ; //create channel memset ( & stChnAttr , 0 , sizeof ( stChnAttr )); stChnAttr . u32InputBufDepth = 2 ; stChnAttr . u32OutputBufDepth = 2 ; return MI_IPU_CreateCHN ( u32Channel , & stChnAttr , NULL , pModelImage ); } MI_U32 u32Channel ; ret = IPUCreateChannel ( & u32ChannelID , \u201c . / mobilenet_v1_fixed . img \u201d ); \u8f93\u5165\u53c2\u6570\uff1a s32Channel\uff1a\u521b\u5efaIPU\u901a\u9053\u7684ID pModelImage\uff1a\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u79bb\u7ebf \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b","title":"11.2. \u521b\u5efaIPU\u901a\u9053"},{"location":"module/User_Guide/Develop/Running_Offline_Network_Model_On_Development_Board.html#113-tensor","text":"MI_IPU_SubNet_InputOutputDesc_t desc ; MI_IPU_GetInOutTensorDesc ( u32ChannelID , & desc ); \u8f93\u5165\u53c2\u6570\uff1a u32ChnId\uff1aIPU\u901a\u9053\u7684ID pstDesc\uff1aIPU\u5b50\u7f51\u7edc\u8f93\u5165/\u8f93\u51fa\u63cf\u8ff0\u7ed3\u6784\u4f53 \u8f93\u51fa\u53c2\u6570\uff1aMI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b","title":"11.3. \u83b7\u53d6\u6a21\u578b\u8f93\u5165\u8f93\u51faTensor\u5c5e\u6027"},{"location":"module/User_Guide/Develop/Running_Offline_Network_Model_On_Development_Board.html#114-tensor","text":"MI_IPU_TensorVector_t InputTensorVector ; MI_IPU_TensorVector_t OutputTensorVector ; MI_IPU_GetInputTensors ( u32ChannelID , & InputTensorVector ); MI_IPU_GetOutputTensors ( u32ChannelID , & OutputTensorVector ); \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID InputTensorVector\uff1a\u8f93\u5165IPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 OutputTensorVector\uff1a\u8f93\u51faIPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b","title":"11.4. \u83b7\u53d6\u8f93\u5165\u8f93\u51faTensor"},{"location":"module/User_Guide/Develop/Running_Offline_Network_Model_On_Development_Board.html#115","text":"","title":"11.5. \u6a21\u578b\u6570\u636e\u8f93\u5165"},{"location":"module/User_Guide/Develop/Running_Offline_Network_Model_On_Development_Board.html#1151","text":"\u5c06\u6570\u636e\u62f7\u8d1d\u81f3\u6a21\u578b\u8f93\u5165Tensor\u7684\u865a\u62df\u5730\u5740\uff0c\u62f7\u8d1d\u5b8c\u6210\u540e\u8c03\u7528MI_SYS_FlushInvCache\uff1a MI_U8 * pdata = ( MI_U8 * ) InputTensorVector . astArrayTensors [ 0 ]. ptTensorData [ 0 ]; MI_U8 * pSrc = ( MI_U8 * ) Input_Data ; for ( int i = 0 ; i < imageSize ; i ++ ) { * ( pdata + i ) = * ( pSrc + i ); } MI_SYS_FlushInvCache ( pdata , imageSize ); \u6a21\u578b\u4e2dinput formats\u8bbe\u7f6e\u4e3a BGR \u6216\u8005 RGB \u65f6\uff0cstride\u4e0d\u8981\u505aalignment\uff0c\u505a\u4e86alignment\u53cd\u800c\u6709\u95ee\u9898\u3002 \u6a21\u578b\u4e2dinput formats\u8bbe\u7f6e\u4e3a BGRA \u6216\u8005 RGBA \uff08A channel\u5728\u9ad8\u5730\u5740\uff09\uff0calignmet\u89c4\u5219\u662fstride = alignment_up(width*4, 16 )\u3002 input_formats\u8bbe\u7f6e\u4e3a BGRA \uff0c\u5bf9\u5e94MI_SYS_PixelFormat_e\u4e3a E_MI_SYSPIXEL_FRAME_ARGB8888 \u3002 input_formats\u8bbe\u7f6e\u4e3a RGBA \uff0c\u5bf9\u5e94MI_SYS_PixelFormat_e\u4e3a E_MI_SYSPIXEL_FRAME_ABGR8888 \u3002 input formats\u8bbe\u7f6e\u4e3a YUV_NV12 \u6216\u8005 GRAY \u65f6\uff0calignment\u89c4\u5219\u662fstride = alignment_up(width,16)\uff0cheight\u9700\u89812 alignment\u3002 input_formats\u8bbe\u7f6e\u4e3a YUV_NV12 \u6216\u8005 GRAY \u65f6\uff0c\u5bf9\u5e94MI_SYS_PixelFormat_e\u4e3a E_MI_SYSPIXEL_FRAME_YUV_SEMIPLANAR_420 \u3002","title":"11.5.1. \u62f7\u8d1d\u6570\u636e"},{"location":"module/User_Guide/Develop/Running_Offline_Network_Model_On_Development_Board.html#1152","text":"\u5982\u679c\u4f7f\u7528MI\u7684\u5176\u4ed6\u6a21\u5757\uff0c\u4e3a\u6a21\u578b\u8f93\u5165\u505a\u597d\u4e86\u6570\u636e\u51c6\u5907\uff0c\u53ef\u4ee5\u4e0d\u7528\u62f7\u8d1d\u6570\u636e\uff0c\u76f4\u63a5\u7ed9\u4f20\u9012\u5176\u4ed6MI\u6a21\u5757\u7684\u7269\u7406\u5730\u5740\u3002 \u4ee5\u4e0b\u4ee5MI_DIVP\u6a21\u5757\u793a\u4f8b\u6a21\u578b\u8f93\u5165\u96f6\u62f7\u8d1d\u6570\u636e\uff0c\u9700\u6ce8\u610f\uff1a \u521b\u5efaIPU\u901a\u9053\u65f6\uff0c\u8f93\u5165InputBufDepth\u8bbe\u4e3a\u96f6\uff0c\u4e0d\u518d\u4f7f\u7528MI_IPU_GetInputTensors\u5206\u914d\u8f93\u5165\u7a7a\u95f4 stChnAttr.u32InputBufDepth = 0; \u7531\u4e8e\u4e0d\u4f7f\u7528MI_IPU_GetInputTensors\uff0c\u9700\u624b\u52a8\u5c06\u7f51\u7edc\u63cf\u8ff0\u7684\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u4e2a\u6570\u8d4b\u7ed9 InputTensorVector.u32TensorCount\u3002 InputTensorVector.u32TensorCount = desc.u32InputTensorCount; \u4f7f\u7528MI_DIVP\u7f29\u653e\u56fe\u7247\uff1a \u5206\u914dMI_DIVP\u7684\u7a7a\u95f4 MI_PHY phySrcBufAddr = 0 ; MI_PHY phyDstBufAddr = 0 ; void * pVirSrcBufAddr ; void * pVirDstBufAddr ; MI_S32 ret ; ret = MI_SYS_MMA_Alloc ( NULL , SRC_BUFF_SIZE , & phySrcBufAddr ); if ( ret != MI_SUCCESS ) { divp_ut_dbg ( \"alloc src buff failed \\n \" ); return -1 ; } ret = MI_SYS_Mmap ( phySrcBufAddr , SRC_BUFF_SIZE , & pVirSrcBufAddr , TRUE ); if ( ret != MI_SUCCESS ) { MI_SYS_MMA_Free ( phySrcBufAddr ); divp_ut_dbg ( \"mmap src buff failed \\n \" ); return -1 ; } ret = MI_SYS_MMA_Alloc ( NULL , DST_BUFF_SIZE , & phyDstBufAddr ); if ( ret != MI_SUCCESS ) { MI_SYS_Munmap ( pVirSrcBufAddr , SRC_BUFF_SIZE ); MI_SYS_MMA_Free ( phySrcBufAddr ); divp_ut_dbg ( \"alloc dst buff failed \\n \" ); return -1 ; } ret = MI_SYS_Mmap ( phyDstBufAddr , DST_BUFF_SIZE , & pVirDstBufAddr , TRUE ); if ( ret != MI_SUCCESS ) { MI_SYS_Munmap ( pVirSrcBufAddr , SRC_BUFF_SIZE ); MI_SYS_MMA_Free ( phySrcBufAddr ); MI_SYS_MMA_Free ( phyDstBufAddr ); divp_ut_dbg ( \"mmap dst buff failed \\n \" ); return -1 ; } \u914d\u7f6eMI_DIVP\u53c2\u6570\uff1a MI_DIVP_DirectBuf_t stSrcBuf ; MI_DIVP_DirectBuf_t stDstBuf ; MI_SYS_WindowRect_t stSrcCrop ; stSrcBuf . ePixelFormat = E_MI_SYS_PIXEL_FRAME_YUV_SEMIPLANAR_420 ; stSrcBuf . u32Width = SRC_WIDTH ; stSrcBuf . u32Height = SRC_HEIGHT ; stSrcBuf . u32Stride [ 0 ] = SRC_BUFF_STRIDE ; stSrcBuf . u32Stride [ 1 ] = SRC_BUFF_STRIDE ; stSrcBuf . phyAddr [ 0 ] = phySrcBufAddr ; stSrcBuf . phyAddr [ 1 ] = stSrcBuf . phyAddr [ 0 ] + SRC_BUFF_STRIDE * SRC_HEIGHT ; stDstBuf . ePixelFormat = E_MI_SYS_PIXEL_FRAME_YUV_SEMIPLANAR_420 ; stDstBuf . u32Width = DST_WIDTH ; stDstBuf . u32Height = DST_HEIGHT ; stDstBuf . u32Stride [ 0 ] = DST_BUFF_STRIDE ; stDstBuf . u32Stride [ 1 ] = DST_BUFF_STRIDE ; stDstBuf . phyAddr [ 0 ] = phyDstBufAddr ; stDstBuf . phyAddr [ 1 ] = stDstBuf . phyAddr [ 0 ] + DST_BUFF_STRIDE * DST_HEIGHT ; stSrcCrop . u16X = CROP_X ; stSrcCrop . u16Y = CROP_Y ; stSrcCrop . u16Width = CROP_W ; stSrcCrop . u16Height = CROP_H ; \u8f93\u5165\u56fe\u7247\u6570\u636e\uff1a int ReadSize = 0 ; FILE * input_fp ; input_fp = fopen ( \"./1920x1080_yuv420.yuv\" , \"r\" ); if ( ! input_fp ) { divp_ut_dbg ( \"open file[%s] failed \\n \" , \"./1920x1080_yuv420.yuv\" ); return -1 ; } for ( Idx = 0 ; Idx < SRC_HEIGHT * 3 / 2 ; Idx ++ ) { ReadSize = fread ( pVirSrcBufAddr + Idx * SRC_BUFF_STRIDE , 1 , SRC_WIDTH , input_fp ); if ( ReadSize != width ) { return -1 ; } } \u4f7f\u7528MI_DIVP\u7f29\u653e\u56fe\u7247\uff1a MI_DIVP_StretchBuf(&stSrcBuf, &stSrcCrop, &stDstBuf) \u5c06MI_DIVP\u7684\u8f93\u51fa\u7269\u7406\u5730\u5740\u8d4b\u7ed9MI_IPU\u7684\u8f93\u5165Tensor\u7269\u7406\u5730\u5740\uff1a InputTensorVector . astArrayTensors [ 0 ]. phyTensorAddr [ 0 ] = stDstBuf . phyAddr [ 0 ]; InputTensorVector . astArrayTensors [ 0 ]. phyTensorAddr [ 1 ] = stDstBuf . phyAddr [ 1 ]; \u4e4b\u540e\u53ef\u4ee5\u8fdb\u884c\u6a21\u578b\u63a8\u6f14\u3002 \u4f7f\u7528\u96f6\u62f7\u8d1d\u6570\u636e\uff0c\u4e0d\u9700\u8981\u518d\u91ca\u653e\u8f93\u5165Tensor\uff0c\u5373\u4e0d\u518d\u8c03\u7528MI_IPU_PutInputTensors\u51fd\u6570\u3002","title":"11.5.2.\u96f6\u62f7\u8d1d\u6570\u636e"},{"location":"module/User_Guide/Develop/Running_Offline_Network_Model_On_Development_Board.html#116","text":"ret = MI_IPU_Invoke ( u32ChannelID , & InputTensorVector , & OutputTensorVector ); if ( ret != MI_SUCCESS ) { MI_IPU_DestroyCHN ( u32ChannelID ); MI_IPU_DestroyDevice (); std :: cerr << \"IPU invoke failed!!\" << std :: endl ; } \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID InputTensorVector\uff1a\u8f93\u5165IPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 OutputTensorVector\uff1a\u8f93\u51faIPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b","title":"11.6. \u6a21\u578b\u63a8\u6f14"},{"location":"module/User_Guide/Develop/Running_Offline_Network_Model_On_Development_Board.html#117-tensor","text":"MI_IPU_PutInputTensors ( u32ChannelID , & InputTensorVector ); MI_IPU_PutOutputTensors ( u32ChannelID , & OutputTensorVector ); \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID InputTensorVector\uff1a\u8f93\u5165IPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 OutputTensorVector\uff1a\u8f93\u51faIPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b","title":"11.7. \u91ca\u653e\u8f93\u5165\u8f93\u51faTensor"},{"location":"module/User_Guide/Develop/Running_Offline_Network_Model_On_Development_Board.html#118-ipu","text":"MI_IPU_DestroyCHN ( u32ChannelID ); \u8f93\u5165\u53c2\u6570\uff1a s32Channel\uff1a\u521b\u5efaIPU\u901a\u9053\u7684ID \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b","title":"11.8. \u9500\u6bc1IPU\u901a\u9053"},{"location":"module/User_Guide/Develop/Running_Offline_Network_Model_On_Development_Board.html#119-ipu","text":"MI_IPU_DestroyDevice (); \u8f93\u5165\u53c2\u6570\uff1a \u7a7a \u8f93\u51fa\u53c2\u6570\uff1aMI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b","title":"11.9. \u9500\u6bc1IPU\u8bbe\u5907"},{"location":"module/User_Guide/Develop/Running_Offline_Network_Model_On_Development_Board.html#1110-py_dla","text":"Py_dla\u662fPython\u5c01\u88c5\u540e\u7684MI_IPU\u63a5\u53e3\uff0c\u53ef\u4ee5\u5728\u5f00\u53d1\u677f\u4e0a\u5feb\u901f\u5904\u7406\u6a21\u578b\u8f93\u51fa\u6570\u636e\uff0c\u65b9\u4fbf\u5feb\u901f\u9a8c\u8bc1\u6a21\u578b\u7684\u51c6\u786e\u6027\u3002 \u5df2\u51c6\u5907\u597dARM\u7684Python3.8\u7684\u5e93\uff0c\u5b58\u653e\u5728 sdk/verify/mi_demo/source/py_dla/Python3.8.tar.bz2 \uff0c \u4f7f\u7528\u65f6\u8bf7\u5148\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u89e3\u538b\u5230\u53ef\u4ee5mount\u5230\u5f00\u53d1\u677f\u7684\u672c\u5730\u8def\u5f84\uff1a tar -jxvf Python3.8.tar.bz2 \u5728\u5f00\u53d1\u677f\u4e2d\u8bbe\u7f6ePython3.8\u7684\u8def\u5f84\uff1a export LD_LIBRARY_PATH = path/to/Python3.8/usr/lib/: $LD_LIBRARY_PATH export PATH = path/to/Python3.8/usr/bin: $PATH \u4ee5\u4e0b\u6587\u4ef6\u4e3aPy_dla\u63a5\u53e3\u6587\u4ef6\uff0c\u53ef\u4ee5\u4f7f\u7528python\u76f4\u63a5import\u4f7f\u7528\uff1a sdk/verify/mi_demo/source/py_dla/_misim.cpython-38-arm-linux-gnueabihf.so \u5c06\u8be5\u6587\u4ef6\u4e0e\u7f16\u5199python\u811a\u672c\u653e\u5728\u540c\u4e00\u8def\u5f84\u4e0b\uff0c\u5373\u53ef\u4f7f\u7528Py_dla\u3002\u4e0b\u9762\u8bf4\u660epython\u4e2d\u8c03\u7528 _misim.cpython-38-arm-linux-gnueabihf.so \u4ee5\u53caAPI\u4e3e\u4f8b\u4ecb\u7ecd\u3002 \u4f7f\u7528\u5982\u4e0b\u65b9\u5f0f\uff0c\u52a0\u8f7d _misim.cpython-38-arm-linux-gnueabihf.so \uff1a from _misim import MI_simulator from _misim import IPU_GetOfflineModeStaticInfo from _misim import IPU_CreateDevice API\u4e3e\u4f8b\u8bf4\u660e\uff1a IPU_GetOfflineModeStaticInfo\uff1a\u83b7\u53d6\u6a21\u578bvariable buffer size >>> model_path = 'mobilenet_v1_fixed.sim_sgsimg.img' >>> variable_buffer_size = IPU_GetOfflineModeStaticInfo ( model_path ) IPU_CreateDevice\uff1a\u521b\u5efaIPU\u8bbe\u5907\uff08\u5982\u679c\u6709\u591a\u4e2a\u6a21\u578b\u9700\u8981\u8fd0\u884c\uff0c\u9009\u53d6\u6700\u5927\u7684variable_buffer_size \u521b\u5efaIPU\u8bbe\u5907\uff09 >>> IPU_CreateDevice ( variable_buffer_size ) \u53ef\u9009\u53c2\u6570\uff1a ipu_firmware\uff08\u7528\u6765\u6307\u5b9aipu_firmware.bin\u7684\u8def\u5f84\uff0c\u9ed8\u8ba4\u4e3a/config/dla/ipu_firmware.bin\uff09 >>> IPU_CreateDevice ( variable_buffer_size , '/path/to/ipu_firmware' ) MI_simulator\uff1a\u521b\u5efa\u6a21\u578b\u5b9e\u4f8b >>> model = MI_simulator ( model_path ) \u83b7\u53d6\u6a21\u578b\u8f93\u5165\u4fe1\u606f >>> in_details = model . get_input_details () >>> print ( in_details ) [{ 'name' : 'input' , 'index' : 0 , 'dtype' : < class ' numpy . uint8 '>, ' shape ': array([ 1, 224, 224, 3])}] \u83b7\u53d6\u6a21\u578b\u8f93\u51fa\u4fe1\u606f >>> out_details = model . get_output_details () >>> print ( out_details ) [{ 'name' : 'MobilenetV2/Predictions/Reshape_1' , 'index' : 0 , 'dtype' : < class ' numpy . float32 '>, ' shape ': array([ 1, 1001])}] \u7ed9\u7b2c0\u4e2aindex\u8f93\u5165\u6570\u636e\uff08img_data\u4e3a\u4e0e\u8f93\u5165shape\u3001dtype\u4e00\u81f4\u7684numpy.ndarray\u6570\u636e model . set_input ( in_details [ 0 ][ 'index' ], img_data ) \u6a21\u578b\u524d\u5411\u63a8\u6f14 model . invoke () \u83b7\u53d6\u7b2c0\u4e2aindex\u7684\u8f93\u51fa\uff08\u8f93\u51fa\u4e3anumpy.ndarray\uff09\uff0c\u5efa\u8bae\u4f7f\u7528numpy\u7684copy()\u65b9\u6cd5 >>> output0 = model . get_output ( out_details [ 0 ][ 'index' ]) \u83b7\u53d6\u7b2c1\u4e2aindex\u7684\u8f93\u51fa\uff0c\u4f7f\u7528numpy\u7684copy()\u65b9\u6cd5\uff0c\u62f7\u8d1d\u5185\u5b58\u5230\u65b0\u7684\u5185\u5b58\u91cc >>> output1 = model . get_output ( out_details [ 1 ][ 'index' ]) . copy ()","title":"11.10. Py_dla\u63a5\u53e3\u4f7f\u7528"},{"location":"module/User_Guide/Develop/SigmaStar_Post_Processing_Module.html","text":"7.1.\u6a21\u5757\u4ecb\u7ecd \u00b6 SigmaStar\u540e\u5904\u7406\u6a21\u5757\u4f4d\u7f6e\u5728 SGS_IPU_SDK/Scripts/postprocess \u3002 \u8be5\u6a21\u5757\u4e3b\u8981\u4ee5TFLitePostProcess\u7c7b\u5b9e\u73b0\u4e86\u4e00\u5957\u751f\u6210TFLite Flatbuffer\u7684API\u548c\u4e00\u4e2a\u68c0\u6d4b\u7f51\u7edc\u540e\u5904\u7406BBOX\u7684\u901a\u7528\u751f\u6210\u65b9\u6cd5\u3002 \u4f7f\u7528\u8be5\u6a21\u5757\u65f6\uff0c\u5148\u6839\u636e\u540e\u5904\u7406\u65b9\u6cd5\u7f16\u5199python\u540e\u5904\u7406\u6587\u4ef6\uff0c\u751f\u6210\u72ec\u7acb\u7684\u540e\u5904\u7406\u6a21\u578b\u6587\u4ef6\uff0c\u518d\u4f7f\u7528\u7f51\u7edc\u8fde\u63a5\u7a0b\u5e8f\u5c06Backbone\u7f51\u7edc\u6a21\u578b\u548c\u540e\u5904\u7406\u6a21\u578b\u8fde\u63a5\u6210\u4e00\u4e2a\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u3002 \u7f16\u5199\u7684python\u6587\u4ef6\u53ef\u53c2\u8003 SGS_IPU_SDK/Scripts/postprocess/postprocess_method \u6587\u4ef6\u5939\u4e0b\u7684\u793a\u4f8b\u3002 \u7f16\u5199\u5b8c\u6210\u540e\uff0c\u751f\u6210\u65b9\u6cd5\uff1a \u7f16\u5199\u6587\u4ef6\u4fdd\u5b58\u5728 SGS_IPU_SDK/Scripts/postprocess/postprocess_method \uff0c\u5728 SGS_IPU_SDK/Scripts/postprocess/postprocess_method/__ini__.py \u4e2d\u6dfb\u52a0\u521a\u521a\u4fdd\u5b58\u7684\u6587\u4ef6\u540d\u79f0\uff0c\u4ee5 caffe_yolo_v2_postprocess.py \u6587\u4ef6\u4e3a\u4f8b\uff0c\u7136\u540e\u5728\u76ee\u5f55 SGS_IPU_SDK/Scripts/postprocess/ \u5904\u8f93\u5165\u547d\u4ee4\uff1a python3 postprocess.py -n caffe_yolo_v2_postprocess \u7f16\u5199\u540e\u5904\u7406\u7f51\u7edcpython\u6587\u4ef6\uff0c\u8fd0\u884cpostprocess.py\u65f6\uff0c -n/--model_name \u53c2\u6570\u7ed9\u5b9a\u7f16\u5199\u7684\u540e\u5904\u7406python\u6587\u4ef6\u8def\u5f84\u3002 \u8fde\u63a5\u7f51\u7edc\u7a0b\u5e8f\u5728 SGS_IPU_SDK/bin/concat_net \uff0c\u540e\u5904\u7406\u7f51\u7edc\u7684\u8f93\u5165\u540d\u79f0\u5728\u8bbe\u7f6e\u65f6\u9700\u4e0eBackbone\u7f51\u7edc\u8f93\u51fa\u7684\u540d\u79f0\u76f8\u7b26\uff0c\u5426\u5219\u5728\u8fde\u63a5\u7f51\u7edc\u6a21\u578b\u65f6\u4f1a\u53d1\u751f\u9519\u8bef\u3002 concat_net\u7684\u53c2\u6570\u8bf4\u660e\u5982\u4e0b\uff1a --mode\uff1a \u7f51\u7edc\u8fde\u63a5\u6a21\u5f0f\uff1aconcat\u6216append\u3002\u8fde\u63a5Backbone\u7f51\u7edc\u4e0e\u540e\u5904\u7406\u7f51\u7edc\u8bf7\u4f7f\u7528append\u6a21\u5f0f\u3002 --transform\uff1a \u914d\u7f6e\u6587\u4ef6\uff0c\u8def\u5f84\u4e3aSGS_IPU_SDK/cfg/CompilerConfig.txt\u3002 --input_config\uff1a input_config.ini\u6587\u4ef6\uff0c\u9700\u4f7f\u7528\u5b8c\u6574\u7f51\u7edc\u7684\u914d\u7f6e\u6587\u4ef6\u3002\u5b8c\u6574\u7f51\u7edc\u7684\u914d\u7f6e\u6587\u4ef6\u4e0eBackbone\u7f51\u7edc\u7684\u914d\u7f6e\u6587\u4ef6\u4ec5\u5728outputs\u7684\u540d\u79f0\u4e0d\u540c\uff0c\u5176\u4f59\u8bbe\u7f6e\u5e94\u5b8c\u5168\u4e00\u81f4\u3002 --model1\uff1a Backbone\u7f51\u7edc\u6a21\u578bsim\u8def\u5f84\u3002 --model2\uff1a \u540e\u5904\u7406\u7f51\u7edc\u6a21\u578bsim\u8def\u5f84\u3002 --output\uff1a \u5408\u6210\u7f51\u7edc\u6a21\u578b\u7684\u8f93\u51fa\u8def\u5f84\u3002 \u4ee5\u4e0b\u7ae0\u8282\u8be6\u7ec6\u4ecb\u7ecd\u5c01\u88c5\u597d\u7684\u540e\u5904\u7406\u6d41\u7a0b\u548c\u81ea\u5b9a\u4e49\u540e\u5904\u7406\u6d41\u7a0b\u7684python\u6587\u4ef6\u7f16\u5199\uff0c\u7528\u4ee5\u751f\u6210\u540e\u5904\u7406\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u3002 7.2. bbox\u5750\u6807\u89e3\u7801\u6a21\u5757\u4f7f\u7528 \u00b6 \u4e3a\u65b9\u4fbf\u4f7f\u7528\uff0cSigmastar\u5206\u6790\u4e86SSD\u3001YOLOv1\u3001YOLOv2\u3001YOLOv3\u7b49\u7f51\u7edc\u7684\u540e\u5904\u7406\uff0c\u9488\u5bf9bbox\u5750\u6807\u7684\u63d0\u53d6\u5df2\u7ecf\u62bd\u8c61\u51fa\u4e00\u5957\u89e3\u7801\u6d41\u7a0b\uff0c\u4e0d\u540c\u7f51\u7edc\u5728\u7ed3\u6784\u4e0a\u4e00\u6837\uff0c\u4e0d\u540c\u70b9\u5728\u90e8\u5206\u7684\u7b97\u5b50\u4f7f\u7528\u548canchor\u53c2\u6570\u7684\u4f20\u5165\u3002\u56e0\u6b64\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6econfig\u5b57\u5178\u53d8\u91cf\uff0c\u5373\u53ef\u751f\u6210bbox\u5750\u6807\u7684\u540e\u5904\u7406\u7f51\u7edc\u6a21\u578b\u3002bbox\u5750\u6807\u89e3\u7801\u7f51\u7edc\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u751f\u6210bbox\u5750\u6807\u89e3\u7801\u7f51\u7edc\u6a21\u578b\uff0c\u53ef\u4fee\u6539config\u5b57\u5178\u53d8\u91cf\uff0c\u8be5\u53d8\u91cf\u53c2\u6570\u610f\u4e49\u5982\u4e0b\u8868\u6240\u793a\uff1a \u53c2\u6570\u540d \u53c2\u6570\u7c7b\u578b \u63cf\u8ff0\u4fe1\u606f sh ape [ int] bbox tensor\u7684\u5f62\u72b6\uff0c\u6bd4\u5982 [1,837] tx_func (tflite.BuiltinOperator, str) 1. tflite.BuiltinOperator\u4e3atflite\u5185\u7f6e\u7b97\u5b50\u7c7b\u578b\uff1b 2. str\u4e3a\u5b57\u7b26\u4e32 x_scale \u6216\u8005 None \uff1a\u5f531\u4e2d\u6307\u5b9a\u7684\u7b97\u5b50\u4e3a\u5355\u53e3\u7b97\u5b50\u65f6str\u586b None \uff0c\u5982\u679c\u4e3a\u53cc\u53e3\u7b97\u5b50\uff0c\u8fd9\u91cc\u586b x_scale \u5e76\u5728\u6210\u5458\u53d8\u91cf x_scale \u4e2d\u6307\u5b9a\u5176\u503c\u3002 ty_func (tflite.BuiltinOperator, str) 1. tflite.BuiltinOperator\u4e3atflite\u5185\u7f6e\u7b97\u5b50\u7c7b\u578b\uff1b 2. str\u4e3a\u5b57\u7b26\u4e32 y_scale \u6216\u8005 None \uff1a\u5f531\u4e2d\u6307\u5b9a\u7684\u7b97\u5b50\u4e3a\u5355\u53e3\u7b97\u5b50\u65f6str\u586b None \uff0c\u5982\u679c\u4e3a\u53cc\u53e3\u7b97\u5b50\uff0c\u8fd9\u91cc\u586b y_scale \u5e76\u5728\u6210\u5458\u53d8\u91cf y_scale \u4e2d\u6307\u5b9a\u5176\u503c\u3002 tw_func (tflite.BuiltinOperator, str) 1. tflite.BuiltinOperator\u4e3atflite\u5185\u7f6e\u7b97\u5b50\u7c7b\u578b\uff1b 2. str\u4e3a\u5b57\u7b26\u4e32 w_scale \u6216\u8005 None \uff1a\u5f531\u4e2d\u6307\u5b9a\u7684\u7b97\u5b50\u4e3a\u5355\u53e3\u7b97\u5b50\u65f6str\u586b None \uff0c\u5982\u679c\u4e3a\u53cc\u53e3\u7b97\u5b50\uff0c\u8fd9\u91cc\u586bw_scale\u5e76\u5728\u6210\u5458\u53d8\u91cfw_scale\u4e2d\u6307\u5b9a\u5176\u503c\u3002 th_func (tflite.BuiltinOperator, str) 1. tflite.BuiltinOperator\u4e3atflite\u5185\u7f6e\u7b97\u5b50\u7c7b\u578b\uff1b 2. str\u4e3a\u5b57\u7b26\u4e32 h_scale \u6216\u8005 None \uff1a\u5f531\u4e2d\u6307\u5b9a\u7684\u7b97\u5b50\u4e3a\u5355\u53e3\u7b97\u5b50\u65f6str\u586b None \uff0c\u5982\u679c\u4e3a\u53cc\u53e3\u7b97\u5b50\uff0c\u8fd9\u91cc\u586b h_scale \u5e76\u5728\u6210\u5458\u53d8\u91cf h_scale \u4e2d\u6307\u5b9a\u5176\u503c\u3002 x_scale float tx_func[1]\u4e3a x_scale \u65f6\u6307\u5b9a\u7684\u503c y_scale float tx_func[1]\u4e3a y_scale \u65f6\u6307\u5b9a\u7684\u503c w_scale float tx_func[1]\u4e3a w_scale \u65f6\u6307\u5b9a\u7684\u503c h_scale float tx_func[1]\u4e3a h_scale \u65f6\u6307\u5b9a\u7684\u503c anchor_selector str constant \u6216\u8005\u4e3a None \u6307\u5b9apw\u548cph\u662f constant \u8fd8\u662f\u6709pw_func\u548cph_func\u751f\u6210 pw [ float ] \u5982\u679canchor_selector\u4e3a constant \u65f6pw\u6307\u5b9a\u4e3a\u4e00\u4e2afloat\u5217\u8868 ph [ float ] \u5982\u679canchor_selector\u4e3a constant \u65f6ph\u6307\u5b9a\u4e3a\u4e00\u4e2afloat\u5217\u8868 ppw [ float ] \u5982\u679canchor_selector\u4e3a constant \u65f6ppw\u6307\u5b9a\u4e3a\u4e00\u4e2afloat\u5217\u8868 pph [ float ] \u5982\u679canchor_selector\u4e3a constant \u65f6pph\u6307\u5b9a\u4e3a\u4e00\u4e2afloat\u5217\u8868 px [ float ] px\u6307\u5b9a\u4e3a\u4e00\u4e2afloat\u5217\u8868 py [ float ] py\u6307\u5b9a\u4e3a\u4e00\u4e2afloat\u5217\u8868 sx [ float ] sx\u6307\u5b9a\u4e3a\u4e00\u4e2afloat\u5217\u8868 sy [ float ] sy\u6307\u5b9a\u4e3a\u4e00\u4e2afloat\u5217\u8868 sw [ float ] sw\u6307\u5b9a\u4e3a\u4e00\u4e2afloat\u5217\u8868 sh [ float ] sh\u6307\u5b9a\u4e3a\u4e00\u4e2afloat\u5217\u8868 7.3. \u521b\u5efa\u8282\u70b9TFlite Flatbuffer \u8282\u70b9API \u00b6 7.3.1. buildBuffer \u00b6 buildBuffer ( buffer_name , buffer_data = None ) \u521b\u5efa\u4e00\u4e2abuffer\u3002 :param buffer_name\uff1a \u4e00\u4e2a\u5b57\u7b26\u4e32\u7528\u6765\u5728coding\u65f6\u6807\u8bc6buffer\uff0c\u4e0d\u4f1a\u5b58\u5165\u6a21\u578b\u5185\u90e8\u3002 :param buffer_data\uff1a \u9ed8\u8ba4\u5982\u679c\u521b\u5efa\u7684buffer\u662f\u7528\u4e8evariable tensor\u4f7f\u7528\uff0c\u5219\u4f7f\u7528\u9ed8\u8ba4None\u503c\u5373\u53ef\u3002\u5982\u679c\u662f\u5e38\u91cftensor\u7684buffer\u5219\u4f20\u5165data\u7684\u5b57\u8282\u6d41\u3002 :return: \u8fd4\u56de\u7f16\u7801\u540e\u7684\u504f\u79fb\u91cf 7.3.2. buildTensor \u00b6 buildTensor ( shape , name , buffer = 0 , type = tflite . TensorType . TensorType () . FLOAT32 ) \u521b\u5efa\u4e00\u4e2atensor\u3002 :param shape\uff1a [int] int\u5217\u8868\u6807\u8bc6tensor\u7684\u5f62\u72b6 :param name\uff1a \u5b57\u7b26\u4e32\u6807\u8bc6\u521b\u5efatensor\u7684\u540d\u5b57 :param buffer\uff1a int\u7c7b\u578b\u7684\u7d22\u5f15\u503c\uff0c\u6807\u8bc6\u5728buffer array\u4e2d\u7684index :param type\uff1atensor\u7c7b\u578btflite.TensorType\uff0c\u9ed8\u8ba4\u4e3aFLOAT32 :return\uff1a \u8fd4\u56de\u521b\u5efa\u7684tensor\u5728subgraph\u7684tensor array\u4e2d\u7684index\uff0c\u5982\u679c\u662f\u5df2\u7ecf\u5b58\u5728\u7684tensor\u5219\u76f4\u63a5\u8fd4\u56deindex 7.3.3. buildOperatorCode \u00b6 buildOperatorCode ( opcode_name , builtin_code , custom_code = None ) \u521b\u5efa\u6216\u8fd4\u56de\u4e00\u4e2a\u5df2\u7ecf\u521b\u5efa\u7684OperatorCode\u3002 :param opcode_name\uff1a \u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u662f\u7528\u6237\u7528\u6765\u6807\u8bc6\u8bb0\u5f55\u533a\u5206\u7b97\u5b50\u7684\u540d\u5b57\uff0c\u5b9e\u4f5c\u4f1a\u4fdd\u969c\u540c\u4e00\u7c7b\u578b\u7684OperatorCode\u53ea\u6709\u4e00\u4e2a\u5b58\u5728\u4e8eOperatorCode array\u4e2d\u3002 :param builtin_code\uff1a tflite.BuiltinOperator\u7c7b\u578b\uff0c\u5373\u5185\u7f6e\u7b97\u5b50\u7c7b\u578b :param custom_code\uff1a \u7528\u6237\u6307\u5b9a\u7684\u5b57\u7b26\u4e32\u5ba2\u6237\u6807\u8bb0\u7b26 :return\uff1a \u8fd4\u56deOperatorCode\u7684index 7.3.4. buildOperator \u00b6 buildOperator ( op_code_name , input_names , output_names , builtin_options_type = None , builtin_options = None , custom_options = None , is_custom = False ) \u521b\u5efaoperator\uff0c\u521b\u5efa\u7684operator\u5728subgraph\u4e2d\u4f7f\u7528\u3002 :param op_code_name\uff1a buildOperatorCode\u4e2d\u6307\u5b9a\u7684OperatorCode\u6807\u8bc6\u7b26,\u4f7f\u7528\u540d\u5b57\u6765\u83b7\u53d6\u8fd4\u56deOperatorCode\u7684index :param input_names\uff1a [str]\u8f93\u5165tensor\u7684\u540d\u5b57\u5217\u8868 :param output_names\uff1a [str]\u8f93\u51fatensor\u7684\u540d\u5b57\u5217\u8868 :param builtin_options_type\uff1a tflite.BuiltinOptions\u7c7b\u578b\uff0c\u5982\u679c\u9700\u8981\u6307\u5b9a\u5fc5\u987b\u7684option\u53c2\u6570\uff0c\u8fd9\u91cc\u6307\u5b9a\u662f\u54ea\u4e00\u7c7b\u7b97\u5b50\u7684\u53c2\u6570\u3002 :param builtin_options\uff1a int\u7c7b\u578b\uff0c\u5bf9\u5e94builtin_options_type\u7684\u7b97\u5b50\u53c2\u6570\u5185\u5bb9\u7684flatbuffer\u7684offset\uff0c\u4f7f\u7528\u5982createReshapeOptions\u7b49API\u521b\u5efa\u7684flatbuffer\u3002\u76ee\u524dTFLitePostProcess.py\u53ea\u5b9e\u73b0\u4e86\u5c11\u6570\u51e0\u4e2aoption\u7684flatbuffer encoding\u3002\u5982\u679c\u6709\u5176\u4ed6\u6ca1\u6709\u5b9e\u73b0\u7684\u53ef\u4ee5\u53c2\u7167createReshapeOptions\u5b9e\u4f5c\u65b0\u7684\u65b9\u6cd5\u3002 :param custom_options\uff1a [byte] \u7528flexbuffer encoding\u540e\u7684bytearray\u3002\u5982\u679c\u662fcustom\u7b97\u5b50\uff0c\u5728\u8fd9\u91cc\u6307\u5b9a\u53c2\u6570\uff0c\u5bf9\u5e94\u7684\u7b97\u5b50\u89e3\u6790\u81ea\u5df1\u7684\u53c2\u6570\u3002 :param is_custom\uff1a \u662f\u5426\u4e3a\u5ba2\u5236\u5316\u7b97\u5b50\uff0c\u9ed8\u8ba4\u4e3aFalse :return\uff1a \u8fd4\u56desubgraph\u4e2doperators\u7684index\u3002 7.3.5. buildSubGraph \u00b6 buildSubGraph ( input_tensor_names , output_tensor_names , subgraph_name ) \u521b\u5efa\u4e00\u4e2asubgraph\uff0c\u5c06\u521b\u5efa\u7684buffer\u4e00\u8d77\u7f16\u8fdb\u4e00\u4e2asubgraph\u3002 :param input_tensor_names\uff1a [str]\u7c7b\u578b\uff0csubgraph\u7684\u8f93\u5165tensor\u540d\u5b57\u5217\u8868\uff0c\u5fc5\u987b\u4f9d\u636e\u4f7f\u7528buildTensor\u521b\u5efa\u8fc7\u7684tensor\u7684\u540d\u5b57 :param output_tensor_names\uff1a [str]\u7c7b\u578b\uff0csubgraph\u7684\u8f93\u51fatensor\u540d\u5b57\u5217\u8868\uff0c\u5fc5\u987b\u4f9d\u636e\u4f7f\u7528buildTensor\u521b\u5efa\u8fc7\u7684tensor\u7684\u540d\u5b57 :param subgraph_name\uff1a str\u7c7b\u578b\uff0c\u6307\u5b9a\u4e00\u4e2a\u540d\u5b57\u6807\u8bc6subgraph :return\uff1a \u8fd4\u56desubgraph\u7684flatbuffer offset 7.3.6. createModel \u00b6 createModel ( version , operator_codes , subgraphs , description , buffers , metadata_buffer = None ) \u5c06\u6240\u6709encoded data \u7f16\u7801\u6210\u5b8c\u6574\u7684tflite flatbuffer\u3002 :param version\uff1a uint; tflite\u7248\u672c\u3002\u4f20\u51653\u5373\u53ef\u3002 :param operator_codes\uff1a [OperatorCode]; OperatorCode\u5217\u8868\uff0c\u4f7f\u7528buildOperatorCode\u521b\u5efa\uff0c\u4fdd\u5b58\u5728TFLitePostProcess.operator_codes\u4e2d\u3002 :param subgraphs\uff1a [SubGraph];SubGraph\u5217\u8868,\u4fdd\u5b58\u5728TFLitePostProcess.subgraphs\u4e2d\u3002 :param description\uff1a string;\u7528\u6237\u6307\u5b9a\u4e00\u4e2a\u63cf\u8ff0\u5b57\u7b26\u4e32\u3002 :param buffers\uff1a [Buffer];buffer\u5217\u8868\uff0c\u4f7f\u7528buildBuffer\u521b\u5efa\uff0c\u4fdd\u5b58\u5728TFLitePostProcess.buffers\u5217\u8868\u4e2d\u3002 :param metadata_buffer\uff1a [int];\u76ee\u524d\u6ca1\u4f7f\u7528\u5230\uff0c\u4f20None\u3002 :return\uff1a \u8fd4\u56de\u521b\u5efa\u7684\u5b8c\u6574tflite flatbuffer\u53e5\u67c4 7.3.7. createFlexBuffer \u00b6 createFlexBuffer(lib, values) OperatorCode\u7c7b\u578b\u4e3atflite.BuiltinOperator.BuiltinOperator().CUSTOM\u7b97\u5b50\u53c2\u6570\u4f20\u9012\u3002 :param lib\uff1a the flexbuffer handle ,TFLitePostProcess.lib\u5373\u53ef\u3002 :param values\uff1a tuple\u7c7b\u578b\u7684\u5217\u8868\uff0ctuple\u7684\u7c7b\u578b\u4e3a(str, int/float, str)\uff1a \u7b2c\u4e00\u9879\u4e3avalue\u540d\u79f0\uff0c\u7b97\u5b50\u5b9e\u4f5c\u8005\u4f7f\u7528\u8fd9\u4e2a\u540d\u5b57\u6765\u89e3\u6790value \u7b2c\u4e8c\u9879\u4e3avalue\uff0c \u7b2c\u4e09\u9879\u4e3avalue\u7c7b\u578b\u7684\u5b57\u7b26\u4e32\uff0c\u6807\u8bc6\u7b2c\u4e8c\u9879\u7684\u7c7b\u578b\uff0c\u5982\u679c\u7b2c\u4e8c\u9879\u4e3aint \u8fd9\u91cc\u586b'int'\uff1b\u5982\u679c\u662ffloat\u7c7b\u578b\uff0c\u8fd9\u91cc\u586b'float'\u3002\u76ee\u524d\u4ec5\u652f\u6301float\u548cint\u7c7b\u578b\u3002 :return\uff1a \u8fd4\u56de\u7f16\u7801\u540e\u7684bytearray\u3002 \u4f7f\u7528sample\uff1a cus_options = [( b \"input_coordinate_x1\" , 0 , \"int\" ), ( b \"input_coordinate_y1\" , 1 , \"int\" ), ( b \"input_coordinate_x2\" , 2 , \"int\" ), ( b \"input_coordinate_y2\" , 3 , \"int\" ), ( b \"nms_score_threshold\" , 0.4 , \"float\" ), ( b \"nms_iou_threshold\" , 0.45 , \"float\" )] options = sgs_builder . createFlexBuffer ( sgs_builder . lib , cus_options ) 7.3.8. buildBoxDecoding \u00b6 buildBoxDecoding(unpacked_box) \u8f93\u5165bbox\u5750\u6807\u89e3\u7801\u7f51\u7edc\u524d\uff0c\u5206\u79bbBackbone\u7f51\u7edc\u7684\u8f93\u51fabbox\u5750\u6807\u3002 :param unpacked_box\uff1a bbox\u7684\u8f93\u5165tensor\u540d\u5b57\u5217\u8868\uff0c\u4e3a\u56db\u4e2atensor :return\uff1a \u8fd4\u56dex1,y1,x2,y2 \u56db\u4e2adecoded tensor\u7684\u540d\u5b57\u5217\u8868\u3002 7.4. SigmaStar\u5b9a\u5236\u540e\u5904\u7406\u7b97\u5b50 \u00b6 SigmaStar\u5b9a\u5236\u7684\u540e\u5904\u7406\u7b97\u5b50OperatorCode\u7c7b\u578b\u4e3a tflite.BuiltinOperator.BuiltinOperator().CUSTOM \uff0c\u56e0\u6b64\u9700\u8981\u4f7f\u7528createFlexBuffer\u7684API\u6765\u4f20\u9012\u53c2\u6570\uff0c\u53c2\u6570\u4f20\u9012\u5fc5\u987b\u4f7f\u7528\u4e09\u9879\u7684tuple\u7c7b\u578b\u4e14\u4e3a(str, int/float, str)\u3002 7.4.1. PostProcess_Unpack \u00b6 PostProcess_Unpack\u7b97\u5b50\u76ee\u7684\u662f\u5c06Backbone\u7f51\u7edc\u7684\u8f93\u51fa\u5206\u79bb\uff0c\u652f\u6301\u6700\u5927\u5206\u79bb\u51fa7\u4e2a\u5206\u652f\u3002 \u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a cus_options = [( b \"x_offset\" , 0 , \"int\" ), ( b \"x_lengh\" , 1 , \"int\" ), ( b \"y_offset\" , 1 , \"int\" ), ( b \"y_lengh\" , 1 , \"int\" ), ( b \"w_offset\" , 2 , \"int\" ), ( b \"w_lengh\" , 1 , \"int\" ), ( b \"h_offset\" , 3 , \"int\" ), ( b \"h_lengh\" , 1 , \"int\" ), ( b \"confidence_offset\" , 0 , \"int\" ), ( b \"confidence_lengh\" , 0 , \"int\" ), ( b \"scores_offset\" , 0 , \"int\" ), ( b \"scores_lengh\" , 0 , \"int\" ), ( b \"max_score\" , 0 , \"int\" )] \u6839\u636e\u7f51\u7edc\u7684\u4e0d\u540c\uff0c\u4fee\u6539\u6bcf\u884c\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u3002\u5982\u679c\u8be5\u5206\u652f\u4e0d\u9700\u8981\uff0c\u5219\u5bf9\u5e94\u7684offset\u548clengh\u586b0\u3002 x_offset\uff1a \u5206\u51fa\u5750\u6807x\u504f\u79fb\u91cf x_lengh\uff1a \u5750\u6807x\u957f\u5ea6\uff0c\u4e00\u822c\u4e3a1 y_offset\uff1a \u5206\u51fa\u5750\u6807y\u504f\u79fb\u91cf y_lengh\uff1a \u5750\u6807y\u957f\u5ea6\uff0c\u4e00\u822c\u4e3a1 w_offset\uff1a \u5206\u51fa\u5750\u6807w\u504f\u79fb\u91cf w_lengh\uff1a \u5750\u6807w\u957f\u5ea6\uff0c\u4e00\u822c\u4e3a1 h_offset\uff1a \u5206\u51fa\u5750\u6807h\u504f\u79fb\u91cf h_lengh\uff1a \u5750\u6807h\u957f\u5ea6\uff0c\u4e00\u822c\u4e3a1 confidence_offset\uff1a \u5206\u51faconfidence\u504f\u79fb\u91cf confidence_lengh\uff1a confidence\u957f\u5ea6\uff0c\u4e00\u822c\u4e3a1 scores_offset\uff1a \u5206\u51fascores\u504f\u79fb\u91cf scores_lengh\uff1a scores\u957f\u5ea6\uff0c\u4e3a\u7f51\u7edc\u7684\u5206\u7c7b\u6570\u91cf\u3002 max_score\uff1a \u4e00\u822c\u4e3a1 \u901a\u8fc7\u53c2\u6570\u8bbe\u7f6e\u4e0d\u540c\uff0c\u7ed3\u5408bbox\u5750\u6807\u89e3\u7801\u6a21\u5757\uff0cPostProcess_Unpack\u6709\u5982\u4e0b\u540e\u5904\u7406\u7f51\u7edc\u793a\u4f8b\uff1a 1.\u5206\u79bbbbox\u5750\u6807 2.\u5206\u79bbbbox\u5750\u6807\u3001confidence\u3001scores\u3001max_score 7.4.2. TFLite_Detection_NMS \u00b6 TFLite_Detection_NMS\u7b97\u5b50\u5c06NMS\u64cd\u4f5c\u7ec4\u5408\u6210\u4e3a\u4e00\u4e2a\u7b97\u5b50\uff0c\u4e0ePostProcess_Unpack\u7b97\u5b50\u914d\u5408\uff0c\u6700\u5927\u652f\u63017\u4e2a\u8f93\u5165\uff0c\u8f93\u51fa\u4e3a4\u4e2a\u62165\u4e2a\u3002 \u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a cus_options = [( b \"input_coordinate_x1\" , 1 , \"int\" ), ( b \"input_coordinate_y1\" , 0 , \"int\" ), ( b \"input_coordinate_x2\" , 3 , \"int\" ), ( b \"input_coordinate_y2\" , 2 , \"int\" ), ( b \"input_class_idx\" , 5 , \"int\" ), ( b \"input_score_idx\" , 4 , \"int\" ), ( b \"input_confidence_idx\" , - 1 , \"int\" ), ( b \"input_facecoordinate_idx\" , - 1 , \"int\" ), ( b \"output_detection_boxes_idx\" , 0 , \"int\" ), ( b \"output_detection_classes_idx\" , 1 , \"int\" ), ( b \"output_detection_scores_idx\" , 2 , \"int\" ), ( b \"output_num_detection_idx\" , 3 , \"int\" ), ( b \"output_detection_boxes_index_idx\" , - 1 , \"int\" ), ( b \"nms\" , 0 , \"float\" ), ( b \"clip\" , 0 , \"float\" ), ( b \"max_detections\" , 10 , \"int\" ), ( b \"max_classes_per_detection\" , 1 , \"int\" ), ( b \"detections_per_class\" , 1 , \"int\" ), ( b \"num_classes\" , 90 , \"int\" ), ( b \"bmax_score\" , 0 , \"int\" ), ( b \"num_classes_with_background\" , 1 , \"int\" ), ( b \"nms_score_threshold\" , 9.99999994e-09 , \"float\" ), ( b \"nms_iou_threshold\" , 0.600000024 , \"float\" )] \u6839\u636e\u7f51\u7edc\u7684\u4e0d\u540c\uff0c\u4fee\u6539\u6bcf\u884c\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u3002\u5982\u679c\u8be5\u53c2\u6570\u4e0d\u9700\u8981\uff0c\u5219\u5bf9\u5e94\u53c2\u6570\u586b-1\u3002 input_coordinate_x1\uff1a \u5bf9\u5e94PostProcess_Unpack\u7b97\u5b50x_offset\u7684\u5e8f\u53f7\u3002 input_coordinate_y1\uff1a \u5bf9\u5e94PostProcess_Unpack\u7b97\u5b50y_offset\u7684\u5e8f\u53f7\u3002 input_coordinate_x2\uff1a \u5bf9\u5e94PostProcess_Unpack\u7b97\u5b50w_offset\u7684\u5e8f\u53f7\u3002 input_coordinate_y2\uff1a \u5bf9\u5e94PostProcess_Unpack\u7b97\u5b50h_offset\u7684\u5e8f\u53f7\u3002 input_class_idx\uff1a \u5bf9\u5e94\u7c7b\u522b\u7684\u8f93\u5165\u5e8f\u53f7\u3002 input_score_idx\uff1a \u5bf9\u5e94PostProcess_Unpack\u7b97\u5b50score\u7684\u5e8f\u53f7\u3002 input_confidence_idx\uff1a \u5bf9\u5e94PostProcess_Unpack\u7b97\u5b50confidence\u7684\u5e8f\u53f7\u3002 input_facecoordinate_idx\uff1a \u9ed8\u8ba4\u4e3a-1\u3002 output_detection_boxes_idx\uff1a \u8f93\u51fa\u68c0\u6d4bbbox\u7684\u5750\u6807\u5e8f\u53f7\u3002 output_detection_classes_idx\uff1a \u8f93\u51fa\u5bf9\u5e94\u68c0\u6d4b\u7684\u7c7b\u522b\u5e8f\u53f7\u3002 output_detection_scores_idx\uff1a \u8f93\u51fa\u5bf9\u5e94\u68c0\u6d4b\u7684\u5206\u503c\u5e8f\u53f7\u3002 output_num_detection_idx\uff1a \u8f93\u51fa\u5171\u68c0\u6d4b\u5230\u7684\u76ee\u6807\u4e2a\u6570\u5e8f\u53f7\u3002 output_detection_boxes_index_idx\uff1a \u8f93\u51fa\u68c0\u6d4b\u5230\u76ee\u6807\u6392\u5e8f\u4e0b\u6807\u7684\u5e8f\u53f7\u3002 nms\uff1a 0\u4e3aFast NMS\uff0c1\u4e3aNormal NMS\u3002 clip\uff1a \u662f\u5426\u622a\u65ad\u8d8a\u754c\u7684bbox\u5750\u6807\u503c\uff0c1\u4e3a\u622a\u65ad\uff0c0\u4e3a\u4fdd\u7559\u3002 max_detections\uff1a \u6700\u5927\u8f93\u51fa\u76ee\u6807\u4e2a\u6570\u3002 max_classes_per_detection\uff1a \u9ed8\u8ba4\u4e3a1\u3002 detections_per_class\uff1a \u9ed8\u8ba4\u4e3a1\u3002 num_classes\uff1a \u7f51\u7edc\u6a21\u578b\u7c7b\u522b\u6570\u91cf\uff08\u4e0d\u5305\u542b\u80cc\u666f\uff0c\u6b64\u9009\u9879\u4ec5\u4e3aSSD\u540e\u5904\u7406\u8bbe\u7f6e\uff09\u3002 bmax_score\uff1a \u5bf9\u5e94PostProcess_Unpack\u7b97\u5b50max_score\u65f6\uff0c\u4e3a1\uff0c\u5426\u5219\u4e3a0\u3002 num_classes_with_background\uff1a \u9ed8\u8ba4\u4e3a1\u3002 nms_score_threshold\uff1a NMS\u5206\u6570\u9608\u503c\u3002 nms_iou_threshold\uff1a NMS\u7684IoU\u9608\u503c\u3002 Please Note: TFLite_Detection_NMS\u7b97\u5b50\u6700\u5927\u652f\u630124576\u4e2abbox\u8f93\u5165\u3002 7.4.2.1. \u9009\u62e9\u662f\u5426\u9700\u8981NMS\u8f93\u51faindex\u4fe1\u606f \u00b6 NMS\u53ef\u4ee5\u9009\u62e94\u4e2a\u62165\u4e2a\u8f93\u51fa\uff0c\u5176\u4e2d\u5fc5\u90094\u4e2a\u8f93\u51fa\u4e3a\uff1a\u68c0\u6d4bbbox\u5750\u6807\u3001\u68c0\u6d4b\u7c7b\u522b\u3001\u68c0\u6d4b\u5206\u503c\u3001\u68c0\u6d4b\u4e2a\u6570\uff0c\u53ef\u90091\u4e2a\u8f93\u51fa\u4e3a\uff1a\u68c0\u6d4bbbox\u5bf9\u5e94\u7684\u4e0b\u6807\u3002 \u5982\u679c\u9700\u8981\u589e\u52a0\u68c0\u6d4bbbox\u5bf9\u5e94\u7684\u4e0b\u6807\u8f93\u51fa\uff0c\u6309\u7167\u5982\u4e0b\u65b9\u6cd5\u4fee\u6539\u540e\u5904\u7406python\u6587\u4ef6\u3002 \u4ee5\u4e0b\u793a\u4f8b\u4ee5ssd_mobilenet_v1\u6a21\u578b\u7684\u540e\u5904\u7406\u4e3a\u4f8b\uff0c\u5b8c\u6574\u4ee3\u7801\u8be6\u89c1 SGS_IPU_SDK/Scripts/postprocess/postprocess_method/ssd_mobilenet_v1_index_postprocess.py \u521b\u5efa\u201cdetectionIndex\u201dTensor\uff0c\u63d2\u5728\u201cnumDetections\u201dTensor\u540e\u9762\uff0c\u7ea2\u6846\u5185\u4e3a\u6dfb\u52a0\u5185\u5bb9\uff1a sgs_builder . buildTensor ( model_config [ \"out_shapes\" ][ 3 ], \"numDetections\" ) nms_out_tensors . append ( \"numDetections\" ) sgs_builder . buildTensor ( model_config [ \"out_shapes\" ][ 4 ], \"detectionIndex\" ) nms_out_tensors . append ( \"detectionIndex\" ) cus_code = 'TFLite_Detection_NMS' sgs_builder . buildOperatorCode ( \"SGS_nms\" , tflite . BuiltinOperator . BuiltinOperator () . CUSTOM , cus_code ) \u4fee\u6539TFLite_Detection_NMS\u7b97\u5b50\u53c2\u6570\uff0coutput_detection_boxes_index_idx\u586b4\uff1a cus_options = [( b \"input_coordinate_x1\" , 1 , \"int\" ), ( b \"input_coordinate_y1\" , 0 , \"int\" ), ( b \"input_coordinate_x2\" , 3 , \"int\" ), ( b \"input_coordinate_y2\" , 2 , \"int\" ), ( b \"input_class_idx\" , 5 , \"int\" ), ( b \"input_score_idx\" , 4 , \"int\" ), ( b \"input_confidence_idx\" , - 1 , \"int\" ), ( b \"input_facecoordinate_idx\" , - 1 , \"int\" ), ( b \"output_detection_boxes_idx\" , 0 , \"int\" ), ( b \"output_detection_classes_idx\" , 1 , \"int\" ), ( b \"output_detection_scores_idx\" , 2 , \"int\" ), ( b \"output_num_detection_idx\" , 3 , \"int\" ), ( b \"output_detection_boxes_index_idx\" , 4 , \"int\" ), ( b \"nms\" , 0 , \"float\" ), ( b \"clip\" , 0 , \"float\" ), ( b \"max_detections\" , 10 , \"int\" ), ( b \"max_classes_per_detection\" , 1 , \"int\" ), ( b \"detections_per_class\" , 1 , \"int\" ), ( b \"num_classes\" , 90 , \"int\" ), ( b \"bmax_score\" , 0 , \"int\" ), ( b \"num_classes_with_background\" , 1 , \"int\" ), ( b \"nms_score_threshold\" , 9.99999994e-09 , \"float\" ), ( b \"nms_iou_threshold\" , 0.600000024 , \"float\" )] \u521b\u5efa\u7f51\u7edc\u6a21\u578b\u8f93\u51faTensor\u540d\u79f0\uff1a network_out_tensors = [] network_out_tensors . append ( \"detectionBoxes\" ) network_out_tensors . append ( \"detectionClasses\" ) network_out_tensors . append ( \"detectionScores\" ) network_out_tensors . append ( \"numDetections\" ) network_out_tensors . append ( \"detectionIndex\" ) sgs_builder . subgraphs . append ( sgs_builder . buildSubGraph ( model_config [ \"input\" ], network_out_tensors , model_config [ \"name\" ])) \u4fee\u6539\u6a21\u578b\u914d\u7f6e\u53c2\u6570\uff0cout_shapes\u589e\u52a0detectionIndex\u7684\u8f93\u51fashape\uff1a model_config = { \"name\" : \"ssdlite_mobilenet_v2\" , \"input\" : [ \"Squeeze\" , \"convert_scores\" ], \"input_shape\" : [[ 1 , 1917 , 4 ],[ 1 , 1917 , 91 ]], \"shape\" : [ 1 , 1917 ], \"out_shapes\" : [[ 1 , 10 , 4 ],[ 1 , 10 ],[ 1 , 10 ],[ 1 ],[ 1 , 10 ]]} \u4fee\u6539\u5b8c\u6210\u540e\uff0c\u751f\u6210\u7684\u540e\u5904\u7406\u6a21\u578bNMS\u8f93\u51fa\u5c31\u67095\u4e2a\u8f93\u51fa\u3002 Please Note: \u8fde\u63a5backbone\u7f51\u7edc\u65f6\u8bf7\u5148\u4fee\u6539input_config.ini\u6587\u4ef6\u4e2doutputs\uff0c\u56e0\u4e3a\u591a\u4e86\u4e00\u4e2a\u8f93\u51faTensor\uff0c\u907f\u514d\u8fde\u63a5\u7f51\u7edc\u65f6\u53d1\u751f\u9519\u8bef\u3002 7.5. \u83b7\u53d6\u79bb\u7ebfanchor\u6570\u636e \u00b6 Caffe\u7f51\u7edc\u4e2d\u5982\u679cPriorBox\u8282\u70b9\u4e2d\u6570\u636e\u662f\u79bb\u7ebf\u751f\u6210\u7684\uff0c\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u6cd5\u83b7\u53d6\u3002 \u5177\u4f53\u7f51\u7edc\u8bf7\u53c2\u8003SGS_Models/caffe/caffe_ssd_mobilenet_v1\u3002 \u8f6c\u6362\u5e26PriorBox\u8282\u70b9\u7684backbone\u7f51\u7edc\uff0c\u4f7f\u7528Netron\u6253\u5f00\u7f51\u7edcprototxt\u6587\u4ef6\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u4fee\u6539\u5bf9\u5e94\u7684input_config.ini\u6587\u4ef6\u548cConvertTool\u8f6c\u6362\u547d\u4ee4\uff0c\u67093\u4e2a\u8f93\u51fa\uff0c\u751f\u6210backbone\u7f51\u7edc\u90e8\u5206\u3002 \u8f6c\u6362\u5b8c\u6210\u540e\uff0c\u6240\u6709PriorBox\u8282\u70b9\u751f\u6210\u4e3a\u4e00\u4e2a\u8282\u70b9\u3002\u4f7f\u7528Netron\u6253\u5f00\u751f\u6210\u7684backbone\u7f51\u7edc\uff0c\u5148\u70b9\u51fbmbox_priorbox\u8282\u70b9\uff0c\u518d\u70b9\u51fb\u7ea2\u6846\u4e2d\u7684\u4fdd\u5b58\u6309\u94ae\uff0c\u5373\u53ef\u5c06anchor\u7684\u6570\u636e\u4fdd\u5b58\u4e3a.npy\u6587\u4ef6\u3002 \u5728\u914d\u7f6ebbox\u5750\u6807\u89e3\u7801\u6a21\u5757\u65f6\uff0c\u4f7f\u7528numpy.load\u8bfb\u53d6.npy\u6587\u4ef6\uff0c\u914d\u7f6e\u597d\u5bf9\u5e94\u7684\u53d8\u91cf\u3002\u5982\u679c\u5df2\u6709anchor\u6570\u636e\uff0c\u53ef\u4ee5\u4e0d\u7528\u6b64\u65b9\u6cd5\uff0c\u76f4\u63a5\u4f7f\u7528anchor\u6570\u636e\u3002 \u540e\u5904\u7406python\u6587\u4ef6\u5728\u7f16\u5199\u65f6\uff0c\u589e\u52a0\u6a21\u578b\u914d\u7f6e\u7684\u8f93\u5165\u4e3a3\u4e2a\u8f93\u5165\uff0c\u589e\u52a0mbox_priorbox\u7684shape\uff0c\u5177\u4f53\u4ee3\u7801\u8be6\u89c1 SGS_IPU_SDK/Scripts/postprocess/postprocess_method/caffe_ssd_mobilenet_v1_postprocess.py model_config = { \"name\" : \"caffe_ssd_mobilenet_v1\" , \"input\" : [ \"mbox_loc\" , \"mbox_conf_softmax\" , \"mbox_priorbox\" ], \"input_shape\" : [[ 1 , 1917 , 4 ],[ 1 , 1917 , 21 ],[ 1917 , 4 ]], \"shape\" : [ 1 , 1917 ], \"out_shapes\" : [[ 1 , 10 , 4 ],[ 1 , 10 ],[ 1 , 10 ],[ 1 ]]} \u751f\u6210\u540e\u5904\u7406\u6a21\u578b\u540e\uff0c\u4f7f\u7528concat_net\u5de5\u5177\u8fde\u63a5\u4f1a\u81ea\u52a8\u6e05\u9664mbox_priorbox\u8282\u70b9\u3002 7.6. \u4e3e\u4f8b\u4f7f\u7528 \u00b6 \u4ee5\u4e0b\u793a\u4f8b\u4ee5caffe_yolo_v2\u6a21\u578b\u7684\u540e\u5904\u7406\u4e3a\u4f8b\uff0c\u5177\u4f53\u4ee3\u7801\u8be6\u89c1 SGS_IPU_SDK/Scripts/postprocess/postprocess_method/caffe_yolo_v2_postprocess.py 7.6.1. \u521b\u5efa\u4e00\u4e2aTFLitePostProcess\u5b9e\u4f8b \u00b6 \u9996\u5148\u914d\u7f6econfig\u5b57\u5178\u53d8\u91cf\uff0c\u6839\u636ebbox\u5750\u6807\u89e3\u7801\u7684\u5b9e\u9645\u8ba1\u7b97\u65b9\u6cd5\u914d\u7f6econfig\u7684\u5404\u4e2a\u53c2\u6570\u3002 \u914d\u7f6e\u53c2\u6570\uff1a box_num = 5 side_x = 13 side_y = 13 ppw = anchor . ones ( 845 ) px = anchor . index_div_linear ( 1 , 1 , 0 , box_num , side_x , side_y ) pph = anchor . ones ( 845 ) py = anchor . index_div_linear ( 1 , 1 , 0 , side_x * box_num , side_y , 1 ) pw = anchor . ones ( 845 ) ph = anchor . ones ( 845 ) sx = anchor . ns ( 845 , 1.0 / 13 ) sy = anchor . ns ( 845 , 1.0 / 13 ) biases = [[ 1.3221 , 1.73145 ],[ 3.19275 , 4.00944 ],[ 5.05587 , 8.09892 ],[ 9.47112 , 4.84053 ],[ 11.2364 , 10.0071 ]] sw = [ x [ 0 ] / ( 2 * 13 ) for x in biases ] * ( 13 * 13 ) sh = [ x [ 1 ] / ( 2 * 13 ) for x in biases ] * ( 13 * 13 ) \u914d\u7f6econfig\u5b57\u5178\u53d8\u91cf\uff1a config = { \"shape\" : [ 1 , 845 ], \"tx_func\" : ( tflite . BuiltinOperator . BuiltinOperator () . LOGISTIC , None ), \"ty_func\" : ( tflite . BuiltinOperator . BuiltinOperator () . LOGISTIC , None ), \"tw_func\" : ( tflite . BuiltinOperator . BuiltinOperator () . RESHAPE , None ), \"th_func\" : ( tflite . BuiltinOperator . BuiltinOperator () . RESHAPE , None ), \"x_scale\" : 0.1 , \"y_scale\" : 0.1 , \"w_scale\" : 1 , \"h_scale\" : 1 , \"anchor_selector\" : \"constant\" , \"pw\" : pw , \"ph\" : ph , \"pw_func\" : ( None , None ), \"ph_func\" : ( None , None ), \"ppw\" : ppw , \"px\" : px , \"pph\" : pph , \"py\" : py , \"sx\" : sx , \"sy\" : sy , \"sw\" : sw , \"sh\" : sh } \u521b\u5efaTFLitePostProcess\u5b9e\u4f8b\uff1a yolov2 = TFLitePostProcess(config) 7.6.2. \u521b\u5efa\u5e38\u91cfTensor \u00b6 \u5c06float\u5217\u8868pack\u6210bytearray py_vector = [] for value in self . py : py_vector += bytearray ( struct . pack ( \"f\" , value )) \u4f7f\u7528bytearray\u521b\u5efa\u5e38\u91cfbuffer self . buildBuffer ( \"py_buffer\" , py_vector ) \u4f7f\u7528\u5e38\u91cfbuffer\u521b\u5efatensor self . buildTensor ([ len ( self . py )], \"py_tensor\" , self . getBufferByName ( \"py_buffer\" )) 7.6.3. \u521b\u5efa\u4e00\u4e2a\u7b97\u5b50 \u00b6 \u521b\u5efa\u4e00\u4e2a\u53cc\u53e3Mul\u7b97\u5b50\uff1a score1_out_tensors = [] score1_in_tensors = [] score1_in_tensors . append ( \"confidence_tensor\" ) score1_in_tensors . append ( \"score0_tensor\" ) sgs_builder . buildTensor ([ 1 , 845 ], \"SGS_score1\" ) score1_out_tensors . append ( \"SGS_score1\" ) sgs_builder . buildOperatorCode ( \"SGS_score_mul\" , tflite . BuiltinOperator . BuiltinOperator () . MUL ) sgs_builder . buildOperator ( \"SGS_score_mul\" , score1_in_tensors , score1_out_tensors ) \u521b\u5efa\u4e00\u4e2aReshape\u7b97\u5b50\uff0c\u9700\u8981\u521b\u5efa\u5e38\u91cfTensor\uff1a reshape_out_shape1 = [ 1 , 4695 , 4 ] reshape_out_tensors1 = [] reshape_in_tensors1 = [] sgs_builder . buildBuffer ( 'NULL' ) sgs_builder . buildTensor ([ 1 , 4695 , 1 , 4 ], '283_in' ) reshape_in_tensors1 . append ( '283_in' ) reshape_vector1 = [] for value in reshape_out_shape1 : reshape_vector1 += bytearray ( struct . pack ( \"i\" , value )) sgs_builder . buildBuffer ( \"reshape_vector1\" , reshape_vector1 ) sgs_builder . buildTensor ([ len ( reshape_out_shape1 )], \"reshape_shape1\" , sgs_builder . getBufferByName ( \"reshape_vector1\" ), tflite . TensorType . TensorType () . INT32 ) reshape_in_tensors1 . append ( \"reshape_shape1\" ) sgs_builder . buildTensor ( reshape_out_shape1 , \"reshape_tensor1\" ) reshape_out_tensors1 . append ( \"reshape_tensor1\" ) sgs_builder . buildOperatorCode ( \"SGS_reshape1\" , tflite . BuiltinOperator . BuiltinOperator () . RESHAPE ) reshape_newshape1 = sgs_builder . createReshapeOptions ( reshape_out_shape1 ) sgs_builder . buildOperator ( \"SGS_reshape1\" , reshape_in_tensors1 , reshape_out_tensors1 , tflite . BuiltinOptions . BuiltinOptions () . ReshapeOptions , reshape_newshape1 ) 7.6.4. \u521b\u5efa\u5ba2\u5236\u5316\u7b97\u5b50 \u00b6 \u521b\u5efaOperatorCode sgs_builder . buildOperatorCode ( \"SGS_nms\" , tflite . BuiltinOperator . BuiltinOperator () . CUSTOM , cus_code ) cus_options = [( b \"input_coordinate_x1\" , 0 , \"int\" ), ( b \"input_coordinate_y1\" , 1 , \"int\" ), ( b \"input_coordinate_x2\" , 2 , \"int\" ), ( b \"input_coordinate_y2\" , 3 , \"int\" ), ( b \"input_class_idx\" , 6 , \"int\" ), ( b \"input_score_idx\" , 5 , \"int\" ), ( b \"input_confidence_idx\" , 4 , \"int\" ), ( b \"input_facecoordinate_idx\" , - 1 , \"int\" ), ( b \"output_detection_boxes_idx\" , 0 , \"int\" ), ( b \"output_detection_classes_idx\" , 1 , \"int\" ), ( b \"output_detection_scores_idx\" , 2 , \"int\" ), ( b \"output_num_detection_idx\" , 3 , \"int\" ), ( b \"output_detection_boxes_index_idx \" , - 1 , \"int\" ), ( b \"nms\" , 0 , \"int\" ), ( b \"clip\" , 0 , \"int\" ), ( b \"max_detections\" , 100 , \"int\" ), ( b \"max_classes_per_detection\" , 1 , \"int\" ), ( b \"detections_per_class\" , 1 , \"int\" ), ( b \"num_classes\" , 20 , \"int\" ), ( b \"bmax_score\" , 1 , \"int\" ), ( b \"num_classes_with_background\" , 1 , \"int\" ), ( b \"nms_score_threshold\" , 0.4 , \"float\" ), ( b \"nms_iou_threshold\" , 0.45 , \"float\" )] \u521b\u5efaflexbuffer options = sgs_builder . createFlexBuffer ( sgs_builder . lib , cus_options ) \u4f7f\u7528flexbuffer\u521b\u5efaOperator sgs_builder . buildOperator ( \"SGS_nms\" , nms_in_tensors , nms_out_tensors , None , None , options ) 7.6.5. \u521b\u5efamodel\u5e76\u4fdd\u5b58\u4e3a\u6a21\u578b\u6587\u4ef6 \u00b6 \u521b\u5efasubgraph sgs_builder . subgraphs . append ( sgs_builder . buildSubGraph ([ 'conv23' ], nms_out_tensors , 'caffe_yolo_v2' )) \u521b\u5efamodel sgs_builder . model = sgs_builder . createModel ( 3 , sgs_builder . operator_codes , sgs_builder . subgraphs , 'caffe_yolo_v2' , sgs_builder . buffers ) file_identifier = b 'TFL3' sgs_builder . builder . Finish ( sgs_builder . model , file_identifier ) \u8f93\u51fa\u6a21\u578b buf = sgs_builder . builder . Output () \u4fdd\u5b58\u6a21\u578b\u5230\u6587\u4ef6 outfilename = 'caffe_yolo_v2_postprocess.sim' with open ( outfilename , 'wb' ) as f : f . write ( buf )","title":"SigmaStar Post Processing Module"},{"location":"module/User_Guide/Develop/SigmaStar_Post_Processing_Module.html#71","text":"SigmaStar\u540e\u5904\u7406\u6a21\u5757\u4f4d\u7f6e\u5728 SGS_IPU_SDK/Scripts/postprocess \u3002 \u8be5\u6a21\u5757\u4e3b\u8981\u4ee5TFLitePostProcess\u7c7b\u5b9e\u73b0\u4e86\u4e00\u5957\u751f\u6210TFLite Flatbuffer\u7684API\u548c\u4e00\u4e2a\u68c0\u6d4b\u7f51\u7edc\u540e\u5904\u7406BBOX\u7684\u901a\u7528\u751f\u6210\u65b9\u6cd5\u3002 \u4f7f\u7528\u8be5\u6a21\u5757\u65f6\uff0c\u5148\u6839\u636e\u540e\u5904\u7406\u65b9\u6cd5\u7f16\u5199python\u540e\u5904\u7406\u6587\u4ef6\uff0c\u751f\u6210\u72ec\u7acb\u7684\u540e\u5904\u7406\u6a21\u578b\u6587\u4ef6\uff0c\u518d\u4f7f\u7528\u7f51\u7edc\u8fde\u63a5\u7a0b\u5e8f\u5c06Backbone\u7f51\u7edc\u6a21\u578b\u548c\u540e\u5904\u7406\u6a21\u578b\u8fde\u63a5\u6210\u4e00\u4e2a\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u3002 \u7f16\u5199\u7684python\u6587\u4ef6\u53ef\u53c2\u8003 SGS_IPU_SDK/Scripts/postprocess/postprocess_method \u6587\u4ef6\u5939\u4e0b\u7684\u793a\u4f8b\u3002 \u7f16\u5199\u5b8c\u6210\u540e\uff0c\u751f\u6210\u65b9\u6cd5\uff1a \u7f16\u5199\u6587\u4ef6\u4fdd\u5b58\u5728 SGS_IPU_SDK/Scripts/postprocess/postprocess_method \uff0c\u5728 SGS_IPU_SDK/Scripts/postprocess/postprocess_method/__ini__.py \u4e2d\u6dfb\u52a0\u521a\u521a\u4fdd\u5b58\u7684\u6587\u4ef6\u540d\u79f0\uff0c\u4ee5 caffe_yolo_v2_postprocess.py \u6587\u4ef6\u4e3a\u4f8b\uff0c\u7136\u540e\u5728\u76ee\u5f55 SGS_IPU_SDK/Scripts/postprocess/ \u5904\u8f93\u5165\u547d\u4ee4\uff1a python3 postprocess.py -n caffe_yolo_v2_postprocess \u7f16\u5199\u540e\u5904\u7406\u7f51\u7edcpython\u6587\u4ef6\uff0c\u8fd0\u884cpostprocess.py\u65f6\uff0c -n/--model_name \u53c2\u6570\u7ed9\u5b9a\u7f16\u5199\u7684\u540e\u5904\u7406python\u6587\u4ef6\u8def\u5f84\u3002 \u8fde\u63a5\u7f51\u7edc\u7a0b\u5e8f\u5728 SGS_IPU_SDK/bin/concat_net \uff0c\u540e\u5904\u7406\u7f51\u7edc\u7684\u8f93\u5165\u540d\u79f0\u5728\u8bbe\u7f6e\u65f6\u9700\u4e0eBackbone\u7f51\u7edc\u8f93\u51fa\u7684\u540d\u79f0\u76f8\u7b26\uff0c\u5426\u5219\u5728\u8fde\u63a5\u7f51\u7edc\u6a21\u578b\u65f6\u4f1a\u53d1\u751f\u9519\u8bef\u3002 concat_net\u7684\u53c2\u6570\u8bf4\u660e\u5982\u4e0b\uff1a --mode\uff1a \u7f51\u7edc\u8fde\u63a5\u6a21\u5f0f\uff1aconcat\u6216append\u3002\u8fde\u63a5Backbone\u7f51\u7edc\u4e0e\u540e\u5904\u7406\u7f51\u7edc\u8bf7\u4f7f\u7528append\u6a21\u5f0f\u3002 --transform\uff1a \u914d\u7f6e\u6587\u4ef6\uff0c\u8def\u5f84\u4e3aSGS_IPU_SDK/cfg/CompilerConfig.txt\u3002 --input_config\uff1a input_config.ini\u6587\u4ef6\uff0c\u9700\u4f7f\u7528\u5b8c\u6574\u7f51\u7edc\u7684\u914d\u7f6e\u6587\u4ef6\u3002\u5b8c\u6574\u7f51\u7edc\u7684\u914d\u7f6e\u6587\u4ef6\u4e0eBackbone\u7f51\u7edc\u7684\u914d\u7f6e\u6587\u4ef6\u4ec5\u5728outputs\u7684\u540d\u79f0\u4e0d\u540c\uff0c\u5176\u4f59\u8bbe\u7f6e\u5e94\u5b8c\u5168\u4e00\u81f4\u3002 --model1\uff1a Backbone\u7f51\u7edc\u6a21\u578bsim\u8def\u5f84\u3002 --model2\uff1a \u540e\u5904\u7406\u7f51\u7edc\u6a21\u578bsim\u8def\u5f84\u3002 --output\uff1a \u5408\u6210\u7f51\u7edc\u6a21\u578b\u7684\u8f93\u51fa\u8def\u5f84\u3002 \u4ee5\u4e0b\u7ae0\u8282\u8be6\u7ec6\u4ecb\u7ecd\u5c01\u88c5\u597d\u7684\u540e\u5904\u7406\u6d41\u7a0b\u548c\u81ea\u5b9a\u4e49\u540e\u5904\u7406\u6d41\u7a0b\u7684python\u6587\u4ef6\u7f16\u5199\uff0c\u7528\u4ee5\u751f\u6210\u540e\u5904\u7406\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u3002","title":"7.1.\u6a21\u5757\u4ecb\u7ecd"},{"location":"module/User_Guide/Develop/SigmaStar_Post_Processing_Module.html#72-bbox","text":"\u4e3a\u65b9\u4fbf\u4f7f\u7528\uff0cSigmastar\u5206\u6790\u4e86SSD\u3001YOLOv1\u3001YOLOv2\u3001YOLOv3\u7b49\u7f51\u7edc\u7684\u540e\u5904\u7406\uff0c\u9488\u5bf9bbox\u5750\u6807\u7684\u63d0\u53d6\u5df2\u7ecf\u62bd\u8c61\u51fa\u4e00\u5957\u89e3\u7801\u6d41\u7a0b\uff0c\u4e0d\u540c\u7f51\u7edc\u5728\u7ed3\u6784\u4e0a\u4e00\u6837\uff0c\u4e0d\u540c\u70b9\u5728\u90e8\u5206\u7684\u7b97\u5b50\u4f7f\u7528\u548canchor\u53c2\u6570\u7684\u4f20\u5165\u3002\u56e0\u6b64\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6econfig\u5b57\u5178\u53d8\u91cf\uff0c\u5373\u53ef\u751f\u6210bbox\u5750\u6807\u7684\u540e\u5904\u7406\u7f51\u7edc\u6a21\u578b\u3002bbox\u5750\u6807\u89e3\u7801\u7f51\u7edc\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u751f\u6210bbox\u5750\u6807\u89e3\u7801\u7f51\u7edc\u6a21\u578b\uff0c\u53ef\u4fee\u6539config\u5b57\u5178\u53d8\u91cf\uff0c\u8be5\u53d8\u91cf\u53c2\u6570\u610f\u4e49\u5982\u4e0b\u8868\u6240\u793a\uff1a \u53c2\u6570\u540d \u53c2\u6570\u7c7b\u578b \u63cf\u8ff0\u4fe1\u606f sh ape [ int] bbox tensor\u7684\u5f62\u72b6\uff0c\u6bd4\u5982 [1,837] tx_func (tflite.BuiltinOperator, str) 1. tflite.BuiltinOperator\u4e3atflite\u5185\u7f6e\u7b97\u5b50\u7c7b\u578b\uff1b 2. str\u4e3a\u5b57\u7b26\u4e32 x_scale \u6216\u8005 None \uff1a\u5f531\u4e2d\u6307\u5b9a\u7684\u7b97\u5b50\u4e3a\u5355\u53e3\u7b97\u5b50\u65f6str\u586b None \uff0c\u5982\u679c\u4e3a\u53cc\u53e3\u7b97\u5b50\uff0c\u8fd9\u91cc\u586b x_scale \u5e76\u5728\u6210\u5458\u53d8\u91cf x_scale \u4e2d\u6307\u5b9a\u5176\u503c\u3002 ty_func (tflite.BuiltinOperator, str) 1. tflite.BuiltinOperator\u4e3atflite\u5185\u7f6e\u7b97\u5b50\u7c7b\u578b\uff1b 2. str\u4e3a\u5b57\u7b26\u4e32 y_scale \u6216\u8005 None \uff1a\u5f531\u4e2d\u6307\u5b9a\u7684\u7b97\u5b50\u4e3a\u5355\u53e3\u7b97\u5b50\u65f6str\u586b None \uff0c\u5982\u679c\u4e3a\u53cc\u53e3\u7b97\u5b50\uff0c\u8fd9\u91cc\u586b y_scale \u5e76\u5728\u6210\u5458\u53d8\u91cf y_scale \u4e2d\u6307\u5b9a\u5176\u503c\u3002 tw_func (tflite.BuiltinOperator, str) 1. tflite.BuiltinOperator\u4e3atflite\u5185\u7f6e\u7b97\u5b50\u7c7b\u578b\uff1b 2. str\u4e3a\u5b57\u7b26\u4e32 w_scale \u6216\u8005 None \uff1a\u5f531\u4e2d\u6307\u5b9a\u7684\u7b97\u5b50\u4e3a\u5355\u53e3\u7b97\u5b50\u65f6str\u586b None \uff0c\u5982\u679c\u4e3a\u53cc\u53e3\u7b97\u5b50\uff0c\u8fd9\u91cc\u586bw_scale\u5e76\u5728\u6210\u5458\u53d8\u91cfw_scale\u4e2d\u6307\u5b9a\u5176\u503c\u3002 th_func (tflite.BuiltinOperator, str) 1. tflite.BuiltinOperator\u4e3atflite\u5185\u7f6e\u7b97\u5b50\u7c7b\u578b\uff1b 2. str\u4e3a\u5b57\u7b26\u4e32 h_scale \u6216\u8005 None \uff1a\u5f531\u4e2d\u6307\u5b9a\u7684\u7b97\u5b50\u4e3a\u5355\u53e3\u7b97\u5b50\u65f6str\u586b None \uff0c\u5982\u679c\u4e3a\u53cc\u53e3\u7b97\u5b50\uff0c\u8fd9\u91cc\u586b h_scale \u5e76\u5728\u6210\u5458\u53d8\u91cf h_scale \u4e2d\u6307\u5b9a\u5176\u503c\u3002 x_scale float tx_func[1]\u4e3a x_scale \u65f6\u6307\u5b9a\u7684\u503c y_scale float tx_func[1]\u4e3a y_scale \u65f6\u6307\u5b9a\u7684\u503c w_scale float tx_func[1]\u4e3a w_scale \u65f6\u6307\u5b9a\u7684\u503c h_scale float tx_func[1]\u4e3a h_scale \u65f6\u6307\u5b9a\u7684\u503c anchor_selector str constant \u6216\u8005\u4e3a None \u6307\u5b9apw\u548cph\u662f constant \u8fd8\u662f\u6709pw_func\u548cph_func\u751f\u6210 pw [ float ] \u5982\u679canchor_selector\u4e3a constant \u65f6pw\u6307\u5b9a\u4e3a\u4e00\u4e2afloat\u5217\u8868 ph [ float ] \u5982\u679canchor_selector\u4e3a constant \u65f6ph\u6307\u5b9a\u4e3a\u4e00\u4e2afloat\u5217\u8868 ppw [ float ] \u5982\u679canchor_selector\u4e3a constant \u65f6ppw\u6307\u5b9a\u4e3a\u4e00\u4e2afloat\u5217\u8868 pph [ float ] \u5982\u679canchor_selector\u4e3a constant \u65f6pph\u6307\u5b9a\u4e3a\u4e00\u4e2afloat\u5217\u8868 px [ float ] px\u6307\u5b9a\u4e3a\u4e00\u4e2afloat\u5217\u8868 py [ float ] py\u6307\u5b9a\u4e3a\u4e00\u4e2afloat\u5217\u8868 sx [ float ] sx\u6307\u5b9a\u4e3a\u4e00\u4e2afloat\u5217\u8868 sy [ float ] sy\u6307\u5b9a\u4e3a\u4e00\u4e2afloat\u5217\u8868 sw [ float ] sw\u6307\u5b9a\u4e3a\u4e00\u4e2afloat\u5217\u8868 sh [ float ] sh\u6307\u5b9a\u4e3a\u4e00\u4e2afloat\u5217\u8868","title":"7.2. bbox\u5750\u6807\u89e3\u7801\u6a21\u5757\u4f7f\u7528"},{"location":"module/User_Guide/Develop/SigmaStar_Post_Processing_Module.html#73-tflite-flatbuffer-api","text":"","title":"7.3. \u521b\u5efa\u8282\u70b9TFlite Flatbuffer \u8282\u70b9API"},{"location":"module/User_Guide/Develop/SigmaStar_Post_Processing_Module.html#731-buildbuffer","text":"buildBuffer ( buffer_name , buffer_data = None ) \u521b\u5efa\u4e00\u4e2abuffer\u3002 :param buffer_name\uff1a \u4e00\u4e2a\u5b57\u7b26\u4e32\u7528\u6765\u5728coding\u65f6\u6807\u8bc6buffer\uff0c\u4e0d\u4f1a\u5b58\u5165\u6a21\u578b\u5185\u90e8\u3002 :param buffer_data\uff1a \u9ed8\u8ba4\u5982\u679c\u521b\u5efa\u7684buffer\u662f\u7528\u4e8evariable tensor\u4f7f\u7528\uff0c\u5219\u4f7f\u7528\u9ed8\u8ba4None\u503c\u5373\u53ef\u3002\u5982\u679c\u662f\u5e38\u91cftensor\u7684buffer\u5219\u4f20\u5165data\u7684\u5b57\u8282\u6d41\u3002 :return: \u8fd4\u56de\u7f16\u7801\u540e\u7684\u504f\u79fb\u91cf","title":"7.3.1. buildBuffer"},{"location":"module/User_Guide/Develop/SigmaStar_Post_Processing_Module.html#732-buildtensor","text":"buildTensor ( shape , name , buffer = 0 , type = tflite . TensorType . TensorType () . FLOAT32 ) \u521b\u5efa\u4e00\u4e2atensor\u3002 :param shape\uff1a [int] int\u5217\u8868\u6807\u8bc6tensor\u7684\u5f62\u72b6 :param name\uff1a \u5b57\u7b26\u4e32\u6807\u8bc6\u521b\u5efatensor\u7684\u540d\u5b57 :param buffer\uff1a int\u7c7b\u578b\u7684\u7d22\u5f15\u503c\uff0c\u6807\u8bc6\u5728buffer array\u4e2d\u7684index :param type\uff1atensor\u7c7b\u578btflite.TensorType\uff0c\u9ed8\u8ba4\u4e3aFLOAT32 :return\uff1a \u8fd4\u56de\u521b\u5efa\u7684tensor\u5728subgraph\u7684tensor array\u4e2d\u7684index\uff0c\u5982\u679c\u662f\u5df2\u7ecf\u5b58\u5728\u7684tensor\u5219\u76f4\u63a5\u8fd4\u56deindex","title":"7.3.2. buildTensor"},{"location":"module/User_Guide/Develop/SigmaStar_Post_Processing_Module.html#733-buildoperatorcode","text":"buildOperatorCode ( opcode_name , builtin_code , custom_code = None ) \u521b\u5efa\u6216\u8fd4\u56de\u4e00\u4e2a\u5df2\u7ecf\u521b\u5efa\u7684OperatorCode\u3002 :param opcode_name\uff1a \u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u662f\u7528\u6237\u7528\u6765\u6807\u8bc6\u8bb0\u5f55\u533a\u5206\u7b97\u5b50\u7684\u540d\u5b57\uff0c\u5b9e\u4f5c\u4f1a\u4fdd\u969c\u540c\u4e00\u7c7b\u578b\u7684OperatorCode\u53ea\u6709\u4e00\u4e2a\u5b58\u5728\u4e8eOperatorCode array\u4e2d\u3002 :param builtin_code\uff1a tflite.BuiltinOperator\u7c7b\u578b\uff0c\u5373\u5185\u7f6e\u7b97\u5b50\u7c7b\u578b :param custom_code\uff1a \u7528\u6237\u6307\u5b9a\u7684\u5b57\u7b26\u4e32\u5ba2\u6237\u6807\u8bb0\u7b26 :return\uff1a \u8fd4\u56deOperatorCode\u7684index","title":"7.3.3. buildOperatorCode"},{"location":"module/User_Guide/Develop/SigmaStar_Post_Processing_Module.html#734-buildoperator","text":"buildOperator ( op_code_name , input_names , output_names , builtin_options_type = None , builtin_options = None , custom_options = None , is_custom = False ) \u521b\u5efaoperator\uff0c\u521b\u5efa\u7684operator\u5728subgraph\u4e2d\u4f7f\u7528\u3002 :param op_code_name\uff1a buildOperatorCode\u4e2d\u6307\u5b9a\u7684OperatorCode\u6807\u8bc6\u7b26,\u4f7f\u7528\u540d\u5b57\u6765\u83b7\u53d6\u8fd4\u56deOperatorCode\u7684index :param input_names\uff1a [str]\u8f93\u5165tensor\u7684\u540d\u5b57\u5217\u8868 :param output_names\uff1a [str]\u8f93\u51fatensor\u7684\u540d\u5b57\u5217\u8868 :param builtin_options_type\uff1a tflite.BuiltinOptions\u7c7b\u578b\uff0c\u5982\u679c\u9700\u8981\u6307\u5b9a\u5fc5\u987b\u7684option\u53c2\u6570\uff0c\u8fd9\u91cc\u6307\u5b9a\u662f\u54ea\u4e00\u7c7b\u7b97\u5b50\u7684\u53c2\u6570\u3002 :param builtin_options\uff1a int\u7c7b\u578b\uff0c\u5bf9\u5e94builtin_options_type\u7684\u7b97\u5b50\u53c2\u6570\u5185\u5bb9\u7684flatbuffer\u7684offset\uff0c\u4f7f\u7528\u5982createReshapeOptions\u7b49API\u521b\u5efa\u7684flatbuffer\u3002\u76ee\u524dTFLitePostProcess.py\u53ea\u5b9e\u73b0\u4e86\u5c11\u6570\u51e0\u4e2aoption\u7684flatbuffer encoding\u3002\u5982\u679c\u6709\u5176\u4ed6\u6ca1\u6709\u5b9e\u73b0\u7684\u53ef\u4ee5\u53c2\u7167createReshapeOptions\u5b9e\u4f5c\u65b0\u7684\u65b9\u6cd5\u3002 :param custom_options\uff1a [byte] \u7528flexbuffer encoding\u540e\u7684bytearray\u3002\u5982\u679c\u662fcustom\u7b97\u5b50\uff0c\u5728\u8fd9\u91cc\u6307\u5b9a\u53c2\u6570\uff0c\u5bf9\u5e94\u7684\u7b97\u5b50\u89e3\u6790\u81ea\u5df1\u7684\u53c2\u6570\u3002 :param is_custom\uff1a \u662f\u5426\u4e3a\u5ba2\u5236\u5316\u7b97\u5b50\uff0c\u9ed8\u8ba4\u4e3aFalse :return\uff1a \u8fd4\u56desubgraph\u4e2doperators\u7684index\u3002","title":"7.3.4. buildOperator"},{"location":"module/User_Guide/Develop/SigmaStar_Post_Processing_Module.html#735-buildsubgraph","text":"buildSubGraph ( input_tensor_names , output_tensor_names , subgraph_name ) \u521b\u5efa\u4e00\u4e2asubgraph\uff0c\u5c06\u521b\u5efa\u7684buffer\u4e00\u8d77\u7f16\u8fdb\u4e00\u4e2asubgraph\u3002 :param input_tensor_names\uff1a [str]\u7c7b\u578b\uff0csubgraph\u7684\u8f93\u5165tensor\u540d\u5b57\u5217\u8868\uff0c\u5fc5\u987b\u4f9d\u636e\u4f7f\u7528buildTensor\u521b\u5efa\u8fc7\u7684tensor\u7684\u540d\u5b57 :param output_tensor_names\uff1a [str]\u7c7b\u578b\uff0csubgraph\u7684\u8f93\u51fatensor\u540d\u5b57\u5217\u8868\uff0c\u5fc5\u987b\u4f9d\u636e\u4f7f\u7528buildTensor\u521b\u5efa\u8fc7\u7684tensor\u7684\u540d\u5b57 :param subgraph_name\uff1a str\u7c7b\u578b\uff0c\u6307\u5b9a\u4e00\u4e2a\u540d\u5b57\u6807\u8bc6subgraph :return\uff1a \u8fd4\u56desubgraph\u7684flatbuffer offset","title":"7.3.5. buildSubGraph"},{"location":"module/User_Guide/Develop/SigmaStar_Post_Processing_Module.html#736-createmodel","text":"createModel ( version , operator_codes , subgraphs , description , buffers , metadata_buffer = None ) \u5c06\u6240\u6709encoded data \u7f16\u7801\u6210\u5b8c\u6574\u7684tflite flatbuffer\u3002 :param version\uff1a uint; tflite\u7248\u672c\u3002\u4f20\u51653\u5373\u53ef\u3002 :param operator_codes\uff1a [OperatorCode]; OperatorCode\u5217\u8868\uff0c\u4f7f\u7528buildOperatorCode\u521b\u5efa\uff0c\u4fdd\u5b58\u5728TFLitePostProcess.operator_codes\u4e2d\u3002 :param subgraphs\uff1a [SubGraph];SubGraph\u5217\u8868,\u4fdd\u5b58\u5728TFLitePostProcess.subgraphs\u4e2d\u3002 :param description\uff1a string;\u7528\u6237\u6307\u5b9a\u4e00\u4e2a\u63cf\u8ff0\u5b57\u7b26\u4e32\u3002 :param buffers\uff1a [Buffer];buffer\u5217\u8868\uff0c\u4f7f\u7528buildBuffer\u521b\u5efa\uff0c\u4fdd\u5b58\u5728TFLitePostProcess.buffers\u5217\u8868\u4e2d\u3002 :param metadata_buffer\uff1a [int];\u76ee\u524d\u6ca1\u4f7f\u7528\u5230\uff0c\u4f20None\u3002 :return\uff1a \u8fd4\u56de\u521b\u5efa\u7684\u5b8c\u6574tflite flatbuffer\u53e5\u67c4","title":"7.3.6. createModel"},{"location":"module/User_Guide/Develop/SigmaStar_Post_Processing_Module.html#737-createflexbuffer","text":"createFlexBuffer(lib, values) OperatorCode\u7c7b\u578b\u4e3atflite.BuiltinOperator.BuiltinOperator().CUSTOM\u7b97\u5b50\u53c2\u6570\u4f20\u9012\u3002 :param lib\uff1a the flexbuffer handle ,TFLitePostProcess.lib\u5373\u53ef\u3002 :param values\uff1a tuple\u7c7b\u578b\u7684\u5217\u8868\uff0ctuple\u7684\u7c7b\u578b\u4e3a(str, int/float, str)\uff1a \u7b2c\u4e00\u9879\u4e3avalue\u540d\u79f0\uff0c\u7b97\u5b50\u5b9e\u4f5c\u8005\u4f7f\u7528\u8fd9\u4e2a\u540d\u5b57\u6765\u89e3\u6790value \u7b2c\u4e8c\u9879\u4e3avalue\uff0c \u7b2c\u4e09\u9879\u4e3avalue\u7c7b\u578b\u7684\u5b57\u7b26\u4e32\uff0c\u6807\u8bc6\u7b2c\u4e8c\u9879\u7684\u7c7b\u578b\uff0c\u5982\u679c\u7b2c\u4e8c\u9879\u4e3aint \u8fd9\u91cc\u586b'int'\uff1b\u5982\u679c\u662ffloat\u7c7b\u578b\uff0c\u8fd9\u91cc\u586b'float'\u3002\u76ee\u524d\u4ec5\u652f\u6301float\u548cint\u7c7b\u578b\u3002 :return\uff1a \u8fd4\u56de\u7f16\u7801\u540e\u7684bytearray\u3002 \u4f7f\u7528sample\uff1a cus_options = [( b \"input_coordinate_x1\" , 0 , \"int\" ), ( b \"input_coordinate_y1\" , 1 , \"int\" ), ( b \"input_coordinate_x2\" , 2 , \"int\" ), ( b \"input_coordinate_y2\" , 3 , \"int\" ), ( b \"nms_score_threshold\" , 0.4 , \"float\" ), ( b \"nms_iou_threshold\" , 0.45 , \"float\" )] options = sgs_builder . createFlexBuffer ( sgs_builder . lib , cus_options )","title":"7.3.7. createFlexBuffer"},{"location":"module/User_Guide/Develop/SigmaStar_Post_Processing_Module.html#738-buildboxdecoding","text":"buildBoxDecoding(unpacked_box) \u8f93\u5165bbox\u5750\u6807\u89e3\u7801\u7f51\u7edc\u524d\uff0c\u5206\u79bbBackbone\u7f51\u7edc\u7684\u8f93\u51fabbox\u5750\u6807\u3002 :param unpacked_box\uff1a bbox\u7684\u8f93\u5165tensor\u540d\u5b57\u5217\u8868\uff0c\u4e3a\u56db\u4e2atensor :return\uff1a \u8fd4\u56dex1,y1,x2,y2 \u56db\u4e2adecoded tensor\u7684\u540d\u5b57\u5217\u8868\u3002","title":"7.3.8. buildBoxDecoding"},{"location":"module/User_Guide/Develop/SigmaStar_Post_Processing_Module.html#74-sigmastar","text":"SigmaStar\u5b9a\u5236\u7684\u540e\u5904\u7406\u7b97\u5b50OperatorCode\u7c7b\u578b\u4e3a tflite.BuiltinOperator.BuiltinOperator().CUSTOM \uff0c\u56e0\u6b64\u9700\u8981\u4f7f\u7528createFlexBuffer\u7684API\u6765\u4f20\u9012\u53c2\u6570\uff0c\u53c2\u6570\u4f20\u9012\u5fc5\u987b\u4f7f\u7528\u4e09\u9879\u7684tuple\u7c7b\u578b\u4e14\u4e3a(str, int/float, str)\u3002","title":"7.4. SigmaStar\u5b9a\u5236\u540e\u5904\u7406\u7b97\u5b50"},{"location":"module/User_Guide/Develop/SigmaStar_Post_Processing_Module.html#741-postprocess_unpack","text":"PostProcess_Unpack\u7b97\u5b50\u76ee\u7684\u662f\u5c06Backbone\u7f51\u7edc\u7684\u8f93\u51fa\u5206\u79bb\uff0c\u652f\u6301\u6700\u5927\u5206\u79bb\u51fa7\u4e2a\u5206\u652f\u3002 \u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a cus_options = [( b \"x_offset\" , 0 , \"int\" ), ( b \"x_lengh\" , 1 , \"int\" ), ( b \"y_offset\" , 1 , \"int\" ), ( b \"y_lengh\" , 1 , \"int\" ), ( b \"w_offset\" , 2 , \"int\" ), ( b \"w_lengh\" , 1 , \"int\" ), ( b \"h_offset\" , 3 , \"int\" ), ( b \"h_lengh\" , 1 , \"int\" ), ( b \"confidence_offset\" , 0 , \"int\" ), ( b \"confidence_lengh\" , 0 , \"int\" ), ( b \"scores_offset\" , 0 , \"int\" ), ( b \"scores_lengh\" , 0 , \"int\" ), ( b \"max_score\" , 0 , \"int\" )] \u6839\u636e\u7f51\u7edc\u7684\u4e0d\u540c\uff0c\u4fee\u6539\u6bcf\u884c\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u3002\u5982\u679c\u8be5\u5206\u652f\u4e0d\u9700\u8981\uff0c\u5219\u5bf9\u5e94\u7684offset\u548clengh\u586b0\u3002 x_offset\uff1a \u5206\u51fa\u5750\u6807x\u504f\u79fb\u91cf x_lengh\uff1a \u5750\u6807x\u957f\u5ea6\uff0c\u4e00\u822c\u4e3a1 y_offset\uff1a \u5206\u51fa\u5750\u6807y\u504f\u79fb\u91cf y_lengh\uff1a \u5750\u6807y\u957f\u5ea6\uff0c\u4e00\u822c\u4e3a1 w_offset\uff1a \u5206\u51fa\u5750\u6807w\u504f\u79fb\u91cf w_lengh\uff1a \u5750\u6807w\u957f\u5ea6\uff0c\u4e00\u822c\u4e3a1 h_offset\uff1a \u5206\u51fa\u5750\u6807h\u504f\u79fb\u91cf h_lengh\uff1a \u5750\u6807h\u957f\u5ea6\uff0c\u4e00\u822c\u4e3a1 confidence_offset\uff1a \u5206\u51faconfidence\u504f\u79fb\u91cf confidence_lengh\uff1a confidence\u957f\u5ea6\uff0c\u4e00\u822c\u4e3a1 scores_offset\uff1a \u5206\u51fascores\u504f\u79fb\u91cf scores_lengh\uff1a scores\u957f\u5ea6\uff0c\u4e3a\u7f51\u7edc\u7684\u5206\u7c7b\u6570\u91cf\u3002 max_score\uff1a \u4e00\u822c\u4e3a1 \u901a\u8fc7\u53c2\u6570\u8bbe\u7f6e\u4e0d\u540c\uff0c\u7ed3\u5408bbox\u5750\u6807\u89e3\u7801\u6a21\u5757\uff0cPostProcess_Unpack\u6709\u5982\u4e0b\u540e\u5904\u7406\u7f51\u7edc\u793a\u4f8b\uff1a 1.\u5206\u79bbbbox\u5750\u6807 2.\u5206\u79bbbbox\u5750\u6807\u3001confidence\u3001scores\u3001max_score","title":"7.4.1. PostProcess_Unpack"},{"location":"module/User_Guide/Develop/SigmaStar_Post_Processing_Module.html#742-tflite_detection_nms","text":"TFLite_Detection_NMS\u7b97\u5b50\u5c06NMS\u64cd\u4f5c\u7ec4\u5408\u6210\u4e3a\u4e00\u4e2a\u7b97\u5b50\uff0c\u4e0ePostProcess_Unpack\u7b97\u5b50\u914d\u5408\uff0c\u6700\u5927\u652f\u63017\u4e2a\u8f93\u5165\uff0c\u8f93\u51fa\u4e3a4\u4e2a\u62165\u4e2a\u3002 \u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a cus_options = [( b \"input_coordinate_x1\" , 1 , \"int\" ), ( b \"input_coordinate_y1\" , 0 , \"int\" ), ( b \"input_coordinate_x2\" , 3 , \"int\" ), ( b \"input_coordinate_y2\" , 2 , \"int\" ), ( b \"input_class_idx\" , 5 , \"int\" ), ( b \"input_score_idx\" , 4 , \"int\" ), ( b \"input_confidence_idx\" , - 1 , \"int\" ), ( b \"input_facecoordinate_idx\" , - 1 , \"int\" ), ( b \"output_detection_boxes_idx\" , 0 , \"int\" ), ( b \"output_detection_classes_idx\" , 1 , \"int\" ), ( b \"output_detection_scores_idx\" , 2 , \"int\" ), ( b \"output_num_detection_idx\" , 3 , \"int\" ), ( b \"output_detection_boxes_index_idx\" , - 1 , \"int\" ), ( b \"nms\" , 0 , \"float\" ), ( b \"clip\" , 0 , \"float\" ), ( b \"max_detections\" , 10 , \"int\" ), ( b \"max_classes_per_detection\" , 1 , \"int\" ), ( b \"detections_per_class\" , 1 , \"int\" ), ( b \"num_classes\" , 90 , \"int\" ), ( b \"bmax_score\" , 0 , \"int\" ), ( b \"num_classes_with_background\" , 1 , \"int\" ), ( b \"nms_score_threshold\" , 9.99999994e-09 , \"float\" ), ( b \"nms_iou_threshold\" , 0.600000024 , \"float\" )] \u6839\u636e\u7f51\u7edc\u7684\u4e0d\u540c\uff0c\u4fee\u6539\u6bcf\u884c\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u3002\u5982\u679c\u8be5\u53c2\u6570\u4e0d\u9700\u8981\uff0c\u5219\u5bf9\u5e94\u53c2\u6570\u586b-1\u3002 input_coordinate_x1\uff1a \u5bf9\u5e94PostProcess_Unpack\u7b97\u5b50x_offset\u7684\u5e8f\u53f7\u3002 input_coordinate_y1\uff1a \u5bf9\u5e94PostProcess_Unpack\u7b97\u5b50y_offset\u7684\u5e8f\u53f7\u3002 input_coordinate_x2\uff1a \u5bf9\u5e94PostProcess_Unpack\u7b97\u5b50w_offset\u7684\u5e8f\u53f7\u3002 input_coordinate_y2\uff1a \u5bf9\u5e94PostProcess_Unpack\u7b97\u5b50h_offset\u7684\u5e8f\u53f7\u3002 input_class_idx\uff1a \u5bf9\u5e94\u7c7b\u522b\u7684\u8f93\u5165\u5e8f\u53f7\u3002 input_score_idx\uff1a \u5bf9\u5e94PostProcess_Unpack\u7b97\u5b50score\u7684\u5e8f\u53f7\u3002 input_confidence_idx\uff1a \u5bf9\u5e94PostProcess_Unpack\u7b97\u5b50confidence\u7684\u5e8f\u53f7\u3002 input_facecoordinate_idx\uff1a \u9ed8\u8ba4\u4e3a-1\u3002 output_detection_boxes_idx\uff1a \u8f93\u51fa\u68c0\u6d4bbbox\u7684\u5750\u6807\u5e8f\u53f7\u3002 output_detection_classes_idx\uff1a \u8f93\u51fa\u5bf9\u5e94\u68c0\u6d4b\u7684\u7c7b\u522b\u5e8f\u53f7\u3002 output_detection_scores_idx\uff1a \u8f93\u51fa\u5bf9\u5e94\u68c0\u6d4b\u7684\u5206\u503c\u5e8f\u53f7\u3002 output_num_detection_idx\uff1a \u8f93\u51fa\u5171\u68c0\u6d4b\u5230\u7684\u76ee\u6807\u4e2a\u6570\u5e8f\u53f7\u3002 output_detection_boxes_index_idx\uff1a \u8f93\u51fa\u68c0\u6d4b\u5230\u76ee\u6807\u6392\u5e8f\u4e0b\u6807\u7684\u5e8f\u53f7\u3002 nms\uff1a 0\u4e3aFast NMS\uff0c1\u4e3aNormal NMS\u3002 clip\uff1a \u662f\u5426\u622a\u65ad\u8d8a\u754c\u7684bbox\u5750\u6807\u503c\uff0c1\u4e3a\u622a\u65ad\uff0c0\u4e3a\u4fdd\u7559\u3002 max_detections\uff1a \u6700\u5927\u8f93\u51fa\u76ee\u6807\u4e2a\u6570\u3002 max_classes_per_detection\uff1a \u9ed8\u8ba4\u4e3a1\u3002 detections_per_class\uff1a \u9ed8\u8ba4\u4e3a1\u3002 num_classes\uff1a \u7f51\u7edc\u6a21\u578b\u7c7b\u522b\u6570\u91cf\uff08\u4e0d\u5305\u542b\u80cc\u666f\uff0c\u6b64\u9009\u9879\u4ec5\u4e3aSSD\u540e\u5904\u7406\u8bbe\u7f6e\uff09\u3002 bmax_score\uff1a \u5bf9\u5e94PostProcess_Unpack\u7b97\u5b50max_score\u65f6\uff0c\u4e3a1\uff0c\u5426\u5219\u4e3a0\u3002 num_classes_with_background\uff1a \u9ed8\u8ba4\u4e3a1\u3002 nms_score_threshold\uff1a NMS\u5206\u6570\u9608\u503c\u3002 nms_iou_threshold\uff1a NMS\u7684IoU\u9608\u503c\u3002 Please Note: TFLite_Detection_NMS\u7b97\u5b50\u6700\u5927\u652f\u630124576\u4e2abbox\u8f93\u5165\u3002","title":"7.4.2. TFLite_Detection_NMS"},{"location":"module/User_Guide/Develop/SigmaStar_Post_Processing_Module.html#7421-nmsindex","text":"NMS\u53ef\u4ee5\u9009\u62e94\u4e2a\u62165\u4e2a\u8f93\u51fa\uff0c\u5176\u4e2d\u5fc5\u90094\u4e2a\u8f93\u51fa\u4e3a\uff1a\u68c0\u6d4bbbox\u5750\u6807\u3001\u68c0\u6d4b\u7c7b\u522b\u3001\u68c0\u6d4b\u5206\u503c\u3001\u68c0\u6d4b\u4e2a\u6570\uff0c\u53ef\u90091\u4e2a\u8f93\u51fa\u4e3a\uff1a\u68c0\u6d4bbbox\u5bf9\u5e94\u7684\u4e0b\u6807\u3002 \u5982\u679c\u9700\u8981\u589e\u52a0\u68c0\u6d4bbbox\u5bf9\u5e94\u7684\u4e0b\u6807\u8f93\u51fa\uff0c\u6309\u7167\u5982\u4e0b\u65b9\u6cd5\u4fee\u6539\u540e\u5904\u7406python\u6587\u4ef6\u3002 \u4ee5\u4e0b\u793a\u4f8b\u4ee5ssd_mobilenet_v1\u6a21\u578b\u7684\u540e\u5904\u7406\u4e3a\u4f8b\uff0c\u5b8c\u6574\u4ee3\u7801\u8be6\u89c1 SGS_IPU_SDK/Scripts/postprocess/postprocess_method/ssd_mobilenet_v1_index_postprocess.py \u521b\u5efa\u201cdetectionIndex\u201dTensor\uff0c\u63d2\u5728\u201cnumDetections\u201dTensor\u540e\u9762\uff0c\u7ea2\u6846\u5185\u4e3a\u6dfb\u52a0\u5185\u5bb9\uff1a sgs_builder . buildTensor ( model_config [ \"out_shapes\" ][ 3 ], \"numDetections\" ) nms_out_tensors . append ( \"numDetections\" ) sgs_builder . buildTensor ( model_config [ \"out_shapes\" ][ 4 ], \"detectionIndex\" ) nms_out_tensors . append ( \"detectionIndex\" ) cus_code = 'TFLite_Detection_NMS' sgs_builder . buildOperatorCode ( \"SGS_nms\" , tflite . BuiltinOperator . BuiltinOperator () . CUSTOM , cus_code ) \u4fee\u6539TFLite_Detection_NMS\u7b97\u5b50\u53c2\u6570\uff0coutput_detection_boxes_index_idx\u586b4\uff1a cus_options = [( b \"input_coordinate_x1\" , 1 , \"int\" ), ( b \"input_coordinate_y1\" , 0 , \"int\" ), ( b \"input_coordinate_x2\" , 3 , \"int\" ), ( b \"input_coordinate_y2\" , 2 , \"int\" ), ( b \"input_class_idx\" , 5 , \"int\" ), ( b \"input_score_idx\" , 4 , \"int\" ), ( b \"input_confidence_idx\" , - 1 , \"int\" ), ( b \"input_facecoordinate_idx\" , - 1 , \"int\" ), ( b \"output_detection_boxes_idx\" , 0 , \"int\" ), ( b \"output_detection_classes_idx\" , 1 , \"int\" ), ( b \"output_detection_scores_idx\" , 2 , \"int\" ), ( b \"output_num_detection_idx\" , 3 , \"int\" ), ( b \"output_detection_boxes_index_idx\" , 4 , \"int\" ), ( b \"nms\" , 0 , \"float\" ), ( b \"clip\" , 0 , \"float\" ), ( b \"max_detections\" , 10 , \"int\" ), ( b \"max_classes_per_detection\" , 1 , \"int\" ), ( b \"detections_per_class\" , 1 , \"int\" ), ( b \"num_classes\" , 90 , \"int\" ), ( b \"bmax_score\" , 0 , \"int\" ), ( b \"num_classes_with_background\" , 1 , \"int\" ), ( b \"nms_score_threshold\" , 9.99999994e-09 , \"float\" ), ( b \"nms_iou_threshold\" , 0.600000024 , \"float\" )] \u521b\u5efa\u7f51\u7edc\u6a21\u578b\u8f93\u51faTensor\u540d\u79f0\uff1a network_out_tensors = [] network_out_tensors . append ( \"detectionBoxes\" ) network_out_tensors . append ( \"detectionClasses\" ) network_out_tensors . append ( \"detectionScores\" ) network_out_tensors . append ( \"numDetections\" ) network_out_tensors . append ( \"detectionIndex\" ) sgs_builder . subgraphs . append ( sgs_builder . buildSubGraph ( model_config [ \"input\" ], network_out_tensors , model_config [ \"name\" ])) \u4fee\u6539\u6a21\u578b\u914d\u7f6e\u53c2\u6570\uff0cout_shapes\u589e\u52a0detectionIndex\u7684\u8f93\u51fashape\uff1a model_config = { \"name\" : \"ssdlite_mobilenet_v2\" , \"input\" : [ \"Squeeze\" , \"convert_scores\" ], \"input_shape\" : [[ 1 , 1917 , 4 ],[ 1 , 1917 , 91 ]], \"shape\" : [ 1 , 1917 ], \"out_shapes\" : [[ 1 , 10 , 4 ],[ 1 , 10 ],[ 1 , 10 ],[ 1 ],[ 1 , 10 ]]} \u4fee\u6539\u5b8c\u6210\u540e\uff0c\u751f\u6210\u7684\u540e\u5904\u7406\u6a21\u578bNMS\u8f93\u51fa\u5c31\u67095\u4e2a\u8f93\u51fa\u3002 Please Note: \u8fde\u63a5backbone\u7f51\u7edc\u65f6\u8bf7\u5148\u4fee\u6539input_config.ini\u6587\u4ef6\u4e2doutputs\uff0c\u56e0\u4e3a\u591a\u4e86\u4e00\u4e2a\u8f93\u51faTensor\uff0c\u907f\u514d\u8fde\u63a5\u7f51\u7edc\u65f6\u53d1\u751f\u9519\u8bef\u3002","title":"7.4.2.1. \u9009\u62e9\u662f\u5426\u9700\u8981NMS\u8f93\u51faindex\u4fe1\u606f"},{"location":"module/User_Guide/Develop/SigmaStar_Post_Processing_Module.html#75-anchor","text":"Caffe\u7f51\u7edc\u4e2d\u5982\u679cPriorBox\u8282\u70b9\u4e2d\u6570\u636e\u662f\u79bb\u7ebf\u751f\u6210\u7684\uff0c\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u6cd5\u83b7\u53d6\u3002 \u5177\u4f53\u7f51\u7edc\u8bf7\u53c2\u8003SGS_Models/caffe/caffe_ssd_mobilenet_v1\u3002 \u8f6c\u6362\u5e26PriorBox\u8282\u70b9\u7684backbone\u7f51\u7edc\uff0c\u4f7f\u7528Netron\u6253\u5f00\u7f51\u7edcprototxt\u6587\u4ef6\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u4fee\u6539\u5bf9\u5e94\u7684input_config.ini\u6587\u4ef6\u548cConvertTool\u8f6c\u6362\u547d\u4ee4\uff0c\u67093\u4e2a\u8f93\u51fa\uff0c\u751f\u6210backbone\u7f51\u7edc\u90e8\u5206\u3002 \u8f6c\u6362\u5b8c\u6210\u540e\uff0c\u6240\u6709PriorBox\u8282\u70b9\u751f\u6210\u4e3a\u4e00\u4e2a\u8282\u70b9\u3002\u4f7f\u7528Netron\u6253\u5f00\u751f\u6210\u7684backbone\u7f51\u7edc\uff0c\u5148\u70b9\u51fbmbox_priorbox\u8282\u70b9\uff0c\u518d\u70b9\u51fb\u7ea2\u6846\u4e2d\u7684\u4fdd\u5b58\u6309\u94ae\uff0c\u5373\u53ef\u5c06anchor\u7684\u6570\u636e\u4fdd\u5b58\u4e3a.npy\u6587\u4ef6\u3002 \u5728\u914d\u7f6ebbox\u5750\u6807\u89e3\u7801\u6a21\u5757\u65f6\uff0c\u4f7f\u7528numpy.load\u8bfb\u53d6.npy\u6587\u4ef6\uff0c\u914d\u7f6e\u597d\u5bf9\u5e94\u7684\u53d8\u91cf\u3002\u5982\u679c\u5df2\u6709anchor\u6570\u636e\uff0c\u53ef\u4ee5\u4e0d\u7528\u6b64\u65b9\u6cd5\uff0c\u76f4\u63a5\u4f7f\u7528anchor\u6570\u636e\u3002 \u540e\u5904\u7406python\u6587\u4ef6\u5728\u7f16\u5199\u65f6\uff0c\u589e\u52a0\u6a21\u578b\u914d\u7f6e\u7684\u8f93\u5165\u4e3a3\u4e2a\u8f93\u5165\uff0c\u589e\u52a0mbox_priorbox\u7684shape\uff0c\u5177\u4f53\u4ee3\u7801\u8be6\u89c1 SGS_IPU_SDK/Scripts/postprocess/postprocess_method/caffe_ssd_mobilenet_v1_postprocess.py model_config = { \"name\" : \"caffe_ssd_mobilenet_v1\" , \"input\" : [ \"mbox_loc\" , \"mbox_conf_softmax\" , \"mbox_priorbox\" ], \"input_shape\" : [[ 1 , 1917 , 4 ],[ 1 , 1917 , 21 ],[ 1917 , 4 ]], \"shape\" : [ 1 , 1917 ], \"out_shapes\" : [[ 1 , 10 , 4 ],[ 1 , 10 ],[ 1 , 10 ],[ 1 ]]} \u751f\u6210\u540e\u5904\u7406\u6a21\u578b\u540e\uff0c\u4f7f\u7528concat_net\u5de5\u5177\u8fde\u63a5\u4f1a\u81ea\u52a8\u6e05\u9664mbox_priorbox\u8282\u70b9\u3002","title":"7.5. \u83b7\u53d6\u79bb\u7ebfanchor\u6570\u636e"},{"location":"module/User_Guide/Develop/SigmaStar_Post_Processing_Module.html#76","text":"\u4ee5\u4e0b\u793a\u4f8b\u4ee5caffe_yolo_v2\u6a21\u578b\u7684\u540e\u5904\u7406\u4e3a\u4f8b\uff0c\u5177\u4f53\u4ee3\u7801\u8be6\u89c1 SGS_IPU_SDK/Scripts/postprocess/postprocess_method/caffe_yolo_v2_postprocess.py","title":"7.6. \u4e3e\u4f8b\u4f7f\u7528"},{"location":"module/User_Guide/Develop/SigmaStar_Post_Processing_Module.html#761-tflitepostprocess","text":"\u9996\u5148\u914d\u7f6econfig\u5b57\u5178\u53d8\u91cf\uff0c\u6839\u636ebbox\u5750\u6807\u89e3\u7801\u7684\u5b9e\u9645\u8ba1\u7b97\u65b9\u6cd5\u914d\u7f6econfig\u7684\u5404\u4e2a\u53c2\u6570\u3002 \u914d\u7f6e\u53c2\u6570\uff1a box_num = 5 side_x = 13 side_y = 13 ppw = anchor . ones ( 845 ) px = anchor . index_div_linear ( 1 , 1 , 0 , box_num , side_x , side_y ) pph = anchor . ones ( 845 ) py = anchor . index_div_linear ( 1 , 1 , 0 , side_x * box_num , side_y , 1 ) pw = anchor . ones ( 845 ) ph = anchor . ones ( 845 ) sx = anchor . ns ( 845 , 1.0 / 13 ) sy = anchor . ns ( 845 , 1.0 / 13 ) biases = [[ 1.3221 , 1.73145 ],[ 3.19275 , 4.00944 ],[ 5.05587 , 8.09892 ],[ 9.47112 , 4.84053 ],[ 11.2364 , 10.0071 ]] sw = [ x [ 0 ] / ( 2 * 13 ) for x in biases ] * ( 13 * 13 ) sh = [ x [ 1 ] / ( 2 * 13 ) for x in biases ] * ( 13 * 13 ) \u914d\u7f6econfig\u5b57\u5178\u53d8\u91cf\uff1a config = { \"shape\" : [ 1 , 845 ], \"tx_func\" : ( tflite . BuiltinOperator . BuiltinOperator () . LOGISTIC , None ), \"ty_func\" : ( tflite . BuiltinOperator . BuiltinOperator () . LOGISTIC , None ), \"tw_func\" : ( tflite . BuiltinOperator . BuiltinOperator () . RESHAPE , None ), \"th_func\" : ( tflite . BuiltinOperator . BuiltinOperator () . RESHAPE , None ), \"x_scale\" : 0.1 , \"y_scale\" : 0.1 , \"w_scale\" : 1 , \"h_scale\" : 1 , \"anchor_selector\" : \"constant\" , \"pw\" : pw , \"ph\" : ph , \"pw_func\" : ( None , None ), \"ph_func\" : ( None , None ), \"ppw\" : ppw , \"px\" : px , \"pph\" : pph , \"py\" : py , \"sx\" : sx , \"sy\" : sy , \"sw\" : sw , \"sh\" : sh } \u521b\u5efaTFLitePostProcess\u5b9e\u4f8b\uff1a yolov2 = TFLitePostProcess(config)","title":"7.6.1. \u521b\u5efa\u4e00\u4e2aTFLitePostProcess\u5b9e\u4f8b"},{"location":"module/User_Guide/Develop/SigmaStar_Post_Processing_Module.html#762-tensor","text":"\u5c06float\u5217\u8868pack\u6210bytearray py_vector = [] for value in self . py : py_vector += bytearray ( struct . pack ( \"f\" , value )) \u4f7f\u7528bytearray\u521b\u5efa\u5e38\u91cfbuffer self . buildBuffer ( \"py_buffer\" , py_vector ) \u4f7f\u7528\u5e38\u91cfbuffer\u521b\u5efatensor self . buildTensor ([ len ( self . py )], \"py_tensor\" , self . getBufferByName ( \"py_buffer\" ))","title":"7.6.2. \u521b\u5efa\u5e38\u91cfTensor"},{"location":"module/User_Guide/Develop/SigmaStar_Post_Processing_Module.html#763","text":"\u521b\u5efa\u4e00\u4e2a\u53cc\u53e3Mul\u7b97\u5b50\uff1a score1_out_tensors = [] score1_in_tensors = [] score1_in_tensors . append ( \"confidence_tensor\" ) score1_in_tensors . append ( \"score0_tensor\" ) sgs_builder . buildTensor ([ 1 , 845 ], \"SGS_score1\" ) score1_out_tensors . append ( \"SGS_score1\" ) sgs_builder . buildOperatorCode ( \"SGS_score_mul\" , tflite . BuiltinOperator . BuiltinOperator () . MUL ) sgs_builder . buildOperator ( \"SGS_score_mul\" , score1_in_tensors , score1_out_tensors ) \u521b\u5efa\u4e00\u4e2aReshape\u7b97\u5b50\uff0c\u9700\u8981\u521b\u5efa\u5e38\u91cfTensor\uff1a reshape_out_shape1 = [ 1 , 4695 , 4 ] reshape_out_tensors1 = [] reshape_in_tensors1 = [] sgs_builder . buildBuffer ( 'NULL' ) sgs_builder . buildTensor ([ 1 , 4695 , 1 , 4 ], '283_in' ) reshape_in_tensors1 . append ( '283_in' ) reshape_vector1 = [] for value in reshape_out_shape1 : reshape_vector1 += bytearray ( struct . pack ( \"i\" , value )) sgs_builder . buildBuffer ( \"reshape_vector1\" , reshape_vector1 ) sgs_builder . buildTensor ([ len ( reshape_out_shape1 )], \"reshape_shape1\" , sgs_builder . getBufferByName ( \"reshape_vector1\" ), tflite . TensorType . TensorType () . INT32 ) reshape_in_tensors1 . append ( \"reshape_shape1\" ) sgs_builder . buildTensor ( reshape_out_shape1 , \"reshape_tensor1\" ) reshape_out_tensors1 . append ( \"reshape_tensor1\" ) sgs_builder . buildOperatorCode ( \"SGS_reshape1\" , tflite . BuiltinOperator . BuiltinOperator () . RESHAPE ) reshape_newshape1 = sgs_builder . createReshapeOptions ( reshape_out_shape1 ) sgs_builder . buildOperator ( \"SGS_reshape1\" , reshape_in_tensors1 , reshape_out_tensors1 , tflite . BuiltinOptions . BuiltinOptions () . ReshapeOptions , reshape_newshape1 )","title":"7.6.3. \u521b\u5efa\u4e00\u4e2a\u7b97\u5b50"},{"location":"module/User_Guide/Develop/SigmaStar_Post_Processing_Module.html#764","text":"\u521b\u5efaOperatorCode sgs_builder . buildOperatorCode ( \"SGS_nms\" , tflite . BuiltinOperator . BuiltinOperator () . CUSTOM , cus_code ) cus_options = [( b \"input_coordinate_x1\" , 0 , \"int\" ), ( b \"input_coordinate_y1\" , 1 , \"int\" ), ( b \"input_coordinate_x2\" , 2 , \"int\" ), ( b \"input_coordinate_y2\" , 3 , \"int\" ), ( b \"input_class_idx\" , 6 , \"int\" ), ( b \"input_score_idx\" , 5 , \"int\" ), ( b \"input_confidence_idx\" , 4 , \"int\" ), ( b \"input_facecoordinate_idx\" , - 1 , \"int\" ), ( b \"output_detection_boxes_idx\" , 0 , \"int\" ), ( b \"output_detection_classes_idx\" , 1 , \"int\" ), ( b \"output_detection_scores_idx\" , 2 , \"int\" ), ( b \"output_num_detection_idx\" , 3 , \"int\" ), ( b \"output_detection_boxes_index_idx \" , - 1 , \"int\" ), ( b \"nms\" , 0 , \"int\" ), ( b \"clip\" , 0 , \"int\" ), ( b \"max_detections\" , 100 , \"int\" ), ( b \"max_classes_per_detection\" , 1 , \"int\" ), ( b \"detections_per_class\" , 1 , \"int\" ), ( b \"num_classes\" , 20 , \"int\" ), ( b \"bmax_score\" , 1 , \"int\" ), ( b \"num_classes_with_background\" , 1 , \"int\" ), ( b \"nms_score_threshold\" , 0.4 , \"float\" ), ( b \"nms_iou_threshold\" , 0.45 , \"float\" )] \u521b\u5efaflexbuffer options = sgs_builder . createFlexBuffer ( sgs_builder . lib , cus_options ) \u4f7f\u7528flexbuffer\u521b\u5efaOperator sgs_builder . buildOperator ( \"SGS_nms\" , nms_in_tensors , nms_out_tensors , None , None , options )","title":"7.6.4. \u521b\u5efa\u5ba2\u5236\u5316\u7b97\u5b50"},{"location":"module/User_Guide/Develop/SigmaStar_Post_Processing_Module.html#765-model","text":"\u521b\u5efasubgraph sgs_builder . subgraphs . append ( sgs_builder . buildSubGraph ([ 'conv23' ], nms_out_tensors , 'caffe_yolo_v2' )) \u521b\u5efamodel sgs_builder . model = sgs_builder . createModel ( 3 , sgs_builder . operator_codes , sgs_builder . subgraphs , 'caffe_yolo_v2' , sgs_builder . buffers ) file_identifier = b 'TFL3' sgs_builder . builder . Finish ( sgs_builder . model , file_identifier ) \u8f93\u51fa\u6a21\u578b buf = sgs_builder . builder . Output () \u4fdd\u5b58\u6a21\u578b\u5230\u6587\u4ef6 outfilename = 'caffe_yolo_v2_postprocess.sim' with open ( outfilename , 'wb' ) as f : f . write ( buf )","title":"7.6.5. \u521b\u5efamodel\u5e76\u4fdd\u5b58\u4e3a\u6a21\u578b\u6587\u4ef6"},{"location":"module/User_Guide/Develop/Simulate.html","text":"5.1. \u4f7f\u7528\u65b9\u6cd5 \u00b6 Simulator\u5de5\u5177\u7684\u4f4d\u7f6e\u5728 ~/SGS_IPU_SDK/SRC/Tool/Scripts/calibrator/simulator.py \u3002 \u8be5\u5de5\u5177\u5177\u6709\u4ee5\u4e0b\u529f\u80fd\uff1a \u5bf9\u5206\u7c7b\u7f51\u7edc\u6570\u636e\u96c6\u9a8c\u8bc1\uff1b \u5bf9\u68c0\u6d4b\u7f51\u7edc\u6570\u636e\u96c6\u9a8c\u8bc1\uff08\u652f\u6301COCO\u6570\u636e\u96c6\uff09\uff1b \u5bf9\u5355\u5f20\u56fe\u7247\u9884\u6d4b\uff1b \u7ed8\u5236\u5355\u5f20\u56fe\u7247\u76ee\u6807\u68c0\u6d4b\u7ed3\u679c\uff1b \u5728SGS_IPU_SDK\u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK/Project make distclean ;source build/{IPU_Version}/cfg_tf.sh ;make -j32 (IPU_Version \u53ef\u9009\u62e9IPU100,IPU200M,IPU260) \u8fdb\u5165\u5230\u8be5\u5de5\u5177\u76ee\u5f55\uff0c\u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a \u6d4b\u8bd5ILSVRC\u6570\u636e\u96c6\uff0c\u5e76\u8fd4\u56de\u6a21\u578b\u7cbe\u5ea6\u7ed3\u679c\uff1a cd ~/tensorflow_ssd/ python3 ~/SGS_IPU_SDK/SRC/Tool/Scripts/calibrator/simulator.py \\ -i ~/SGS_IPU_SDK/SGS_Models/resource/detection/coco2017_val_set100 \\ -m ~/tensorflow_ssd/ssd_mobilenet_v1_float.sim \\ -l ~/SGS_IPU_SDK/SGS_Models/resource/detection/coco2017_val_set100.json \\ -c Detection -t Float \\ -n ssd_mobilenet_v1 \\ --num_process 10 \u6216\u8005\u53ef\u4ee5\u4f7f\u7528\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\uff1a python3 ~/SGS_IPU_SDK/SRC/Tool/Scripts/calibrator/simulator.py \\ -i ~/SGS_IPU_SDK/SGS_Models/resource/classify/ilsvrc2012_val_set100/file.list \\ -m ~/SGS_IPU_SDK/SGS_Models/tensorflow/mobilenet_v2/mobilenet_v2_float.sim \\ -l ~/SGS_IPU_SDK/SGS_Models/resource/classify/tensorflow_labels.txt \\ -c Classification \\ -t Float \\ -n mobilenet_v2 \\ --num_process 20 \u6d4b\u8bd5COCO2017\u6570\u636e\u96c6\uff0c\u5e76\u8fd4\u56de\u6a21\u578b\u68c0\u6d4b\u7ed3\u679c\uff1a python3 ~/SGS_IPU_SDK/SRC/Tool/Scripts/calibrator/simulator.py \\ -i ~/SGS_IPU_SDK/SGS_Models/resource/detection/coco2017_val_set100 \\ -m ~/SGS_IPU_SDK/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1_float.sim \\ -l ~/SGS_IPU_SDK/SGS_Models/resource/detection/coco2017_val_set100.json \\ -c Detection \\ -t Float \\ -n ssd_mobilenet_v1 \\ --num_process 10 \u6216\u8005\u53ef\u4ee5\u4f7f\u7528\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\uff1a python3 ~/SGS_IPU_SDK/SRC/Tool/Scripts/calibrator/simulator.py \\ -i ~/SGS_IPU_SDK/SGS_Models/resource/detection/coco2017_val_set100/file.list \\ -m ~/SGS_IPU_SDK/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1_float.sim \\ -l ~/SGS_IPU_SDK/SGS_Models/resource/detection/coco2017_val_set100.json \\ -c Detection \\ -t Float \\ -n ssd_mobilenet_v1 \\ --num_process 10 \u6d4b\u8bd5\u5355\u5f20\u56fe\u7247\uff0c\u5e76\u5c06\u68c0\u6d4b\u7ed3\u679c\u7ed8\u5236\u5728\u56fe\u7247\u4e0a\uff0c\u4fdd\u5b58\u5230 ./results/ \u6587\u4ef6\u5939\u4e0b\uff1a python3 ~/SGS_IPU_SDK/SRC/Tool/Scripts/calibrator/simulator.py \\ -i ~/SGS_IPU_SDK/SGS_Models/resource/detection/coco2017_val_set100/000000567877.jpg \\ -m ~/SGS_IPU_SDK/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1_float.sim \\ -c Detection \\ -t Float \\ -n ssd_mobilenet_v1 \\ --draw_result ./results \u5bf9\u8be5\u5de5\u5177\u53c2\u6570\u7684\u5177\u4f53\u8bf4\u660e\u5982\u4e0b\u3002 5.1.1 \u5fc5\u9009\u53c2\u6570 \u00b6 -i , --image : \u56fe\u7247\u6587\u4ef6 / \u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84 / \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u3002 -m , --model : \u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 -c , --category : \u6a21\u578b\u7684\u7c7b\u522b\uff0c\u4e3b\u8981\u6709Classification / Detection / Unknown\u3002 Classification : \u6a21\u578b\u67091\u4e2a\u8f93\u51fa\uff0c\u4f1a\u6839\u636e\u8f93\u51fa\u6392\u5e8f\u8f93\u51fa\u5206\u6570\u7531\u9ad8\u81f3\u4f4e\u7684\u524d5\u4e2a\u3002 Detection : \u6a21\u578b\u67094\u4e2a\u8f93\u51fa\uff0c\u4f1a\u6839\u636e\u8f93\u51fa\u8f6c\u6362\u4e3a\u8f93\u5165\u56fe\u7247\u7684bbox\u4f4d\u7f6e\u4ee5\u53ca\u7c7b\u522b\u3002\u53ea\u652f\u6301SigmaStar\u540e\u5904\u7406\u7b97\u5b50 [SigmaStar\u540e\u5904\u7406\u6a21\u5757]\u3002\u5176\u4ed6\u540e\u5904\u7406\u8bf7\u4f7f\u7528Unknown\u3002 Unknown : \u6a21\u578b\u8f93\u51fa\u4e0d\u5c5e\u4e8e\u4e0a\u8ff0\u4e24\u79cd\u7c7b\u578b\uff0c\u4f1a\u8f93\u51fa\u5168\u90e8\u7684Tensor\u6570\u503c\u3002 -t , --type : \u6a21\u578b\u7684\u6570\u636e\u7c7b\u578b\uff1a Float : \u6d6e\u70b9\u6a21\u578b\u3002 Fixed : \u5b9a\u70b9\u5728\u7ebf\u6a21\u578b\u3002 Offline : \u5b9a\u70b9\u79bb\u7ebf\u6a21\u578b\u3002 Please Note: \u4e0d\u52a0-n/--preprocess\u53c2\u6570\u65f6\uff0c-i/--image\u4e0d\u80fd\u7ed9\u56fe\u7247\u6216\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\u3002 -i/--image\u53c2\u6570\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\u65f6\uff1a \u7f51\u7edc\u6a21\u578b\u4e3a\u5355\u8f93\u5165\u65f6\uff1a ~/SGS_IPU_SDK/image_test/2007000364.jpg ~/SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp ... \u7f51\u7edc\u6a21\u578b\u4e3a\u591a\u8f93\u5165\u65f6\uff1a ~/SGS_IPU_SDK/image_test/2007000364.jpg,~/SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp ~/SGS_IPU_SDK/image_test/2007000365.jpg,~/SGS_IPU_SDK/image_test/ILSVRC2012_test_00000003.bmp ... 5.1.2 \u53ef\u9009\u53c2\u6570 \u00b6 -l , --label : \u6570\u636e\u96c6\u7684\u6807\u7b7e\u6587\u4ef6\u8def\u5f84 / \u56fe\u7247\u6587\u5b57\u63cf\u8ff0\u7684\u6807\u7b7e\u3002 -n , --preprocess : \u6a21\u578b\u540d\u79f0\uff0c\u4e0e\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\u76f8\u5173\uff0c\u8be6\u89c1 [3.2. \u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5]\u3002 \u4e5f\u53ef\u4ee5\u5b8c\u6210\u524d\u5904\u7406\u6587\u4ef6\u914d\u7f6e\u540e\uff0c\u7ed9\u5b9a\u524d\u5904\u7406\u6587\u4ef6\u8def\u5f84\u3002\u4e0d\u52a0\u8be5\u53c2\u6570\uff0c\u56fe\u7247\u53c2\u6570\u9700\u8981\u7ed9\u539f\u59cb\u6570\u636e\uff0c\u53ef\u91c7\u7528--save_input\u4fdd\u5b58\u56fe\u7247\u6570\u636e\u540e\uff0c\u6839\u636e\u8be5\u683c\u5f0f\u5236\u5b9a\u5176\u4ed6\u7684\u539f\u59cb\u6570\u636e\u3002 \u6ce8\u610f\u4e8b\u9879 \u82e5\u6a21\u578b\u4e3a \u591a\u8f93\u5165 \u65f6\uff0c -n,--preprocess \u53c2\u6570\u7528\u6cd5\u9700\u8981\u591a\u4e2a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4f8b\u5982 -n preprocess1.py,preprocess2.py \u6216\u8005 --preprocess preprocess1.py,preprocess2.py --tool : sgs_simulator\u6587\u4ef6\u8def\u5f84\u3002 --skip_garbage : Fixed\u548cOffline\u6a21\u578b\u8f93\u51fa\u7ed3\u679c\u8df3\u8fc7\u65e0\u7528\u6570\u636e\u3002 --dump_rawdata : \u4fdd\u5b58Fixed\u548cOffline\u6a21\u578b\u8f93\u5165\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u6587\u4ef6\u540d\u4e3a\u56fe\u7247\u540d + .bin\uff0c\u4fdd\u5b58\u5728\u5f53\u524d\u8def\u5f84\u3002 --num_process : \u8fdb\u7a0b\u6570\uff0c\u8fd0\u884c\u540c\u65f6\u8fd0\u884c\u7684\u8fdb\u7a0b\u6570\u3002\uff08\u53ef\u9009\u53c2\u6570\uff0c\u4e0d\u52a0\u8be5\u53c2\u6570\u9ed8\u8ba4\u4e3a\u5355\u7ebf\u7a0b\uff09\u9a8c\u8bc1\u6570\u636e\u96c6\u5fc5\u987b\u52a0\u6b64\u53c2\u6570\u4e14\u8fdb\u7a0b\u6570 > 1\u3002 --draw_result : \u7ed8\u5236\u76ee\u6807\u68c0\u6d4b\u7f51\u7edc\u9009\u6846\u7ed3\u679c\uff0c\u53c2\u6570\u4e3a\u7ed3\u679c\u4fdd\u5b58\u6587\u4ef6\u5939\u8def\u5f84\uff08\u6587\u4ef6\u5939\u4e0d\u5b58\u5728\u4f1a\u81ea\u52a8\u521b\u5efa\uff09\u548c\u753b\u6846\u7684\u9608\u503c\uff0c\u4f7f\u7528\u9017\u53f7( , )\u5206\u9694\u4fdd\u5b58\u8def\u5f84\u4e0e\u9608\u503c\u3002\u8f93\u5165\u9608\u503c\u753b\u51fa\u5927\u4e8e\u9608\u503c\u7684\u68c0\u6d4b\u7ed3\u679c\uff0c\u4e0d\u8f93\u5165\u9608\u503c\u5219\u753b\u51fa\u5168\u90e8\u68c0\u6d4b\u7ed3\u679c\u3002 --continue_run : \u63a5\u7740\u4e0a\u6b21\u6570\u636e\u96c6\u5269\u4e0b\u7684\u90e8\u5206\u8fd0\u884c\u3002 --save_input : \u4fdd\u5b58simulator \u524d\u5904\u7406\u540e\u7684\u6587\u4ef6\uff0c\u9ed8\u8ba4\u4e0d\u4fdd\u5b58\u3002\u6587\u4ef6\u4e3a\u6587\u672c\u6587\u4ef6\uff0c\u4f1a\u5728\u8fd0\u884c\u8def\u5f84\u4e0b\u521b\u5efa\u6587\u4ef6\u5939tmp_image\uff0c\u6587\u4ef6\u4fdd\u5b58\u5728 ./tmp_image/imagename \u56fe\u7247\u540d\u3002 5.1.3 \u6ce8\u610f\u4e8b\u9879 \u00b6 simulator\u5de5\u5177\u4f1a\u5bfb\u627e\u7cfb\u7edf\u53d8\u91cf\u4ece\u800c\u83b7\u5f97\u5bf9\u5e94\u9636\u6bb5\u4efb\u52a1\u6240\u9700\u5de5\u5177\u8def\u5f84\uff0c\u56e0\u6b64\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u53c2\u6570-t/--tool\u4e0d\u7528\u6307\u5b9a\u76f8\u5173\u5de5\u5177\u7684\u4f4d\u7f6e\u3002 simulator\u5de5\u5177\u6bcf\u6b21\u8fd0\u884c\u7ed3\u675f\u540e\u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u521b\u5efalog\u76ee\u5f55\uff0clog\u76ee\u5f55\u4e0b\u7684output\u6587\u4ef6\u5939\uff0c\u5b58\u653e\u6a21\u578b\u63a8\u6f14\u7684\u7ed3\u679c\u3002 \u5f53 -i/--image \u7684\u53c2\u6570\u4e3a\u5355\u5f20\u56fe\u7247\u7684\u8def\u5f84\u65f6\uff0csimulator\u53ea\u5bf9\u8be5\u56fe\u7247\u63a8\u6f14\uff1b\u5f53 -i/--image \u7684\u53c2\u6570\u4e3a\u56fe\u7247\u6587\u4ef6\u5939\u7684\u8def\u5f84\u65f6\uff0csimulator\u4f1a\u5bf9\u6587\u4ef6\u5939\u5185\u7684\u56fe\u7247\u5168\u90e8\u63a8\u6f14\uff0c\u6b64\u65f6\u589e\u52a0--num_process\uff08\u53c2\u6570 > 1\uff09\uff0c\u53ef\u4ee5\u5f00\u542f\u591a\u8fdb\u7a0b\u63a8\u6f14\u3002 \u5f53 -l/--label \u7684\u53c2\u6570\u4e3a\u6570\u636e\u96c6\u6807\u7b7e\u6587\u4ef6\u8def\u5f84\u65f6\u5fc5\u987b\u4f7f\u7528--num_process\u53c2\u6570\uff0c\u6570\u636e\u96c6\u9a8c\u8bc1\u652f\u6301ImageNet\uff08Top1\u3001Top5\uff09\u3001COCO\u76ee\u6807\u68c0\u6d4b(mmAP)\uff1b\u5f53 -l/--label \u53c2\u6570\u4e3a\u56fe\u7247\u6587\u5b57\u63cf\u8ff0\u6807\u7b7e\u65f6\uff0c\u4e0d\u80fd\u4f7f\u7528\u9009\u9879--num_process\u3002 -c/--category \u7684\u53c2\u6570\u9009\u62e9Unknown\u65f6\uff0c\u5206\u4e3a\u4e24\u79cd\u60c5\u51b5 \u5f53input_config.ini\u4e2d[OUTPUT_CONFIG]\u7684dequantizations\u4e3a'TRUE'\u65f6\uff0c\u5b9a\u70b9\u548c\u79bb\u7ebf\u6a21\u578b\u7684\u8f93\u51faTensor\u7ef4\u5ea6\u4e0e\u6a21\u578b\u7ef4\u5ea6\u76f8\u540c \u5f53input_config.ini\u4e2d[OUTPUT_CONFIG]\u7684dequantizations\u4e3a'FALSE'\u65f6\uff0c\u6a21\u578b\u8f93\u51faTensor\u7684\u7684\u6700\u540e\u4e00\u4e2a\u7ef4\u5ea6\u4f1a\u5411\u4e0a\u63098\u4e2a\u6570\u5bf9\u9f50 layer46 - conv Tensor : { tensor dim : 4 , Original shape :[ 1 13 13 255 ], Alignment shape :[ 1 13 13 256 ] The following tensor data shape is alignment shape . tensor data : ... \u5bf9\u4e8eFixed\u548cOffline\u7684\u6a21\u578b\uff0c\u5f97\u5230\u6709\u7528\u6570\u636e\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0bPython\u4ee3\u7801\uff08\u5047\u8bbe\u53d8\u91cfData \u662f\u7ef4\u5ea6\u4e3a[1, 13, 13, 256]\u7684np.array\u6570\u636e\uff0c\u771f\u6b63\u6709\u7528\u7684\u6570\u636eUseful_Data\u7ef4\u5ea6\u4e3a[1, 13, 13, 255]\uff09\uff1a Useful_Data = Data [:, :, :, : 255 ] 5.2. calibrator_custom.simulator \u00b6 calibrator_custom.simulator\u662f\u57fa\u4e8ePython\u7684\u5feb\u901f\u91cf\u5316\u548c\u8f6c\u6362\u6a21\u578b\u7684\u6a21\u5757\u3002\u4f7f\u7528calibrator_custom.simulator\u53ef\u4ee5\u66f4\u65b9\u4fbf\u7075\u6d3b\u7684\u5bf9\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u8fdb\u884c\u91cf\u5316\u548c\u8f6c\u6362\u3002calibrator_custom.simulator\u5305\u542b3\u79cd\uff0c\u7528\u4e8e\u89e3\u6790\u4e0d\u540c\u9636\u6bb5\u7684\u6a21\u578b\u3002 calibrator_custom.float_simulator \u7528\u4e8e\u89e3\u6790float\u6a21\u578b calibrator_custom.fixed_simulator \u7528\u4e8e\u89e3\u6790fixed\u6a21\u578b calibrator_custom.offline_simulator \u7528\u4e8e\u89e3\u6790offline\u6a21\u578b \u76ee\u524d\u57fa\u4e8e\u7684docker\u73af\u5883\uff0c\u63d0\u4f9bPython3.5\u7684\u9884\u7f16\u8bd1\u7684Python\u6a21\u5757\u3002\u7531\u4e8efixed\u6a21\u578b\u548coffline\u6a21\u578b\u4f7f\u752832\u4f4d\u8fd0\u884c\u5e93\uff0c\u56e0\u6b64\u9700\u4f7f\u752832\u4f4dPython3.5\u73af\u5883\u8fd0\u884c\u3002Docker\u4e2d\u5df2\u66f4\u65b032\u4f4dPython3.5\u73af\u5883\uff0c\u4f7f\u7528python32\u5373\u53ef\u8fd0\u884c\u3002float\u6a21\u578b\u4f7f\u752864\u4f4dPython\u8fd0\u884c\u3002 \u4e0b\u9762\u57fa\u4e8ecalibrator_custom.float_simulator\uff0c\u8bf4\u660e\u4f7f\u7528\u65b9\u6cd5\u548c\u76f8\u5173API\u63a5\u53e3\uff1a import calibrator_custom model_path = './mobilenet_v2_float.sim' model = calibrator_custom . float_simulator ( model_path ) calibrator_custom.float_simulator \u4f7f\u7528calibrator_custom.float_simulator\u65f6\uff0c\u9700\u8981\u7ed9\u5b9afloat.sim\u6a21\u578b\u7684\u8def\u5f84\uff0c\u7528\u4e8e\u521b\u5efafloat_simulator\u7684\u5b9e\u4f8b\u3002\u53c2\u6570\u7ed9\u5b9a\u9519\u8bef\uff0c\u5c06\u65e0\u6cd5\u6210\u529f\u521b\u5efafloat_simulator\u5b9e\u4f8b\uff0c\u5e76\u8fd4\u56deValueError\u3002 5.2.1 calibrator_custom.simulator\u65b9\u6cd5 \u00b6 get_input_details : \u8fd4\u56de\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u4fe1\u606f\uff08list\uff09 Float\u6a21\u578b\u8fd4\u56de\u5982\u4e0b\uff1a input_details = model . get_input_details () print ( input_details ) [ { 'name' : 'sub_7' , 'shape' : array ([ 1 , 513 , 513 , 3 ], dtype = int32 ), 'dtype' : < class ' numpy . float32 '>, 'index' : 0 } ] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578b\u8f93\u5165\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a index : \u8f93\u5165Tensor\u5e8f\u53f7 name : \u8f93\u5165Tensor\u540d\u79f0 shape : \u8f93\u5165Tensor\u7684\u5f62\u72b6 dtype : \u8f93\u5165Tensor\u7684\u6570\u636e\u7c7b\u578b Fixed\u548cOffline\u6a21\u578b\u8fd4\u56de\u5982\u4e0b\uff1a >>> input_details = model . get_input_details () >>> print ( input_details ) [ { 'index' : 0 , 'shape' : array ([ 1 , 513 , 513 , 3 ]), 'dtype' : < class ' numpy . uint8 '>, 'name' : 'sub_7' , 'input_formats' : 'RGB' , 'training_input_formats' : 'RGB' } ] get_output_detail \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578b\u8f93\u5165\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a index : \u8f93\u5165Tensor\u5e8f\u53f7 name : \u8f93\u5165Tensor\u540d\u79f0 shape : \u8f93\u5165Tensor\u7684\u5f62\u72b6 dtype : \u8f93\u5165Tensor\u7684\u6570\u636e\u7c7b\u578b input_formats : \u7f51\u7edc\u6a21\u578b\u5b9e\u9645\u8fd0\u884c\u65f6\u7684\u56fe\u7247\u8f93\u5165\u683c\u5f0f training_input_formats : \u7f51\u7edc\u6a21\u578b\u8bad\u7ec3\u662f\u7684\u56fe\u7247\u8f93\u5165\u683c\u5f0f \u8fd4\u56de\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u4fe1\u606f\uff08list\uff09 Float\u6a21\u578b\u8fd4\u56de\u5982\u4e0b\uff1a >>> output_details = model . get_output_details () >>> print ( output_details ) [ { 'name' : 'MobilenetV2/Conv/Conv2D' , 'shape' : array ([ 1 , 257 , 257 , 30 ], dtype = int32 ), 'dtype' : < class ' numpy . float32 '>, 'index' : 0 } ] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578b\u8f93\u51fa\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a index : \u8f93\u51faTensor\u5e8f\u53f7 name : \u8f93\u51faTensor\u540d\u79f0 shape : \u8f93\u51faTensor\u7684\u5f62\u72b6 dtype : \u8f93\u51faTensor\u7684\u6570\u636e\u7c7b\u578b Fixed\u548cOffline\u6a21\u578b\u8fd4\u56de\u5982\u4e0b\uff1a >>> output_details = model . get_output_details () >>> print ( output_details ) [ { 'index' : 0 , 'shape' : array ([ 1 , 257 , 257 , 30 ]), 'name' : 'MobilenetV2/Conv/Conv2D' , 'dtype' : < class ' numpy . int16 '>, 'quantization' : ( 0.00013832777040079236 , 0 ) } ] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578b\u8f93\u51fa\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a index : \u8f93\u51faTensor\u5e8f\u53f7 name : \u8f93\u51faTensor\u540d\u79f0 shape : \u8f93\u51faTensor\u7684\u5f62\u72b6 dtype : \u8f93\u51faTensor\u7684\u6570\u636e\u7c7b\u578b quantization : \u8f93\u51faTensor\u7684scale\u548czero_point\uff08\u9700\u5c06\u6a21\u578b\u8f93\u51faTensor\u4e58scale\u5f97\u5230\u6d6e\u70b9\u6570\uff09 set_input : \u8bbe\u7f6e\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u6570\u636e >>> model . set_input ( 0 , img_data ) \u8f93\u5165\u6570\u636e\uff0c0\u4e3a\u8f93\u5165Tensor\u7684index\uff0c\u53ef\u4ee5\u5728get_input_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230\u3002img_data\u662f\u4e0emodel\u8f93\u5165shape\u548cdtype\u76f8\u540c\u7684numpy.ndarray\u683c\u5f0f\u6570\u636e\uff0c\u9519\u8bef\u7684shape\u6216dtype\uff0c\u5c06\u5bfc\u81f4set_input\u8fd4\u56deValueError\u3002\u5982\u679c\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u53ef\u4ee5\u591a\u6b21\u8c03\u7528set_input\uff0c\u6839\u636eget_input_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230index\u8bbe\u7f6e\u5bf9\u5e94Tensor\u7684\u8f93\u5165\u6570\u636e\u3002 invoke \u6a21\u578b\u8fd0\u884c\u4e00\u6b21 >>> model . invoke () \u8c03\u7528invoke\u524d\u8bf7\u5148\u4f7f\u7528set_input\u8bbe\u7f6e\u8f93\u5165\u6570\u636e\uff0c\u672a\u8c03\u7528set_input\u76f4\u63a5\u8c03\u7528invoke\u4f1a\u8fd4\u56deValueError\u3002 get_output \u83b7\u53d6\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u6570\u636e >>> result = model . get_output ( 0 ) \u83b7\u53d6\u8f93\u51fa\u6570\u636e\uff0c0\u4e3a\u8f93\u51faTensor\u7684index\uff0c\u53ef\u4ee5\u5728get_output_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230\uff0c\u8fd4\u56denumpy.ndarray\u683c\u5f0f\u8f93\u51fa\u6570\u636e\u3002\u5982\u679c\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u51fa\uff0c\u53ef\u4ee5\u591a\u6b21\u8c03\u7528get_output\uff0c\u6839\u636eget_output_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230index\u83b7\u53d6\u5bf9\u5e94Tensor\u7684\u8f93\u51fa\u6570\u636e\u3002 \u5047\u8bbe\u6a21\u578b\u8f93\u51fa\u7684shape\u4e3a[1, 257, 257, 30] Float\u6a21\u578b\u67e5\u770b\u7ed3\u679c\u7684shape >>> print ( result . shape ) ( 1 , 257 , 257 , 30 ) Fixed\u548cOffline\u6a21\u578b\u67e5\u770b\u7ed3\u679cshape >>> print ( result . shape ) ( 1 , 257 , 257 , 32 ) Fixed\u548cOffline\u6a21\u578b\u8f93\u51faTensor\u56e0\u4e3a\u6a21\u62df\u4e86\u5728\u786c\u4ef6\u7684\u50a8\u5b58\u65b9\u5f0f\uff0cTensor\u7684\u6700\u540e\u4e00\u4e2a\u7ef4\u5ea6\u4f1a\u5411\u4e0a\u5bf9\u9f50\uff0c\u56e0\u6b64\u8f93\u51fa\u7684\u7ef4\u5ea6\u4e3aTensor\u5bf9\u9f50\u7684\u7ef4\u5ea6\u3002\u6700\u540e\u5bf9\u9f50\u7684\u6570\u636e\u662f\u65e0\u7528\u6570\u636e\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u65b9\u6cd5\u53bb\u9664\uff1a >>> result = result [ ... , : output_details [ 0 ][ 'shape' ][ - 1 ]] >>> print ( result . shape ) ( 1 , 257 , 257 , 30 ) \u914d\u7f6einput_config.ini\u4e2d[OUTPUT_CONFIG]\u7684dequantizations\u4e3aTRUE\u65f6\uff0c\u5b9a\u70b9\u548c\u79bb\u7ebf\u6a21\u578b\u7684\u8f93\u51faTensor\u7684shape\u4e0eFloat\u6a21\u578b\u7ef4\u5ea6\u76f8\u540c\u3002 get_tensor_details \u8fd4\u56de\u7f51\u7edc\u6a21\u578b\u6bcf\u4e2aTensor\u7684\u4fe1\u606f\uff08list\uff09 Float\u6a21\u578b\u8fd4\u56de\u5982\u4e0b\uff1a >>> tensor_details = model . get_tensor_details () >>> print ( tensor_details ) [ { 'name' : 'MobilenetV2/Conv/Conv2D' , 'shape' : array ([ 1 , 257 , 257 , 30 ], dtype = int32 ), 'dtype' : 'FLOAT32' , 'qtype' : 'INT16' }, { 'name' : 'MobilenetV2/Conv/Conv2D_bias' , 'shape' : array ( [ 2 , 30 ], dtype = int32 ), 'dtype' : 'FLOAT32' , 'qtype' : 'INT16' }, { 'name' : 'MobilenetV2/Conv/weights/read' , 'shape' : array ( [ 30 , 3 , 3 , 3 ], dtype = int32 ), 'dtype' : 'FLOAT32' , 'qtype' : 'INT8' }, { 'name' : 'sub_7' , 'shape' : array ([ 1 , 513 , 513 , 3 ], dtype = int32 ), 'dtype' : 'FLOAT32' , 'qtype' : 'UINT8' } ] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578bTensor\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a name : Tensor\u540d\u79f0 shape : Tensor\u7684\u5f62\u72b6 dtype : Tensor\u7684\u6570\u636e\u7c7b\u578b qtype : \u5b9a\u70b9\u6a21\u578b\u8be5Tensor\u53ef\u80fd\u7684\u6570\u636e\u7c7b\u578b\uff08quantization type\uff09 Fixed\u548cOffline\u6a21\u578b\u5982\u679cinput_config.ini\u4e2d[OUTPUT_CONFIG]\u7684dequantizations\u914d\u7f6e\u4e3aFALSE\u65f6\u8fd4\u56de\u5982\u4e0b\uff1a >>> tensor_details = model . get_tensor_details () >>> print ( tensor_details ) [ { 'shape' : array ([ 1 , 257 , 257 , 30 ]), 'quantization' : [( 0.00013832777040079236 , 0 )], 'min' : [ - 4.230099201202393 ], 'max' : [ 4.532586097717285 ], 'name' : 'MobilenetV2/Conv/Conv2D' , 'dtype' : 'INT16' }, { 'shape' : array ([ 2 , 30 ]), 'quantization' : [], 'min' : [ 0.0 ], 'max ' : [ 1.0 ], 'name' : 'MobilenetV2/Conv/Conv2D_bias' , 'dtype' : 'INT16' }, { 'shape' : array ([ 30 , 3 , 3 , 3 ]), 'quantization' : [( 0.004813921172171831 , 0 )], 'min' : [ - 0.5498989820480347 ], 'max' : [ 0.6113680005073547 ], 'name' : 'MobilenetV2/Conv/weights/read' , 'dtype' : 'INT8' }, { 'shape' : array ([ 1 , 513 , 513 , 3 ]), 'quantization' : [( 0.007843137718737125 , 128 )], 'min' : [ - 1 . 0 ], 'max' : [ 1.0 ], 'name' : 'sub_7' , 'dtype' : 'UINT8' } ] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578bTensor\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a name : Tensor\u540d\u79f0 shape : Tensor\u7684\u5f62\u72b6 dtype : Tensor\u7684\u6570\u636e\u7c7b\u578b quantization : Tensor\u7684scale\u548czero_point min : Tensor\u7684\u6700\u5c0f\u503c max : Tensor\u7684\u6700\u5927\u503c \u914d\u7f6einput_config.ini\u4e2d[OUTPUT_CONFIG]\u7684dequantizations\u4e3aTRUE\u65f6\uff0c\u4f1a\u5728\u8f6c\u6362Fixed\u6a21\u578b\u65f6\u5728\u589e\u52a0Fix2float\u7b97\u5b50\uff0c\u8be5\u7b97\u5b50\u4f1a\u8f6c\u6362\u5b9a\u70b9\u6570\u636e\u5230\u6d6e\u70b9\u6570\u636e\uff0c\u56e0\u6b64model.get_tensor_details()\u5c06\u4e0d\u518d\u6709'quantization'\u4fe1\u606f\u3002 5.2.2 calibrator_custom.SIM_Simulator \u00b6 \u5bf9\u4e8e\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u540c\u65f6\u8f6c\u6362\u65f6\uff0c\u63d0\u4f9bcalibrator_custom.SIM_Simulator\uff0c\u65b9\u4fbf\u8fdb\u884c\u7b80\u5355\u5b9a\u4e49\u540e\uff0c\u7edf\u4e00\u8fd0\u884c\u3002 calibrator_custom.SIM_Simulator\u662f\u5df2\u7ecf\u5b9e\u73b0\u597d\u7684class\uff0c\u5f53\u4e2d\u53ea\u6709forward\u65b9\u6cd5\u672a\u5b9e\u73b0\uff0c\u4f7f\u7528\u65f6\u4ec5\u9700\u5b9e\u73b0\u8be5\u65b9\u6cd5\uff0c\u5373\u53ef\u8f6c\u6362\u5b8c\u6210\u3002 \u4e0b\u9762\u4ee5 SGS_IPU_SDK/Scripts/examples/sim_simulator.py \u4e3a\u4f8b\uff0c\u8bf4\u660ecalibrator_custom.SIM_Simulator\u7684\u4f7f\u7528\u65b9\u6cd5\uff1a import calibrator_custom class Net ( calibrator_custom . SIM_Simulator ): def __init__ ( self ): super () . __init__ () self . model = calibrator_custom . fixed_simulator ( model_path ) def forward ( self , x ): out_details = self . model . get_output_details () self . model . set_input ( 0 , x ) self . model . invoke () result_list = [] for idx in range ( len ( out_details )): result = self . model . get_output ( idx ) # for Fixed and Offline model if result . shape [ - 1 ] != out_details [ idx ][ 'shape' ][ - 1 ]: result = result [ ... , : out_details [ idx ][ 'shape' ][ - 1 ]] if out_details [ idx ][ 'dtype' ] == np . int16 : scale , _ = out_details [ idx ][ 'quantization' ] result = np . dot ( result , scale ) result_list . append ( result ) return result_list \u5b9a\u4e49forward\u65b9\u6cd5\uff0cforward\u7684\u53c2\u6570\u4e3a\u6a21\u578b\u8f93\u5165\uff0c\u5982\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u53ef\u589e\u52a0forward\u7684\u53c2\u6570\u3002 \u521b\u5efacalibrator_custom.SIM_Simulator\u7684\u5b9e\u4f8b net = Net () \u8c03\u7528calibrator_custom.SIM_Simulator\u5b9e\u4f8b\u7684\u65b9\u6cd5 result = net ( img_gen , num_process = 4 ) \u8c03\u7528calibrator_custom.SIM_Simulator\u5b9e\u4f8b\uff0c\u9700\u8981\u7ed9\u5b9a\u8f93\u5165\u56fe\u7247\u7684numpy.ndarray\u6216\u8005\u56fe\u7247\u751f\u6210\u5668\u3002 \u5f53num_process\u5927\u4e8e1\u65f6\uff0cimg_gen\u5fc5\u987b\u4e3a\u56fe\u7247\u751f\u6210\u5668\u3002 \u56fe\u7247\u751f\u6210\u5668\uff08img_gen\uff09 \u4e3a\u65b9\u4fbf\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u8f6c\u6362\u6a21\u578b\uff0c\u901a\u8fc7\u751f\u6210\u5668\u65b9\u4fbf\u7ec4\u7ec7\u8f93\u5165\u56fe\u7247\u7684\u5e8f\u5217\u3002\u5982\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u751f\u6210\u5668\u5e94\u8be5\u6309\u7167\u5b9a\u4e49forward\u65f6\u7684\u8f93\u5165\u987a\u5e8f\uff0c\u8fd4\u56de\u6709\u591a\u4e2anumpy.ndarray\u7684list\u3002 calibrator_custom.utils.image_preprocess_func\u4f7f\u7528\u9884\u5148\u5b9a\u4e49\u597d\u7684\u524d\u5904\u7406\u65b9\u6cd5 preprocess_func = calibrator_custom . utils . image_preprocess_func ( model_name ) def image_generator ( folder_path , preprocess_func , norm ): images = [ os . path . join ( folder_path , img ) for img in os . listdir ( folder_path )] for image in images : img = preprocess_func ( image , norm ) yield [ img ] img_gen = image_generator ( './images' , preprocess_func , False )","title":"Simulate"},{"location":"module/User_Guide/Develop/Simulate.html#51","text":"Simulator\u5de5\u5177\u7684\u4f4d\u7f6e\u5728 ~/SGS_IPU_SDK/SRC/Tool/Scripts/calibrator/simulator.py \u3002 \u8be5\u5de5\u5177\u5177\u6709\u4ee5\u4e0b\u529f\u80fd\uff1a \u5bf9\u5206\u7c7b\u7f51\u7edc\u6570\u636e\u96c6\u9a8c\u8bc1\uff1b \u5bf9\u68c0\u6d4b\u7f51\u7edc\u6570\u636e\u96c6\u9a8c\u8bc1\uff08\u652f\u6301COCO\u6570\u636e\u96c6\uff09\uff1b \u5bf9\u5355\u5f20\u56fe\u7247\u9884\u6d4b\uff1b \u7ed8\u5236\u5355\u5f20\u56fe\u7247\u76ee\u6807\u68c0\u6d4b\u7ed3\u679c\uff1b \u5728SGS_IPU_SDK\u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK/Project make distclean ;source build/{IPU_Version}/cfg_tf.sh ;make -j32 (IPU_Version \u53ef\u9009\u62e9IPU100,IPU200M,IPU260) \u8fdb\u5165\u5230\u8be5\u5de5\u5177\u76ee\u5f55\uff0c\u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a \u6d4b\u8bd5ILSVRC\u6570\u636e\u96c6\uff0c\u5e76\u8fd4\u56de\u6a21\u578b\u7cbe\u5ea6\u7ed3\u679c\uff1a cd ~/tensorflow_ssd/ python3 ~/SGS_IPU_SDK/SRC/Tool/Scripts/calibrator/simulator.py \\ -i ~/SGS_IPU_SDK/SGS_Models/resource/detection/coco2017_val_set100 \\ -m ~/tensorflow_ssd/ssd_mobilenet_v1_float.sim \\ -l ~/SGS_IPU_SDK/SGS_Models/resource/detection/coco2017_val_set100.json \\ -c Detection -t Float \\ -n ssd_mobilenet_v1 \\ --num_process 10 \u6216\u8005\u53ef\u4ee5\u4f7f\u7528\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\uff1a python3 ~/SGS_IPU_SDK/SRC/Tool/Scripts/calibrator/simulator.py \\ -i ~/SGS_IPU_SDK/SGS_Models/resource/classify/ilsvrc2012_val_set100/file.list \\ -m ~/SGS_IPU_SDK/SGS_Models/tensorflow/mobilenet_v2/mobilenet_v2_float.sim \\ -l ~/SGS_IPU_SDK/SGS_Models/resource/classify/tensorflow_labels.txt \\ -c Classification \\ -t Float \\ -n mobilenet_v2 \\ --num_process 20 \u6d4b\u8bd5COCO2017\u6570\u636e\u96c6\uff0c\u5e76\u8fd4\u56de\u6a21\u578b\u68c0\u6d4b\u7ed3\u679c\uff1a python3 ~/SGS_IPU_SDK/SRC/Tool/Scripts/calibrator/simulator.py \\ -i ~/SGS_IPU_SDK/SGS_Models/resource/detection/coco2017_val_set100 \\ -m ~/SGS_IPU_SDK/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1_float.sim \\ -l ~/SGS_IPU_SDK/SGS_Models/resource/detection/coco2017_val_set100.json \\ -c Detection \\ -t Float \\ -n ssd_mobilenet_v1 \\ --num_process 10 \u6216\u8005\u53ef\u4ee5\u4f7f\u7528\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\uff1a python3 ~/SGS_IPU_SDK/SRC/Tool/Scripts/calibrator/simulator.py \\ -i ~/SGS_IPU_SDK/SGS_Models/resource/detection/coco2017_val_set100/file.list \\ -m ~/SGS_IPU_SDK/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1_float.sim \\ -l ~/SGS_IPU_SDK/SGS_Models/resource/detection/coco2017_val_set100.json \\ -c Detection \\ -t Float \\ -n ssd_mobilenet_v1 \\ --num_process 10 \u6d4b\u8bd5\u5355\u5f20\u56fe\u7247\uff0c\u5e76\u5c06\u68c0\u6d4b\u7ed3\u679c\u7ed8\u5236\u5728\u56fe\u7247\u4e0a\uff0c\u4fdd\u5b58\u5230 ./results/ \u6587\u4ef6\u5939\u4e0b\uff1a python3 ~/SGS_IPU_SDK/SRC/Tool/Scripts/calibrator/simulator.py \\ -i ~/SGS_IPU_SDK/SGS_Models/resource/detection/coco2017_val_set100/000000567877.jpg \\ -m ~/SGS_IPU_SDK/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1_float.sim \\ -c Detection \\ -t Float \\ -n ssd_mobilenet_v1 \\ --draw_result ./results \u5bf9\u8be5\u5de5\u5177\u53c2\u6570\u7684\u5177\u4f53\u8bf4\u660e\u5982\u4e0b\u3002","title":"5.1. \u4f7f\u7528\u65b9\u6cd5"},{"location":"module/User_Guide/Develop/Simulate.html#511","text":"-i , --image : \u56fe\u7247\u6587\u4ef6 / \u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84 / \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u3002 -m , --model : \u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 -c , --category : \u6a21\u578b\u7684\u7c7b\u522b\uff0c\u4e3b\u8981\u6709Classification / Detection / Unknown\u3002 Classification : \u6a21\u578b\u67091\u4e2a\u8f93\u51fa\uff0c\u4f1a\u6839\u636e\u8f93\u51fa\u6392\u5e8f\u8f93\u51fa\u5206\u6570\u7531\u9ad8\u81f3\u4f4e\u7684\u524d5\u4e2a\u3002 Detection : \u6a21\u578b\u67094\u4e2a\u8f93\u51fa\uff0c\u4f1a\u6839\u636e\u8f93\u51fa\u8f6c\u6362\u4e3a\u8f93\u5165\u56fe\u7247\u7684bbox\u4f4d\u7f6e\u4ee5\u53ca\u7c7b\u522b\u3002\u53ea\u652f\u6301SigmaStar\u540e\u5904\u7406\u7b97\u5b50 [SigmaStar\u540e\u5904\u7406\u6a21\u5757]\u3002\u5176\u4ed6\u540e\u5904\u7406\u8bf7\u4f7f\u7528Unknown\u3002 Unknown : \u6a21\u578b\u8f93\u51fa\u4e0d\u5c5e\u4e8e\u4e0a\u8ff0\u4e24\u79cd\u7c7b\u578b\uff0c\u4f1a\u8f93\u51fa\u5168\u90e8\u7684Tensor\u6570\u503c\u3002 -t , --type : \u6a21\u578b\u7684\u6570\u636e\u7c7b\u578b\uff1a Float : \u6d6e\u70b9\u6a21\u578b\u3002 Fixed : \u5b9a\u70b9\u5728\u7ebf\u6a21\u578b\u3002 Offline : \u5b9a\u70b9\u79bb\u7ebf\u6a21\u578b\u3002 Please Note: \u4e0d\u52a0-n/--preprocess\u53c2\u6570\u65f6\uff0c-i/--image\u4e0d\u80fd\u7ed9\u56fe\u7247\u6216\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\u3002 -i/--image\u53c2\u6570\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\u65f6\uff1a \u7f51\u7edc\u6a21\u578b\u4e3a\u5355\u8f93\u5165\u65f6\uff1a ~/SGS_IPU_SDK/image_test/2007000364.jpg ~/SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp ... \u7f51\u7edc\u6a21\u578b\u4e3a\u591a\u8f93\u5165\u65f6\uff1a ~/SGS_IPU_SDK/image_test/2007000364.jpg,~/SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp ~/SGS_IPU_SDK/image_test/2007000365.jpg,~/SGS_IPU_SDK/image_test/ILSVRC2012_test_00000003.bmp ...","title":"5.1.1   \u5fc5\u9009\u53c2\u6570"},{"location":"module/User_Guide/Develop/Simulate.html#512","text":"-l , --label : \u6570\u636e\u96c6\u7684\u6807\u7b7e\u6587\u4ef6\u8def\u5f84 / \u56fe\u7247\u6587\u5b57\u63cf\u8ff0\u7684\u6807\u7b7e\u3002 -n , --preprocess : \u6a21\u578b\u540d\u79f0\uff0c\u4e0e\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\u76f8\u5173\uff0c\u8be6\u89c1 [3.2. \u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5]\u3002 \u4e5f\u53ef\u4ee5\u5b8c\u6210\u524d\u5904\u7406\u6587\u4ef6\u914d\u7f6e\u540e\uff0c\u7ed9\u5b9a\u524d\u5904\u7406\u6587\u4ef6\u8def\u5f84\u3002\u4e0d\u52a0\u8be5\u53c2\u6570\uff0c\u56fe\u7247\u53c2\u6570\u9700\u8981\u7ed9\u539f\u59cb\u6570\u636e\uff0c\u53ef\u91c7\u7528--save_input\u4fdd\u5b58\u56fe\u7247\u6570\u636e\u540e\uff0c\u6839\u636e\u8be5\u683c\u5f0f\u5236\u5b9a\u5176\u4ed6\u7684\u539f\u59cb\u6570\u636e\u3002 \u6ce8\u610f\u4e8b\u9879 \u82e5\u6a21\u578b\u4e3a \u591a\u8f93\u5165 \u65f6\uff0c -n,--preprocess \u53c2\u6570\u7528\u6cd5\u9700\u8981\u591a\u4e2a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4f8b\u5982 -n preprocess1.py,preprocess2.py \u6216\u8005 --preprocess preprocess1.py,preprocess2.py --tool : sgs_simulator\u6587\u4ef6\u8def\u5f84\u3002 --skip_garbage : Fixed\u548cOffline\u6a21\u578b\u8f93\u51fa\u7ed3\u679c\u8df3\u8fc7\u65e0\u7528\u6570\u636e\u3002 --dump_rawdata : \u4fdd\u5b58Fixed\u548cOffline\u6a21\u578b\u8f93\u5165\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u6587\u4ef6\u540d\u4e3a\u56fe\u7247\u540d + .bin\uff0c\u4fdd\u5b58\u5728\u5f53\u524d\u8def\u5f84\u3002 --num_process : \u8fdb\u7a0b\u6570\uff0c\u8fd0\u884c\u540c\u65f6\u8fd0\u884c\u7684\u8fdb\u7a0b\u6570\u3002\uff08\u53ef\u9009\u53c2\u6570\uff0c\u4e0d\u52a0\u8be5\u53c2\u6570\u9ed8\u8ba4\u4e3a\u5355\u7ebf\u7a0b\uff09\u9a8c\u8bc1\u6570\u636e\u96c6\u5fc5\u987b\u52a0\u6b64\u53c2\u6570\u4e14\u8fdb\u7a0b\u6570 > 1\u3002 --draw_result : \u7ed8\u5236\u76ee\u6807\u68c0\u6d4b\u7f51\u7edc\u9009\u6846\u7ed3\u679c\uff0c\u53c2\u6570\u4e3a\u7ed3\u679c\u4fdd\u5b58\u6587\u4ef6\u5939\u8def\u5f84\uff08\u6587\u4ef6\u5939\u4e0d\u5b58\u5728\u4f1a\u81ea\u52a8\u521b\u5efa\uff09\u548c\u753b\u6846\u7684\u9608\u503c\uff0c\u4f7f\u7528\u9017\u53f7( , )\u5206\u9694\u4fdd\u5b58\u8def\u5f84\u4e0e\u9608\u503c\u3002\u8f93\u5165\u9608\u503c\u753b\u51fa\u5927\u4e8e\u9608\u503c\u7684\u68c0\u6d4b\u7ed3\u679c\uff0c\u4e0d\u8f93\u5165\u9608\u503c\u5219\u753b\u51fa\u5168\u90e8\u68c0\u6d4b\u7ed3\u679c\u3002 --continue_run : \u63a5\u7740\u4e0a\u6b21\u6570\u636e\u96c6\u5269\u4e0b\u7684\u90e8\u5206\u8fd0\u884c\u3002 --save_input : \u4fdd\u5b58simulator \u524d\u5904\u7406\u540e\u7684\u6587\u4ef6\uff0c\u9ed8\u8ba4\u4e0d\u4fdd\u5b58\u3002\u6587\u4ef6\u4e3a\u6587\u672c\u6587\u4ef6\uff0c\u4f1a\u5728\u8fd0\u884c\u8def\u5f84\u4e0b\u521b\u5efa\u6587\u4ef6\u5939tmp_image\uff0c\u6587\u4ef6\u4fdd\u5b58\u5728 ./tmp_image/imagename \u56fe\u7247\u540d\u3002","title":"5.1.2   \u53ef\u9009\u53c2\u6570"},{"location":"module/User_Guide/Develop/Simulate.html#513","text":"simulator\u5de5\u5177\u4f1a\u5bfb\u627e\u7cfb\u7edf\u53d8\u91cf\u4ece\u800c\u83b7\u5f97\u5bf9\u5e94\u9636\u6bb5\u4efb\u52a1\u6240\u9700\u5de5\u5177\u8def\u5f84\uff0c\u56e0\u6b64\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u53c2\u6570-t/--tool\u4e0d\u7528\u6307\u5b9a\u76f8\u5173\u5de5\u5177\u7684\u4f4d\u7f6e\u3002 simulator\u5de5\u5177\u6bcf\u6b21\u8fd0\u884c\u7ed3\u675f\u540e\u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u521b\u5efalog\u76ee\u5f55\uff0clog\u76ee\u5f55\u4e0b\u7684output\u6587\u4ef6\u5939\uff0c\u5b58\u653e\u6a21\u578b\u63a8\u6f14\u7684\u7ed3\u679c\u3002 \u5f53 -i/--image \u7684\u53c2\u6570\u4e3a\u5355\u5f20\u56fe\u7247\u7684\u8def\u5f84\u65f6\uff0csimulator\u53ea\u5bf9\u8be5\u56fe\u7247\u63a8\u6f14\uff1b\u5f53 -i/--image \u7684\u53c2\u6570\u4e3a\u56fe\u7247\u6587\u4ef6\u5939\u7684\u8def\u5f84\u65f6\uff0csimulator\u4f1a\u5bf9\u6587\u4ef6\u5939\u5185\u7684\u56fe\u7247\u5168\u90e8\u63a8\u6f14\uff0c\u6b64\u65f6\u589e\u52a0--num_process\uff08\u53c2\u6570 > 1\uff09\uff0c\u53ef\u4ee5\u5f00\u542f\u591a\u8fdb\u7a0b\u63a8\u6f14\u3002 \u5f53 -l/--label \u7684\u53c2\u6570\u4e3a\u6570\u636e\u96c6\u6807\u7b7e\u6587\u4ef6\u8def\u5f84\u65f6\u5fc5\u987b\u4f7f\u7528--num_process\u53c2\u6570\uff0c\u6570\u636e\u96c6\u9a8c\u8bc1\u652f\u6301ImageNet\uff08Top1\u3001Top5\uff09\u3001COCO\u76ee\u6807\u68c0\u6d4b(mmAP)\uff1b\u5f53 -l/--label \u53c2\u6570\u4e3a\u56fe\u7247\u6587\u5b57\u63cf\u8ff0\u6807\u7b7e\u65f6\uff0c\u4e0d\u80fd\u4f7f\u7528\u9009\u9879--num_process\u3002 -c/--category \u7684\u53c2\u6570\u9009\u62e9Unknown\u65f6\uff0c\u5206\u4e3a\u4e24\u79cd\u60c5\u51b5 \u5f53input_config.ini\u4e2d[OUTPUT_CONFIG]\u7684dequantizations\u4e3a'TRUE'\u65f6\uff0c\u5b9a\u70b9\u548c\u79bb\u7ebf\u6a21\u578b\u7684\u8f93\u51faTensor\u7ef4\u5ea6\u4e0e\u6a21\u578b\u7ef4\u5ea6\u76f8\u540c \u5f53input_config.ini\u4e2d[OUTPUT_CONFIG]\u7684dequantizations\u4e3a'FALSE'\u65f6\uff0c\u6a21\u578b\u8f93\u51faTensor\u7684\u7684\u6700\u540e\u4e00\u4e2a\u7ef4\u5ea6\u4f1a\u5411\u4e0a\u63098\u4e2a\u6570\u5bf9\u9f50 layer46 - conv Tensor : { tensor dim : 4 , Original shape :[ 1 13 13 255 ], Alignment shape :[ 1 13 13 256 ] The following tensor data shape is alignment shape . tensor data : ... \u5bf9\u4e8eFixed\u548cOffline\u7684\u6a21\u578b\uff0c\u5f97\u5230\u6709\u7528\u6570\u636e\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0bPython\u4ee3\u7801\uff08\u5047\u8bbe\u53d8\u91cfData \u662f\u7ef4\u5ea6\u4e3a[1, 13, 13, 256]\u7684np.array\u6570\u636e\uff0c\u771f\u6b63\u6709\u7528\u7684\u6570\u636eUseful_Data\u7ef4\u5ea6\u4e3a[1, 13, 13, 255]\uff09\uff1a Useful_Data = Data [:, :, :, : 255 ]","title":"5.1.3   \u6ce8\u610f\u4e8b\u9879"},{"location":"module/User_Guide/Develop/Simulate.html#52-calibrator_customsimulator","text":"calibrator_custom.simulator\u662f\u57fa\u4e8ePython\u7684\u5feb\u901f\u91cf\u5316\u548c\u8f6c\u6362\u6a21\u578b\u7684\u6a21\u5757\u3002\u4f7f\u7528calibrator_custom.simulator\u53ef\u4ee5\u66f4\u65b9\u4fbf\u7075\u6d3b\u7684\u5bf9\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u8fdb\u884c\u91cf\u5316\u548c\u8f6c\u6362\u3002calibrator_custom.simulator\u5305\u542b3\u79cd\uff0c\u7528\u4e8e\u89e3\u6790\u4e0d\u540c\u9636\u6bb5\u7684\u6a21\u578b\u3002 calibrator_custom.float_simulator \u7528\u4e8e\u89e3\u6790float\u6a21\u578b calibrator_custom.fixed_simulator \u7528\u4e8e\u89e3\u6790fixed\u6a21\u578b calibrator_custom.offline_simulator \u7528\u4e8e\u89e3\u6790offline\u6a21\u578b \u76ee\u524d\u57fa\u4e8e\u7684docker\u73af\u5883\uff0c\u63d0\u4f9bPython3.5\u7684\u9884\u7f16\u8bd1\u7684Python\u6a21\u5757\u3002\u7531\u4e8efixed\u6a21\u578b\u548coffline\u6a21\u578b\u4f7f\u752832\u4f4d\u8fd0\u884c\u5e93\uff0c\u56e0\u6b64\u9700\u4f7f\u752832\u4f4dPython3.5\u73af\u5883\u8fd0\u884c\u3002Docker\u4e2d\u5df2\u66f4\u65b032\u4f4dPython3.5\u73af\u5883\uff0c\u4f7f\u7528python32\u5373\u53ef\u8fd0\u884c\u3002float\u6a21\u578b\u4f7f\u752864\u4f4dPython\u8fd0\u884c\u3002 \u4e0b\u9762\u57fa\u4e8ecalibrator_custom.float_simulator\uff0c\u8bf4\u660e\u4f7f\u7528\u65b9\u6cd5\u548c\u76f8\u5173API\u63a5\u53e3\uff1a import calibrator_custom model_path = './mobilenet_v2_float.sim' model = calibrator_custom . float_simulator ( model_path ) calibrator_custom.float_simulator \u4f7f\u7528calibrator_custom.float_simulator\u65f6\uff0c\u9700\u8981\u7ed9\u5b9afloat.sim\u6a21\u578b\u7684\u8def\u5f84\uff0c\u7528\u4e8e\u521b\u5efafloat_simulator\u7684\u5b9e\u4f8b\u3002\u53c2\u6570\u7ed9\u5b9a\u9519\u8bef\uff0c\u5c06\u65e0\u6cd5\u6210\u529f\u521b\u5efafloat_simulator\u5b9e\u4f8b\uff0c\u5e76\u8fd4\u56deValueError\u3002","title":"5.2. calibrator_custom.simulator"},{"location":"module/User_Guide/Develop/Simulate.html#521-calibrator_customsimulator","text":"get_input_details : \u8fd4\u56de\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u4fe1\u606f\uff08list\uff09 Float\u6a21\u578b\u8fd4\u56de\u5982\u4e0b\uff1a input_details = model . get_input_details () print ( input_details ) [ { 'name' : 'sub_7' , 'shape' : array ([ 1 , 513 , 513 , 3 ], dtype = int32 ), 'dtype' : < class ' numpy . float32 '>, 'index' : 0 } ] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578b\u8f93\u5165\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a index : \u8f93\u5165Tensor\u5e8f\u53f7 name : \u8f93\u5165Tensor\u540d\u79f0 shape : \u8f93\u5165Tensor\u7684\u5f62\u72b6 dtype : \u8f93\u5165Tensor\u7684\u6570\u636e\u7c7b\u578b Fixed\u548cOffline\u6a21\u578b\u8fd4\u56de\u5982\u4e0b\uff1a >>> input_details = model . get_input_details () >>> print ( input_details ) [ { 'index' : 0 , 'shape' : array ([ 1 , 513 , 513 , 3 ]), 'dtype' : < class ' numpy . uint8 '>, 'name' : 'sub_7' , 'input_formats' : 'RGB' , 'training_input_formats' : 'RGB' } ] get_output_detail \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578b\u8f93\u5165\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a index : \u8f93\u5165Tensor\u5e8f\u53f7 name : \u8f93\u5165Tensor\u540d\u79f0 shape : \u8f93\u5165Tensor\u7684\u5f62\u72b6 dtype : \u8f93\u5165Tensor\u7684\u6570\u636e\u7c7b\u578b input_formats : \u7f51\u7edc\u6a21\u578b\u5b9e\u9645\u8fd0\u884c\u65f6\u7684\u56fe\u7247\u8f93\u5165\u683c\u5f0f training_input_formats : \u7f51\u7edc\u6a21\u578b\u8bad\u7ec3\u662f\u7684\u56fe\u7247\u8f93\u5165\u683c\u5f0f \u8fd4\u56de\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u4fe1\u606f\uff08list\uff09 Float\u6a21\u578b\u8fd4\u56de\u5982\u4e0b\uff1a >>> output_details = model . get_output_details () >>> print ( output_details ) [ { 'name' : 'MobilenetV2/Conv/Conv2D' , 'shape' : array ([ 1 , 257 , 257 , 30 ], dtype = int32 ), 'dtype' : < class ' numpy . float32 '>, 'index' : 0 } ] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578b\u8f93\u51fa\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a index : \u8f93\u51faTensor\u5e8f\u53f7 name : \u8f93\u51faTensor\u540d\u79f0 shape : \u8f93\u51faTensor\u7684\u5f62\u72b6 dtype : \u8f93\u51faTensor\u7684\u6570\u636e\u7c7b\u578b Fixed\u548cOffline\u6a21\u578b\u8fd4\u56de\u5982\u4e0b\uff1a >>> output_details = model . get_output_details () >>> print ( output_details ) [ { 'index' : 0 , 'shape' : array ([ 1 , 257 , 257 , 30 ]), 'name' : 'MobilenetV2/Conv/Conv2D' , 'dtype' : < class ' numpy . int16 '>, 'quantization' : ( 0.00013832777040079236 , 0 ) } ] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578b\u8f93\u51fa\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a index : \u8f93\u51faTensor\u5e8f\u53f7 name : \u8f93\u51faTensor\u540d\u79f0 shape : \u8f93\u51faTensor\u7684\u5f62\u72b6 dtype : \u8f93\u51faTensor\u7684\u6570\u636e\u7c7b\u578b quantization : \u8f93\u51faTensor\u7684scale\u548czero_point\uff08\u9700\u5c06\u6a21\u578b\u8f93\u51faTensor\u4e58scale\u5f97\u5230\u6d6e\u70b9\u6570\uff09 set_input : \u8bbe\u7f6e\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u6570\u636e >>> model . set_input ( 0 , img_data ) \u8f93\u5165\u6570\u636e\uff0c0\u4e3a\u8f93\u5165Tensor\u7684index\uff0c\u53ef\u4ee5\u5728get_input_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230\u3002img_data\u662f\u4e0emodel\u8f93\u5165shape\u548cdtype\u76f8\u540c\u7684numpy.ndarray\u683c\u5f0f\u6570\u636e\uff0c\u9519\u8bef\u7684shape\u6216dtype\uff0c\u5c06\u5bfc\u81f4set_input\u8fd4\u56deValueError\u3002\u5982\u679c\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u53ef\u4ee5\u591a\u6b21\u8c03\u7528set_input\uff0c\u6839\u636eget_input_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230index\u8bbe\u7f6e\u5bf9\u5e94Tensor\u7684\u8f93\u5165\u6570\u636e\u3002 invoke \u6a21\u578b\u8fd0\u884c\u4e00\u6b21 >>> model . invoke () \u8c03\u7528invoke\u524d\u8bf7\u5148\u4f7f\u7528set_input\u8bbe\u7f6e\u8f93\u5165\u6570\u636e\uff0c\u672a\u8c03\u7528set_input\u76f4\u63a5\u8c03\u7528invoke\u4f1a\u8fd4\u56deValueError\u3002 get_output \u83b7\u53d6\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u6570\u636e >>> result = model . get_output ( 0 ) \u83b7\u53d6\u8f93\u51fa\u6570\u636e\uff0c0\u4e3a\u8f93\u51faTensor\u7684index\uff0c\u53ef\u4ee5\u5728get_output_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230\uff0c\u8fd4\u56denumpy.ndarray\u683c\u5f0f\u8f93\u51fa\u6570\u636e\u3002\u5982\u679c\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u51fa\uff0c\u53ef\u4ee5\u591a\u6b21\u8c03\u7528get_output\uff0c\u6839\u636eget_output_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230index\u83b7\u53d6\u5bf9\u5e94Tensor\u7684\u8f93\u51fa\u6570\u636e\u3002 \u5047\u8bbe\u6a21\u578b\u8f93\u51fa\u7684shape\u4e3a[1, 257, 257, 30] Float\u6a21\u578b\u67e5\u770b\u7ed3\u679c\u7684shape >>> print ( result . shape ) ( 1 , 257 , 257 , 30 ) Fixed\u548cOffline\u6a21\u578b\u67e5\u770b\u7ed3\u679cshape >>> print ( result . shape ) ( 1 , 257 , 257 , 32 ) Fixed\u548cOffline\u6a21\u578b\u8f93\u51faTensor\u56e0\u4e3a\u6a21\u62df\u4e86\u5728\u786c\u4ef6\u7684\u50a8\u5b58\u65b9\u5f0f\uff0cTensor\u7684\u6700\u540e\u4e00\u4e2a\u7ef4\u5ea6\u4f1a\u5411\u4e0a\u5bf9\u9f50\uff0c\u56e0\u6b64\u8f93\u51fa\u7684\u7ef4\u5ea6\u4e3aTensor\u5bf9\u9f50\u7684\u7ef4\u5ea6\u3002\u6700\u540e\u5bf9\u9f50\u7684\u6570\u636e\u662f\u65e0\u7528\u6570\u636e\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u65b9\u6cd5\u53bb\u9664\uff1a >>> result = result [ ... , : output_details [ 0 ][ 'shape' ][ - 1 ]] >>> print ( result . shape ) ( 1 , 257 , 257 , 30 ) \u914d\u7f6einput_config.ini\u4e2d[OUTPUT_CONFIG]\u7684dequantizations\u4e3aTRUE\u65f6\uff0c\u5b9a\u70b9\u548c\u79bb\u7ebf\u6a21\u578b\u7684\u8f93\u51faTensor\u7684shape\u4e0eFloat\u6a21\u578b\u7ef4\u5ea6\u76f8\u540c\u3002 get_tensor_details \u8fd4\u56de\u7f51\u7edc\u6a21\u578b\u6bcf\u4e2aTensor\u7684\u4fe1\u606f\uff08list\uff09 Float\u6a21\u578b\u8fd4\u56de\u5982\u4e0b\uff1a >>> tensor_details = model . get_tensor_details () >>> print ( tensor_details ) [ { 'name' : 'MobilenetV2/Conv/Conv2D' , 'shape' : array ([ 1 , 257 , 257 , 30 ], dtype = int32 ), 'dtype' : 'FLOAT32' , 'qtype' : 'INT16' }, { 'name' : 'MobilenetV2/Conv/Conv2D_bias' , 'shape' : array ( [ 2 , 30 ], dtype = int32 ), 'dtype' : 'FLOAT32' , 'qtype' : 'INT16' }, { 'name' : 'MobilenetV2/Conv/weights/read' , 'shape' : array ( [ 30 , 3 , 3 , 3 ], dtype = int32 ), 'dtype' : 'FLOAT32' , 'qtype' : 'INT8' }, { 'name' : 'sub_7' , 'shape' : array ([ 1 , 513 , 513 , 3 ], dtype = int32 ), 'dtype' : 'FLOAT32' , 'qtype' : 'UINT8' } ] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578bTensor\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a name : Tensor\u540d\u79f0 shape : Tensor\u7684\u5f62\u72b6 dtype : Tensor\u7684\u6570\u636e\u7c7b\u578b qtype : \u5b9a\u70b9\u6a21\u578b\u8be5Tensor\u53ef\u80fd\u7684\u6570\u636e\u7c7b\u578b\uff08quantization type\uff09 Fixed\u548cOffline\u6a21\u578b\u5982\u679cinput_config.ini\u4e2d[OUTPUT_CONFIG]\u7684dequantizations\u914d\u7f6e\u4e3aFALSE\u65f6\u8fd4\u56de\u5982\u4e0b\uff1a >>> tensor_details = model . get_tensor_details () >>> print ( tensor_details ) [ { 'shape' : array ([ 1 , 257 , 257 , 30 ]), 'quantization' : [( 0.00013832777040079236 , 0 )], 'min' : [ - 4.230099201202393 ], 'max' : [ 4.532586097717285 ], 'name' : 'MobilenetV2/Conv/Conv2D' , 'dtype' : 'INT16' }, { 'shape' : array ([ 2 , 30 ]), 'quantization' : [], 'min' : [ 0.0 ], 'max ' : [ 1.0 ], 'name' : 'MobilenetV2/Conv/Conv2D_bias' , 'dtype' : 'INT16' }, { 'shape' : array ([ 30 , 3 , 3 , 3 ]), 'quantization' : [( 0.004813921172171831 , 0 )], 'min' : [ - 0.5498989820480347 ], 'max' : [ 0.6113680005073547 ], 'name' : 'MobilenetV2/Conv/weights/read' , 'dtype' : 'INT8' }, { 'shape' : array ([ 1 , 513 , 513 , 3 ]), 'quantization' : [( 0.007843137718737125 , 128 )], 'min' : [ - 1 . 0 ], 'max' : [ 1.0 ], 'name' : 'sub_7' , 'dtype' : 'UINT8' } ] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578bTensor\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a name : Tensor\u540d\u79f0 shape : Tensor\u7684\u5f62\u72b6 dtype : Tensor\u7684\u6570\u636e\u7c7b\u578b quantization : Tensor\u7684scale\u548czero_point min : Tensor\u7684\u6700\u5c0f\u503c max : Tensor\u7684\u6700\u5927\u503c \u914d\u7f6einput_config.ini\u4e2d[OUTPUT_CONFIG]\u7684dequantizations\u4e3aTRUE\u65f6\uff0c\u4f1a\u5728\u8f6c\u6362Fixed\u6a21\u578b\u65f6\u5728\u589e\u52a0Fix2float\u7b97\u5b50\uff0c\u8be5\u7b97\u5b50\u4f1a\u8f6c\u6362\u5b9a\u70b9\u6570\u636e\u5230\u6d6e\u70b9\u6570\u636e\uff0c\u56e0\u6b64model.get_tensor_details()\u5c06\u4e0d\u518d\u6709'quantization'\u4fe1\u606f\u3002","title":"5.2.1   calibrator_custom.simulator\u65b9\u6cd5"},{"location":"module/User_Guide/Develop/Simulate.html#522-calibrator_customsim_simulator","text":"\u5bf9\u4e8e\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u540c\u65f6\u8f6c\u6362\u65f6\uff0c\u63d0\u4f9bcalibrator_custom.SIM_Simulator\uff0c\u65b9\u4fbf\u8fdb\u884c\u7b80\u5355\u5b9a\u4e49\u540e\uff0c\u7edf\u4e00\u8fd0\u884c\u3002 calibrator_custom.SIM_Simulator\u662f\u5df2\u7ecf\u5b9e\u73b0\u597d\u7684class\uff0c\u5f53\u4e2d\u53ea\u6709forward\u65b9\u6cd5\u672a\u5b9e\u73b0\uff0c\u4f7f\u7528\u65f6\u4ec5\u9700\u5b9e\u73b0\u8be5\u65b9\u6cd5\uff0c\u5373\u53ef\u8f6c\u6362\u5b8c\u6210\u3002 \u4e0b\u9762\u4ee5 SGS_IPU_SDK/Scripts/examples/sim_simulator.py \u4e3a\u4f8b\uff0c\u8bf4\u660ecalibrator_custom.SIM_Simulator\u7684\u4f7f\u7528\u65b9\u6cd5\uff1a import calibrator_custom class Net ( calibrator_custom . SIM_Simulator ): def __init__ ( self ): super () . __init__ () self . model = calibrator_custom . fixed_simulator ( model_path ) def forward ( self , x ): out_details = self . model . get_output_details () self . model . set_input ( 0 , x ) self . model . invoke () result_list = [] for idx in range ( len ( out_details )): result = self . model . get_output ( idx ) # for Fixed and Offline model if result . shape [ - 1 ] != out_details [ idx ][ 'shape' ][ - 1 ]: result = result [ ... , : out_details [ idx ][ 'shape' ][ - 1 ]] if out_details [ idx ][ 'dtype' ] == np . int16 : scale , _ = out_details [ idx ][ 'quantization' ] result = np . dot ( result , scale ) result_list . append ( result ) return result_list \u5b9a\u4e49forward\u65b9\u6cd5\uff0cforward\u7684\u53c2\u6570\u4e3a\u6a21\u578b\u8f93\u5165\uff0c\u5982\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u53ef\u589e\u52a0forward\u7684\u53c2\u6570\u3002 \u521b\u5efacalibrator_custom.SIM_Simulator\u7684\u5b9e\u4f8b net = Net () \u8c03\u7528calibrator_custom.SIM_Simulator\u5b9e\u4f8b\u7684\u65b9\u6cd5 result = net ( img_gen , num_process = 4 ) \u8c03\u7528calibrator_custom.SIM_Simulator\u5b9e\u4f8b\uff0c\u9700\u8981\u7ed9\u5b9a\u8f93\u5165\u56fe\u7247\u7684numpy.ndarray\u6216\u8005\u56fe\u7247\u751f\u6210\u5668\u3002 \u5f53num_process\u5927\u4e8e1\u65f6\uff0cimg_gen\u5fc5\u987b\u4e3a\u56fe\u7247\u751f\u6210\u5668\u3002 \u56fe\u7247\u751f\u6210\u5668\uff08img_gen\uff09 \u4e3a\u65b9\u4fbf\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u8f6c\u6362\u6a21\u578b\uff0c\u901a\u8fc7\u751f\u6210\u5668\u65b9\u4fbf\u7ec4\u7ec7\u8f93\u5165\u56fe\u7247\u7684\u5e8f\u5217\u3002\u5982\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u751f\u6210\u5668\u5e94\u8be5\u6309\u7167\u5b9a\u4e49forward\u65f6\u7684\u8f93\u5165\u987a\u5e8f\uff0c\u8fd4\u56de\u6709\u591a\u4e2anumpy.ndarray\u7684list\u3002 calibrator_custom.utils.image_preprocess_func\u4f7f\u7528\u9884\u5148\u5b9a\u4e49\u597d\u7684\u524d\u5904\u7406\u65b9\u6cd5 preprocess_func = calibrator_custom . utils . image_preprocess_func ( model_name ) def image_generator ( folder_path , preprocess_func , norm ): images = [ os . path . join ( folder_path , img ) for img in os . listdir ( folder_path )] for image in images : img = preprocess_func ( image , norm ) yield [ img ] img_gen = image_generator ( './images' , preprocess_func , False )","title":"5.2.2   calibrator_custom.SIM_Simulator"},{"location":"module/User_Guide/Develop/Special_Model_Conversion.html","text":"9.1. \u7070\u5ea6\u6a21\u578b\u8f6c\u6362\u8981\u70b9 \u00b6 \u7070\u5ea6\u6a21\u578b\uff0c\u6307\u8f93\u5165\u662f\u5355\u901a\u9053\u56fe\u7247\u7684\u6a21\u578b\uff0c\u5373\u8f93\u5165C\u7ef4\u5ea6\u4e0a\u4e3a1\u7684\u6a21\u578b\u3002 9.1.1. \u7070\u5ea6\u6a21\u578binput_config\u914d\u7f6e\u4fe1\u606f\u8981\u70b9 \u00b6 input_config.ini\u6587\u4ef6\u4f7f\u7528\u57282.2\u8282input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e\u6709\u8fc7\u4ecb\u7ecd\uff0c\u5bf9\u4e8e\u7070\u5ea6\u6a21\u578b\uff0c\u8981\u6ce8\u610f\u5982\u4e0b\u8981\u70b9\u3002 input_config.ini\u6587\u4ef6\u4e2d\u8fd9\u4e24\u4e2a\u914d\u7f6e\u5fc5\u987b\u5199\u6210 [INPUT_CONFIG] ...... training_input_formats = RGB; input_formats = GRAY; ...... \u5c06\u7070\u5ea6\u56fe\u7247\u7684\u6709\u6548\u6570\u636e\u53ea\u653e\u5728R\u901a\u9053\u4e0a\uff0c\u56e0\u6b64\u4ec5\u9700\u8bbe\u7f6eR\u901a\u9053\u7684mean\u503c\uff08mean_red\uff09 [INPUT_CONFIG] ...... mean_red = 127.5; mean_green = 0.0; mean_blue = 0.0; ;std_value parameter for image models, std_value = 1.0; 9.1.2. \u7070\u5ea6\u56fe\u7247\u8f93\u5165\u6a21\u578b\u524d\u5904\u7406\u65b9\u6cd5 \u00b6 \u7070\u5ea6\u56fe\u7247\u8f93\u5165\u7684\u524d\u5904\u7406\u65b9\u6cd5\u4e0e3.2\u8282\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\u8981\u6c42\u76f8\u540c\uff0c\u51fd\u6570\u5fc5\u987b\u5305\u542b2\u4e2a\u53c2\u6570\uff1a \u56fe\u7247\u8def\u5f84 \u5f52\u4e00\u5316\u6807\u8bb0\uff08norm=True\uff09 \u53c2\u8003\u4ee3\u7801 SGS_IPU_SDK/Scripts/calibrator/preprocess_method/caffe_lenet.py import cv2 import numpy as np def get_image ( img_path , resizeH = 28 , resizeW = 28 , norm = True , meanR = 33.318 , std = 1 ): img = cv2 . imread ( img_path , flags =- 1 ) try : img_dim = img . shape [ 2 ] except IndexError : img_dim = 1 if img_dim == 3 : img = cv2 . cvtColor ( img , cv2 . COLOR_BGR2GRAY ) elif img_dim == 4 : img = cv2 . cvtColor ( img , cv2 . COLOR_BGRA2GRAY ) img_norm = cv2 . resize ( img , ( resizeW , resizeH ), interpolation = cv2 . INTER_LINEAR ) if norm : img_norm = ( img_norm - meanR ) / std img_norm = np . expand_dims ( img_norm , axis = 2 ) dummy = np . zeros (( 28 , 28 , 2 )) img_norm = np . concatenate (( img_norm , dummy ), axis = 2 ) img_norm = img_norm . astype ( 'float32' ) return img_norm def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm ) Please Note: \u7070\u5ea6\u56fe\u7247\u8f93\u5165\u6a21\u578b\u5728PC \u4e0a\u8fd0\u884c\u4e0e\u5f00\u53d1\u677f\u4e0a\u8fd0\u884c\u4e0d\u540c\u3002\u5728PC \u4e0a\u9700\u8981\u5c06\u5355\u901a\u9053\u56fe\u7247\u6269\u7ef4\u81f33 \u901a\u9053\uff0c\u5e76\u5728\u540e\u4e24\u4e2a\u901a\u9053 \u88650\uff0c\u5728\u5f00\u53d1\u677f\u4e0a\u9700\u8981YUV \u56fe\u7247\u8f93\u5165\u6570\u636e\u3002 9.2. RAWDATA_S16_NHWC\u8f93\u5165\u7684\u6a21\u578b \u00b6 RAWDATA_S16_NHWC \u53ef\u4ee5\u7528\u4e8e\u5206\u6bb5\u7f51\u7edc\u7684\u540e\u7aef\u7f51\u7edc\u6a21\u578b\u8f93\u5165\uff0c\u6216\u8005\u975e\u56fe\u7247\u6570\u636e\u8f93\u5165\u7684\u7f51\u7edc\u6a21\u578b\u3002 \u4f7f\u7528\u8be5\u79cd\u65b9\u5f0f\u8f93\u5165\u65f6\uff0c\u7531\u4e8e\u786c\u4ef6\u7684\u9650\u5236\u6761\u4ef6\uff0c\u6240\u4ee5\u9700\u8981\u63d0\u524d\u6392\u5217\u597d\u6570\u636e\u540e\u624d\u80fd\u8fdb\u884c\u8ba1\u7b97\u3002 \u8f6c\u6362\u65b9\u5f0f\u4e0e\u524d\u8ff0\u4ecb\u7ecd\u57fa\u672c\u76f8\u540c\uff0c\u4f46\u914d\u7f6e input_config.ini \u4e2d\u7684 training_input_formats \u548c input_formats \u65f6\u90fd\u586b\u5199 RAWDATA_S16_NHWC \u3002 9.2.1 \u6a21\u578b\u8f6c\u6362 \u00b6 \u5f53input_config.ini\u4e2d\u7684 training_input_formats \u548c input_formats \u90fd\u586b\u5199 RAWDATA_S16_NHWC \u65f6\uff0c\u6b64\u65f6input_config.ini\u4e2d mean_red \u3001 mean_green \u3001 mean_blue \u548c std_value \u4e0d\u4f1a\u518d\u5728\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u4e2d\u751f\u6548\uff0c\u6240\u6709\u524d\u5904\u7406\u8fc7\u7a0b\u90fd\u5c06\u5728\u8f93\u5165\u6a21\u578b\u524d\u5b8c\u6210\u3002 mean_red \u3001 mean_green \u3001 mean_blue \u548c std_value \u4e0d\u8981\u586b\u5199\u3002 \u7531\u4e8e\u6a21\u578b\u5728calibrator.py\u8f6c\u6362\u65f6\u4ecd\u7136\u4f7f\u7528\u6d6e\u70b9\u6570\u636e\uff0c\u56e0\u6b64\u8f6c\u6362\u65b9\u6cd5\u4e0e\u6b63\u5e38\u7f51\u7edc\u76f8\u540c\u3002\u53ef\u4ee5\u53c2\u8003\u7b2c3\u7ae0Calibrator\u7684\u4f7f\u7528\u65b9\u6cd5\u3002 9.2.2 \u6a21\u578b\u8fd0\u884c \u00b6 \u6d6e\u70b9\u6a21\u578b\u8fd0\u884c\u65f6\uff0c\u4f7f\u7528\u65b9\u6cd5\u4e0e\u8fd0\u884c\u56fe\u7247\u8f93\u5165\u7684\u6a21\u578b\u76f8\u540c\u3002 \u4f7f\u7528simulator.py\u8fd0\u884c\u5b9a\u70b9\u6a21\u578b\u8fd0\u884c\u65f6\uff0c\u524d\u5904\u7406\u65b9\u6cd5\u5e94\u4e0e\u6d6e\u70b9\u524d\u5904\u7406\u6a21\u578b\u4fdd\u6301\u4e00\u81f4\uff0c\u4ecd\u7136\u8f93\u5165norm=True\u65f6\u7684\u65b9\u6cd5\uff0c\u6240\u4ee5 RAWDATA_S16_NHWC \u7684\u7f51\u7edc\u524d\u5904\u7406Python\u6587\u4ef6\u7f16\u5199\u65f6norm\u4e3aTrue\u548cFalse\u7684\u5b9e\u73b0\u90fd\u5e94\u6309\u7167norm\u4e3aTrue\u65f6\u7f16\u5199\u3002simulator.py\u4f1a\u8bfb\u5165\u539f\u6d6e\u70b9\u6570\u636e\uff0c\u8fdb\u884c\u53cd\u91cf\u5316\u548c\u5bf9\u9f50\u6392\u5217\u540e\u8f93\u5165\u7ed9\u5b9a\u70b9\u6a21\u578b\u3002 \u4f7f\u7528calibrator_custom.fixed_simulator\u65f6\uff0c\u5b9a\u70b9\u5316\u548c\u5bf9\u9f50\u6392\u5217\u8fc7\u7a0b\u9700\u8981\u81ea\u884c\u5b8c\u6210\u3002\u4ee5\u4e0b\u4e3a\u4f8b\uff0c\u8bf4\u660e\u5b9a\u70b9\u5316\u548c\u5bf9\u9f50\u6392\u5217\u8fc7\u7a0b\u7684\u505a\u6cd5\u3002 >>> import calibrator_custom >>> model = calibrator_custom . fixed_simulator ( './mobilenet_v2_s16_fixed.sim' ) >>> input_details = model . get_input_details () >>> print ( input_details ) [{ 'input_formats' : 'RAWDATA_S16_NHWC' , 'training_input_formats' : 'RAWDATA_S16_NHWC' , 'shape' : array ([ 1 , 513 , 513 , 8 ]), 'name' : 'sub_7' , 'dtype' : < class ' numpy . int16 '>, ' index ': 0, ' quantization ': (3.0518509447574615e-05, 0)}] calibrator_custom.fixed_simulator\u4e2d\u68c0\u67e5\u4e86\u6a21\u578b\u7684\u8f93\u5165\u683c\u5f0f\uff0c\u8ba1\u7b97\u51fa\u9700\u8981\u8f93\u5165\u7684shape\u4fe1\u606f\u3002 \u5df2\u4f7f\u7528float\u7f51\u7edc\u7684\u524d\u5904\u7406\u5904\u7406\u5b8c\u56fe\u7247\uff0c\u8fd4\u56denumpy.ndarray\u683c\u5f0f\u7684\u53d8\u91cfimg >>> print ( img . shape ) ( 1 , 513 , 513 , 3 ) \u5b9a\u70b9\u5316img\u7684\u6570\u636e\uff0c\u5e76\u8f6c\u6362\u6570\u636e\u7c7b\u578b >>> ins , zp = input_details [ 0 ][ 'quantization' ] >>> img = ( img / ins + zp ) . astype ( input_details [ 0 ][ 'dtype' ]) >>> print ( img . dtype ) int16 \u5bf9\u9f50\u6392\u5217img\u6570\u636e\uff0c\u4f7f\u4e4b\u7b26\u5408\u8f93\u5165\u6761\u4ef6\uff0c\u5bf9\u9f50\u4ec5\u9488\u5bf9\u8f93\u5165\u7684\u6700\u540e\u4e00\u4e2a\u7ef4\u5ea6\u4f1a\u5411\u4e0a\u5bf9\u9f50\u3002 >>> img_s16 = np . zeros ( input_details [ 0 ][ 'shape' ]) . astype ( 'int16' ) >>> img_s16 [:, :, :, : 3 ] = img >>> model . set_input ( input_details [ 0 ][ 'index' ], img_s16 ) \u7531\u4e8e\u4e0a\u8ff0\u64cd\u4f5c\u6b65\u9aa4\u5728simulator.py\u4e2d\u5df2\u7ecf\u505a\u5b8c\uff0c\u6240\u4ee5\u4f7f\u7528\u4f7f\u7528simulator.py\u8fd0\u884c\u5b9a\u70b9\u6a21\u578b\u8fd0\u884c\u65f6\uff0c\u524d\u5904\u7406\u65b9\u6cd5\u5e94\u4e0e\u6d6e\u70b9\u524d\u5904\u7406\u6a21\u578b\u4fdd\u6301\u4e00\u81f4\u3002 \u5728\u677f\u4e0a\u8fd0\u884c RAWDATA_S16_NHWC \u7684\u7f51\u7edc\u65f6\uff0c\u4e5f\u9700\u8981\u5b8c\u6210\u8f93\u5165\u6570\u636e\u7684\u5b9a\u70b9\u5316\u548c\u5bf9\u9f50\u6392\u5217\u8fc7\u7a0b\uff0c\u53ef\u4ee5\u53c2\u8003\u5982\u4e0b\u4ee3\u7801\uff0cFillInputData\u51fd\u6570\u7684\u8f93\u5165\u5206\u522b\u662f\u6d6e\u70b9\u8f93\u5165\u6570\u636e\u7684\u6570\u7ec4\uff0cMI_IPU\u8f93\u5165Tensor\u7ed3\u6784\u4f53\u548cMI_IPU\u7f51\u7edc\u63cf\u8ff0\u7ed3\u6784\u4f53\u3002 #define ALIGN_UP(x, align) (((x) + ((align) - 1)) & ~((align) - 1)) #define CLIP3(x, min, max) ((x) < (min) ? (min) : ((x) > (max) ? (max) : (x))) void FillInputData ( MI_FLOAT * pfData , MI_IPU_TensorVector_t & InputTensorVector , MI_IPU_SubNet_InputOutputDesc_t & desc ) { const MI_U32 H = desc . astMI_InputTensorDescs [ 0 ]. u32TensorShape [ 1 ]; const MI_U32 W = desc . astMI_InputTensorDescs [ 0 ]. u32TensorShape [ 2 ]; const MI_U32 C = desc . astMI_InputTensorDescs [ 0 ]. u32TensorShape [ 3 ]; const MI_U32 inner_size = ALIGN_UP ( C , 8 ); const MI_U32 outer_size = H * W ; const MI_FLOAT Scale = desc . astMI_InputTensorDescs [ 0 ]. fScalar ; const MI_S64 ZeroPoint = desc . astMI_InputTensorDescs [ 0 ]. s64ZeroPoint ; MI_S16 * pData = ( MI_S16 * ) InputTensorVector . astArrayTensors [ 0 ]. ptTensorData [ 0 ]; for ( MI_U32 i = 0 ; i < outer_size ; i ++ ) { for ( MI_U32 j = 0 ; j < C ; j ++ ) { * ( pData + i * inner_size + j ) = ( MI_S16 ) CLIP3 ( round ( pfData [ i * C + j ] / Scale + ZeroPoint ), -32768 , 32767 ); } } MI_SYS_FlushInvCache ( pData , inner_size * outer_size * sizeof ( MI_S16 )); } \u6ce8\u610f\u4e8b\u9879 \u672c\u4f7f\u7528\u65b9\u6cd5\u5c5e\u4e8eIPU100\u7684\u65b9\u6cd5\uff0cIPU200M\u7684\u4f7f\u7528\u65b9\u6cd5\u6709\u53d8\u66f4\uff0c\u8bf7\u53c2\u8003IPU200M\u7684\u672c\u8282\u5185\u5bb9\u3002 9.3. \u5206\u6bb5\u7f51\u7edc\u8f6c\u6362\u8981\u70b9 \u00b6 \u7f51\u7edc\u4e2d\u6709\u4e0d\u652f\u6301\u7684Layer\uff0c\u53ef\u5c06\u5b8c\u6574\u7f51\u7edc\u5206\u6bb5\u6267\u884c\u3002\u524d\u4e00\u6bb5\u7f51\u7edc\u8fd0\u884c\u5b8c\u6210\u540e\u5c06\u7ed3\u679c\u8f93\u5165\u7ed9\u81ea\u5b9a\u4e49\u5b9e\u73b0\u5c42\uff0c\u518d\u5c06\u81ea\u5b9a\u4e49\u5c42\u7684\u8f93\u51fa\u7ed3\u679c\u4f5c\u4e3a\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u8fd0\u884c\u3002\u4e0b\u9762\u4ee5Faster_RCNN\u7f51\u7edc\u4e3a\u4f8b\uff0c\u8bf4\u660e\u5982\u4f55\u8f6c\u6362\u5206\u6bb5\u7f51\u7edc\u3002 9.3.1 \u7f51\u7edc\u5207\u5206 \u00b6 Faster_RCNN\u7f51\u7edc\u4e2d\u7684Proposal Layer\u662f\u4e0d\u652f\u6301\u7684\uff0c\u6211\u4eec\u9700\u8981\u5c06\u7f51\u7edc\u4ece\u8be5\u5c42\u5206\u6210\u4e24\u6bb5\u3002 \u5982\u4e0b\u56fe\u6240\u793a\uff0c\u56fe\u4e2d\u7684Python Layer\u662fProposal Layer\uff0c\u901a\u8fc7\u4fee\u6539prototxt\u6587\u4ef6\uff0c\u5c06\u7f51\u7edc\u4eceProposal Layer\u5904\u62c6\u6210\u4e24\u6bb5\uff1a\u7b2c\u4e00\u6bb5\u7f51\u7edc\u5c06\u67093\u4e2a\u8f93\u51fa\uff0c\u5176\u4e2drpn_cls_prob_reshape\u548crpn_bbox_pred\u4e24\u4e2a\u8f93\u51fa\u7ed3\u679c\u5c06\u4f5c\u4e3aProposal Layer\u7684\u8f93\u5165\uff0cconv5_3\u548cProposal Layer\u7684\u8f93\u51fa\u5c06\u4f5c\u4e3a\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u3002 \u7b2c\u4e00\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u662f\u56fe\u7247\u6570\u636e\uff0cinput_config.ini\u548c\u524d\u5904\u7406python\u6587\u4ef6\u6309\u71672.2\u548c3.2\u8282\u5904\u7406\u3002\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u4e0d\u662f\u56fe\u7247\u6570\u636e\uff0c\u53ef\u4ee5\u53c2\u80039.2\u8282\u5bf9\u4e24\u4e2a\u8f93\u5165\u540c\u65f6\u91c7\u7528RAWDATA_S16_NHWC\u7684\u683c\u5f0f\u914d\u7f6e\u3002\u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u901a\u8fc7 ConvertTool.py\u5206\u522b\u5c06\u4e24\u4e2a\u7f51\u7edc\u8f6c\u6362\u6210float.sim\u6a21\u578b\u6587\u4ef6\u3002\u5177\u4f53\u914d\u7f6e\u6587\u4ef6\u548c\u8f6c\u6362\u547d\u4ee4\u5982\u4e0b\uff1a \u7b2c\u4e00\u6bb5\u7f51\u7edc\uff1a python3 ~/SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py caffe \\ --model_file test_stageone.prototxt \\ --weight_file VGG16_faster_rcnn_final.caffemodel \\ --input_arrays data \\ --output_arrays rpn_cls_prob_reshape,rpn_bbox_pred,conv5_3 \\ --input_config input_config.ini \\ --output_file faster_rcnn_main_float.sim [INPUT_CONFIG] inputs = data; input_formats = BGR; quantizations = TRUE; mean_red = 122.7717; mean_green = 115.9465; mean_blue = 102.9801; std_value = 1; [OUTPUT_CONFIG] outputs = rpn_cls_prob_reshape,rpn_bbox_pred,conv5_3; dequantizations = TRUE,TRUE,FALSE; \u8bbe\u5b9aconv5_3 \u8fd9\u4e2a\u8f93\u51fa\u7684dequantizations \u4e3aFALSE\uff0c\u7531\u4e8e\u8be5\u8f93\u51fa\u76f4\u63a5\u8f93\u5165\u7b2c\u4e8c\u6bb5\u7f51\u7edc\uff0c\u6240\u4ee5\u5728\u677f\u7aef\u8fd0\u884c\u65f6\u4e0d\u9700\u8981 \u8f6c\u6362\u6210float\uff0c\u53ef\u4ee5\u76f4\u63a5\u5c06\u8be5\u8f93\u51fa\u9001\u8fdb\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u3002 \u7b2c\u4e8c\u6bb5\u7f51\u7edc\uff1a ROIPooling\u7684rois\u8f93\u5165\u7ef4\u5ea6\u4e3a\uff08N\u00d75\uff09\uff0c\u5f53\u540e\u6bb5\u7f51\u7edc\u5168\u90e8\u662fInnerProduct\u65f6\uff0cN\u624d\u53ef\u4ee5\u8bbe\u7f6e\u4e3a300\uff08\u5982\u4e0a\u56fe\u6240\u793a\uff09\uff0c\u5982\u679c\u540e\u6bb5\u7f51\u7edc\u4e2d\u6709\u5377\u79ef\u65f6\uff0cN\u4ec5\u53ef\u4ee5\u8bbe\u7f6e\u4e3a1\uff0c\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u9700\u8981\u5faa\u73af\u6267\u884cN\u6b21\u3002 python3 ~/SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py caffe \\ --model_file second_stage.prototxt \\ --weight_file VGG16_faster_rcnn_final.caffemodel \\ --input_arrays conv5_3,rois \\ --output_arrays cls_prob,bbox_pred \\ --input_config input_config_stage2.ini \\ --output_file faster_rcnn_stage2_float.sim [INPUT_CONFIG] inputs = conv5_3,rois; input_formats = RAWDATA_S16_NHWC,RAWDATA_S16_NHWC; quantizations = TRUE,TRUE; mean_red = 0,0; mean_green = 0,0; mean_blue = 0,0; std_value = 1,1; [OUTPUT_CONFIG] outputs = cls_prob,bbox_pred; dequantizations = TRUE,TRUE; 9.3.2 \u8f6c\u6362\u7f51\u7edc \u00b6 \u5de5\u5177\u8def\u5f84 SGS_IPU_SDK/Scripts/examples/caffe_faster_rcnn/faster_rcnn_calibrator.py \u8be5\u5de5\u5177\u4f5c\u4e3aFaster_RCNN\u7f51\u7edc\u8f6c\u6362demo\uff0c\u76f4\u63a5\u8fd0\u884c\u5373\u53ef\u5c06\u4e24\u6bb5\u7f51\u7edc\u76f4\u63a5\u8f6c\u6362\u6210fixed\u6a21\u578b\u3002 python3 ~/SGS_IPU_SDK/Scripts/examples/caffe_faster_rcnn/faster_rcnn_calibrator.py \\ -i ~/SGS_Models/resource/detection/voc_calibration_set32/ \\ -m0 faster_rcnn_main_float.sim \\ -m1 faster_rcnn_stage2_float.sim \\ --input_config0 input_config.ini \\ --input_config1 input_config_stage2.ini \u5728\u8f6c\u6362\u5206\u6bb5\u7f51\u7edc\u65f6\uff0c\u9996\u5148\u5b9a\u4e49\u7f51\u7edc\u7684\u4e24\u6bb5\u7f51\u7edc\uff0c\u518d\u7ec4\u7ec7\u4e24\u6bb5\u7f51\u7edc\u7684\u8fd0\u884c\u65b9\u5f0f\uff0c\u5b9a\u4e49\u5728forward\u65b9\u6cd5\u91cc\uff1a class Net ( calibrator_custom . SIM_Calibrator ): def __init__ ( self ): super () . __init__ () self . main_model = calibrator_custom . calibrator ( main_model_path , main_input_config ) self . second_model = calibrator_custom . calibrator ( second_model_path , second_input_config ) self . rpn = rpn . ProposalLayer () def forward ( self , x ): out_details = self . main_model . get_output_details () input_data , im_scale = fill_inputImg2main ( x ) self . main_model . set_input ( 0 , input_data ) self . main_model . invoke () result_list = [] for idx , _ in enumerate ( out_details ): result = self . main_model . get_output ( idx ) result_list . append ( result ) im_info = np . array ([ x . shape [ 0 ], x . shape [ 1 ], im_scale ]) . reshape ( 1 , 3 ) bottom = [ result_list [ 0 ], result_list [ 1 ], im_info ] roi = self . rpn . forward ( bottom ) out2_details = self . second_model . get_output_details () self . second_model . set_input ( 0 , result_list [ 2 ]) self . second_model . set_input ( 1 , roi ) self . second_model . invoke () second_result = [] for idx , _ in enumerate ( out2_details ): result = self . second_model . get_output ( idx ) second_result . append ( result ) return second_result Faster_RCNN\u7f51\u7edc\u4e2d\uff0c\u4f7f\u7528\u4e86\u81ea\u5b9a\u4e49\u7684rpn\u5c42\uff0c\u56e0\u6b64\u5c06\u7b2c\u4e00\u6bb5\u7f51\u7edc\u7684\u7b2c1\u4e2a\u548c\u7b2c2\u4e2a\u8f93\u51fa\u4ee5\u53ca\u56fe\u7247\u4fe1\u606f\u4f5c\u4e3arpn\u5c42\u7684\u8f93\u5165\uff0c\u7b2c\u4e00\u6bb5\u7f51\u7edc\u7684\u7b2c3\u4e2a\u8f93\u51fa\u548crpn\u5c42\u7684\u8f93\u51faroi\u4f5c\u4e3a\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u3002 \u6700\u540e\u8c03\u7528Net\u7684convert\u65b9\u6cd5\uff0c\u540c\u65f6\u751f\u6210\u4e24\u6bb5\u7f51\u7edc\u7684fixed\u6a21\u578b\u3002 net = Net () net . convert ( img_gen , num_process = num_subsets , fix_model = [ out_main_model , out_second_model ]) 9.3.3 \u8fd0\u884c\u7f51\u7edc \u00b6 \u5de5\u5177\u8def\u5f84 SGS_IPU_SDK/Scripts/examples/caffe_faster_rcnn/faster_rcnn_simulator.py \u8be5\u5de5\u5177\u4f5c\u4e3aFaster_RCNN\u7f51\u7edc\u8fd0\u884cdemo\uff0c\u76f4\u63a5\u8fd0\u884c\u4e24\u6bb5\u7f51\u7edc\u3002 python3 ~/SGS_IPU_SDK/Scripts/examples/caffe_faster_rcnn/faster_rcnn_simulator.py \\ -i ~/SGS_Models/resource/detection/004545.jpg \\ -m0 faster_rcnn_main_float.sim \\ -m1 faster_rcnn_stage2_float.sim \\ -t Float \u8fd0\u884c\u4e24\u6bb5\u6a21\u578b\u7684\u65b9\u6cd5\u4e0e\u8f6c\u6362\u7f51\u7edc\u65f6\u7c7b\u4f3c\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662fFixed\u6a21\u578b\u548cOffline\u6a21\u578b\u8f93\u51fa\u65f6\u4f1a\u6709Garbage\u6570\u636e\uff0c \u7b2c\u4e8c\u6bb5\u6a21\u578b\u8f93\u5165\u65f6\u9700\u8981\u5148\u5c06\u6570\u636e\u5bf9\u9f50\uff0c\u8be6\u89c19.2\u8282RAWDATA_S16_NHWC\u8f93\u5165\u7684\u6a21\u578b\u3002\u7531\u4e8e\u7b2c\u4e00\u6bb5\u7f51\u7edc\u7684conv5_3 \u8fd9\u4e2a\u8f93\u51fa\u76f4\u63a5\u8f93\u5165\u7b2c\u4e8c\u6bb5\u7f51\u7edc\uff0c\u6240\u4ee5\u8fd0\u884c\u65f6\u4e0d\u9700\u8981\u53bb\u9664Garbage\u548c\u8f6c\u6362\u6210float\uff0c\u53ef\u4ee5\u76f4\u63a5\u5c06\u8be5\u8f93\u51fa\u4f5c\u4e3a\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u3002 class Net ( calibrator_custom . SIM_Simulator ): def __init__ ( self ): super () . __init__ () self . main_model = main_model self . second_model = second_model self . rpn = rpn . ProposalLayer () def forward ( self , x ): # Run main model out_details = self . main_model . get_output_details () input_data , im_scale = fill_inputImg2main ( x , norm = norm ) self . main_model . set_input ( 0 , input_data ) self . main_model . invoke () result_list = [] for idx , _ in enumerate ( out_details ): result = self . main_model . get_output ( idx ) # Get main output for Fixed and Offline model if result . shape [ - 1 ] != out_details [ idx ][ 'shape' ][ - 1 ] and out_details [ idx ][ 'name' ] != 'conv5_3' : result = result [ ... , : out_details [ idx ][ 'shape' ][ - 1 ]] if out_details [ idx ][ 'dtype' ] == np . int16 and out_details [ idx ][ 'name' ] != 'conv5_3' : scale , _ = out_details [ idx ][ 'quantization' ] result = np . dot ( result , scale ) result_list . append ( result ) # Run Proposal Layer im_info = np . array ([ x . shape [ 0 ], x . shape [ 1 ], im_scale ]) . reshape ( 1 , 3 ) bottom = [ result_list [ 0 ], result_list [ 1 ], im_info ] roi = self . rpn . forward ( bottom ) # Run Second stage model in2_details = self . second_model . get_input_details () out2_details = self . second_model . get_output_details () in2_data = [ result_list [ 2 ], copy . deepcopy ( roi )] for idx , in2_info in enumerate ( in2_details ): if in2_info [ 'dtype' ] == np . int16 and in2_info [ 'name' ] != 'conv5_3' : # Set second model input for Fixed and Offline model ins , zp = in2_info [ 'quantization' ] in2_data [ idx ] = ( in2_data [ idx ] * 0.0625 / ins + zp ) . astype ( in2_info [ 'dtype' ]) feature_s16 = np . zeros ( in2_info [ 'shape' ]) . astype ( 'int16' ) feature_s16 [ ... , : in2_data [ idx ] . shape [ - 1 ]] = in2_data [ idx ] self . second_model . set_input ( in2_info [ 'index' ], feature_s16 ) else : self . second_model . set_input ( in2_info [ 'index' ], in2_data [ idx ]) self . second_model . invoke () second_result = [] for idx , _ in enumerate ( out2_details ): result = self . second_model . get_output ( idx ) # Get second output for Fixed and Offline model if result . shape [ - 1 ] != out2_details [ idx ][ 'shape' ][ - 1 ]: result = result [ ... , : out2_details [ idx ][ 'shape' ][ - 1 ]] if out2_details [ idx ][ 'dtype' ] == np . int16 : scale , _ = out2_details [ idx ][ 'quantization' ] result = np . dot ( result , scale ) second_result . append ( result . reshape ( 300 , - 1 )) second_result . append ( roi ) second_result . append ( im_info ) return second_result \u8fd0\u884c\u7f51\u7edc\u65f6\u5148\u521b\u5efaNet\u7684\u5b9e\u4f8b\uff0c\u7136\u540e\u8c03\u7528\u81ea\u8eab\u7684\u65b9\u6cd5\u5c31\u53ef\u4ee5\u8fd0\u884c\u3002\u5177\u4f53\u53c2\u80035.2.2\u8282\u3002 net = Net () results = net ( img_gen , num_process = num_subsets ) 9.4. \u591a\u8f93\u5165\u7f51\u7edc\u8f6c\u6362\u8981\u70b9 \u00b6 9.4.1 \u6784\u5efa\u591a\u8f93\u5165\u7f51\u7edc \u00b6 \u4f7f\u7528Tensorflow1.14.0\u6784\u5efa\u4e00\u4e2a\u53cc\u8f93\u5165\u7f51\u7edc\uff0c\u8be5\u7f51\u7edc\u7528\u6765\u505a\u77e9\u9635\u4e58\u6cd5\uff0c\u8ba1\u7b97\u4e24\u4e2a\u5411\u91cf\u7684\u5185\u79ef\u3002 import tensorflow as tf import numpy as np SHAPE_DIMS = 256 input_np0 = np . random . rand ( 1 , SHAPE_DIMS ) . astype ( np . float32 ) input_np1 = np . random . rand ( 1 , SHAPE_DIMS ) . astype ( np . float32 ) input_0 = tf . placeholder ( dtype = tf . float32 , shape = ( 1 , SHAPE_DIMS ), name = 'input0' ) input_1 = tf . placeholder ( dtype = tf . float32 , shape = ( 1 , SHAPE_DIMS ), name = 'input1' ) out = tf . matmul ( input_0 , tf . reshape ( input_1 , ( SHAPE_DIMS , 1 )), name = 'output' ) with tf . Session () as sess : results = sess . run ( out , feed_dict = { input_0 : input_np0 , input_1 : input_np1 }) # Convert .pb output_graph_def = tf . graph_util . convert_variables_to_constants ( sess , sess . graph_def , [ 'output' ] ) with tf . gfile . GFile ( 'matmul.pb' , 'wb' ) as f : f . write ( output_graph_def . SerializeToString ()) print ( 'matmul.pb Saved!' ) # convert to .tflite tflite_model = tf . lite . TFLiteConverter . from_frozen_graph ( 'matmul.pb' , [ 'input0' , 'input1' ], [ 'output' ] ) tflite_model = tflite_model . convert () with open ( 'matmul.tflite' , 'wb' ) as f : f . write ( tflite_model ) print ( 'matmul.tflite Saved!' ) \u8fd0\u884c\u8be5\u811a\u672c\uff0c\u5c31\u80fd\u751f\u6210matmul.tflite\u6a21\u578b\u6587\u4ef6\u4e86\u3002 9.4.2 \u8f6c\u6362\u591a\u8f93\u5165\u7f51\u7edc \u00b6 \u4e0b\u9762\u5c06matmul.tflte\u8f6c\u6362\u6210\u53ef\u4ee5\u5728\u677f\u4e0a\u8fd0\u884c\u7684\u6a21\u578b\u6587\u4ef6\u3002 matmul.tflite\u6a21\u578b\u4e0d\u662f\u56fe\u7247\u8f93\u5165\uff0c\u56e0\u6b64\u914d\u7f6einput_config.ini\u6587\u4ef6\u8bf7\u53c2\u80039.2\u8282\u3002 \u914d\u7f6einput_config.ini\u811a\u672c [INPUT_CONFIG] inputs = input0,input1; input_formats = RAWDATA_S16_NHWC,RAWDATA_S16_NHWC; quantization = TRUE,TRUE; mead_red = 0,0; mean_green = 0,0; mean_blue = 0,0; std_value = 1,1; [OUTPUT_CONFIG] outputs = output; dequantization = TRUE; \u8bf7\u5148\u5728SGS_IPU_SDK\u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK source cfg_env.sh \u7136\u540e\u4f7f\u7528ConvertTool\u5de5\u5177\u8f6c\u6362matmul.tflite\uff1a python3 ~/SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py tflite \\ --model_file /path/to/matmul.tflite \\ --input_config /path/to/input_config.ini \\ --output_file /path/to/matmul_float.sim \u591a\u8f93\u5165\u7f51\u7edc\u7684calibrator\u8fc7\u7a0b\u9700\u8981\u4f7f\u7528calibrator_custom\u6a21\u5757\uff0c\u8be6\u7ec6\u53ef\u4ee5\u53c2\u80033.4\u8282\u3002\u4f46\u4e0e3.4.2\u8282\u4e2d\u4e0d\u540c\u7684\u662f\u8f93\u5165\u7684\u751f\u6210\u5668\u9700\u8981\u914d\u7f6e\u6210\u53cc\u8f93\u5165\u3002\u5c06\u4ee5\u4e0b\u793a\u4f8b\u6587\u4ef6\u4fdd\u5b58\u4e3amatmul_calibrator.py\u3002 # -*- coding: utf-8 -*- import calibrator_custom import os import sys import numpy as np import argparse from calibrator_custom import utils class Net ( calibrator_custom . SIM_Calibrator ): def __init__ ( self , model_path , input_config ): super () . __init__ () self . model = calibrator_custom . calibrator ( model_path , input_config ) def forward ( self , x , y ): out_details = self . model . get_output_details () self . model . set_input ( 0 , x ) self . model . set_input ( 1 , y ) self . model . invoke () result_list = [] for idx in range ( len ( out_details )): result = self . model . get_output ( idx ) result_list . append ( result ) return result_list def arg_parse (): parser = argparse . ArgumentParser ( description = 'Calibrator Tool' ) parser . add_argument ( '-m' , '--model' , type = str , required = True , help = 'Model path.' ) parser . add_argument ( '--input_config' , type = str , required = True , help = 'Input config path.' ) parser . add_argument ( '--quant_level' , type = str , default = 'L5' , choices = [ 'L1' , 'L2' , 'L3' , 'L4' , 'L5' ], help = 'Indicate Quantilization level. The higher the level, \\ the slower the speed and the higher the accuracy.' ) parser . add_argument ( '--num_process' , default = 10 , type = int , help = 'Amount of processes run at same time.' ) parser . add_argument ( '-o' , '--output' , default = None , type = str , help = 'Output path for fixed model.' ) return parser . parse_args () def data_gen (): calibrator_data = np . random . rand ( 100 , 1 , 256 ) . astype ( np . float32 ) bench_data = np . random . rand ( 100 , 1 , 256 ) . astype ( np . float32 ) for i , j in zip ( calibrator_data , bench_data ): yield [ i , j ] def main (): args = arg_parse () model_path = args . model input_config = args . input_config quant_level = args . quant_level num_subsets = args . num_process output = args . output if not os . path . exists ( model_path ): raise FileNotFoundError ( 'No such {} model' . format ( model_path )) if not os . path . exists ( input_config ): raise FileNotFoundError ( 'input_config.ini file not found.' ) net = Net ( model_path , input_config ) print ( net ) # random generate data # must change real data when using img_gen = data_gen () print ( ' \\033 [31m[WARNING] random generate data, \\ must change real data when using! \\033 [0m' , file = sys . stderr ) out_model = utils . get_out_model_name ( model_path , output ) net . convert ( img_gen , num_process = num_subsets , quant_level = quant_level , fix_model = [ out_model ]) if __name__ == '__main__' : main () \u4f7f\u7528\u7f16\u5199\u7684matmul_calibrator.py\u8f6c\u6362matmul_float.sim\uff0c\u751f\u6210matmul_fixed.sim\u3002 python3 matmul_calibrator.py \\ -m /path/to/matmul_float.sim \\ --input_config /path/to/input_config.ini \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u91cf\u5316\u8be5\u6a21\u578b\u7684\u8f93\u5165\u6570\u636e\u4e00\u5b9a\u8981\u6362\u6210\u771f\u5b9e\u6570\u636e\uff0c\u4e0d\u7136\u7edf\u8ba1\u751f\u6210\u7684fixed\u6a21\u578b\u7cbe\u5ea6\u4f1a\u51fa\u9519\u3002\u5982\u679c\u5355\u72ec\u91cf\u5316\u8be5\u6a21\u578b\u6bd4\u8f83\u56f0\u96be\uff0c\u6bd4\u5982\u5b83\u662f\u63a5\u5728\u67d0\u4e2a\u7f51\u7edc\u540e\u9762\u8fd0\u884c\u7684\uff0c\u53ef\u4ee5\u53c2\u80039.4\u8282\uff0c\u6309\u7167\u591a\u6bb5\u7f51\u7edc\u5904\u7406\uff0c\u5728calibrator_custom.SIM_Calibrator\u7c7b\u91cc\u5b9a\u4e49\u591a\u4e2a\u6a21\u578b\uff0c\u53ef\u4ee5\u76f4\u63a5\u751f\u6210\u51fa\u591a\u4e2afixed\u7f51\u7edc\u3002 \u6700\u540e\u4f7f\u7528compiler.py\u8f6c\u6362matmul_fixed.sim\uff0c\u751f\u6210matmul_fixed.sim_sgsimg.img\u3002 9.4.3 \u5728PC\u4e0a\u8fd0\u884c\u591a\u8f93\u5165\u7f51\u7edc \u00b6 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd0\u884cFloat\u7684\u7f51\u7edc\u65f6\uff0c\u8f93\u5165\u6570\u636e\u7684type\u9700\u8981\u4e3afloat32\uff0c\u8f93\u5165\u6570\u636e\u7684shape\u4e0e\u6a21\u578b\u8f93\u5165shape\u76f8\u540c\u3002\u4f46\u662f\u7531\u4e8ematmul\u7684Fixed\u548cOffline\u6a21\u578b\u662fRAWDATA_S16_NHWC\u8f93\u5165\uff0c\u8f93\u5165\u6570\u636e\u9700\u8981\u5148\u53cd\u91cf\u5316\u5230int16\uff0c\u7136\u540e\u5bf9\u9f50\u540e\u624d\u80fd\u8f93\u5165\u5230\u6a21\u578b\u3002\u6240\u4ee5\u5b9a\u4e49calibrator_custom.SIM_Simulator\u7684forward\u51fd\u6570\u65f6\u9700\u8981\u6ce8\u610f\u8be5\u6a21\u578b\u7684\u7279\u6b8a\u6027\uff1a class Net ( calibrator_custom . SIM_Simulator ): def __init__ ( self , model_path , phase ): super () . __init__ () if phase == 'Float' : self . model = calibrator_custom . float_simulator ( model_path ) elif phase == 'Fixed' : self . model = calibrator_custom . fixed_simulator ( model_path ) else : self . model = calibrator_custom . offline_simulator ( model_path ) def forward ( self , x , y ): in_details = self . model . get_input_details () out_details = self . model . get_output_details () in2_data = [ x , y ] for idx , in_info in enumerate ( in_details ): if in_info [ 'dtype' ] == np . int16 : # Set model input for Fixed and Offline model ins , zp = in_info [ 'quantization' ] in2_data [ idx ] = np . clip (( in2_data [ idx ] / ins + zp ), - 32768 , 32767 ) . astype ( in_info [ 'dtype' ]) feature_s16 = np . zeros ( in_info [ 'shape' ]) . astype ( 'int16' ) feature_s16 [ ... , : in2_data [ idx ] . shape [ - 1 ]] = in2_data [ idx ] self . model . set_input ( in_info [ 'index' ], feature_s16 ) else : self . model . set_input ( in_info [ 'index' ], in2_data [ idx ]) self . model . invoke () result_list = [] for idx in range ( len ( out_details )): result = self . model . get_output ( idx ) # for Fixed and Offline model if result . shape [ - 1 ] != out_details [ idx ][ 'shape' ][ - 1 ]: result = result [ ... , : out_details [ idx ][ 'shape' ][ - 1 ]] if out_details [ idx ][ 'dtype' ] == np . int16 : scale , _ = out_details [ idx ][ 'quantization' ] result = np . dot ( result , scale ) result_list . append ( result ) return result_list 9.4.4 \u5728\u677f\u4e0a\u8fd0\u884c\u591a\u8f93\u5165\u7f51\u7edc \u00b6 \u7531\u4e8ematmul_fixed.sim_sgsimg.img\u7f51\u7edc\u8f93\u5165\u662f RAWDATA_S16_NHWC \uff0c\u53ef\u4ee5\u53c2\u80039.2.2\u8282\u4e2dFillInputData\u51fd\u6570\uff0c\u4e0e\u5728PC\u4e0a\u76f8\u540c\uff0c\u9700\u8981\u5c06\u8f93\u5165\u6570\u636e\u5904\u7406\u540e\u518d\u9001\u5165\u6a21\u578b\u3002 \u591a\u8f93\u5165\u6a21\u578b\u53ea\u9700\u5728FillInputData\u51fd\u6570\u4e2d\u589e\u52a0\u5bf9\u6a21\u578b\u7684\u7b2c\u4e8c\u4e2a\u8f93\u5165\u704c\u5165\u6570\u636e\uff1a // input0 MI_S16 * pData0 = ( MI_S16 * ) InputTensorVector . astArrayTensors [ 0 ]. ptTensorData [ 0 ]; // input1 MI_S16 * pData1 = ( MI_S16 * ) InputTensorVector . astArrayTensors [ 1 ]. ptTensorData [ 0 ]; \u5982\u679cmatmul_fixed.sim_sgsimg.img\u662f\u4e3a\u4e86\u4f7f\u7528\u4e0a\u4e00\u4e2a\u6a21\u578b\u7684\u8f93\u51fa\u6570\u636e\uff0c\u53ef\u4ee5\u5bf9\u4e0a\u4e00\u4e2a\u6a21\u578b\u7684input_config.ini\u8fd9\u6837\u914d\u7f6e\uff1a [OUTPUT_CONFIG]\u7684dequantization=FALSE; \u8fd9\u6837\u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u4e0a\u4e00\u4e2a\u6a21\u578b\u7684\u8f93\u51fa\u6570\u636e\u7c7b\u578b\u4e3aINT16\uff0c\u53ef\u76f4\u63a5\u4f5c\u4e3amatmul_fixed.sim_sgsimg.img\u6a21\u578b\u7684\u8f93\u5165\u3002","title":"Special Model Conversion"},{"location":"module/User_Guide/Develop/Special_Model_Conversion.html#91","text":"\u7070\u5ea6\u6a21\u578b\uff0c\u6307\u8f93\u5165\u662f\u5355\u901a\u9053\u56fe\u7247\u7684\u6a21\u578b\uff0c\u5373\u8f93\u5165C\u7ef4\u5ea6\u4e0a\u4e3a1\u7684\u6a21\u578b\u3002","title":"9.1. \u7070\u5ea6\u6a21\u578b\u8f6c\u6362\u8981\u70b9"},{"location":"module/User_Guide/Develop/Special_Model_Conversion.html#911-input_config","text":"input_config.ini\u6587\u4ef6\u4f7f\u7528\u57282.2\u8282input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e\u6709\u8fc7\u4ecb\u7ecd\uff0c\u5bf9\u4e8e\u7070\u5ea6\u6a21\u578b\uff0c\u8981\u6ce8\u610f\u5982\u4e0b\u8981\u70b9\u3002 input_config.ini\u6587\u4ef6\u4e2d\u8fd9\u4e24\u4e2a\u914d\u7f6e\u5fc5\u987b\u5199\u6210 [INPUT_CONFIG] ...... training_input_formats = RGB; input_formats = GRAY; ...... \u5c06\u7070\u5ea6\u56fe\u7247\u7684\u6709\u6548\u6570\u636e\u53ea\u653e\u5728R\u901a\u9053\u4e0a\uff0c\u56e0\u6b64\u4ec5\u9700\u8bbe\u7f6eR\u901a\u9053\u7684mean\u503c\uff08mean_red\uff09 [INPUT_CONFIG] ...... mean_red = 127.5; mean_green = 0.0; mean_blue = 0.0; ;std_value parameter for image models, std_value = 1.0;","title":"9.1.1. \u7070\u5ea6\u6a21\u578binput_config\u914d\u7f6e\u4fe1\u606f\u8981\u70b9"},{"location":"module/User_Guide/Develop/Special_Model_Conversion.html#912","text":"\u7070\u5ea6\u56fe\u7247\u8f93\u5165\u7684\u524d\u5904\u7406\u65b9\u6cd5\u4e0e3.2\u8282\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\u8981\u6c42\u76f8\u540c\uff0c\u51fd\u6570\u5fc5\u987b\u5305\u542b2\u4e2a\u53c2\u6570\uff1a \u56fe\u7247\u8def\u5f84 \u5f52\u4e00\u5316\u6807\u8bb0\uff08norm=True\uff09 \u53c2\u8003\u4ee3\u7801 SGS_IPU_SDK/Scripts/calibrator/preprocess_method/caffe_lenet.py import cv2 import numpy as np def get_image ( img_path , resizeH = 28 , resizeW = 28 , norm = True , meanR = 33.318 , std = 1 ): img = cv2 . imread ( img_path , flags =- 1 ) try : img_dim = img . shape [ 2 ] except IndexError : img_dim = 1 if img_dim == 3 : img = cv2 . cvtColor ( img , cv2 . COLOR_BGR2GRAY ) elif img_dim == 4 : img = cv2 . cvtColor ( img , cv2 . COLOR_BGRA2GRAY ) img_norm = cv2 . resize ( img , ( resizeW , resizeH ), interpolation = cv2 . INTER_LINEAR ) if norm : img_norm = ( img_norm - meanR ) / std img_norm = np . expand_dims ( img_norm , axis = 2 ) dummy = np . zeros (( 28 , 28 , 2 )) img_norm = np . concatenate (( img_norm , dummy ), axis = 2 ) img_norm = img_norm . astype ( 'float32' ) return img_norm def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm ) Please Note: \u7070\u5ea6\u56fe\u7247\u8f93\u5165\u6a21\u578b\u5728PC \u4e0a\u8fd0\u884c\u4e0e\u5f00\u53d1\u677f\u4e0a\u8fd0\u884c\u4e0d\u540c\u3002\u5728PC \u4e0a\u9700\u8981\u5c06\u5355\u901a\u9053\u56fe\u7247\u6269\u7ef4\u81f33 \u901a\u9053\uff0c\u5e76\u5728\u540e\u4e24\u4e2a\u901a\u9053 \u88650\uff0c\u5728\u5f00\u53d1\u677f\u4e0a\u9700\u8981YUV \u56fe\u7247\u8f93\u5165\u6570\u636e\u3002","title":"9.1.2. \u7070\u5ea6\u56fe\u7247\u8f93\u5165\u6a21\u578b\u524d\u5904\u7406\u65b9\u6cd5"},{"location":"module/User_Guide/Develop/Special_Model_Conversion.html#92-rawdata_s16_nhwc","text":"RAWDATA_S16_NHWC \u53ef\u4ee5\u7528\u4e8e\u5206\u6bb5\u7f51\u7edc\u7684\u540e\u7aef\u7f51\u7edc\u6a21\u578b\u8f93\u5165\uff0c\u6216\u8005\u975e\u56fe\u7247\u6570\u636e\u8f93\u5165\u7684\u7f51\u7edc\u6a21\u578b\u3002 \u4f7f\u7528\u8be5\u79cd\u65b9\u5f0f\u8f93\u5165\u65f6\uff0c\u7531\u4e8e\u786c\u4ef6\u7684\u9650\u5236\u6761\u4ef6\uff0c\u6240\u4ee5\u9700\u8981\u63d0\u524d\u6392\u5217\u597d\u6570\u636e\u540e\u624d\u80fd\u8fdb\u884c\u8ba1\u7b97\u3002 \u8f6c\u6362\u65b9\u5f0f\u4e0e\u524d\u8ff0\u4ecb\u7ecd\u57fa\u672c\u76f8\u540c\uff0c\u4f46\u914d\u7f6e input_config.ini \u4e2d\u7684 training_input_formats \u548c input_formats \u65f6\u90fd\u586b\u5199 RAWDATA_S16_NHWC \u3002","title":"9.2. RAWDATA_S16_NHWC\u8f93\u5165\u7684\u6a21\u578b"},{"location":"module/User_Guide/Develop/Special_Model_Conversion.html#921","text":"\u5f53input_config.ini\u4e2d\u7684 training_input_formats \u548c input_formats \u90fd\u586b\u5199 RAWDATA_S16_NHWC \u65f6\uff0c\u6b64\u65f6input_config.ini\u4e2d mean_red \u3001 mean_green \u3001 mean_blue \u548c std_value \u4e0d\u4f1a\u518d\u5728\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u4e2d\u751f\u6548\uff0c\u6240\u6709\u524d\u5904\u7406\u8fc7\u7a0b\u90fd\u5c06\u5728\u8f93\u5165\u6a21\u578b\u524d\u5b8c\u6210\u3002 mean_red \u3001 mean_green \u3001 mean_blue \u548c std_value \u4e0d\u8981\u586b\u5199\u3002 \u7531\u4e8e\u6a21\u578b\u5728calibrator.py\u8f6c\u6362\u65f6\u4ecd\u7136\u4f7f\u7528\u6d6e\u70b9\u6570\u636e\uff0c\u56e0\u6b64\u8f6c\u6362\u65b9\u6cd5\u4e0e\u6b63\u5e38\u7f51\u7edc\u76f8\u540c\u3002\u53ef\u4ee5\u53c2\u8003\u7b2c3\u7ae0Calibrator\u7684\u4f7f\u7528\u65b9\u6cd5\u3002","title":"9.2.1 \u6a21\u578b\u8f6c\u6362"},{"location":"module/User_Guide/Develop/Special_Model_Conversion.html#922","text":"\u6d6e\u70b9\u6a21\u578b\u8fd0\u884c\u65f6\uff0c\u4f7f\u7528\u65b9\u6cd5\u4e0e\u8fd0\u884c\u56fe\u7247\u8f93\u5165\u7684\u6a21\u578b\u76f8\u540c\u3002 \u4f7f\u7528simulator.py\u8fd0\u884c\u5b9a\u70b9\u6a21\u578b\u8fd0\u884c\u65f6\uff0c\u524d\u5904\u7406\u65b9\u6cd5\u5e94\u4e0e\u6d6e\u70b9\u524d\u5904\u7406\u6a21\u578b\u4fdd\u6301\u4e00\u81f4\uff0c\u4ecd\u7136\u8f93\u5165norm=True\u65f6\u7684\u65b9\u6cd5\uff0c\u6240\u4ee5 RAWDATA_S16_NHWC \u7684\u7f51\u7edc\u524d\u5904\u7406Python\u6587\u4ef6\u7f16\u5199\u65f6norm\u4e3aTrue\u548cFalse\u7684\u5b9e\u73b0\u90fd\u5e94\u6309\u7167norm\u4e3aTrue\u65f6\u7f16\u5199\u3002simulator.py\u4f1a\u8bfb\u5165\u539f\u6d6e\u70b9\u6570\u636e\uff0c\u8fdb\u884c\u53cd\u91cf\u5316\u548c\u5bf9\u9f50\u6392\u5217\u540e\u8f93\u5165\u7ed9\u5b9a\u70b9\u6a21\u578b\u3002 \u4f7f\u7528calibrator_custom.fixed_simulator\u65f6\uff0c\u5b9a\u70b9\u5316\u548c\u5bf9\u9f50\u6392\u5217\u8fc7\u7a0b\u9700\u8981\u81ea\u884c\u5b8c\u6210\u3002\u4ee5\u4e0b\u4e3a\u4f8b\uff0c\u8bf4\u660e\u5b9a\u70b9\u5316\u548c\u5bf9\u9f50\u6392\u5217\u8fc7\u7a0b\u7684\u505a\u6cd5\u3002 >>> import calibrator_custom >>> model = calibrator_custom . fixed_simulator ( './mobilenet_v2_s16_fixed.sim' ) >>> input_details = model . get_input_details () >>> print ( input_details ) [{ 'input_formats' : 'RAWDATA_S16_NHWC' , 'training_input_formats' : 'RAWDATA_S16_NHWC' , 'shape' : array ([ 1 , 513 , 513 , 8 ]), 'name' : 'sub_7' , 'dtype' : < class ' numpy . int16 '>, ' index ': 0, ' quantization ': (3.0518509447574615e-05, 0)}] calibrator_custom.fixed_simulator\u4e2d\u68c0\u67e5\u4e86\u6a21\u578b\u7684\u8f93\u5165\u683c\u5f0f\uff0c\u8ba1\u7b97\u51fa\u9700\u8981\u8f93\u5165\u7684shape\u4fe1\u606f\u3002 \u5df2\u4f7f\u7528float\u7f51\u7edc\u7684\u524d\u5904\u7406\u5904\u7406\u5b8c\u56fe\u7247\uff0c\u8fd4\u56denumpy.ndarray\u683c\u5f0f\u7684\u53d8\u91cfimg >>> print ( img . shape ) ( 1 , 513 , 513 , 3 ) \u5b9a\u70b9\u5316img\u7684\u6570\u636e\uff0c\u5e76\u8f6c\u6362\u6570\u636e\u7c7b\u578b >>> ins , zp = input_details [ 0 ][ 'quantization' ] >>> img = ( img / ins + zp ) . astype ( input_details [ 0 ][ 'dtype' ]) >>> print ( img . dtype ) int16 \u5bf9\u9f50\u6392\u5217img\u6570\u636e\uff0c\u4f7f\u4e4b\u7b26\u5408\u8f93\u5165\u6761\u4ef6\uff0c\u5bf9\u9f50\u4ec5\u9488\u5bf9\u8f93\u5165\u7684\u6700\u540e\u4e00\u4e2a\u7ef4\u5ea6\u4f1a\u5411\u4e0a\u5bf9\u9f50\u3002 >>> img_s16 = np . zeros ( input_details [ 0 ][ 'shape' ]) . astype ( 'int16' ) >>> img_s16 [:, :, :, : 3 ] = img >>> model . set_input ( input_details [ 0 ][ 'index' ], img_s16 ) \u7531\u4e8e\u4e0a\u8ff0\u64cd\u4f5c\u6b65\u9aa4\u5728simulator.py\u4e2d\u5df2\u7ecf\u505a\u5b8c\uff0c\u6240\u4ee5\u4f7f\u7528\u4f7f\u7528simulator.py\u8fd0\u884c\u5b9a\u70b9\u6a21\u578b\u8fd0\u884c\u65f6\uff0c\u524d\u5904\u7406\u65b9\u6cd5\u5e94\u4e0e\u6d6e\u70b9\u524d\u5904\u7406\u6a21\u578b\u4fdd\u6301\u4e00\u81f4\u3002 \u5728\u677f\u4e0a\u8fd0\u884c RAWDATA_S16_NHWC \u7684\u7f51\u7edc\u65f6\uff0c\u4e5f\u9700\u8981\u5b8c\u6210\u8f93\u5165\u6570\u636e\u7684\u5b9a\u70b9\u5316\u548c\u5bf9\u9f50\u6392\u5217\u8fc7\u7a0b\uff0c\u53ef\u4ee5\u53c2\u8003\u5982\u4e0b\u4ee3\u7801\uff0cFillInputData\u51fd\u6570\u7684\u8f93\u5165\u5206\u522b\u662f\u6d6e\u70b9\u8f93\u5165\u6570\u636e\u7684\u6570\u7ec4\uff0cMI_IPU\u8f93\u5165Tensor\u7ed3\u6784\u4f53\u548cMI_IPU\u7f51\u7edc\u63cf\u8ff0\u7ed3\u6784\u4f53\u3002 #define ALIGN_UP(x, align) (((x) + ((align) - 1)) & ~((align) - 1)) #define CLIP3(x, min, max) ((x) < (min) ? (min) : ((x) > (max) ? (max) : (x))) void FillInputData ( MI_FLOAT * pfData , MI_IPU_TensorVector_t & InputTensorVector , MI_IPU_SubNet_InputOutputDesc_t & desc ) { const MI_U32 H = desc . astMI_InputTensorDescs [ 0 ]. u32TensorShape [ 1 ]; const MI_U32 W = desc . astMI_InputTensorDescs [ 0 ]. u32TensorShape [ 2 ]; const MI_U32 C = desc . astMI_InputTensorDescs [ 0 ]. u32TensorShape [ 3 ]; const MI_U32 inner_size = ALIGN_UP ( C , 8 ); const MI_U32 outer_size = H * W ; const MI_FLOAT Scale = desc . astMI_InputTensorDescs [ 0 ]. fScalar ; const MI_S64 ZeroPoint = desc . astMI_InputTensorDescs [ 0 ]. s64ZeroPoint ; MI_S16 * pData = ( MI_S16 * ) InputTensorVector . astArrayTensors [ 0 ]. ptTensorData [ 0 ]; for ( MI_U32 i = 0 ; i < outer_size ; i ++ ) { for ( MI_U32 j = 0 ; j < C ; j ++ ) { * ( pData + i * inner_size + j ) = ( MI_S16 ) CLIP3 ( round ( pfData [ i * C + j ] / Scale + ZeroPoint ), -32768 , 32767 ); } } MI_SYS_FlushInvCache ( pData , inner_size * outer_size * sizeof ( MI_S16 )); } \u6ce8\u610f\u4e8b\u9879 \u672c\u4f7f\u7528\u65b9\u6cd5\u5c5e\u4e8eIPU100\u7684\u65b9\u6cd5\uff0cIPU200M\u7684\u4f7f\u7528\u65b9\u6cd5\u6709\u53d8\u66f4\uff0c\u8bf7\u53c2\u8003IPU200M\u7684\u672c\u8282\u5185\u5bb9\u3002","title":"9.2.2 \u6a21\u578b\u8fd0\u884c"},{"location":"module/User_Guide/Develop/Special_Model_Conversion.html#93","text":"\u7f51\u7edc\u4e2d\u6709\u4e0d\u652f\u6301\u7684Layer\uff0c\u53ef\u5c06\u5b8c\u6574\u7f51\u7edc\u5206\u6bb5\u6267\u884c\u3002\u524d\u4e00\u6bb5\u7f51\u7edc\u8fd0\u884c\u5b8c\u6210\u540e\u5c06\u7ed3\u679c\u8f93\u5165\u7ed9\u81ea\u5b9a\u4e49\u5b9e\u73b0\u5c42\uff0c\u518d\u5c06\u81ea\u5b9a\u4e49\u5c42\u7684\u8f93\u51fa\u7ed3\u679c\u4f5c\u4e3a\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u8fd0\u884c\u3002\u4e0b\u9762\u4ee5Faster_RCNN\u7f51\u7edc\u4e3a\u4f8b\uff0c\u8bf4\u660e\u5982\u4f55\u8f6c\u6362\u5206\u6bb5\u7f51\u7edc\u3002","title":"9.3. \u5206\u6bb5\u7f51\u7edc\u8f6c\u6362\u8981\u70b9"},{"location":"module/User_Guide/Develop/Special_Model_Conversion.html#931","text":"Faster_RCNN\u7f51\u7edc\u4e2d\u7684Proposal Layer\u662f\u4e0d\u652f\u6301\u7684\uff0c\u6211\u4eec\u9700\u8981\u5c06\u7f51\u7edc\u4ece\u8be5\u5c42\u5206\u6210\u4e24\u6bb5\u3002 \u5982\u4e0b\u56fe\u6240\u793a\uff0c\u56fe\u4e2d\u7684Python Layer\u662fProposal Layer\uff0c\u901a\u8fc7\u4fee\u6539prototxt\u6587\u4ef6\uff0c\u5c06\u7f51\u7edc\u4eceProposal Layer\u5904\u62c6\u6210\u4e24\u6bb5\uff1a\u7b2c\u4e00\u6bb5\u7f51\u7edc\u5c06\u67093\u4e2a\u8f93\u51fa\uff0c\u5176\u4e2drpn_cls_prob_reshape\u548crpn_bbox_pred\u4e24\u4e2a\u8f93\u51fa\u7ed3\u679c\u5c06\u4f5c\u4e3aProposal Layer\u7684\u8f93\u5165\uff0cconv5_3\u548cProposal Layer\u7684\u8f93\u51fa\u5c06\u4f5c\u4e3a\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u3002 \u7b2c\u4e00\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u662f\u56fe\u7247\u6570\u636e\uff0cinput_config.ini\u548c\u524d\u5904\u7406python\u6587\u4ef6\u6309\u71672.2\u548c3.2\u8282\u5904\u7406\u3002\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u4e0d\u662f\u56fe\u7247\u6570\u636e\uff0c\u53ef\u4ee5\u53c2\u80039.2\u8282\u5bf9\u4e24\u4e2a\u8f93\u5165\u540c\u65f6\u91c7\u7528RAWDATA_S16_NHWC\u7684\u683c\u5f0f\u914d\u7f6e\u3002\u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u901a\u8fc7 ConvertTool.py\u5206\u522b\u5c06\u4e24\u4e2a\u7f51\u7edc\u8f6c\u6362\u6210float.sim\u6a21\u578b\u6587\u4ef6\u3002\u5177\u4f53\u914d\u7f6e\u6587\u4ef6\u548c\u8f6c\u6362\u547d\u4ee4\u5982\u4e0b\uff1a \u7b2c\u4e00\u6bb5\u7f51\u7edc\uff1a python3 ~/SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py caffe \\ --model_file test_stageone.prototxt \\ --weight_file VGG16_faster_rcnn_final.caffemodel \\ --input_arrays data \\ --output_arrays rpn_cls_prob_reshape,rpn_bbox_pred,conv5_3 \\ --input_config input_config.ini \\ --output_file faster_rcnn_main_float.sim [INPUT_CONFIG] inputs = data; input_formats = BGR; quantizations = TRUE; mean_red = 122.7717; mean_green = 115.9465; mean_blue = 102.9801; std_value = 1; [OUTPUT_CONFIG] outputs = rpn_cls_prob_reshape,rpn_bbox_pred,conv5_3; dequantizations = TRUE,TRUE,FALSE; \u8bbe\u5b9aconv5_3 \u8fd9\u4e2a\u8f93\u51fa\u7684dequantizations \u4e3aFALSE\uff0c\u7531\u4e8e\u8be5\u8f93\u51fa\u76f4\u63a5\u8f93\u5165\u7b2c\u4e8c\u6bb5\u7f51\u7edc\uff0c\u6240\u4ee5\u5728\u677f\u7aef\u8fd0\u884c\u65f6\u4e0d\u9700\u8981 \u8f6c\u6362\u6210float\uff0c\u53ef\u4ee5\u76f4\u63a5\u5c06\u8be5\u8f93\u51fa\u9001\u8fdb\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u3002 \u7b2c\u4e8c\u6bb5\u7f51\u7edc\uff1a ROIPooling\u7684rois\u8f93\u5165\u7ef4\u5ea6\u4e3a\uff08N\u00d75\uff09\uff0c\u5f53\u540e\u6bb5\u7f51\u7edc\u5168\u90e8\u662fInnerProduct\u65f6\uff0cN\u624d\u53ef\u4ee5\u8bbe\u7f6e\u4e3a300\uff08\u5982\u4e0a\u56fe\u6240\u793a\uff09\uff0c\u5982\u679c\u540e\u6bb5\u7f51\u7edc\u4e2d\u6709\u5377\u79ef\u65f6\uff0cN\u4ec5\u53ef\u4ee5\u8bbe\u7f6e\u4e3a1\uff0c\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u9700\u8981\u5faa\u73af\u6267\u884cN\u6b21\u3002 python3 ~/SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py caffe \\ --model_file second_stage.prototxt \\ --weight_file VGG16_faster_rcnn_final.caffemodel \\ --input_arrays conv5_3,rois \\ --output_arrays cls_prob,bbox_pred \\ --input_config input_config_stage2.ini \\ --output_file faster_rcnn_stage2_float.sim [INPUT_CONFIG] inputs = conv5_3,rois; input_formats = RAWDATA_S16_NHWC,RAWDATA_S16_NHWC; quantizations = TRUE,TRUE; mean_red = 0,0; mean_green = 0,0; mean_blue = 0,0; std_value = 1,1; [OUTPUT_CONFIG] outputs = cls_prob,bbox_pred; dequantizations = TRUE,TRUE;","title":"9.3.1 \u7f51\u7edc\u5207\u5206"},{"location":"module/User_Guide/Develop/Special_Model_Conversion.html#932","text":"\u5de5\u5177\u8def\u5f84 SGS_IPU_SDK/Scripts/examples/caffe_faster_rcnn/faster_rcnn_calibrator.py \u8be5\u5de5\u5177\u4f5c\u4e3aFaster_RCNN\u7f51\u7edc\u8f6c\u6362demo\uff0c\u76f4\u63a5\u8fd0\u884c\u5373\u53ef\u5c06\u4e24\u6bb5\u7f51\u7edc\u76f4\u63a5\u8f6c\u6362\u6210fixed\u6a21\u578b\u3002 python3 ~/SGS_IPU_SDK/Scripts/examples/caffe_faster_rcnn/faster_rcnn_calibrator.py \\ -i ~/SGS_Models/resource/detection/voc_calibration_set32/ \\ -m0 faster_rcnn_main_float.sim \\ -m1 faster_rcnn_stage2_float.sim \\ --input_config0 input_config.ini \\ --input_config1 input_config_stage2.ini \u5728\u8f6c\u6362\u5206\u6bb5\u7f51\u7edc\u65f6\uff0c\u9996\u5148\u5b9a\u4e49\u7f51\u7edc\u7684\u4e24\u6bb5\u7f51\u7edc\uff0c\u518d\u7ec4\u7ec7\u4e24\u6bb5\u7f51\u7edc\u7684\u8fd0\u884c\u65b9\u5f0f\uff0c\u5b9a\u4e49\u5728forward\u65b9\u6cd5\u91cc\uff1a class Net ( calibrator_custom . SIM_Calibrator ): def __init__ ( self ): super () . __init__ () self . main_model = calibrator_custom . calibrator ( main_model_path , main_input_config ) self . second_model = calibrator_custom . calibrator ( second_model_path , second_input_config ) self . rpn = rpn . ProposalLayer () def forward ( self , x ): out_details = self . main_model . get_output_details () input_data , im_scale = fill_inputImg2main ( x ) self . main_model . set_input ( 0 , input_data ) self . main_model . invoke () result_list = [] for idx , _ in enumerate ( out_details ): result = self . main_model . get_output ( idx ) result_list . append ( result ) im_info = np . array ([ x . shape [ 0 ], x . shape [ 1 ], im_scale ]) . reshape ( 1 , 3 ) bottom = [ result_list [ 0 ], result_list [ 1 ], im_info ] roi = self . rpn . forward ( bottom ) out2_details = self . second_model . get_output_details () self . second_model . set_input ( 0 , result_list [ 2 ]) self . second_model . set_input ( 1 , roi ) self . second_model . invoke () second_result = [] for idx , _ in enumerate ( out2_details ): result = self . second_model . get_output ( idx ) second_result . append ( result ) return second_result Faster_RCNN\u7f51\u7edc\u4e2d\uff0c\u4f7f\u7528\u4e86\u81ea\u5b9a\u4e49\u7684rpn\u5c42\uff0c\u56e0\u6b64\u5c06\u7b2c\u4e00\u6bb5\u7f51\u7edc\u7684\u7b2c1\u4e2a\u548c\u7b2c2\u4e2a\u8f93\u51fa\u4ee5\u53ca\u56fe\u7247\u4fe1\u606f\u4f5c\u4e3arpn\u5c42\u7684\u8f93\u5165\uff0c\u7b2c\u4e00\u6bb5\u7f51\u7edc\u7684\u7b2c3\u4e2a\u8f93\u51fa\u548crpn\u5c42\u7684\u8f93\u51faroi\u4f5c\u4e3a\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u3002 \u6700\u540e\u8c03\u7528Net\u7684convert\u65b9\u6cd5\uff0c\u540c\u65f6\u751f\u6210\u4e24\u6bb5\u7f51\u7edc\u7684fixed\u6a21\u578b\u3002 net = Net () net . convert ( img_gen , num_process = num_subsets , fix_model = [ out_main_model , out_second_model ])","title":"9.3.2 \u8f6c\u6362\u7f51\u7edc"},{"location":"module/User_Guide/Develop/Special_Model_Conversion.html#933","text":"\u5de5\u5177\u8def\u5f84 SGS_IPU_SDK/Scripts/examples/caffe_faster_rcnn/faster_rcnn_simulator.py \u8be5\u5de5\u5177\u4f5c\u4e3aFaster_RCNN\u7f51\u7edc\u8fd0\u884cdemo\uff0c\u76f4\u63a5\u8fd0\u884c\u4e24\u6bb5\u7f51\u7edc\u3002 python3 ~/SGS_IPU_SDK/Scripts/examples/caffe_faster_rcnn/faster_rcnn_simulator.py \\ -i ~/SGS_Models/resource/detection/004545.jpg \\ -m0 faster_rcnn_main_float.sim \\ -m1 faster_rcnn_stage2_float.sim \\ -t Float \u8fd0\u884c\u4e24\u6bb5\u6a21\u578b\u7684\u65b9\u6cd5\u4e0e\u8f6c\u6362\u7f51\u7edc\u65f6\u7c7b\u4f3c\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662fFixed\u6a21\u578b\u548cOffline\u6a21\u578b\u8f93\u51fa\u65f6\u4f1a\u6709Garbage\u6570\u636e\uff0c \u7b2c\u4e8c\u6bb5\u6a21\u578b\u8f93\u5165\u65f6\u9700\u8981\u5148\u5c06\u6570\u636e\u5bf9\u9f50\uff0c\u8be6\u89c19.2\u8282RAWDATA_S16_NHWC\u8f93\u5165\u7684\u6a21\u578b\u3002\u7531\u4e8e\u7b2c\u4e00\u6bb5\u7f51\u7edc\u7684conv5_3 \u8fd9\u4e2a\u8f93\u51fa\u76f4\u63a5\u8f93\u5165\u7b2c\u4e8c\u6bb5\u7f51\u7edc\uff0c\u6240\u4ee5\u8fd0\u884c\u65f6\u4e0d\u9700\u8981\u53bb\u9664Garbage\u548c\u8f6c\u6362\u6210float\uff0c\u53ef\u4ee5\u76f4\u63a5\u5c06\u8be5\u8f93\u51fa\u4f5c\u4e3a\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u3002 class Net ( calibrator_custom . SIM_Simulator ): def __init__ ( self ): super () . __init__ () self . main_model = main_model self . second_model = second_model self . rpn = rpn . ProposalLayer () def forward ( self , x ): # Run main model out_details = self . main_model . get_output_details () input_data , im_scale = fill_inputImg2main ( x , norm = norm ) self . main_model . set_input ( 0 , input_data ) self . main_model . invoke () result_list = [] for idx , _ in enumerate ( out_details ): result = self . main_model . get_output ( idx ) # Get main output for Fixed and Offline model if result . shape [ - 1 ] != out_details [ idx ][ 'shape' ][ - 1 ] and out_details [ idx ][ 'name' ] != 'conv5_3' : result = result [ ... , : out_details [ idx ][ 'shape' ][ - 1 ]] if out_details [ idx ][ 'dtype' ] == np . int16 and out_details [ idx ][ 'name' ] != 'conv5_3' : scale , _ = out_details [ idx ][ 'quantization' ] result = np . dot ( result , scale ) result_list . append ( result ) # Run Proposal Layer im_info = np . array ([ x . shape [ 0 ], x . shape [ 1 ], im_scale ]) . reshape ( 1 , 3 ) bottom = [ result_list [ 0 ], result_list [ 1 ], im_info ] roi = self . rpn . forward ( bottom ) # Run Second stage model in2_details = self . second_model . get_input_details () out2_details = self . second_model . get_output_details () in2_data = [ result_list [ 2 ], copy . deepcopy ( roi )] for idx , in2_info in enumerate ( in2_details ): if in2_info [ 'dtype' ] == np . int16 and in2_info [ 'name' ] != 'conv5_3' : # Set second model input for Fixed and Offline model ins , zp = in2_info [ 'quantization' ] in2_data [ idx ] = ( in2_data [ idx ] * 0.0625 / ins + zp ) . astype ( in2_info [ 'dtype' ]) feature_s16 = np . zeros ( in2_info [ 'shape' ]) . astype ( 'int16' ) feature_s16 [ ... , : in2_data [ idx ] . shape [ - 1 ]] = in2_data [ idx ] self . second_model . set_input ( in2_info [ 'index' ], feature_s16 ) else : self . second_model . set_input ( in2_info [ 'index' ], in2_data [ idx ]) self . second_model . invoke () second_result = [] for idx , _ in enumerate ( out2_details ): result = self . second_model . get_output ( idx ) # Get second output for Fixed and Offline model if result . shape [ - 1 ] != out2_details [ idx ][ 'shape' ][ - 1 ]: result = result [ ... , : out2_details [ idx ][ 'shape' ][ - 1 ]] if out2_details [ idx ][ 'dtype' ] == np . int16 : scale , _ = out2_details [ idx ][ 'quantization' ] result = np . dot ( result , scale ) second_result . append ( result . reshape ( 300 , - 1 )) second_result . append ( roi ) second_result . append ( im_info ) return second_result \u8fd0\u884c\u7f51\u7edc\u65f6\u5148\u521b\u5efaNet\u7684\u5b9e\u4f8b\uff0c\u7136\u540e\u8c03\u7528\u81ea\u8eab\u7684\u65b9\u6cd5\u5c31\u53ef\u4ee5\u8fd0\u884c\u3002\u5177\u4f53\u53c2\u80035.2.2\u8282\u3002 net = Net () results = net ( img_gen , num_process = num_subsets )","title":"9.3.3 \u8fd0\u884c\u7f51\u7edc"},{"location":"module/User_Guide/Develop/Special_Model_Conversion.html#94","text":"","title":"9.4. \u591a\u8f93\u5165\u7f51\u7edc\u8f6c\u6362\u8981\u70b9"},{"location":"module/User_Guide/Develop/Special_Model_Conversion.html#941","text":"\u4f7f\u7528Tensorflow1.14.0\u6784\u5efa\u4e00\u4e2a\u53cc\u8f93\u5165\u7f51\u7edc\uff0c\u8be5\u7f51\u7edc\u7528\u6765\u505a\u77e9\u9635\u4e58\u6cd5\uff0c\u8ba1\u7b97\u4e24\u4e2a\u5411\u91cf\u7684\u5185\u79ef\u3002 import tensorflow as tf import numpy as np SHAPE_DIMS = 256 input_np0 = np . random . rand ( 1 , SHAPE_DIMS ) . astype ( np . float32 ) input_np1 = np . random . rand ( 1 , SHAPE_DIMS ) . astype ( np . float32 ) input_0 = tf . placeholder ( dtype = tf . float32 , shape = ( 1 , SHAPE_DIMS ), name = 'input0' ) input_1 = tf . placeholder ( dtype = tf . float32 , shape = ( 1 , SHAPE_DIMS ), name = 'input1' ) out = tf . matmul ( input_0 , tf . reshape ( input_1 , ( SHAPE_DIMS , 1 )), name = 'output' ) with tf . Session () as sess : results = sess . run ( out , feed_dict = { input_0 : input_np0 , input_1 : input_np1 }) # Convert .pb output_graph_def = tf . graph_util . convert_variables_to_constants ( sess , sess . graph_def , [ 'output' ] ) with tf . gfile . GFile ( 'matmul.pb' , 'wb' ) as f : f . write ( output_graph_def . SerializeToString ()) print ( 'matmul.pb Saved!' ) # convert to .tflite tflite_model = tf . lite . TFLiteConverter . from_frozen_graph ( 'matmul.pb' , [ 'input0' , 'input1' ], [ 'output' ] ) tflite_model = tflite_model . convert () with open ( 'matmul.tflite' , 'wb' ) as f : f . write ( tflite_model ) print ( 'matmul.tflite Saved!' ) \u8fd0\u884c\u8be5\u811a\u672c\uff0c\u5c31\u80fd\u751f\u6210matmul.tflite\u6a21\u578b\u6587\u4ef6\u4e86\u3002","title":"9.4.1 \u6784\u5efa\u591a\u8f93\u5165\u7f51\u7edc"},{"location":"module/User_Guide/Develop/Special_Model_Conversion.html#942","text":"\u4e0b\u9762\u5c06matmul.tflte\u8f6c\u6362\u6210\u53ef\u4ee5\u5728\u677f\u4e0a\u8fd0\u884c\u7684\u6a21\u578b\u6587\u4ef6\u3002 matmul.tflite\u6a21\u578b\u4e0d\u662f\u56fe\u7247\u8f93\u5165\uff0c\u56e0\u6b64\u914d\u7f6einput_config.ini\u6587\u4ef6\u8bf7\u53c2\u80039.2\u8282\u3002 \u914d\u7f6einput_config.ini\u811a\u672c [INPUT_CONFIG] inputs = input0,input1; input_formats = RAWDATA_S16_NHWC,RAWDATA_S16_NHWC; quantization = TRUE,TRUE; mead_red = 0,0; mean_green = 0,0; mean_blue = 0,0; std_value = 1,1; [OUTPUT_CONFIG] outputs = output; dequantization = TRUE; \u8bf7\u5148\u5728SGS_IPU_SDK\u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK source cfg_env.sh \u7136\u540e\u4f7f\u7528ConvertTool\u5de5\u5177\u8f6c\u6362matmul.tflite\uff1a python3 ~/SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py tflite \\ --model_file /path/to/matmul.tflite \\ --input_config /path/to/input_config.ini \\ --output_file /path/to/matmul_float.sim \u591a\u8f93\u5165\u7f51\u7edc\u7684calibrator\u8fc7\u7a0b\u9700\u8981\u4f7f\u7528calibrator_custom\u6a21\u5757\uff0c\u8be6\u7ec6\u53ef\u4ee5\u53c2\u80033.4\u8282\u3002\u4f46\u4e0e3.4.2\u8282\u4e2d\u4e0d\u540c\u7684\u662f\u8f93\u5165\u7684\u751f\u6210\u5668\u9700\u8981\u914d\u7f6e\u6210\u53cc\u8f93\u5165\u3002\u5c06\u4ee5\u4e0b\u793a\u4f8b\u6587\u4ef6\u4fdd\u5b58\u4e3amatmul_calibrator.py\u3002 # -*- coding: utf-8 -*- import calibrator_custom import os import sys import numpy as np import argparse from calibrator_custom import utils class Net ( calibrator_custom . SIM_Calibrator ): def __init__ ( self , model_path , input_config ): super () . __init__ () self . model = calibrator_custom . calibrator ( model_path , input_config ) def forward ( self , x , y ): out_details = self . model . get_output_details () self . model . set_input ( 0 , x ) self . model . set_input ( 1 , y ) self . model . invoke () result_list = [] for idx in range ( len ( out_details )): result = self . model . get_output ( idx ) result_list . append ( result ) return result_list def arg_parse (): parser = argparse . ArgumentParser ( description = 'Calibrator Tool' ) parser . add_argument ( '-m' , '--model' , type = str , required = True , help = 'Model path.' ) parser . add_argument ( '--input_config' , type = str , required = True , help = 'Input config path.' ) parser . add_argument ( '--quant_level' , type = str , default = 'L5' , choices = [ 'L1' , 'L2' , 'L3' , 'L4' , 'L5' ], help = 'Indicate Quantilization level. The higher the level, \\ the slower the speed and the higher the accuracy.' ) parser . add_argument ( '--num_process' , default = 10 , type = int , help = 'Amount of processes run at same time.' ) parser . add_argument ( '-o' , '--output' , default = None , type = str , help = 'Output path for fixed model.' ) return parser . parse_args () def data_gen (): calibrator_data = np . random . rand ( 100 , 1 , 256 ) . astype ( np . float32 ) bench_data = np . random . rand ( 100 , 1 , 256 ) . astype ( np . float32 ) for i , j in zip ( calibrator_data , bench_data ): yield [ i , j ] def main (): args = arg_parse () model_path = args . model input_config = args . input_config quant_level = args . quant_level num_subsets = args . num_process output = args . output if not os . path . exists ( model_path ): raise FileNotFoundError ( 'No such {} model' . format ( model_path )) if not os . path . exists ( input_config ): raise FileNotFoundError ( 'input_config.ini file not found.' ) net = Net ( model_path , input_config ) print ( net ) # random generate data # must change real data when using img_gen = data_gen () print ( ' \\033 [31m[WARNING] random generate data, \\ must change real data when using! \\033 [0m' , file = sys . stderr ) out_model = utils . get_out_model_name ( model_path , output ) net . convert ( img_gen , num_process = num_subsets , quant_level = quant_level , fix_model = [ out_model ]) if __name__ == '__main__' : main () \u4f7f\u7528\u7f16\u5199\u7684matmul_calibrator.py\u8f6c\u6362matmul_float.sim\uff0c\u751f\u6210matmul_fixed.sim\u3002 python3 matmul_calibrator.py \\ -m /path/to/matmul_float.sim \\ --input_config /path/to/input_config.ini \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u91cf\u5316\u8be5\u6a21\u578b\u7684\u8f93\u5165\u6570\u636e\u4e00\u5b9a\u8981\u6362\u6210\u771f\u5b9e\u6570\u636e\uff0c\u4e0d\u7136\u7edf\u8ba1\u751f\u6210\u7684fixed\u6a21\u578b\u7cbe\u5ea6\u4f1a\u51fa\u9519\u3002\u5982\u679c\u5355\u72ec\u91cf\u5316\u8be5\u6a21\u578b\u6bd4\u8f83\u56f0\u96be\uff0c\u6bd4\u5982\u5b83\u662f\u63a5\u5728\u67d0\u4e2a\u7f51\u7edc\u540e\u9762\u8fd0\u884c\u7684\uff0c\u53ef\u4ee5\u53c2\u80039.4\u8282\uff0c\u6309\u7167\u591a\u6bb5\u7f51\u7edc\u5904\u7406\uff0c\u5728calibrator_custom.SIM_Calibrator\u7c7b\u91cc\u5b9a\u4e49\u591a\u4e2a\u6a21\u578b\uff0c\u53ef\u4ee5\u76f4\u63a5\u751f\u6210\u51fa\u591a\u4e2afixed\u7f51\u7edc\u3002 \u6700\u540e\u4f7f\u7528compiler.py\u8f6c\u6362matmul_fixed.sim\uff0c\u751f\u6210matmul_fixed.sim_sgsimg.img\u3002","title":"9.4.2 \u8f6c\u6362\u591a\u8f93\u5165\u7f51\u7edc"},{"location":"module/User_Guide/Develop/Special_Model_Conversion.html#943-pc","text":"\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd0\u884cFloat\u7684\u7f51\u7edc\u65f6\uff0c\u8f93\u5165\u6570\u636e\u7684type\u9700\u8981\u4e3afloat32\uff0c\u8f93\u5165\u6570\u636e\u7684shape\u4e0e\u6a21\u578b\u8f93\u5165shape\u76f8\u540c\u3002\u4f46\u662f\u7531\u4e8ematmul\u7684Fixed\u548cOffline\u6a21\u578b\u662fRAWDATA_S16_NHWC\u8f93\u5165\uff0c\u8f93\u5165\u6570\u636e\u9700\u8981\u5148\u53cd\u91cf\u5316\u5230int16\uff0c\u7136\u540e\u5bf9\u9f50\u540e\u624d\u80fd\u8f93\u5165\u5230\u6a21\u578b\u3002\u6240\u4ee5\u5b9a\u4e49calibrator_custom.SIM_Simulator\u7684forward\u51fd\u6570\u65f6\u9700\u8981\u6ce8\u610f\u8be5\u6a21\u578b\u7684\u7279\u6b8a\u6027\uff1a class Net ( calibrator_custom . SIM_Simulator ): def __init__ ( self , model_path , phase ): super () . __init__ () if phase == 'Float' : self . model = calibrator_custom . float_simulator ( model_path ) elif phase == 'Fixed' : self . model = calibrator_custom . fixed_simulator ( model_path ) else : self . model = calibrator_custom . offline_simulator ( model_path ) def forward ( self , x , y ): in_details = self . model . get_input_details () out_details = self . model . get_output_details () in2_data = [ x , y ] for idx , in_info in enumerate ( in_details ): if in_info [ 'dtype' ] == np . int16 : # Set model input for Fixed and Offline model ins , zp = in_info [ 'quantization' ] in2_data [ idx ] = np . clip (( in2_data [ idx ] / ins + zp ), - 32768 , 32767 ) . astype ( in_info [ 'dtype' ]) feature_s16 = np . zeros ( in_info [ 'shape' ]) . astype ( 'int16' ) feature_s16 [ ... , : in2_data [ idx ] . shape [ - 1 ]] = in2_data [ idx ] self . model . set_input ( in_info [ 'index' ], feature_s16 ) else : self . model . set_input ( in_info [ 'index' ], in2_data [ idx ]) self . model . invoke () result_list = [] for idx in range ( len ( out_details )): result = self . model . get_output ( idx ) # for Fixed and Offline model if result . shape [ - 1 ] != out_details [ idx ][ 'shape' ][ - 1 ]: result = result [ ... , : out_details [ idx ][ 'shape' ][ - 1 ]] if out_details [ idx ][ 'dtype' ] == np . int16 : scale , _ = out_details [ idx ][ 'quantization' ] result = np . dot ( result , scale ) result_list . append ( result ) return result_list","title":"9.4.3 \u5728PC\u4e0a\u8fd0\u884c\u591a\u8f93\u5165\u7f51\u7edc"},{"location":"module/User_Guide/Develop/Special_Model_Conversion.html#944","text":"\u7531\u4e8ematmul_fixed.sim_sgsimg.img\u7f51\u7edc\u8f93\u5165\u662f RAWDATA_S16_NHWC \uff0c\u53ef\u4ee5\u53c2\u80039.2.2\u8282\u4e2dFillInputData\u51fd\u6570\uff0c\u4e0e\u5728PC\u4e0a\u76f8\u540c\uff0c\u9700\u8981\u5c06\u8f93\u5165\u6570\u636e\u5904\u7406\u540e\u518d\u9001\u5165\u6a21\u578b\u3002 \u591a\u8f93\u5165\u6a21\u578b\u53ea\u9700\u5728FillInputData\u51fd\u6570\u4e2d\u589e\u52a0\u5bf9\u6a21\u578b\u7684\u7b2c\u4e8c\u4e2a\u8f93\u5165\u704c\u5165\u6570\u636e\uff1a // input0 MI_S16 * pData0 = ( MI_S16 * ) InputTensorVector . astArrayTensors [ 0 ]. ptTensorData [ 0 ]; // input1 MI_S16 * pData1 = ( MI_S16 * ) InputTensorVector . astArrayTensors [ 1 ]. ptTensorData [ 0 ]; \u5982\u679cmatmul_fixed.sim_sgsimg.img\u662f\u4e3a\u4e86\u4f7f\u7528\u4e0a\u4e00\u4e2a\u6a21\u578b\u7684\u8f93\u51fa\u6570\u636e\uff0c\u53ef\u4ee5\u5bf9\u4e0a\u4e00\u4e2a\u6a21\u578b\u7684input_config.ini\u8fd9\u6837\u914d\u7f6e\uff1a [OUTPUT_CONFIG]\u7684dequantization=FALSE; \u8fd9\u6837\u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u4e0a\u4e00\u4e2a\u6a21\u578b\u7684\u8f93\u51fa\u6570\u636e\u7c7b\u578b\u4e3aINT16\uff0c\u53ef\u76f4\u63a5\u4f5c\u4e3amatmul_fixed.sim_sgsimg.img\u6a21\u578b\u7684\u8f93\u5165\u3002","title":"9.4.4 \u5728\u677f\u4e0a\u8fd0\u884c\u591a\u8f93\u5165\u7f51\u7edc"},{"location":"module/User_Guide/IPU100/Convert.html","text":"2.1. \u4f7f\u7528\u65b9\u6cd5 \u00b6 Convert Tool\u5de5\u5177\u7684\u4f4d\u7f6e\u5728 SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py \u3002 \u76ee\u524dConvert Tool\u652f\u6301\u4ecetensorflow_graphdef\uff0ctensorflow_savemodel\uff0ckeras\uff0ctflite\uff0ccaffe\uff0connx \u516d\u79cd\u6846\u67b6\u6a21\u578b\u8f6c\u6362\u4e3aSGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u3002 \u4f7f\u7528\u524d\u5148\u5728SGS_IPU_SDK\u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK source cfg_env.sh \u4e0b\u9762\u662fConvert Tool\u76ee\u524d\u652f\u6301\u7684platform information\uff1a python3 ConvertTool.py -h usage : ConvertTool.py [-h] {tensorflow_graphdef,tensorflow_savemodel,keras,tflite,caffe,onnx} ... Convert Tool positional arguments : {tensorflow_graphdef,tensorflow_savemodel,keras,tflite,caffe,onnx} platform info tensorflow_graphdef tensorflow graphdef commands tensorflow_savemodel tensorflow save_model commands keras keras commands tflite tflite commands caffe caffe commands onnx onnx commands optional arguments : -h, --help show this help message and exit \u5982\u679c\u60f3\u8fdb\u4e00\u6b65\u770b\u770b\u5404\u4e2a\u5e73\u53f0\u8f6c\u6362\u6240\u9700\u8981\u7684\u53c2\u6570\u4fe1\u606f\uff0c\u53ef\u4ee5\u6267\u884c python3 ConvertTool.py {platform} \u2013h \uff0c\u5404\u4e2a\u5e73\u53f0\u5177\u4f53\u4fe1\u606f\u548c\u67e5\u770b\u6307\u4ee4\u5982\u4e0b\uff1a 2.1.1 tensorflow_graphdef \u6846\u67b6\u6307\u4ee4 \u00b6 python3 ConvertTool.py tensorflow_graphdef -h usage : ConvertTool.py tensorflow_graphdef [-h] --graph_def_file GRAPH_DEF_FILE --input_arrays INPUT_ARRAYS (optional) --output_arrays OUTPUT_ARRAYS (optional) --input_config INPUT_CONFIG --output_file OUTPUT_FILE --input_shapes INPUT_SHAPES (optional) optional arguments : -h, --help show this help message and exit. --graph_def_file GRAPH_DEF_FILE Full filepath of file containing frozen GraphDef. --input_arrays INPUT_ARRAYS Names of the input arrays, comma-separated. --output_arrays OUTPUT_ARRAYS Names of the output arrays, comma-separated. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth. Default : None \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ConvertTool.py tensorflow_graphdef \\ --graph_def_file ~/SGS_Models/tensorflow/resnet_v2_50/resnet_v2_50.pb \\ --output_file ./resnet_v2_float.sim \\ --input_shapes 1,299,299,3 \\ --input_config ~/SGS_Models/tensorflow/resnet_v2_50/input_config.ini \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a --graph_def_file : \u8f93\u5165\u7684\u6a21\u578b\u4e3aTensorFlow frozen\u7684graphdef\u7684pb\u683c\u5f0f\u6587\u4ef6\u8def\u5f84\u3002 --output_file : \u8f93\u51fa\u7684\u6a21\u578b\u6587\u4ef6\uff0cflatbuffer\u683c\u5f0f\uff0csim\u540e\u7f00\u6587\u4ef6\u3002 --input_shapes : \u7f51\u7edc\u8f93\u5165Tensor\u7684shape\uff0c\u683c\u5f0f\u4e3aNHWC\uff0cdimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0cshape\u4e2a\u6570\u548cinputs\u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 \u53ef\u9009\u53c2\u6570\uff1a --input_arrays : \u7f51\u7edc\u8f93\u5165Tensor\u7684\u540d\u5b57\uff0c\u4ee5\u5b57\u7b26\u4e32\u7c7b\u578b\u6307\u5b9a\uff0c\u591a\u4e2ainputs\u7684\u8bdd\uff0c\u4e2d\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0c\u5982\uff1a--input_arrays='Input1','Input2'\u3002 --output_arrays : \u7f51\u7edc\u8f93\u51faTensor\u7684\u540d\u5b57\uff0c\u4ee5\u5b57\u7b26\u4e32\u7c7b\u578b\u6307\u5b9a\uff0c\u591a\u4e2aoutputs\u7684\u8bdd\uff0c\u4e2d\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\u3002 2.1.2 tensorflow_savemodel \u6846\u67b6\u6307\u4ee4 \u00b6 python3 ConvertTool.py tensorflow_savemodel -h usage : ConvertTool.py tensorflow_savemodel [-h] --saved_model_dir SAVED_MODEL_DIR --input_config INPUT_CONFIG --output_file OUTPUT_FILE --output_arrays OUTPUT_ARRAYS (optional) --input_arrays INPUT_ARRAYS (optional) --input_shapes INPUT_SHAPES (optional) --tag_set TAG_SET (optional) --signature_key SIGNATURE_KEY (optional) optional arguments : -h, --help show this help message and exit. --saved_model_dir SAVED_MODEL_DIR SavedModel directory to convert. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. --debug Run gdb in Debug mode. --input_arrays INPUT_ARRAYS Names of the input arrays, comma-separated. Default : None. --output_arrays OUTPUT_ARRAYS Names of the output arrays, comma-separated. Default : None. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth Default : None. --tag_set TAG_SET Set of tags identifying the MetaGraphDef within the SavedModel to analyze. All tags in the tag set must be present. Default : None. --signature_key SIGNATURE_KEY Key identifying SignatureDef containing inputs and outputs. Default : DEFAULT_SERVING_SIGNATURE_DEF_KEY \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ConvertTool.py tensorflow_savemodel \\ --saved_model_dir ~/test/tensorflow_model/save_model \\ --input_config ~/test/tensorflow_model/input_config.ini \\ --output_file ~/test/tensorflow_model/save_model_float.sim \\ --tag_set test_saved_model \\ --signature_key test_signature \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a --saved_model_dir : \u8f93\u5165\u7684\u6a21\u578b\u4e3aTensorFlow saved_model.builder\u751f\u6210\u7684\u6587\u4ef6\u8def\u5f84\u3002 --output_file : \u8f93\u51fa\u7684\u6a21\u578b\u6587\u4ef6\uff0cflatbuffer\u683c\u5f0f\uff0csim\u540e\u7f00\u6587\u4ef6\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 \u53ef\u9009\u53c2\u6570\uff1a --input_arrays : \u7f51\u7edc\u8f93\u5165Tensor\u7684\u540d\u5b57\uff0c\u4ee5\u5b57\u7b26\u4e32\u7c7b\u578b\u6307\u5b9a\uff0c\u591a\u4e2ainputs\u7684\u8bdd\uff0c\u4e2d\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0c\u5982\uff1a--input_arrays='Input1','Input2'\uff0c\u82e5\u4e0d\u6307\u5b9a\u5219\u4ecesaved_model_dir\u4e2d\u83b7\u53d6\u3002 --output_arrays : \u7f51\u7edc\u8f93\u51faTensor\u7684\u540d\u5b57\uff0c\u4ee5\u5b57\u7b26\u4e32\u7c7b\u578b\u6307\u5b9a\uff0c\u591a\u4e2aoutputs\u7684\u8bdd\uff0c\u4e2d\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\u3002\u82e5\u4e0d\u6307\u5b9a\u5219\u4ecesaved_model_dir\u4e2d\u83b7\u53d6\u3002 --input_shapes : \u7f51\u7edc\u8f93\u5165Tensor\u7684shape\uff0c\u683c\u5f0f\u4e3aNHWC\uff0cdimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0cshape\u4e2a\u6570\u548cinputs \u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002\u82e5\u4e0d\u6307\u5b9a\u5219\u4ecesaved_model_dir\u4e2d\u83b7\u53d6\u3002 --tag_set : \u9700\u8981\u548csave model\u65f6\u6240\u6307\u5b9a\u7684tag\u5339\u914d\uff0c\u5982\u679c\u4e0d\u505a\u8bbe\u5b9a\uff0c\u5219\u9ed8\u8ba4\u4e3a\u2018serve\u2019\u3002 --signature_key : \u9700\u8981\u548csave model\u65f6\u6240\u6307\u5b9a\u7684signature\u5339\u914d\u3002\u5982\u679c\u4e0d\u505a\u8bbe\u5b9a\uff0c\u5219\u9ed8\u8ba4\u4e3a \u2018DEFAULT_SERVING_SIGNATURE_DEF_KEY\u2019 2.1.3 keras\u6846\u67b6\u6307\u4ee4 \u00b6 python3 ConvertTool.py keras -h usage : ConvertTool.py keras [-h] --model_file MODEL_FILE --input_config INPUT_CONFIG --output_file OUTPUT_FILE --input_arrays INPUT_ARRAYS (optional) --output_arrays OUTPUT_ARRAYS (optional) --input_shapes INPUT_SHAPES (optional) --custom_objects CUSTOM_OBJECTS (optional) optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of HDF5 file containing the tf.keras model. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. --input_arrays INPUT_ARRAYS Names of the input arrays, comma-separated. Default : None. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth. Default : None. --output_arrays OUTPUT_ARRAYS Names of the output arrays, comma-separated. Default : None. --custom_objects CUSTOM_OBJECTS Dict mapping names (strings) to custom classes or functions to be considered during model deserialization. Default : None. \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ConvertTool.py keras \\ --model_file ./TEST_h5/resnet50/resnet50.h5 \\ --input_config ./TEST_h5/resnet50/input_config.ini \\ --output_file ./TEST_h5/resnet50/resnet50_float.sim \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a --model_file : \u8f93\u5165\u7684\u6a21\u578b\u4e3akeras h5\u683c\u5f0f\u6587\u4ef6\u8def\u5f84\u3002 --output_file : \u8f93\u51fa\u7684\u6a21\u578b\u6587\u4ef6\uff0cflatbuffer\u683c\u5f0f\uff0csim\u540e\u7f00\u6587\u4ef6\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 \u53ef\u9009\u53c2\u6570\uff1a --input_arrays : \u7f51\u7edc\u8f93\u5165Tensor\u7684\u540d\u5b57\uff0c\u4ee5\u5b57\u7b26\u4e32\u7c7b\u578b\u6307\u5b9a\uff0c\u591a\u4e2ainputs\u7684\u8bdd\uff0c\u4e2d\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0c\u5982\uff1a--input_arrays='Input1','Input2'\u3002 --output_arrays : \u7f51\u7edc\u8f93\u51faTensor\u7684\u540d\u5b57\uff0c\u4ee5\u5b57\u7b26\u4e32\u7c7b\u578b\u6307\u5b9a\uff0c\u591a\u4e2aoutputs\u7684\u8bdd\uff0c\u4e2d\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\u3002 --input_shapes : \u7f51\u7edc\u8f93\u5165Tensor\u7684shape\uff0c\u683c\u5f0f\u4e3aNHWC\uff0cdimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0cshape\u4e2a\u6570\u548cinputs \u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002 --custom_objects : Dict mapping names (strings) to custom classes or functions to be considered during model deserialization (default None). 2.1.4 tflite\u6846\u67b6\u6307\u4ee4 \u00b6 python3 ConvertTool.py tflite -h usage : ConvertTool.py tflite [-h] --model_file MODEL_FILE --input_config INPUT_CONFIG --output_file OUTPUT_FILE optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of tflite file containing the tflite model. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ConvertTool.py tflite \\ --model_file ~/test/tensorflow_model/Debug_save_model_float.tflite \\ --input_config ~/test/tensorflow_model/input_config.ini \\ --output_file ~/test/tensorflow_model/save_model_float.sim \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a --model_file : \u8f93\u5165\u7684\u6a21\u578b\u4e3atflite\u683c\u5f0f\u6587\u4ef6\u8def\u5f84(\u5fc5\u987b\u4e3a\u975e\u91cf\u5316\u6a21\u578b)\u3002 --output_file : \u8f93\u51fa\u7684\u6a21\u578b\u6587\u4ef6\uff0cflatbuffer\u683c\u5f0f\uff0csim\u540e\u7f00\u6587\u4ef6\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 2.1.5 caffe\u6846\u67b6\u6307\u4ee4 \u00b6 python3 ConvertTool.py caffe -h usage : ConvertTool.py caffe [-h] --model_file MODEL_FILE --weight_file WEIGHT_FILE --input_config INPUT_CONFIG --output_file OUTPUT_FILE --input_arrays INPUT_ARRAYS (optional) --output_arrays OUTPUT_ARRAYS (optional) optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of tflite file containing the caffe model. --weight_file WEIGHT_FILE Full filepath of tflite file containing the caffe weight. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. --input_arrays INPUT_ARRAYS Names of the input arrays, comma-separated. Default : None. --output_arrays OUTPUT_ARRAYS Names of the output arrays, comma-separated. Default : None. \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ConvertTool.py caffe \\ --model_file ~/SGS_Models/caffe/caffe_resnet50_conv/caffe_resnet50_conv.prototxt \\ --weight_file ~/SGS_Models/caffe/caffe_resnet50_conv/caffe_resnet50_conv.caffemodel \\ --input_config ~/SGS_Models/caffe/caffe_resnet50_conv/input_config.ini \\ --output_file ./resnet50.sim \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a --model_file : Caffe\u6a21\u578b\u6587\u4ef6\u7684\u8def\u5f84 --weight_file : Caffe\u6743\u91cd\u6587\u4ef6\u7684\u8def\u5f84 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput config\u7684\u914d\u7f6e\u4fe1\u606f\u3002 --output_file : \u8f6c\u6362\u6a21\u578b\u7684\u8f93\u51fa\u8def\u5f84\u3002 \u53ef\u9009\u53c2\u6570\uff1a --input_arrays : Caffe\u6a21\u578b\u8f93\u5165\u7684\u8282\u70b9\u540d\u79f0\uff0c\u4f7f\u7528input\u7684\u540d\u5b57\uff0c\u5982\u6709\u591a\u4e2a\u8f93\u51fa\u8282\u70b9\uff0c\u8bf7\u7528\u9017\u53f7( , )\u5206\u9694 --output_arrays : \u6a21\u578b\u8f93\u51fa\u7684\u8282\u70b9\u540d\u79f0\uff0c\u4f7f\u7528\u6700\u540elayer\u7684top\u540d\u5b57\uff0c\u5982\u6709\u591a\u4e2a\u8f93\u51fa\u8282\u70b9\uff0c\u8bf7\u7528\u9017\u53f7( , )\u5206\u9694 --output_pack_model_arrays : \u8f93\u51faTensors\u6570\u636e\u9ed8\u8ba4\u6392\u5e03\u4e3aNHWC,\u9ed8\u8ba4\u4e3aNone\uff1b\u652f\u6301\u4e24\u79cd\u6307\u5b9a\u8f93\u51fa\u6570\u636e\u6392\u5e03\u4e3aNCHW\u7684\u8868\u8fbe\u65b9\u5f0f \uff081\uff09caffe\u6a21\u578b\u4f7f\u7528\u2018caffe\u2019\uff0c\u8f93\u51faTensors\u7684\u6570\u636e\u6392\u5e03\u4e3aNCHW\uff1b\uff082\uff09\u8bbe\u4e3a\u8f93\u51faTensors\u540d\u5b57\uff0c\u8be5\u8f93\u51faTensor\u7684\u6570\u636e\u6392\u5e03\u4e3aNCHW\u3002 2.1.6 Onnx\u6846\u67b6\u6307\u4ee4 \u00b6 python3 Path_to_SGS_IPU_SDK/Scripts/ConvertTool.py onnx -h usage : ConvertTool.py onnx [-h] --model_file MODEL_FILE --input_arrays INPUT_ARRAYS (optional) --input_shapes INPUT_SHAPES --output_arrays OUTPUT_ARRAYS (optional) --input_config INPUT_CONFIG --output_file OUTPUT_FILE optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of tflite file containing the onnx model. --input_arrays INPUT_ARRAYS Names of the input arrays, comma-separated. (default None). --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon-separated. For many models each shape takes the form N C H W (default None) --output_arrays OUTPUT_ARRAYS Names of the output arrays, comma-separated. (default None) --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ~/SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py onnx \\ --model_file ~/SGS_Models/onnx/ onnx_mobilenet_v2/ onnx_mobilenet_v2.onnx \\ --input_shapes 1,3,224,224 \\ --input_config ~/SGS_Models/onnx/ onnx_mobilenet_v2/input_config.ini \\ --output_file ./onnx_mobilenet_v2_float.sim \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a --model_file : Onnx\u6a21\u578b\u6587\u4ef6\u7684\u8def\u5f84 --input_shapes : Onnx \u6a21\u578b\u8f93\u5165shape\uff0c \u591a\u8f93\u5165\u7528\u5192\u53f7( : )\u5206\u9694 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput config\u7684\u914d\u7f6e\u4fe1\u606f\u3002 --output_file : \u8f6c\u6362\u6a21\u578b\u7684\u8f93\u51fa\u8def\u5f84\u3002 \u53ef\u9009\u53c2\u6570\uff1a --input_arrays : Onnx\u6a21\u578b\u8f93\u5165\u7684\u8282\u70b9\u540d\u79f0\uff0c\u4f7f\u7528input\u7684\u540d\u5b57,\u591a\u8f93\u5165\u7528\u9017\u53f7( , )\u5206\u9694 --output_arrays : \u6a21\u578b\u8f93\u51fa\u7684\u8282\u70b9\u540d\u79f0\uff0c\u4f7f\u7528\u6700\u540elayer\u7684top\u540d\u5b57\uff0c\u5982\u6709\u591a\u4e2a\u8f93\u51fa\u8282\u70b9\uff0c\u8bf7\u7528\u9017\u53f7( , )\u5206\u9694 --output_pack_model_arrays : \u8f93\u51faTensors\u6570\u636e\u9ed8\u8ba4\u6392\u5e03\u4e3aNHWC,\u9ed8\u8ba4\u4e3aNone\uff1b\u652f\u6301\u4e24\u79cd\u6307\u5b9a\u8f93\u51fa\u6570\u636e\u6392\u5e03\u4e3aNCHW\u7684\u8868\u8fbe\u65b9\u5f0f \uff081\uff09onnx\u6a21\u578b\u4f7f\u7528\u2018onnx\u2019\uff0c\u8f93\u51faTensors\u7684\u6570\u636e\u6392\u5e03\u4e3aNCHW\uff1b\uff082\uff09\u8bbe\u4e3a\u8f93\u51faTensors\u540d\u5b57\uff0c\u8be5\u8f93\u51faTensor\u7684\u6570\u636e\u6392\u5e03\u4e3aNCHW\u3002 \u6ce8\u610f 1.\u5982\u679c\u6a21\u578b\u4e2d\u5e26\u6709\u540e\u5904\u7406\u7684\u7b97\u5b50\uff0c\u8bf7\u5148\u53bb\u9664\uff0c\u76ee\u524d\u53ea\u652f\u6301\u4e3b\u5e72\u7f51\u7edc\u7684\u8f6c\u6362\u3002 2.Convert Tool\u8f6c\u6362\u5de5\u5177\u8f6c\u6362\u5b8c\u6210\u540e\u4f1a\u751f\u6210\u4e24\u4e2a\u6587\u4ef6\uff0c\u4f8b\u5982 --output_file \u6307\u5b9a\u4e3a ./resnet50_float.sim\uff0c\u8f6c\u6362\u5b8c\u6210\u540e\u4f1a\u751f\u6210Debug_resnet50_float.sim\u548cresnet50_float.sim\u3002\u5176\u4e2d\uff0cresnet50_float.sim\u662f\u771f\u6b63\u8f6c\u6362\u597d\u7684\u6587\u4ef6\uff0cDebug_resnet50_float.sim\u662f\u7ecf\u8fc7\u8f6c\u6362\u540e\u7684\u4e2d\u95f4\u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u672a\u7ecf\u8fc7\u4f18\u5316\uff0c\u4e0e\u539f\u6846\u67b6\u6a21\u578b\u62e5\u6709\u76f8\u540c\u7684\u7f51\u7edc\u7ed3\u6784\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f5c\u4e3a\u8f6c\u6362\u540e\u8c03\u8bd5\u4f7f\u7528\uff0c\u4f46\u662f\u65e0\u6cd5\u5728IPU SDK\u4e2d\u8fd0\u884c\u3002 2.2. input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e \u00b6 \u5de5\u5177\u7684\u53c2\u6570 --input_config \u9700\u8981\u6307\u5b9ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u6587\u4ef6input_config.ini\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u7684\u4e3b\u8981\u529f\u80fd\u6709\uff1a \u2022 \u914d\u7f6e\u7f51\u7edc\u6a21\u578b\u56fe\u7247\u524d\u5904\u7406\u7684\u5f52\u4e00\u5316\u4fe1\u606f\uff1b \u2022 \u914d\u7f6e\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u8f93\u51fa\u7684\u91cf\u5316\u5904\u7406\u4fe1\u606f\uff1b \u2022 \u914d\u7f6e\u7f51\u7edc\u6a21\u578b\u4e2d\u5377\u79ef\u7684\u91cf\u5316\u4fe1\u606f\u3002 \u914d\u7f6einput_config.ini\u6587\u4ef6\u4e3b\u8981\u662f\u4e3a\u4e86\u80fd\u5c06\u7f51\u7edc\u6a21\u578b\u5feb\u901f\u9002\u914d\u5230SigmaStar\u82af\u7247\u4e2d\u4f7f\u7528\u3002\u5728\u7f51\u7edc\u6a21\u578b\u7684\u8bad\u7ec3\u4e2d\uff0c\u4e0d\u540c\u7684\u6846\u67b6\u548c\u8bad\u7ec3\u6570\u636e\u96c6\u9700\u8981\u7f51\u7edc\u4f7f\u7528\u4e0d\u540c\u7684\u56fe\u7247\u5f52\u4e00\u5316\u65b9\u6cd5\uff0c\u800c\u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0c\u4e3a\u4e86\u80fd\u591f\u8ba9\u7f51\u7edc\u6a21\u578b\u7684\u9884\u6d4b\u66f4\u52a0\u51c6\u786e\uff0c\u9700\u8981\u8fd8\u539f\u8bad\u7ec3\u6a21\u578b\u65f6\u7684\u56fe\u7247\u524d\u5904\u7406\u5f52\u4e00\u5316\u65b9\u6cd5\u3002 \u5c06RGB\u4e09\u4e2a\u901a\u9053\u7684\u5747\u503c\u548cstd_value\u8bbe\u7f6e\u597d\u540e\uff0c\u5728\u8f6c\u6362\u6a21\u578b\u65f6\u4f1a\u5199\u5165\u5230\u6a21\u578b\u5185\u90e8\uff0c\u8fd9\u6837\u5728\u786c\u4ef6\u4e0a\u5b9e\u9645\u4f7f\u7528\u65f6\uff0c\u4ec5\u9700\u8981\u5c06\u56fe\u7247resize\u5230\u7f51\u7edc\u6a21\u578b\u7684\u8f93\u5165\u7684\u5c3a\u5bf8\uff0c\u56fe\u7247\u5f52\u4e00\u5316\u7684\u5de5\u4f5c\u5728\u7f51\u7edc\u5185\u90e8\u5b8c\u6210\u3002 \u53e6\u5916\uff0c\u5b9e\u9645\u786c\u4ef6\u4e0a\u4f7f\u7528\u65f6\u56fe\u7247\u8f93\u5165\u683c\u5f0f\u4e0e\u8bad\u7ec3\u65f6\u4f7f\u7528\u7684RGB\u53ef\u80fd\u6709\u5f88\u5927\u533a\u522b\uff0c\u6b63\u786e\u914d\u7f6e\u8fd9\u4e9b\u9009\u9879\u80fd\u4f7f\u8f6c\u6362\u597d\u7684\u6a21\u578b\u5185\u62e5\u6709\u8fd9\u4e9b\u914d\u7f6e\u4fe1\u606f\uff0c\u80fd\u591f\u76f4\u63a5\u5728SigmaStar\u7684\u786c\u4ef6\u4e0a\u90e8\u7f72\u3002 [INPUT_CONFIG] ;Names of the input arrays, comma-separated.image input must be the first. inputs = 'data'; ;Memory formats of input arrays, comma-separated. ;One of RGB, BGR, RGBA, BGRA, YUV_NV12, RAWDATA_S16_NHWC ;Each entry in the list should match an entry in inputs arrays. training_input_formats = BGR; input_formats = BGR; ;Indicate the input data need qauntize or not. ;Each entry in the list should match an entry in inputs arrays. quantizations = TRUE; ;mean_values parameter for image models, ;Each entry in the list match RGB channel of\uff08RGB,BGR,RGBA,BGRA,YUV_NV12\uff09 mean_red = 0.0; mean_green = 0.0; mean_blue = 0.0; ;std_value parameter for image models, std_value = 1.0; [OUTPUT_CONFIG] ;Names of the output arrays, comma-separated. outputs = 'prob'; ;Indicate the output data need deqauntize or not. ;Each entry in the list should match an entry in outputs arrays. dequantizations = TRUE; [CONV_CONFIG] ;input_format=ALL_INT16; tensor_arrays = 'conv1-1,conv2-1'; \u8be5\u6587\u4ef6\u4e3b\u8981\u5206\u4e3a\u4e09\u4e2a\u8bbe\u7f6e\u4fe1\u606f\uff1a [INPUT_CONFIG] [OUTPUT_CONFIG] [CONV_CONFIG] \u9488\u5bf9\u8fd9\u4e09\u4e2a\u8bbe\u7f6e\u4fe1\u606f\u5177\u4f53\u8bf4\u660e\uff1a \u6ce8\u610f String\u7c7b\u578b\u7684\u503c\uff0c\u5982tensor name\uff0c\u9700\u7528('')\u5c06\u5185\u5bb9\u5305\u542b\u8d77\u6765\uff0c\u4f8b\u5982outputs='detectionBoxes,detectionClasses,detectionScores,numDetections'; 2.2.1 INPUT_CONFIG \u00b6 inputs : \u7f51\u7edc\u8f93\u5165Tensor\u7684name\uff0c\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u8bf7\u7528\u9017\u53f7( , )\u5206\u9694\u3002\u6a21\u578b\u8f93\u5165Tensor\u987a\u5e8f\u4e0e inputs \u7684\u914d\u7f6e\u987a\u5e8f\u4e00\u81f4\u3002\u6240\u6709\u8f93\u5165name\u7684\u957f\u5ea6\u4e0d\u80fd\u8d85\u8fc71024\u4e2a\u5b57\u7b26\u3002 training_input_formats : \u7f51\u7edc\u8bad\u7ec3\u65f6\u7684\u56fe\u7247\u683c\u5f0f\uff0c\u6570\u91cf\u548c\u987a\u5e8f\u4e0einputs\u4e00\u4e00\u5bf9\u5e94\uff0c\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u3002\u8fd9\u4e9b\u683c\u5f0f\u5305\u62ecRGB\uff0cBGR\uff0cRAWDATA_S16_NHWC(\u82e5 training_input_formats \u8bbe\u7f6e\u4e3a RAWDATA_S16_NHWC ,\u5219 input_formats \u4e5f\u5fc5\u987b\u8bbe\u7f6e\u4e3a RAWDATA_S16_NHWC ) \u5176\u4e2d\u4e4b\u4e00\u3002training_input_formats\u53ef\u4ee5\u548cinput_formats \u4e0d\u4e00\u6837\u3002\u4f8b\u5982\u5728\u5728SigmaStar\u5f00\u53d1\u677f\u4e0a\uff0cinput_formats\u662fYUV_NV12\uff0c\u4f46\u662ftraining input formats \u662fRGB\u3002 input_formats : \u7f51\u7edc\u6a21\u578b\u5728SigmaStar\u82af\u7247\u4e0a\u8fd0\u884c\u7684\u56fe\u7247\u8f93\u5165\u683c\u5f0f\uff0c\u6570\u91cf\u548c\u987a\u5e8f\u4e0einputs\u4e00\u4e00\u5bf9\u5e94\uff0c\u9017\u53f7( , )\u5206\u9694\u3002 \u8fd9\u4e9b\u683c\u5f0f\u5305\u62ec\uff1a RGB BGR RGBA BGRA YUV_NV12 RAWDATA_S16_NHWC \u6ce8\u610f\uff1a * training_input_formats \u548c input_formats \u4e0d\u80fd\u914d\u7f6e\u4e3a\u5982\u4e0b\u60c5\u51b5\uff1a training_input_formats=RGB; input_formats=BGR; \u6216\u8005 training_input_formats=BGR; input_formats=RGB; * \u7070\u5ea6\u56fe\u7247\u8bf7\u6309\u5982\u4e0b\u65b9\u5f0f\u914d\u7f6e\uff1a training_input_formats=RGB; input_formats=GRAY; \u5177\u4f53\u8be6\u89c1 9.1 \u7070\u5ea6\u6a21\u578b\u8f6c\u6362\u8981\u70b9 * \u914d\u7f6e RAWDATA_S16_NHWC \u65f6\uff0c mean_red \u3001 mean_green \u3001 mean_blue \u548c std_value \u4e0d\u8981\u914d\u7f6e\uff0c\u5177\u4f53\u8be6\u89c1 9.2 RAWDATA_S16_NHWC\u6a21\u578b\u8f6c\u6362\u8981\u70b9 quantizations : \u7528\u6765\u6807\u8bc6\u6240\u6709\u8f93\u5165Tensor\u7684\u6570\u636e\u662f\u5426\u9700\u8981\u505a\u91cf\u5316\uff0cTRUE\u6216\u8005FALSE\uff0c\u9ed8\u8ba4\u503c\u4e3aTRUE, \u6570\u91cf\u7b49\u4e8einputs\u4e2a\u6570\u3002\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 mean_red / mean_green / mean_blue : \u7f51\u7edc\u8bad\u7ec3\u9636\u6bb5\uff0c\u4e00\u822c\u4f1a\u5bf9\u56fe\u7247\u505a\u524d\u5904\u7406\uff0c\u5bf9\u4e8eRGB\u901a\u9053\u7684\u56fe\u7247\uff0c\u4f7f\u7528\u5982\u4e0b\u516c\u5f0f\u5bf9\u56fe\u7247\u8fdb\u884c\u9884\u5904\u7406\uff1a (RGB - [mean_red, mean_green, mean_green])/std_value mean_red / mean_green / mean_blue \u5c31\u662f\u76f8\u5e94\u901a\u9053\u4e0a\u7684mean\u503c\u3002\u5982\u679c\u8fd9\u4e2a\u7f51\u7edc\u6ca1\u6709\u505a\u4efb\u4f55\u5f52\u4e00\u5316\u5904\u7406\uff0c\u8fd9\u4e2a\u503c\u8bbe\u4e3a0\u5373\u53ef\u3002\u6bcf\u4e2amean\u6570\u91cf\u7b49\u4e8einputs \u4e2a\u6570\u3002\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 std_value : \u5982\u4e0a\u516c\u5f0f\uff0c\u5982\u679c\u6ca1\u6709\u505a\u4efb\u4f55\u5f52\u4e00\u5316\u5904\u7406\uff0c\u8fd9\u4e2a\u503c\u8bbe\u4e3a1\u5373\u53ef\u3002\u5982\u679c\u6bcf\u4e2a\u901a\u9053\u90fd\u6709\u5bf9\u5e94\u7684std_value\u503c\uff0c\u4ee5\u82f1\u6587\u5192\u53f7( : )\u5206\u9694\uff0c\u987a\u5e8f\u4e3aRGB\u3002\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 yuv420_h_pitch_alignment \uff1a\u7528\u6765\u6807\u8bc6YUV\u6570\u636e\u4f5c\u4e3a\u7f51\u7edc\u8f93\u5165\u65f6H\u65b9\u5411\u5bf9\u9f50\u7684\u6570\u91cf\uff0c\u9ed8\u8ba4\u4e3a16\u3002 yuv420_v_pitch_alignment \uff1a\u7528\u6765\u6807\u8bc6YUV\u6570\u636e\u4f5c\u4e3a\u7f51\u7edc\u8f93\u5165\u65f6V\u65b9\u5411\u5bf9\u9f50\u7684\u6570\u91cf\uff0c\u9ed8\u8ba4\u4e3a2\u3002 xrgb_h_pitch_alignment \uff1a\u7528\u6765\u6807\u8bc6XRGB\u6570\u636e\u4f5c\u4e3a\u7f51\u7edc\u8f93\u5165\u65f6H\u65b9\u5411\u5bf9\u9f50\u7684\u6570\u91cf\uff0c\u9ed8\u8ba4\u4e3a16\u3002 \u6ce8\u610f \u4ee5\u4e0a\u4e09\u4e2a\u914d\u7f6e\u53ea\u80fd\u914d\u7f6e\u9ed8\u8ba4\u503c\u7684\u6574\u6570\u500d\u3002 \u4f8b\u5982\uff1ayuv420_h_pitch_alignment=32; 2.2.2 OUTPUT_CONFIG \u00b6 outputs : \u7f51\u7edc\u8f93\u51faTensor\u7684name(\u53ef\u7528Netron\u5de5\u5177\u6253\u5f00\u6a21\u578b\u67e5\u770b)\uff0c\u5982\u679c\u6709\u591a\u4e2a\u8f93\u51faTensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u3002\u8f6c\u6362\u5e26\u540e\u5904\u7406\u7f51\u7edc\u65f6\uff0cBackbone\u7f51\u7edc\u7684outputs\u4e0e\u5b8c\u6574\u7f51\u7edcoutputs\u7684\u540d\u79f0\u4e0d\u540c\uff0c\u5176\u4f59\u8bbe\u7f6e\u5e94\u5b8c\u5168\u4e00\u81f4\u3002\u6a21\u578b\u8f93\u51faTensor\u987a\u5e8f\u4e0e outputs \u7684\u914d\u7f6e\u987a\u5e8f\u4e00\u81f4\u3002\u6240\u6709\u8f93\u51faname\u7684\u957f\u5ea6\u4e0d\u80fd\u8d85\u8fc71024\u4e2a\u5b57\u7b26\u3002 dequantizations : \u7528\u6765\u6807\u8bc6\u6240\u6709\u8f93\u51faTensor\u7684\u6570\u636e\u662f\u5426\u9700\u8981\u505a\u53cd\u91cf\u5316\uff0cTRUE\u6216\u8005FALSE\uff0c\u9ed8\u8ba4\u503c\u4e3aTRUE,\u6570\u91cf\u7b49\u4e8eoutputs\u3002\u5982\u679c\u6709\u591a\u4e2a\u8f93\u51faTensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002\u8be5\u9009\u9879\u4ec5\u5728\u677f\u4e0a\u8fd0\u884c\u65f6\u751f\u6548\u3002 output_formats : \u7528\u6765\u6807\u8bc6\u8f93\u51faTensor\u7684\u6570\u636e\u6392\u5e03\u683c\u5f0f\uff0cNCHW\u6216\u8005NHWC\uff0c\u6570\u91cf\u7b49\u4e8eoutputs\u4e2a\u6570\uff0c\u6a21\u578b\u8f93\u51faTensor\u987a\u5e8f\u4e0e output_formats \u7684\u914d\u7f6e\u987a\u5e8f\u4e00\u81f4\u3002\u5982\u679c\u6709\u591a\u4e2a\u8f93\u51faTensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7\uff08,\uff09\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002NCHW\u8868\u793a\u5bf9\u5e94\u987a\u5e8f\u7684outputTensor\u6309NCHW\u7684\u6570\u636e\u683c\u5f0f\u6392\u5e03\uff08\u4e0e\u539f\u6a21\u578b\u76f8\u540c\uff09\uff1bNHWC\u8868\u793a\u5bf9\u5e94\u987a\u5e8f\u7684outputTensor\u6309NHWC\u7684\u683c\u5f0f\u6392\u5e03\uff08\u9ed8\u8ba4\u683c\u5f0f\uff09\u3002 \u6ce8\u610f \uff081\uff09\u5982\u679c\u662f\u591a\u8f93\u51fa\u6a21\u578b\uff0c\u82e5\u4ec5\u9700\u6307\u5b9a\u90e8\u5206\u8f93\u51fa\u4e3aNCHW\uff0c\u5219\u6309\u5e8f\u8bbe\u7f6e\u53c2\u6570\uff0c\u65e0\u9700\u8f6c\u6362\u7684\u7528None\u8868\u793a\uff0c\u5982\uff1acaffe\uff0cNone,caffe\uff1b\u5f53\u4f7f\u7528\u8f93\u51faTensors\u540d\u5b57\u8fdb\u884c\u8bbe\u7f6e\u65f6\uff0c\u82e5\u4ec5\u6307\u5b9a\u90e8\u5206\u8f93\u51fa\u4e3aNCHW\uff0c\u5219\u4ec5\u7ed9\u51fa\u9700\u8981\u8f6c\u6362\u7684tensor name\u5373\u53ef\uff0c\u5982\uff1aoutput0\uff0coutput2\u3002 \uff082\uff09\u82e5\u914d\u7f6e\u4e86output_pack_model_arrays:\u53c2\u6570\uff0c\u5c06\u81ea\u52a8\u5728ini\u4e2d\u586b\u5145output_formats\u7684\u4fe1\u606f\u3002 \uff083\uff09\u5982\u679c\u60f3\u6307\u5b9a\u8f93\u51fatensor\u7684\u6570\u636e\u6392\u5e03\uff0c\u9664\u652f\u6301\u914d\u7f6eoutput_pack_model_arrays:\u53c2\u6570\u7684\u65b9\u5f0f\u5916\uff0c\u8fd8\u53ef\u652f\u6301\u901a\u8fc7\u5728ini\u4e2d\u914d\u7f6e[OUTPUT_CONFIG]\u7684output_formats\u4fe1\u606f\u6765\u6307\u5b9a\u8f93\u51fatensor\u7684\u6570\u636e\u6392\u5e03\uff0c\u4f7f\u7528NCHW\uff0cNHWC\u6765\u8fdb\u884c\u6307\u5b9a\uff0c\u5982\uff1aoutput_formats = NHWC,NCHW,NHWC\u3002 2.2.3 CONV_CONFIG \u00b6 input_format : \u6307\u5b9a\u7f51\u7edc\u4e2d\u6240\u6709\u5377\u79ef\u7684\u91cf\u5316\u65b9\u5f0f\uff0c\u9ed8\u8ba4L5\uff0c\u53ef\u9009\u65b9\u6848ALL_UINT8\uff0cALL_INT16\uff0c CONV2D_INT16\uff0cDEPTHWISE_INT16\u3002 ALL_UINT8 : \u6307\u5b9a\u6240\u6709\u5377\u79ef\u6309\u7167UINT8\u91cf\u5316\u3002 ALL_INT16 : \u6307\u5b9a\u6240\u6709\u5377\u79ef\u6309\u7167INT16\u91cf\u5316\u3002 CONV2D_INT16 : \u53ea\u6307\u5b9a\u6240\u6709\u666e\u901a\u5377\u79ef\u6309\u7167INT16\u91cf\u5316\u3002 DEPTHWISE_INT16 : \u53ea\u6307\u5b9a\u6240\u6709Depthwise \u5377\u79ef\u6309\u7167INT16\u91cf\u5316\u3002 \u5728 UINT8 \u6a21\u5f0f \u4e0b\uff0c\u5377\u79ef\u8fd0\u884c\u6240\u5360\u5e26\u5bbd\u5c0f\uff0c\u8fd0\u884c\u901f\u5ea6\u5feb\uff1b\u5728 INT16\u6a21\u5f0f \u4e0b\uff0c\u53ef\u4ee5\u6781\u5927\u7684\u63d0\u9ad8\u5377\u79ef\u7684\u7cbe\u5ea6\uff0c\u4f46\u662f\u8fd0\u884c\u7684\u901f\u5ea6\u4f1a\u6709\u5f71\u54cd\u3002 tensor_arrays : \u6307\u5b9a\u7f51\u7edc\u4e2d\u67d0\u4e9b\u5c42\u7684\u5377\u79ef\u91cf\u5316\u65b9\u5f0f\u3002\u6574\u4e2a\u7f51\u7edc\u5377\u79ef\u90fd\u91c7\u7528\u9ed8\u8ba4\u7684UINT8 \uff0c\u4f46\u662f\u67d0\u4e9b\u5377\u79ef\u5c42\u9700\u8981\u66f4\u9ad8\u7684\u7cbe\u5ea6\uff0c\u8fd9\u65f6\u76f4\u63a5\u586b\u5199\u90a3\u4e9b\u5377\u79ef\u5c42\u7684\u7b2c\u4e00\u4e2a\u8f93\u5165\u7684 input id name\u5373\u53ef\u3002\u591a\u5c42\u65f6\uff0cname\u4ee5\u9017\u53f7( , )\u5206\u9694\u3002 \u6ce8\u610f \u5377\u79ef\u7b2c\u4e00\u4e2a\u8f93\u5165\u7684input id\u540d\u5b57\u53ef\u901a\u8fc7netron\u5de5\u5177\u67e5\u770b\u3002\u6307\u5b9a\u91cf\u5316\u65f6\uff0c\u7f51\u7edc\u4e2d\u7684\u7b2c\u4e00\u5c42\u5377\u79ef\u4e0d\u751f\u6548\u3002 2.2.4 OPTIMIZE_CONFIG \u00b6 skip_concatenation : \u7f51\u7edc\u4e2d\u7684Concatenation\u5c42\uff0c\u5982\u679c\u53ea\u9488\u5bf9\u6700\u540e\u4e00\u4e2a\u7ef4\u5ea6\u5408\u5e76\uff0c\u4f1a\u8d70\u8fdb\u8be5\u4f18\u5316\u4e2d\u3002Fixed\u6a21\u578b\u4f1a\u5c06Concatenation\u5c42\u8f6c\u6362\u4e3askip_concatenation\uff0cskip_concatenation\u5c42\u4f1a\u5927\u5e45\u51cf\u5c0f\u8fd0\u884c\u65f6\u95f4\u3002 2.2.5 \u8f93\u5165\u8f93\u51fa\u914d\u7f6e\u603b\u7ed3 \u00b6 training_input_formats input_formats \u677f\u4e0a\u8fd0\u884c\u65f6\u6570\u636e\u5bf9\u9f50\u65b9\u5f0f RGB/BGR RGB/BGR \u4e0d\u7528\u5bf9\u9f50 RGB/BGR RGBA/BGRA W = ALIGN_UP(W * 4, xrgb_h_pitch_alignment ) / 4 RGB/BGR YUV_NV12/GRAY H = ALIGN_UP(H, yuv420_v_pitch_alignment ) W = ALIGN_UP(W, yuv420_h_pitch_alignment ) RAWDATA_S16_NHWC RAWDATA_S16_NHWC \u6700\u540e1\u4e2a\u7ef4\u5ea6 = ALIGN_UP(\u6700\u540e1\u4e2a\u7ef4\u5ea6, 8 ) \u6a21\u578b\u8f93\u51fa\u662fINT16\uff0c\u5982\u679c\u914d\u7f6e dequantizations \u4e3aTRUE\uff0c\u5728\u677f\u7aef\u8fd0\u884c\u65f6\u4f1a\u8f6c\u6362\u6210float32\u3002 \u8f93\u51fa\u7684\u6570\u636e\u5bf9\u9f50\u65b9\u6cd5\u4e3a\uff1a\u6700\u540e1\u4e2a\u7ef4\u5ea6 = ALIGN_UP(\u6700\u540e1\u4e2a\u7ef4\u5ea6, 8 )\u3002 \u5177\u4f53\u8be6\u89c15.2.1\u8282\u53bb\u9664\u65e0\u7528\u6570\u636e\u3002","title":"Convert"},{"location":"module/User_Guide/IPU100/Convert.html#21","text":"Convert Tool\u5de5\u5177\u7684\u4f4d\u7f6e\u5728 SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py \u3002 \u76ee\u524dConvert Tool\u652f\u6301\u4ecetensorflow_graphdef\uff0ctensorflow_savemodel\uff0ckeras\uff0ctflite\uff0ccaffe\uff0connx \u516d\u79cd\u6846\u67b6\u6a21\u578b\u8f6c\u6362\u4e3aSGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u3002 \u4f7f\u7528\u524d\u5148\u5728SGS_IPU_SDK\u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK source cfg_env.sh \u4e0b\u9762\u662fConvert Tool\u76ee\u524d\u652f\u6301\u7684platform information\uff1a python3 ConvertTool.py -h usage : ConvertTool.py [-h] {tensorflow_graphdef,tensorflow_savemodel,keras,tflite,caffe,onnx} ... Convert Tool positional arguments : {tensorflow_graphdef,tensorflow_savemodel,keras,tflite,caffe,onnx} platform info tensorflow_graphdef tensorflow graphdef commands tensorflow_savemodel tensorflow save_model commands keras keras commands tflite tflite commands caffe caffe commands onnx onnx commands optional arguments : -h, --help show this help message and exit \u5982\u679c\u60f3\u8fdb\u4e00\u6b65\u770b\u770b\u5404\u4e2a\u5e73\u53f0\u8f6c\u6362\u6240\u9700\u8981\u7684\u53c2\u6570\u4fe1\u606f\uff0c\u53ef\u4ee5\u6267\u884c python3 ConvertTool.py {platform} \u2013h \uff0c\u5404\u4e2a\u5e73\u53f0\u5177\u4f53\u4fe1\u606f\u548c\u67e5\u770b\u6307\u4ee4\u5982\u4e0b\uff1a","title":"2.1. \u4f7f\u7528\u65b9\u6cd5"},{"location":"module/User_Guide/IPU100/Convert.html#211-tensorflow_graphdef","text":"python3 ConvertTool.py tensorflow_graphdef -h usage : ConvertTool.py tensorflow_graphdef [-h] --graph_def_file GRAPH_DEF_FILE --input_arrays INPUT_ARRAYS (optional) --output_arrays OUTPUT_ARRAYS (optional) --input_config INPUT_CONFIG --output_file OUTPUT_FILE --input_shapes INPUT_SHAPES (optional) optional arguments : -h, --help show this help message and exit. --graph_def_file GRAPH_DEF_FILE Full filepath of file containing frozen GraphDef. --input_arrays INPUT_ARRAYS Names of the input arrays, comma-separated. --output_arrays OUTPUT_ARRAYS Names of the output arrays, comma-separated. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth. Default : None \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ConvertTool.py tensorflow_graphdef \\ --graph_def_file ~/SGS_Models/tensorflow/resnet_v2_50/resnet_v2_50.pb \\ --output_file ./resnet_v2_float.sim \\ --input_shapes 1,299,299,3 \\ --input_config ~/SGS_Models/tensorflow/resnet_v2_50/input_config.ini \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a --graph_def_file : \u8f93\u5165\u7684\u6a21\u578b\u4e3aTensorFlow frozen\u7684graphdef\u7684pb\u683c\u5f0f\u6587\u4ef6\u8def\u5f84\u3002 --output_file : \u8f93\u51fa\u7684\u6a21\u578b\u6587\u4ef6\uff0cflatbuffer\u683c\u5f0f\uff0csim\u540e\u7f00\u6587\u4ef6\u3002 --input_shapes : \u7f51\u7edc\u8f93\u5165Tensor\u7684shape\uff0c\u683c\u5f0f\u4e3aNHWC\uff0cdimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0cshape\u4e2a\u6570\u548cinputs\u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 \u53ef\u9009\u53c2\u6570\uff1a --input_arrays : \u7f51\u7edc\u8f93\u5165Tensor\u7684\u540d\u5b57\uff0c\u4ee5\u5b57\u7b26\u4e32\u7c7b\u578b\u6307\u5b9a\uff0c\u591a\u4e2ainputs\u7684\u8bdd\uff0c\u4e2d\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0c\u5982\uff1a--input_arrays='Input1','Input2'\u3002 --output_arrays : \u7f51\u7edc\u8f93\u51faTensor\u7684\u540d\u5b57\uff0c\u4ee5\u5b57\u7b26\u4e32\u7c7b\u578b\u6307\u5b9a\uff0c\u591a\u4e2aoutputs\u7684\u8bdd\uff0c\u4e2d\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\u3002","title":"2.1.1 tensorflow_graphdef \u6846\u67b6\u6307\u4ee4"},{"location":"module/User_Guide/IPU100/Convert.html#212-tensorflow_savemodel","text":"python3 ConvertTool.py tensorflow_savemodel -h usage : ConvertTool.py tensorflow_savemodel [-h] --saved_model_dir SAVED_MODEL_DIR --input_config INPUT_CONFIG --output_file OUTPUT_FILE --output_arrays OUTPUT_ARRAYS (optional) --input_arrays INPUT_ARRAYS (optional) --input_shapes INPUT_SHAPES (optional) --tag_set TAG_SET (optional) --signature_key SIGNATURE_KEY (optional) optional arguments : -h, --help show this help message and exit. --saved_model_dir SAVED_MODEL_DIR SavedModel directory to convert. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. --debug Run gdb in Debug mode. --input_arrays INPUT_ARRAYS Names of the input arrays, comma-separated. Default : None. --output_arrays OUTPUT_ARRAYS Names of the output arrays, comma-separated. Default : None. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth Default : None. --tag_set TAG_SET Set of tags identifying the MetaGraphDef within the SavedModel to analyze. All tags in the tag set must be present. Default : None. --signature_key SIGNATURE_KEY Key identifying SignatureDef containing inputs and outputs. Default : DEFAULT_SERVING_SIGNATURE_DEF_KEY \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ConvertTool.py tensorflow_savemodel \\ --saved_model_dir ~/test/tensorflow_model/save_model \\ --input_config ~/test/tensorflow_model/input_config.ini \\ --output_file ~/test/tensorflow_model/save_model_float.sim \\ --tag_set test_saved_model \\ --signature_key test_signature \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a --saved_model_dir : \u8f93\u5165\u7684\u6a21\u578b\u4e3aTensorFlow saved_model.builder\u751f\u6210\u7684\u6587\u4ef6\u8def\u5f84\u3002 --output_file : \u8f93\u51fa\u7684\u6a21\u578b\u6587\u4ef6\uff0cflatbuffer\u683c\u5f0f\uff0csim\u540e\u7f00\u6587\u4ef6\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 \u53ef\u9009\u53c2\u6570\uff1a --input_arrays : \u7f51\u7edc\u8f93\u5165Tensor\u7684\u540d\u5b57\uff0c\u4ee5\u5b57\u7b26\u4e32\u7c7b\u578b\u6307\u5b9a\uff0c\u591a\u4e2ainputs\u7684\u8bdd\uff0c\u4e2d\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0c\u5982\uff1a--input_arrays='Input1','Input2'\uff0c\u82e5\u4e0d\u6307\u5b9a\u5219\u4ecesaved_model_dir\u4e2d\u83b7\u53d6\u3002 --output_arrays : \u7f51\u7edc\u8f93\u51faTensor\u7684\u540d\u5b57\uff0c\u4ee5\u5b57\u7b26\u4e32\u7c7b\u578b\u6307\u5b9a\uff0c\u591a\u4e2aoutputs\u7684\u8bdd\uff0c\u4e2d\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\u3002\u82e5\u4e0d\u6307\u5b9a\u5219\u4ecesaved_model_dir\u4e2d\u83b7\u53d6\u3002 --input_shapes : \u7f51\u7edc\u8f93\u5165Tensor\u7684shape\uff0c\u683c\u5f0f\u4e3aNHWC\uff0cdimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0cshape\u4e2a\u6570\u548cinputs \u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002\u82e5\u4e0d\u6307\u5b9a\u5219\u4ecesaved_model_dir\u4e2d\u83b7\u53d6\u3002 --tag_set : \u9700\u8981\u548csave model\u65f6\u6240\u6307\u5b9a\u7684tag\u5339\u914d\uff0c\u5982\u679c\u4e0d\u505a\u8bbe\u5b9a\uff0c\u5219\u9ed8\u8ba4\u4e3a\u2018serve\u2019\u3002 --signature_key : \u9700\u8981\u548csave model\u65f6\u6240\u6307\u5b9a\u7684signature\u5339\u914d\u3002\u5982\u679c\u4e0d\u505a\u8bbe\u5b9a\uff0c\u5219\u9ed8\u8ba4\u4e3a \u2018DEFAULT_SERVING_SIGNATURE_DEF_KEY\u2019","title":"2.1.2 tensorflow_savemodel \u6846\u67b6\u6307\u4ee4"},{"location":"module/User_Guide/IPU100/Convert.html#213-keras","text":"python3 ConvertTool.py keras -h usage : ConvertTool.py keras [-h] --model_file MODEL_FILE --input_config INPUT_CONFIG --output_file OUTPUT_FILE --input_arrays INPUT_ARRAYS (optional) --output_arrays OUTPUT_ARRAYS (optional) --input_shapes INPUT_SHAPES (optional) --custom_objects CUSTOM_OBJECTS (optional) optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of HDF5 file containing the tf.keras model. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. --input_arrays INPUT_ARRAYS Names of the input arrays, comma-separated. Default : None. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth. Default : None. --output_arrays OUTPUT_ARRAYS Names of the output arrays, comma-separated. Default : None. --custom_objects CUSTOM_OBJECTS Dict mapping names (strings) to custom classes or functions to be considered during model deserialization. Default : None. \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ConvertTool.py keras \\ --model_file ./TEST_h5/resnet50/resnet50.h5 \\ --input_config ./TEST_h5/resnet50/input_config.ini \\ --output_file ./TEST_h5/resnet50/resnet50_float.sim \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a --model_file : \u8f93\u5165\u7684\u6a21\u578b\u4e3akeras h5\u683c\u5f0f\u6587\u4ef6\u8def\u5f84\u3002 --output_file : \u8f93\u51fa\u7684\u6a21\u578b\u6587\u4ef6\uff0cflatbuffer\u683c\u5f0f\uff0csim\u540e\u7f00\u6587\u4ef6\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 \u53ef\u9009\u53c2\u6570\uff1a --input_arrays : \u7f51\u7edc\u8f93\u5165Tensor\u7684\u540d\u5b57\uff0c\u4ee5\u5b57\u7b26\u4e32\u7c7b\u578b\u6307\u5b9a\uff0c\u591a\u4e2ainputs\u7684\u8bdd\uff0c\u4e2d\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0c\u5982\uff1a--input_arrays='Input1','Input2'\u3002 --output_arrays : \u7f51\u7edc\u8f93\u51faTensor\u7684\u540d\u5b57\uff0c\u4ee5\u5b57\u7b26\u4e32\u7c7b\u578b\u6307\u5b9a\uff0c\u591a\u4e2aoutputs\u7684\u8bdd\uff0c\u4e2d\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\u3002 --input_shapes : \u7f51\u7edc\u8f93\u5165Tensor\u7684shape\uff0c\u683c\u5f0f\u4e3aNHWC\uff0cdimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0cshape\u4e2a\u6570\u548cinputs \u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002 --custom_objects : Dict mapping names (strings) to custom classes or functions to be considered during model deserialization (default None).","title":"2.1.3 keras\u6846\u67b6\u6307\u4ee4"},{"location":"module/User_Guide/IPU100/Convert.html#214-tflite","text":"python3 ConvertTool.py tflite -h usage : ConvertTool.py tflite [-h] --model_file MODEL_FILE --input_config INPUT_CONFIG --output_file OUTPUT_FILE optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of tflite file containing the tflite model. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ConvertTool.py tflite \\ --model_file ~/test/tensorflow_model/Debug_save_model_float.tflite \\ --input_config ~/test/tensorflow_model/input_config.ini \\ --output_file ~/test/tensorflow_model/save_model_float.sim \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a --model_file : \u8f93\u5165\u7684\u6a21\u578b\u4e3atflite\u683c\u5f0f\u6587\u4ef6\u8def\u5f84(\u5fc5\u987b\u4e3a\u975e\u91cf\u5316\u6a21\u578b)\u3002 --output_file : \u8f93\u51fa\u7684\u6a21\u578b\u6587\u4ef6\uff0cflatbuffer\u683c\u5f0f\uff0csim\u540e\u7f00\u6587\u4ef6\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002","title":"2.1.4 tflite\u6846\u67b6\u6307\u4ee4"},{"location":"module/User_Guide/IPU100/Convert.html#215-caffe","text":"python3 ConvertTool.py caffe -h usage : ConvertTool.py caffe [-h] --model_file MODEL_FILE --weight_file WEIGHT_FILE --input_config INPUT_CONFIG --output_file OUTPUT_FILE --input_arrays INPUT_ARRAYS (optional) --output_arrays OUTPUT_ARRAYS (optional) optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of tflite file containing the caffe model. --weight_file WEIGHT_FILE Full filepath of tflite file containing the caffe weight. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. --input_arrays INPUT_ARRAYS Names of the input arrays, comma-separated. Default : None. --output_arrays OUTPUT_ARRAYS Names of the output arrays, comma-separated. Default : None. \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ConvertTool.py caffe \\ --model_file ~/SGS_Models/caffe/caffe_resnet50_conv/caffe_resnet50_conv.prototxt \\ --weight_file ~/SGS_Models/caffe/caffe_resnet50_conv/caffe_resnet50_conv.caffemodel \\ --input_config ~/SGS_Models/caffe/caffe_resnet50_conv/input_config.ini \\ --output_file ./resnet50.sim \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a --model_file : Caffe\u6a21\u578b\u6587\u4ef6\u7684\u8def\u5f84 --weight_file : Caffe\u6743\u91cd\u6587\u4ef6\u7684\u8def\u5f84 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput config\u7684\u914d\u7f6e\u4fe1\u606f\u3002 --output_file : \u8f6c\u6362\u6a21\u578b\u7684\u8f93\u51fa\u8def\u5f84\u3002 \u53ef\u9009\u53c2\u6570\uff1a --input_arrays : Caffe\u6a21\u578b\u8f93\u5165\u7684\u8282\u70b9\u540d\u79f0\uff0c\u4f7f\u7528input\u7684\u540d\u5b57\uff0c\u5982\u6709\u591a\u4e2a\u8f93\u51fa\u8282\u70b9\uff0c\u8bf7\u7528\u9017\u53f7( , )\u5206\u9694 --output_arrays : \u6a21\u578b\u8f93\u51fa\u7684\u8282\u70b9\u540d\u79f0\uff0c\u4f7f\u7528\u6700\u540elayer\u7684top\u540d\u5b57\uff0c\u5982\u6709\u591a\u4e2a\u8f93\u51fa\u8282\u70b9\uff0c\u8bf7\u7528\u9017\u53f7( , )\u5206\u9694 --output_pack_model_arrays : \u8f93\u51faTensors\u6570\u636e\u9ed8\u8ba4\u6392\u5e03\u4e3aNHWC,\u9ed8\u8ba4\u4e3aNone\uff1b\u652f\u6301\u4e24\u79cd\u6307\u5b9a\u8f93\u51fa\u6570\u636e\u6392\u5e03\u4e3aNCHW\u7684\u8868\u8fbe\u65b9\u5f0f \uff081\uff09caffe\u6a21\u578b\u4f7f\u7528\u2018caffe\u2019\uff0c\u8f93\u51faTensors\u7684\u6570\u636e\u6392\u5e03\u4e3aNCHW\uff1b\uff082\uff09\u8bbe\u4e3a\u8f93\u51faTensors\u540d\u5b57\uff0c\u8be5\u8f93\u51faTensor\u7684\u6570\u636e\u6392\u5e03\u4e3aNCHW\u3002","title":"2.1.5 caffe\u6846\u67b6\u6307\u4ee4"},{"location":"module/User_Guide/IPU100/Convert.html#216-onnx","text":"python3 Path_to_SGS_IPU_SDK/Scripts/ConvertTool.py onnx -h usage : ConvertTool.py onnx [-h] --model_file MODEL_FILE --input_arrays INPUT_ARRAYS (optional) --input_shapes INPUT_SHAPES --output_arrays OUTPUT_ARRAYS (optional) --input_config INPUT_CONFIG --output_file OUTPUT_FILE optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of tflite file containing the onnx model. --input_arrays INPUT_ARRAYS Names of the input arrays, comma-separated. (default None). --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon-separated. For many models each shape takes the form N C H W (default None) --output_arrays OUTPUT_ARRAYS Names of the output arrays, comma-separated. (default None) --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ~/SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py onnx \\ --model_file ~/SGS_Models/onnx/ onnx_mobilenet_v2/ onnx_mobilenet_v2.onnx \\ --input_shapes 1,3,224,224 \\ --input_config ~/SGS_Models/onnx/ onnx_mobilenet_v2/input_config.ini \\ --output_file ./onnx_mobilenet_v2_float.sim \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a --model_file : Onnx\u6a21\u578b\u6587\u4ef6\u7684\u8def\u5f84 --input_shapes : Onnx \u6a21\u578b\u8f93\u5165shape\uff0c \u591a\u8f93\u5165\u7528\u5192\u53f7( : )\u5206\u9694 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput config\u7684\u914d\u7f6e\u4fe1\u606f\u3002 --output_file : \u8f6c\u6362\u6a21\u578b\u7684\u8f93\u51fa\u8def\u5f84\u3002 \u53ef\u9009\u53c2\u6570\uff1a --input_arrays : Onnx\u6a21\u578b\u8f93\u5165\u7684\u8282\u70b9\u540d\u79f0\uff0c\u4f7f\u7528input\u7684\u540d\u5b57,\u591a\u8f93\u5165\u7528\u9017\u53f7( , )\u5206\u9694 --output_arrays : \u6a21\u578b\u8f93\u51fa\u7684\u8282\u70b9\u540d\u79f0\uff0c\u4f7f\u7528\u6700\u540elayer\u7684top\u540d\u5b57\uff0c\u5982\u6709\u591a\u4e2a\u8f93\u51fa\u8282\u70b9\uff0c\u8bf7\u7528\u9017\u53f7( , )\u5206\u9694 --output_pack_model_arrays : \u8f93\u51faTensors\u6570\u636e\u9ed8\u8ba4\u6392\u5e03\u4e3aNHWC,\u9ed8\u8ba4\u4e3aNone\uff1b\u652f\u6301\u4e24\u79cd\u6307\u5b9a\u8f93\u51fa\u6570\u636e\u6392\u5e03\u4e3aNCHW\u7684\u8868\u8fbe\u65b9\u5f0f \uff081\uff09onnx\u6a21\u578b\u4f7f\u7528\u2018onnx\u2019\uff0c\u8f93\u51faTensors\u7684\u6570\u636e\u6392\u5e03\u4e3aNCHW\uff1b\uff082\uff09\u8bbe\u4e3a\u8f93\u51faTensors\u540d\u5b57\uff0c\u8be5\u8f93\u51faTensor\u7684\u6570\u636e\u6392\u5e03\u4e3aNCHW\u3002 \u6ce8\u610f 1.\u5982\u679c\u6a21\u578b\u4e2d\u5e26\u6709\u540e\u5904\u7406\u7684\u7b97\u5b50\uff0c\u8bf7\u5148\u53bb\u9664\uff0c\u76ee\u524d\u53ea\u652f\u6301\u4e3b\u5e72\u7f51\u7edc\u7684\u8f6c\u6362\u3002 2.Convert Tool\u8f6c\u6362\u5de5\u5177\u8f6c\u6362\u5b8c\u6210\u540e\u4f1a\u751f\u6210\u4e24\u4e2a\u6587\u4ef6\uff0c\u4f8b\u5982 --output_file \u6307\u5b9a\u4e3a ./resnet50_float.sim\uff0c\u8f6c\u6362\u5b8c\u6210\u540e\u4f1a\u751f\u6210Debug_resnet50_float.sim\u548cresnet50_float.sim\u3002\u5176\u4e2d\uff0cresnet50_float.sim\u662f\u771f\u6b63\u8f6c\u6362\u597d\u7684\u6587\u4ef6\uff0cDebug_resnet50_float.sim\u662f\u7ecf\u8fc7\u8f6c\u6362\u540e\u7684\u4e2d\u95f4\u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u672a\u7ecf\u8fc7\u4f18\u5316\uff0c\u4e0e\u539f\u6846\u67b6\u6a21\u578b\u62e5\u6709\u76f8\u540c\u7684\u7f51\u7edc\u7ed3\u6784\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f5c\u4e3a\u8f6c\u6362\u540e\u8c03\u8bd5\u4f7f\u7528\uff0c\u4f46\u662f\u65e0\u6cd5\u5728IPU SDK\u4e2d\u8fd0\u884c\u3002","title":"2.1.6 Onnx\u6846\u67b6\u6307\u4ee4"},{"location":"module/User_Guide/IPU100/Convert.html#22-input-config","text":"\u5de5\u5177\u7684\u53c2\u6570 --input_config \u9700\u8981\u6307\u5b9ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u6587\u4ef6input_config.ini\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u7684\u4e3b\u8981\u529f\u80fd\u6709\uff1a \u2022 \u914d\u7f6e\u7f51\u7edc\u6a21\u578b\u56fe\u7247\u524d\u5904\u7406\u7684\u5f52\u4e00\u5316\u4fe1\u606f\uff1b \u2022 \u914d\u7f6e\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u8f93\u51fa\u7684\u91cf\u5316\u5904\u7406\u4fe1\u606f\uff1b \u2022 \u914d\u7f6e\u7f51\u7edc\u6a21\u578b\u4e2d\u5377\u79ef\u7684\u91cf\u5316\u4fe1\u606f\u3002 \u914d\u7f6einput_config.ini\u6587\u4ef6\u4e3b\u8981\u662f\u4e3a\u4e86\u80fd\u5c06\u7f51\u7edc\u6a21\u578b\u5feb\u901f\u9002\u914d\u5230SigmaStar\u82af\u7247\u4e2d\u4f7f\u7528\u3002\u5728\u7f51\u7edc\u6a21\u578b\u7684\u8bad\u7ec3\u4e2d\uff0c\u4e0d\u540c\u7684\u6846\u67b6\u548c\u8bad\u7ec3\u6570\u636e\u96c6\u9700\u8981\u7f51\u7edc\u4f7f\u7528\u4e0d\u540c\u7684\u56fe\u7247\u5f52\u4e00\u5316\u65b9\u6cd5\uff0c\u800c\u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0c\u4e3a\u4e86\u80fd\u591f\u8ba9\u7f51\u7edc\u6a21\u578b\u7684\u9884\u6d4b\u66f4\u52a0\u51c6\u786e\uff0c\u9700\u8981\u8fd8\u539f\u8bad\u7ec3\u6a21\u578b\u65f6\u7684\u56fe\u7247\u524d\u5904\u7406\u5f52\u4e00\u5316\u65b9\u6cd5\u3002 \u5c06RGB\u4e09\u4e2a\u901a\u9053\u7684\u5747\u503c\u548cstd_value\u8bbe\u7f6e\u597d\u540e\uff0c\u5728\u8f6c\u6362\u6a21\u578b\u65f6\u4f1a\u5199\u5165\u5230\u6a21\u578b\u5185\u90e8\uff0c\u8fd9\u6837\u5728\u786c\u4ef6\u4e0a\u5b9e\u9645\u4f7f\u7528\u65f6\uff0c\u4ec5\u9700\u8981\u5c06\u56fe\u7247resize\u5230\u7f51\u7edc\u6a21\u578b\u7684\u8f93\u5165\u7684\u5c3a\u5bf8\uff0c\u56fe\u7247\u5f52\u4e00\u5316\u7684\u5de5\u4f5c\u5728\u7f51\u7edc\u5185\u90e8\u5b8c\u6210\u3002 \u53e6\u5916\uff0c\u5b9e\u9645\u786c\u4ef6\u4e0a\u4f7f\u7528\u65f6\u56fe\u7247\u8f93\u5165\u683c\u5f0f\u4e0e\u8bad\u7ec3\u65f6\u4f7f\u7528\u7684RGB\u53ef\u80fd\u6709\u5f88\u5927\u533a\u522b\uff0c\u6b63\u786e\u914d\u7f6e\u8fd9\u4e9b\u9009\u9879\u80fd\u4f7f\u8f6c\u6362\u597d\u7684\u6a21\u578b\u5185\u62e5\u6709\u8fd9\u4e9b\u914d\u7f6e\u4fe1\u606f\uff0c\u80fd\u591f\u76f4\u63a5\u5728SigmaStar\u7684\u786c\u4ef6\u4e0a\u90e8\u7f72\u3002 [INPUT_CONFIG] ;Names of the input arrays, comma-separated.image input must be the first. inputs = 'data'; ;Memory formats of input arrays, comma-separated. ;One of RGB, BGR, RGBA, BGRA, YUV_NV12, RAWDATA_S16_NHWC ;Each entry in the list should match an entry in inputs arrays. training_input_formats = BGR; input_formats = BGR; ;Indicate the input data need qauntize or not. ;Each entry in the list should match an entry in inputs arrays. quantizations = TRUE; ;mean_values parameter for image models, ;Each entry in the list match RGB channel of\uff08RGB,BGR,RGBA,BGRA,YUV_NV12\uff09 mean_red = 0.0; mean_green = 0.0; mean_blue = 0.0; ;std_value parameter for image models, std_value = 1.0; [OUTPUT_CONFIG] ;Names of the output arrays, comma-separated. outputs = 'prob'; ;Indicate the output data need deqauntize or not. ;Each entry in the list should match an entry in outputs arrays. dequantizations = TRUE; [CONV_CONFIG] ;input_format=ALL_INT16; tensor_arrays = 'conv1-1,conv2-1'; \u8be5\u6587\u4ef6\u4e3b\u8981\u5206\u4e3a\u4e09\u4e2a\u8bbe\u7f6e\u4fe1\u606f\uff1a [INPUT_CONFIG] [OUTPUT_CONFIG] [CONV_CONFIG] \u9488\u5bf9\u8fd9\u4e09\u4e2a\u8bbe\u7f6e\u4fe1\u606f\u5177\u4f53\u8bf4\u660e\uff1a \u6ce8\u610f String\u7c7b\u578b\u7684\u503c\uff0c\u5982tensor name\uff0c\u9700\u7528('')\u5c06\u5185\u5bb9\u5305\u542b\u8d77\u6765\uff0c\u4f8b\u5982outputs='detectionBoxes,detectionClasses,detectionScores,numDetections';","title":"2.2. input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e"},{"location":"module/User_Guide/IPU100/Convert.html#221-input_config","text":"inputs : \u7f51\u7edc\u8f93\u5165Tensor\u7684name\uff0c\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u8bf7\u7528\u9017\u53f7( , )\u5206\u9694\u3002\u6a21\u578b\u8f93\u5165Tensor\u987a\u5e8f\u4e0e inputs \u7684\u914d\u7f6e\u987a\u5e8f\u4e00\u81f4\u3002\u6240\u6709\u8f93\u5165name\u7684\u957f\u5ea6\u4e0d\u80fd\u8d85\u8fc71024\u4e2a\u5b57\u7b26\u3002 training_input_formats : \u7f51\u7edc\u8bad\u7ec3\u65f6\u7684\u56fe\u7247\u683c\u5f0f\uff0c\u6570\u91cf\u548c\u987a\u5e8f\u4e0einputs\u4e00\u4e00\u5bf9\u5e94\uff0c\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u3002\u8fd9\u4e9b\u683c\u5f0f\u5305\u62ecRGB\uff0cBGR\uff0cRAWDATA_S16_NHWC(\u82e5 training_input_formats \u8bbe\u7f6e\u4e3a RAWDATA_S16_NHWC ,\u5219 input_formats \u4e5f\u5fc5\u987b\u8bbe\u7f6e\u4e3a RAWDATA_S16_NHWC ) \u5176\u4e2d\u4e4b\u4e00\u3002training_input_formats\u53ef\u4ee5\u548cinput_formats \u4e0d\u4e00\u6837\u3002\u4f8b\u5982\u5728\u5728SigmaStar\u5f00\u53d1\u677f\u4e0a\uff0cinput_formats\u662fYUV_NV12\uff0c\u4f46\u662ftraining input formats \u662fRGB\u3002 input_formats : \u7f51\u7edc\u6a21\u578b\u5728SigmaStar\u82af\u7247\u4e0a\u8fd0\u884c\u7684\u56fe\u7247\u8f93\u5165\u683c\u5f0f\uff0c\u6570\u91cf\u548c\u987a\u5e8f\u4e0einputs\u4e00\u4e00\u5bf9\u5e94\uff0c\u9017\u53f7( , )\u5206\u9694\u3002 \u8fd9\u4e9b\u683c\u5f0f\u5305\u62ec\uff1a RGB BGR RGBA BGRA YUV_NV12 RAWDATA_S16_NHWC \u6ce8\u610f\uff1a * training_input_formats \u548c input_formats \u4e0d\u80fd\u914d\u7f6e\u4e3a\u5982\u4e0b\u60c5\u51b5\uff1a training_input_formats=RGB; input_formats=BGR; \u6216\u8005 training_input_formats=BGR; input_formats=RGB; * \u7070\u5ea6\u56fe\u7247\u8bf7\u6309\u5982\u4e0b\u65b9\u5f0f\u914d\u7f6e\uff1a training_input_formats=RGB; input_formats=GRAY; \u5177\u4f53\u8be6\u89c1 9.1 \u7070\u5ea6\u6a21\u578b\u8f6c\u6362\u8981\u70b9 * \u914d\u7f6e RAWDATA_S16_NHWC \u65f6\uff0c mean_red \u3001 mean_green \u3001 mean_blue \u548c std_value \u4e0d\u8981\u914d\u7f6e\uff0c\u5177\u4f53\u8be6\u89c1 9.2 RAWDATA_S16_NHWC\u6a21\u578b\u8f6c\u6362\u8981\u70b9 quantizations : \u7528\u6765\u6807\u8bc6\u6240\u6709\u8f93\u5165Tensor\u7684\u6570\u636e\u662f\u5426\u9700\u8981\u505a\u91cf\u5316\uff0cTRUE\u6216\u8005FALSE\uff0c\u9ed8\u8ba4\u503c\u4e3aTRUE, \u6570\u91cf\u7b49\u4e8einputs\u4e2a\u6570\u3002\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 mean_red / mean_green / mean_blue : \u7f51\u7edc\u8bad\u7ec3\u9636\u6bb5\uff0c\u4e00\u822c\u4f1a\u5bf9\u56fe\u7247\u505a\u524d\u5904\u7406\uff0c\u5bf9\u4e8eRGB\u901a\u9053\u7684\u56fe\u7247\uff0c\u4f7f\u7528\u5982\u4e0b\u516c\u5f0f\u5bf9\u56fe\u7247\u8fdb\u884c\u9884\u5904\u7406\uff1a (RGB - [mean_red, mean_green, mean_green])/std_value mean_red / mean_green / mean_blue \u5c31\u662f\u76f8\u5e94\u901a\u9053\u4e0a\u7684mean\u503c\u3002\u5982\u679c\u8fd9\u4e2a\u7f51\u7edc\u6ca1\u6709\u505a\u4efb\u4f55\u5f52\u4e00\u5316\u5904\u7406\uff0c\u8fd9\u4e2a\u503c\u8bbe\u4e3a0\u5373\u53ef\u3002\u6bcf\u4e2amean\u6570\u91cf\u7b49\u4e8einputs \u4e2a\u6570\u3002\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 std_value : \u5982\u4e0a\u516c\u5f0f\uff0c\u5982\u679c\u6ca1\u6709\u505a\u4efb\u4f55\u5f52\u4e00\u5316\u5904\u7406\uff0c\u8fd9\u4e2a\u503c\u8bbe\u4e3a1\u5373\u53ef\u3002\u5982\u679c\u6bcf\u4e2a\u901a\u9053\u90fd\u6709\u5bf9\u5e94\u7684std_value\u503c\uff0c\u4ee5\u82f1\u6587\u5192\u53f7( : )\u5206\u9694\uff0c\u987a\u5e8f\u4e3aRGB\u3002\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 yuv420_h_pitch_alignment \uff1a\u7528\u6765\u6807\u8bc6YUV\u6570\u636e\u4f5c\u4e3a\u7f51\u7edc\u8f93\u5165\u65f6H\u65b9\u5411\u5bf9\u9f50\u7684\u6570\u91cf\uff0c\u9ed8\u8ba4\u4e3a16\u3002 yuv420_v_pitch_alignment \uff1a\u7528\u6765\u6807\u8bc6YUV\u6570\u636e\u4f5c\u4e3a\u7f51\u7edc\u8f93\u5165\u65f6V\u65b9\u5411\u5bf9\u9f50\u7684\u6570\u91cf\uff0c\u9ed8\u8ba4\u4e3a2\u3002 xrgb_h_pitch_alignment \uff1a\u7528\u6765\u6807\u8bc6XRGB\u6570\u636e\u4f5c\u4e3a\u7f51\u7edc\u8f93\u5165\u65f6H\u65b9\u5411\u5bf9\u9f50\u7684\u6570\u91cf\uff0c\u9ed8\u8ba4\u4e3a16\u3002 \u6ce8\u610f \u4ee5\u4e0a\u4e09\u4e2a\u914d\u7f6e\u53ea\u80fd\u914d\u7f6e\u9ed8\u8ba4\u503c\u7684\u6574\u6570\u500d\u3002 \u4f8b\u5982\uff1ayuv420_h_pitch_alignment=32;","title":"2.2.1 INPUT_CONFIG"},{"location":"module/User_Guide/IPU100/Convert.html#222-output_config","text":"outputs : \u7f51\u7edc\u8f93\u51faTensor\u7684name(\u53ef\u7528Netron\u5de5\u5177\u6253\u5f00\u6a21\u578b\u67e5\u770b)\uff0c\u5982\u679c\u6709\u591a\u4e2a\u8f93\u51faTensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u3002\u8f6c\u6362\u5e26\u540e\u5904\u7406\u7f51\u7edc\u65f6\uff0cBackbone\u7f51\u7edc\u7684outputs\u4e0e\u5b8c\u6574\u7f51\u7edcoutputs\u7684\u540d\u79f0\u4e0d\u540c\uff0c\u5176\u4f59\u8bbe\u7f6e\u5e94\u5b8c\u5168\u4e00\u81f4\u3002\u6a21\u578b\u8f93\u51faTensor\u987a\u5e8f\u4e0e outputs \u7684\u914d\u7f6e\u987a\u5e8f\u4e00\u81f4\u3002\u6240\u6709\u8f93\u51faname\u7684\u957f\u5ea6\u4e0d\u80fd\u8d85\u8fc71024\u4e2a\u5b57\u7b26\u3002 dequantizations : \u7528\u6765\u6807\u8bc6\u6240\u6709\u8f93\u51faTensor\u7684\u6570\u636e\u662f\u5426\u9700\u8981\u505a\u53cd\u91cf\u5316\uff0cTRUE\u6216\u8005FALSE\uff0c\u9ed8\u8ba4\u503c\u4e3aTRUE,\u6570\u91cf\u7b49\u4e8eoutputs\u3002\u5982\u679c\u6709\u591a\u4e2a\u8f93\u51faTensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002\u8be5\u9009\u9879\u4ec5\u5728\u677f\u4e0a\u8fd0\u884c\u65f6\u751f\u6548\u3002 output_formats : \u7528\u6765\u6807\u8bc6\u8f93\u51faTensor\u7684\u6570\u636e\u6392\u5e03\u683c\u5f0f\uff0cNCHW\u6216\u8005NHWC\uff0c\u6570\u91cf\u7b49\u4e8eoutputs\u4e2a\u6570\uff0c\u6a21\u578b\u8f93\u51faTensor\u987a\u5e8f\u4e0e output_formats \u7684\u914d\u7f6e\u987a\u5e8f\u4e00\u81f4\u3002\u5982\u679c\u6709\u591a\u4e2a\u8f93\u51faTensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7\uff08,\uff09\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002NCHW\u8868\u793a\u5bf9\u5e94\u987a\u5e8f\u7684outputTensor\u6309NCHW\u7684\u6570\u636e\u683c\u5f0f\u6392\u5e03\uff08\u4e0e\u539f\u6a21\u578b\u76f8\u540c\uff09\uff1bNHWC\u8868\u793a\u5bf9\u5e94\u987a\u5e8f\u7684outputTensor\u6309NHWC\u7684\u683c\u5f0f\u6392\u5e03\uff08\u9ed8\u8ba4\u683c\u5f0f\uff09\u3002 \u6ce8\u610f \uff081\uff09\u5982\u679c\u662f\u591a\u8f93\u51fa\u6a21\u578b\uff0c\u82e5\u4ec5\u9700\u6307\u5b9a\u90e8\u5206\u8f93\u51fa\u4e3aNCHW\uff0c\u5219\u6309\u5e8f\u8bbe\u7f6e\u53c2\u6570\uff0c\u65e0\u9700\u8f6c\u6362\u7684\u7528None\u8868\u793a\uff0c\u5982\uff1acaffe\uff0cNone,caffe\uff1b\u5f53\u4f7f\u7528\u8f93\u51faTensors\u540d\u5b57\u8fdb\u884c\u8bbe\u7f6e\u65f6\uff0c\u82e5\u4ec5\u6307\u5b9a\u90e8\u5206\u8f93\u51fa\u4e3aNCHW\uff0c\u5219\u4ec5\u7ed9\u51fa\u9700\u8981\u8f6c\u6362\u7684tensor name\u5373\u53ef\uff0c\u5982\uff1aoutput0\uff0coutput2\u3002 \uff082\uff09\u82e5\u914d\u7f6e\u4e86output_pack_model_arrays:\u53c2\u6570\uff0c\u5c06\u81ea\u52a8\u5728ini\u4e2d\u586b\u5145output_formats\u7684\u4fe1\u606f\u3002 \uff083\uff09\u5982\u679c\u60f3\u6307\u5b9a\u8f93\u51fatensor\u7684\u6570\u636e\u6392\u5e03\uff0c\u9664\u652f\u6301\u914d\u7f6eoutput_pack_model_arrays:\u53c2\u6570\u7684\u65b9\u5f0f\u5916\uff0c\u8fd8\u53ef\u652f\u6301\u901a\u8fc7\u5728ini\u4e2d\u914d\u7f6e[OUTPUT_CONFIG]\u7684output_formats\u4fe1\u606f\u6765\u6307\u5b9a\u8f93\u51fatensor\u7684\u6570\u636e\u6392\u5e03\uff0c\u4f7f\u7528NCHW\uff0cNHWC\u6765\u8fdb\u884c\u6307\u5b9a\uff0c\u5982\uff1aoutput_formats = NHWC,NCHW,NHWC\u3002","title":"2.2.2 OUTPUT_CONFIG"},{"location":"module/User_Guide/IPU100/Convert.html#223-conv_config","text":"input_format : \u6307\u5b9a\u7f51\u7edc\u4e2d\u6240\u6709\u5377\u79ef\u7684\u91cf\u5316\u65b9\u5f0f\uff0c\u9ed8\u8ba4L5\uff0c\u53ef\u9009\u65b9\u6848ALL_UINT8\uff0cALL_INT16\uff0c CONV2D_INT16\uff0cDEPTHWISE_INT16\u3002 ALL_UINT8 : \u6307\u5b9a\u6240\u6709\u5377\u79ef\u6309\u7167UINT8\u91cf\u5316\u3002 ALL_INT16 : \u6307\u5b9a\u6240\u6709\u5377\u79ef\u6309\u7167INT16\u91cf\u5316\u3002 CONV2D_INT16 : \u53ea\u6307\u5b9a\u6240\u6709\u666e\u901a\u5377\u79ef\u6309\u7167INT16\u91cf\u5316\u3002 DEPTHWISE_INT16 : \u53ea\u6307\u5b9a\u6240\u6709Depthwise \u5377\u79ef\u6309\u7167INT16\u91cf\u5316\u3002 \u5728 UINT8 \u6a21\u5f0f \u4e0b\uff0c\u5377\u79ef\u8fd0\u884c\u6240\u5360\u5e26\u5bbd\u5c0f\uff0c\u8fd0\u884c\u901f\u5ea6\u5feb\uff1b\u5728 INT16\u6a21\u5f0f \u4e0b\uff0c\u53ef\u4ee5\u6781\u5927\u7684\u63d0\u9ad8\u5377\u79ef\u7684\u7cbe\u5ea6\uff0c\u4f46\u662f\u8fd0\u884c\u7684\u901f\u5ea6\u4f1a\u6709\u5f71\u54cd\u3002 tensor_arrays : \u6307\u5b9a\u7f51\u7edc\u4e2d\u67d0\u4e9b\u5c42\u7684\u5377\u79ef\u91cf\u5316\u65b9\u5f0f\u3002\u6574\u4e2a\u7f51\u7edc\u5377\u79ef\u90fd\u91c7\u7528\u9ed8\u8ba4\u7684UINT8 \uff0c\u4f46\u662f\u67d0\u4e9b\u5377\u79ef\u5c42\u9700\u8981\u66f4\u9ad8\u7684\u7cbe\u5ea6\uff0c\u8fd9\u65f6\u76f4\u63a5\u586b\u5199\u90a3\u4e9b\u5377\u79ef\u5c42\u7684\u7b2c\u4e00\u4e2a\u8f93\u5165\u7684 input id name\u5373\u53ef\u3002\u591a\u5c42\u65f6\uff0cname\u4ee5\u9017\u53f7( , )\u5206\u9694\u3002 \u6ce8\u610f \u5377\u79ef\u7b2c\u4e00\u4e2a\u8f93\u5165\u7684input id\u540d\u5b57\u53ef\u901a\u8fc7netron\u5de5\u5177\u67e5\u770b\u3002\u6307\u5b9a\u91cf\u5316\u65f6\uff0c\u7f51\u7edc\u4e2d\u7684\u7b2c\u4e00\u5c42\u5377\u79ef\u4e0d\u751f\u6548\u3002","title":"2.2.3 CONV_CONFIG"},{"location":"module/User_Guide/IPU100/Convert.html#224-optimize_config","text":"skip_concatenation : \u7f51\u7edc\u4e2d\u7684Concatenation\u5c42\uff0c\u5982\u679c\u53ea\u9488\u5bf9\u6700\u540e\u4e00\u4e2a\u7ef4\u5ea6\u5408\u5e76\uff0c\u4f1a\u8d70\u8fdb\u8be5\u4f18\u5316\u4e2d\u3002Fixed\u6a21\u578b\u4f1a\u5c06Concatenation\u5c42\u8f6c\u6362\u4e3askip_concatenation\uff0cskip_concatenation\u5c42\u4f1a\u5927\u5e45\u51cf\u5c0f\u8fd0\u884c\u65f6\u95f4\u3002","title":"2.2.4 OPTIMIZE_CONFIG"},{"location":"module/User_Guide/IPU100/Convert.html#225","text":"training_input_formats input_formats \u677f\u4e0a\u8fd0\u884c\u65f6\u6570\u636e\u5bf9\u9f50\u65b9\u5f0f RGB/BGR RGB/BGR \u4e0d\u7528\u5bf9\u9f50 RGB/BGR RGBA/BGRA W = ALIGN_UP(W * 4, xrgb_h_pitch_alignment ) / 4 RGB/BGR YUV_NV12/GRAY H = ALIGN_UP(H, yuv420_v_pitch_alignment ) W = ALIGN_UP(W, yuv420_h_pitch_alignment ) RAWDATA_S16_NHWC RAWDATA_S16_NHWC \u6700\u540e1\u4e2a\u7ef4\u5ea6 = ALIGN_UP(\u6700\u540e1\u4e2a\u7ef4\u5ea6, 8 ) \u6a21\u578b\u8f93\u51fa\u662fINT16\uff0c\u5982\u679c\u914d\u7f6e dequantizations \u4e3aTRUE\uff0c\u5728\u677f\u7aef\u8fd0\u884c\u65f6\u4f1a\u8f6c\u6362\u6210float32\u3002 \u8f93\u51fa\u7684\u6570\u636e\u5bf9\u9f50\u65b9\u6cd5\u4e3a\uff1a\u6700\u540e1\u4e2a\u7ef4\u5ea6 = ALIGN_UP(\u6700\u540e1\u4e2a\u7ef4\u5ea6, 8 )\u3002 \u5177\u4f53\u8be6\u89c15.2.1\u8282\u53bb\u9664\u65e0\u7528\u6570\u636e\u3002","title":"2.2.5 \u8f93\u5165\u8f93\u51fa\u914d\u7f6e\u603b\u7ed3"},{"location":"module/User_Guide/IPU100/DLA_SDK_Auxiliary_Tool.html","text":"1. DLA SDK\u8f85\u52a9\u5de5\u5177\u4f7f\u7528\u8bf4\u660e \u00b6 \u5de5\u5177 \u5de5\u5177\u8def\u5f84 \u5de5\u5177\u4f5c\u7528 \u6ce8\u610f\u4e8b\u9879 Offline\u6a21\u578b\u4fe1\u606f\u67e5\u770b\u5de5\u5177 SGS_IPU_SDK/DumpDebug/show_img_info.py \u67e5\u770bOffline\u6a21\u578b\u4fe1\u606f IPU\u7f51\u7edc\u6a21\u578b\u6570\u636e\u5bf9\u6bd4\u5206\u6790\u5de5\u5177 SGS_IPU_SDK/DumpDebug/auto_dump_debug.sh \u5bf9\u6bd4\u5206\u6790\u539f\u6a21\u578b/float/fix\u5404\u9636\u6bb5\u6a21\u578b\u6570\u636e \u9700\u914d\u5408 DumpDebugTool \u5de5\u5177\u4f7f\u7528 1.1 Offline\u6a21\u578b\u4fe1\u606f\u67e5\u770b\u5de5\u5177 \u00b6 Offline\u6a21\u578b\u4fe1\u606f\u67e5\u770b\u5de5\u5177\uff1aSGS_IPU_SDK/DumpDebug/show_img_info.py\u3002 (1) \u5de5\u5177\u4f7f\u7528\u547d\u4ee4 python3 show_img_info . py \\ - m deploy_fixed . sim_sgsimg . img \\ -- version (2) \u5fc5\u9009\u53c2\u6570 -m , --model : \u79bb\u7ebf\u6a21\u578b\u7684\u8def\u5f84 \u4f7f\u7528\u8be5\u53c2\u6570\u5c06\u663e\u793a\u5982\u4e0b\u4fe1\u606f\uff1a \u8bf4\u660e Offline IMG Version : \u6240\u7528\u6570\u636e\u96c6\u751f\u6210\u8be5\u79bb\u7ebf\u6a21\u578b\u65f6\u7528\u7684SDK\u7248\u672c\u4fe1\u606f\u3002 Offline Model Size : \u8be5\u79bb\u7ebf\u6a21\u578b\u7684\u5927\u5c0f\u3002 Offline Model Variable Buffer Size : \u8be5\u79bb\u7ebf\u6a21\u578b\u7684Variable Buffer\u5927\u5c0f\u3002 Offline_Model : Input \uff1a name: \u6a21\u578b\u8f93\u5165Tensor\u540d\u79f0\u3002 index: \u6a21\u578b\u8f93\u5165Tensor\u7d22\u5f15\u3002 dtype: \u6a21\u578b\u8f93\u5165Tensor\u7684\u6570\u636e\u7c7b\u578b\uff0cuint8/allint16 layouts: \u6a21\u578b\u8f93\u5165Tensor\u7684\u6570\u636e\u6392\u5e03\uff0cNCHW/NHWC shape: \u6a21\u578b\u8f93\u5165Tensor\u7684shape\u4fe1\u606f\u3002 training_input_formats:\u7f51\u7edc\u8bad\u7ec3\u65f6\u7684\u56fe\u7247\u683c\u5f0f\u4fe1\u606f( input_config training_input_formats \u53c2\u6570) input_formats:\u7f51\u7edc\u6a21\u578b\u5728SigmaStar\u82af\u7247\u4e0a\u8fd0\u884c\u7684\u56fe\u7247\u8f93\u5165\u683c\u5f0f( input_config input_formats \u53c2\u6570) Output \uff1a name:\u6a21\u578b\u8f93\u51faTensor\u540d\u79f0\u3002 index:\u6a21\u578b\u8f93\u51faTensor\u7d22\u5f15 dtype:\u6a21\u578b\u8f93\u51faTensor\u7684\u6570\u636e\u7c7b\u578b\uff0cuint8/allint16 shape:\u6a21\u578b\u8f93\u51faTensor\u7684shape\u4fe1\u606f\u3002 quantization: \u6a21\u578b\u8f93\u51faTensor\u7684\u91cf\u5316scale\u4fe1\u606f (3) \u53ef\u9009\u53c2\u6570 --version : \u751f\u6210\u79bb\u7ebf\u6a21\u578b\u6240\u7528\u7684\u7684SDK\u7248\u672c\u4fe1\u606f\uff0c\u5373\u663e\u793a\u7ed3\u679c\u4e2d SDK_Version_Info: \u540e\u6253\u5370\u7684\u4fe1\u606f\u3002 1.2 IPU\u7f51\u7edc\u6a21\u578b\u6570\u636e\u5bf9\u6bd4\u5206\u6790\u5de5\u5177 \u00b6 \u8be6\u60c5\u8bf7\u53c2\u8003\u624b\u518c DumpDebug Tool\u7ae0\u8282","title":"DLA SDK Auxiliary Tool"},{"location":"module/User_Guide/IPU100/DLA_SDK_Auxiliary_Tool.html#1-dla-sdk","text":"\u5de5\u5177 \u5de5\u5177\u8def\u5f84 \u5de5\u5177\u4f5c\u7528 \u6ce8\u610f\u4e8b\u9879 Offline\u6a21\u578b\u4fe1\u606f\u67e5\u770b\u5de5\u5177 SGS_IPU_SDK/DumpDebug/show_img_info.py \u67e5\u770bOffline\u6a21\u578b\u4fe1\u606f IPU\u7f51\u7edc\u6a21\u578b\u6570\u636e\u5bf9\u6bd4\u5206\u6790\u5de5\u5177 SGS_IPU_SDK/DumpDebug/auto_dump_debug.sh \u5bf9\u6bd4\u5206\u6790\u539f\u6a21\u578b/float/fix\u5404\u9636\u6bb5\u6a21\u578b\u6570\u636e \u9700\u914d\u5408 DumpDebugTool \u5de5\u5177\u4f7f\u7528","title":"1. DLA SDK\u8f85\u52a9\u5de5\u5177\u4f7f\u7528\u8bf4\u660e"},{"location":"module/User_Guide/IPU100/DLA_SDK_Auxiliary_Tool.html#11-offline","text":"Offline\u6a21\u578b\u4fe1\u606f\u67e5\u770b\u5de5\u5177\uff1aSGS_IPU_SDK/DumpDebug/show_img_info.py\u3002 (1) \u5de5\u5177\u4f7f\u7528\u547d\u4ee4 python3 show_img_info . py \\ - m deploy_fixed . sim_sgsimg . img \\ -- version (2) \u5fc5\u9009\u53c2\u6570 -m , --model : \u79bb\u7ebf\u6a21\u578b\u7684\u8def\u5f84 \u4f7f\u7528\u8be5\u53c2\u6570\u5c06\u663e\u793a\u5982\u4e0b\u4fe1\u606f\uff1a \u8bf4\u660e Offline IMG Version : \u6240\u7528\u6570\u636e\u96c6\u751f\u6210\u8be5\u79bb\u7ebf\u6a21\u578b\u65f6\u7528\u7684SDK\u7248\u672c\u4fe1\u606f\u3002 Offline Model Size : \u8be5\u79bb\u7ebf\u6a21\u578b\u7684\u5927\u5c0f\u3002 Offline Model Variable Buffer Size : \u8be5\u79bb\u7ebf\u6a21\u578b\u7684Variable Buffer\u5927\u5c0f\u3002 Offline_Model : Input \uff1a name: \u6a21\u578b\u8f93\u5165Tensor\u540d\u79f0\u3002 index: \u6a21\u578b\u8f93\u5165Tensor\u7d22\u5f15\u3002 dtype: \u6a21\u578b\u8f93\u5165Tensor\u7684\u6570\u636e\u7c7b\u578b\uff0cuint8/allint16 layouts: \u6a21\u578b\u8f93\u5165Tensor\u7684\u6570\u636e\u6392\u5e03\uff0cNCHW/NHWC shape: \u6a21\u578b\u8f93\u5165Tensor\u7684shape\u4fe1\u606f\u3002 training_input_formats:\u7f51\u7edc\u8bad\u7ec3\u65f6\u7684\u56fe\u7247\u683c\u5f0f\u4fe1\u606f( input_config training_input_formats \u53c2\u6570) input_formats:\u7f51\u7edc\u6a21\u578b\u5728SigmaStar\u82af\u7247\u4e0a\u8fd0\u884c\u7684\u56fe\u7247\u8f93\u5165\u683c\u5f0f( input_config input_formats \u53c2\u6570) Output \uff1a name:\u6a21\u578b\u8f93\u51faTensor\u540d\u79f0\u3002 index:\u6a21\u578b\u8f93\u51faTensor\u7d22\u5f15 dtype:\u6a21\u578b\u8f93\u51faTensor\u7684\u6570\u636e\u7c7b\u578b\uff0cuint8/allint16 shape:\u6a21\u578b\u8f93\u51faTensor\u7684shape\u4fe1\u606f\u3002 quantization: \u6a21\u578b\u8f93\u51faTensor\u7684\u91cf\u5316scale\u4fe1\u606f (3) \u53ef\u9009\u53c2\u6570 --version : \u751f\u6210\u79bb\u7ebf\u6a21\u578b\u6240\u7528\u7684\u7684SDK\u7248\u672c\u4fe1\u606f\uff0c\u5373\u663e\u793a\u7ed3\u679c\u4e2d SDK_Version_Info: \u540e\u6253\u5370\u7684\u4fe1\u606f\u3002","title":"1.1 Offline\u6a21\u578b\u4fe1\u606f\u67e5\u770b\u5de5\u5177"},{"location":"module/User_Guide/IPU100/DLA_SDK_Auxiliary_Tool.html#12-ipu","text":"\u8be6\u60c5\u8bf7\u53c2\u8003\u624b\u518c DumpDebug Tool\u7ae0\u8282","title":"1.2 IPU\u7f51\u7edc\u6a21\u578b\u6570\u636e\u5bf9\u6bd4\u5206\u6790\u5de5\u5177"},{"location":"module/User_Guide/IPU100/DLA_SDK_Support.html","text":"10.1. Caffe\u652f\u6301\u7b97\u5b50 \u00b6 \u7b97\u5b50 \u5907\u6ce8 ArgMax only support top 1 BatchNorm Concat \u6700\u5927256\u4e2atensor concat Convolution \u9650\u5236\u6761\u4ef6\uff1aAll tensor size < 2^31 \u82e5kernel size \u4e3a do*h*w*di \u5219h * w < 64 group\u4e3a1\u65f6\uff1a\u8f6c\u6362\u6210Depthwise Convolution; group\u4e3aC\u65f6\uff1a\u8f6c\u6362\u4e3aConvolution; group\u4e3a (1, C) \u65f6\uff1a\u62c6\u89e3\u6210\u82e5\u5e72Convolution round(di/16)*round(do/16) < 512 * 1024 ConvolutionDepthwise \u539f\u751f\u652f\u6301Kernel_size\u4e3a3 * 3\uff0c\u5176\u4f59\u60c5\u51b5\u8f6c\u6362\u6210Convolution\u5904\u7406; \u9650\u5236\u6761\u4ef6\uff1aPad\u8303\u56f4\uff1a[0, 1] CReLU ContinuationIndicator Crop Deconvolution All tensor size < 2^31 \u82e5kernel size \u4e3a do*h*w*di\uff0ch * w < 64 round(di/16)*round(do/16) < 512 * 1024 Dropout Eltwise \u652f\u6301Add\u3001Sub\u3001Mul\u3001Maximum \u5bf9\u4e8e\u8f93\u5165\u7684\u4e24\u4e2atensor,shape\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6 1. 4\u7ef4\u5411\u91cf\uff0cNCHW 2. NCHW \uff0cconst 3. NCHW \uff0cC\u7ef4\u5411\u91cf 4. NCHW \uff0cNCHW Flatten InnerProduct \u82e5weight size do*di round(di/16)*round(do/16) < 512 * 1024 Permute Pooling \u82e5kernel size\u4e3ah*w 1.global_pooling\u4e3atrue \u5f53\u8be5AVGPool\u8f93\u5165\u4e3a uint8 \u5219 h*w < = 255 int16 \u5219 h*w < =65025 \u5bf9\u4e8eMAXPool\u4e0d\u7ba1\u8f93\u5165\u4e3a\u4f55\u7c7b\u578b\u90fd h*w < = 65025 2.global_pooling\u4e3afalse h*w < = 19*19 PriorBox Power \u4ec5\u652f\u6301\u6307\u6570\u4e3a\u6b63\u6574\u6570 Reshape Reverse ROIPooling ROIPooling\u7684rois\u8f93\u5165\u7ef4\u5ea6\u4e3a\uff08N\u00d75\uff09\uff0c\u5f53\u540e\u6bb5\u7f51\u7edc\u5168\u90e8\u662fInnerProduct\u65f6\uff0cN\u624d\u53ef\u4ee5\u8bbe\u7f6e\u5927\u4e8e1\uff0c\u5982\u679c\u540e\u6bb5\u7f51\u7edc\u4e2d\u6709\u5377\u79ef\u65f6\uff0cN\u4ec5\u53ef\u4ee5\u8bbe\u7f6e\u4e3a1\uff0c\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u9700\u8981\u5faa\u73af\u6267\u884cN\u6b21\u3002\u4f7f\u7528\u65b9\u6cd5\u548c\u9650\u5236\u8be6\u89c1\u4e0b\u65b9Please Note\u3002 ReLU \u8f93\u5165 < =4\u7ef4 PReLU \u8f93\u5165 < =4\u7ef4 Sigmoid Slice Scale \u5bf9\u4e8e\u8f93\u5165\u7684\u4e24\u4e2atensor,shape\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6 1. 4\u7ef4\u5411\u91cf\uff0cNCHW 2. NCHW \uff0cconst 3. NCHW \uff0cC\u7ef4\u5411\u91cf 4. NCHW \uff0cNCHW Softmax \u5982\u9700\u5bf9\u6307\u5b9a\u7ef4\u5ea6\u8fdb\u884c\u8fd0\u7b97\uff0c\u5c06\u8981\u8ba1\u7b97\u7684\u7ef4\u5ea6\u8f6c\u7f6e\u5230\u6700\u540e\u7684\u7ef4\u5ea6\uff08\u6700\u5185\u7ef4\u5ea6\uff09\uff0c\u6700\u5927\u652f\u630132*512=16384 Split Tanh Threshold \u53ea\u652f\u63014\u7ef4\u8f93\u5165 Tile Upsample Upsample\u7b97\u5b50\u5728caffe\u4e2d\u6ca1\u6709\uff0c\u53ef\u4ee5\u624b\u52a8\u5c06Deconvolution\u4fee\u6539\u6210Upsample \u53ea\u652f\u63014\u7ef4\u8f93\u5165Only support same scale on H and W Reorg \u53ea\u652f\u6301stride = 2 LSTM \u8f93\u5165c0,h0\u5fc5\u987b\u662fconst tensor,cn,hn\u4e0d\u652f\u6301\u5355\u72ec\u8f93\u51fa\uff0c\u53ea\u652f\u6301\u5355\u5411LSTM Please Note: Upsample\u7b97\u5b50\u5728prototxt\u4e2d\u8fd9\u6837\u63cf\u8ff0\uff1a layer { bottom : \"layer85-conv\" top : \"layer86-upsample\" name : \"layer86-upsample\" type : \"Upsample\" upsample_param { scale : 2 } } scale\u53c2\u6570\u4e0eDeconvolution\u7684Stride\u542b\u4e49\u76f8\u540c\u3002\u4f46\u9700\u6ce8\u610fUpsample\u76f8\u5f53\u4e8e\u6743\u91cd\u5168\u4e3a1\u7684Deconvolution\u7b97\u5b50\u3002 ROIPooling\u7b97\u5b50\u5728prototxt\u4e2d\u8fd9\u6837\u63cf\u8ff0\uff1a layer { name : \"roi_pool5\" type : \"ROIPooling\" bottom : \"conv5_3\" bottom : \"rois\" top : \"pool5\" roi_pooling_param { pooled_w : 7 pooled_h : 7 spatial_scale : 0.0625 } } Roi_pooling_param\u4ec5\u652f\u6301pooled_w\uff0cpooled_h\u548cspatial_scale\u3002Float\u6a21\u578b\u7684rois\u8f93\u5165\u4e3arpn\u5c42\u8f93\u51fa\u7684\u5750\u6807\uff0cFixed\u548cOffline\u6a21\u578b\u7684rois\u8f93\u5165\u4e3arpn\u5c42\u8f93\u51fa\u5750\u6807\u4e58spatial_scale\u503c\u540e\u518d\u91cf\u5316\u5230int16\u540e\u9001\u5165\u6a21\u578b\u3002 10.2. TensorFlow\u652f\u6301\u7b97\u5b50 \u00b6 \u7c7b\u522b \u7b97\u5b50 \u5907\u6ce8 Convolution Conv \u9650\u5236\u6761\u4ef6\uff1aKernel_size\uff1aH * W < 255 Convolution DepthwiseConv2dNative \u539f\u751f\u652f\u6301Kernel_size\u4e3a3 * 3\uff0c\u5176\u4f59\u60c5\u51b5\u8f6c\u6362\u6210Convolution\u5904\u7406 Convolution FullyConnected Pooling Max pooling Pooling Average Pooling Activation ReLU Activation PReLU Activation ReLU6 Activation LeakyReLU Activation Sigmoid Math Less Math Greater Math GreaterEqual Math Equal Math Add Math Sub Math Mul Math RealDiv \u4ec5\u652f\u6301\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u6570\u4e3a\u5e38\u91cfTensor Math Maximum Math Minimum Math Mean Math Max Math Sqrt Math Rsqrt Math Round Math Softmax \u5982\u9700\u5bf9\u6307\u5b9a\u7ef4\u5ea6\u8fdb\u884c\u8fd0\u7b97\uff0c\u5c06\u8981\u8ba1\u7b97\u7684\u7ef4\u5ea6\u8f6c\u7f6e\u5230\u6700\u540e\u7684\u7ef4\u5ea6\uff08\u6700\u5185\u7ef4\u5ea6\uff09 Math FusedBatchNorm Math Exp DMA Align DMA ConcatV2 DMA Fill DMA Gather DMA GatherV2 DMA Pack DMA Pad DMA SpaceToBatchND DMA BatchToSpaceND DMA Zeroslike DMA Split DMA Slice DMA Unpack DMA Tile DMA Reshape DMA Transpose DMA Resize_bilinear \u76ee\u524d\u7684\u53cc\u7ebf\u6027\u63d2\u503c\u7684\u7248\u672c\u53ea\u80fd\u652f\u6301\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6\u7684case\uff1a\uff081\uff09\u53ea\u80fd\u652f\u6301\u6574\u6570\u500d\u7684\u653e\u5927\u3002\uff082\uff09\u653e\u5927\u500d\u6570\u5fc5\u987b\u5c0f\u4e8e\u7b49\u4e8e8\u500d\u3002\uff083\uff09\u53ea\u652f\u63f43\u7ef4\u6570\u636e\u7684\u5dee\u503c\uff0c\u5373NHWC\u4e2d\u7684N\u5fc5\u987b\u4e3a1\uff0c\u8fd9\u70b9\u548c\u5377\u79ef\u7c7b\u4f3c Misc TopKV2 Misc shape 10.3. Onnx\u652f\u6301\u7b97\u5b50 \u00b6 \u7b97\u5b50 \u5907\u6ce8 Add \u5bf9\u4e8e\u8f93\u5165\u7684\u4e24\u4e2atensor,shape\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6 1. 4\u7ef4\u5411\u91cf\uff0cNCHW 2. NCHW \uff0cconst 3. NCHW \uff0cC\u7ef4\u5411\u91cf 4. NCHW \uff0cNCHW Abs ArgMax AveragePool \u82e5kernel size\u4e3ah*w\uff0c\u5f53\u8be5\u7b97\u5b50l\u8f93\u5165\u4e3a h*w < = 19*19 BatchNorm Concat \u6700\u5927256\u4e2atensor concat Convolution All tensor size < 2^31 \u82e5kernel size \u4e3a do*h*w*di \u5219h * w < 64 round(di/16)*round(do/16) < 512 * 1024 \u652f\u6301autoPad\u7684SAME_UPPER\u5c5e\u6027;\u9650\u5236\u6761\u4ef6\uff1aPads\u8303\u56f4\uff1a[0, 7] ConvTranspose All tensor size < 2^32 \u82e5kernel size \u4e3a do*h*w*di\uff0ch * w < 64 round(di/16)*round(do/16) < 512 * 1024 Clip DepthwiseConv2D \u539f\u751f\u652f\u6301Kernel_size\u4e3a3 * 3\uff0c\u5176\u4f59\u60c5\u51b5\u8f6c\u6362\u6210Convolution\u5904\u7406 Div \u5bf9\u4e8e\u8f93\u5165\u7684\u4e24\u4e2atensor,shape\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6 1. 4\u7ef4\u5411\u91cf\uff0cNCHW 2. NCHW \uff0cconst 3. NCHW \uff0cC\u7ef4\u5411\u91cf 4. NCHW \uff0cNCHW Dropout DepthToSpace \u53ea\u652f\u63014\u7ef4\u8f93\u5165 Expand Exp Gather \u53ea\u652f\u6301indices\u4e3aint32\u7684\u5e38\u6570 Gemm \u8f93\u5165 < =4\u7ef4\uff0c\u82e5weight size do*di round(di/16)*round(do/16) < 512 * 1024 GlobalAveragePool \u82e5kernel size\u4e3ah*w \u5f53\u8be5\u7b97\u5b50l\u8f93\u5165\u4e3a uint8 \u5219 h*w < = 255 int16 \u5219 h*w < =65025 GlobalMaxPool \u82e5kernel size\u4e3ah*w \u5f53\u8be5\u7b97\u5b50l\u8f93\u5165\u4e3a uint8 \u5219 h*w < = 255 int16 \u5219 h*w < =65026 LSTM \u6fc0\u6d3b\u51fd\u6570\u56fa\u5b9a\uff0c\u4e0d\u80fd\u914d\u7f6e\u3002\u53c2\u89c1\u7528\u6237\u624b\u518c\u7279\u6b8a\u7f51\u7edc\u8f6c\u6362LSTM\u7ae0\u8282 \u8f93\u5165c0,h0\u5fc5\u987b\u662fconst tensor,cn,hn\u4e0d\u652f\u6301\u5355\u72ec\u8f93\u51fa \u652f\u6301\u5355\u5411LSTM\u548c\u53cc\u5411LSTM Matmul \u8f93\u5165 < =4\u7ef4\uff0c\u82e5weight size do*di round(di/16)*round(do/16) < 512 * 1024 Mul \u5bf9\u4e8e\u8f93\u5165\u7684\u4e24\u4e2atensor,shape\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6 1. 4\u7ef4\u5411\u91cf\uff0cNCHW 2. NCHW \uff0cconst 3. NCHW \uff0cC\u7ef4\u5411\u91cf 4. NCHW \uff0cNCHW MaxPool \u82e5kernel size\u4e3ah*w \u5f53\u8be5\u7b97\u5b50l\u8f93\u5165\u4e3a h*w < = 19*19 Max Pad \u652f\u6301\uff0conly support constant Reshape ReduceSum \u8f93\u5165 < =4\u7ef4 ReduceMean \u8f93\u5165 < =4\u7ef4 ReduceMax \u8f93\u5165 < =4\u7ef4\uff0c\u4ec5\u652f\u6301\u540c\u65f6\u5bf9\u4e00\u4e2aaxis\u8fdb\u884c\u8ba1\u7b97 Resize \u4e0d\u652f\u6301roi\u53c2\u6570\uff0c\u53ea\u5bf9\u6574\u4e2a\u7ef4\u5ea6\u8fdb\u884c\u7f29\u653e\u3002 Bilinear \u65b9\u5f0fcoordinate_transformation_mod\u53c2\u6570 \u4ec5\u652f\u6301align_corners\uff0casymmetric\uff1b \u4e0d\u652f\u6301\u4e0b\u91c7\u6837 \u53ea\u652f\u63014\u7ef4\u8f93\u5165 H W\u653e\u5927\u500d\u6570\u76f8\u540c H*W\u653e\u5927\u500d\u6570 < =8 ReLU \u53ea\u652f\u63014\u7ef4\u8f93\u5165 PReLU \u8f93\u5165 < =4\u7ef4 LeakyReLU \u8f93\u5165 < =4\u7ef4 TanH Sigmoid Slice Softmax \u5982\u9700\u5bf9\u6307\u5b9a\u7ef4\u5ea6\u8fdb\u884c\u8fd0\u7b97\uff0c\u5c06\u8981\u8ba1\u7b97\u7684\u7ef4\u5ea6\u8f6c\u7f6e\u5230\u6700\u540e\u7684\u7ef4\u5ea6\uff08\u6700\u5185\u7ef4\u5ea6\uff09\uff0c\u6700\u5927\u652f\u630132*512=16384 Split SpaceToDepth Squeeze Sub \u5bf9\u4e8e\u8f93\u5165\u7684\u4e24\u4e2atensor,shape\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6 1. 4\u7ef4\u5411\u91cf\uff0cNCHW 2. NCHW \uff0cconst 3. NCHW \uff0cC\u7ef4\u5411\u91cf 4. NCHW \uff0cNCHW Transpose Tile Unsqueeze Upsample \u53ea\u652f\u63014\u7ef4\u8f93\u5165 Only support same scale on H and W 10.4. SigmaStar DLA SDK\u5bf9\u6a21\u578b\u7684\u9650\u5236 \u00b6 1. DepthwiseConv\u5982\u679ckernle size > 3\uff0c\u5fc5\u987b\u6ee1\u8db3input size == kernel size\u3002 2. \u5bf9\u4e8e\u6307\u5b9a\u7ef4\u5ea6\u7684Softmax\uff0c\u6211\u4eec\u53ea\u652f\u6301\u5bf9\u6700\u5185\u7ef4\u5ea6\u7684\u64cd\u4f5c\uff08\u591a\u4f59\u591a\u7ef4Tensor\u6240Softmax\u8fd0\u7b97\uff0c\u6211\u4eec\u53ea\u652f\u6301Softmax\u5236\u5b9a\u5728\u6700\u5185\u7ef4\u5ea6\u505a\uff09\u3002 3. \u5bf9\u4e8eTensorFlow\u7684\u7f51\u7edc\uff0c\u5c3d\u91cf\u51cf\u5c11\u5927\u6570\u636e\u91cfDMA\u7b97\u5b50\uff08\u5305\u62ecGather\u3001Unpack\u3001Pack\u3001Concat\u3001Reshape\u3001Slice\u3001Tile\u3001Tanspose\u3001Pad\u3001Split\u7b49\u8fd9\u7c7b\u5355\u7eaf\u6570\u636e\u642c\u8fd0\u64cd\u4f5c\u7684\u7b97\u5b50\uff09\u7684\u4f7f\u7528\u3002\u4f7f\u7528\u4e0a\u8ff0\u7b97\u5b50\u65f6\uff0c\u5982C\u7ef4\u5ea6\u662f16\u7684\u6574\u6570\u500d\uff0c\u80fd\u591f\u52a0\u901f\u8fd0\u7b97\u3002 4. \u5bf9\u4e8eCaffe \u7f51\u7edc\u4e0eTensorFlow\u7c7b\u4f3c\uff0c\u5c3d\u91cf\u51cf\u5c11Split\u3001Concat\u3001Reshape\u3001Flatten\u3001Slice\u3001Permute\u7684\u4f7f\u7528\u3002 5. \u9664\u7b2c\u4e00\u5c42Conv\u5916\uff0c\u5176\u4ed6\u5c42\u7684Conv DI\u7ef4\u5ea6\uff08\u5373NHWC \u4e2dC\u8fd9\u4e2a\u7ef4\u5ea6\uff09\u8d8a\u5927\u6548\u7387\u4f1a\u8d8a\u9ad8\uff0c\u6700\u5927\u652f\u63f42048\u3002 6. Math\u7c7b\u7b97\u5b50\uff08\u5305\u62ecAdd\u3001Sub\u3001Mul\u3001Div\u7b49\u5143\u7d20\u64cd\u4f5c\u7684\u7b97\u5b50\uff09\uff0c\u5982\u679c\u53f3\u64cd\u4f5c\u6570\u662fscaler\uff08\u5355\u4e2a\u6570\u5b57\uff09 \u6216\u8005 1 \u7ef4\u5411\u91cf\uff08HW\u7ef4\u5ea6\u6570\u636e\u76f8\u540c\uff0cC\u7ef4\u5ea6\u4e0d\u540c\uff09\uff0c\u6548\u7387\u4f1a\u66f4\u9ad8\u3002 7. \u7f51\u7edc\u7ed3\u6784\u4e2d\u5c3d\u91cf\u51cf\u5c11\u4e00\u4e2a\u7b97\u5b50\u7684\u8f93\u51fa\u88ab\u591a\u4e2a\u7b97\u5b50\u4f5c\u4e3a\u8f93\u5165\u7684\u60c5\u51b5\uff0c\u5982ResNet\u7684\u6b8b\u5dee\u7ed3\u6784\uff0cGoogLeNet\u7684Inception\u6a21\u5757\u7b49\u3002","title":"DLA SDK Support"},{"location":"module/User_Guide/IPU100/DLA_SDK_Support.html#101-caffe","text":"\u7b97\u5b50 \u5907\u6ce8 ArgMax only support top 1 BatchNorm Concat \u6700\u5927256\u4e2atensor concat Convolution \u9650\u5236\u6761\u4ef6\uff1aAll tensor size < 2^31 \u82e5kernel size \u4e3a do*h*w*di \u5219h * w < 64 group\u4e3a1\u65f6\uff1a\u8f6c\u6362\u6210Depthwise Convolution; group\u4e3aC\u65f6\uff1a\u8f6c\u6362\u4e3aConvolution; group\u4e3a (1, C) \u65f6\uff1a\u62c6\u89e3\u6210\u82e5\u5e72Convolution round(di/16)*round(do/16) < 512 * 1024 ConvolutionDepthwise \u539f\u751f\u652f\u6301Kernel_size\u4e3a3 * 3\uff0c\u5176\u4f59\u60c5\u51b5\u8f6c\u6362\u6210Convolution\u5904\u7406; \u9650\u5236\u6761\u4ef6\uff1aPad\u8303\u56f4\uff1a[0, 1] CReLU ContinuationIndicator Crop Deconvolution All tensor size < 2^31 \u82e5kernel size \u4e3a do*h*w*di\uff0ch * w < 64 round(di/16)*round(do/16) < 512 * 1024 Dropout Eltwise \u652f\u6301Add\u3001Sub\u3001Mul\u3001Maximum \u5bf9\u4e8e\u8f93\u5165\u7684\u4e24\u4e2atensor,shape\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6 1. 4\u7ef4\u5411\u91cf\uff0cNCHW 2. NCHW \uff0cconst 3. NCHW \uff0cC\u7ef4\u5411\u91cf 4. NCHW \uff0cNCHW Flatten InnerProduct \u82e5weight size do*di round(di/16)*round(do/16) < 512 * 1024 Permute Pooling \u82e5kernel size\u4e3ah*w 1.global_pooling\u4e3atrue \u5f53\u8be5AVGPool\u8f93\u5165\u4e3a uint8 \u5219 h*w < = 255 int16 \u5219 h*w < =65025 \u5bf9\u4e8eMAXPool\u4e0d\u7ba1\u8f93\u5165\u4e3a\u4f55\u7c7b\u578b\u90fd h*w < = 65025 2.global_pooling\u4e3afalse h*w < = 19*19 PriorBox Power \u4ec5\u652f\u6301\u6307\u6570\u4e3a\u6b63\u6574\u6570 Reshape Reverse ROIPooling ROIPooling\u7684rois\u8f93\u5165\u7ef4\u5ea6\u4e3a\uff08N\u00d75\uff09\uff0c\u5f53\u540e\u6bb5\u7f51\u7edc\u5168\u90e8\u662fInnerProduct\u65f6\uff0cN\u624d\u53ef\u4ee5\u8bbe\u7f6e\u5927\u4e8e1\uff0c\u5982\u679c\u540e\u6bb5\u7f51\u7edc\u4e2d\u6709\u5377\u79ef\u65f6\uff0cN\u4ec5\u53ef\u4ee5\u8bbe\u7f6e\u4e3a1\uff0c\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u9700\u8981\u5faa\u73af\u6267\u884cN\u6b21\u3002\u4f7f\u7528\u65b9\u6cd5\u548c\u9650\u5236\u8be6\u89c1\u4e0b\u65b9Please Note\u3002 ReLU \u8f93\u5165 < =4\u7ef4 PReLU \u8f93\u5165 < =4\u7ef4 Sigmoid Slice Scale \u5bf9\u4e8e\u8f93\u5165\u7684\u4e24\u4e2atensor,shape\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6 1. 4\u7ef4\u5411\u91cf\uff0cNCHW 2. NCHW \uff0cconst 3. NCHW \uff0cC\u7ef4\u5411\u91cf 4. NCHW \uff0cNCHW Softmax \u5982\u9700\u5bf9\u6307\u5b9a\u7ef4\u5ea6\u8fdb\u884c\u8fd0\u7b97\uff0c\u5c06\u8981\u8ba1\u7b97\u7684\u7ef4\u5ea6\u8f6c\u7f6e\u5230\u6700\u540e\u7684\u7ef4\u5ea6\uff08\u6700\u5185\u7ef4\u5ea6\uff09\uff0c\u6700\u5927\u652f\u630132*512=16384 Split Tanh Threshold \u53ea\u652f\u63014\u7ef4\u8f93\u5165 Tile Upsample Upsample\u7b97\u5b50\u5728caffe\u4e2d\u6ca1\u6709\uff0c\u53ef\u4ee5\u624b\u52a8\u5c06Deconvolution\u4fee\u6539\u6210Upsample \u53ea\u652f\u63014\u7ef4\u8f93\u5165Only support same scale on H and W Reorg \u53ea\u652f\u6301stride = 2 LSTM \u8f93\u5165c0,h0\u5fc5\u987b\u662fconst tensor,cn,hn\u4e0d\u652f\u6301\u5355\u72ec\u8f93\u51fa\uff0c\u53ea\u652f\u6301\u5355\u5411LSTM Please Note: Upsample\u7b97\u5b50\u5728prototxt\u4e2d\u8fd9\u6837\u63cf\u8ff0\uff1a layer { bottom : \"layer85-conv\" top : \"layer86-upsample\" name : \"layer86-upsample\" type : \"Upsample\" upsample_param { scale : 2 } } scale\u53c2\u6570\u4e0eDeconvolution\u7684Stride\u542b\u4e49\u76f8\u540c\u3002\u4f46\u9700\u6ce8\u610fUpsample\u76f8\u5f53\u4e8e\u6743\u91cd\u5168\u4e3a1\u7684Deconvolution\u7b97\u5b50\u3002 ROIPooling\u7b97\u5b50\u5728prototxt\u4e2d\u8fd9\u6837\u63cf\u8ff0\uff1a layer { name : \"roi_pool5\" type : \"ROIPooling\" bottom : \"conv5_3\" bottom : \"rois\" top : \"pool5\" roi_pooling_param { pooled_w : 7 pooled_h : 7 spatial_scale : 0.0625 } } Roi_pooling_param\u4ec5\u652f\u6301pooled_w\uff0cpooled_h\u548cspatial_scale\u3002Float\u6a21\u578b\u7684rois\u8f93\u5165\u4e3arpn\u5c42\u8f93\u51fa\u7684\u5750\u6807\uff0cFixed\u548cOffline\u6a21\u578b\u7684rois\u8f93\u5165\u4e3arpn\u5c42\u8f93\u51fa\u5750\u6807\u4e58spatial_scale\u503c\u540e\u518d\u91cf\u5316\u5230int16\u540e\u9001\u5165\u6a21\u578b\u3002","title":"10.1. Caffe\u652f\u6301\u7b97\u5b50"},{"location":"module/User_Guide/IPU100/DLA_SDK_Support.html#102-tensorflow","text":"\u7c7b\u522b \u7b97\u5b50 \u5907\u6ce8 Convolution Conv \u9650\u5236\u6761\u4ef6\uff1aKernel_size\uff1aH * W < 255 Convolution DepthwiseConv2dNative \u539f\u751f\u652f\u6301Kernel_size\u4e3a3 * 3\uff0c\u5176\u4f59\u60c5\u51b5\u8f6c\u6362\u6210Convolution\u5904\u7406 Convolution FullyConnected Pooling Max pooling Pooling Average Pooling Activation ReLU Activation PReLU Activation ReLU6 Activation LeakyReLU Activation Sigmoid Math Less Math Greater Math GreaterEqual Math Equal Math Add Math Sub Math Mul Math RealDiv \u4ec5\u652f\u6301\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u6570\u4e3a\u5e38\u91cfTensor Math Maximum Math Minimum Math Mean Math Max Math Sqrt Math Rsqrt Math Round Math Softmax \u5982\u9700\u5bf9\u6307\u5b9a\u7ef4\u5ea6\u8fdb\u884c\u8fd0\u7b97\uff0c\u5c06\u8981\u8ba1\u7b97\u7684\u7ef4\u5ea6\u8f6c\u7f6e\u5230\u6700\u540e\u7684\u7ef4\u5ea6\uff08\u6700\u5185\u7ef4\u5ea6\uff09 Math FusedBatchNorm Math Exp DMA Align DMA ConcatV2 DMA Fill DMA Gather DMA GatherV2 DMA Pack DMA Pad DMA SpaceToBatchND DMA BatchToSpaceND DMA Zeroslike DMA Split DMA Slice DMA Unpack DMA Tile DMA Reshape DMA Transpose DMA Resize_bilinear \u76ee\u524d\u7684\u53cc\u7ebf\u6027\u63d2\u503c\u7684\u7248\u672c\u53ea\u80fd\u652f\u6301\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6\u7684case\uff1a\uff081\uff09\u53ea\u80fd\u652f\u6301\u6574\u6570\u500d\u7684\u653e\u5927\u3002\uff082\uff09\u653e\u5927\u500d\u6570\u5fc5\u987b\u5c0f\u4e8e\u7b49\u4e8e8\u500d\u3002\uff083\uff09\u53ea\u652f\u63f43\u7ef4\u6570\u636e\u7684\u5dee\u503c\uff0c\u5373NHWC\u4e2d\u7684N\u5fc5\u987b\u4e3a1\uff0c\u8fd9\u70b9\u548c\u5377\u79ef\u7c7b\u4f3c Misc TopKV2 Misc shape","title":"10.2. TensorFlow\u652f\u6301\u7b97\u5b50"},{"location":"module/User_Guide/IPU100/DLA_SDK_Support.html#103-onnx","text":"\u7b97\u5b50 \u5907\u6ce8 Add \u5bf9\u4e8e\u8f93\u5165\u7684\u4e24\u4e2atensor,shape\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6 1. 4\u7ef4\u5411\u91cf\uff0cNCHW 2. NCHW \uff0cconst 3. NCHW \uff0cC\u7ef4\u5411\u91cf 4. NCHW \uff0cNCHW Abs ArgMax AveragePool \u82e5kernel size\u4e3ah*w\uff0c\u5f53\u8be5\u7b97\u5b50l\u8f93\u5165\u4e3a h*w < = 19*19 BatchNorm Concat \u6700\u5927256\u4e2atensor concat Convolution All tensor size < 2^31 \u82e5kernel size \u4e3a do*h*w*di \u5219h * w < 64 round(di/16)*round(do/16) < 512 * 1024 \u652f\u6301autoPad\u7684SAME_UPPER\u5c5e\u6027;\u9650\u5236\u6761\u4ef6\uff1aPads\u8303\u56f4\uff1a[0, 7] ConvTranspose All tensor size < 2^32 \u82e5kernel size \u4e3a do*h*w*di\uff0ch * w < 64 round(di/16)*round(do/16) < 512 * 1024 Clip DepthwiseConv2D \u539f\u751f\u652f\u6301Kernel_size\u4e3a3 * 3\uff0c\u5176\u4f59\u60c5\u51b5\u8f6c\u6362\u6210Convolution\u5904\u7406 Div \u5bf9\u4e8e\u8f93\u5165\u7684\u4e24\u4e2atensor,shape\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6 1. 4\u7ef4\u5411\u91cf\uff0cNCHW 2. NCHW \uff0cconst 3. NCHW \uff0cC\u7ef4\u5411\u91cf 4. NCHW \uff0cNCHW Dropout DepthToSpace \u53ea\u652f\u63014\u7ef4\u8f93\u5165 Expand Exp Gather \u53ea\u652f\u6301indices\u4e3aint32\u7684\u5e38\u6570 Gemm \u8f93\u5165 < =4\u7ef4\uff0c\u82e5weight size do*di round(di/16)*round(do/16) < 512 * 1024 GlobalAveragePool \u82e5kernel size\u4e3ah*w \u5f53\u8be5\u7b97\u5b50l\u8f93\u5165\u4e3a uint8 \u5219 h*w < = 255 int16 \u5219 h*w < =65025 GlobalMaxPool \u82e5kernel size\u4e3ah*w \u5f53\u8be5\u7b97\u5b50l\u8f93\u5165\u4e3a uint8 \u5219 h*w < = 255 int16 \u5219 h*w < =65026 LSTM \u6fc0\u6d3b\u51fd\u6570\u56fa\u5b9a\uff0c\u4e0d\u80fd\u914d\u7f6e\u3002\u53c2\u89c1\u7528\u6237\u624b\u518c\u7279\u6b8a\u7f51\u7edc\u8f6c\u6362LSTM\u7ae0\u8282 \u8f93\u5165c0,h0\u5fc5\u987b\u662fconst tensor,cn,hn\u4e0d\u652f\u6301\u5355\u72ec\u8f93\u51fa \u652f\u6301\u5355\u5411LSTM\u548c\u53cc\u5411LSTM Matmul \u8f93\u5165 < =4\u7ef4\uff0c\u82e5weight size do*di round(di/16)*round(do/16) < 512 * 1024 Mul \u5bf9\u4e8e\u8f93\u5165\u7684\u4e24\u4e2atensor,shape\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6 1. 4\u7ef4\u5411\u91cf\uff0cNCHW 2. NCHW \uff0cconst 3. NCHW \uff0cC\u7ef4\u5411\u91cf 4. NCHW \uff0cNCHW MaxPool \u82e5kernel size\u4e3ah*w \u5f53\u8be5\u7b97\u5b50l\u8f93\u5165\u4e3a h*w < = 19*19 Max Pad \u652f\u6301\uff0conly support constant Reshape ReduceSum \u8f93\u5165 < =4\u7ef4 ReduceMean \u8f93\u5165 < =4\u7ef4 ReduceMax \u8f93\u5165 < =4\u7ef4\uff0c\u4ec5\u652f\u6301\u540c\u65f6\u5bf9\u4e00\u4e2aaxis\u8fdb\u884c\u8ba1\u7b97 Resize \u4e0d\u652f\u6301roi\u53c2\u6570\uff0c\u53ea\u5bf9\u6574\u4e2a\u7ef4\u5ea6\u8fdb\u884c\u7f29\u653e\u3002 Bilinear \u65b9\u5f0fcoordinate_transformation_mod\u53c2\u6570 \u4ec5\u652f\u6301align_corners\uff0casymmetric\uff1b \u4e0d\u652f\u6301\u4e0b\u91c7\u6837 \u53ea\u652f\u63014\u7ef4\u8f93\u5165 H W\u653e\u5927\u500d\u6570\u76f8\u540c H*W\u653e\u5927\u500d\u6570 < =8 ReLU \u53ea\u652f\u63014\u7ef4\u8f93\u5165 PReLU \u8f93\u5165 < =4\u7ef4 LeakyReLU \u8f93\u5165 < =4\u7ef4 TanH Sigmoid Slice Softmax \u5982\u9700\u5bf9\u6307\u5b9a\u7ef4\u5ea6\u8fdb\u884c\u8fd0\u7b97\uff0c\u5c06\u8981\u8ba1\u7b97\u7684\u7ef4\u5ea6\u8f6c\u7f6e\u5230\u6700\u540e\u7684\u7ef4\u5ea6\uff08\u6700\u5185\u7ef4\u5ea6\uff09\uff0c\u6700\u5927\u652f\u630132*512=16384 Split SpaceToDepth Squeeze Sub \u5bf9\u4e8e\u8f93\u5165\u7684\u4e24\u4e2atensor,shape\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6 1. 4\u7ef4\u5411\u91cf\uff0cNCHW 2. NCHW \uff0cconst 3. NCHW \uff0cC\u7ef4\u5411\u91cf 4. NCHW \uff0cNCHW Transpose Tile Unsqueeze Upsample \u53ea\u652f\u63014\u7ef4\u8f93\u5165 Only support same scale on H and W","title":"10.3. Onnx\u652f\u6301\u7b97\u5b50"},{"location":"module/User_Guide/IPU100/DLA_SDK_Support.html#104-sigmastar-dla-sdk","text":"1. DepthwiseConv\u5982\u679ckernle size > 3\uff0c\u5fc5\u987b\u6ee1\u8db3input size == kernel size\u3002 2. \u5bf9\u4e8e\u6307\u5b9a\u7ef4\u5ea6\u7684Softmax\uff0c\u6211\u4eec\u53ea\u652f\u6301\u5bf9\u6700\u5185\u7ef4\u5ea6\u7684\u64cd\u4f5c\uff08\u591a\u4f59\u591a\u7ef4Tensor\u6240Softmax\u8fd0\u7b97\uff0c\u6211\u4eec\u53ea\u652f\u6301Softmax\u5236\u5b9a\u5728\u6700\u5185\u7ef4\u5ea6\u505a\uff09\u3002 3. \u5bf9\u4e8eTensorFlow\u7684\u7f51\u7edc\uff0c\u5c3d\u91cf\u51cf\u5c11\u5927\u6570\u636e\u91cfDMA\u7b97\u5b50\uff08\u5305\u62ecGather\u3001Unpack\u3001Pack\u3001Concat\u3001Reshape\u3001Slice\u3001Tile\u3001Tanspose\u3001Pad\u3001Split\u7b49\u8fd9\u7c7b\u5355\u7eaf\u6570\u636e\u642c\u8fd0\u64cd\u4f5c\u7684\u7b97\u5b50\uff09\u7684\u4f7f\u7528\u3002\u4f7f\u7528\u4e0a\u8ff0\u7b97\u5b50\u65f6\uff0c\u5982C\u7ef4\u5ea6\u662f16\u7684\u6574\u6570\u500d\uff0c\u80fd\u591f\u52a0\u901f\u8fd0\u7b97\u3002 4. \u5bf9\u4e8eCaffe \u7f51\u7edc\u4e0eTensorFlow\u7c7b\u4f3c\uff0c\u5c3d\u91cf\u51cf\u5c11Split\u3001Concat\u3001Reshape\u3001Flatten\u3001Slice\u3001Permute\u7684\u4f7f\u7528\u3002 5. \u9664\u7b2c\u4e00\u5c42Conv\u5916\uff0c\u5176\u4ed6\u5c42\u7684Conv DI\u7ef4\u5ea6\uff08\u5373NHWC \u4e2dC\u8fd9\u4e2a\u7ef4\u5ea6\uff09\u8d8a\u5927\u6548\u7387\u4f1a\u8d8a\u9ad8\uff0c\u6700\u5927\u652f\u63f42048\u3002 6. Math\u7c7b\u7b97\u5b50\uff08\u5305\u62ecAdd\u3001Sub\u3001Mul\u3001Div\u7b49\u5143\u7d20\u64cd\u4f5c\u7684\u7b97\u5b50\uff09\uff0c\u5982\u679c\u53f3\u64cd\u4f5c\u6570\u662fscaler\uff08\u5355\u4e2a\u6570\u5b57\uff09 \u6216\u8005 1 \u7ef4\u5411\u91cf\uff08HW\u7ef4\u5ea6\u6570\u636e\u76f8\u540c\uff0cC\u7ef4\u5ea6\u4e0d\u540c\uff09\uff0c\u6548\u7387\u4f1a\u66f4\u9ad8\u3002 7. \u7f51\u7edc\u7ed3\u6784\u4e2d\u5c3d\u91cf\u51cf\u5c11\u4e00\u4e2a\u7b97\u5b50\u7684\u8f93\u51fa\u88ab\u591a\u4e2a\u7b97\u5b50\u4f5c\u4e3a\u8f93\u5165\u7684\u60c5\u51b5\uff0c\u5982ResNet\u7684\u6b8b\u5dee\u7ed3\u6784\uff0cGoogLeNet\u7684Inception\u6a21\u5757\u7b49\u3002","title":"10.4. SigmaStar DLA SDK\u5bf9\u6a21\u578b\u7684\u9650\u5236"},{"location":"module/User_Guide/IPU100/Preprocess.py_and_Input_Config.ini_Support.html","text":"1. \u524d\u5904\u7406\u6587\u4ef6Preprocess.py \u00b6 \u7531\u4e8e\u4e0d\u540c\u7f51\u7edc\u6a21\u578b\u7684\u524d\u5904\u7406\u65b9\u5f0f\u4e0d\u5c3d\u76f8\u540c\uff0c\u4e3a\u4e86\u80fd\u591f\u5728\u8f6c\u6362\u7f51\u7edc\u65f6\u5c3d\u53ef\u80fd\u51cf\u5c0f\u7cbe\u5ea6\u7684\u4e22\u5931\uff0c\u5e94\u8be5\u4f7f\u7528\u4e0e\u8bad\u7ec3\u76f8\u540c\u7684\u56fe\u7247\u524d\u5904\u7406\u65b9\u5f0f\uff0c\u6bcf\u79cd\u524d\u5904\u7406\u65b9\u5f0f\u9700\u72ec\u7acb\u7f16\u5199python\u6587\u4ef6\u3002 \u7f16\u5199\u56fe\u7247\u524d\u5904\u7406\u6587\u4ef6\u65f6\uff0c\u7f16\u5199\u56fe\u7247\u5904\u7406\u51fd\u6570\uff08\u51fd\u6570\u540d\u79f0\u4e0d\u9650\uff09\uff0c\u8fd4\u56denp.array \u683c\u5f0f\u7684\u56fe\u7247\u6570\u636e\uff0c\u51fd\u6570\u5fc5\u987b\u5305\u542b2\u4e2a\u53c2\u6570\uff1a \u56fe\u7247\u8def\u5f84 \u5f52\u4e00\u5316\u6807\u8bb0\uff08norm=True\uff09 \u5f52\u4e00\u5316\u6807\u8bb0\u662f\u4e3a\u4e86\u533a\u5206\u7f51\u7edc\u6a21\u578b\u662f\u5426\u662f\u6d6e\u70b9\u6a21\u578b\u3002\u56e0\u4e3a\u5728\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u9636\u6bb5\uff0c\u56fe\u7247\u7684\u5f52\u4e00\u5316\u9700\u8981\u5728\u9001\u8fdb\u7f51\u7edc\u524d\u5904\u7406\u597d\u3002\u4f46\u662f\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u548c\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u5df2\u7ecf\u5305\u542b\u4e86input_config.ini\u6587\u4ef6\u7684\u8bbe\u7f6e\u4fe1\u606f\uff0c\u80fd\u591f\u5c06\u56fe\u7247\u6570\u636e\u81ea\u884c\u505a\u5f52\u4e00\u5316\u5904\u7406\uff0c\u56e0\u6b64\u9001\u8fdb\u7f51\u7edc\u6a21\u578b\u7684\u6570\u636e\u4e0d\u9700\u8981\u505a\u5f52\u4e00\u5316\uff0c\u8fd9\u4e0e\u5728SigmaStar\u786c\u4ef6\u4e0a\u5904\u7406\u65b9\u5f0f\u76f8\u540c\u3002 \u6839\u636einput_config.ini\u6587\u4ef6\u4e2dtraining_input_formats \u548c input_formats\u8bbe\u7f6e\u7684\u4e0d\u540c\uff0c\u4e0b\u9762\u4e3e\u4f8b\u524d\u5904\u7406\u6587\u4ef6\u7684\u5199\u6cd5\u3002 1.1. training_input_formats\u548cinput_formats\u5747\u4e3aRGB\u6216\u8005\u5747\u4e3aBGR \u00b6 PC\u4e0a\u8f6c\u6362\u6a21\u578b\u548csimulator\u6a21\u578b\u793a\u4f8b\u7684preprocess.py\u5982\u4e0b\u3002 \u5982\u679c\u5728\u6bcf\u4e2achannel\u4e0a\u6709\u4e0d\u540c\u7684std\u503c\uff0c\u9700\u8981\u5728\u5bf9\u5e94channel\u4e0a\u9664\u4ee5std\uff0c\u5982 std= [57.375, 57.12, 58.395]\u3002 \u540c\u65f6\uff0cinput_config.ini\u6587\u4ef6\u4e2dstd_value\u6bcf\u4e2a\u901a\u9053\u5bf9\u5e94\u7684std_value\u503c\uff0c\u4ee5\u82f1\u6587\u5192\u53f7( : )\u5206\u9694\uff0c\u987a\u5e8f\u4e3aRGB\u3002 training_input_formats input_formats \u677f\u4e0a\u8fd0\u884c\u65f6\u6570\u636e\u5bf9\u9f50\u65b9\u5f0f RGB/BGR RGB/BGR \u4e0d\u7528\u5bf9\u9f50 RGB/BGR RGBA/BGRA W = ALIGN_UP(W * 4, xrgb_h_pitch_alignment ) / 4 import cv2 import numpy as np def get_image ( img_path , resizeH = 224 , resizeW = 224 , norm = True , meanB = 103.53 , meanG = 116.28 , meanR = 123.68 , std = 57.375 , rgb = False , nchw = False ): img = cv2 . imread ( img_path ) if img is None : raise FileNotFoundError ( 'No such image: {} ' . format ( img_path )) img_norm = cv2 . resize ( img , ( resizeW , resizeH ), interpolation = cv2 . INTER_LINEAR ) if norm : img_norm = ( img_norm - [ meanB , meanG , meanR ]) / std img_norm = img_norm . astype ( 'float32' ) else : img_norm = np . round ( img_norm ) . astype ( 'uint8' ) if rgb : img_norm = cv2 . cvtColor ( img_norm , cv2 . COLOR_BGR2RGB ) if nchw : img_norm = np . transpose ( img_norm , axes = ( 2 , 0 , 1 )) return np . expand_dims ( img_norm , 0 ) def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm ) 1.2. training_input_formats\u4e3aRGB\u6216BGR\u548cinput_formats\u4e3aGRAY \u00b6 PC\u4e0a\u8f6c\u6362\u6a21\u578b\u548csimulator\u6a21\u578b\u793a\u4f8b\u7684preprocess.py\u5982\u4e0b\u3002 \u7070\u5ea6\u6a21\u578b\uff0c\u6307\u8f93\u5165\u662f\u5355\u901a\u9053\u56fe\u7247\u7684\u6a21\u578b\uff0c\u5373\u8f93\u5165C\u7ef4\u5ea6\u4e0a\u4e3a1\u7684\u6a21\u578b\u3002input_config.ini\u7070\u5ea6\u56fe\u7247\u8bf7\u6309\u5982\u4e0b\u65b9\u5f0f\u914d\u7f6e\uff1atraining_input_formats=RGB;input_formats=GRAY; training_input_formats input_formats \u677f\u4e0a\u8fd0\u884c\u65f6\u6570\u636e\u5bf9\u9f50\u65b9\u5f0f RGB/BGR GRAY H = ALIGN_UP(H, yuv420_v_pitch_alignment ) W = ALIGN_UP(W, yuv420_h_pitch_alignment ) import cv2 import numpy as np def get_image ( img_path , resizeH = 28 , resizeW = 28 , norm = True , meanR = 33.318 , std = 1.0 , rgb = False , nchw = False ): img = cv2 . imread ( img_path , flags =- 1 ) if img is None : raise FileNotFoundError ( 'No such image: {} ' . format ( img_path )) try : img_dim = img . shape [ 2 ] except IndexError : img_dim = 1 if img_dim == 3 : img = cv2 . cvtColor ( img , cv2 . COLOR_BGR2GRAY ) elif img_dim == 4 : img = cv2 . cvtColor ( img , cv2 . COLOR_BGRA2GRAY ) img_norm = cv2 . resize ( img , ( resizeW , resizeH ), interpolation = cv2 . INTER_LINEAR ) if norm : img_norm = ( img_norm - meanR ) / std img_norm = np . expand_dims ( img_norm , axis = 2 ) dummy = np . zeros (( 28 , 28 , 2 )) img_norm = np . concatenate (( img_norm , dummy ), axis = 2 ) img_norm = img_norm . astype ( 'float32' ) else : img_norm = np . expand_dims ( img_norm , 2 ) img_norm = np . round ( img_norm ) . astype ( 'uint8' ) if rgb : img_norm = cv2 . cvtColor ( img_norm , cv2 . COLOR_BGR2RGB ) if nchw : # NCHW img_norm = np . transpose ( img_norm , axes = ( 2 , 0 , 1 )) return np . expand_dims ( img_norm , 0 ) def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm ) 1.3. training_input_formats\u4e3aRGB\u6216BGR\u548cinput_formats\u4e3aYUV_NV12 \u00b6 PC\u4e0a\u8f6c\u6362\u6a21\u578b\u548csimulator\u6a21\u578b\u793a\u4f8b\u7684preprocess.py\u5982\u4e0b\u3002 training_input_formats input_formats \u677f\u4e0a\u8fd0\u884c\u65f6\u6570\u636e\u5bf9\u9f50\u65b9\u5f0f RGB/BGR YUV_NV12 H = ALIGN_UP(H, yuv420_v_pitch_alignment ) W = ALIGN_UP(W, yuv420_h_pitch_alignment ) import cv2 import numpy as np def get_image ( img_path , resizeH = 224 , resizeW = 224 , norm = True , meanB = 127.5 , meanG = 127.5 , meanR = 127.5 , std = 128.0 , rgb = False , nchw = False ): img = cv2 . imread ( img_path ) if img is None : raise FileNotFoundError ( 'No such image: {} ' . format ( img_path )) img_norm = cv2 . resize ( img , ( resizeW , resizeH ), interpolation = cv2 . INTER_LINEAR ) if norm : img_norm = ( img_norm - [ meanB , meanG , meanR ]) / std img_norm = img_norm . astype ( 'float32' ) else : img_norm = np . round ( img_norm ) . astype ( 'uint8' ) if rgb : img_norm = cv2 . cvtColor ( img_norm , cv2 . COLOR_BGR2RGB ) if nchw : img_norm = np . transpose ( img_norm , axes = ( 2 , 0 , 1 )) return np . expand_dims ( img_norm , 0 ) def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm ) 1.4. training_input_formats\u548cinput_formats\u5747\u4e3aRAWDATA_S16_NHWC \u00b6 PC\u4e0a\u8f6c\u6362\u6a21\u578b\u548csimulator\u6a21\u578b\u793a\u4f8b\u7684preprocess.py\u5982\u4e0b\u3002 \u5728PC\u4e0a \u5f53input_config.ini\u4e2d\u7684training_input_formats\u548cinput_formats\u90fd\u586b\u5199RAWDATA_S16_NHWC\u65f6\uff0c \u6b64\u65f6input_config.ini\u4e2dmean_red\u3001mean_green\u3001mean_blue\u548cstd_value\u4e0d\u4f1a\u518d\u5728\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u4e2d\u751f\u6548\uff0c \u6240\u6709\u524d\u5904\u7406\u8fc7\u7a0b\u90fd\u5c06\u5728\u8f93\u5165\u6a21\u578b\u524d\u5b8c\u6210\u3002mean_red\u3001mean_green\u3001mean_blue\u548cstd_value\u4e0d\u8981\u586b\u5199\u3002 \u6d6e\u70b9\u6a21\u578b\u8fd0\u884c\u65f6\uff0c\u4f7f\u7528\u65b9\u6cd5\u4e0e\u8fd0\u884c\u56fe\u7247\u8f93\u5165\u7684\u6a21\u578b\u76f8\u540c\u3002\u4f7f\u7528simulator.py\u8fd0\u884c\u5b9a\u70b9\u6a21\u578b\u65f6\uff0c\u524d\u5904\u7406\u65b9\u6cd5\u5e94\u4e0e\u6d6e\u70b9\u524d\u5904\u7406\u6a21\u578b\u4fdd\u6301\u4e00\u81f4\uff0c \u4ecd\u7136\u8f93\u5165norm=True\u65f6\u7684\u65b9\u6cd5\uff0c\u6240\u4ee5RAWDATA_S16_NHWC\u7684\u7f51\u7edc\u524d\u5904\u7406Python\u6587\u4ef6\u7f16\u5199\u65f6norm\u4e3aTrue\u548cFalse\u7684\u5b9e\u73b0\u90fd\u5e94\u6309\u7167norm\u4e3aTrue\u65f6\u7f16\u5199\u3002 simulator.py\u4f1a\u8bfb\u5165\u539f\u6d6e\u70b9\u6570\u636e\uff0c\u8fdb\u884c\u53cd\u91cf\u5316\u548c\u5bf9\u9f50\u6392\u5217\u540e\u8f93\u5165\u7ed9\u5b9a\u70b9\u6a21\u578b\u3002 \u5728\u5f00\u53d1\u677f\u4e0a \u5728\u677f\u4e0a\u8fd0\u884cRAWDATA_S16_NHWC\u7684\u7f51\u7edc\u65f6\uff0c\u4e5f\u9700\u8981\u5b8c\u6210\u8f93\u5165\u6570\u636e\u7684\u5b9a\u70b9\u5316\u548c\u5bf9\u9f50\u6392\u5217\u8fc7\u7a0b\u3002\u5b9a\u70b9\u5316\u548c\u5bf9\u9f50\u6392\u5217\u8fc7\u7a0b\u9700\u8981\u81ea\u884c\u5b8c\u6210\u3002\u5177\u4f53\u8be6\u89c1 9.2 RAWDATA_S16_NHWC\u6a21\u578b\u8f6c\u6362\u8981\u70b9 training_input_formats input_formats \u677f\u4e0a\u8fd0\u884c\u65f6\u6570\u636e\u5bf9\u9f50\u65b9\u5f0f RAWDATA_S16_NHWC RAWDATA_S16_NHWC \u6700\u540e1\u4e2a\u7ef4\u5ea6 = ALIGN_UP(\u6700\u540e1\u4e2a\u7ef4\u5ea6, 8 ) import cv2 import numpy as np def get_image ( img_path , resizeH = 224 , resizeW = 224 , norm = True , rgb = False , nchw = False ): img = cv2 . imread ( img_path ) if img is None : raise FileNotFoundError ( 'No such image: {} ' . format ( img_path )) img_norm = cv2 . resize ( img , ( resizeW , resizeH ), interpolation = cv2 . INTER_LINEAR ) img_norm = img_norm . astype ( 'float32' ) if rgb : img_norm = cv2 . cvtColor ( img_norm , cv2 . COLOR_BGR2RGB ) if nchw : img_norm = np . transpose ( img_norm , axes = ( 2 , 0 , 1 )) return np . expand_dims ( img_norm , 0 ) def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm ) 2. \u6a21\u578b\u6027\u80fd\u4f18\u5316\u89c4\u5219 \u00b6 \u5bf9\u4e8e\u5377\u79ef\u7684\u6027\u80fd\u4f18\u5316 1. kernel size 3x3 \u6700\u597d\uff0c\u7279\u522b\u5bf9\u4e8e\u9996\u5c42\u3002 2. kernel size 1x1 \u7684\u65f6\u5019\uff0cinput tensor \u6700\u5185\u7ef4\u5ea6shape\u503c\u5bf9\u9f50\u523016 \u6700\u597d\u3002 \u5bf9\u4e8eDMA\u7b97\u5b50 1. concatenation\u7b97\u5b50\u6bd4pack\u7b97\u5b50\u6027\u80fd\u66f4\u597d\u3002 2. split\u6bd4slice\u7b97\u5b50\u6027\u80fd\u66f4\u597d\u3002 3. \u5c3d\u91cf\u51cf\u5c11\u5728\u6700\u5185\u7ef4\u4e0a\u505atranspose\u3002 4. \u5355\u53e3elementwise \u7b97\u5b50\u7684const \u64cd\u4f5c\u6570\u6700\u597d\u662f\u53f3\u64cd\u4f5c\u6570\uff0c\u5373input[1]\u3002 \u7efc\u5408\u90e8\u5206 1. Tensor\u7684\u7ef4\u5ea6\u4e3a4\u6700\u597d\u3002 2. Tensor\u6700\u5185\u7ef4\u7684shape\u503c\u5bf9\u9f50\u523032\u6700\u597d\u3002 3. Softmax\u6700\u597d\u53ea\u5bf9\u6700\u5185\u7ef4\u5ea6\u64cd\u4f5c\u3002 4. ReduceMax\u3001ReduceMin\u3001ReduceSum\u6700\u597d\u574d\u584c\u7684\u7eac\u5ea6\u662f\u76f8\u90bb\u7684\u3002 \u5408\u5e76\u89c4\u5219 1. Pad + Conv2D/DepthwiseConv\uff0cpad\u4f1a\u88ab\u5408\u5e76\u5230\u5377\u79ef\u4e2d\uff0cpad\u51e0\u4e4e\u4e0d\u5360\u7528\u65f6\u95f4\u3002 2. Conv2D/DepthwiseConv + \u5355\u53e3Mul + \u5355\u53e3Add\uff0cMul\u548cAdd\u7b97\u5b50\u4f1a\u548c\u5377\u79ef\u4e00\u8d77\u8fd0\u7b97\u3002\u6211\u4eec\u4f1a\u628aBatchNorm\u8f6c\u6362\u6210Mul+Add,\u6240\u4ee5Conv2D/DepthwiseConv + BatchNorm\u53ef\u4ee5\u5408\u5e76\u3002 3. Pad + avgPooling \u53ef\u4ee5\u5408\u5e76\u3002 4. \u8fde\u7eed\u7684transpose\u4f1a\u81ea\u52a8\u5408\u5e76\u4e3a\u4e00\u4e2a\u3002 5. \u6240\u6709reshape\u7b97\u5b50\u90fd\u4f1a\u88ab\u8df3\u8fc7\u3002 6. \u8fde\u7eed\u7684\u5355\u53e3\u7684\u76f8\u540celementwise\u7b97\u5b50\u4f1a\u5408\u5e76\u3002 7. \u5355\u72ec\u7684\u5355\u53e3mul\u548c\u5355\u53e3add\uff0c\u4f1a\u53d8\u6210MultAdd\u5355\u4e00\u7684\u7b97\u5b50\u3002 \u6ce8\u610f\uff1a\u8fd9\u91cc\u5355\u53e3\u610f\u601d\u4e3a\u4e00\u4e2a\u6570\u636e\u662fconstant\u7684\u60c5\u51b5","title":"Preprocess.py and Input Config.ini Support"},{"location":"module/User_Guide/IPU100/Preprocess.py_and_Input_Config.ini_Support.html#1-preprocesspy","text":"\u7531\u4e8e\u4e0d\u540c\u7f51\u7edc\u6a21\u578b\u7684\u524d\u5904\u7406\u65b9\u5f0f\u4e0d\u5c3d\u76f8\u540c\uff0c\u4e3a\u4e86\u80fd\u591f\u5728\u8f6c\u6362\u7f51\u7edc\u65f6\u5c3d\u53ef\u80fd\u51cf\u5c0f\u7cbe\u5ea6\u7684\u4e22\u5931\uff0c\u5e94\u8be5\u4f7f\u7528\u4e0e\u8bad\u7ec3\u76f8\u540c\u7684\u56fe\u7247\u524d\u5904\u7406\u65b9\u5f0f\uff0c\u6bcf\u79cd\u524d\u5904\u7406\u65b9\u5f0f\u9700\u72ec\u7acb\u7f16\u5199python\u6587\u4ef6\u3002 \u7f16\u5199\u56fe\u7247\u524d\u5904\u7406\u6587\u4ef6\u65f6\uff0c\u7f16\u5199\u56fe\u7247\u5904\u7406\u51fd\u6570\uff08\u51fd\u6570\u540d\u79f0\u4e0d\u9650\uff09\uff0c\u8fd4\u56denp.array \u683c\u5f0f\u7684\u56fe\u7247\u6570\u636e\uff0c\u51fd\u6570\u5fc5\u987b\u5305\u542b2\u4e2a\u53c2\u6570\uff1a \u56fe\u7247\u8def\u5f84 \u5f52\u4e00\u5316\u6807\u8bb0\uff08norm=True\uff09 \u5f52\u4e00\u5316\u6807\u8bb0\u662f\u4e3a\u4e86\u533a\u5206\u7f51\u7edc\u6a21\u578b\u662f\u5426\u662f\u6d6e\u70b9\u6a21\u578b\u3002\u56e0\u4e3a\u5728\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u9636\u6bb5\uff0c\u56fe\u7247\u7684\u5f52\u4e00\u5316\u9700\u8981\u5728\u9001\u8fdb\u7f51\u7edc\u524d\u5904\u7406\u597d\u3002\u4f46\u662f\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u548c\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u5df2\u7ecf\u5305\u542b\u4e86input_config.ini\u6587\u4ef6\u7684\u8bbe\u7f6e\u4fe1\u606f\uff0c\u80fd\u591f\u5c06\u56fe\u7247\u6570\u636e\u81ea\u884c\u505a\u5f52\u4e00\u5316\u5904\u7406\uff0c\u56e0\u6b64\u9001\u8fdb\u7f51\u7edc\u6a21\u578b\u7684\u6570\u636e\u4e0d\u9700\u8981\u505a\u5f52\u4e00\u5316\uff0c\u8fd9\u4e0e\u5728SigmaStar\u786c\u4ef6\u4e0a\u5904\u7406\u65b9\u5f0f\u76f8\u540c\u3002 \u6839\u636einput_config.ini\u6587\u4ef6\u4e2dtraining_input_formats \u548c input_formats\u8bbe\u7f6e\u7684\u4e0d\u540c\uff0c\u4e0b\u9762\u4e3e\u4f8b\u524d\u5904\u7406\u6587\u4ef6\u7684\u5199\u6cd5\u3002","title":"1. \u524d\u5904\u7406\u6587\u4ef6Preprocess.py"},{"location":"module/User_Guide/IPU100/Preprocess.py_and_Input_Config.ini_Support.html#11-training_input_formatsinput_formatsrgbbgr","text":"PC\u4e0a\u8f6c\u6362\u6a21\u578b\u548csimulator\u6a21\u578b\u793a\u4f8b\u7684preprocess.py\u5982\u4e0b\u3002 \u5982\u679c\u5728\u6bcf\u4e2achannel\u4e0a\u6709\u4e0d\u540c\u7684std\u503c\uff0c\u9700\u8981\u5728\u5bf9\u5e94channel\u4e0a\u9664\u4ee5std\uff0c\u5982 std= [57.375, 57.12, 58.395]\u3002 \u540c\u65f6\uff0cinput_config.ini\u6587\u4ef6\u4e2dstd_value\u6bcf\u4e2a\u901a\u9053\u5bf9\u5e94\u7684std_value\u503c\uff0c\u4ee5\u82f1\u6587\u5192\u53f7( : )\u5206\u9694\uff0c\u987a\u5e8f\u4e3aRGB\u3002 training_input_formats input_formats \u677f\u4e0a\u8fd0\u884c\u65f6\u6570\u636e\u5bf9\u9f50\u65b9\u5f0f RGB/BGR RGB/BGR \u4e0d\u7528\u5bf9\u9f50 RGB/BGR RGBA/BGRA W = ALIGN_UP(W * 4, xrgb_h_pitch_alignment ) / 4 import cv2 import numpy as np def get_image ( img_path , resizeH = 224 , resizeW = 224 , norm = True , meanB = 103.53 , meanG = 116.28 , meanR = 123.68 , std = 57.375 , rgb = False , nchw = False ): img = cv2 . imread ( img_path ) if img is None : raise FileNotFoundError ( 'No such image: {} ' . format ( img_path )) img_norm = cv2 . resize ( img , ( resizeW , resizeH ), interpolation = cv2 . INTER_LINEAR ) if norm : img_norm = ( img_norm - [ meanB , meanG , meanR ]) / std img_norm = img_norm . astype ( 'float32' ) else : img_norm = np . round ( img_norm ) . astype ( 'uint8' ) if rgb : img_norm = cv2 . cvtColor ( img_norm , cv2 . COLOR_BGR2RGB ) if nchw : img_norm = np . transpose ( img_norm , axes = ( 2 , 0 , 1 )) return np . expand_dims ( img_norm , 0 ) def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm )","title":"1.1. training_input_formats\u548cinput_formats\u5747\u4e3aRGB\u6216\u8005\u5747\u4e3aBGR"},{"location":"module/User_Guide/IPU100/Preprocess.py_and_Input_Config.ini_Support.html#12-training_input_formatsrgbbgrinput_formatsgray","text":"PC\u4e0a\u8f6c\u6362\u6a21\u578b\u548csimulator\u6a21\u578b\u793a\u4f8b\u7684preprocess.py\u5982\u4e0b\u3002 \u7070\u5ea6\u6a21\u578b\uff0c\u6307\u8f93\u5165\u662f\u5355\u901a\u9053\u56fe\u7247\u7684\u6a21\u578b\uff0c\u5373\u8f93\u5165C\u7ef4\u5ea6\u4e0a\u4e3a1\u7684\u6a21\u578b\u3002input_config.ini\u7070\u5ea6\u56fe\u7247\u8bf7\u6309\u5982\u4e0b\u65b9\u5f0f\u914d\u7f6e\uff1atraining_input_formats=RGB;input_formats=GRAY; training_input_formats input_formats \u677f\u4e0a\u8fd0\u884c\u65f6\u6570\u636e\u5bf9\u9f50\u65b9\u5f0f RGB/BGR GRAY H = ALIGN_UP(H, yuv420_v_pitch_alignment ) W = ALIGN_UP(W, yuv420_h_pitch_alignment ) import cv2 import numpy as np def get_image ( img_path , resizeH = 28 , resizeW = 28 , norm = True , meanR = 33.318 , std = 1.0 , rgb = False , nchw = False ): img = cv2 . imread ( img_path , flags =- 1 ) if img is None : raise FileNotFoundError ( 'No such image: {} ' . format ( img_path )) try : img_dim = img . shape [ 2 ] except IndexError : img_dim = 1 if img_dim == 3 : img = cv2 . cvtColor ( img , cv2 . COLOR_BGR2GRAY ) elif img_dim == 4 : img = cv2 . cvtColor ( img , cv2 . COLOR_BGRA2GRAY ) img_norm = cv2 . resize ( img , ( resizeW , resizeH ), interpolation = cv2 . INTER_LINEAR ) if norm : img_norm = ( img_norm - meanR ) / std img_norm = np . expand_dims ( img_norm , axis = 2 ) dummy = np . zeros (( 28 , 28 , 2 )) img_norm = np . concatenate (( img_norm , dummy ), axis = 2 ) img_norm = img_norm . astype ( 'float32' ) else : img_norm = np . expand_dims ( img_norm , 2 ) img_norm = np . round ( img_norm ) . astype ( 'uint8' ) if rgb : img_norm = cv2 . cvtColor ( img_norm , cv2 . COLOR_BGR2RGB ) if nchw : # NCHW img_norm = np . transpose ( img_norm , axes = ( 2 , 0 , 1 )) return np . expand_dims ( img_norm , 0 ) def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm )","title":"1.2. training_input_formats\u4e3aRGB\u6216BGR\u548cinput_formats\u4e3aGRAY"},{"location":"module/User_Guide/IPU100/Preprocess.py_and_Input_Config.ini_Support.html#13-training_input_formatsrgbbgrinput_formatsyuv_nv12","text":"PC\u4e0a\u8f6c\u6362\u6a21\u578b\u548csimulator\u6a21\u578b\u793a\u4f8b\u7684preprocess.py\u5982\u4e0b\u3002 training_input_formats input_formats \u677f\u4e0a\u8fd0\u884c\u65f6\u6570\u636e\u5bf9\u9f50\u65b9\u5f0f RGB/BGR YUV_NV12 H = ALIGN_UP(H, yuv420_v_pitch_alignment ) W = ALIGN_UP(W, yuv420_h_pitch_alignment ) import cv2 import numpy as np def get_image ( img_path , resizeH = 224 , resizeW = 224 , norm = True , meanB = 127.5 , meanG = 127.5 , meanR = 127.5 , std = 128.0 , rgb = False , nchw = False ): img = cv2 . imread ( img_path ) if img is None : raise FileNotFoundError ( 'No such image: {} ' . format ( img_path )) img_norm = cv2 . resize ( img , ( resizeW , resizeH ), interpolation = cv2 . INTER_LINEAR ) if norm : img_norm = ( img_norm - [ meanB , meanG , meanR ]) / std img_norm = img_norm . astype ( 'float32' ) else : img_norm = np . round ( img_norm ) . astype ( 'uint8' ) if rgb : img_norm = cv2 . cvtColor ( img_norm , cv2 . COLOR_BGR2RGB ) if nchw : img_norm = np . transpose ( img_norm , axes = ( 2 , 0 , 1 )) return np . expand_dims ( img_norm , 0 ) def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm )","title":"1.3. training_input_formats\u4e3aRGB\u6216BGR\u548cinput_formats\u4e3aYUV_NV12"},{"location":"module/User_Guide/IPU100/Preprocess.py_and_Input_Config.ini_Support.html#14-training_input_formatsinput_formatsrawdata_s16_nhwc","text":"PC\u4e0a\u8f6c\u6362\u6a21\u578b\u548csimulator\u6a21\u578b\u793a\u4f8b\u7684preprocess.py\u5982\u4e0b\u3002 \u5728PC\u4e0a \u5f53input_config.ini\u4e2d\u7684training_input_formats\u548cinput_formats\u90fd\u586b\u5199RAWDATA_S16_NHWC\u65f6\uff0c \u6b64\u65f6input_config.ini\u4e2dmean_red\u3001mean_green\u3001mean_blue\u548cstd_value\u4e0d\u4f1a\u518d\u5728\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u4e2d\u751f\u6548\uff0c \u6240\u6709\u524d\u5904\u7406\u8fc7\u7a0b\u90fd\u5c06\u5728\u8f93\u5165\u6a21\u578b\u524d\u5b8c\u6210\u3002mean_red\u3001mean_green\u3001mean_blue\u548cstd_value\u4e0d\u8981\u586b\u5199\u3002 \u6d6e\u70b9\u6a21\u578b\u8fd0\u884c\u65f6\uff0c\u4f7f\u7528\u65b9\u6cd5\u4e0e\u8fd0\u884c\u56fe\u7247\u8f93\u5165\u7684\u6a21\u578b\u76f8\u540c\u3002\u4f7f\u7528simulator.py\u8fd0\u884c\u5b9a\u70b9\u6a21\u578b\u65f6\uff0c\u524d\u5904\u7406\u65b9\u6cd5\u5e94\u4e0e\u6d6e\u70b9\u524d\u5904\u7406\u6a21\u578b\u4fdd\u6301\u4e00\u81f4\uff0c \u4ecd\u7136\u8f93\u5165norm=True\u65f6\u7684\u65b9\u6cd5\uff0c\u6240\u4ee5RAWDATA_S16_NHWC\u7684\u7f51\u7edc\u524d\u5904\u7406Python\u6587\u4ef6\u7f16\u5199\u65f6norm\u4e3aTrue\u548cFalse\u7684\u5b9e\u73b0\u90fd\u5e94\u6309\u7167norm\u4e3aTrue\u65f6\u7f16\u5199\u3002 simulator.py\u4f1a\u8bfb\u5165\u539f\u6d6e\u70b9\u6570\u636e\uff0c\u8fdb\u884c\u53cd\u91cf\u5316\u548c\u5bf9\u9f50\u6392\u5217\u540e\u8f93\u5165\u7ed9\u5b9a\u70b9\u6a21\u578b\u3002 \u5728\u5f00\u53d1\u677f\u4e0a \u5728\u677f\u4e0a\u8fd0\u884cRAWDATA_S16_NHWC\u7684\u7f51\u7edc\u65f6\uff0c\u4e5f\u9700\u8981\u5b8c\u6210\u8f93\u5165\u6570\u636e\u7684\u5b9a\u70b9\u5316\u548c\u5bf9\u9f50\u6392\u5217\u8fc7\u7a0b\u3002\u5b9a\u70b9\u5316\u548c\u5bf9\u9f50\u6392\u5217\u8fc7\u7a0b\u9700\u8981\u81ea\u884c\u5b8c\u6210\u3002\u5177\u4f53\u8be6\u89c1 9.2 RAWDATA_S16_NHWC\u6a21\u578b\u8f6c\u6362\u8981\u70b9 training_input_formats input_formats \u677f\u4e0a\u8fd0\u884c\u65f6\u6570\u636e\u5bf9\u9f50\u65b9\u5f0f RAWDATA_S16_NHWC RAWDATA_S16_NHWC \u6700\u540e1\u4e2a\u7ef4\u5ea6 = ALIGN_UP(\u6700\u540e1\u4e2a\u7ef4\u5ea6, 8 ) import cv2 import numpy as np def get_image ( img_path , resizeH = 224 , resizeW = 224 , norm = True , rgb = False , nchw = False ): img = cv2 . imread ( img_path ) if img is None : raise FileNotFoundError ( 'No such image: {} ' . format ( img_path )) img_norm = cv2 . resize ( img , ( resizeW , resizeH ), interpolation = cv2 . INTER_LINEAR ) img_norm = img_norm . astype ( 'float32' ) if rgb : img_norm = cv2 . cvtColor ( img_norm , cv2 . COLOR_BGR2RGB ) if nchw : img_norm = np . transpose ( img_norm , axes = ( 2 , 0 , 1 )) return np . expand_dims ( img_norm , 0 ) def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm )","title":"1.4. training_input_formats\u548cinput_formats\u5747\u4e3aRAWDATA_S16_NHWC"},{"location":"module/User_Guide/IPU100/Preprocess.py_and_Input_Config.ini_Support.html#2","text":"\u5bf9\u4e8e\u5377\u79ef\u7684\u6027\u80fd\u4f18\u5316 1. kernel size 3x3 \u6700\u597d\uff0c\u7279\u522b\u5bf9\u4e8e\u9996\u5c42\u3002 2. kernel size 1x1 \u7684\u65f6\u5019\uff0cinput tensor \u6700\u5185\u7ef4\u5ea6shape\u503c\u5bf9\u9f50\u523016 \u6700\u597d\u3002 \u5bf9\u4e8eDMA\u7b97\u5b50 1. concatenation\u7b97\u5b50\u6bd4pack\u7b97\u5b50\u6027\u80fd\u66f4\u597d\u3002 2. split\u6bd4slice\u7b97\u5b50\u6027\u80fd\u66f4\u597d\u3002 3. \u5c3d\u91cf\u51cf\u5c11\u5728\u6700\u5185\u7ef4\u4e0a\u505atranspose\u3002 4. \u5355\u53e3elementwise \u7b97\u5b50\u7684const \u64cd\u4f5c\u6570\u6700\u597d\u662f\u53f3\u64cd\u4f5c\u6570\uff0c\u5373input[1]\u3002 \u7efc\u5408\u90e8\u5206 1. Tensor\u7684\u7ef4\u5ea6\u4e3a4\u6700\u597d\u3002 2. Tensor\u6700\u5185\u7ef4\u7684shape\u503c\u5bf9\u9f50\u523032\u6700\u597d\u3002 3. Softmax\u6700\u597d\u53ea\u5bf9\u6700\u5185\u7ef4\u5ea6\u64cd\u4f5c\u3002 4. ReduceMax\u3001ReduceMin\u3001ReduceSum\u6700\u597d\u574d\u584c\u7684\u7eac\u5ea6\u662f\u76f8\u90bb\u7684\u3002 \u5408\u5e76\u89c4\u5219 1. Pad + Conv2D/DepthwiseConv\uff0cpad\u4f1a\u88ab\u5408\u5e76\u5230\u5377\u79ef\u4e2d\uff0cpad\u51e0\u4e4e\u4e0d\u5360\u7528\u65f6\u95f4\u3002 2. Conv2D/DepthwiseConv + \u5355\u53e3Mul + \u5355\u53e3Add\uff0cMul\u548cAdd\u7b97\u5b50\u4f1a\u548c\u5377\u79ef\u4e00\u8d77\u8fd0\u7b97\u3002\u6211\u4eec\u4f1a\u628aBatchNorm\u8f6c\u6362\u6210Mul+Add,\u6240\u4ee5Conv2D/DepthwiseConv + BatchNorm\u53ef\u4ee5\u5408\u5e76\u3002 3. Pad + avgPooling \u53ef\u4ee5\u5408\u5e76\u3002 4. \u8fde\u7eed\u7684transpose\u4f1a\u81ea\u52a8\u5408\u5e76\u4e3a\u4e00\u4e2a\u3002 5. \u6240\u6709reshape\u7b97\u5b50\u90fd\u4f1a\u88ab\u8df3\u8fc7\u3002 6. \u8fde\u7eed\u7684\u5355\u53e3\u7684\u76f8\u540celementwise\u7b97\u5b50\u4f1a\u5408\u5e76\u3002 7. \u5355\u72ec\u7684\u5355\u53e3mul\u548c\u5355\u53e3add\uff0c\u4f1a\u53d8\u6210MultAdd\u5355\u4e00\u7684\u7b97\u5b50\u3002 \u6ce8\u610f\uff1a\u8fd9\u91cc\u5355\u53e3\u610f\u601d\u4e3a\u4e00\u4e2a\u6570\u636e\u662fconstant\u7684\u60c5\u51b5","title":"2. \u6a21\u578b\u6027\u80fd\u4f18\u5316\u89c4\u5219"},{"location":"module/User_Guide/IPU100/Running_Offline_Network_Model_On_Development_Board.html","text":"\u5efa\u8bae\u5728\u5f00\u53d1\u677f\u4e0a\u8fd0\u884c\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u4e4b\u524d\uff0c\u4f7f\u7528Simulator\u5bf9\u6a21\u578b\u8fdb\u884c\u9a8c\u8bc1\u3002Simulator\u80fd\u591f\u5728PC\u7aef\u6a21\u62df\u677f\u4e0a\u8fd0\u884c\u73af\u5883\u3002 \u9996\u5148\u786e\u4fdd\u5f00\u53d1\u677f\u5df2\u7ecf\u70e7\u5f55\u597d\u6700\u65b0\u7684\u56fa\u4ef6\uff0c\u4f7f\u7528Demo\u4e2d\u7684dla_classify\u53ef\u5bf9\u5355\u5f20\u56fe\u7247\u63a8\u6f14\u4e00\u6b21\uff0c\u7ed3\u679c\u4e3a\u63a8\u6f14\u7ed3\u679c\u7684TOP5\u3002\u4e0b\u9762\u5206\u89e3dla_classify.cpp\u6587\u4ef6\uff0c\u9488\u5bf9\u4f7f\u7528MI_IPU API\u7684\u987a\u5e8f\u4e3e\u4f8b\u8bf4\u660e\u3002 dla_classify.cpp\u6587\u4ef6\u8def\u5f84\u4e3a\uff1a sdk/verify/mi_demo/source/dla_classify/dla_classify.cpp 11.1. \u521b\u5efaIPU\u8bbe\u5907 \u00b6 MI_S32 IPUCreateDevice ( char * pFirmwarePath , MI_U32 u32VarBufSize ) { MI_S32 s32Ret = MI_SUCCESS ; MI_IPU_DevAttr_t stDevAttr ; stDevAttr . u32MaxVariableBufSize = u32VarBufSize ; stDevAttr . u32YUV420_W_Pitch_Alignment = 16 ; stDevAttr . u32YUV420_H_Pitch_Alignment = 2 ; stDevAttr . u32XRGB_W_Pitch_Alignment = 16 ; s32Ret = MI_IPU_CreateDevice ( & stDevAttr , NULL , pFirmwarePath , 0 ); return s32Ret ; } \u8f93\u5165\u53c2\u6570\uff1a ```ini pFirmwarePath\uff1aFirmware\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u4f20NULL\u65f6\u4f1a\u8c03\u7528/config/dla/ipu_firmware.bin u32VarBufSize\uff1a\u6a21\u578b\u5185\u90e8Tensor\u4f7f\u7528\u7684memory\u7684\u6700\u5927\u5927\u5c0f ``` u32VarBufSize\u83b7\u53d6\u65b9\u6cd5\u5982\u4e0b \uff1a \u65b9\u6cd5 1 : \u53ef\u4ee5\u901a\u8fc7 parse_net\u5de5\u5177\u83b7\u53d6 parse_net\u5de5\u5177\u8def\u5f84 \uff1a SGS_IPU_SDK / bin / parse_net \u4f7f\u7528\u65f6\u76f4\u63a5\u5728 parse_net\u547d\u4ee4\u540e\u52a0\u4e0a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8def\u5f84\u5373\u53ef \uff0c\u53ef\u53c2\u8003\u4ee5\u4e0b\u547d\u4ee4\uff1a . / parse_net xxx_fixed . sim | grep Variable \u8f93\u51fa\uff1a | |--> SubGraph [ 0 ] : Variable buffer 0xd2f00 @ 0x82f3b40 . \u5176\u4e2d 0xd2f00 \u5411 2 \u5bf9\u9f50\u540e\u4e3a u32VarBufSize\u5927\u5c0f \u3002 \u5728 C / C ++ \u4e2d\uff0c\u5411 2 \u5bf9\u9f50\u7684\u5b9a\u4e49\u4e3a\uff1a #define alignment_up(a, size) ((a + size - 1) & (~(size - 1))) \u6240\u4ee5 u32VarBufSize\u4e3a864000 \u3002 \u65b9\u6cd5 2 : \u4f7f\u7528 MI\u7684API\u83b7\u53d6 MI_IPU_OfflineModelStaticInfo_t OfflineModelInfo ; ret = MI_IPU_GetOfflineModeStaticInfo ( NULL , modelFilePath , & OfflineModelInfo ); if ( ret != MI_SUCCESS ) { std :: cerr << \"get model variable buffer size failed!\" << std :: endl ; return ; } u32VarBufSize = OfflineModelInfo . u32VariableBufferSize \u5982\u679c\u6709\u591a\u4e2a\u6a21\u578b\u9700\u8981\u8fd0\u884c\uff0c\u9009\u53d6\u6700\u5927\u7684 u32VarBufSize\u521b\u5efaIPU\u8bbe\u5907\u5373\u53ef \u3002 \u8f93\u51fa\u53c2\u6570\uff1aMI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b 11.2. \u521b\u5efaIPU\u901a\u9053 \u00b6 MI_S32 IPUCreateChannel ( MI_U32 * u32Channel , char * pModelImage ) { MI_S32 s32Ret ; MI_IPUChnAttr_t stChnAttr ; //create channel memset ( & stChnAttr , 0 , sizeof ( stChnAttr )); stChnAttr . u32InputBufDepth = 2 ; stChnAttr . u32OutputBufDepth = 2 ; return MI_IPU_CreateCHN ( u32Channel , & stChnAttr , NULL , pModelImage ); } MI_U32 u32Channel ; ret = IPUCreateChannel ( & u32ChannelID , \u201c . / mobilenet_v1_fixed . img \u201d ); \u8f93\u5165\u53c2\u6570\uff1a s32Channel\uff1a\u521b\u5efaIPU\u901a\u9053\u7684ID pModelImage\uff1a\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u79bb\u7ebf \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b 11.3. \u83b7\u53d6\u6a21\u578b\u8f93\u5165\u8f93\u51faTensor\u5c5e\u6027 \u00b6 MI_IPU_SubNet_InputOutputDesc_t desc ; MI_IPU_GetInOutTensorDesc ( u32ChannelID , & desc ); \u8f93\u5165\u53c2\u6570\uff1a u32ChnId\uff1aIPU\u901a\u9053\u7684ID pstDesc\uff1aIPU\u5b50\u7f51\u7edc\u8f93\u5165/\u8f93\u51fa\u63cf\u8ff0\u7ed3\u6784\u4f53 \u8f93\u51fa\u53c2\u6570\uff1aMI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b 11.4. \u83b7\u53d6\u8f93\u5165\u8f93\u51faTensor \u00b6 MI_IPU_TensorVector_t InputTensorVector ; MI_IPU_TensorVector_t OutputTensorVector ; MI_IPU_GetInputTensors ( u32ChannelID , & InputTensorVector ); MI_IPU_GetOutputTensors ( u32ChannelID , & OutputTensorVector ); \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID InputTensorVector\uff1a\u8f93\u5165IPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 OutputTensorVector\uff1a\u8f93\u51faIPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b 11.5. \u6a21\u578b\u6570\u636e\u8f93\u5165 \u00b6 11.5.1. \u62f7\u8d1d\u6570\u636e \u00b6 \u5c06\u6570\u636e\u62f7\u8d1d\u81f3\u6a21\u578b\u8f93\u5165Tensor\u7684\u865a\u62df\u5730\u5740\uff0c\u62f7\u8d1d\u5b8c\u6210\u540e\u8c03\u7528MI_SYS_FlushInvCache\uff1a MI_U8 * pdata = ( MI_U8 * ) InputTensorVector . astArrayTensors [ 0 ]. ptTensorData [ 0 ]; MI_U8 * pSrc = ( MI_U8 * ) Input_Data ; for ( int i = 0 ; i < imageSize ; i ++ ) { * ( pdata + i ) = * ( pSrc + i ); } MI_SYS_FlushInvCache ( pdata , imageSize ); \u6a21\u578b\u4e2dinput formats\u8bbe\u7f6e\u4e3a BGR \u6216\u8005 RGB \u65f6\uff0cstride\u4e0d\u8981\u505aalignment\uff0c\u505a\u4e86alignment\u53cd\u800c\u6709\u95ee\u9898\u3002 \u6a21\u578b\u4e2dinput formats\u8bbe\u7f6e\u4e3a BGRA \u6216\u8005 RGBA \uff08A channel\u5728\u9ad8\u5730\u5740\uff09\uff0calignmet\u89c4\u5219\u662fstride = alignment_up(width*4, 16 )\u3002 input_formats\u8bbe\u7f6e\u4e3a BGRA \uff0c\u5bf9\u5e94MI_SYS_PixelFormat_e\u4e3a E_MI_SYSPIXEL_FRAME_ARGB8888 \u3002 input_formats\u8bbe\u7f6e\u4e3a RGBA \uff0c\u5bf9\u5e94MI_SYS_PixelFormat_e\u4e3a E_MI_SYSPIXEL_FRAME_ABGR8888 \u3002 input formats\u8bbe\u7f6e\u4e3a YUV_NV12 \u6216\u8005 GRAY \u65f6\uff0calignment\u89c4\u5219\u662fstride = alignment_up(width,16)\uff0cheight\u9700\u89812 alignment\u3002 input_formats\u8bbe\u7f6e\u4e3a YUV_NV12 \u6216\u8005 GRAY \u65f6\uff0c\u5bf9\u5e94MI_SYS_PixelFormat_e\u4e3a E_MI_SYSPIXEL_FRAME_YUV_SEMIPLANAR_420 \u3002 11.5.2.\u96f6\u62f7\u8d1d\u6570\u636e \u00b6 \u5982\u679c\u4f7f\u7528MI\u7684\u5176\u4ed6\u6a21\u5757\uff0c\u4e3a\u6a21\u578b\u8f93\u5165\u505a\u597d\u4e86\u6570\u636e\u51c6\u5907\uff0c\u53ef\u4ee5\u4e0d\u7528\u62f7\u8d1d\u6570\u636e\uff0c\u76f4\u63a5\u7ed9\u4f20\u9012\u5176\u4ed6MI\u6a21\u5757\u7684\u7269\u7406\u5730\u5740\u3002 \u4ee5\u4e0b\u4ee5MI_DIVP\u6a21\u5757\u793a\u4f8b\u6a21\u578b\u8f93\u5165\u96f6\u62f7\u8d1d\u6570\u636e\uff0c\u9700\u6ce8\u610f\uff1a \u521b\u5efaIPU\u901a\u9053\u65f6\uff0c\u8f93\u5165InputBufDepth\u8bbe\u4e3a\u96f6\uff0c\u4e0d\u518d\u4f7f\u7528MI_IPU_GetInputTensors\u5206\u914d\u8f93\u5165\u7a7a\u95f4 stChnAttr.u32InputBufDepth = 0; \u7531\u4e8e\u4e0d\u4f7f\u7528MI_IPU_GetInputTensors\uff0c\u9700\u624b\u52a8\u5c06\u7f51\u7edc\u63cf\u8ff0\u7684\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u4e2a\u6570\u8d4b\u7ed9 InputTensorVector.u32TensorCount\u3002 InputTensorVector.u32TensorCount = desc.u32InputTensorCount; \u4f7f\u7528MI_DIVP\u7f29\u653e\u56fe\u7247\uff1a \u5206\u914dMI_DIVP\u7684\u7a7a\u95f4 MI_PHY phySrcBufAddr = 0 ; MI_PHY phyDstBufAddr = 0 ; void * pVirSrcBufAddr ; void * pVirDstBufAddr ; MI_S32 ret ; ret = MI_SYS_MMA_Alloc ( NULL , SRC_BUFF_SIZE , & phySrcBufAddr ); if ( ret != MI_SUCCESS ) { divp_ut_dbg ( \"alloc src buff failed \\n \" ); return -1 ; } ret = MI_SYS_Mmap ( phySrcBufAddr , SRC_BUFF_SIZE , & pVirSrcBufAddr , TRUE ); if ( ret != MI_SUCCESS ) { MI_SYS_MMA_Free ( phySrcBufAddr ); divp_ut_dbg ( \"mmap src buff failed \\n \" ); return -1 ; } ret = MI_SYS_MMA_Alloc ( NULL , DST_BUFF_SIZE , & phyDstBufAddr ); if ( ret != MI_SUCCESS ) { MI_SYS_Munmap ( pVirSrcBufAddr , SRC_BUFF_SIZE ); MI_SYS_MMA_Free ( phySrcBufAddr ); divp_ut_dbg ( \"alloc dst buff failed \\n \" ); return -1 ; } ret = MI_SYS_Mmap ( phyDstBufAddr , DST_BUFF_SIZE , & pVirDstBufAddr , TRUE ); if ( ret != MI_SUCCESS ) { MI_SYS_Munmap ( pVirSrcBufAddr , SRC_BUFF_SIZE ); MI_SYS_MMA_Free ( phySrcBufAddr ); MI_SYS_MMA_Free ( phyDstBufAddr ); divp_ut_dbg ( \"mmap dst buff failed \\n \" ); return -1 ; } \u914d\u7f6eMI_DIVP\u53c2\u6570\uff1a MI_DIVP_DirectBuf_t stSrcBuf ; MI_DIVP_DirectBuf_t stDstBuf ; MI_SYS_WindowRect_t stSrcCrop ; stSrcBuf . ePixelFormat = E_MI_SYS_PIXEL_FRAME_YUV_SEMIPLANAR_420 ; stSrcBuf . u32Width = SRC_WIDTH ; stSrcBuf . u32Height = SRC_HEIGHT ; stSrcBuf . u32Stride [ 0 ] = SRC_BUFF_STRIDE ; stSrcBuf . u32Stride [ 1 ] = SRC_BUFF_STRIDE ; stSrcBuf . phyAddr [ 0 ] = phySrcBufAddr ; stSrcBuf . phyAddr [ 1 ] = stSrcBuf . phyAddr [ 0 ] + SRC_BUFF_STRIDE * SRC_HEIGHT ; stDstBuf . ePixelFormat = E_MI_SYS_PIXEL_FRAME_YUV_SEMIPLANAR_420 ; stDstBuf . u32Width = DST_WIDTH ; stDstBuf . u32Height = DST_HEIGHT ; stDstBuf . u32Stride [ 0 ] = DST_BUFF_STRIDE ; stDstBuf . u32Stride [ 1 ] = DST_BUFF_STRIDE ; stDstBuf . phyAddr [ 0 ] = phyDstBufAddr ; stDstBuf . phyAddr [ 1 ] = stDstBuf . phyAddr [ 0 ] + DST_BUFF_STRIDE * DST_HEIGHT ; stSrcCrop . u16X = CROP_X ; stSrcCrop . u16Y = CROP_Y ; stSrcCrop . u16Width = CROP_W ; stSrcCrop . u16Height = CROP_H ; \u8f93\u5165\u56fe\u7247\u6570\u636e\uff1a int ReadSize = 0 ; FILE * input_fp ; input_fp = fopen ( \"./1920x1080_yuv420.yuv\" , \"r\" ); if ( ! input_fp ) { divp_ut_dbg ( \"open file[%s] failed \\n \" , \"./1920x1080_yuv420.yuv\" ); return -1 ; } for ( Idx = 0 ; Idx < SRC_HEIGHT * 3 / 2 ; Idx ++ ) { ReadSize = fread ( pVirSrcBufAddr + Idx * SRC_BUFF_STRIDE , 1 , SRC_WIDTH , input_fp ); if ( ReadSize != width ) { return -1 ; } } \u4f7f\u7528MI_DIVP\u7f29\u653e\u56fe\u7247\uff1a MI_DIVP_StretchBuf(&stSrcBuf, &stSrcCrop, &stDstBuf) \u5c06MI_DIVP\u7684\u8f93\u51fa\u7269\u7406\u5730\u5740\u8d4b\u7ed9MI_IPU\u7684\u8f93\u5165Tensor\u7269\u7406\u5730\u5740\uff1a InputTensorVector . astArrayTensors [ 0 ]. phyTensorAddr [ 0 ] = stDstBuf . phyAddr [ 0 ]; InputTensorVector . astArrayTensors [ 0 ]. phyTensorAddr [ 1 ] = stDstBuf . phyAddr [ 1 ]; \u4e4b\u540e\u53ef\u4ee5\u8fdb\u884c\u6a21\u578b\u63a8\u6f14\u3002 \u4f7f\u7528\u96f6\u62f7\u8d1d\u6570\u636e\uff0c\u4e0d\u9700\u8981\u518d\u91ca\u653e\u8f93\u5165Tensor\uff0c\u5373\u4e0d\u518d\u8c03\u7528MI_IPU_PutInputTensors\u51fd\u6570\u3002 11.6. \u6a21\u578b\u63a8\u6f14 \u00b6 ret = MI_IPU_Invoke ( u32ChannelID , & InputTensorVector , & OutputTensorVector ); if ( ret != MI_SUCCESS ) { MI_IPU_DestroyCHN ( u32ChannelID ); MI_IPU_DestroyDevice (); std :: cerr << \"IPU invoke failed!!\" << std :: endl ; } \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID InputTensorVector\uff1a\u8f93\u5165IPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 OutputTensorVector\uff1a\u8f93\u51faIPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b 11.7. \u91ca\u653e\u8f93\u5165\u8f93\u51faTensor \u00b6 MI_IPU_PutInputTensors ( u32ChannelID , & InputTensorVector ); MI_IPU_PutOutputTensors ( u32ChannelID , & OutputTensorVector ); \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID InputTensorVector\uff1a\u8f93\u5165IPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 OutputTensorVector\uff1a\u8f93\u51faIPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b 11.8. \u9500\u6bc1IPU\u901a\u9053 \u00b6 MI_IPU_DestroyCHN ( u32ChannelID ); \u8f93\u5165\u53c2\u6570\uff1a s32Channel\uff1a\u521b\u5efaIPU\u901a\u9053\u7684ID \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b 11.9. \u9500\u6bc1IPU\u8bbe\u5907 \u00b6 MI_IPU_DestroyDevice (); \u8f93\u5165\u53c2\u6570\uff1a \u7a7a \u8f93\u51fa\u53c2\u6570\uff1aMI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b 11.10. Py_dla\u63a5\u53e3\u4f7f\u7528 \u00b6 Py_dla\u662fPython\u5c01\u88c5\u540e\u7684MI_IPU\u63a5\u53e3\uff0c\u53ef\u4ee5\u5728\u5f00\u53d1\u677f\u4e0a\u5feb\u901f\u5904\u7406\u6a21\u578b\u8f93\u51fa\u6570\u636e\uff0c\u65b9\u4fbf\u5feb\u901f\u9a8c\u8bc1\u6a21\u578b\u7684\u51c6\u786e\u6027\u3002 \u5df2\u51c6\u5907\u597dARM\u7684Python3.8\u7684\u5e93\uff0c\u5b58\u653e\u5728 sdk/verify/mi_demo/source/py_dla/Python3.8.tar.bz2 \uff0c \u4f7f\u7528\u65f6\u8bf7\u5148\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u89e3\u538b\u5230\u53ef\u4ee5mount\u5230\u5f00\u53d1\u677f\u7684\u672c\u5730\u8def\u5f84\uff1a tar -jxvf Python3.8.tar.bz2 \u5728\u5f00\u53d1\u677f\u4e2d\u8bbe\u7f6ePython3.8\u7684\u8def\u5f84\uff1a export LD_LIBRARY_PATH = path/to/Python3.8/usr/lib/: $LD_LIBRARY_PATH export PATH = path/to/Python3.8/usr/bin: $PATH \u4ee5\u4e0b\u6587\u4ef6\u4e3aPy_dla\u63a5\u53e3\u6587\u4ef6\uff0c\u53ef\u4ee5\u4f7f\u7528python\u76f4\u63a5import\u4f7f\u7528\uff1a sdk/verify/mi_demo/source/py_dla/_misim.cpython-38-arm-linux-gnueabihf.so \u5c06\u8be5\u6587\u4ef6\u4e0e\u7f16\u5199python\u811a\u672c\u653e\u5728\u540c\u4e00\u8def\u5f84\u4e0b\uff0c\u5373\u53ef\u4f7f\u7528Py_dla\u3002\u4e0b\u9762\u8bf4\u660epython\u4e2d\u8c03\u7528 _misim.cpython-38-arm-linux-gnueabihf.so \u4ee5\u53caAPI\u4e3e\u4f8b\u4ecb\u7ecd\u3002 \u4f7f\u7528\u5982\u4e0b\u65b9\u5f0f\uff0c\u52a0\u8f7d _misim.cpython-38-arm-linux-gnueabihf.so \uff1a from _misim import MI_simulator from _misim import IPU_GetOfflineModeStaticInfo from _misim import IPU_CreateDevice API\u4e3e\u4f8b\u8bf4\u660e\uff1a IPU_GetOfflineModeStaticInfo\uff1a\u83b7\u53d6\u6a21\u578bvariable buffer size >>> model_path = 'mobilenet_v1_fixed.sim_sgsimg.img' >>> variable_buffer_size = IPU_GetOfflineModeStaticInfo ( model_path ) IPU_CreateDevice\uff1a\u521b\u5efaIPU\u8bbe\u5907\uff08\u5982\u679c\u6709\u591a\u4e2a\u6a21\u578b\u9700\u8981\u8fd0\u884c\uff0c\u9009\u53d6\u6700\u5927\u7684variable_buffer_size \u521b\u5efaIPU\u8bbe\u5907\uff09 >>> IPU_CreateDevice ( variable_buffer_size ) \u53ef\u9009\u53c2\u6570\uff1a ipu_firmware\uff08\u7528\u6765\u6307\u5b9aipu_firmware.bin\u7684\u8def\u5f84\uff0c\u9ed8\u8ba4\u4e3a/config/dla/ipu_firmware.bin\uff09 >>> IPU_CreateDevice ( variable_buffer_size , '/path/to/ipu_firmware' ) MI_simulator\uff1a\u521b\u5efa\u6a21\u578b\u5b9e\u4f8b >>> model = MI_simulator ( model_path ) \u83b7\u53d6\u6a21\u578b\u8f93\u5165\u4fe1\u606f >>> in_details = model . get_input_details () >>> print ( in_details ) [{ 'name' : 'input' , 'index' : 0 , 'dtype' : < class ' numpy . uint8 '>, ' shape ': array([ 1, 224, 224, 3])}] \u83b7\u53d6\u6a21\u578b\u8f93\u51fa\u4fe1\u606f >>> out_details = model . get_output_details () >>> print ( out_details ) [{ 'name' : 'MobilenetV2/Predictions/Reshape_1' , 'index' : 0 , 'dtype' : < class ' numpy . float32 '>, ' shape ': array([ 1, 1001])}] \u7ed9\u7b2c0\u4e2aindex\u8f93\u5165\u6570\u636e\uff08img_data\u4e3a\u4e0e\u8f93\u5165shape\u3001dtype\u4e00\u81f4\u7684numpy.ndarray\u6570\u636e model . set_input ( in_details [ 0 ][ 'index' ], img_data ) \u6a21\u578b\u524d\u5411\u63a8\u6f14 model . invoke () \u83b7\u53d6\u7b2c0\u4e2aindex\u7684\u8f93\u51fa\uff08\u8f93\u51fa\u4e3anumpy.ndarray\uff09\uff0c\u5efa\u8bae\u4f7f\u7528numpy\u7684copy()\u65b9\u6cd5 >>> output0 = model . get_output ( out_details [ 0 ][ 'index' ]) \u83b7\u53d6\u7b2c1\u4e2aindex\u7684\u8f93\u51fa\uff0c\u4f7f\u7528numpy\u7684copy()\u65b9\u6cd5\uff0c\u62f7\u8d1d\u5185\u5b58\u5230\u65b0\u7684\u5185\u5b58\u91cc >>> output1 = model . get_output ( out_details [ 1 ][ 'index' ]) . copy ()","title":"Running Offline Network Model On Development Board"},{"location":"module/User_Guide/IPU100/Running_Offline_Network_Model_On_Development_Board.html#111-ipu","text":"MI_S32 IPUCreateDevice ( char * pFirmwarePath , MI_U32 u32VarBufSize ) { MI_S32 s32Ret = MI_SUCCESS ; MI_IPU_DevAttr_t stDevAttr ; stDevAttr . u32MaxVariableBufSize = u32VarBufSize ; stDevAttr . u32YUV420_W_Pitch_Alignment = 16 ; stDevAttr . u32YUV420_H_Pitch_Alignment = 2 ; stDevAttr . u32XRGB_W_Pitch_Alignment = 16 ; s32Ret = MI_IPU_CreateDevice ( & stDevAttr , NULL , pFirmwarePath , 0 ); return s32Ret ; } \u8f93\u5165\u53c2\u6570\uff1a ```ini pFirmwarePath\uff1aFirmware\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u4f20NULL\u65f6\u4f1a\u8c03\u7528/config/dla/ipu_firmware.bin u32VarBufSize\uff1a\u6a21\u578b\u5185\u90e8Tensor\u4f7f\u7528\u7684memory\u7684\u6700\u5927\u5927\u5c0f ``` u32VarBufSize\u83b7\u53d6\u65b9\u6cd5\u5982\u4e0b \uff1a \u65b9\u6cd5 1 : \u53ef\u4ee5\u901a\u8fc7 parse_net\u5de5\u5177\u83b7\u53d6 parse_net\u5de5\u5177\u8def\u5f84 \uff1a SGS_IPU_SDK / bin / parse_net \u4f7f\u7528\u65f6\u76f4\u63a5\u5728 parse_net\u547d\u4ee4\u540e\u52a0\u4e0a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8def\u5f84\u5373\u53ef \uff0c\u53ef\u53c2\u8003\u4ee5\u4e0b\u547d\u4ee4\uff1a . / parse_net xxx_fixed . sim | grep Variable \u8f93\u51fa\uff1a | |--> SubGraph [ 0 ] : Variable buffer 0xd2f00 @ 0x82f3b40 . \u5176\u4e2d 0xd2f00 \u5411 2 \u5bf9\u9f50\u540e\u4e3a u32VarBufSize\u5927\u5c0f \u3002 \u5728 C / C ++ \u4e2d\uff0c\u5411 2 \u5bf9\u9f50\u7684\u5b9a\u4e49\u4e3a\uff1a #define alignment_up(a, size) ((a + size - 1) & (~(size - 1))) \u6240\u4ee5 u32VarBufSize\u4e3a864000 \u3002 \u65b9\u6cd5 2 : \u4f7f\u7528 MI\u7684API\u83b7\u53d6 MI_IPU_OfflineModelStaticInfo_t OfflineModelInfo ; ret = MI_IPU_GetOfflineModeStaticInfo ( NULL , modelFilePath , & OfflineModelInfo ); if ( ret != MI_SUCCESS ) { std :: cerr << \"get model variable buffer size failed!\" << std :: endl ; return ; } u32VarBufSize = OfflineModelInfo . u32VariableBufferSize \u5982\u679c\u6709\u591a\u4e2a\u6a21\u578b\u9700\u8981\u8fd0\u884c\uff0c\u9009\u53d6\u6700\u5927\u7684 u32VarBufSize\u521b\u5efaIPU\u8bbe\u5907\u5373\u53ef \u3002 \u8f93\u51fa\u53c2\u6570\uff1aMI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b","title":"11.1. \u521b\u5efaIPU\u8bbe\u5907"},{"location":"module/User_Guide/IPU100/Running_Offline_Network_Model_On_Development_Board.html#112-ipu","text":"MI_S32 IPUCreateChannel ( MI_U32 * u32Channel , char * pModelImage ) { MI_S32 s32Ret ; MI_IPUChnAttr_t stChnAttr ; //create channel memset ( & stChnAttr , 0 , sizeof ( stChnAttr )); stChnAttr . u32InputBufDepth = 2 ; stChnAttr . u32OutputBufDepth = 2 ; return MI_IPU_CreateCHN ( u32Channel , & stChnAttr , NULL , pModelImage ); } MI_U32 u32Channel ; ret = IPUCreateChannel ( & u32ChannelID , \u201c . / mobilenet_v1_fixed . img \u201d ); \u8f93\u5165\u53c2\u6570\uff1a s32Channel\uff1a\u521b\u5efaIPU\u901a\u9053\u7684ID pModelImage\uff1a\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u79bb\u7ebf \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b","title":"11.2. \u521b\u5efaIPU\u901a\u9053"},{"location":"module/User_Guide/IPU100/Running_Offline_Network_Model_On_Development_Board.html#113-tensor","text":"MI_IPU_SubNet_InputOutputDesc_t desc ; MI_IPU_GetInOutTensorDesc ( u32ChannelID , & desc ); \u8f93\u5165\u53c2\u6570\uff1a u32ChnId\uff1aIPU\u901a\u9053\u7684ID pstDesc\uff1aIPU\u5b50\u7f51\u7edc\u8f93\u5165/\u8f93\u51fa\u63cf\u8ff0\u7ed3\u6784\u4f53 \u8f93\u51fa\u53c2\u6570\uff1aMI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b","title":"11.3. \u83b7\u53d6\u6a21\u578b\u8f93\u5165\u8f93\u51faTensor\u5c5e\u6027"},{"location":"module/User_Guide/IPU100/Running_Offline_Network_Model_On_Development_Board.html#114-tensor","text":"MI_IPU_TensorVector_t InputTensorVector ; MI_IPU_TensorVector_t OutputTensorVector ; MI_IPU_GetInputTensors ( u32ChannelID , & InputTensorVector ); MI_IPU_GetOutputTensors ( u32ChannelID , & OutputTensorVector ); \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID InputTensorVector\uff1a\u8f93\u5165IPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 OutputTensorVector\uff1a\u8f93\u51faIPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b","title":"11.4. \u83b7\u53d6\u8f93\u5165\u8f93\u51faTensor"},{"location":"module/User_Guide/IPU100/Running_Offline_Network_Model_On_Development_Board.html#115","text":"","title":"11.5. \u6a21\u578b\u6570\u636e\u8f93\u5165"},{"location":"module/User_Guide/IPU100/Running_Offline_Network_Model_On_Development_Board.html#1151","text":"\u5c06\u6570\u636e\u62f7\u8d1d\u81f3\u6a21\u578b\u8f93\u5165Tensor\u7684\u865a\u62df\u5730\u5740\uff0c\u62f7\u8d1d\u5b8c\u6210\u540e\u8c03\u7528MI_SYS_FlushInvCache\uff1a MI_U8 * pdata = ( MI_U8 * ) InputTensorVector . astArrayTensors [ 0 ]. ptTensorData [ 0 ]; MI_U8 * pSrc = ( MI_U8 * ) Input_Data ; for ( int i = 0 ; i < imageSize ; i ++ ) { * ( pdata + i ) = * ( pSrc + i ); } MI_SYS_FlushInvCache ( pdata , imageSize ); \u6a21\u578b\u4e2dinput formats\u8bbe\u7f6e\u4e3a BGR \u6216\u8005 RGB \u65f6\uff0cstride\u4e0d\u8981\u505aalignment\uff0c\u505a\u4e86alignment\u53cd\u800c\u6709\u95ee\u9898\u3002 \u6a21\u578b\u4e2dinput formats\u8bbe\u7f6e\u4e3a BGRA \u6216\u8005 RGBA \uff08A channel\u5728\u9ad8\u5730\u5740\uff09\uff0calignmet\u89c4\u5219\u662fstride = alignment_up(width*4, 16 )\u3002 input_formats\u8bbe\u7f6e\u4e3a BGRA \uff0c\u5bf9\u5e94MI_SYS_PixelFormat_e\u4e3a E_MI_SYSPIXEL_FRAME_ARGB8888 \u3002 input_formats\u8bbe\u7f6e\u4e3a RGBA \uff0c\u5bf9\u5e94MI_SYS_PixelFormat_e\u4e3a E_MI_SYSPIXEL_FRAME_ABGR8888 \u3002 input formats\u8bbe\u7f6e\u4e3a YUV_NV12 \u6216\u8005 GRAY \u65f6\uff0calignment\u89c4\u5219\u662fstride = alignment_up(width,16)\uff0cheight\u9700\u89812 alignment\u3002 input_formats\u8bbe\u7f6e\u4e3a YUV_NV12 \u6216\u8005 GRAY \u65f6\uff0c\u5bf9\u5e94MI_SYS_PixelFormat_e\u4e3a E_MI_SYSPIXEL_FRAME_YUV_SEMIPLANAR_420 \u3002","title":"11.5.1. \u62f7\u8d1d\u6570\u636e"},{"location":"module/User_Guide/IPU100/Running_Offline_Network_Model_On_Development_Board.html#1152","text":"\u5982\u679c\u4f7f\u7528MI\u7684\u5176\u4ed6\u6a21\u5757\uff0c\u4e3a\u6a21\u578b\u8f93\u5165\u505a\u597d\u4e86\u6570\u636e\u51c6\u5907\uff0c\u53ef\u4ee5\u4e0d\u7528\u62f7\u8d1d\u6570\u636e\uff0c\u76f4\u63a5\u7ed9\u4f20\u9012\u5176\u4ed6MI\u6a21\u5757\u7684\u7269\u7406\u5730\u5740\u3002 \u4ee5\u4e0b\u4ee5MI_DIVP\u6a21\u5757\u793a\u4f8b\u6a21\u578b\u8f93\u5165\u96f6\u62f7\u8d1d\u6570\u636e\uff0c\u9700\u6ce8\u610f\uff1a \u521b\u5efaIPU\u901a\u9053\u65f6\uff0c\u8f93\u5165InputBufDepth\u8bbe\u4e3a\u96f6\uff0c\u4e0d\u518d\u4f7f\u7528MI_IPU_GetInputTensors\u5206\u914d\u8f93\u5165\u7a7a\u95f4 stChnAttr.u32InputBufDepth = 0; \u7531\u4e8e\u4e0d\u4f7f\u7528MI_IPU_GetInputTensors\uff0c\u9700\u624b\u52a8\u5c06\u7f51\u7edc\u63cf\u8ff0\u7684\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u4e2a\u6570\u8d4b\u7ed9 InputTensorVector.u32TensorCount\u3002 InputTensorVector.u32TensorCount = desc.u32InputTensorCount; \u4f7f\u7528MI_DIVP\u7f29\u653e\u56fe\u7247\uff1a \u5206\u914dMI_DIVP\u7684\u7a7a\u95f4 MI_PHY phySrcBufAddr = 0 ; MI_PHY phyDstBufAddr = 0 ; void * pVirSrcBufAddr ; void * pVirDstBufAddr ; MI_S32 ret ; ret = MI_SYS_MMA_Alloc ( NULL , SRC_BUFF_SIZE , & phySrcBufAddr ); if ( ret != MI_SUCCESS ) { divp_ut_dbg ( \"alloc src buff failed \\n \" ); return -1 ; } ret = MI_SYS_Mmap ( phySrcBufAddr , SRC_BUFF_SIZE , & pVirSrcBufAddr , TRUE ); if ( ret != MI_SUCCESS ) { MI_SYS_MMA_Free ( phySrcBufAddr ); divp_ut_dbg ( \"mmap src buff failed \\n \" ); return -1 ; } ret = MI_SYS_MMA_Alloc ( NULL , DST_BUFF_SIZE , & phyDstBufAddr ); if ( ret != MI_SUCCESS ) { MI_SYS_Munmap ( pVirSrcBufAddr , SRC_BUFF_SIZE ); MI_SYS_MMA_Free ( phySrcBufAddr ); divp_ut_dbg ( \"alloc dst buff failed \\n \" ); return -1 ; } ret = MI_SYS_Mmap ( phyDstBufAddr , DST_BUFF_SIZE , & pVirDstBufAddr , TRUE ); if ( ret != MI_SUCCESS ) { MI_SYS_Munmap ( pVirSrcBufAddr , SRC_BUFF_SIZE ); MI_SYS_MMA_Free ( phySrcBufAddr ); MI_SYS_MMA_Free ( phyDstBufAddr ); divp_ut_dbg ( \"mmap dst buff failed \\n \" ); return -1 ; } \u914d\u7f6eMI_DIVP\u53c2\u6570\uff1a MI_DIVP_DirectBuf_t stSrcBuf ; MI_DIVP_DirectBuf_t stDstBuf ; MI_SYS_WindowRect_t stSrcCrop ; stSrcBuf . ePixelFormat = E_MI_SYS_PIXEL_FRAME_YUV_SEMIPLANAR_420 ; stSrcBuf . u32Width = SRC_WIDTH ; stSrcBuf . u32Height = SRC_HEIGHT ; stSrcBuf . u32Stride [ 0 ] = SRC_BUFF_STRIDE ; stSrcBuf . u32Stride [ 1 ] = SRC_BUFF_STRIDE ; stSrcBuf . phyAddr [ 0 ] = phySrcBufAddr ; stSrcBuf . phyAddr [ 1 ] = stSrcBuf . phyAddr [ 0 ] + SRC_BUFF_STRIDE * SRC_HEIGHT ; stDstBuf . ePixelFormat = E_MI_SYS_PIXEL_FRAME_YUV_SEMIPLANAR_420 ; stDstBuf . u32Width = DST_WIDTH ; stDstBuf . u32Height = DST_HEIGHT ; stDstBuf . u32Stride [ 0 ] = DST_BUFF_STRIDE ; stDstBuf . u32Stride [ 1 ] = DST_BUFF_STRIDE ; stDstBuf . phyAddr [ 0 ] = phyDstBufAddr ; stDstBuf . phyAddr [ 1 ] = stDstBuf . phyAddr [ 0 ] + DST_BUFF_STRIDE * DST_HEIGHT ; stSrcCrop . u16X = CROP_X ; stSrcCrop . u16Y = CROP_Y ; stSrcCrop . u16Width = CROP_W ; stSrcCrop . u16Height = CROP_H ; \u8f93\u5165\u56fe\u7247\u6570\u636e\uff1a int ReadSize = 0 ; FILE * input_fp ; input_fp = fopen ( \"./1920x1080_yuv420.yuv\" , \"r\" ); if ( ! input_fp ) { divp_ut_dbg ( \"open file[%s] failed \\n \" , \"./1920x1080_yuv420.yuv\" ); return -1 ; } for ( Idx = 0 ; Idx < SRC_HEIGHT * 3 / 2 ; Idx ++ ) { ReadSize = fread ( pVirSrcBufAddr + Idx * SRC_BUFF_STRIDE , 1 , SRC_WIDTH , input_fp ); if ( ReadSize != width ) { return -1 ; } } \u4f7f\u7528MI_DIVP\u7f29\u653e\u56fe\u7247\uff1a MI_DIVP_StretchBuf(&stSrcBuf, &stSrcCrop, &stDstBuf) \u5c06MI_DIVP\u7684\u8f93\u51fa\u7269\u7406\u5730\u5740\u8d4b\u7ed9MI_IPU\u7684\u8f93\u5165Tensor\u7269\u7406\u5730\u5740\uff1a InputTensorVector . astArrayTensors [ 0 ]. phyTensorAddr [ 0 ] = stDstBuf . phyAddr [ 0 ]; InputTensorVector . astArrayTensors [ 0 ]. phyTensorAddr [ 1 ] = stDstBuf . phyAddr [ 1 ]; \u4e4b\u540e\u53ef\u4ee5\u8fdb\u884c\u6a21\u578b\u63a8\u6f14\u3002 \u4f7f\u7528\u96f6\u62f7\u8d1d\u6570\u636e\uff0c\u4e0d\u9700\u8981\u518d\u91ca\u653e\u8f93\u5165Tensor\uff0c\u5373\u4e0d\u518d\u8c03\u7528MI_IPU_PutInputTensors\u51fd\u6570\u3002","title":"11.5.2.\u96f6\u62f7\u8d1d\u6570\u636e"},{"location":"module/User_Guide/IPU100/Running_Offline_Network_Model_On_Development_Board.html#116","text":"ret = MI_IPU_Invoke ( u32ChannelID , & InputTensorVector , & OutputTensorVector ); if ( ret != MI_SUCCESS ) { MI_IPU_DestroyCHN ( u32ChannelID ); MI_IPU_DestroyDevice (); std :: cerr << \"IPU invoke failed!!\" << std :: endl ; } \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID InputTensorVector\uff1a\u8f93\u5165IPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 OutputTensorVector\uff1a\u8f93\u51faIPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b","title":"11.6. \u6a21\u578b\u63a8\u6f14"},{"location":"module/User_Guide/IPU100/Running_Offline_Network_Model_On_Development_Board.html#117-tensor","text":"MI_IPU_PutInputTensors ( u32ChannelID , & InputTensorVector ); MI_IPU_PutOutputTensors ( u32ChannelID , & OutputTensorVector ); \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID InputTensorVector\uff1a\u8f93\u5165IPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 OutputTensorVector\uff1a\u8f93\u51faIPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b","title":"11.7. \u91ca\u653e\u8f93\u5165\u8f93\u51faTensor"},{"location":"module/User_Guide/IPU100/Running_Offline_Network_Model_On_Development_Board.html#118-ipu","text":"MI_IPU_DestroyCHN ( u32ChannelID ); \u8f93\u5165\u53c2\u6570\uff1a s32Channel\uff1a\u521b\u5efaIPU\u901a\u9053\u7684ID \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b","title":"11.8. \u9500\u6bc1IPU\u901a\u9053"},{"location":"module/User_Guide/IPU100/Running_Offline_Network_Model_On_Development_Board.html#119-ipu","text":"MI_IPU_DestroyDevice (); \u8f93\u5165\u53c2\u6570\uff1a \u7a7a \u8f93\u51fa\u53c2\u6570\uff1aMI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b","title":"11.9. \u9500\u6bc1IPU\u8bbe\u5907"},{"location":"module/User_Guide/IPU100/Running_Offline_Network_Model_On_Development_Board.html#1110-py_dla","text":"Py_dla\u662fPython\u5c01\u88c5\u540e\u7684MI_IPU\u63a5\u53e3\uff0c\u53ef\u4ee5\u5728\u5f00\u53d1\u677f\u4e0a\u5feb\u901f\u5904\u7406\u6a21\u578b\u8f93\u51fa\u6570\u636e\uff0c\u65b9\u4fbf\u5feb\u901f\u9a8c\u8bc1\u6a21\u578b\u7684\u51c6\u786e\u6027\u3002 \u5df2\u51c6\u5907\u597dARM\u7684Python3.8\u7684\u5e93\uff0c\u5b58\u653e\u5728 sdk/verify/mi_demo/source/py_dla/Python3.8.tar.bz2 \uff0c \u4f7f\u7528\u65f6\u8bf7\u5148\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u89e3\u538b\u5230\u53ef\u4ee5mount\u5230\u5f00\u53d1\u677f\u7684\u672c\u5730\u8def\u5f84\uff1a tar -jxvf Python3.8.tar.bz2 \u5728\u5f00\u53d1\u677f\u4e2d\u8bbe\u7f6ePython3.8\u7684\u8def\u5f84\uff1a export LD_LIBRARY_PATH = path/to/Python3.8/usr/lib/: $LD_LIBRARY_PATH export PATH = path/to/Python3.8/usr/bin: $PATH \u4ee5\u4e0b\u6587\u4ef6\u4e3aPy_dla\u63a5\u53e3\u6587\u4ef6\uff0c\u53ef\u4ee5\u4f7f\u7528python\u76f4\u63a5import\u4f7f\u7528\uff1a sdk/verify/mi_demo/source/py_dla/_misim.cpython-38-arm-linux-gnueabihf.so \u5c06\u8be5\u6587\u4ef6\u4e0e\u7f16\u5199python\u811a\u672c\u653e\u5728\u540c\u4e00\u8def\u5f84\u4e0b\uff0c\u5373\u53ef\u4f7f\u7528Py_dla\u3002\u4e0b\u9762\u8bf4\u660epython\u4e2d\u8c03\u7528 _misim.cpython-38-arm-linux-gnueabihf.so \u4ee5\u53caAPI\u4e3e\u4f8b\u4ecb\u7ecd\u3002 \u4f7f\u7528\u5982\u4e0b\u65b9\u5f0f\uff0c\u52a0\u8f7d _misim.cpython-38-arm-linux-gnueabihf.so \uff1a from _misim import MI_simulator from _misim import IPU_GetOfflineModeStaticInfo from _misim import IPU_CreateDevice API\u4e3e\u4f8b\u8bf4\u660e\uff1a IPU_GetOfflineModeStaticInfo\uff1a\u83b7\u53d6\u6a21\u578bvariable buffer size >>> model_path = 'mobilenet_v1_fixed.sim_sgsimg.img' >>> variable_buffer_size = IPU_GetOfflineModeStaticInfo ( model_path ) IPU_CreateDevice\uff1a\u521b\u5efaIPU\u8bbe\u5907\uff08\u5982\u679c\u6709\u591a\u4e2a\u6a21\u578b\u9700\u8981\u8fd0\u884c\uff0c\u9009\u53d6\u6700\u5927\u7684variable_buffer_size \u521b\u5efaIPU\u8bbe\u5907\uff09 >>> IPU_CreateDevice ( variable_buffer_size ) \u53ef\u9009\u53c2\u6570\uff1a ipu_firmware\uff08\u7528\u6765\u6307\u5b9aipu_firmware.bin\u7684\u8def\u5f84\uff0c\u9ed8\u8ba4\u4e3a/config/dla/ipu_firmware.bin\uff09 >>> IPU_CreateDevice ( variable_buffer_size , '/path/to/ipu_firmware' ) MI_simulator\uff1a\u521b\u5efa\u6a21\u578b\u5b9e\u4f8b >>> model = MI_simulator ( model_path ) \u83b7\u53d6\u6a21\u578b\u8f93\u5165\u4fe1\u606f >>> in_details = model . get_input_details () >>> print ( in_details ) [{ 'name' : 'input' , 'index' : 0 , 'dtype' : < class ' numpy . uint8 '>, ' shape ': array([ 1, 224, 224, 3])}] \u83b7\u53d6\u6a21\u578b\u8f93\u51fa\u4fe1\u606f >>> out_details = model . get_output_details () >>> print ( out_details ) [{ 'name' : 'MobilenetV2/Predictions/Reshape_1' , 'index' : 0 , 'dtype' : < class ' numpy . float32 '>, ' shape ': array([ 1, 1001])}] \u7ed9\u7b2c0\u4e2aindex\u8f93\u5165\u6570\u636e\uff08img_data\u4e3a\u4e0e\u8f93\u5165shape\u3001dtype\u4e00\u81f4\u7684numpy.ndarray\u6570\u636e model . set_input ( in_details [ 0 ][ 'index' ], img_data ) \u6a21\u578b\u524d\u5411\u63a8\u6f14 model . invoke () \u83b7\u53d6\u7b2c0\u4e2aindex\u7684\u8f93\u51fa\uff08\u8f93\u51fa\u4e3anumpy.ndarray\uff09\uff0c\u5efa\u8bae\u4f7f\u7528numpy\u7684copy()\u65b9\u6cd5 >>> output0 = model . get_output ( out_details [ 0 ][ 'index' ]) \u83b7\u53d6\u7b2c1\u4e2aindex\u7684\u8f93\u51fa\uff0c\u4f7f\u7528numpy\u7684copy()\u65b9\u6cd5\uff0c\u62f7\u8d1d\u5185\u5b58\u5230\u65b0\u7684\u5185\u5b58\u91cc >>> output1 = model . get_output ( out_details [ 1 ][ 'index' ]) . copy ()","title":"11.10. Py_dla\u63a5\u53e3\u4f7f\u7528"},{"location":"module/User_Guide/IPU100/Simulate.html","text":"5.1. \u4f7f\u7528\u65b9\u6cd5 \u00b6 Simulator\u5de5\u5177\u7684\u4f4d\u7f6e\u5728 SGS_IPU_SDK/Scripts/calibrator/simulator.py \u3002 \u8be5\u5de5\u5177\u5177\u6709\u4ee5\u4e0b\u529f\u80fd\uff1a \u5bf9\u5206\u7c7b\u7f51\u7edc\u6570\u636e\u96c6\u9a8c\u8bc1\uff1b \u5bf9\u68c0\u6d4b\u7f51\u7edc\u6570\u636e\u96c6\u9a8c\u8bc1\uff08\u652f\u6301COCO\u6570\u636e\u96c6\uff09\uff1b \u5bf9\u5355\u5f20\u56fe\u7247\u9884\u6d4b\uff1b \u7ed8\u5236\u5355\u5f20\u56fe\u7247\u76ee\u6807\u68c0\u6d4b\u7ed3\u679c\uff1b \u5728SGS_IPU_SDK \u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK source cfg_env.sh \u8fdb\u5165\u5230\u8be5\u5de5\u5177\u76ee\u5f55\uff0c\u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a \u6d4b\u8bd5ILSVRC\u6570\u636e\u96c6\uff0c\u5e76\u8fd4\u56de\u6a21\u578b\u7cbe\u5ea6\u7ed3\u679c\uff1a python3 simulator.py \\ -i ~/SGS_Models/resource/classify/ilsvrc2012_val_set100/ \\ -m ~/SGS_Models/tensorflow/mobilenet_v2/mobilenet_v2_float.sim \\ -l ~/SGS_Models/resource/classify/tensorflow_labels.txt \\ -c Classification \\ -t Float \\ -n mobilenet_v2 \\ --num_process 20 \u6216\u8005\u53ef\u4ee5\u4f7f\u7528\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\uff1a python3 simulator.py \\ -i ~/SGS_Models/resource/classify/ilsvrc2012_val_set100/file.list \\ -m ~/SGS_Models/tensorflow/mobilenet_v2/mobilenet_v2_float.sim \\ -l ~/SGS_Models/resource/classify/tensorflow_labels.txt \\ -c Classification \\ -t Float \\ -n mobilenet_v2 \\ --num_process 20 \u6d4b\u8bd5COCO2017\u6570\u636e\u96c6\uff0c\u5e76\u8fd4\u56de\u6a21\u578b\u68c0\u6d4b\u7ed3\u679c\uff1a python3 simulator.py \\ -i ~/SGS_Models/resource/detection/coco2017_val_set100 \\ -m ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1_float.sim \\ -l ~/SGS_Models/resource/detection/coco2017_val_set100.json \\ -c Detection \\ -t Float \\ -n ssd_mobilenet_v1 \\ --num_process 10 \u6216\u8005\u53ef\u4ee5\u4f7f\u7528\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\uff1a python3 simulator.py \\ -i ~/SGS_Models/resource/detection/coco2017_val_set100/file.list \\ -m ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1_float.sim \\ -l ~/SGS_Models/resource/detection/coco2017_val_set100.json \\ -c Detection \\ -t Float \\ -n ssd_mobilenet_v1 \\ --num_process 10 \u6d4b\u8bd5\u5355\u5f20\u56fe\u7247\uff0c\u5e76\u5c06\u68c0\u6d4b\u7ed3\u679c\u7ed8\u5236\u5728\u56fe\u7247\u4e0a\uff0c\u4fdd\u5b58\u5230 ./results/ \u6587\u4ef6\u5939\u4e0b\uff1a python3 simulator.py \\ -i ~/SGS_Models/resource/detection/coco2017_val_set100/000000567877.jpg \\ -m ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1_float.sim \\ -c Detection \\ -t Float \\ -n ssd_mobilenet_v1 \\ --draw_result ./results \u5bf9\u8be5\u5de5\u5177\u53c2\u6570\u7684\u5177\u4f53\u8bf4\u660e\u5982\u4e0b\u3002 5.1.1 \u5fc5\u9009\u53c2\u6570 \u00b6 -i , --image : \u56fe\u7247\u6587\u4ef6 / \u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84 / \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u3002 -m , --model : \u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 -c , --category : \u6a21\u578b\u7684\u7c7b\u522b\uff0c\u4e3b\u8981\u6709Classification / Detection / Unknown\u3002 Classification : \u6a21\u578b\u67091\u4e2a\u8f93\u51fa\uff0c\u4f1a\u6839\u636e\u8f93\u51fa\u6392\u5e8f\u8f93\u51fa\u5206\u6570\u7531\u9ad8\u81f3\u4f4e\u7684\u524d5\u4e2a\u3002 Detection : \u6a21\u578b\u67094\u4e2a\u8f93\u51fa\uff0c\u4f1a\u6839\u636e\u8f93\u51fa\u8f6c\u6362\u4e3a\u8f93\u5165\u56fe\u7247\u7684bbox\u4f4d\u7f6e\u4ee5\u53ca\u7c7b\u522b\u3002\u53ea\u652f\u6301SigmaStar\u540e\u5904\u7406\u7b97\u5b50 [SigmaStar\u540e\u5904\u7406\u6a21\u5757]\u3002\u5176\u4ed6\u540e\u5904\u7406\u8bf7\u4f7f\u7528Unknown\u3002 Unknown : \u6a21\u578b\u8f93\u51fa\u4e0d\u5c5e\u4e8e\u4e0a\u8ff0\u4e24\u79cd\u7c7b\u578b\uff0c\u4f1a\u8f93\u51fa\u5168\u90e8\u7684Tensor\u6570\u503c\u3002 -t , --type : \u6a21\u578b\u7684\u6570\u636e\u7c7b\u578b\uff1a Float : \u6d6e\u70b9\u6a21\u578b\u3002 Fixed : \u5b9a\u70b9\u5728\u7ebf\u6a21\u578b\u3002 Offline : \u5b9a\u70b9\u79bb\u7ebf\u6a21\u578b\u3002 Please Note: \u4e0d\u52a0-n/--preprocess\u53c2\u6570\u65f6\uff0c-i/--image\u4e0d\u80fd\u7ed9\u56fe\u7247\u6216\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\u3002 -i/--image\u53c2\u6570\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\u65f6\uff1a \u7f51\u7edc\u6a21\u578b\u4e3a\u5355\u8f93\u5165\u65f6\uff1a ~/SGS_IPU_SDK/image_test/2007000364.jpg ~/SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp ... \u7f51\u7edc\u6a21\u578b\u4e3a\u591a\u8f93\u5165\u65f6\uff1a ~/SGS_IPU_SDK/image_test/2007000364.jpg,~/SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp ~/SGS_IPU_SDK/image_test/2007000365.jpg,~/SGS_IPU_SDK/image_test/ILSVRC2012_test_00000003.bmp ... 5.1.2 \u53ef\u9009\u53c2\u6570 \u00b6 -l , --label : \u6570\u636e\u96c6\u7684\u6807\u7b7e\u6587\u4ef6\u8def\u5f84 / \u56fe\u7247\u6587\u5b57\u63cf\u8ff0\u7684\u6807\u7b7e\u3002 -n , --preprocess : \u6a21\u578b\u540d\u79f0\uff0c\u4e0e\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\u76f8\u5173\uff0c\u8be6\u89c1 [3.2. \u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5]\u3002 \u4e5f\u53ef\u4ee5\u5b8c\u6210\u524d\u5904\u7406\u6587\u4ef6\u914d\u7f6e\u540e\uff0c\u7ed9\u5b9a\u524d\u5904\u7406\u6587\u4ef6\u8def\u5f84\u3002\u4e0d\u52a0\u8be5\u53c2\u6570\uff0c\u56fe\u7247\u53c2\u6570\u9700\u8981\u7ed9\u539f\u59cb\u6570\u636e\uff0c\u53ef\u91c7\u7528--save_input\u4fdd\u5b58\u56fe\u7247\u6570\u636e\u540e\uff0c\u6839\u636e\u8be5\u683c\u5f0f\u5236\u5b9a\u5176\u4ed6\u7684\u539f\u59cb\u6570\u636e\u3002 \u6ce8\u610f\u4e8b\u9879 \u82e5\u6a21\u578b\u4e3a \u591a\u8f93\u5165 \u65f6\uff0c -n,--preprocess \u53c2\u6570\u7528\u6cd5\u9700\u8981\u591a\u4e2a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4f8b\u5982 -n preprocess1.py,preprocess2.py \u6216\u8005 --preprocess preprocess1.py,preprocess2.py --tool : sgs_simulator\u6587\u4ef6\u8def\u5f84\u3002 --skip_garbage : Fixed\u548cOffline\u6a21\u578b\u8f93\u51fa\u7ed3\u679c\u8df3\u8fc7\u65e0\u7528\u6570\u636e\u3002 --dump_rawdata : \u4fdd\u5b58Fixed\u548cOffline\u6a21\u578b\u8f93\u5165\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u6587\u4ef6\u540d\u4e3a\u56fe\u7247\u540d + .bin\uff0c\u4fdd\u5b58\u5728\u5f53\u524d\u8def\u5f84\u3002 --num_process : \u8fdb\u7a0b\u6570\uff0c\u8fd0\u884c\u540c\u65f6\u8fd0\u884c\u7684\u8fdb\u7a0b\u6570\u3002\uff08\u53ef\u9009\u53c2\u6570\uff0c\u4e0d\u52a0\u8be5\u53c2\u6570\u9ed8\u8ba4\u4e3a\u5355\u7ebf\u7a0b\uff09\u9a8c\u8bc1\u6570\u636e\u96c6\u5fc5\u987b\u52a0\u6b64\u53c2\u6570\u4e14\u8fdb\u7a0b\u6570 > 1\u3002 --draw_result : \u7ed8\u5236\u76ee\u6807\u68c0\u6d4b\u7f51\u7edc\u9009\u6846\u7ed3\u679c\uff0c\u53c2\u6570\u4e3a\u7ed3\u679c\u4fdd\u5b58\u6587\u4ef6\u5939\u8def\u5f84\uff08\u6587\u4ef6\u5939\u4e0d\u5b58\u5728\u4f1a\u81ea\u52a8\u521b\u5efa\uff09\u548c\u753b\u6846\u7684\u9608\u503c\uff0c\u4f7f\u7528\u9017\u53f7( , )\u5206\u9694\u4fdd\u5b58\u8def\u5f84\u4e0e\u9608\u503c\u3002\u8f93\u5165\u9608\u503c\u753b\u51fa\u5927\u4e8e\u9608\u503c\u7684\u68c0\u6d4b\u7ed3\u679c\uff0c\u4e0d\u8f93\u5165\u9608\u503c\u5219\u753b\u51fa\u5168\u90e8\u68c0\u6d4b\u7ed3\u679c\u3002 --continue_run : \u63a5\u7740\u4e0a\u6b21\u6570\u636e\u96c6\u5269\u4e0b\u7684\u90e8\u5206\u8fd0\u884c\u3002 --save_input : \u4fdd\u5b58simulator \u524d\u5904\u7406\u540e\u7684\u6587\u4ef6\uff0c\u9ed8\u8ba4\u4e0d\u4fdd\u5b58\u3002\u6587\u4ef6\u4e3a\u6587\u672c\u6587\u4ef6\uff0c\u4f1a\u5728\u8fd0\u884c\u8def\u5f84\u4e0b\u521b\u5efa\u6587\u4ef6\u5939tmp_image\uff0c\u6587\u4ef6\u4fdd\u5b58\u5728 ./tmp_image/imagename \u56fe\u7247\u540d\u3002 5.1.3 \u6ce8\u610f\u4e8b\u9879 \u00b6 simulator\u5de5\u5177\u4f1a\u5bfb\u627e\u7cfb\u7edf\u53d8\u91cf\u4ece\u800c\u83b7\u5f97\u5bf9\u5e94\u9636\u6bb5\u4efb\u52a1\u6240\u9700\u5de5\u5177\u8def\u5f84\uff0c\u56e0\u6b64\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u53c2\u6570-t/--tool\u4e0d\u7528\u6307\u5b9a\u76f8\u5173\u5de5\u5177\u7684\u4f4d\u7f6e\u3002 simulator\u5de5\u5177\u6bcf\u6b21\u8fd0\u884c\u7ed3\u675f\u540e\u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u521b\u5efalog\u76ee\u5f55\uff0clog\u76ee\u5f55\u4e0b\u7684output\u6587\u4ef6\u5939\uff0c\u5b58\u653e\u6a21\u578b\u63a8\u6f14\u7684\u7ed3\u679c\u3002 \u5f53 -i/--image \u7684\u53c2\u6570\u4e3a\u5355\u5f20\u56fe\u7247\u7684\u8def\u5f84\u65f6\uff0csimulator\u53ea\u5bf9\u8be5\u56fe\u7247\u63a8\u6f14\uff1b\u5f53 -i/--image \u7684\u53c2\u6570\u4e3a\u56fe\u7247\u6587\u4ef6\u5939\u7684\u8def\u5f84\u65f6\uff0csimulator\u4f1a\u5bf9\u6587\u4ef6\u5939\u5185\u7684\u56fe\u7247\u5168\u90e8\u63a8\u6f14\uff0c\u6b64\u65f6\u589e\u52a0--num_process\uff08\u53c2\u6570 > 1\uff09\uff0c\u53ef\u4ee5\u5f00\u542f\u591a\u8fdb\u7a0b\u63a8\u6f14\u3002 \u5f53 -l/--label \u7684\u53c2\u6570\u4e3a\u6570\u636e\u96c6\u6807\u7b7e\u6587\u4ef6\u8def\u5f84\u65f6\u5fc5\u987b\u4f7f\u7528--num_process\u53c2\u6570\uff0c\u6570\u636e\u96c6\u9a8c\u8bc1\u652f\u6301ImageNet\uff08Top1\u3001Top5\uff09\u3001COCO\u76ee\u6807\u68c0\u6d4b(mmAP)\uff1b\u5f53 -l/--label \u53c2\u6570\u4e3a\u56fe\u7247\u6587\u5b57\u63cf\u8ff0\u6807\u7b7e\u65f6\uff0c\u4e0d\u80fd\u4f7f\u7528\u9009\u9879--num_process\u3002 -c/--category \u7684\u53c2\u6570\u9009\u62e9Unknown\u65f6\uff0c\u6a21\u578b\u8f93\u51faTensor\u7684\u7684\u6700\u540e\u4e00\u4e2a\u7ef4\u5ea6\u4f1a\u5411\u4e0a\u63098\u4e2a\u6570\u5bf9\u9f50\uff1a layer46 - conv Tensor : { tensor dim : 4 , Original shape :[ 1 13 13 255 ], Alignment shape :[ 1 13 13 256 ] The following tensor data shape is alignment shape . tensor data : ... \u5bf9\u4e8eFixed\u548cOffline\u7684\u6a21\u578b\uff0c\u5f97\u5230\u6709\u7528\u6570\u636e\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0bPython\u4ee3\u7801\uff08\u5047\u8bbe\u53d8\u91cfData \u662f\u7ef4\u5ea6\u4e3a[1, 13, 13, 256]\u7684np.array\u6570\u636e\uff0c\u771f\u6b63\u6709\u7528\u7684\u6570\u636eUseful_Data\u7ef4\u5ea6\u4e3a[1, 13, 13, 255]\uff09\uff1a Useful_Data = Data [:, :, :, : 255 ] 5.2. calibrator_custom.simulator \u00b6 calibrator_custom.simulator\u662f\u57fa\u4e8ePython\u7684\u5feb\u901f\u91cf\u5316\u548c\u8f6c\u6362\u6a21\u578b\u7684\u6a21\u5757\u3002\u4f7f\u7528calibrator_custom.simulator\u53ef\u4ee5\u66f4\u65b9\u4fbf\u7075\u6d3b\u7684\u5bf9\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u8fdb\u884c\u91cf\u5316\u548c\u8f6c\u6362\u3002calibrator_custom.simulator\u5305\u542b3\u79cd\uff0c\u7528\u4e8e\u89e3\u6790\u4e0d\u540c\u9636\u6bb5\u7684\u6a21\u578b\u3002 calibrator_custom.float_simulator \u7528\u4e8e\u89e3\u6790float\u6a21\u578b calibrator_custom.fixed_simulator \u7528\u4e8e\u89e3\u6790fixed\u6a21\u578b calibrator_custom.offline_simulator \u7528\u4e8e\u89e3\u6790offline\u6a21\u578b \u76ee\u524d\u57fa\u4e8e\u7684docker\u73af\u5883\uff0c\u63d0\u4f9bPython3.7\u7684\u9884\u7f16\u8bd1\u7684Python\u6a21\u5757\u3002\u7531\u4e8efixed\u6a21\u578b\u548coffline\u6a21\u578b\u4f7f\u752832\u4f4d\u8fd0\u884c\u5e93\uff0c\u56e0\u6b64\u9700\u4f7f\u752832\u4f4dPython3.7\u73af\u5883\u8fd0\u884c\u3002Docker\u4e2d\u5df2\u66f4\u65b032\u4f4dPython3.7\u73af\u5883\uff0c\u4f7f\u7528python32\u5373\u53ef\u8fd0\u884c\u3002float\u6a21\u578b\u4f7f\u752864\u4f4dPython\u8fd0\u884c\u3002 \u4e0b\u9762\u57fa\u4e8ecalibrator_custom.float_simulator\uff0c\u8bf4\u660e\u4f7f\u7528\u65b9\u6cd5\u548c\u76f8\u5173API\u63a5\u53e3\uff1a import calibrator_custom model_path = './mobilenet_v2_float.sim' model = calibrator_custom . float_simulator ( model_path ) calibrator_custom.float_simulator \u4f7f\u7528calibrator_custom.float_simulator\u65f6\uff0c\u9700\u8981\u7ed9\u5b9afloat.sim\u6a21\u578b\u7684\u8def\u5f84\uff0c\u7528\u4e8e\u521b\u5efafloat_simulator\u7684\u5b9e\u4f8b\u3002\u53c2\u6570\u7ed9\u5b9a\u9519\u8bef\uff0c\u5c06\u65e0\u6cd5\u6210\u529f\u521b\u5efafloat_simulator\u5b9e\u4f8b\uff0c\u5e76\u8fd4\u56deValueError\u3002 5.2.1 calibrator_custom.simulator\u65b9\u6cd5 \u00b6 get_input_details : \u8fd4\u56de\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u4fe1\u606f\uff08list\uff09 Float\u6a21\u578b\u8fd4\u56de\u5982\u4e0b\uff1a input_details = model . get_input_details () print ( input_details ) [ { 'name' : 'sub_7' , 'shape' : array ([ 1 , 513 , 513 , 3 ], dtype = int32 ), 'dtype' : < class ' numpy . float32 '>, 'index' : 0 } ] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578b\u8f93\u5165\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a index : \u8f93\u5165Tensor\u5e8f\u53f7 name : \u8f93\u5165Tensor\u540d\u79f0 shape : \u8f93\u5165Tensor\u7684\u5f62\u72b6 dtype : \u8f93\u5165Tensor\u7684\u6570\u636e\u7c7b\u578b Fixed\u548cOffline\u6a21\u578b\u8fd4\u56de\u5982\u4e0b\uff1a >>> input_details = model . get_input_details () >>> print ( input_details ) [ { 'index' : 0 , 'shape' : array ([ 1 , 513 , 513 , 3 ]), 'dtype' : < class ' numpy . uint8 '>, 'name' : 'sub_7' , 'input_formats' : 'RGB' , 'training_input_formats' : 'RGB' } ] get_output_detail \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578b\u8f93\u5165\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a index : \u8f93\u5165Tensor\u5e8f\u53f7 name : \u8f93\u5165Tensor\u540d\u79f0 shape : \u8f93\u5165Tensor\u7684\u5f62\u72b6 dtype : \u8f93\u5165Tensor\u7684\u6570\u636e\u7c7b\u578b input_formats : \u7f51\u7edc\u6a21\u578b\u5b9e\u9645\u8fd0\u884c\u65f6\u7684\u56fe\u7247\u8f93\u5165\u683c\u5f0f training_input_formats : \u7f51\u7edc\u6a21\u578b\u8bad\u7ec3\u662f\u7684\u56fe\u7247\u8f93\u5165\u683c\u5f0f \u8fd4\u56de\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u4fe1\u606f\uff08list\uff09 Float\u6a21\u578b\u8fd4\u56de\u5982\u4e0b\uff1a >>> output_details = model . get_output_details () >>> print ( output_details ) [ { 'name' : 'MobilenetV2/Conv/Conv2D' , 'shape' : array ([ 1 , 257 , 257 , 30 ], dtype = int32 ), 'dtype' : < class ' numpy . float32 '>, 'index' : 0 } ] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578b\u8f93\u51fa\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a index : \u8f93\u51faTensor\u5e8f\u53f7 name : \u8f93\u51faTensor\u540d\u79f0 shape : \u8f93\u51faTensor\u7684\u5f62\u72b6 dtype : \u8f93\u51faTensor\u7684\u6570\u636e\u7c7b\u578b Fixed\u548cOffline\u6a21\u578b\u8fd4\u56de\u5982\u4e0b\uff1a >>> output_details = model . get_output_details () >>> print ( output_details ) [ { 'index' : 0 , 'shape' : array ([ 1 , 257 , 257 , 30 ]), 'name' : 'MobilenetV2/Conv/Conv2D' , 'dtype' : < class ' numpy . int16 '>, 'quantization' : ( 0.00013832777040079236 , 0 ) } ] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578b\u8f93\u51fa\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a index : \u8f93\u51faTensor\u5e8f\u53f7 name : \u8f93\u51faTensor\u540d\u79f0 shape : \u8f93\u51faTensor\u7684\u5f62\u72b6 dtype : \u8f93\u51faTensor\u7684\u6570\u636e\u7c7b\u578b quantization : \u8f93\u51faTensor\u7684scale\u548czero_point\uff08\u9700\u5c06\u6a21\u578b\u8f93\u51faTensor\u4e58scale\u5f97\u5230\u6d6e\u70b9\u6570\uff09 set_input : \u8bbe\u7f6e\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u6570\u636e >>> model . set_input ( 0 , img_data ) \u8f93\u5165\u6570\u636e\uff0c0\u4e3a\u8f93\u5165Tensor\u7684index\uff0c\u53ef\u4ee5\u5728get_input_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230\u3002img_data\u662f\u4e0emodel\u8f93\u5165shape\u548cdtype\u76f8\u540c\u7684numpy.ndarray\u683c\u5f0f\u6570\u636e\uff0c\u9519\u8bef\u7684shape\u6216dtype\uff0c\u5c06\u5bfc\u81f4set_input\u8fd4\u56deValueError\u3002\u5982\u679c\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u53ef\u4ee5\u591a\u6b21\u8c03\u7528set_input\uff0c\u6839\u636eget_input_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230index\u8bbe\u7f6e\u5bf9\u5e94Tensor\u7684\u8f93\u5165\u6570\u636e\u3002 invoke \u6a21\u578b\u8fd0\u884c\u4e00\u6b21 >>> model . invoke () \u8c03\u7528invoke\u524d\u8bf7\u5148\u4f7f\u7528set_input\u8bbe\u7f6e\u8f93\u5165\u6570\u636e\uff0c\u672a\u8c03\u7528set_input\u76f4\u63a5\u8c03\u7528invoke\u4f1a\u8fd4\u56deValueError\u3002 get_output \u83b7\u53d6\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u6570\u636e >>> result = model . get_output ( 0 ) \u83b7\u53d6\u8f93\u51fa\u6570\u636e\uff0c0\u4e3a\u8f93\u51faTensor\u7684index\uff0c\u53ef\u4ee5\u5728get_output_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230\uff0c\u8fd4\u56denumpy.ndarray\u683c\u5f0f\u8f93\u51fa\u6570\u636e\u3002\u5982\u679c\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u51fa\uff0c\u53ef\u4ee5\u591a\u6b21\u8c03\u7528get_output\uff0c\u6839\u636eget_output_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230index\u83b7\u53d6\u5bf9\u5e94Tensor\u7684\u8f93\u51fa\u6570\u636e\u3002 \u5047\u8bbe\u6a21\u578b\u8f93\u51fa\u7684shape\u4e3a[1, 257, 257, 30] Float\u6a21\u578b\u67e5\u770b\u7ed3\u679c\u7684shape >>> print ( result . shape ) ( 1 , 257 , 257 , 30 ) Fixed\u548cOffline\u6a21\u578b\u67e5\u770b\u7ed3\u679cshape >>> print ( result . shape ) ( 1 , 257 , 257 , 32 ) Fixed\u548cOffline\u6a21\u578b\u8f93\u51faTensor\u56e0\u4e3a\u6a21\u62df\u4e86\u5728\u786c\u4ef6\u7684\u50a8\u5b58\u65b9\u5f0f\uff0cTensor\u7684\u6700\u540e\u4e00\u4e2a\u7ef4\u5ea6\u4f1a\u5411\u4e0a\u5bf9\u9f50\uff0c\u56e0\u6b64\u8f93\u51fa\u7684\u7ef4\u5ea6\u4e3aTensor\u5bf9\u9f50\u7684\u7ef4\u5ea6\u3002\u6700\u540e\u5bf9\u9f50\u7684\u6570\u636e\u662f\u65e0\u7528\u6570\u636e\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u65b9\u6cd5\u53bb\u9664\uff1a >>> result = result [ ... , : output_details [ 0 ][ 'shape' ][ - 1 ]] >>> print ( result . shape ) ( 1 , 257 , 257 , 30 ) get_tensor_details \u8fd4\u56de\u7f51\u7edc\u6a21\u578b\u6bcf\u4e2aTensor\u7684\u4fe1\u606f\uff08list\uff09 Float\u6a21\u578b\u8fd4\u56de\u5982\u4e0b\uff1a >>> tensor_details = model . get_tensor_details () >>> print ( tensor_details ) [ { 'name' : 'MobilenetV2/Conv/Conv2D' , 'shape' : array ([ 1 , 257 , 257 , 30 ], dtype = int32 ), 'dtype' : 'FLOAT32' , 'qtype' : 'INT16' }, { 'name' : 'MobilenetV2/Conv/Conv2D_bias' , 'shape' : array ( [ 2 , 30 ], dtype = int32 ), 'dtype' : 'FLOAT32' , 'qtype' : 'INT16' }, { 'name' : 'MobilenetV2/Conv/weights/read' , 'shape' : array ( [ 30 , 3 , 3 , 3 ], dtype = int32 ), 'dtype' : 'FLOAT32' , 'qtype' : 'INT8' }, { 'name' : 'sub_7' , 'shape' : array ([ 1 , 513 , 513 , 3 ], dtype = int32 ), 'dtype' : 'FLOAT32' , 'qtype' : 'UINT8' } ] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578bTensor\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a name : Tensor\u540d\u79f0 shape : Tensor\u7684\u5f62\u72b6 dtype : Tensor\u7684\u6570\u636e\u7c7b\u578b qtype : \u5b9a\u70b9\u6a21\u578b\u8be5Tensor\u53ef\u80fd\u7684\u6570\u636e\u7c7b\u578b\uff08quantization type\uff09 Fixed\u548cOffline\u6a21\u578b\u5982\u679cinput_config.ini\u4e2d[OUTPUT_CONFIG]\u7684dequantizations\u914d\u7f6e\u4e3aFALSE\u65f6\u8fd4\u56de\u5982\u4e0b\uff1a >>> tensor_details = model . get_tensor_details () >>> print ( tensor_details ) [ { 'shape' : array ([ 1 , 257 , 257 , 30 ]), 'quantization' : [( 0.00013832777040079236 , 0 )], 'min' : [ - 4.230099201202393 ], 'max' : [ 4.532586097717285 ], 'name' : 'MobilenetV2/Conv/Conv2D' , 'dtype' : 'INT16' }, { 'shape' : array ([ 2 , 30 ]), 'quantization' : [], 'min' : [ 0.0 ], 'max ' : [ 1.0 ], 'name' : 'MobilenetV2/Conv/Conv2D_bias' , 'dtype' : 'INT16' }, { 'shape' : array ([ 30 , 3 , 3 , 3 ]), 'quantization' : [( 0.004813921172171831 , 0 )], 'min' : [ - 0.5498989820480347 ], 'max' : [ 0.6113680005073547 ], 'name' : 'MobilenetV2/Conv/weights/read' , 'dtype' : 'INT8' }, { 'shape' : array ([ 1 , 513 , 513 , 3 ]), 'quantization' : [( 0.007843137718737125 , 128 )], 'min' : [ - 1 . 0 ], 'max' : [ 1.0 ], 'name' : 'sub_7' , 'dtype' : 'UINT8' } ] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578bTensor\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a name : Tensor\u540d\u79f0 shape : Tensor\u7684\u5f62\u72b6 dtype : Tensor\u7684\u6570\u636e\u7c7b\u578b quantization : Tensor\u7684scale\u548czero_point min : Tensor\u7684\u6700\u5c0f\u503c max : Tensor\u7684\u6700\u5927\u503c 5.2.2 calibrator_custom.SIM_Simulator \u00b6 \u5bf9\u4e8e\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u540c\u65f6\u8f6c\u6362\u65f6\uff0c\u63d0\u4f9bcalibrator_custom.SIM_Simulator\uff0c\u65b9\u4fbf\u8fdb\u884c\u7b80\u5355\u5b9a\u4e49\u540e\uff0c\u7edf\u4e00\u8fd0\u884c\u3002 calibrator_custom.SIM_Simulator\u662f\u5df2\u7ecf\u5b9e\u73b0\u597d\u7684class\uff0c\u5f53\u4e2d\u53ea\u6709forward\u65b9\u6cd5\u672a\u5b9e\u73b0\uff0c\u4f7f\u7528\u65f6\u4ec5\u9700\u5b9e\u73b0\u8be5\u65b9\u6cd5\uff0c\u5373\u53ef\u8f6c\u6362\u5b8c\u6210\u3002 \u4e0b\u9762\u4ee5 SGS_IPU_SDK/Scripts/examples/sim_simulator.py \u4e3a\u4f8b\uff0c\u8bf4\u660ecalibrator_custom.SIM_Simulator\u7684\u4f7f\u7528\u65b9\u6cd5\uff1a import calibrator_custom class Net ( calibrator_custom . SIM_Simulator ): def __init__ ( self ): super () . __init__ () self . model = calibrator_custom . fixed_simulator ( model_path ) def forward ( self , x ): out_details = self . model . get_output_details () self . model . set_input ( 0 , x ) self . model . invoke () result_list = [] for idx in range ( len ( out_details )): result = self . model . get_output ( idx ) # for Fixed and Offline model if result . shape [ - 1 ] != out_details [ idx ][ 'shape' ][ - 1 ]: result = result [ ... , : out_details [ idx ][ 'shape' ][ - 1 ]] if out_details [ idx ][ 'dtype' ] == np . int16 : scale , _ = out_details [ idx ][ 'quantization' ] result = np . dot ( result , scale ) result_list . append ( result ) return result_list \u5b9a\u4e49forward\u65b9\u6cd5\uff0cforward\u7684\u53c2\u6570\u4e3a\u6a21\u578b\u8f93\u5165\uff0c\u5982\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u53ef\u589e\u52a0forward\u7684\u53c2\u6570\u3002 \u521b\u5efacalibrator_custom.SIM_Simulator\u7684\u5b9e\u4f8b net = Net () \u8c03\u7528calibrator_custom.SIM_Simulator\u5b9e\u4f8b\u7684\u65b9\u6cd5 result = net ( img_gen , num_process = 4 ) \u8c03\u7528calibrator_custom.SIM_Simulator\u5b9e\u4f8b\uff0c\u9700\u8981\u7ed9\u5b9a\u8f93\u5165\u56fe\u7247\u7684numpy.ndarray\u6216\u8005\u56fe\u7247\u751f\u6210\u5668\u3002 \u5f53num_process\u5927\u4e8e1\u65f6\uff0cimg_gen\u5fc5\u987b\u4e3a\u56fe\u7247\u751f\u6210\u5668\u3002 \u56fe\u7247\u751f\u6210\u5668\uff08img_gen\uff09 \u4e3a\u65b9\u4fbf\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u8f6c\u6362\u6a21\u578b\uff0c\u901a\u8fc7\u751f\u6210\u5668\u65b9\u4fbf\u7ec4\u7ec7\u8f93\u5165\u56fe\u7247\u7684\u5e8f\u5217\u3002\u5982\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u751f\u6210\u5668\u5e94\u8be5\u6309\u7167\u5b9a\u4e49forward\u65f6\u7684\u8f93\u5165\u987a\u5e8f\uff0c\u8fd4\u56de\u6709\u591a\u4e2anumpy.ndarray\u7684list\u3002 calibrator_custom.utils.image_preprocess_func\u4f7f\u7528\u9884\u5148\u5b9a\u4e49\u597d\u7684\u524d\u5904\u7406\u65b9\u6cd5 preprocess_func = calibrator_custom . utils . image_preprocess_func ( model_name ) def image_generator ( folder_path , preprocess_func , norm ): images = [ os . path . join ( folder_path , img ) for img in os . listdir ( folder_path )] for image in images : img = preprocess_func ( image , norm ) yield [ img ] img_gen = image_generator ( './images' , preprocess_func , False )","title":"Simulate"},{"location":"module/User_Guide/IPU100/Simulate.html#51","text":"Simulator\u5de5\u5177\u7684\u4f4d\u7f6e\u5728 SGS_IPU_SDK/Scripts/calibrator/simulator.py \u3002 \u8be5\u5de5\u5177\u5177\u6709\u4ee5\u4e0b\u529f\u80fd\uff1a \u5bf9\u5206\u7c7b\u7f51\u7edc\u6570\u636e\u96c6\u9a8c\u8bc1\uff1b \u5bf9\u68c0\u6d4b\u7f51\u7edc\u6570\u636e\u96c6\u9a8c\u8bc1\uff08\u652f\u6301COCO\u6570\u636e\u96c6\uff09\uff1b \u5bf9\u5355\u5f20\u56fe\u7247\u9884\u6d4b\uff1b \u7ed8\u5236\u5355\u5f20\u56fe\u7247\u76ee\u6807\u68c0\u6d4b\u7ed3\u679c\uff1b \u5728SGS_IPU_SDK \u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK source cfg_env.sh \u8fdb\u5165\u5230\u8be5\u5de5\u5177\u76ee\u5f55\uff0c\u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a \u6d4b\u8bd5ILSVRC\u6570\u636e\u96c6\uff0c\u5e76\u8fd4\u56de\u6a21\u578b\u7cbe\u5ea6\u7ed3\u679c\uff1a python3 simulator.py \\ -i ~/SGS_Models/resource/classify/ilsvrc2012_val_set100/ \\ -m ~/SGS_Models/tensorflow/mobilenet_v2/mobilenet_v2_float.sim \\ -l ~/SGS_Models/resource/classify/tensorflow_labels.txt \\ -c Classification \\ -t Float \\ -n mobilenet_v2 \\ --num_process 20 \u6216\u8005\u53ef\u4ee5\u4f7f\u7528\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\uff1a python3 simulator.py \\ -i ~/SGS_Models/resource/classify/ilsvrc2012_val_set100/file.list \\ -m ~/SGS_Models/tensorflow/mobilenet_v2/mobilenet_v2_float.sim \\ -l ~/SGS_Models/resource/classify/tensorflow_labels.txt \\ -c Classification \\ -t Float \\ -n mobilenet_v2 \\ --num_process 20 \u6d4b\u8bd5COCO2017\u6570\u636e\u96c6\uff0c\u5e76\u8fd4\u56de\u6a21\u578b\u68c0\u6d4b\u7ed3\u679c\uff1a python3 simulator.py \\ -i ~/SGS_Models/resource/detection/coco2017_val_set100 \\ -m ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1_float.sim \\ -l ~/SGS_Models/resource/detection/coco2017_val_set100.json \\ -c Detection \\ -t Float \\ -n ssd_mobilenet_v1 \\ --num_process 10 \u6216\u8005\u53ef\u4ee5\u4f7f\u7528\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\uff1a python3 simulator.py \\ -i ~/SGS_Models/resource/detection/coco2017_val_set100/file.list \\ -m ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1_float.sim \\ -l ~/SGS_Models/resource/detection/coco2017_val_set100.json \\ -c Detection \\ -t Float \\ -n ssd_mobilenet_v1 \\ --num_process 10 \u6d4b\u8bd5\u5355\u5f20\u56fe\u7247\uff0c\u5e76\u5c06\u68c0\u6d4b\u7ed3\u679c\u7ed8\u5236\u5728\u56fe\u7247\u4e0a\uff0c\u4fdd\u5b58\u5230 ./results/ \u6587\u4ef6\u5939\u4e0b\uff1a python3 simulator.py \\ -i ~/SGS_Models/resource/detection/coco2017_val_set100/000000567877.jpg \\ -m ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1_float.sim \\ -c Detection \\ -t Float \\ -n ssd_mobilenet_v1 \\ --draw_result ./results \u5bf9\u8be5\u5de5\u5177\u53c2\u6570\u7684\u5177\u4f53\u8bf4\u660e\u5982\u4e0b\u3002","title":"5.1. \u4f7f\u7528\u65b9\u6cd5"},{"location":"module/User_Guide/IPU100/Simulate.html#511","text":"-i , --image : \u56fe\u7247\u6587\u4ef6 / \u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84 / \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u3002 -m , --model : \u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 -c , --category : \u6a21\u578b\u7684\u7c7b\u522b\uff0c\u4e3b\u8981\u6709Classification / Detection / Unknown\u3002 Classification : \u6a21\u578b\u67091\u4e2a\u8f93\u51fa\uff0c\u4f1a\u6839\u636e\u8f93\u51fa\u6392\u5e8f\u8f93\u51fa\u5206\u6570\u7531\u9ad8\u81f3\u4f4e\u7684\u524d5\u4e2a\u3002 Detection : \u6a21\u578b\u67094\u4e2a\u8f93\u51fa\uff0c\u4f1a\u6839\u636e\u8f93\u51fa\u8f6c\u6362\u4e3a\u8f93\u5165\u56fe\u7247\u7684bbox\u4f4d\u7f6e\u4ee5\u53ca\u7c7b\u522b\u3002\u53ea\u652f\u6301SigmaStar\u540e\u5904\u7406\u7b97\u5b50 [SigmaStar\u540e\u5904\u7406\u6a21\u5757]\u3002\u5176\u4ed6\u540e\u5904\u7406\u8bf7\u4f7f\u7528Unknown\u3002 Unknown : \u6a21\u578b\u8f93\u51fa\u4e0d\u5c5e\u4e8e\u4e0a\u8ff0\u4e24\u79cd\u7c7b\u578b\uff0c\u4f1a\u8f93\u51fa\u5168\u90e8\u7684Tensor\u6570\u503c\u3002 -t , --type : \u6a21\u578b\u7684\u6570\u636e\u7c7b\u578b\uff1a Float : \u6d6e\u70b9\u6a21\u578b\u3002 Fixed : \u5b9a\u70b9\u5728\u7ebf\u6a21\u578b\u3002 Offline : \u5b9a\u70b9\u79bb\u7ebf\u6a21\u578b\u3002 Please Note: \u4e0d\u52a0-n/--preprocess\u53c2\u6570\u65f6\uff0c-i/--image\u4e0d\u80fd\u7ed9\u56fe\u7247\u6216\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\u3002 -i/--image\u53c2\u6570\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\u65f6\uff1a \u7f51\u7edc\u6a21\u578b\u4e3a\u5355\u8f93\u5165\u65f6\uff1a ~/SGS_IPU_SDK/image_test/2007000364.jpg ~/SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp ... \u7f51\u7edc\u6a21\u578b\u4e3a\u591a\u8f93\u5165\u65f6\uff1a ~/SGS_IPU_SDK/image_test/2007000364.jpg,~/SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp ~/SGS_IPU_SDK/image_test/2007000365.jpg,~/SGS_IPU_SDK/image_test/ILSVRC2012_test_00000003.bmp ...","title":"5.1.1   \u5fc5\u9009\u53c2\u6570"},{"location":"module/User_Guide/IPU100/Simulate.html#512","text":"-l , --label : \u6570\u636e\u96c6\u7684\u6807\u7b7e\u6587\u4ef6\u8def\u5f84 / \u56fe\u7247\u6587\u5b57\u63cf\u8ff0\u7684\u6807\u7b7e\u3002 -n , --preprocess : \u6a21\u578b\u540d\u79f0\uff0c\u4e0e\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\u76f8\u5173\uff0c\u8be6\u89c1 [3.2. \u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5]\u3002 \u4e5f\u53ef\u4ee5\u5b8c\u6210\u524d\u5904\u7406\u6587\u4ef6\u914d\u7f6e\u540e\uff0c\u7ed9\u5b9a\u524d\u5904\u7406\u6587\u4ef6\u8def\u5f84\u3002\u4e0d\u52a0\u8be5\u53c2\u6570\uff0c\u56fe\u7247\u53c2\u6570\u9700\u8981\u7ed9\u539f\u59cb\u6570\u636e\uff0c\u53ef\u91c7\u7528--save_input\u4fdd\u5b58\u56fe\u7247\u6570\u636e\u540e\uff0c\u6839\u636e\u8be5\u683c\u5f0f\u5236\u5b9a\u5176\u4ed6\u7684\u539f\u59cb\u6570\u636e\u3002 \u6ce8\u610f\u4e8b\u9879 \u82e5\u6a21\u578b\u4e3a \u591a\u8f93\u5165 \u65f6\uff0c -n,--preprocess \u53c2\u6570\u7528\u6cd5\u9700\u8981\u591a\u4e2a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4f8b\u5982 -n preprocess1.py,preprocess2.py \u6216\u8005 --preprocess preprocess1.py,preprocess2.py --tool : sgs_simulator\u6587\u4ef6\u8def\u5f84\u3002 --skip_garbage : Fixed\u548cOffline\u6a21\u578b\u8f93\u51fa\u7ed3\u679c\u8df3\u8fc7\u65e0\u7528\u6570\u636e\u3002 --dump_rawdata : \u4fdd\u5b58Fixed\u548cOffline\u6a21\u578b\u8f93\u5165\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u6587\u4ef6\u540d\u4e3a\u56fe\u7247\u540d + .bin\uff0c\u4fdd\u5b58\u5728\u5f53\u524d\u8def\u5f84\u3002 --num_process : \u8fdb\u7a0b\u6570\uff0c\u8fd0\u884c\u540c\u65f6\u8fd0\u884c\u7684\u8fdb\u7a0b\u6570\u3002\uff08\u53ef\u9009\u53c2\u6570\uff0c\u4e0d\u52a0\u8be5\u53c2\u6570\u9ed8\u8ba4\u4e3a\u5355\u7ebf\u7a0b\uff09\u9a8c\u8bc1\u6570\u636e\u96c6\u5fc5\u987b\u52a0\u6b64\u53c2\u6570\u4e14\u8fdb\u7a0b\u6570 > 1\u3002 --draw_result : \u7ed8\u5236\u76ee\u6807\u68c0\u6d4b\u7f51\u7edc\u9009\u6846\u7ed3\u679c\uff0c\u53c2\u6570\u4e3a\u7ed3\u679c\u4fdd\u5b58\u6587\u4ef6\u5939\u8def\u5f84\uff08\u6587\u4ef6\u5939\u4e0d\u5b58\u5728\u4f1a\u81ea\u52a8\u521b\u5efa\uff09\u548c\u753b\u6846\u7684\u9608\u503c\uff0c\u4f7f\u7528\u9017\u53f7( , )\u5206\u9694\u4fdd\u5b58\u8def\u5f84\u4e0e\u9608\u503c\u3002\u8f93\u5165\u9608\u503c\u753b\u51fa\u5927\u4e8e\u9608\u503c\u7684\u68c0\u6d4b\u7ed3\u679c\uff0c\u4e0d\u8f93\u5165\u9608\u503c\u5219\u753b\u51fa\u5168\u90e8\u68c0\u6d4b\u7ed3\u679c\u3002 --continue_run : \u63a5\u7740\u4e0a\u6b21\u6570\u636e\u96c6\u5269\u4e0b\u7684\u90e8\u5206\u8fd0\u884c\u3002 --save_input : \u4fdd\u5b58simulator \u524d\u5904\u7406\u540e\u7684\u6587\u4ef6\uff0c\u9ed8\u8ba4\u4e0d\u4fdd\u5b58\u3002\u6587\u4ef6\u4e3a\u6587\u672c\u6587\u4ef6\uff0c\u4f1a\u5728\u8fd0\u884c\u8def\u5f84\u4e0b\u521b\u5efa\u6587\u4ef6\u5939tmp_image\uff0c\u6587\u4ef6\u4fdd\u5b58\u5728 ./tmp_image/imagename \u56fe\u7247\u540d\u3002","title":"5.1.2   \u53ef\u9009\u53c2\u6570"},{"location":"module/User_Guide/IPU100/Simulate.html#513","text":"simulator\u5de5\u5177\u4f1a\u5bfb\u627e\u7cfb\u7edf\u53d8\u91cf\u4ece\u800c\u83b7\u5f97\u5bf9\u5e94\u9636\u6bb5\u4efb\u52a1\u6240\u9700\u5de5\u5177\u8def\u5f84\uff0c\u56e0\u6b64\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u53c2\u6570-t/--tool\u4e0d\u7528\u6307\u5b9a\u76f8\u5173\u5de5\u5177\u7684\u4f4d\u7f6e\u3002 simulator\u5de5\u5177\u6bcf\u6b21\u8fd0\u884c\u7ed3\u675f\u540e\u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u521b\u5efalog\u76ee\u5f55\uff0clog\u76ee\u5f55\u4e0b\u7684output\u6587\u4ef6\u5939\uff0c\u5b58\u653e\u6a21\u578b\u63a8\u6f14\u7684\u7ed3\u679c\u3002 \u5f53 -i/--image \u7684\u53c2\u6570\u4e3a\u5355\u5f20\u56fe\u7247\u7684\u8def\u5f84\u65f6\uff0csimulator\u53ea\u5bf9\u8be5\u56fe\u7247\u63a8\u6f14\uff1b\u5f53 -i/--image \u7684\u53c2\u6570\u4e3a\u56fe\u7247\u6587\u4ef6\u5939\u7684\u8def\u5f84\u65f6\uff0csimulator\u4f1a\u5bf9\u6587\u4ef6\u5939\u5185\u7684\u56fe\u7247\u5168\u90e8\u63a8\u6f14\uff0c\u6b64\u65f6\u589e\u52a0--num_process\uff08\u53c2\u6570 > 1\uff09\uff0c\u53ef\u4ee5\u5f00\u542f\u591a\u8fdb\u7a0b\u63a8\u6f14\u3002 \u5f53 -l/--label \u7684\u53c2\u6570\u4e3a\u6570\u636e\u96c6\u6807\u7b7e\u6587\u4ef6\u8def\u5f84\u65f6\u5fc5\u987b\u4f7f\u7528--num_process\u53c2\u6570\uff0c\u6570\u636e\u96c6\u9a8c\u8bc1\u652f\u6301ImageNet\uff08Top1\u3001Top5\uff09\u3001COCO\u76ee\u6807\u68c0\u6d4b(mmAP)\uff1b\u5f53 -l/--label \u53c2\u6570\u4e3a\u56fe\u7247\u6587\u5b57\u63cf\u8ff0\u6807\u7b7e\u65f6\uff0c\u4e0d\u80fd\u4f7f\u7528\u9009\u9879--num_process\u3002 -c/--category \u7684\u53c2\u6570\u9009\u62e9Unknown\u65f6\uff0c\u6a21\u578b\u8f93\u51faTensor\u7684\u7684\u6700\u540e\u4e00\u4e2a\u7ef4\u5ea6\u4f1a\u5411\u4e0a\u63098\u4e2a\u6570\u5bf9\u9f50\uff1a layer46 - conv Tensor : { tensor dim : 4 , Original shape :[ 1 13 13 255 ], Alignment shape :[ 1 13 13 256 ] The following tensor data shape is alignment shape . tensor data : ... \u5bf9\u4e8eFixed\u548cOffline\u7684\u6a21\u578b\uff0c\u5f97\u5230\u6709\u7528\u6570\u636e\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0bPython\u4ee3\u7801\uff08\u5047\u8bbe\u53d8\u91cfData \u662f\u7ef4\u5ea6\u4e3a[1, 13, 13, 256]\u7684np.array\u6570\u636e\uff0c\u771f\u6b63\u6709\u7528\u7684\u6570\u636eUseful_Data\u7ef4\u5ea6\u4e3a[1, 13, 13, 255]\uff09\uff1a Useful_Data = Data [:, :, :, : 255 ]","title":"5.1.3   \u6ce8\u610f\u4e8b\u9879"},{"location":"module/User_Guide/IPU100/Simulate.html#52-calibrator_customsimulator","text":"calibrator_custom.simulator\u662f\u57fa\u4e8ePython\u7684\u5feb\u901f\u91cf\u5316\u548c\u8f6c\u6362\u6a21\u578b\u7684\u6a21\u5757\u3002\u4f7f\u7528calibrator_custom.simulator\u53ef\u4ee5\u66f4\u65b9\u4fbf\u7075\u6d3b\u7684\u5bf9\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u8fdb\u884c\u91cf\u5316\u548c\u8f6c\u6362\u3002calibrator_custom.simulator\u5305\u542b3\u79cd\uff0c\u7528\u4e8e\u89e3\u6790\u4e0d\u540c\u9636\u6bb5\u7684\u6a21\u578b\u3002 calibrator_custom.float_simulator \u7528\u4e8e\u89e3\u6790float\u6a21\u578b calibrator_custom.fixed_simulator \u7528\u4e8e\u89e3\u6790fixed\u6a21\u578b calibrator_custom.offline_simulator \u7528\u4e8e\u89e3\u6790offline\u6a21\u578b \u76ee\u524d\u57fa\u4e8e\u7684docker\u73af\u5883\uff0c\u63d0\u4f9bPython3.7\u7684\u9884\u7f16\u8bd1\u7684Python\u6a21\u5757\u3002\u7531\u4e8efixed\u6a21\u578b\u548coffline\u6a21\u578b\u4f7f\u752832\u4f4d\u8fd0\u884c\u5e93\uff0c\u56e0\u6b64\u9700\u4f7f\u752832\u4f4dPython3.7\u73af\u5883\u8fd0\u884c\u3002Docker\u4e2d\u5df2\u66f4\u65b032\u4f4dPython3.7\u73af\u5883\uff0c\u4f7f\u7528python32\u5373\u53ef\u8fd0\u884c\u3002float\u6a21\u578b\u4f7f\u752864\u4f4dPython\u8fd0\u884c\u3002 \u4e0b\u9762\u57fa\u4e8ecalibrator_custom.float_simulator\uff0c\u8bf4\u660e\u4f7f\u7528\u65b9\u6cd5\u548c\u76f8\u5173API\u63a5\u53e3\uff1a import calibrator_custom model_path = './mobilenet_v2_float.sim' model = calibrator_custom . float_simulator ( model_path ) calibrator_custom.float_simulator \u4f7f\u7528calibrator_custom.float_simulator\u65f6\uff0c\u9700\u8981\u7ed9\u5b9afloat.sim\u6a21\u578b\u7684\u8def\u5f84\uff0c\u7528\u4e8e\u521b\u5efafloat_simulator\u7684\u5b9e\u4f8b\u3002\u53c2\u6570\u7ed9\u5b9a\u9519\u8bef\uff0c\u5c06\u65e0\u6cd5\u6210\u529f\u521b\u5efafloat_simulator\u5b9e\u4f8b\uff0c\u5e76\u8fd4\u56deValueError\u3002","title":"5.2. calibrator_custom.simulator"},{"location":"module/User_Guide/IPU100/Simulate.html#521-calibrator_customsimulator","text":"get_input_details : \u8fd4\u56de\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u4fe1\u606f\uff08list\uff09 Float\u6a21\u578b\u8fd4\u56de\u5982\u4e0b\uff1a input_details = model . get_input_details () print ( input_details ) [ { 'name' : 'sub_7' , 'shape' : array ([ 1 , 513 , 513 , 3 ], dtype = int32 ), 'dtype' : < class ' numpy . float32 '>, 'index' : 0 } ] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578b\u8f93\u5165\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a index : \u8f93\u5165Tensor\u5e8f\u53f7 name : \u8f93\u5165Tensor\u540d\u79f0 shape : \u8f93\u5165Tensor\u7684\u5f62\u72b6 dtype : \u8f93\u5165Tensor\u7684\u6570\u636e\u7c7b\u578b Fixed\u548cOffline\u6a21\u578b\u8fd4\u56de\u5982\u4e0b\uff1a >>> input_details = model . get_input_details () >>> print ( input_details ) [ { 'index' : 0 , 'shape' : array ([ 1 , 513 , 513 , 3 ]), 'dtype' : < class ' numpy . uint8 '>, 'name' : 'sub_7' , 'input_formats' : 'RGB' , 'training_input_formats' : 'RGB' } ] get_output_detail \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578b\u8f93\u5165\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a index : \u8f93\u5165Tensor\u5e8f\u53f7 name : \u8f93\u5165Tensor\u540d\u79f0 shape : \u8f93\u5165Tensor\u7684\u5f62\u72b6 dtype : \u8f93\u5165Tensor\u7684\u6570\u636e\u7c7b\u578b input_formats : \u7f51\u7edc\u6a21\u578b\u5b9e\u9645\u8fd0\u884c\u65f6\u7684\u56fe\u7247\u8f93\u5165\u683c\u5f0f training_input_formats : \u7f51\u7edc\u6a21\u578b\u8bad\u7ec3\u662f\u7684\u56fe\u7247\u8f93\u5165\u683c\u5f0f \u8fd4\u56de\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u4fe1\u606f\uff08list\uff09 Float\u6a21\u578b\u8fd4\u56de\u5982\u4e0b\uff1a >>> output_details = model . get_output_details () >>> print ( output_details ) [ { 'name' : 'MobilenetV2/Conv/Conv2D' , 'shape' : array ([ 1 , 257 , 257 , 30 ], dtype = int32 ), 'dtype' : < class ' numpy . float32 '>, 'index' : 0 } ] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578b\u8f93\u51fa\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a index : \u8f93\u51faTensor\u5e8f\u53f7 name : \u8f93\u51faTensor\u540d\u79f0 shape : \u8f93\u51faTensor\u7684\u5f62\u72b6 dtype : \u8f93\u51faTensor\u7684\u6570\u636e\u7c7b\u578b Fixed\u548cOffline\u6a21\u578b\u8fd4\u56de\u5982\u4e0b\uff1a >>> output_details = model . get_output_details () >>> print ( output_details ) [ { 'index' : 0 , 'shape' : array ([ 1 , 257 , 257 , 30 ]), 'name' : 'MobilenetV2/Conv/Conv2D' , 'dtype' : < class ' numpy . int16 '>, 'quantization' : ( 0.00013832777040079236 , 0 ) } ] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578b\u8f93\u51fa\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a index : \u8f93\u51faTensor\u5e8f\u53f7 name : \u8f93\u51faTensor\u540d\u79f0 shape : \u8f93\u51faTensor\u7684\u5f62\u72b6 dtype : \u8f93\u51faTensor\u7684\u6570\u636e\u7c7b\u578b quantization : \u8f93\u51faTensor\u7684scale\u548czero_point\uff08\u9700\u5c06\u6a21\u578b\u8f93\u51faTensor\u4e58scale\u5f97\u5230\u6d6e\u70b9\u6570\uff09 set_input : \u8bbe\u7f6e\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u6570\u636e >>> model . set_input ( 0 , img_data ) \u8f93\u5165\u6570\u636e\uff0c0\u4e3a\u8f93\u5165Tensor\u7684index\uff0c\u53ef\u4ee5\u5728get_input_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230\u3002img_data\u662f\u4e0emodel\u8f93\u5165shape\u548cdtype\u76f8\u540c\u7684numpy.ndarray\u683c\u5f0f\u6570\u636e\uff0c\u9519\u8bef\u7684shape\u6216dtype\uff0c\u5c06\u5bfc\u81f4set_input\u8fd4\u56deValueError\u3002\u5982\u679c\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u53ef\u4ee5\u591a\u6b21\u8c03\u7528set_input\uff0c\u6839\u636eget_input_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230index\u8bbe\u7f6e\u5bf9\u5e94Tensor\u7684\u8f93\u5165\u6570\u636e\u3002 invoke \u6a21\u578b\u8fd0\u884c\u4e00\u6b21 >>> model . invoke () \u8c03\u7528invoke\u524d\u8bf7\u5148\u4f7f\u7528set_input\u8bbe\u7f6e\u8f93\u5165\u6570\u636e\uff0c\u672a\u8c03\u7528set_input\u76f4\u63a5\u8c03\u7528invoke\u4f1a\u8fd4\u56deValueError\u3002 get_output \u83b7\u53d6\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u6570\u636e >>> result = model . get_output ( 0 ) \u83b7\u53d6\u8f93\u51fa\u6570\u636e\uff0c0\u4e3a\u8f93\u51faTensor\u7684index\uff0c\u53ef\u4ee5\u5728get_output_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230\uff0c\u8fd4\u56denumpy.ndarray\u683c\u5f0f\u8f93\u51fa\u6570\u636e\u3002\u5982\u679c\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u51fa\uff0c\u53ef\u4ee5\u591a\u6b21\u8c03\u7528get_output\uff0c\u6839\u636eget_output_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230index\u83b7\u53d6\u5bf9\u5e94Tensor\u7684\u8f93\u51fa\u6570\u636e\u3002 \u5047\u8bbe\u6a21\u578b\u8f93\u51fa\u7684shape\u4e3a[1, 257, 257, 30] Float\u6a21\u578b\u67e5\u770b\u7ed3\u679c\u7684shape >>> print ( result . shape ) ( 1 , 257 , 257 , 30 ) Fixed\u548cOffline\u6a21\u578b\u67e5\u770b\u7ed3\u679cshape >>> print ( result . shape ) ( 1 , 257 , 257 , 32 ) Fixed\u548cOffline\u6a21\u578b\u8f93\u51faTensor\u56e0\u4e3a\u6a21\u62df\u4e86\u5728\u786c\u4ef6\u7684\u50a8\u5b58\u65b9\u5f0f\uff0cTensor\u7684\u6700\u540e\u4e00\u4e2a\u7ef4\u5ea6\u4f1a\u5411\u4e0a\u5bf9\u9f50\uff0c\u56e0\u6b64\u8f93\u51fa\u7684\u7ef4\u5ea6\u4e3aTensor\u5bf9\u9f50\u7684\u7ef4\u5ea6\u3002\u6700\u540e\u5bf9\u9f50\u7684\u6570\u636e\u662f\u65e0\u7528\u6570\u636e\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u65b9\u6cd5\u53bb\u9664\uff1a >>> result = result [ ... , : output_details [ 0 ][ 'shape' ][ - 1 ]] >>> print ( result . shape ) ( 1 , 257 , 257 , 30 ) get_tensor_details \u8fd4\u56de\u7f51\u7edc\u6a21\u578b\u6bcf\u4e2aTensor\u7684\u4fe1\u606f\uff08list\uff09 Float\u6a21\u578b\u8fd4\u56de\u5982\u4e0b\uff1a >>> tensor_details = model . get_tensor_details () >>> print ( tensor_details ) [ { 'name' : 'MobilenetV2/Conv/Conv2D' , 'shape' : array ([ 1 , 257 , 257 , 30 ], dtype = int32 ), 'dtype' : 'FLOAT32' , 'qtype' : 'INT16' }, { 'name' : 'MobilenetV2/Conv/Conv2D_bias' , 'shape' : array ( [ 2 , 30 ], dtype = int32 ), 'dtype' : 'FLOAT32' , 'qtype' : 'INT16' }, { 'name' : 'MobilenetV2/Conv/weights/read' , 'shape' : array ( [ 30 , 3 , 3 , 3 ], dtype = int32 ), 'dtype' : 'FLOAT32' , 'qtype' : 'INT8' }, { 'name' : 'sub_7' , 'shape' : array ([ 1 , 513 , 513 , 3 ], dtype = int32 ), 'dtype' : 'FLOAT32' , 'qtype' : 'UINT8' } ] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578bTensor\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a name : Tensor\u540d\u79f0 shape : Tensor\u7684\u5f62\u72b6 dtype : Tensor\u7684\u6570\u636e\u7c7b\u578b qtype : \u5b9a\u70b9\u6a21\u578b\u8be5Tensor\u53ef\u80fd\u7684\u6570\u636e\u7c7b\u578b\uff08quantization type\uff09 Fixed\u548cOffline\u6a21\u578b\u5982\u679cinput_config.ini\u4e2d[OUTPUT_CONFIG]\u7684dequantizations\u914d\u7f6e\u4e3aFALSE\u65f6\u8fd4\u56de\u5982\u4e0b\uff1a >>> tensor_details = model . get_tensor_details () >>> print ( tensor_details ) [ { 'shape' : array ([ 1 , 257 , 257 , 30 ]), 'quantization' : [( 0.00013832777040079236 , 0 )], 'min' : [ - 4.230099201202393 ], 'max' : [ 4.532586097717285 ], 'name' : 'MobilenetV2/Conv/Conv2D' , 'dtype' : 'INT16' }, { 'shape' : array ([ 2 , 30 ]), 'quantization' : [], 'min' : [ 0.0 ], 'max ' : [ 1.0 ], 'name' : 'MobilenetV2/Conv/Conv2D_bias' , 'dtype' : 'INT16' }, { 'shape' : array ([ 30 , 3 , 3 , 3 ]), 'quantization' : [( 0.004813921172171831 , 0 )], 'min' : [ - 0.5498989820480347 ], 'max' : [ 0.6113680005073547 ], 'name' : 'MobilenetV2/Conv/weights/read' , 'dtype' : 'INT8' }, { 'shape' : array ([ 1 , 513 , 513 , 3 ]), 'quantization' : [( 0.007843137718737125 , 128 )], 'min' : [ - 1 . 0 ], 'max' : [ 1.0 ], 'name' : 'sub_7' , 'dtype' : 'UINT8' } ] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578bTensor\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a name : Tensor\u540d\u79f0 shape : Tensor\u7684\u5f62\u72b6 dtype : Tensor\u7684\u6570\u636e\u7c7b\u578b quantization : Tensor\u7684scale\u548czero_point min : Tensor\u7684\u6700\u5c0f\u503c max : Tensor\u7684\u6700\u5927\u503c","title":"5.2.1   calibrator_custom.simulator\u65b9\u6cd5"},{"location":"module/User_Guide/IPU100/Simulate.html#522-calibrator_customsim_simulator","text":"\u5bf9\u4e8e\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u540c\u65f6\u8f6c\u6362\u65f6\uff0c\u63d0\u4f9bcalibrator_custom.SIM_Simulator\uff0c\u65b9\u4fbf\u8fdb\u884c\u7b80\u5355\u5b9a\u4e49\u540e\uff0c\u7edf\u4e00\u8fd0\u884c\u3002 calibrator_custom.SIM_Simulator\u662f\u5df2\u7ecf\u5b9e\u73b0\u597d\u7684class\uff0c\u5f53\u4e2d\u53ea\u6709forward\u65b9\u6cd5\u672a\u5b9e\u73b0\uff0c\u4f7f\u7528\u65f6\u4ec5\u9700\u5b9e\u73b0\u8be5\u65b9\u6cd5\uff0c\u5373\u53ef\u8f6c\u6362\u5b8c\u6210\u3002 \u4e0b\u9762\u4ee5 SGS_IPU_SDK/Scripts/examples/sim_simulator.py \u4e3a\u4f8b\uff0c\u8bf4\u660ecalibrator_custom.SIM_Simulator\u7684\u4f7f\u7528\u65b9\u6cd5\uff1a import calibrator_custom class Net ( calibrator_custom . SIM_Simulator ): def __init__ ( self ): super () . __init__ () self . model = calibrator_custom . fixed_simulator ( model_path ) def forward ( self , x ): out_details = self . model . get_output_details () self . model . set_input ( 0 , x ) self . model . invoke () result_list = [] for idx in range ( len ( out_details )): result = self . model . get_output ( idx ) # for Fixed and Offline model if result . shape [ - 1 ] != out_details [ idx ][ 'shape' ][ - 1 ]: result = result [ ... , : out_details [ idx ][ 'shape' ][ - 1 ]] if out_details [ idx ][ 'dtype' ] == np . int16 : scale , _ = out_details [ idx ][ 'quantization' ] result = np . dot ( result , scale ) result_list . append ( result ) return result_list \u5b9a\u4e49forward\u65b9\u6cd5\uff0cforward\u7684\u53c2\u6570\u4e3a\u6a21\u578b\u8f93\u5165\uff0c\u5982\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u53ef\u589e\u52a0forward\u7684\u53c2\u6570\u3002 \u521b\u5efacalibrator_custom.SIM_Simulator\u7684\u5b9e\u4f8b net = Net () \u8c03\u7528calibrator_custom.SIM_Simulator\u5b9e\u4f8b\u7684\u65b9\u6cd5 result = net ( img_gen , num_process = 4 ) \u8c03\u7528calibrator_custom.SIM_Simulator\u5b9e\u4f8b\uff0c\u9700\u8981\u7ed9\u5b9a\u8f93\u5165\u56fe\u7247\u7684numpy.ndarray\u6216\u8005\u56fe\u7247\u751f\u6210\u5668\u3002 \u5f53num_process\u5927\u4e8e1\u65f6\uff0cimg_gen\u5fc5\u987b\u4e3a\u56fe\u7247\u751f\u6210\u5668\u3002 \u56fe\u7247\u751f\u6210\u5668\uff08img_gen\uff09 \u4e3a\u65b9\u4fbf\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u8f6c\u6362\u6a21\u578b\uff0c\u901a\u8fc7\u751f\u6210\u5668\u65b9\u4fbf\u7ec4\u7ec7\u8f93\u5165\u56fe\u7247\u7684\u5e8f\u5217\u3002\u5982\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u751f\u6210\u5668\u5e94\u8be5\u6309\u7167\u5b9a\u4e49forward\u65f6\u7684\u8f93\u5165\u987a\u5e8f\uff0c\u8fd4\u56de\u6709\u591a\u4e2anumpy.ndarray\u7684list\u3002 calibrator_custom.utils.image_preprocess_func\u4f7f\u7528\u9884\u5148\u5b9a\u4e49\u597d\u7684\u524d\u5904\u7406\u65b9\u6cd5 preprocess_func = calibrator_custom . utils . image_preprocess_func ( model_name ) def image_generator ( folder_path , preprocess_func , norm ): images = [ os . path . join ( folder_path , img ) for img in os . listdir ( folder_path )] for image in images : img = preprocess_func ( image , norm ) yield [ img ] img_gen = image_generator ( './images' , preprocess_func , False )","title":"5.2.2   calibrator_custom.SIM_Simulator"},{"location":"module/User_Guide/IPU100/Special_Model_Conversion.html","text":"9.1. \u7070\u5ea6\u6a21\u578b\u8f6c\u6362\u8981\u70b9 \u00b6 \u7070\u5ea6\u6a21\u578b\uff0c\u6307\u8f93\u5165\u662f\u5355\u901a\u9053\u56fe\u7247\u7684\u6a21\u578b\uff0c\u5373\u8f93\u5165C\u7ef4\u5ea6\u4e0a\u4e3a1\u7684\u6a21\u578b\u3002 9.1.1. \u7070\u5ea6\u6a21\u578binput_config\u914d\u7f6e\u4fe1\u606f\u8981\u70b9 \u00b6 input_config.ini\u6587\u4ef6\u4f7f\u7528\u57282.2\u8282input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e\u6709\u8fc7\u4ecb\u7ecd\uff0c\u5bf9\u4e8e\u7070\u5ea6\u6a21\u578b\uff0c\u8981\u6ce8\u610f\u5982\u4e0b\u8981\u70b9\u3002 input_config.ini\u6587\u4ef6\u4e2d\u8fd9\u4e24\u4e2a\u914d\u7f6e\u5fc5\u987b\u5199\u6210 [INPUT_CONFIG] ...... training_input_formats = RGB; input_formats = GRAY; ...... \u5c06\u7070\u5ea6\u56fe\u7247\u7684\u6709\u6548\u6570\u636e\u53ea\u653e\u5728R\u901a\u9053\u4e0a\uff0c\u56e0\u6b64\u4ec5\u9700\u8bbe\u7f6eR\u901a\u9053\u7684mean\u503c\uff08mean_red\uff09 [INPUT_CONFIG] ...... mean_red = 127.5; mean_green = 0.0; mean_blue = 0.0; ;std_value parameter for image models, std_value = 1.0; 9.1.2. \u7070\u5ea6\u56fe\u7247\u8f93\u5165\u6a21\u578b\u524d\u5904\u7406\u65b9\u6cd5 \u00b6 \u7070\u5ea6\u56fe\u7247\u8f93\u5165\u7684\u524d\u5904\u7406\u65b9\u6cd5\u4e0e3.2\u8282\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\u8981\u6c42\u76f8\u540c\uff0c\u51fd\u6570\u5fc5\u987b\u5305\u542b2\u4e2a\u53c2\u6570\uff1a \u56fe\u7247\u8def\u5f84 \u5f52\u4e00\u5316\u6807\u8bb0\uff08norm=True\uff09 \u53c2\u8003\u4ee3\u7801 SGS_IPU_SDK/Scripts/calibrator/preprocess_method/caffe_lenet.py import cv2 import numpy as np def get_image ( img_path , resizeH = 28 , resizeW = 28 , norm = True , meanR = 33.318 , std = 1 ): img = cv2 . imread ( img_path , flags =- 1 ) try : img_dim = img . shape [ 2 ] except IndexError : img_dim = 1 if img_dim == 3 : img = cv2 . cvtColor ( img , cv2 . COLOR_BGR2GRAY ) elif img_dim == 4 : img = cv2 . cvtColor ( img , cv2 . COLOR_BGRA2GRAY ) img_norm = cv2 . resize ( img , ( resizeW , resizeH ), interpolation = cv2 . INTER_LINEAR ) if norm : img_norm = ( img_norm - meanR ) / std img_norm = np . expand_dims ( img_norm , axis = 2 ) dummy = np . zeros (( 28 , 28 , 2 )) img_norm = np . concatenate (( img_norm , dummy ), axis = 2 ) img_norm = img_norm . astype ( 'float32' ) return img_norm def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm ) Please Note: \u7070\u5ea6\u56fe\u7247\u8f93\u5165\u6a21\u578b\u5728PC \u4e0a\u8fd0\u884c\u4e0e\u5f00\u53d1\u677f\u4e0a\u8fd0\u884c\u4e0d\u540c\u3002\u5728PC \u4e0a\u9700\u8981\u5c06\u5355\u901a\u9053\u56fe\u7247\u6269\u7ef4\u81f33 \u901a\u9053\uff0c\u5e76\u5728\u540e\u4e24\u4e2a\u901a\u9053 \u88650\u3002\u5728\u5f00\u53d1\u677f\u4e0a\u9700\u8981YUV \u56fe\u7247\u8f93\u5165\u6570\u636e\u3002 9.2. RAWDATA_S16_NHWC\u8f93\u5165\u7684\u6a21\u578b \u00b6 RAWDATA_S16_NHWC \u53ef\u4ee5\u7528\u4e8e\u5206\u6bb5\u7f51\u7edc\u7684\u540e\u7aef\u7f51\u7edc\u6a21\u578b\u8f93\u5165\uff0c\u6216\u8005\u975e\u56fe\u7247\u6570\u636e\u8f93\u5165\u7684\u7f51\u7edc\u6a21\u578b\u3002 \u4f7f\u7528\u8be5\u79cd\u65b9\u5f0f\u8f93\u5165\u65f6\uff0c\u7531\u4e8e\u786c\u4ef6\u7684\u9650\u5236\u6761\u4ef6\uff0c\u6240\u4ee5\u9700\u8981\u63d0\u524d\u6392\u5217\u597d\u6570\u636e\u540e\u624d\u80fd\u8fdb\u884c\u8ba1\u7b97\u3002 \u8f6c\u6362\u65b9\u5f0f\u4e0e\u524d\u8ff0\u4ecb\u7ecd\u57fa\u672c\u76f8\u540c\uff0c\u4f46\u914d\u7f6e input_config.ini \u4e2d\u7684 training_input_formats \u548c input_formats \u65f6\u90fd\u586b\u5199 RAWDATA_S16_NHWC \u3002 9.2.1 \u6a21\u578b\u8f6c\u6362 \u00b6 \u5f53input_config.ini\u4e2d\u7684 training_input_formats \u548c input_formats \u90fd\u586b\u5199 RAWDATA_S16_NHWC \u65f6\uff0c\u6b64\u65f6input_config.ini\u4e2d mean_red \u3001 mean_green \u3001 mean_blue \u548c std_value \u4e0d\u4f1a\u518d\u5728\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u4e2d\u751f\u6548\uff0c\u6240\u6709\u524d\u5904\u7406\u8fc7\u7a0b\u90fd\u5c06\u5728\u8f93\u5165\u6a21\u578b\u524d\u5b8c\u6210\u3002 mean_red \u3001 mean_green \u3001 mean_blue \u548c std_value \u4e0d\u8981\u586b\u5199\u3002 \u7531\u4e8e\u6a21\u578b\u5728calibrator.py\u8f6c\u6362\u65f6\u4ecd\u7136\u4f7f\u7528\u6d6e\u70b9\u6570\u636e\uff0c\u56e0\u6b64\u8f6c\u6362\u65b9\u6cd5\u4e0e\u6b63\u5e38\u7f51\u7edc\u76f8\u540c\u3002\u53ef\u4ee5\u53c2\u8003\u7b2c3\u7ae0Calibrator\u7684\u4f7f\u7528\u65b9\u6cd5\u3002 9.2.2 \u6a21\u578b\u8fd0\u884c \u00b6 \u6d6e\u70b9\u6a21\u578b\u8fd0\u884c\u65f6\uff0c\u4f7f\u7528\u65b9\u6cd5\u4e0e\u8fd0\u884c\u56fe\u7247\u8f93\u5165\u7684\u6a21\u578b\u76f8\u540c\u3002 \u4f7f\u7528simulator.py\u8fd0\u884c\u5b9a\u70b9\u6a21\u578b\u65f6\uff0c\u524d\u5904\u7406\u65b9\u6cd5\u5e94\u4e0e\u6d6e\u70b9\u524d\u5904\u7406\u6a21\u578b\u4fdd\u6301\u4e00\u81f4\uff0c\u4ecd\u7136\u8f93\u5165norm=True\u65f6\u7684\u65b9\u6cd5\uff0c\u6240\u4ee5 RAWDATA_S16_NHWC \u7684\u7f51\u7edc\u524d\u5904\u7406Python\u6587\u4ef6\u7f16\u5199\u65f6norm\u4e3aTrue\u548cFalse\u7684\u5b9e\u73b0\u90fd\u5e94\u6309\u7167norm\u4e3aTrue\u65f6\u7f16\u5199\u3002simulator.py\u4f1a\u8bfb\u5165\u539f\u6d6e\u70b9\u6570\u636e\uff0c\u8fdb\u884c\u53cd\u91cf\u5316\u548c\u5bf9\u9f50\u6392\u5217\u540e\u8f93\u5165\u7ed9\u5b9a\u70b9\u6a21\u578b\u3002 \u4f7f\u7528calibrator_custom.fixed_simulator\u65f6\uff0c\u5b9a\u70b9\u5316\u548c\u5bf9\u9f50\u6392\u5217\u8fc7\u7a0b\u9700\u8981\u81ea\u884c\u5b8c\u6210\u3002\u4ee5\u4e0b\u4e3a\u4f8b\uff0c\u8bf4\u660e\u5b9a\u70b9\u5316\u548c\u5bf9\u9f50\u6392\u5217\u8fc7\u7a0b\u7684\u505a\u6cd5\u3002 >>> import calibrator_custom >>> model = calibrator_custom . fixed_simulator ( './mobilenet_v2_s16_fixed.sim' ) >>> input_details = model . get_input_details () >>> print ( input_details ) [{ 'input_formats' : 'RAWDATA_S16_NHWC' , 'training_input_formats' : 'RAWDATA_S16_NHWC' , 'shape' : array ([ 1 , 513 , 513 , 8 ]), 'name' : 'sub_7' , 'dtype' : < class ' numpy . int16 '>, ' index ': 0, ' quantization ': (3.0518509447574615e-05, 0)}] calibrator_custom.fixed_simulator\u4e2d\u68c0\u67e5\u4e86\u6a21\u578b\u7684\u8f93\u5165\u683c\u5f0f\uff0c\u8ba1\u7b97\u51fa\u9700\u8981\u8f93\u5165\u7684shape\u4fe1\u606f\u3002 \u5df2\u4f7f\u7528float\u7f51\u7edc\u7684\u524d\u5904\u7406\u5904\u7406\u5b8c\u56fe\u7247\uff0c\u8fd4\u56denumpy.ndarray\u683c\u5f0f\u7684\u53d8\u91cfimg >>> print ( img . shape ) ( 1 , 513 , 513 , 3 ) \u5b9a\u70b9\u5316img\u7684\u6570\u636e\uff0c\u5e76\u8f6c\u6362\u6570\u636e\u7c7b\u578b >>> ins , zp = input_details [ 0 ][ 'quantization' ] >>> img = ( img / ins + zp ) . astype ( input_details [ 0 ][ 'dtype' ]) >>> print ( img . dtype ) int16 \u5bf9\u9f50\u6392\u5217img\u6570\u636e\uff0c\u4f7f\u4e4b\u7b26\u5408\u8f93\u5165\u6761\u4ef6\uff0c\u5bf9\u9f50\u4ec5\u9488\u5bf9\u8f93\u5165\u7684\u6700\u540e\u4e00\u4e2a\u7ef4\u5ea6\u4f1a\u5411\u4e0a\u5bf9\u9f50\u3002 >>> img_s16 = np . zeros ( input_details [ 0 ][ 'shape' ]) . astype ( 'int16' ) >>> img_s16 [:, :, :, : 3 ] = img >>> model . set_input ( input_details [ 0 ][ 'index' ], img_s16 ) \u7531\u4e8e\u4e0a\u8ff0\u64cd\u4f5c\u6b65\u9aa4\u5728simulator.py\u4e2d\u5df2\u7ecf\u505a\u5b8c\uff0c\u6240\u4ee5\u4f7f\u7528\u4f7f\u7528simulator.py\u8fd0\u884c\u5b9a\u70b9\u6a21\u578b\u8fd0\u884c\u65f6\uff0c\u524d\u5904\u7406\u65b9\u6cd5\u5e94\u4e0e\u6d6e\u70b9\u524d\u5904\u7406\u6a21\u578b\u4fdd\u6301\u4e00\u81f4\u3002 \u5728\u677f\u4e0a\u8fd0\u884c RAWDATA_S16_NHWC \u7684\u7f51\u7edc\u65f6\uff0c\u4e5f\u9700\u8981\u5b8c\u6210\u8f93\u5165\u6570\u636e\u7684\u5b9a\u70b9\u5316\u548c\u5bf9\u9f50\u6392\u5217\u8fc7\u7a0b\uff0c\u53ef\u4ee5\u53c2\u8003\u5982\u4e0b\u4ee3\u7801\uff0cFillInputData\u51fd\u6570\u7684\u8f93\u5165\u5206\u522b\u662f\u6d6e\u70b9\u8f93\u5165\u6570\u636e\u7684\u6570\u7ec4\uff0cMI_IPU\u8f93\u5165Tensor\u7ed3\u6784\u4f53\u548cMI_IPU\u7f51\u7edc\u63cf\u8ff0\u7ed3\u6784\u4f53\u3002 #define ALIGN_UP(x, align) (((x) + ((align) - 1)) & ~((align) - 1)) #define CLIP3(x, min, max) ((x) < (min) ? (min) : ((x) > (max) ? (max) : (x))) void FillInputData ( MI_FLOAT * pfData , MI_IPU_TensorVector_t & InputTensorVector , MI_IPU_SubNet_InputOutputDesc_t & desc ) { const MI_U32 H = desc . astMI_InputTensorDescs [ 0 ]. u32TensorShape [ 1 ]; const MI_U32 W = desc . astMI_InputTensorDescs [ 0 ]. u32TensorShape [ 2 ]; const MI_U32 C = desc . astMI_InputTensorDescs [ 0 ]. u32TensorShape [ 3 ]; const MI_U32 inner_size = ALIGN_UP ( C , 8 ); const MI_U32 outer_size = H * W ; const MI_FLOAT Scale = desc . astMI_InputTensorDescs [ 0 ]. fScalar ; const MI_S64 ZeroPoint = desc . astMI_InputTensorDescs [ 0 ]. s64ZeroPoint ; MI_S16 * pData = ( MI_S16 * ) InputTensorVector . astArrayTensors [ 0 ]. ptTensorData [ 0 ]; for ( MI_U32 i = 0 ; i < outer_size ; i ++ ) { for ( MI_U32 j = 0 ; j < C ; j ++ ) { * ( pData + i * inner_size + j ) = ( MI_S16 ) CLIP3 ( round ( pfData [ i * C + j ] / Scale + ZeroPoint ), -32768 , 32767 ); } } MI_SYS_FlushInvCache ( pData , inner_size * outer_size * sizeof ( MI_S16 )); } 9.3. \u5206\u6bb5\u7f51\u7edc\u8f6c\u6362\u8981\u70b9 \u00b6 \u7f51\u7edc\u4e2d\u6709\u4e0d\u652f\u6301\u7684Layer\uff0c\u53ef\u5c06\u5b8c\u6574\u7f51\u7edc\u5206\u6bb5\u6267\u884c\u3002\u524d\u4e00\u6bb5\u7f51\u7edc\u8fd0\u884c\u5b8c\u6210\u540e\u5c06\u7ed3\u679c\u8f93\u5165\u7ed9\u81ea\u5b9a\u4e49\u5b9e\u73b0\u5c42\uff0c\u518d\u5c06\u81ea\u5b9a\u4e49\u5c42\u7684\u8f93\u51fa\u7ed3\u679c\u4f5c\u4e3a\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u8fd0\u884c\u3002\u4e0b\u9762\u4ee5Faster_RCNN\u7f51\u7edc\u4e3a\u4f8b\uff0c\u8bf4\u660e\u5982\u4f55\u8f6c\u6362\u5206\u6bb5\u7f51\u7edc\u3002 9.3.1 \u7f51\u7edc\u5207\u5206 \u00b6 Faster_RCNN\u7f51\u7edc\u4e2d\u7684Proposal Layer\u662f\u4e0d\u652f\u6301\u7684\uff0c\u6211\u4eec\u9700\u8981\u5c06\u7f51\u7edc\u4ece\u8be5\u5c42\u5206\u6210\u4e24\u6bb5\u3002 \u5982\u4e0b\u56fe\u6240\u793a\uff0c\u56fe\u4e2d\u7684Python Layer\u662fProposal Layer\uff0c\u901a\u8fc7\u4fee\u6539prototxt\u6587\u4ef6\uff0c\u5c06\u7f51\u7edc\u4eceProposal Layer\u5904\u62c6\u6210\u4e24\u6bb5\uff1a\u7b2c\u4e00\u6bb5\u7f51\u7edc\u5c06\u67093\u4e2a\u8f93\u51fa\uff0c\u5176\u4e2drpn_cls_prob_reshape\u548crpn_bbox_pred\u4e24\u4e2a\u8f93\u51fa\u7ed3\u679c\u5c06\u4f5c\u4e3aProposal Layer\u7684\u8f93\u5165\uff0cconv5_3\u548cProposal Layer\u7684\u8f93\u51fa\u5c06\u4f5c\u4e3a\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u3002 \u7b2c\u4e00\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u662f\u56fe\u7247\u6570\u636e\uff0cinput_config.ini\u548c\u524d\u5904\u7406python\u6587\u4ef6\u6309\u71672.2\u548c3.2\u8282\u5904\u7406\u3002\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u4e0d\u662f\u56fe\u7247\u6570\u636e\uff0c\u53ef\u4ee5\u53c2\u80039.2\u8282\u5bf9\u4e24\u4e2a\u8f93\u5165\u540c\u65f6\u91c7\u7528RAWDATA_S16_NHWC\u7684\u683c\u5f0f\u914d\u7f6e\u3002\u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u901a\u8fc7 ConvertTool.py\u5206\u522b\u5c06\u4e24\u4e2a\u7f51\u7edc\u8f6c\u6362\u6210float.sim\u6a21\u578b\u6587\u4ef6\u3002\u5177\u4f53\u914d\u7f6e\u6587\u4ef6\u548c\u8f6c\u6362\u547d\u4ee4\u5982\u4e0b\uff1a \u7b2c\u4e00\u6bb5\u7f51\u7edc\uff1a python3 ~/SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py caffe \\ --model_file test_stageone.prototxt \\ --weight_file VGG16_faster_rcnn_final.caffemodel \\ --input_arrays data \\ --output_arrays rpn_cls_prob_reshape,rpn_bbox_pred,conv5_3 \\ --input_config input_config.ini \\ --output_file faster_rcnn_main_float.sim [INPUT_CONFIG] inputs = data; input_formats = BGR; quantizations = TRUE; mean_red = 122.7717; mean_green = 115.9465; mean_blue = 102.9801; std_value = 1; [OUTPUT_CONFIG] outputs = rpn_cls_prob_reshape,rpn_bbox_pred,conv5_3; dequantizations = TRUE,TRUE,FALSE; \u8bbe\u5b9aconv5_3 \u8fd9\u4e2a\u8f93\u51fa\u7684dequantizations \u4e3aFALSE\uff0c\u7531\u4e8e\u8be5\u8f93\u51fa\u76f4\u63a5\u8f93\u5165\u7b2c\u4e8c\u6bb5\u7f51\u7edc\uff0c\u6240\u4ee5\u5728\u677f\u7aef\u8fd0\u884c\u65f6\u4e0d\u9700\u8981 \u8f6c\u6362\u6210float\uff0c\u53ef\u4ee5\u76f4\u63a5\u5c06\u8be5\u8f93\u51fa\u9001\u8fdb\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u3002 \u7b2c\u4e8c\u6bb5\u7f51\u7edc\uff1a ROIPooling\u7684rois\u8f93\u5165\u7ef4\u5ea6\u4e3a\uff08N\u00d75\uff09\uff0c\u5f53\u540e\u6bb5\u7f51\u7edc\u5168\u90e8\u662fInnerProduct\u65f6\uff0cN\u624d\u53ef\u4ee5\u8bbe\u7f6e\u4e3a300\uff08\u5982\u4e0a\u56fe\u6240\u793a\uff09\uff0c\u5982\u679c\u540e\u6bb5\u7f51\u7edc\u4e2d\u6709\u5377\u79ef\u65f6\uff0cN\u4ec5\u53ef\u4ee5\u8bbe\u7f6e\u4e3a1\uff0c\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u9700\u8981\u5faa\u73af\u6267\u884cN\u6b21\u3002 python3 ~/SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py caffe \\ --model_file second_stage.prototxt \\ --weight_file VGG16_faster_rcnn_final.caffemodel \\ --input_arrays conv5_3,rois \\ --output_arrays cls_prob,bbox_pred \\ --input_config input_config_stage2.ini \\ --output_file faster_rcnn_stage2_float.sim [INPUT_CONFIG] inputs = conv5_3,rois; input_formats = RAWDATA_S16_NHWC,RAWDATA_S16_NHWC; quantizations = TRUE,TRUE; [OUTPUT_CONFIG] outputs = cls_prob,bbox_pred; dequantizations = TRUE,TRUE; 9.3.2 \u8f6c\u6362\u7f51\u7edc \u00b6 \u5de5\u5177\u8def\u5f84 SGS_IPU_SDK/Scripts/examples/caffe_faster_rcnn/faster_rcnn_calibrator.py \u8be5\u5de5\u5177\u4f5c\u4e3aFaster_RCNN\u7f51\u7edc\u8f6c\u6362demo\uff0c\u76f4\u63a5\u8fd0\u884c\u5373\u53ef\u5c06\u4e24\u6bb5\u7f51\u7edc\u76f4\u63a5\u8f6c\u6362\u6210fixed\u6a21\u578b\u3002 python3 ~/SGS_IPU_SDK/Scripts/examples/caffe_faster_rcnn/faster_rcnn_calibrator.py \\ -i ~/SGS_Models/resource/detection/voc_calibration_set32/ \\ -m0 faster_rcnn_main_float.sim \\ -m1 faster_rcnn_stage2_float.sim \\ --input_config0 input_config.ini \\ --input_config1 input_config_stage2.ini \u5728\u8f6c\u6362\u5206\u6bb5\u7f51\u7edc\u65f6\uff0c\u9996\u5148\u5b9a\u4e49\u7f51\u7edc\u7684\u4e24\u6bb5\u7f51\u7edc\uff0c\u518d\u7ec4\u7ec7\u4e24\u6bb5\u7f51\u7edc\u7684\u8fd0\u884c\u65b9\u5f0f\uff0c\u5b9a\u4e49\u5728forward\u65b9\u6cd5\u91cc\uff1a class Net ( calibrator_custom . SIM_Calibrator ): def __init__ ( self ): super () . __init__ () self . main_model = calibrator_custom . calibrator ( main_model_path , main_input_config ) self . second_model = calibrator_custom . calibrator ( second_model_path , second_input_config ) self . rpn = rpn . ProposalLayer () def forward ( self , x ): out_details = self . main_model . get_output_details () input_data , im_scale = fill_inputImg2main ( x ) self . main_model . set_input ( 0 , input_data ) self . main_model . invoke () result_list = [] for idx , _ in enumerate ( out_details ): result = self . main_model . get_output ( idx ) result_list . append ( result ) im_info = np . array ([ x . shape [ 0 ], x . shape [ 1 ], im_scale ]) . reshape ( 1 , 3 ) bottom = [ result_list [ 0 ], result_list [ 1 ], im_info ] roi = self . rpn . forward ( bottom ) out2_details = self . second_model . get_output_details () self . second_model . set_input ( 0 , result_list [ 2 ]) self . second_model . set_input ( 1 , roi ) self . second_model . invoke () second_result = [] for idx , _ in enumerate ( out2_details ): result = self . second_model . get_output ( idx ) second_result . append ( result ) return second_result Faster_RCNN\u7f51\u7edc\u4e2d\uff0c\u4f7f\u7528\u4e86\u81ea\u5b9a\u4e49\u7684rpn\u5c42\uff0c\u56e0\u6b64\u5c06\u7b2c\u4e00\u6bb5\u7f51\u7edc\u7684\u7b2c1\u4e2a\u548c\u7b2c2\u4e2a\u8f93\u51fa\u4ee5\u53ca\u56fe\u7247\u4fe1\u606f\u4f5c\u4e3arpn\u5c42\u7684\u8f93\u5165\uff0c\u7b2c\u4e00\u6bb5\u7f51\u7edc\u7684\u7b2c3\u4e2a\u8f93\u51fa\u548crpn\u5c42\u7684\u8f93\u51faroi\u4f5c\u4e3a\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u3002 \u6700\u540e\u8c03\u7528Net\u7684convert\u65b9\u6cd5\uff0c\u540c\u65f6\u751f\u6210\u4e24\u6bb5\u7f51\u7edc\u7684fixed\u6a21\u578b\u3002 net = Net () net . convert ( img_gen , num_process = num_subsets , fix_model = [ out_main_model , out_second_model ]) 9.3.3 \u8fd0\u884c\u7f51\u7edc \u00b6 \u5de5\u5177\u8def\u5f84 SGS_IPU_SDK/Scripts/examples/caffe_faster_rcnn/faster_rcnn_simulator.py \u8be5\u5de5\u5177\u4f5c\u4e3aFaster_RCNN\u7f51\u7edc\u8fd0\u884cdemo\uff0c\u76f4\u63a5\u8fd0\u884c\u4e24\u6bb5\u7f51\u7edc\u3002 python3 ~/SGS_IPU_SDK/Scripts/examples/caffe_faster_rcnn/faster_rcnn_simulator.py \\ -i ~/SGS_Models/resource/detection/004545.jpg \\ -m0 faster_rcnn_main_float.sim \\ -m1 faster_rcnn_stage2_float.sim \\ -t Float \u8fd0\u884c\u4e24\u6bb5\u6a21\u578b\u7684\u65b9\u6cd5\u4e0e\u8f6c\u6362\u7f51\u7edc\u65f6\u7c7b\u4f3c\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662fFixed\u6a21\u578b\u548cOffline\u6a21\u578b\u8f93\u51fa\u65f6\u4f1a\u6709Garbage\u6570\u636e\uff0c \u7b2c\u4e8c\u6bb5\u6a21\u578b\u8f93\u5165\u65f6\u9700\u8981\u5148\u5c06\u6570\u636e\u5bf9\u9f50\uff0c\u8be6\u89c19.2\u8282RAWDATA_S16_NHWC\u8f93\u5165\u7684\u6a21\u578b\u3002\u7531\u4e8e\u7b2c\u4e00\u6bb5\u7f51\u7edc\u7684conv5_3 \u8fd9\u4e2a\u8f93\u51fa\u76f4\u63a5\u8f93\u5165\u7b2c\u4e8c\u6bb5\u7f51\u7edc\uff0c\u6240\u4ee5\u8fd0\u884c\u65f6\u4e0d\u9700\u8981\u53bb\u9664Garbage\u548c\u8f6c\u6362\u6210float\uff0c\u53ef\u4ee5\u76f4\u63a5\u5c06\u8be5\u8f93\u51fa\u4f5c\u4e3a\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u3002 class Net ( calibrator_custom . SIM_Simulator ): def __init__ ( self ): super () . __init__ () self . main_model = main_model self . second_model = second_model self . rpn = rpn . ProposalLayer () def forward ( self , x ): # Run main model out_details = self . main_model . get_output_details () input_data , im_scale = fill_inputImg2main ( x , norm = norm ) self . main_model . set_input ( 0 , input_data ) self . main_model . invoke () result_list = [] for idx , _ in enumerate ( out_details ): result = self . main_model . get_output ( idx ) # Get main output for Fixed and Offline model if result . shape [ - 1 ] != out_details [ idx ][ 'shape' ][ - 1 ] and out_details [ idx ][ 'name' ] != 'conv5_3' : result = result [ ... , : out_details [ idx ][ 'shape' ][ - 1 ]] if out_details [ idx ][ 'dtype' ] == np . int16 and out_details [ idx ][ 'name' ] != 'conv5_3' : scale , _ = out_details [ idx ][ 'quantization' ] result = np . dot ( result , scale ) result_list . append ( result ) # Run Proposal Layer im_info = np . array ([ x . shape [ 0 ], x . shape [ 1 ], im_scale ]) . reshape ( 1 , 3 ) bottom = [ result_list [ 0 ], result_list [ 1 ], im_info ] roi = self . rpn . forward ( bottom ) # Run Second stage model in2_details = self . second_model . get_input_details () out2_details = self . second_model . get_output_details () in2_data = [ result_list [ 2 ], copy . deepcopy ( roi )] for idx , in2_info in enumerate ( in2_details ): if in2_info [ 'dtype' ] == np . int16 and in2_info [ 'name' ] != 'conv5_3' : # Set second model input for Fixed and Offline model ins , zp = in2_info [ 'quantization' ] in2_data [ idx ] = ( in2_data [ idx ] * 0.0625 / ins + zp ) . astype ( in2_info [ 'dtype' ]) feature_s16 = np . zeros ( in2_info [ 'shape' ]) . astype ( 'int16' ) feature_s16 [ ... , : in2_data [ idx ] . shape [ - 1 ]] = in2_data [ idx ] self . second_model . set_input ( in2_info [ 'index' ], feature_s16 ) else : self . second_model . set_input ( in2_info [ 'index' ], in2_data [ idx ]) self . second_model . invoke () second_result = [] for idx , _ in enumerate ( out2_details ): result = self . second_model . get_output ( idx ) # Get second output for Fixed and Offline model if result . shape [ - 1 ] != out2_details [ idx ][ 'shape' ][ - 1 ]: result = result [ ... , : out2_details [ idx ][ 'shape' ][ - 1 ]] if out2_details [ idx ][ 'dtype' ] == np . int16 : scale , _ = out2_details [ idx ][ 'quantization' ] result = np . dot ( result , scale ) second_result . append ( result . reshape ( 300 , - 1 )) second_result . append ( roi ) second_result . append ( im_info ) return second_result \u8fd0\u884c\u7f51\u7edc\u65f6\u5148\u521b\u5efaNet\u7684\u5b9e\u4f8b\uff0c\u7136\u540e\u8c03\u7528\u81ea\u8eab\u7684\u65b9\u6cd5\u5c31\u53ef\u4ee5\u8fd0\u884c\u3002\u5177\u4f53\u53c2\u80035.2.2\u8282\u3002 net = Net () results = net ( img_gen , num_process = num_subsets ) 9.4. \u591a\u8f93\u5165\u7f51\u7edc\u8f6c\u6362\u8981\u70b9 \u00b6 9.4.1 \u6784\u5efa\u591a\u8f93\u5165\u7f51\u7edc \u00b6 \u4f7f\u7528Tensorflow1.14.0\u6784\u5efa\u4e00\u4e2a\u53cc\u8f93\u5165\u7f51\u7edc\uff0c\u8be5\u7f51\u7edc\u7528\u6765\u505a\u77e9\u9635\u4e58\u6cd5\uff0c\u8ba1\u7b97\u4e24\u4e2a\u5411\u91cf\u7684\u5185\u79ef\u3002 import tensorflow as tf import numpy as np SHAPE_DIMS = 256 input_np0 = np . random . rand ( 1 , SHAPE_DIMS ) . astype ( np . float32 ) input_np1 = np . random . rand ( 1 , SHAPE_DIMS ) . astype ( np . float32 ) input_0 = tf . placeholder ( dtype = tf . float32 , shape = ( 1 , SHAPE_DIMS ), name = 'input0' ) input_1 = tf . placeholder ( dtype = tf . float32 , shape = ( 1 , SHAPE_DIMS ), name = 'input1' ) out = tf . matmul ( input_0 , tf . reshape ( input_1 , ( SHAPE_DIMS , 1 )), name = 'output' ) with tf . Session () as sess : results = sess . run ( out , feed_dict = { input_0 : input_np0 , input_1 : input_np1 }) # Convert .pb output_graph_def = tf . graph_util . convert_variables_to_constants ( sess , sess . graph_def , [ 'output' ] ) with tf . gfile . GFile ( 'matmul.pb' , 'wb' ) as f : f . write ( output_graph_def . SerializeToString ()) print ( 'matmul.pb Saved!' ) # convert to .tflite tflite_model = tf . lite . TFLiteConverter . from_frozen_graph ( 'matmul.pb' , [ 'input0' , 'input1' ], [ 'output' ] ) tflite_model = tflite_model . convert () with open ( 'matmul.tflite' , 'wb' ) as f : f . write ( tflite_model ) print ( 'matmul.tflite Saved!' ) \u8fd0\u884c\u8be5\u811a\u672c\uff0c\u5c31\u80fd\u751f\u6210matmul.tflite\u6a21\u578b\u6587\u4ef6\u4e86\u3002 9.4.2 \u8f6c\u6362\u591a\u8f93\u5165\u7f51\u7edc \u00b6 \u4e0b\u9762\u5c06matmul.tflte\u8f6c\u6362\u6210\u53ef\u4ee5\u5728\u677f\u4e0a\u8fd0\u884c\u7684\u6a21\u578b\u6587\u4ef6\u3002 matmul.tflite\u6a21\u578b\u4e0d\u662f\u56fe\u7247\u8f93\u5165\uff0c\u56e0\u6b64\u914d\u7f6einput_config.ini\u6587\u4ef6\u8bf7\u53c2\u80039.2\u8282\u3002 \u914d\u7f6einput_config.ini\u811a\u672c [INPUT_CONFIG] inputs = input0,input1; input_formats = RAWDATA_S16_NHWC,RAWDATA_S16_NHWC; quantization = TRUE,TRUE; [OUTPUT_CONFIG] outputs = output; dequantization = TRUE; \u8bf7\u5148\u5728SGS_IPU_SDK\u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK source cfg_env.sh \u7136\u540e\u4f7f\u7528ConvertTool\u5de5\u5177\u8f6c\u6362matmul.tflite\uff1a python3 ~/SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py tflite \\ --model_file /path/to/matmul.tflite \\ --input_config /path/to/input_config.ini \\ --output_file /path/to/matmul_float.sim \u591a\u8f93\u5165\u7f51\u7edc\u7684calibrator\u8fc7\u7a0b\u9700\u8981\u4f7f\u7528calibrator_custom\u6a21\u5757\uff0c\u8be6\u7ec6\u53ef\u4ee5\u53c2\u80033.4\u8282\u3002\u4f46\u4e0e3.4.2\u8282\u4e2d\u4e0d\u540c\u7684\u662f\u8f93\u5165\u7684\u751f\u6210\u5668\u9700\u8981\u914d\u7f6e\u6210\u53cc\u8f93\u5165\u3002\u5c06\u4ee5\u4e0b\u793a\u4f8b\u6587\u4ef6\u4fdd\u5b58\u4e3amatmul_calibrator.py\u3002 # -*- coding: utf-8 -*- import calibrator_custom import os import sys import numpy as np import argparse from calibrator_custom import utils class Net ( calibrator_custom . SIM_Calibrator ): def __init__ ( self , model_path , input_config ): super () . __init__ () self . model = calibrator_custom . calibrator ( model_path , input_config ) def forward ( self , x , y ): out_details = self . model . get_output_details () self . model . set_input ( 0 , x ) self . model . set_input ( 1 , y ) self . model . invoke () result_list = [] for idx in range ( len ( out_details )): result = self . model . get_output ( idx ) result_list . append ( result ) return result_list def arg_parse (): parser = argparse . ArgumentParser ( description = 'Calibrator Tool' ) parser . add_argument ( '-m' , '--model' , type = str , required = True , help = 'Model path.' ) parser . add_argument ( '--input_config' , type = str , required = True , help = 'Input config path.' ) parser . add_argument ( '--quant_level' , type = str , default = 'L5' , choices = [ 'L1' , 'L2' , 'L3' , 'L4' , 'L5' ], help = 'Indicate Quantilization level. The higher the level, \\ the slower the speed and the higher the accuracy.' ) parser . add_argument ( '--num_process' , default = 10 , type = int , help = 'Amount of processes run at same time.' ) parser . add_argument ( '-o' , '--output' , default = None , type = str , help = 'Output path for fixed model.' ) return parser . parse_args () def data_gen (): calibrator_data = np . random . rand ( 100 , 1 , 256 ) . astype ( np . float32 ) bench_data = np . random . rand ( 100 , 1 , 256 ) . astype ( np . float32 ) for i , j in zip ( calibrator_data , bench_data ): yield [ i , j ] def main (): args = arg_parse () model_path = args . model input_config = args . input_config quant_level = args . quant_level num_subsets = args . num_process output = args . output if not os . path . exists ( model_path ): raise FileNotFoundError ( 'No such {} model' . format ( model_path )) if not os . path . exists ( input_config ): raise FileNotFoundError ( 'input_config.ini file not found.' ) net = Net ( model_path , input_config ) print ( net ) # random generate data # must change real data when using img_gen = data_gen () print ( ' \\033 [31m[WARNING] random generate data, \\ must change real data when using! \\033 [0m' , file = sys . stderr ) out_model = utils . get_out_model_name ( model_path , output ) net . convert ( img_gen , num_process = num_subsets , quant_level = quant_level , fix_model = [ out_model ]) if __name__ == '__main__' : main () \u4f7f\u7528\u7f16\u5199\u7684matmul_calibrator.py\u8f6c\u6362matmul_float.sim\uff0c\u751f\u6210matmul_fixed.sim\u3002 python3 matmul_calibrator.py \\ -m /path/to/matmul_float.sim \\ --input_config /path/to/input_config.ini \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u91cf\u5316\u8be5\u6a21\u578b\u7684\u8f93\u5165\u6570\u636e\u4e00\u5b9a\u8981\u6362\u6210\u771f\u5b9e\u6570\u636e\uff0c\u4e0d\u7136\u7edf\u8ba1\u751f\u6210\u7684fixed\u6a21\u578b\u7cbe\u5ea6\u4f1a\u51fa\u9519\u3002\u5982\u679c\u5355\u72ec\u91cf\u5316\u8be5\u6a21\u578b\u6bd4\u8f83\u56f0\u96be\uff0c\u6bd4\u5982\u5b83\u662f\u63a5\u5728\u67d0\u4e2a\u7f51\u7edc\u540e\u9762\u8fd0\u884c\u7684\uff0c\u53ef\u4ee5\u53c2\u80039.4\u8282\uff0c\u6309\u7167\u591a\u6bb5\u7f51\u7edc\u5904\u7406\uff0c\u5728calibrator_custom.SIM_Calibrator\u7c7b\u91cc\u5b9a\u4e49\u591a\u4e2a\u6a21\u578b\uff0c\u53ef\u4ee5\u76f4\u63a5\u751f\u6210\u51fa\u591a\u4e2afixed\u7f51\u7edc\u3002 \u6700\u540e\u4f7f\u7528compiler.py\u8f6c\u6362matmul_fixed.sim\uff0c\u751f\u6210matmul_fixed.sim_sgsimg.img\u3002 9.4.3 \u5728PC\u4e0a\u8fd0\u884c\u591a\u8f93\u5165\u7f51\u7edc \u00b6 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd0\u884cFloat\u7684\u7f51\u7edc\u65f6\uff0c\u8f93\u5165\u6570\u636e\u7684type\u9700\u8981\u4e3afloat32\uff0c\u8f93\u5165\u6570\u636e\u7684shape\u4e0e\u6a21\u578b\u8f93\u5165shape\u76f8\u540c\u3002\u4f46\u662f\u7531\u4e8ematmul\u7684Fixed\u548cOffline\u6a21\u578b\u662fRAWDATA_S16_NHWC\u8f93\u5165\uff0c\u8f93\u5165\u6570\u636e\u9700\u8981\u5148\u53cd\u91cf\u5316\u5230int16\uff0c\u7136\u540e\u5bf9\u9f50\u540e\u624d\u80fd\u8f93\u5165\u5230\u6a21\u578b\u3002\u6240\u4ee5\u5b9a\u4e49calibrator_custom.SIM_Simulator\u7684forward\u51fd\u6570\u65f6\u9700\u8981\u6ce8\u610f\u8be5\u6a21\u578b\u7684\u7279\u6b8a\u6027\uff1a class Net ( calibrator_custom . SIM_Simulator ): def __init__ ( self , model_path , phase ): super () . __init__ () if phase == 'Float' : self . model = calibrator_custom . float_simulator ( model_path ) elif phase == 'Fixed' : self . model = calibrator_custom . fixed_simulator ( model_path ) else : self . model = calibrator_custom . offline_simulator ( model_path ) def forward ( self , x , y ): in_details = self . model . get_input_details () out_details = self . model . get_output_details () in2_data = [ x , y ] for idx , in_info in enumerate ( in_details ): if in_info [ 'dtype' ] == np . int16 : # Set model input for Fixed and Offline model ins , zp = in_info [ 'quantization' ] in2_data [ idx ] = np . clip (( in2_data [ idx ] / ins + zp ), - 32768 , 32767 ) . astype ( in_info [ 'dtype' ]) feature_s16 = np . zeros ( in_info [ 'shape' ]) . astype ( 'int16' ) feature_s16 [ ... , : in2_data [ idx ] . shape [ - 1 ]] = in2_data [ idx ] self . model . set_input ( in_info [ 'index' ], feature_s16 ) else : self . model . set_input ( in_info [ 'index' ], in2_data [ idx ]) self . model . invoke () result_list = [] for idx in range ( len ( out_details )): result = self . model . get_output ( idx ) # for Fixed and Offline model if result . shape [ - 1 ] != out_details [ idx ][ 'shape' ][ - 1 ]: result = result [ ... , : out_details [ idx ][ 'shape' ][ - 1 ]] if out_details [ idx ][ 'dtype' ] == np . int16 : scale , _ = out_details [ idx ][ 'quantization' ] result = np . dot ( result , scale ) result_list . append ( result ) return result_list 9.4.4 \u5728\u677f\u4e0a\u8fd0\u884c\u591a\u8f93\u5165\u7f51\u7edc \u00b6 \u7531\u4e8ematmul_fixed.sim_sgsimg.img\u7f51\u7edc\u8f93\u5165\u662f RAWDATA_S16_NHWC \uff0c\u53ef\u4ee5\u53c2\u80039.2.2\u8282\u4e2dFillInputData\u51fd\u6570\uff0c\u4e0e\u5728PC\u4e0a\u76f8\u540c\uff0c\u9700\u8981\u5c06\u8f93\u5165\u6570\u636e\u5904\u7406\u540e\u518d\u9001\u5165\u6a21\u578b\u3002 \u591a\u8f93\u5165\u6a21\u578b\u53ea\u9700\u5728FillInputData\u51fd\u6570\u4e2d\u589e\u52a0\u5bf9\u6a21\u578b\u7684\u7b2c\u4e8c\u4e2a\u8f93\u5165\u704c\u5165\u6570\u636e\uff1a // input0 MI_S16 * pData0 = ( MI_S16 * ) InputTensorVector . astArrayTensors [ 0 ]. ptTensorData [ 0 ]; // input1 MI_S16 * pData1 = ( MI_S16 * ) InputTensorVector . astArrayTensors [ 1 ]. ptTensorData [ 0 ]; \u5982\u679cmatmul_fixed.sim_sgsimg.img\u662f\u4e3a\u4e86\u4f7f\u7528\u4e0a\u4e00\u4e2a\u6a21\u578b\u7684\u8f93\u51fa\u6570\u636e\uff0c\u53ef\u4ee5\u5bf9\u4e0a\u4e00\u4e2a\u6a21\u578b\u7684input_config.ini\u8fd9\u6837\u914d\u7f6e\uff1a [OUTPUT_CONFIG]\u7684dequantization=FALSE; \u8fd9\u6837\u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u4e0a\u4e00\u4e2a\u6a21\u578b\u7684\u8f93\u51fa\u6570\u636e\u7c7b\u578b\u4e3aINT16\uff0c\u53ef\u76f4\u63a5\u4f5c\u4e3amatmul_fixed.sim_sgsimg.img\u6a21\u578b\u7684\u8f93\u5165\u3002","title":"Special Model Conversion"},{"location":"module/User_Guide/IPU100/Special_Model_Conversion.html#91","text":"\u7070\u5ea6\u6a21\u578b\uff0c\u6307\u8f93\u5165\u662f\u5355\u901a\u9053\u56fe\u7247\u7684\u6a21\u578b\uff0c\u5373\u8f93\u5165C\u7ef4\u5ea6\u4e0a\u4e3a1\u7684\u6a21\u578b\u3002","title":"9.1. \u7070\u5ea6\u6a21\u578b\u8f6c\u6362\u8981\u70b9"},{"location":"module/User_Guide/IPU100/Special_Model_Conversion.html#911-input_config","text":"input_config.ini\u6587\u4ef6\u4f7f\u7528\u57282.2\u8282input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e\u6709\u8fc7\u4ecb\u7ecd\uff0c\u5bf9\u4e8e\u7070\u5ea6\u6a21\u578b\uff0c\u8981\u6ce8\u610f\u5982\u4e0b\u8981\u70b9\u3002 input_config.ini\u6587\u4ef6\u4e2d\u8fd9\u4e24\u4e2a\u914d\u7f6e\u5fc5\u987b\u5199\u6210 [INPUT_CONFIG] ...... training_input_formats = RGB; input_formats = GRAY; ...... \u5c06\u7070\u5ea6\u56fe\u7247\u7684\u6709\u6548\u6570\u636e\u53ea\u653e\u5728R\u901a\u9053\u4e0a\uff0c\u56e0\u6b64\u4ec5\u9700\u8bbe\u7f6eR\u901a\u9053\u7684mean\u503c\uff08mean_red\uff09 [INPUT_CONFIG] ...... mean_red = 127.5; mean_green = 0.0; mean_blue = 0.0; ;std_value parameter for image models, std_value = 1.0;","title":"9.1.1. \u7070\u5ea6\u6a21\u578binput_config\u914d\u7f6e\u4fe1\u606f\u8981\u70b9"},{"location":"module/User_Guide/IPU100/Special_Model_Conversion.html#912","text":"\u7070\u5ea6\u56fe\u7247\u8f93\u5165\u7684\u524d\u5904\u7406\u65b9\u6cd5\u4e0e3.2\u8282\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\u8981\u6c42\u76f8\u540c\uff0c\u51fd\u6570\u5fc5\u987b\u5305\u542b2\u4e2a\u53c2\u6570\uff1a \u56fe\u7247\u8def\u5f84 \u5f52\u4e00\u5316\u6807\u8bb0\uff08norm=True\uff09 \u53c2\u8003\u4ee3\u7801 SGS_IPU_SDK/Scripts/calibrator/preprocess_method/caffe_lenet.py import cv2 import numpy as np def get_image ( img_path , resizeH = 28 , resizeW = 28 , norm = True , meanR = 33.318 , std = 1 ): img = cv2 . imread ( img_path , flags =- 1 ) try : img_dim = img . shape [ 2 ] except IndexError : img_dim = 1 if img_dim == 3 : img = cv2 . cvtColor ( img , cv2 . COLOR_BGR2GRAY ) elif img_dim == 4 : img = cv2 . cvtColor ( img , cv2 . COLOR_BGRA2GRAY ) img_norm = cv2 . resize ( img , ( resizeW , resizeH ), interpolation = cv2 . INTER_LINEAR ) if norm : img_norm = ( img_norm - meanR ) / std img_norm = np . expand_dims ( img_norm , axis = 2 ) dummy = np . zeros (( 28 , 28 , 2 )) img_norm = np . concatenate (( img_norm , dummy ), axis = 2 ) img_norm = img_norm . astype ( 'float32' ) return img_norm def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm ) Please Note: \u7070\u5ea6\u56fe\u7247\u8f93\u5165\u6a21\u578b\u5728PC \u4e0a\u8fd0\u884c\u4e0e\u5f00\u53d1\u677f\u4e0a\u8fd0\u884c\u4e0d\u540c\u3002\u5728PC \u4e0a\u9700\u8981\u5c06\u5355\u901a\u9053\u56fe\u7247\u6269\u7ef4\u81f33 \u901a\u9053\uff0c\u5e76\u5728\u540e\u4e24\u4e2a\u901a\u9053 \u88650\u3002\u5728\u5f00\u53d1\u677f\u4e0a\u9700\u8981YUV \u56fe\u7247\u8f93\u5165\u6570\u636e\u3002","title":"9.1.2. \u7070\u5ea6\u56fe\u7247\u8f93\u5165\u6a21\u578b\u524d\u5904\u7406\u65b9\u6cd5"},{"location":"module/User_Guide/IPU100/Special_Model_Conversion.html#92-rawdata_s16_nhwc","text":"RAWDATA_S16_NHWC \u53ef\u4ee5\u7528\u4e8e\u5206\u6bb5\u7f51\u7edc\u7684\u540e\u7aef\u7f51\u7edc\u6a21\u578b\u8f93\u5165\uff0c\u6216\u8005\u975e\u56fe\u7247\u6570\u636e\u8f93\u5165\u7684\u7f51\u7edc\u6a21\u578b\u3002 \u4f7f\u7528\u8be5\u79cd\u65b9\u5f0f\u8f93\u5165\u65f6\uff0c\u7531\u4e8e\u786c\u4ef6\u7684\u9650\u5236\u6761\u4ef6\uff0c\u6240\u4ee5\u9700\u8981\u63d0\u524d\u6392\u5217\u597d\u6570\u636e\u540e\u624d\u80fd\u8fdb\u884c\u8ba1\u7b97\u3002 \u8f6c\u6362\u65b9\u5f0f\u4e0e\u524d\u8ff0\u4ecb\u7ecd\u57fa\u672c\u76f8\u540c\uff0c\u4f46\u914d\u7f6e input_config.ini \u4e2d\u7684 training_input_formats \u548c input_formats \u65f6\u90fd\u586b\u5199 RAWDATA_S16_NHWC \u3002","title":"9.2. RAWDATA_S16_NHWC\u8f93\u5165\u7684\u6a21\u578b"},{"location":"module/User_Guide/IPU100/Special_Model_Conversion.html#921","text":"\u5f53input_config.ini\u4e2d\u7684 training_input_formats \u548c input_formats \u90fd\u586b\u5199 RAWDATA_S16_NHWC \u65f6\uff0c\u6b64\u65f6input_config.ini\u4e2d mean_red \u3001 mean_green \u3001 mean_blue \u548c std_value \u4e0d\u4f1a\u518d\u5728\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u4e2d\u751f\u6548\uff0c\u6240\u6709\u524d\u5904\u7406\u8fc7\u7a0b\u90fd\u5c06\u5728\u8f93\u5165\u6a21\u578b\u524d\u5b8c\u6210\u3002 mean_red \u3001 mean_green \u3001 mean_blue \u548c std_value \u4e0d\u8981\u586b\u5199\u3002 \u7531\u4e8e\u6a21\u578b\u5728calibrator.py\u8f6c\u6362\u65f6\u4ecd\u7136\u4f7f\u7528\u6d6e\u70b9\u6570\u636e\uff0c\u56e0\u6b64\u8f6c\u6362\u65b9\u6cd5\u4e0e\u6b63\u5e38\u7f51\u7edc\u76f8\u540c\u3002\u53ef\u4ee5\u53c2\u8003\u7b2c3\u7ae0Calibrator\u7684\u4f7f\u7528\u65b9\u6cd5\u3002","title":"9.2.1 \u6a21\u578b\u8f6c\u6362"},{"location":"module/User_Guide/IPU100/Special_Model_Conversion.html#922","text":"\u6d6e\u70b9\u6a21\u578b\u8fd0\u884c\u65f6\uff0c\u4f7f\u7528\u65b9\u6cd5\u4e0e\u8fd0\u884c\u56fe\u7247\u8f93\u5165\u7684\u6a21\u578b\u76f8\u540c\u3002 \u4f7f\u7528simulator.py\u8fd0\u884c\u5b9a\u70b9\u6a21\u578b\u65f6\uff0c\u524d\u5904\u7406\u65b9\u6cd5\u5e94\u4e0e\u6d6e\u70b9\u524d\u5904\u7406\u6a21\u578b\u4fdd\u6301\u4e00\u81f4\uff0c\u4ecd\u7136\u8f93\u5165norm=True\u65f6\u7684\u65b9\u6cd5\uff0c\u6240\u4ee5 RAWDATA_S16_NHWC \u7684\u7f51\u7edc\u524d\u5904\u7406Python\u6587\u4ef6\u7f16\u5199\u65f6norm\u4e3aTrue\u548cFalse\u7684\u5b9e\u73b0\u90fd\u5e94\u6309\u7167norm\u4e3aTrue\u65f6\u7f16\u5199\u3002simulator.py\u4f1a\u8bfb\u5165\u539f\u6d6e\u70b9\u6570\u636e\uff0c\u8fdb\u884c\u53cd\u91cf\u5316\u548c\u5bf9\u9f50\u6392\u5217\u540e\u8f93\u5165\u7ed9\u5b9a\u70b9\u6a21\u578b\u3002 \u4f7f\u7528calibrator_custom.fixed_simulator\u65f6\uff0c\u5b9a\u70b9\u5316\u548c\u5bf9\u9f50\u6392\u5217\u8fc7\u7a0b\u9700\u8981\u81ea\u884c\u5b8c\u6210\u3002\u4ee5\u4e0b\u4e3a\u4f8b\uff0c\u8bf4\u660e\u5b9a\u70b9\u5316\u548c\u5bf9\u9f50\u6392\u5217\u8fc7\u7a0b\u7684\u505a\u6cd5\u3002 >>> import calibrator_custom >>> model = calibrator_custom . fixed_simulator ( './mobilenet_v2_s16_fixed.sim' ) >>> input_details = model . get_input_details () >>> print ( input_details ) [{ 'input_formats' : 'RAWDATA_S16_NHWC' , 'training_input_formats' : 'RAWDATA_S16_NHWC' , 'shape' : array ([ 1 , 513 , 513 , 8 ]), 'name' : 'sub_7' , 'dtype' : < class ' numpy . int16 '>, ' index ': 0, ' quantization ': (3.0518509447574615e-05, 0)}] calibrator_custom.fixed_simulator\u4e2d\u68c0\u67e5\u4e86\u6a21\u578b\u7684\u8f93\u5165\u683c\u5f0f\uff0c\u8ba1\u7b97\u51fa\u9700\u8981\u8f93\u5165\u7684shape\u4fe1\u606f\u3002 \u5df2\u4f7f\u7528float\u7f51\u7edc\u7684\u524d\u5904\u7406\u5904\u7406\u5b8c\u56fe\u7247\uff0c\u8fd4\u56denumpy.ndarray\u683c\u5f0f\u7684\u53d8\u91cfimg >>> print ( img . shape ) ( 1 , 513 , 513 , 3 ) \u5b9a\u70b9\u5316img\u7684\u6570\u636e\uff0c\u5e76\u8f6c\u6362\u6570\u636e\u7c7b\u578b >>> ins , zp = input_details [ 0 ][ 'quantization' ] >>> img = ( img / ins + zp ) . astype ( input_details [ 0 ][ 'dtype' ]) >>> print ( img . dtype ) int16 \u5bf9\u9f50\u6392\u5217img\u6570\u636e\uff0c\u4f7f\u4e4b\u7b26\u5408\u8f93\u5165\u6761\u4ef6\uff0c\u5bf9\u9f50\u4ec5\u9488\u5bf9\u8f93\u5165\u7684\u6700\u540e\u4e00\u4e2a\u7ef4\u5ea6\u4f1a\u5411\u4e0a\u5bf9\u9f50\u3002 >>> img_s16 = np . zeros ( input_details [ 0 ][ 'shape' ]) . astype ( 'int16' ) >>> img_s16 [:, :, :, : 3 ] = img >>> model . set_input ( input_details [ 0 ][ 'index' ], img_s16 ) \u7531\u4e8e\u4e0a\u8ff0\u64cd\u4f5c\u6b65\u9aa4\u5728simulator.py\u4e2d\u5df2\u7ecf\u505a\u5b8c\uff0c\u6240\u4ee5\u4f7f\u7528\u4f7f\u7528simulator.py\u8fd0\u884c\u5b9a\u70b9\u6a21\u578b\u8fd0\u884c\u65f6\uff0c\u524d\u5904\u7406\u65b9\u6cd5\u5e94\u4e0e\u6d6e\u70b9\u524d\u5904\u7406\u6a21\u578b\u4fdd\u6301\u4e00\u81f4\u3002 \u5728\u677f\u4e0a\u8fd0\u884c RAWDATA_S16_NHWC \u7684\u7f51\u7edc\u65f6\uff0c\u4e5f\u9700\u8981\u5b8c\u6210\u8f93\u5165\u6570\u636e\u7684\u5b9a\u70b9\u5316\u548c\u5bf9\u9f50\u6392\u5217\u8fc7\u7a0b\uff0c\u53ef\u4ee5\u53c2\u8003\u5982\u4e0b\u4ee3\u7801\uff0cFillInputData\u51fd\u6570\u7684\u8f93\u5165\u5206\u522b\u662f\u6d6e\u70b9\u8f93\u5165\u6570\u636e\u7684\u6570\u7ec4\uff0cMI_IPU\u8f93\u5165Tensor\u7ed3\u6784\u4f53\u548cMI_IPU\u7f51\u7edc\u63cf\u8ff0\u7ed3\u6784\u4f53\u3002 #define ALIGN_UP(x, align) (((x) + ((align) - 1)) & ~((align) - 1)) #define CLIP3(x, min, max) ((x) < (min) ? (min) : ((x) > (max) ? (max) : (x))) void FillInputData ( MI_FLOAT * pfData , MI_IPU_TensorVector_t & InputTensorVector , MI_IPU_SubNet_InputOutputDesc_t & desc ) { const MI_U32 H = desc . astMI_InputTensorDescs [ 0 ]. u32TensorShape [ 1 ]; const MI_U32 W = desc . astMI_InputTensorDescs [ 0 ]. u32TensorShape [ 2 ]; const MI_U32 C = desc . astMI_InputTensorDescs [ 0 ]. u32TensorShape [ 3 ]; const MI_U32 inner_size = ALIGN_UP ( C , 8 ); const MI_U32 outer_size = H * W ; const MI_FLOAT Scale = desc . astMI_InputTensorDescs [ 0 ]. fScalar ; const MI_S64 ZeroPoint = desc . astMI_InputTensorDescs [ 0 ]. s64ZeroPoint ; MI_S16 * pData = ( MI_S16 * ) InputTensorVector . astArrayTensors [ 0 ]. ptTensorData [ 0 ]; for ( MI_U32 i = 0 ; i < outer_size ; i ++ ) { for ( MI_U32 j = 0 ; j < C ; j ++ ) { * ( pData + i * inner_size + j ) = ( MI_S16 ) CLIP3 ( round ( pfData [ i * C + j ] / Scale + ZeroPoint ), -32768 , 32767 ); } } MI_SYS_FlushInvCache ( pData , inner_size * outer_size * sizeof ( MI_S16 )); }","title":"9.2.2 \u6a21\u578b\u8fd0\u884c"},{"location":"module/User_Guide/IPU100/Special_Model_Conversion.html#93","text":"\u7f51\u7edc\u4e2d\u6709\u4e0d\u652f\u6301\u7684Layer\uff0c\u53ef\u5c06\u5b8c\u6574\u7f51\u7edc\u5206\u6bb5\u6267\u884c\u3002\u524d\u4e00\u6bb5\u7f51\u7edc\u8fd0\u884c\u5b8c\u6210\u540e\u5c06\u7ed3\u679c\u8f93\u5165\u7ed9\u81ea\u5b9a\u4e49\u5b9e\u73b0\u5c42\uff0c\u518d\u5c06\u81ea\u5b9a\u4e49\u5c42\u7684\u8f93\u51fa\u7ed3\u679c\u4f5c\u4e3a\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u8fd0\u884c\u3002\u4e0b\u9762\u4ee5Faster_RCNN\u7f51\u7edc\u4e3a\u4f8b\uff0c\u8bf4\u660e\u5982\u4f55\u8f6c\u6362\u5206\u6bb5\u7f51\u7edc\u3002","title":"9.3. \u5206\u6bb5\u7f51\u7edc\u8f6c\u6362\u8981\u70b9"},{"location":"module/User_Guide/IPU100/Special_Model_Conversion.html#931","text":"Faster_RCNN\u7f51\u7edc\u4e2d\u7684Proposal Layer\u662f\u4e0d\u652f\u6301\u7684\uff0c\u6211\u4eec\u9700\u8981\u5c06\u7f51\u7edc\u4ece\u8be5\u5c42\u5206\u6210\u4e24\u6bb5\u3002 \u5982\u4e0b\u56fe\u6240\u793a\uff0c\u56fe\u4e2d\u7684Python Layer\u662fProposal Layer\uff0c\u901a\u8fc7\u4fee\u6539prototxt\u6587\u4ef6\uff0c\u5c06\u7f51\u7edc\u4eceProposal Layer\u5904\u62c6\u6210\u4e24\u6bb5\uff1a\u7b2c\u4e00\u6bb5\u7f51\u7edc\u5c06\u67093\u4e2a\u8f93\u51fa\uff0c\u5176\u4e2drpn_cls_prob_reshape\u548crpn_bbox_pred\u4e24\u4e2a\u8f93\u51fa\u7ed3\u679c\u5c06\u4f5c\u4e3aProposal Layer\u7684\u8f93\u5165\uff0cconv5_3\u548cProposal Layer\u7684\u8f93\u51fa\u5c06\u4f5c\u4e3a\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u3002 \u7b2c\u4e00\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u662f\u56fe\u7247\u6570\u636e\uff0cinput_config.ini\u548c\u524d\u5904\u7406python\u6587\u4ef6\u6309\u71672.2\u548c3.2\u8282\u5904\u7406\u3002\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u4e0d\u662f\u56fe\u7247\u6570\u636e\uff0c\u53ef\u4ee5\u53c2\u80039.2\u8282\u5bf9\u4e24\u4e2a\u8f93\u5165\u540c\u65f6\u91c7\u7528RAWDATA_S16_NHWC\u7684\u683c\u5f0f\u914d\u7f6e\u3002\u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u901a\u8fc7 ConvertTool.py\u5206\u522b\u5c06\u4e24\u4e2a\u7f51\u7edc\u8f6c\u6362\u6210float.sim\u6a21\u578b\u6587\u4ef6\u3002\u5177\u4f53\u914d\u7f6e\u6587\u4ef6\u548c\u8f6c\u6362\u547d\u4ee4\u5982\u4e0b\uff1a \u7b2c\u4e00\u6bb5\u7f51\u7edc\uff1a python3 ~/SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py caffe \\ --model_file test_stageone.prototxt \\ --weight_file VGG16_faster_rcnn_final.caffemodel \\ --input_arrays data \\ --output_arrays rpn_cls_prob_reshape,rpn_bbox_pred,conv5_3 \\ --input_config input_config.ini \\ --output_file faster_rcnn_main_float.sim [INPUT_CONFIG] inputs = data; input_formats = BGR; quantizations = TRUE; mean_red = 122.7717; mean_green = 115.9465; mean_blue = 102.9801; std_value = 1; [OUTPUT_CONFIG] outputs = rpn_cls_prob_reshape,rpn_bbox_pred,conv5_3; dequantizations = TRUE,TRUE,FALSE; \u8bbe\u5b9aconv5_3 \u8fd9\u4e2a\u8f93\u51fa\u7684dequantizations \u4e3aFALSE\uff0c\u7531\u4e8e\u8be5\u8f93\u51fa\u76f4\u63a5\u8f93\u5165\u7b2c\u4e8c\u6bb5\u7f51\u7edc\uff0c\u6240\u4ee5\u5728\u677f\u7aef\u8fd0\u884c\u65f6\u4e0d\u9700\u8981 \u8f6c\u6362\u6210float\uff0c\u53ef\u4ee5\u76f4\u63a5\u5c06\u8be5\u8f93\u51fa\u9001\u8fdb\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u3002 \u7b2c\u4e8c\u6bb5\u7f51\u7edc\uff1a ROIPooling\u7684rois\u8f93\u5165\u7ef4\u5ea6\u4e3a\uff08N\u00d75\uff09\uff0c\u5f53\u540e\u6bb5\u7f51\u7edc\u5168\u90e8\u662fInnerProduct\u65f6\uff0cN\u624d\u53ef\u4ee5\u8bbe\u7f6e\u4e3a300\uff08\u5982\u4e0a\u56fe\u6240\u793a\uff09\uff0c\u5982\u679c\u540e\u6bb5\u7f51\u7edc\u4e2d\u6709\u5377\u79ef\u65f6\uff0cN\u4ec5\u53ef\u4ee5\u8bbe\u7f6e\u4e3a1\uff0c\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u9700\u8981\u5faa\u73af\u6267\u884cN\u6b21\u3002 python3 ~/SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py caffe \\ --model_file second_stage.prototxt \\ --weight_file VGG16_faster_rcnn_final.caffemodel \\ --input_arrays conv5_3,rois \\ --output_arrays cls_prob,bbox_pred \\ --input_config input_config_stage2.ini \\ --output_file faster_rcnn_stage2_float.sim [INPUT_CONFIG] inputs = conv5_3,rois; input_formats = RAWDATA_S16_NHWC,RAWDATA_S16_NHWC; quantizations = TRUE,TRUE; [OUTPUT_CONFIG] outputs = cls_prob,bbox_pred; dequantizations = TRUE,TRUE;","title":"9.3.1 \u7f51\u7edc\u5207\u5206"},{"location":"module/User_Guide/IPU100/Special_Model_Conversion.html#932","text":"\u5de5\u5177\u8def\u5f84 SGS_IPU_SDK/Scripts/examples/caffe_faster_rcnn/faster_rcnn_calibrator.py \u8be5\u5de5\u5177\u4f5c\u4e3aFaster_RCNN\u7f51\u7edc\u8f6c\u6362demo\uff0c\u76f4\u63a5\u8fd0\u884c\u5373\u53ef\u5c06\u4e24\u6bb5\u7f51\u7edc\u76f4\u63a5\u8f6c\u6362\u6210fixed\u6a21\u578b\u3002 python3 ~/SGS_IPU_SDK/Scripts/examples/caffe_faster_rcnn/faster_rcnn_calibrator.py \\ -i ~/SGS_Models/resource/detection/voc_calibration_set32/ \\ -m0 faster_rcnn_main_float.sim \\ -m1 faster_rcnn_stage2_float.sim \\ --input_config0 input_config.ini \\ --input_config1 input_config_stage2.ini \u5728\u8f6c\u6362\u5206\u6bb5\u7f51\u7edc\u65f6\uff0c\u9996\u5148\u5b9a\u4e49\u7f51\u7edc\u7684\u4e24\u6bb5\u7f51\u7edc\uff0c\u518d\u7ec4\u7ec7\u4e24\u6bb5\u7f51\u7edc\u7684\u8fd0\u884c\u65b9\u5f0f\uff0c\u5b9a\u4e49\u5728forward\u65b9\u6cd5\u91cc\uff1a class Net ( calibrator_custom . SIM_Calibrator ): def __init__ ( self ): super () . __init__ () self . main_model = calibrator_custom . calibrator ( main_model_path , main_input_config ) self . second_model = calibrator_custom . calibrator ( second_model_path , second_input_config ) self . rpn = rpn . ProposalLayer () def forward ( self , x ): out_details = self . main_model . get_output_details () input_data , im_scale = fill_inputImg2main ( x ) self . main_model . set_input ( 0 , input_data ) self . main_model . invoke () result_list = [] for idx , _ in enumerate ( out_details ): result = self . main_model . get_output ( idx ) result_list . append ( result ) im_info = np . array ([ x . shape [ 0 ], x . shape [ 1 ], im_scale ]) . reshape ( 1 , 3 ) bottom = [ result_list [ 0 ], result_list [ 1 ], im_info ] roi = self . rpn . forward ( bottom ) out2_details = self . second_model . get_output_details () self . second_model . set_input ( 0 , result_list [ 2 ]) self . second_model . set_input ( 1 , roi ) self . second_model . invoke () second_result = [] for idx , _ in enumerate ( out2_details ): result = self . second_model . get_output ( idx ) second_result . append ( result ) return second_result Faster_RCNN\u7f51\u7edc\u4e2d\uff0c\u4f7f\u7528\u4e86\u81ea\u5b9a\u4e49\u7684rpn\u5c42\uff0c\u56e0\u6b64\u5c06\u7b2c\u4e00\u6bb5\u7f51\u7edc\u7684\u7b2c1\u4e2a\u548c\u7b2c2\u4e2a\u8f93\u51fa\u4ee5\u53ca\u56fe\u7247\u4fe1\u606f\u4f5c\u4e3arpn\u5c42\u7684\u8f93\u5165\uff0c\u7b2c\u4e00\u6bb5\u7f51\u7edc\u7684\u7b2c3\u4e2a\u8f93\u51fa\u548crpn\u5c42\u7684\u8f93\u51faroi\u4f5c\u4e3a\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u3002 \u6700\u540e\u8c03\u7528Net\u7684convert\u65b9\u6cd5\uff0c\u540c\u65f6\u751f\u6210\u4e24\u6bb5\u7f51\u7edc\u7684fixed\u6a21\u578b\u3002 net = Net () net . convert ( img_gen , num_process = num_subsets , fix_model = [ out_main_model , out_second_model ])","title":"9.3.2 \u8f6c\u6362\u7f51\u7edc"},{"location":"module/User_Guide/IPU100/Special_Model_Conversion.html#933","text":"\u5de5\u5177\u8def\u5f84 SGS_IPU_SDK/Scripts/examples/caffe_faster_rcnn/faster_rcnn_simulator.py \u8be5\u5de5\u5177\u4f5c\u4e3aFaster_RCNN\u7f51\u7edc\u8fd0\u884cdemo\uff0c\u76f4\u63a5\u8fd0\u884c\u4e24\u6bb5\u7f51\u7edc\u3002 python3 ~/SGS_IPU_SDK/Scripts/examples/caffe_faster_rcnn/faster_rcnn_simulator.py \\ -i ~/SGS_Models/resource/detection/004545.jpg \\ -m0 faster_rcnn_main_float.sim \\ -m1 faster_rcnn_stage2_float.sim \\ -t Float \u8fd0\u884c\u4e24\u6bb5\u6a21\u578b\u7684\u65b9\u6cd5\u4e0e\u8f6c\u6362\u7f51\u7edc\u65f6\u7c7b\u4f3c\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662fFixed\u6a21\u578b\u548cOffline\u6a21\u578b\u8f93\u51fa\u65f6\u4f1a\u6709Garbage\u6570\u636e\uff0c \u7b2c\u4e8c\u6bb5\u6a21\u578b\u8f93\u5165\u65f6\u9700\u8981\u5148\u5c06\u6570\u636e\u5bf9\u9f50\uff0c\u8be6\u89c19.2\u8282RAWDATA_S16_NHWC\u8f93\u5165\u7684\u6a21\u578b\u3002\u7531\u4e8e\u7b2c\u4e00\u6bb5\u7f51\u7edc\u7684conv5_3 \u8fd9\u4e2a\u8f93\u51fa\u76f4\u63a5\u8f93\u5165\u7b2c\u4e8c\u6bb5\u7f51\u7edc\uff0c\u6240\u4ee5\u8fd0\u884c\u65f6\u4e0d\u9700\u8981\u53bb\u9664Garbage\u548c\u8f6c\u6362\u6210float\uff0c\u53ef\u4ee5\u76f4\u63a5\u5c06\u8be5\u8f93\u51fa\u4f5c\u4e3a\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u3002 class Net ( calibrator_custom . SIM_Simulator ): def __init__ ( self ): super () . __init__ () self . main_model = main_model self . second_model = second_model self . rpn = rpn . ProposalLayer () def forward ( self , x ): # Run main model out_details = self . main_model . get_output_details () input_data , im_scale = fill_inputImg2main ( x , norm = norm ) self . main_model . set_input ( 0 , input_data ) self . main_model . invoke () result_list = [] for idx , _ in enumerate ( out_details ): result = self . main_model . get_output ( idx ) # Get main output for Fixed and Offline model if result . shape [ - 1 ] != out_details [ idx ][ 'shape' ][ - 1 ] and out_details [ idx ][ 'name' ] != 'conv5_3' : result = result [ ... , : out_details [ idx ][ 'shape' ][ - 1 ]] if out_details [ idx ][ 'dtype' ] == np . int16 and out_details [ idx ][ 'name' ] != 'conv5_3' : scale , _ = out_details [ idx ][ 'quantization' ] result = np . dot ( result , scale ) result_list . append ( result ) # Run Proposal Layer im_info = np . array ([ x . shape [ 0 ], x . shape [ 1 ], im_scale ]) . reshape ( 1 , 3 ) bottom = [ result_list [ 0 ], result_list [ 1 ], im_info ] roi = self . rpn . forward ( bottom ) # Run Second stage model in2_details = self . second_model . get_input_details () out2_details = self . second_model . get_output_details () in2_data = [ result_list [ 2 ], copy . deepcopy ( roi )] for idx , in2_info in enumerate ( in2_details ): if in2_info [ 'dtype' ] == np . int16 and in2_info [ 'name' ] != 'conv5_3' : # Set second model input for Fixed and Offline model ins , zp = in2_info [ 'quantization' ] in2_data [ idx ] = ( in2_data [ idx ] * 0.0625 / ins + zp ) . astype ( in2_info [ 'dtype' ]) feature_s16 = np . zeros ( in2_info [ 'shape' ]) . astype ( 'int16' ) feature_s16 [ ... , : in2_data [ idx ] . shape [ - 1 ]] = in2_data [ idx ] self . second_model . set_input ( in2_info [ 'index' ], feature_s16 ) else : self . second_model . set_input ( in2_info [ 'index' ], in2_data [ idx ]) self . second_model . invoke () second_result = [] for idx , _ in enumerate ( out2_details ): result = self . second_model . get_output ( idx ) # Get second output for Fixed and Offline model if result . shape [ - 1 ] != out2_details [ idx ][ 'shape' ][ - 1 ]: result = result [ ... , : out2_details [ idx ][ 'shape' ][ - 1 ]] if out2_details [ idx ][ 'dtype' ] == np . int16 : scale , _ = out2_details [ idx ][ 'quantization' ] result = np . dot ( result , scale ) second_result . append ( result . reshape ( 300 , - 1 )) second_result . append ( roi ) second_result . append ( im_info ) return second_result \u8fd0\u884c\u7f51\u7edc\u65f6\u5148\u521b\u5efaNet\u7684\u5b9e\u4f8b\uff0c\u7136\u540e\u8c03\u7528\u81ea\u8eab\u7684\u65b9\u6cd5\u5c31\u53ef\u4ee5\u8fd0\u884c\u3002\u5177\u4f53\u53c2\u80035.2.2\u8282\u3002 net = Net () results = net ( img_gen , num_process = num_subsets )","title":"9.3.3 \u8fd0\u884c\u7f51\u7edc"},{"location":"module/User_Guide/IPU100/Special_Model_Conversion.html#94","text":"","title":"9.4. \u591a\u8f93\u5165\u7f51\u7edc\u8f6c\u6362\u8981\u70b9"},{"location":"module/User_Guide/IPU100/Special_Model_Conversion.html#941","text":"\u4f7f\u7528Tensorflow1.14.0\u6784\u5efa\u4e00\u4e2a\u53cc\u8f93\u5165\u7f51\u7edc\uff0c\u8be5\u7f51\u7edc\u7528\u6765\u505a\u77e9\u9635\u4e58\u6cd5\uff0c\u8ba1\u7b97\u4e24\u4e2a\u5411\u91cf\u7684\u5185\u79ef\u3002 import tensorflow as tf import numpy as np SHAPE_DIMS = 256 input_np0 = np . random . rand ( 1 , SHAPE_DIMS ) . astype ( np . float32 ) input_np1 = np . random . rand ( 1 , SHAPE_DIMS ) . astype ( np . float32 ) input_0 = tf . placeholder ( dtype = tf . float32 , shape = ( 1 , SHAPE_DIMS ), name = 'input0' ) input_1 = tf . placeholder ( dtype = tf . float32 , shape = ( 1 , SHAPE_DIMS ), name = 'input1' ) out = tf . matmul ( input_0 , tf . reshape ( input_1 , ( SHAPE_DIMS , 1 )), name = 'output' ) with tf . Session () as sess : results = sess . run ( out , feed_dict = { input_0 : input_np0 , input_1 : input_np1 }) # Convert .pb output_graph_def = tf . graph_util . convert_variables_to_constants ( sess , sess . graph_def , [ 'output' ] ) with tf . gfile . GFile ( 'matmul.pb' , 'wb' ) as f : f . write ( output_graph_def . SerializeToString ()) print ( 'matmul.pb Saved!' ) # convert to .tflite tflite_model = tf . lite . TFLiteConverter . from_frozen_graph ( 'matmul.pb' , [ 'input0' , 'input1' ], [ 'output' ] ) tflite_model = tflite_model . convert () with open ( 'matmul.tflite' , 'wb' ) as f : f . write ( tflite_model ) print ( 'matmul.tflite Saved!' ) \u8fd0\u884c\u8be5\u811a\u672c\uff0c\u5c31\u80fd\u751f\u6210matmul.tflite\u6a21\u578b\u6587\u4ef6\u4e86\u3002","title":"9.4.1 \u6784\u5efa\u591a\u8f93\u5165\u7f51\u7edc"},{"location":"module/User_Guide/IPU100/Special_Model_Conversion.html#942","text":"\u4e0b\u9762\u5c06matmul.tflte\u8f6c\u6362\u6210\u53ef\u4ee5\u5728\u677f\u4e0a\u8fd0\u884c\u7684\u6a21\u578b\u6587\u4ef6\u3002 matmul.tflite\u6a21\u578b\u4e0d\u662f\u56fe\u7247\u8f93\u5165\uff0c\u56e0\u6b64\u914d\u7f6einput_config.ini\u6587\u4ef6\u8bf7\u53c2\u80039.2\u8282\u3002 \u914d\u7f6einput_config.ini\u811a\u672c [INPUT_CONFIG] inputs = input0,input1; input_formats = RAWDATA_S16_NHWC,RAWDATA_S16_NHWC; quantization = TRUE,TRUE; [OUTPUT_CONFIG] outputs = output; dequantization = TRUE; \u8bf7\u5148\u5728SGS_IPU_SDK\u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK source cfg_env.sh \u7136\u540e\u4f7f\u7528ConvertTool\u5de5\u5177\u8f6c\u6362matmul.tflite\uff1a python3 ~/SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py tflite \\ --model_file /path/to/matmul.tflite \\ --input_config /path/to/input_config.ini \\ --output_file /path/to/matmul_float.sim \u591a\u8f93\u5165\u7f51\u7edc\u7684calibrator\u8fc7\u7a0b\u9700\u8981\u4f7f\u7528calibrator_custom\u6a21\u5757\uff0c\u8be6\u7ec6\u53ef\u4ee5\u53c2\u80033.4\u8282\u3002\u4f46\u4e0e3.4.2\u8282\u4e2d\u4e0d\u540c\u7684\u662f\u8f93\u5165\u7684\u751f\u6210\u5668\u9700\u8981\u914d\u7f6e\u6210\u53cc\u8f93\u5165\u3002\u5c06\u4ee5\u4e0b\u793a\u4f8b\u6587\u4ef6\u4fdd\u5b58\u4e3amatmul_calibrator.py\u3002 # -*- coding: utf-8 -*- import calibrator_custom import os import sys import numpy as np import argparse from calibrator_custom import utils class Net ( calibrator_custom . SIM_Calibrator ): def __init__ ( self , model_path , input_config ): super () . __init__ () self . model = calibrator_custom . calibrator ( model_path , input_config ) def forward ( self , x , y ): out_details = self . model . get_output_details () self . model . set_input ( 0 , x ) self . model . set_input ( 1 , y ) self . model . invoke () result_list = [] for idx in range ( len ( out_details )): result = self . model . get_output ( idx ) result_list . append ( result ) return result_list def arg_parse (): parser = argparse . ArgumentParser ( description = 'Calibrator Tool' ) parser . add_argument ( '-m' , '--model' , type = str , required = True , help = 'Model path.' ) parser . add_argument ( '--input_config' , type = str , required = True , help = 'Input config path.' ) parser . add_argument ( '--quant_level' , type = str , default = 'L5' , choices = [ 'L1' , 'L2' , 'L3' , 'L4' , 'L5' ], help = 'Indicate Quantilization level. The higher the level, \\ the slower the speed and the higher the accuracy.' ) parser . add_argument ( '--num_process' , default = 10 , type = int , help = 'Amount of processes run at same time.' ) parser . add_argument ( '-o' , '--output' , default = None , type = str , help = 'Output path for fixed model.' ) return parser . parse_args () def data_gen (): calibrator_data = np . random . rand ( 100 , 1 , 256 ) . astype ( np . float32 ) bench_data = np . random . rand ( 100 , 1 , 256 ) . astype ( np . float32 ) for i , j in zip ( calibrator_data , bench_data ): yield [ i , j ] def main (): args = arg_parse () model_path = args . model input_config = args . input_config quant_level = args . quant_level num_subsets = args . num_process output = args . output if not os . path . exists ( model_path ): raise FileNotFoundError ( 'No such {} model' . format ( model_path )) if not os . path . exists ( input_config ): raise FileNotFoundError ( 'input_config.ini file not found.' ) net = Net ( model_path , input_config ) print ( net ) # random generate data # must change real data when using img_gen = data_gen () print ( ' \\033 [31m[WARNING] random generate data, \\ must change real data when using! \\033 [0m' , file = sys . stderr ) out_model = utils . get_out_model_name ( model_path , output ) net . convert ( img_gen , num_process = num_subsets , quant_level = quant_level , fix_model = [ out_model ]) if __name__ == '__main__' : main () \u4f7f\u7528\u7f16\u5199\u7684matmul_calibrator.py\u8f6c\u6362matmul_float.sim\uff0c\u751f\u6210matmul_fixed.sim\u3002 python3 matmul_calibrator.py \\ -m /path/to/matmul_float.sim \\ --input_config /path/to/input_config.ini \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u91cf\u5316\u8be5\u6a21\u578b\u7684\u8f93\u5165\u6570\u636e\u4e00\u5b9a\u8981\u6362\u6210\u771f\u5b9e\u6570\u636e\uff0c\u4e0d\u7136\u7edf\u8ba1\u751f\u6210\u7684fixed\u6a21\u578b\u7cbe\u5ea6\u4f1a\u51fa\u9519\u3002\u5982\u679c\u5355\u72ec\u91cf\u5316\u8be5\u6a21\u578b\u6bd4\u8f83\u56f0\u96be\uff0c\u6bd4\u5982\u5b83\u662f\u63a5\u5728\u67d0\u4e2a\u7f51\u7edc\u540e\u9762\u8fd0\u884c\u7684\uff0c\u53ef\u4ee5\u53c2\u80039.4\u8282\uff0c\u6309\u7167\u591a\u6bb5\u7f51\u7edc\u5904\u7406\uff0c\u5728calibrator_custom.SIM_Calibrator\u7c7b\u91cc\u5b9a\u4e49\u591a\u4e2a\u6a21\u578b\uff0c\u53ef\u4ee5\u76f4\u63a5\u751f\u6210\u51fa\u591a\u4e2afixed\u7f51\u7edc\u3002 \u6700\u540e\u4f7f\u7528compiler.py\u8f6c\u6362matmul_fixed.sim\uff0c\u751f\u6210matmul_fixed.sim_sgsimg.img\u3002","title":"9.4.2 \u8f6c\u6362\u591a\u8f93\u5165\u7f51\u7edc"},{"location":"module/User_Guide/IPU100/Special_Model_Conversion.html#943-pc","text":"\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd0\u884cFloat\u7684\u7f51\u7edc\u65f6\uff0c\u8f93\u5165\u6570\u636e\u7684type\u9700\u8981\u4e3afloat32\uff0c\u8f93\u5165\u6570\u636e\u7684shape\u4e0e\u6a21\u578b\u8f93\u5165shape\u76f8\u540c\u3002\u4f46\u662f\u7531\u4e8ematmul\u7684Fixed\u548cOffline\u6a21\u578b\u662fRAWDATA_S16_NHWC\u8f93\u5165\uff0c\u8f93\u5165\u6570\u636e\u9700\u8981\u5148\u53cd\u91cf\u5316\u5230int16\uff0c\u7136\u540e\u5bf9\u9f50\u540e\u624d\u80fd\u8f93\u5165\u5230\u6a21\u578b\u3002\u6240\u4ee5\u5b9a\u4e49calibrator_custom.SIM_Simulator\u7684forward\u51fd\u6570\u65f6\u9700\u8981\u6ce8\u610f\u8be5\u6a21\u578b\u7684\u7279\u6b8a\u6027\uff1a class Net ( calibrator_custom . SIM_Simulator ): def __init__ ( self , model_path , phase ): super () . __init__ () if phase == 'Float' : self . model = calibrator_custom . float_simulator ( model_path ) elif phase == 'Fixed' : self . model = calibrator_custom . fixed_simulator ( model_path ) else : self . model = calibrator_custom . offline_simulator ( model_path ) def forward ( self , x , y ): in_details = self . model . get_input_details () out_details = self . model . get_output_details () in2_data = [ x , y ] for idx , in_info in enumerate ( in_details ): if in_info [ 'dtype' ] == np . int16 : # Set model input for Fixed and Offline model ins , zp = in_info [ 'quantization' ] in2_data [ idx ] = np . clip (( in2_data [ idx ] / ins + zp ), - 32768 , 32767 ) . astype ( in_info [ 'dtype' ]) feature_s16 = np . zeros ( in_info [ 'shape' ]) . astype ( 'int16' ) feature_s16 [ ... , : in2_data [ idx ] . shape [ - 1 ]] = in2_data [ idx ] self . model . set_input ( in_info [ 'index' ], feature_s16 ) else : self . model . set_input ( in_info [ 'index' ], in2_data [ idx ]) self . model . invoke () result_list = [] for idx in range ( len ( out_details )): result = self . model . get_output ( idx ) # for Fixed and Offline model if result . shape [ - 1 ] != out_details [ idx ][ 'shape' ][ - 1 ]: result = result [ ... , : out_details [ idx ][ 'shape' ][ - 1 ]] if out_details [ idx ][ 'dtype' ] == np . int16 : scale , _ = out_details [ idx ][ 'quantization' ] result = np . dot ( result , scale ) result_list . append ( result ) return result_list","title":"9.4.3 \u5728PC\u4e0a\u8fd0\u884c\u591a\u8f93\u5165\u7f51\u7edc"},{"location":"module/User_Guide/IPU100/Special_Model_Conversion.html#944","text":"\u7531\u4e8ematmul_fixed.sim_sgsimg.img\u7f51\u7edc\u8f93\u5165\u662f RAWDATA_S16_NHWC \uff0c\u53ef\u4ee5\u53c2\u80039.2.2\u8282\u4e2dFillInputData\u51fd\u6570\uff0c\u4e0e\u5728PC\u4e0a\u76f8\u540c\uff0c\u9700\u8981\u5c06\u8f93\u5165\u6570\u636e\u5904\u7406\u540e\u518d\u9001\u5165\u6a21\u578b\u3002 \u591a\u8f93\u5165\u6a21\u578b\u53ea\u9700\u5728FillInputData\u51fd\u6570\u4e2d\u589e\u52a0\u5bf9\u6a21\u578b\u7684\u7b2c\u4e8c\u4e2a\u8f93\u5165\u704c\u5165\u6570\u636e\uff1a // input0 MI_S16 * pData0 = ( MI_S16 * ) InputTensorVector . astArrayTensors [ 0 ]. ptTensorData [ 0 ]; // input1 MI_S16 * pData1 = ( MI_S16 * ) InputTensorVector . astArrayTensors [ 1 ]. ptTensorData [ 0 ]; \u5982\u679cmatmul_fixed.sim_sgsimg.img\u662f\u4e3a\u4e86\u4f7f\u7528\u4e0a\u4e00\u4e2a\u6a21\u578b\u7684\u8f93\u51fa\u6570\u636e\uff0c\u53ef\u4ee5\u5bf9\u4e0a\u4e00\u4e2a\u6a21\u578b\u7684input_config.ini\u8fd9\u6837\u914d\u7f6e\uff1a [OUTPUT_CONFIG]\u7684dequantization=FALSE; \u8fd9\u6837\u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u4e0a\u4e00\u4e2a\u6a21\u578b\u7684\u8f93\u51fa\u6570\u636e\u7c7b\u578b\u4e3aINT16\uff0c\u53ef\u76f4\u63a5\u4f5c\u4e3amatmul_fixed.sim_sgsimg.img\u6a21\u578b\u7684\u8f93\u5165\u3002","title":"9.4.4 \u5728\u677f\u4e0a\u8fd0\u884c\u591a\u8f93\u5165\u7f51\u7edc"},{"location":"module/User_Guide/IPU200M/Convert.html","text":"2.1. \u4f7f\u7528\u65b9\u6cd5 \u00b6 Convert Tool\u5de5\u5177\u7684\u4f4d\u7f6e\u5728 SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py \u3002 \u76ee\u524dConvert Tool\u652f\u6301\u4ecetensorflow_graphdef\uff0ctensorflow_savemodel\uff0ckeras\uff0ctflite\uff0ccaffe\uff0connx \u516d\u79cd\u6846\u67b6\u6a21\u578b\u8f6c\u6362\u4e3aSGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u3002 \u4f7f\u7528\u524d\u5148\u5728SGS_IPU_SDK\u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK source cfg_env.sh \u4e0b\u9762\u662fConvert Tool\u76ee\u524d\u652f\u6301\u7684platform information\uff1a python3 ConvertTool.py -h usage : ConvertTool.py [-h] {tensorflow_graphdef,tensorflow_savemodel,keras,tflite,caffe,onnx} ... Convert Tool positional arguments : {tensorflow_graphdef,tensorflow_savemodel,keras,tflite,caffe,onnx} platform info tensorflow_graphdef tensorflow graphdef commands tensorflow_savemodel tensorflow save_model commands keras keras commands tflite tflite commands caffe caffe commands onnx onnx commands optional arguments : -h, --help show this help message and exit \u5982\u679c\u60f3\u8fdb\u4e00\u6b65\u770b\u770b\u5404\u4e2a\u5e73\u53f0\u8f6c\u6362\u6240\u9700\u8981\u7684\u53c2\u6570\u4fe1\u606f\uff0c\u53ef\u4ee5\u6267\u884c python3 ConvertTool.py {platform} \u2013h \uff0c\u5404\u4e2a\u5e73\u53f0\u5177\u4f53\u4fe1\u606f\u548c\u67e5\u770b\u6307\u4ee4\u5982\u4e0b\uff1a 2.1.1 tensorflow_graphdef \u6846\u67b6\u6307\u4ee4 \u00b6 python3 ConvertTool.py tensorflow_graphdef -h usage : ConvertTool.py tensorflow_graphdef [-h] --graph_def_file GRAPH_DEF_FILE --input_arrays INPUT_ARRAYS (optional) --output_arrays OUTPUT_ARRAYS (optional) --input_config INPUT_CONFIG --output_file OUTPUT_FILE --input_shapes INPUT_SHAPES (optional) optional arguments : -h, --help show this help message and exit. --graph_def_file GRAPH_DEF_FILE Full filepath of file containing frozen GraphDef. --input_arrays INPUT_ARRAYS Names of the input arrays, comma-separated. --output_arrays OUTPUT_ARRAYS Names of the output arrays, comma-separated. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth. Default : None \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ConvertTool.py tensorflow_graphdef \\ --graph_def_file ~/SGS_Models/tensorflow/resnet_v2_50/resnet_v2_50.pb \\ --output_file ./resnet_v2_float.sim \\ --input_shapes 1,299,299,3 \\ --input_config ~/SGS_Models/tensorflow/resnet_v2_50/input_config.ini \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a --graph_def_file : \u8f93\u5165\u7684\u6a21\u578b\u4e3aTensorFlow frozen\u7684graphdef\u7684pb\u683c\u5f0f\u6587\u4ef6\u8def\u5f84\u3002 --output_file : \u8f93\u51fa\u7684\u6a21\u578b\u6587\u4ef6\uff0cflatbuffer\u683c\u5f0f\uff0csim\u540e\u7f00\u6587\u4ef6\u3002 --input_shapes : \u7f51\u7edc\u8f93\u5165Tensor\u7684shape\uff0c\u683c\u5f0f\u4e3aNHWC\uff0cdimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0cshape\u4e2a\u6570\u548cinputs\u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 \u53ef\u9009\u53c2\u6570\uff1a --input_arrays : \u7f51\u7edc\u8f93\u5165Tensor\u7684\u540d\u5b57\uff0c\u4ee5\u5b57\u7b26\u4e32\u7c7b\u578b\u6307\u5b9a\uff0c\u591a\u4e2ainputs\u7684\u8bdd\uff0c\u4e2d\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0c\u5982\uff1a--input_arrays='Input1','Input2'\u3002 --output_arrays : \u7f51\u7edc\u8f93\u51faTensor\u7684\u540d\u5b57\uff0c\u4ee5\u5b57\u7b26\u4e32\u7c7b\u578b\u6307\u5b9a\uff0c\u591a\u4e2aoutputs\u7684\u8bdd\uff0c\u4e2d\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\u3002 2.1.2 tensorflow_savemodel \u6846\u67b6\u6307\u4ee4 \u00b6 python3 ConvertTool.py tensorflow_savemodel -h usage : ConvertTool.py tensorflow_savemodel [-h] --saved_model_dir SAVED_MODEL_DIR --input_config INPUT_CONFIG --output_file OUTPUT_FILE --output_arrays OUTPUT_ARRAYS (optional) --input_arrays INPUT_ARRAYS (optional) --input_shapes INPUT_SHAPES (optional) --tag_set TAG_SET (optional) --signature_key SIGNATURE_KEY (optional) optional arguments : -h, --help show this help message and exit. --saved_model_dir SAVED_MODEL_DIR SavedModel directory to convert. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. --debug Run gdb in Debug mode. --input_arrays INPUT_ARRAYS Names of the input arrays, comma-separated. Default : None. --output_arrays OUTPUT_ARRAYS Names of the output arrays, comma-separated. Default : None. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth Default : None. --tag_set TAG_SET Set of tags identifying the MetaGraphDef within the SavedModel to analyze. All tags in the tag set must be present. Default : None. --signature_key SIGNATURE_KEY Key identifying SignatureDef containing inputs and outputs. Default : DEFAULT_SERVING_SIGNATURE_DEF_KEY \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ConvertTool.py tensorflow_savemodel \\ --saved_model_dir ~/test/tensorflow_model/save_model \\ --input_config ~/test/tensorflow_model/input_config.ini \\ --output_file ~/test/tensorflow_model/save_model_float.sim \\ --tag_set test_saved_model \\ --signature_key test_signature \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a --saved_model_dir : \u8f93\u5165\u7684\u6a21\u578b\u4e3aTensorFlow saved_model.builder\u751f\u6210\u7684\u6587\u4ef6\u8def\u5f84\u3002 --output_file : \u8f93\u51fa\u7684\u6a21\u578b\u6587\u4ef6\uff0cflatbuffer\u683c\u5f0f\uff0csim\u540e\u7f00\u6587\u4ef6\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 \u53ef\u9009\u53c2\u6570\uff1a --input_arrays : \u7f51\u7edc\u8f93\u5165Tensor\u7684\u540d\u5b57\uff0c\u4ee5\u5b57\u7b26\u4e32\u7c7b\u578b\u6307\u5b9a\uff0c\u591a\u4e2ainputs\u7684\u8bdd\uff0c\u4e2d\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0c\u5982\uff1a--input_arrays='Input1','Input2'\uff0c\u82e5\u4e0d\u6307\u5b9a\u5219\u4ecesaved_model_dir\u4e2d\u83b7\u53d6\u3002 --output_arrays : \u7f51\u7edc\u8f93\u51faTensor\u7684\u540d\u5b57\uff0c\u4ee5\u5b57\u7b26\u4e32\u7c7b\u578b\u6307\u5b9a\uff0c\u591a\u4e2aoutputs\u7684\u8bdd\uff0c\u4e2d\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\u3002\u82e5\u4e0d\u6307\u5b9a\u5219\u4ecesaved_model_dir\u4e2d\u83b7\u53d6\u3002 --input_shapes : \u7f51\u7edc\u8f93\u5165Tensor\u7684shape\uff0c\u683c\u5f0f\u4e3aNHWC\uff0cdimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0cshape\u4e2a\u6570\u548cinputs \u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002\u82e5\u4e0d\u6307\u5b9a\u5219\u4ecesaved_model_dir\u4e2d\u83b7\u53d6\u3002 --tag_set : \u9700\u8981\u548csave model\u65f6\u6240\u6307\u5b9a\u7684tag\u5339\u914d\uff0c\u5982\u679c\u4e0d\u505a\u8bbe\u5b9a\uff0c\u5219\u9ed8\u8ba4\u4e3a\u2018serve\u2019\u3002 --signature_key : \u9700\u8981\u548csave model\u65f6\u6240\u6307\u5b9a\u7684signature\u5339\u914d\u3002\u5982\u679c\u4e0d\u505a\u8bbe\u5b9a\uff0c\u5219\u9ed8\u8ba4\u4e3a \u2018DEFAULT_SERVING_SIGNATURE_DEF_KEY\u2019 2.1.3 keras\u6846\u67b6\u6307\u4ee4 \u00b6 python3 ConvertTool.py keras -h usage : ConvertTool.py keras [-h] --model_file MODEL_FILE --input_config INPUT_CONFIG --output_file OUTPUT_FILE --input_arrays INPUT_ARRAYS (optional) --output_arrays OUTPUT_ARRAYS (optional) --input_shapes INPUT_SHAPES (optional) --custom_objects CUSTOM_OBJECTS (optional) optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of HDF5 file containing the tf.keras model. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. --input_arrays INPUT_ARRAYS Names of the input arrays, comma-separated. Default : None. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth. Default : None. --output_arrays OUTPUT_ARRAYS Names of the output arrays, comma-separated. Default : None. --custom_objects CUSTOM_OBJECTS Dict mapping names (strings) to custom classes or functions to be considered during model deserialization. Default : None. \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ConvertTool.py keras \\ --model_file ./TEST_h5/resnet50/resnet50.h5 \\ --input_config ./TEST_h5/resnet50/input_config.ini \\ --output_file ./TEST_h5/resnet50/resnet50_float.sim \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a --model_file : \u8f93\u5165\u7684\u6a21\u578b\u4e3akeras h5\u683c\u5f0f\u6587\u4ef6\u8def\u5f84\u3002 --output_file : \u8f93\u51fa\u7684\u6a21\u578b\u6587\u4ef6\uff0cflatbuffer\u683c\u5f0f\uff0csim\u540e\u7f00\u6587\u4ef6\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 \u53ef\u9009\u53c2\u6570\uff1a --input_arrays : \u7f51\u7edc\u8f93\u5165Tensor\u7684\u540d\u5b57\uff0c\u4ee5\u5b57\u7b26\u4e32\u7c7b\u578b\u6307\u5b9a\uff0c\u591a\u4e2ainputs\u7684\u8bdd\uff0c\u4e2d\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0c\u5982\uff1a--input_arrays='Input1','Input2'\u3002 --output_arrays : \u7f51\u7edc\u8f93\u51faTensor\u7684\u540d\u5b57\uff0c\u4ee5\u5b57\u7b26\u4e32\u7c7b\u578b\u6307\u5b9a\uff0c\u591a\u4e2aoutputs\u7684\u8bdd\uff0c\u4e2d\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\u3002 --input_shapes : \u7f51\u7edc\u8f93\u5165Tensor\u7684shape\uff0c\u683c\u5f0f\u4e3aNHWC\uff0cdimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0cshape\u4e2a\u6570\u548cinputs \u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002 --custom_objects : Dict mapping names (strings) to custom classes or functions to be considered during model deserialization (default None). 2.1.4 tflite\u6846\u67b6\u6307\u4ee4 \u00b6 python3 ConvertTool.py tflite -h usage : ConvertTool.py tflite [-h] --model_file MODEL_FILE --input_config INPUT_CONFIG --output_file OUTPUT_FILE optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of tflite file containing the tflite model. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ConvertTool.py tflite \\ --model_file ~/test/tensorflow_model/Debug_save_model_float.tflite \\ --input_config ~/test/tensorflow_model/input_config.ini \\ --output_file ~/test/tensorflow_model/save_model_float.sim \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a --model_file : \u8f93\u5165\u7684\u6a21\u578b\u4e3atflite\u683c\u5f0f\u6587\u4ef6\u8def\u5f84(\u5fc5\u987b\u4e3a\u975e\u91cf\u5316\u6a21\u578b)\u3002 --output_file : \u8f93\u51fa\u7684\u6a21\u578b\u6587\u4ef6\uff0cflatbuffer\u683c\u5f0f\uff0csim\u540e\u7f00\u6587\u4ef6\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 2.1.5 caffe\u6846\u67b6\u6307\u4ee4 \u00b6 python3 ConvertTool.py caffe -h usage : ConvertTool.py caffe [-h] --model_file MODEL_FILE --weight_file WEIGHT_FILE --input_config INPUT_CONFIG --output_file OUTPUT_FILE --input_arrays INPUT_ARRAYS (optional) --output_arrays OUTPUT_ARRAYS (optional) optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of tflite file containing the caffe model. --weight_file WEIGHT_FILE Full filepath of tflite file containing the caffe weight. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. --input_arrays INPUT_ARRAYS Names of the input arrays, comma-separated. Default : None. --output_arrays OUTPUT_ARRAYS Names of the output arrays, comma-separated. Default : None. --debug Run gdb in Debug mode. \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ConvertTool.py caffe \\ --model_file ~/SGS_Models/caffe/caffe_resnet50_conv/caffe_resnet50_conv.prototxt \\ --weight_file ~/SGS_Models/caffe/caffe_resnet50_conv/caffe_resnet50_conv.caffemodel \\ --input_config ~/SGS_Models/caffe/caffe_resnet50_conv/input_config.ini \\ --output_file ./resnet50_float.sim \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a --model_file : Caffe\u6a21\u578b\u6587\u4ef6\u7684\u8def\u5f84 --weight_file : Caffe\u6743\u91cd\u6587\u4ef6\u7684\u8def\u5f84 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput config\u7684\u914d\u7f6e\u4fe1\u606f\u3002 --output_file : \u8f6c\u6362\u6a21\u578b\u7684\u8f93\u51fa\u8def\u5f84\u3002 \u53ef\u9009\u53c2\u6570\uff1a --input_arrays : Caffe\u6a21\u578b\u8f93\u5165\u7684\u8282\u70b9\u540d\u79f0\uff0c\u4f7f\u7528input\u7684\u540d\u5b57\uff0c\u5982\u6709\u591a\u4e2a\u8f93\u51fa\u8282\u70b9\uff0c\u8bf7\u7528\u9017\u53f7( , )\u5206\u9694 --output_arrays : \u6a21\u578b\u8f93\u51fa\u7684\u8282\u70b9\u540d\u79f0\uff0c\u4f7f\u7528\u6700\u540elayer\u7684top\u540d\u5b57\uff0c\u5982\u6709\u591a\u4e2a\u8f93\u51fa\u8282\u70b9\uff0c\u8bf7\u7528\u9017\u53f7( , )\u5206\u9694 --output_pack_model_arrays : \u8f93\u51faTensors\u6570\u636e\u9ed8\u8ba4\u6392\u5e03\u4e3aNHWC,\u9ed8\u8ba4\u4e3aNone\uff1b\u652f\u6301\u4e24\u79cd\u6307\u5b9a\u8f93\u51fa\u6570\u636e\u6392\u5e03\u4e3aNCHW\u7684\u8868\u8fbe\u65b9\u5f0f \uff081\uff09caffe\u6a21\u578b\u4f7f\u7528\u2018caffe\u2019\uff0c\u8f93\u51faTensors\u7684\u6570\u636e\u6392\u5e03\u4e3aNCHW\uff1b\uff082\uff09\u8bbe\u4e3a\u8f93\u51faTensors\u540d\u5b57\uff0c\u8be5\u8f93\u51faTensor\u7684\u6570\u636e\u6392\u5e03\u4e3aNCHW\u3002 2.1.6 Onnx\u6846\u67b6\u6307\u4ee4 \u00b6 python3 Path_to_SGS_IPU_SDK/Scripts/ConvertTool onnx -h usage : ConvertTool.py onnx [-h] --model_file MODEL_FILE --input_arrays INPUT_ARRAYS (optional) --input_shapes INPUT_SHAPES --output_arrays OUTPUT_ARRAYS (optional) --input_config INPUT_CONFIG --output_file OUTPUT_FILE optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of tflite file containing the onnx model. --input_arrays INPUT_ARRAYS Names of the input arrays, comma-separated. (default None). --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon-separated. For many models each shape takes the form N C H W (default None) --output_arrays OUTPUT_ARRAYS Names of the output arrays, comma-separated. (default None) --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ~/SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py onnx \\ --model_file ~/SGS_Models/onnx/ onnx_mobilenet_v2/ onnx_mobilenet_v2.onnx \\ --input_shapes 1,3,224,224 \\ --input_config ~/SGS_Models/onnx/ onnx_mobilenet_v2/input_config.ini \\ --output_file ./onnx_mobilenet_v2_float.sim \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a --model_file : Onnx\u6a21\u578b\u6587\u4ef6\u7684\u8def\u5f84 --input_shapes : Onnx \u6a21\u578b\u8f93\u5165shape\uff0c \u591a\u8f93\u5165\u7528\u5192\u53f7( : )\u5206\u9694 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput config\u7684\u914d\u7f6e\u4fe1\u606f\u3002 --output_file : \u8f6c\u6362\u6a21\u578b\u7684\u8f93\u51fa\u8def\u5f84\u3002 \u53ef\u9009\u53c2\u6570\uff1a --input_arrays : Onnx\u6a21\u578b\u8f93\u5165\u7684\u8282\u70b9\u540d\u79f0\uff0c\u4f7f\u7528input\u7684\u540d\u5b57,\u591a\u8f93\u5165\u7528\u9017\u53f7( , )\u5206\u9694 --output_arrays : \u6a21\u578b\u8f93\u51fa\u7684\u8282\u70b9\u540d\u79f0\uff0c\u4f7f\u7528\u6700\u540elayer\u7684top\u540d\u5b57\uff0c\u5982\u6709\u591a\u4e2a\u8f93\u51fa\u8282\u70b9\uff0c\u8bf7\u7528\u9017\u53f7( , )\u5206\u9694 --output_pack_model_arrays : \u8f93\u51faTensors\u6570\u636e\u9ed8\u8ba4\u6392\u5e03\u4e3aNHWC,\u9ed8\u8ba4\u4e3aNone\uff1b\u652f\u6301\u4e24\u79cd\u6307\u5b9a\u8f93\u51fa\u6570\u636e\u6392\u5e03\u4e3aNCHW\u7684\u8868\u8fbe\u65b9\u5f0f \uff081\uff09onnx\u6a21\u578b\u4f7f\u7528\u2018onnx\u2019\uff0c\u8f93\u51faTensors\u7684\u6570\u636e\u6392\u5e03\u4e3aNCHW\uff1b\uff082\uff09\u8bbe\u4e3a\u8f93\u51faTensors\u540d\u5b57\uff0c\u8be5\u8f93\u51faTensor\u7684\u6570\u636e\u6392\u5e03\u4e3aNCHW\u3002 \u6ce8\u610f 1.\u5982\u679c\u6a21\u578b\u4e2d\u5e26\u6709\u540e\u5904\u7406\u7684\u7b97\u5b50\uff0c\u8bf7\u5148\u53bb\u9664\uff0c\u76ee\u524d\u53ea\u652f\u6301\u4e3b\u5e72\u7f51\u7edc\u7684\u8f6c\u6362\u3002 2.Convert Tool\u8f6c\u6362\u5de5\u5177\u8f6c\u6362\u5b8c\u6210\u540e\u4f1a\u751f\u6210\u4e24\u4e2a\u6587\u4ef6\uff0c\u4f8b\u5982 --output_file \u6307\u5b9a\u4e3a ./resnet50_float.sim\uff0c\u8f6c\u6362\u5b8c\u6210\u540e\u4f1a\u751f\u6210Debug_resnet50_float.sim\u548cresnet50_float.sim\u3002\u5176\u4e2d\uff0cresnet50_float.sim\u662f\u771f\u6b63\u8f6c\u6362\u597d\u7684\u6587\u4ef6\uff0cDebug_resnet50_float.sim\u662f\u7ecf\u8fc7\u8f6c\u6362\u540e\u7684\u4e2d\u95f4\u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u672a\u7ecf\u8fc7\u4f18\u5316\uff0c\u4e0e\u539f\u6846\u67b6\u6a21\u578b\u62e5\u6709\u76f8\u540c\u7684\u7f51\u7edc\u7ed3\u6784\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f5c\u4e3a\u8f6c\u6362\u540e\u8c03\u8bd5\u4f7f\u7528\uff0c\u4f46\u662f\u65e0\u6cd5\u5728IPU SDK\u4e2d\u8fd0\u884c\u3002 2.2. input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e \u00b6 \u5de5\u5177\u7684\u53c2\u6570 --input_config \u9700\u8981\u6307\u5b9ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u6587\u4ef6input_config.ini\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u7684\u4e3b\u8981\u529f\u80fd\u6709\uff1a \u2022 \u914d\u7f6e\u7f51\u7edc\u6a21\u578b\u56fe\u7247\u524d\u5904\u7406\u7684\u5f52\u4e00\u5316\u4fe1\u606f\uff1b \u2022 \u914d\u7f6e\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u8f93\u51fa\u7684\u91cf\u5316\u5904\u7406\u4fe1\u606f\uff1b \u2022 \u914d\u7f6e\u7f51\u7edc\u6a21\u578b\u4e2d\u5377\u79ef\u7684\u91cf\u5316\u4fe1\u606f\u3002 \u914d\u7f6einput_config.ini\u6587\u4ef6\u4e3b\u8981\u662f\u4e3a\u4e86\u80fd\u5c06\u7f51\u7edc\u6a21\u578b\u5feb\u901f\u9002\u914d\u5230SigmaStar\u82af\u7247\u4e2d\u4f7f\u7528\u3002\u5728\u7f51\u7edc\u6a21\u578b\u7684\u8bad\u7ec3\u4e2d\uff0c\u4e0d\u540c\u7684\u6846\u67b6\u548c\u8bad\u7ec3\u6570\u636e\u96c6\u9700\u8981\u7f51\u7edc\u4f7f\u7528\u4e0d\u540c\u7684\u56fe\u7247\u5f52\u4e00\u5316\u65b9\u6cd5\uff0c\u800c\u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0c\u4e3a\u4e86\u80fd\u591f\u8ba9\u7f51\u7edc\u6a21\u578b\u7684\u9884\u6d4b\u66f4\u52a0\u51c6\u786e\uff0c\u9700\u8981\u8fd8\u539f\u8bad\u7ec3\u6a21\u578b\u65f6\u7684\u56fe\u7247\u524d\u5904\u7406\u5f52\u4e00\u5316\u65b9\u6cd5\u3002 \u5c06RGB\u4e09\u4e2a\u901a\u9053\u7684\u5747\u503c\u548cstd_value\u8bbe\u7f6e\u597d\u540e\uff0c\u5728\u8f6c\u6362\u6a21\u578b\u65f6\u4f1a\u5199\u5165\u5230\u6a21\u578b\u5185\u90e8\uff0c\u8fd9\u6837\u5728\u786c\u4ef6\u4e0a\u5b9e\u9645\u4f7f\u7528\u65f6\uff0c\u4ec5\u9700\u8981\u5c06\u56fe\u7247resize\u5230\u7f51\u7edc\u6a21\u578b\u7684\u8f93\u5165\u7684\u5c3a\u5bf8\uff0c\u56fe\u7247\u5f52\u4e00\u5316\u7684\u5de5\u4f5c\u5728\u7f51\u7edc\u5185\u90e8\u5b8c\u6210\u3002 \u53e6\u5916\uff0c\u5b9e\u9645\u786c\u4ef6\u4e0a\u4f7f\u7528\u65f6\u56fe\u7247\u8f93\u5165\u683c\u5f0f\u4e0e\u8bad\u7ec3\u65f6\u4f7f\u7528\u7684RGB\u53ef\u80fd\u6709\u5f88\u5927\u533a\u522b\uff0c\u6b63\u786e\u914d\u7f6e\u8fd9\u4e9b\u9009\u9879\u80fd\u4f7f\u8f6c\u6362\u597d\u7684\u6a21\u578b\u5185\u62e5\u6709\u8fd9\u4e9b\u914d\u7f6e\u4fe1\u606f\uff0c\u80fd\u591f\u76f4\u63a5\u5728SigmaStar\u7684\u786c\u4ef6\u4e0a\u90e8\u7f72\u3002 [INPUT_CONFIG] ;Names of the input arrays, comma-separated.image input must be the first. inputs = 'data'; ;Memory formats of input arrays, comma-separated. ;One of RGB, BGR, RGBA, BGRA, YUV_NV12, RAWDATA_S16_NHWC, RAWDATA_F32_NHWC. ;Each entry in the list should match an entry in inputs arrays. training_input_formats = BGR; input_formats = BGR; ;Indicate the input data need qauntize or not. ;Each entry in the list should match an entry in inputs arrays. quantizations = TRUE; ;mean_values parameter for image models, ;Each entry in the list match RGB channel of\uff08RGB,BGR,RGBA,BGRA,YUV_NV12\uff09 mean_red = 0.0; mean_green = 0.0; mean_blue = 0.0; ;std_value parameter for image models, std_value = 1.0; [OUTPUT_CONFIG] ;Names of the output arrays, comma-separated. outputs = 'prob'; ;Indicate the output data need deqauntize or not. ;Each entry in the list should match an entry in outputs arrays. dequantizations = TRUE; [CONV_CONFIG] ;input_format=ALL_INT16; tensor_arrays = 'conv1-1,conv2-1'; \u8be5\u6587\u4ef6\u4e3b\u8981\u5206\u4e3a\u4e09\u4e2a\u8bbe\u7f6e\u4fe1\u606f\uff1a [INPUT_CONFIG] [OUTPUT_CONFIG] [CONV_CONFIG] \u9488\u5bf9\u8fd9\u4e09\u4e2a\u8bbe\u7f6e\u4fe1\u606f\u5177\u4f53\u8bf4\u660e\uff1a \u6ce8\u610f String\u7c7b\u578b\u7684\u503c\uff0c\u5982tensor name\uff0c\u9700\u7528('')\u5c06\u5185\u5bb9\u5305\u542b\u8d77\u6765\uff0c\u4f8b\u5982outputs='detectionBoxes,detectionClasses,detectionScores,numDetections'; 2.2.1 INPUT_CONFIG \u00b6 inputs : \u7f51\u7edc\u8f93\u5165Tensor\u7684name\uff0c\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u8bf7\u7528\u9017\u53f7( , )\u5206\u9694\u3002\u6a21\u578b\u8f93\u5165Tensor\u987a\u5e8f\u4e0e inputs \u7684\u914d\u7f6e\u987a\u5e8f\u4e00\u81f4\u3002\u6240\u6709\u8f93\u5165name\u7684\u957f\u5ea6\u4e0d\u80fd\u8d85\u8fc71024\u4e2a\u5b57\u7b26\u3002 training_input_formats : \u7f51\u7edc\u8bad\u7ec3\u65f6\u7684\u56fe\u7247\u683c\u5f0f\uff0c\u6570\u91cf\u548c\u987a\u5e8f\u4e0einputs\u4e00\u4e00\u5bf9\u5e94\uff0c\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u3002\u8fd9\u4e9b\u683c\u5f0f\u5305\u62ecRGB\uff0cBGR\uff0cRAWDATA_S16_NHWC(\u82e5 training_input_formats \u8bbe\u7f6e\u4e3a RAWDATA_S16_NHWC ,\u5219 input_formats \u4e5f\u5fc5\u987b\u8bbe\u7f6e\u4e3a RAWDATA_S16_NHWC ) \u5176\u4e2d\u4e4b\u4e00\u3002training_input_formats\u53ef\u4ee5\u548cinput_formats \u4e0d\u4e00\u6837\u3002\u4f8b\u5982\u5728\u5728SigmaStar\u5f00\u53d1\u677f\u4e0a\uff0cinput_formats\u662fYUV_NV12\uff0c\u4f46\u662ftraining input formats \u662fRGB\u3002 input_formats : \u7f51\u7edc\u6a21\u578b\u5728SigmaStar\u82af\u7247\u4e0a\u8fd0\u884c\u7684\u56fe\u7247\u8f93\u5165\u683c\u5f0f\uff0c\u6570\u91cf\u548c\u987a\u5e8f\u4e0einputs\u4e00\u4e00\u5bf9\u5e94\uff0c\u9017\u53f7( , )\u5206\u9694\u3002 \u8fd9\u4e9b\u683c\u5f0f\u5305\u62ec\uff1a RGB BGR RGBA BGRA YUV_NV12 RAWDATA_F32_NHWC RAWDATA_S16_NHWC \u6ce8\u610f\uff1a * training_input_formats \u548c input_formats \u4e0d\u80fd\u914d\u7f6e\u4e3a\u5982\u4e0b\u60c5\u51b5\uff1a training_input_formats=RGB; input_formats=BGR; \u6216\u8005 training_input_formats=BGR; input_formats=RGB; * \u7070\u5ea6\u56fe\u7247\u8bf7\u6309\u5982\u4e0b\u65b9\u5f0f\u914d\u7f6e\uff1a training_input_formats=RGB; input_formats=GRAY; \u5177\u4f53\u8be6\u89c1 9.1 \u7070\u5ea6\u6a21\u578b\u8f6c\u6362\u8981\u70b9 * \u914d\u7f6e RAWDATA_F32_NHWC \u6216 RAWDATA_S16_NHWC \u65f6\uff0c mean_red \u3001 mean_green \u3001 mean_blue \u548c std_value \u4e0d\u8981\u914d\u7f6e\uff0c\u5177\u4f53\u8be6\u89c1 9.2 RAWDATA_F32_NHWC\u6a21\u578b\u8f6c\u6362\u8981\u70b9 quantizations : \u7528\u6765\u6807\u8bc6\u6240\u6709\u8f93\u5165Tensor\u7684\u6570\u636e\u662f\u5426\u9700\u8981\u505a\u91cf\u5316\uff0cTRUE\u6216\u8005FALSE\uff0c\u9ed8\u8ba4\u503c\u4e3aTRUE,\u6570\u91cf\u7b49\u4e8einputs \u4e2a\u6570\u3002\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 mean_red / mean_green / mean_blue : \u7f51\u7edc\u8bad\u7ec3\u9636\u6bb5\uff0c\u4e00\u822c\u4f1a\u5bf9\u56fe\u7247\u505a\u524d\u5904\u7406\uff0c\u5bf9\u4e8eRGB\u901a\u9053\u7684\u56fe\u7247\uff0c\u4f7f\u7528\u5982\u4e0b\u516c\u5f0f\u5bf9\u56fe\u7247\u8fdb\u884c\u9884\u5904\u7406\uff1a (RGB - [mean_red, mean_green, mean_green])/std_value mean_red / mean_green / mean_blue \u5c31\u662f\u76f8\u5e94\u901a\u9053\u4e0a\u7684mean\u503c\u3002\u5982\u679c\u8fd9\u4e2a\u7f51\u7edc\u6ca1\u6709\u505a\u4efb\u4f55\u5f52\u4e00\u5316\u5904\u7406\uff0c\u8fd9\u4e2a\u503c\u8bbe\u4e3a0\u5373\u53ef\u3002\u6bcf\u4e2amean\u6570\u91cf\u7b49\u4e8einputs \u4e2a\u6570\u3002\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 std_value : \u5982\u4e0a\u516c\u5f0f\uff0c\u5982\u679c\u6ca1\u6709\u505a\u4efb\u4f55\u5f52\u4e00\u5316\u5904\u7406\uff0c\u8fd9\u4e2a\u503c\u8bbe\u4e3a1\u5373\u53ef\u3002\u5982\u679c\u6bcf\u4e2a\u901a\u9053\u90fd\u6709\u5bf9\u5e94\u7684std_value\u503c\uff0c\u4ee5\u82f1\u6587\u5192\u53f7( : )\u5206\u9694\uff0c\u987a\u5e8f\u4e3aRGB\u3002\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 yuv420_h_pitch_alignment \uff1a\u7528\u6765\u6807\u8bc6YUV\u6570\u636e\u4f5c\u4e3a\u7f51\u7edc\u8f93\u5165\u65f6H\u65b9\u5411\u5bf9\u9f50\u7684\u6570\u91cf\uff0c\u9ed8\u8ba4\u4e3a16\u3002 yuv420_v_pitch_alignment \uff1a\u7528\u6765\u6807\u8bc6YUV\u6570\u636e\u4f5c\u4e3a\u7f51\u7edc\u8f93\u5165\u65f6V\u65b9\u5411\u5bf9\u9f50\u7684\u6570\u91cf\uff0c\u9ed8\u8ba4\u4e3a2\u3002 xrgb_h_pitch_alignment \uff1a\u7528\u6765\u6807\u8bc6XRGB\u6570\u636e\u4f5c\u4e3a\u7f51\u7edc\u8f93\u5165\u65f6H\u65b9\u5411\u5bf9\u9f50\u7684\u6570\u91cf\uff0c\u9ed8\u8ba4\u4e3a16\u3002 \u6ce8\u610f \u4ee5\u4e0a\u4e09\u4e2a\u914d\u7f6e\u53ea\u80fd\u914d\u7f6e\u9ed8\u8ba4\u503c\u7684\u6574\u6570\u500d\u3002 \u4f8b\u5982\uff1ayuv420_h_pitch_alignment=32; 2.2.2 OUTPUT_CONFIG \u00b6 outputs : \u7f51\u7edc\u8f93\u51faTensor\u7684name(\u53ef\u7528Netron\u5de5\u5177\u6253\u5f00\u6a21\u578b\u67e5\u770b)\uff0c\u5982\u679c\u6709\u591a\u4e2a\u8f93\u51faTensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u3002\u8f6c\u6362\u5e26\u540e\u5904\u7406\u7f51\u7edc\u65f6\uff0cBackbone\u7f51\u7edc\u7684outputs\u4e0e\u5b8c\u6574\u7f51\u7edcoutputs\u7684\u540d\u79f0\u4e0d\u540c\uff0c\u5176\u4f59\u8bbe\u7f6e\u5e94\u5b8c\u5168\u4e00\u81f4\u3002\u6a21\u578b\u8f93\u51faTensor\u987a\u5e8f\u4e0e outputs \u7684\u914d\u7f6e\u987a\u5e8f\u4e00\u81f4\u3002\u6240\u6709\u8f93\u51faname\u7684\u957f\u5ea6\u4e0d\u80fd\u8d85\u8fc71024\u4e2a\u5b57\u7b26\u3002 dequantizations : \u7528\u6765\u6807\u8bc6\u6240\u6709\u8f93\u51faTensor\u7684\u6570\u636e\u662f\u5426\u9700\u8981\u505a\u53cd\u91cf\u5316\uff0cTRUE\u6216\u8005FALSE\uff0c\u9ed8\u8ba4\u503c\u4e3aTRUE,\u6570\u91cf\u7b49\u4e8eoutputs\u3002\u5982\u679c\u6709\u591a\u4e2a\u8f93\u51faTensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002\u8be5\u9009\u9879\u4ec5\u5728\u677f\u4e0a\u8fd0\u884c\u65f6\u751f\u6548\u3002\u8be5\u9009\u9879\u8bbe\u4e3aTRUE\u65f6\uff0c\u4f1a\u5728\u8f6c\u6362\u5230Fixed\u6a21\u578b\u540e\u5728\u5bf9\u5e94\u7684\u8f93\u51fa\u589e\u52a0Fix2float\u7b97\u5b50\uff0c\u5b8c\u6210\u8f93\u51fa\u6570\u636e\u4e58scale\u8f6c\u6362\u6210float\u7684\u64cd\u4f5c\u3002 output_formats : \u7528\u6765\u6807\u8bc6\u8f93\u51faTensor\u7684\u6570\u636e\u6392\u5e03\u683c\u5f0f\uff0cNCHW\u6216\u8005NHWC\uff0c\u6570\u91cf\u7b49\u4e8eoutputs\u4e2a\u6570\uff0c\u6a21\u578b\u8f93\u51faTensor\u987a\u5e8f\u4e0e output_formats \u7684\u914d\u7f6e\u987a\u5e8f\u4e00\u81f4\u3002\u5982\u679c\u6709\u591a\u4e2a\u8f93\u51faTensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7\uff08,\uff09\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002NCHW\u8868\u793a\u5bf9\u5e94\u987a\u5e8f\u7684outputTensor\u6309NCHW\u7684\u6570\u636e\u683c\u5f0f\u6392\u5e03\uff08\u4e0e\u539f\u6a21\u578b\u76f8\u540c\uff09\uff1bNHWC\u8868\u793a\u5bf9\u5e94\u987a\u5e8f\u7684outputTensor\u6309NHWC\u7684\u683c\u5f0f\u6392\u5e03\uff08\u9ed8\u8ba4\u683c\u5f0f\uff09\u3002 \u6ce8\u610f \uff081\uff09\u5982\u679c\u662f\u591a\u8f93\u51fa\u6a21\u578b\uff0c\u82e5\u4ec5\u9700\u6307\u5b9a\u90e8\u5206\u8f93\u51fa\u4e3aNCHW\uff0c\u5219\u6309\u5e8f\u8bbe\u7f6e\u53c2\u6570\uff0c\u65e0\u9700\u8f6c\u6362\u7684\u7528None\u8868\u793a\uff0c\u5982\uff1acaffe\uff0cNone,caffe\uff1b\u5f53\u4f7f\u7528\u8f93\u51faTensors\u540d\u5b57\u8fdb\u884c\u8bbe\u7f6e\u65f6\uff0c\u82e5\u4ec5\u6307\u5b9a\u90e8\u5206\u8f93\u51fa\u4e3aNCHW\uff0c\u5219\u4ec5\u7ed9\u51fa\u9700\u8981\u8f6c\u6362\u7684tensor name\u5373\u53ef\uff0c\u5982\uff1aoutput0\uff0coutput2\u3002 \uff082\uff09\u82e5\u914d\u7f6e\u4e86output_pack_model_arrays:\u53c2\u6570\uff0c\u5c06\u81ea\u52a8\u5728ini\u4e2d\u586b\u5145output_formats\u7684\u4fe1\u606f\u3002 \uff083\uff09\u5982\u679c\u60f3\u6307\u5b9a\u8f93\u51fatensor\u7684\u6570\u636e\u6392\u5e03\uff0c\u9664\u652f\u6301\u914d\u7f6eoutput_pack_model_arrays:\u53c2\u6570\u7684\u65b9\u5f0f\u5916\uff0c\u8fd8\u53ef\u652f\u6301\u901a\u8fc7\u5728ini\u4e2d\u914d\u7f6e[OUTPUT_CONFIG]\u7684output_formats\u4fe1\u606f\u6765\u6307\u5b9a\u8f93\u51fatensor\u7684\u6570\u636e\u6392\u5e03\uff0c\u4f7f\u7528NCHW\uff0cNHWC\u6765\u8fdb\u884c\u6307\u5b9a\uff0c\u5982\uff1aoutput_formats = NHWC,NCHW,NHWC\u3002 2.2.3 CONV_CONFIG \u00b6 input_format : \u6307\u5b9a\u7f51\u7edc\u4e2d\u6240\u6709\u5377\u79ef\u7684\u91cf\u5316\u65b9\u5f0f\uff0c\u9ed8\u8ba4L5\uff0c\u53ef\u9009\u65b9\u6848ALL_UINT8\uff0cALL_INT16\uff0c CONV2D_INT16\uff0cDEPTHWISE_INT16\u3002 ALL_UINT8 : \u6307\u5b9a\u6240\u6709\u5377\u79ef\u6309\u7167UINT8\u91cf\u5316\u3002 ALL_INT16 : \u6307\u5b9a\u6240\u6709\u5377\u79ef\u6309\u7167INT16\u91cf\u5316\u3002 CONV2D_INT16 : \u53ea\u6307\u5b9a\u6240\u6709\u666e\u901a\u5377\u79ef\u6309\u7167INT16\u91cf\u5316\u3002 DEPTHWISE_INT16 : \u53ea\u6307\u5b9a\u6240\u6709Depthwise \u5377\u79ef\u6309\u7167INT16\u91cf\u5316\u3002 \u5728 UINT8 \u6a21\u5f0f \u4e0b\uff0c\u5377\u79ef\u8fd0\u884c\u6240\u5360\u5e26\u5bbd\u5c0f\uff0c\u8fd0\u884c\u901f\u5ea6\u5feb\uff1b\u5728 INT16\u6a21\u5f0f \u4e0b\uff0c\u53ef\u4ee5\u6781\u5927\u7684\u63d0\u9ad8\u5377\u79ef\u7684\u7cbe\u5ea6\uff0c\u4f46\u662f\u8fd0\u884c\u7684\u901f\u5ea6\u4f1a\u6709\u5f71\u54cd\u3002 tensor_arrays : \u6307\u5b9a\u7f51\u7edc\u4e2d\u67d0\u4e9b\u5c42\u7684\u5377\u79ef\u91cf\u5316\u65b9\u5f0f\u3002\u6574\u4e2a\u7f51\u7edc\u5377\u79ef\u90fd\u91c7\u7528\u9ed8\u8ba4\u7684UINT8 \uff0c\u4f46\u662f\u67d0\u4e9b\u5377\u79ef\u5c42\u9700\u8981\u66f4\u9ad8\u7684\u7cbe\u5ea6\uff0c\u8fd9\u65f6\u76f4\u63a5\u586b\u5199\u90a3\u4e9b\u5377\u79ef\u5c42\u7684\u7b2c\u4e00\u4e2a\u8f93\u5165\u7684 input id name\u5373\u53ef\u3002\u591a\u5c42\u65f6\uff0cname\u4ee5\u9017\u53f7( , )\u5206\u9694\u3002 \u6ce8\u610f \u5377\u79ef\u7b2c\u4e00\u4e2a\u8f93\u5165\u7684input id \u540d\u5b57\u53ef\u901a\u8fc7netron\u5de5\u5177\u67e5\u770b\u3002\u6307\u5b9a\u91cf\u5316\u65f6\uff0c\u7f51\u7edc\u4e2d\u7684\u7b2c\u4e00\u5c42\u5377\u79ef\u4e0d\u751f\u6548\u3002 2.2.4 OPTIMIZE_CONFIG \u00b6 skip_concatenation : \u7f51\u7edc\u4e2d\u7684Concatenation\u5c42\uff0c\u5982\u679c\u53ea\u9488\u5bf9\u6700\u540e\u4e00\u4e2a\u7ef4\u5ea6\u5408\u5e76\uff0c\u4f1a\u8d70\u8fdb\u8be5\u4f18\u5316\u4e2d\u3002Fixed\u6a21\u578b\u4f1a\u5c06Concatenation\u5c42\u8f6c\u6362\u4e3askip_concatenation\uff0cskip_concatenation\u5c42\u4f1a\u5927\u5e45\u51cf\u5c0f\u8fd0\u884c\u65f6\u95f4\u3002 2.2.5 \u8f93\u5165\u8f93\u51fa\u914d\u7f6e\u603b\u7ed3 \u00b6 training_input_formats input_formats \u677f\u4e0a\u8fd0\u884c\u65f6\u6570\u636e\u5bf9\u9f50\u65b9\u5f0f RGB/BGR RGB/BGR \u4e0d\u7528\u5bf9\u9f50 RGB/BGR RGBA/BGRA W = ALIGN_UP(W * 4, xrgb_h_pitch_alignment ) / 4 RGB/BGR YUV_NV12/GRAY H = ALIGN_UP(H, yuv420_v_pitch_alignment ) W = ALIGN_UP(W, yuv420_h_pitch_alignment ) RAWDATA_F32_NHWC RAWDATA_F32_NHWC \u4e0d\u7528\u5bf9\u9f50 RAWDATA_S16_NHWC RAWDATA_S16_NHWC \u6700\u540e1\u4e2a\u7ef4\u5ea6 = ALIGN_UP(\u6700\u540e1\u4e2a\u7ef4\u5ea6, 8 ) \u5982\u679c\u914d\u7f6e dequantizations \u4e3aTRUE\uff0c\u751f\u6210\u7684\u6a21\u578b\u5bf9\u5e94\u8f93\u51fa\u4f1a\u589e\u52a0Fix2Float\u7b97\u5b50\uff0c\u8f93\u51fa\u6570\u636e\u7c7b\u578b\u4e3afloat32\uff0c\u6570\u636e\u4e0e\u8f93\u51fashape\u4e00\u81f4\uff0c\u6ca1\u6709\u5bf9\u9f50\u8981\u6c42\u3002 \u5982\u679c\u914d\u7f6e dequantizations \u4e3aFALSE\uff0c\u5728\u677f\u7aef\u8fd0\u884c\u65f6\u8f93\u51fa\u6570\u636e\u7c7b\u578b\u4e3aint16\uff0c\u8f93\u51fa\u7684\u6570\u636e\u5bf9\u9f50\u65b9\u6cd5\u4e3a\uff1a\u6700\u540e1\u4e2a\u7ef4\u5ea6 = ALIGN_UP(\u6700\u540e1\u4e2a\u7ef4\u5ea6, 8 )\u3002 \u5177\u4f53\u8be6\u89c15.2.1\u8282\u53bb\u9664\u65e0\u7528\u6570\u636e\u3002","title":"Convert"},{"location":"module/User_Guide/IPU200M/Convert.html#21","text":"Convert Tool\u5de5\u5177\u7684\u4f4d\u7f6e\u5728 SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py \u3002 \u76ee\u524dConvert Tool\u652f\u6301\u4ecetensorflow_graphdef\uff0ctensorflow_savemodel\uff0ckeras\uff0ctflite\uff0ccaffe\uff0connx \u516d\u79cd\u6846\u67b6\u6a21\u578b\u8f6c\u6362\u4e3aSGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u3002 \u4f7f\u7528\u524d\u5148\u5728SGS_IPU_SDK\u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK source cfg_env.sh \u4e0b\u9762\u662fConvert Tool\u76ee\u524d\u652f\u6301\u7684platform information\uff1a python3 ConvertTool.py -h usage : ConvertTool.py [-h] {tensorflow_graphdef,tensorflow_savemodel,keras,tflite,caffe,onnx} ... Convert Tool positional arguments : {tensorflow_graphdef,tensorflow_savemodel,keras,tflite,caffe,onnx} platform info tensorflow_graphdef tensorflow graphdef commands tensorflow_savemodel tensorflow save_model commands keras keras commands tflite tflite commands caffe caffe commands onnx onnx commands optional arguments : -h, --help show this help message and exit \u5982\u679c\u60f3\u8fdb\u4e00\u6b65\u770b\u770b\u5404\u4e2a\u5e73\u53f0\u8f6c\u6362\u6240\u9700\u8981\u7684\u53c2\u6570\u4fe1\u606f\uff0c\u53ef\u4ee5\u6267\u884c python3 ConvertTool.py {platform} \u2013h \uff0c\u5404\u4e2a\u5e73\u53f0\u5177\u4f53\u4fe1\u606f\u548c\u67e5\u770b\u6307\u4ee4\u5982\u4e0b\uff1a","title":"2.1. \u4f7f\u7528\u65b9\u6cd5"},{"location":"module/User_Guide/IPU200M/Convert.html#211-tensorflow_graphdef","text":"python3 ConvertTool.py tensorflow_graphdef -h usage : ConvertTool.py tensorflow_graphdef [-h] --graph_def_file GRAPH_DEF_FILE --input_arrays INPUT_ARRAYS (optional) --output_arrays OUTPUT_ARRAYS (optional) --input_config INPUT_CONFIG --output_file OUTPUT_FILE --input_shapes INPUT_SHAPES (optional) optional arguments : -h, --help show this help message and exit. --graph_def_file GRAPH_DEF_FILE Full filepath of file containing frozen GraphDef. --input_arrays INPUT_ARRAYS Names of the input arrays, comma-separated. --output_arrays OUTPUT_ARRAYS Names of the output arrays, comma-separated. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth. Default : None \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ConvertTool.py tensorflow_graphdef \\ --graph_def_file ~/SGS_Models/tensorflow/resnet_v2_50/resnet_v2_50.pb \\ --output_file ./resnet_v2_float.sim \\ --input_shapes 1,299,299,3 \\ --input_config ~/SGS_Models/tensorflow/resnet_v2_50/input_config.ini \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a --graph_def_file : \u8f93\u5165\u7684\u6a21\u578b\u4e3aTensorFlow frozen\u7684graphdef\u7684pb\u683c\u5f0f\u6587\u4ef6\u8def\u5f84\u3002 --output_file : \u8f93\u51fa\u7684\u6a21\u578b\u6587\u4ef6\uff0cflatbuffer\u683c\u5f0f\uff0csim\u540e\u7f00\u6587\u4ef6\u3002 --input_shapes : \u7f51\u7edc\u8f93\u5165Tensor\u7684shape\uff0c\u683c\u5f0f\u4e3aNHWC\uff0cdimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0cshape\u4e2a\u6570\u548cinputs\u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 \u53ef\u9009\u53c2\u6570\uff1a --input_arrays : \u7f51\u7edc\u8f93\u5165Tensor\u7684\u540d\u5b57\uff0c\u4ee5\u5b57\u7b26\u4e32\u7c7b\u578b\u6307\u5b9a\uff0c\u591a\u4e2ainputs\u7684\u8bdd\uff0c\u4e2d\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0c\u5982\uff1a--input_arrays='Input1','Input2'\u3002 --output_arrays : \u7f51\u7edc\u8f93\u51faTensor\u7684\u540d\u5b57\uff0c\u4ee5\u5b57\u7b26\u4e32\u7c7b\u578b\u6307\u5b9a\uff0c\u591a\u4e2aoutputs\u7684\u8bdd\uff0c\u4e2d\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\u3002","title":"2.1.1 tensorflow_graphdef \u6846\u67b6\u6307\u4ee4"},{"location":"module/User_Guide/IPU200M/Convert.html#212-tensorflow_savemodel","text":"python3 ConvertTool.py tensorflow_savemodel -h usage : ConvertTool.py tensorflow_savemodel [-h] --saved_model_dir SAVED_MODEL_DIR --input_config INPUT_CONFIG --output_file OUTPUT_FILE --output_arrays OUTPUT_ARRAYS (optional) --input_arrays INPUT_ARRAYS (optional) --input_shapes INPUT_SHAPES (optional) --tag_set TAG_SET (optional) --signature_key SIGNATURE_KEY (optional) optional arguments : -h, --help show this help message and exit. --saved_model_dir SAVED_MODEL_DIR SavedModel directory to convert. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. --debug Run gdb in Debug mode. --input_arrays INPUT_ARRAYS Names of the input arrays, comma-separated. Default : None. --output_arrays OUTPUT_ARRAYS Names of the output arrays, comma-separated. Default : None. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth Default : None. --tag_set TAG_SET Set of tags identifying the MetaGraphDef within the SavedModel to analyze. All tags in the tag set must be present. Default : None. --signature_key SIGNATURE_KEY Key identifying SignatureDef containing inputs and outputs. Default : DEFAULT_SERVING_SIGNATURE_DEF_KEY \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ConvertTool.py tensorflow_savemodel \\ --saved_model_dir ~/test/tensorflow_model/save_model \\ --input_config ~/test/tensorflow_model/input_config.ini \\ --output_file ~/test/tensorflow_model/save_model_float.sim \\ --tag_set test_saved_model \\ --signature_key test_signature \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a --saved_model_dir : \u8f93\u5165\u7684\u6a21\u578b\u4e3aTensorFlow saved_model.builder\u751f\u6210\u7684\u6587\u4ef6\u8def\u5f84\u3002 --output_file : \u8f93\u51fa\u7684\u6a21\u578b\u6587\u4ef6\uff0cflatbuffer\u683c\u5f0f\uff0csim\u540e\u7f00\u6587\u4ef6\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 \u53ef\u9009\u53c2\u6570\uff1a --input_arrays : \u7f51\u7edc\u8f93\u5165Tensor\u7684\u540d\u5b57\uff0c\u4ee5\u5b57\u7b26\u4e32\u7c7b\u578b\u6307\u5b9a\uff0c\u591a\u4e2ainputs\u7684\u8bdd\uff0c\u4e2d\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0c\u5982\uff1a--input_arrays='Input1','Input2'\uff0c\u82e5\u4e0d\u6307\u5b9a\u5219\u4ecesaved_model_dir\u4e2d\u83b7\u53d6\u3002 --output_arrays : \u7f51\u7edc\u8f93\u51faTensor\u7684\u540d\u5b57\uff0c\u4ee5\u5b57\u7b26\u4e32\u7c7b\u578b\u6307\u5b9a\uff0c\u591a\u4e2aoutputs\u7684\u8bdd\uff0c\u4e2d\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\u3002\u82e5\u4e0d\u6307\u5b9a\u5219\u4ecesaved_model_dir\u4e2d\u83b7\u53d6\u3002 --input_shapes : \u7f51\u7edc\u8f93\u5165Tensor\u7684shape\uff0c\u683c\u5f0f\u4e3aNHWC\uff0cdimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0cshape\u4e2a\u6570\u548cinputs \u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002\u82e5\u4e0d\u6307\u5b9a\u5219\u4ecesaved_model_dir\u4e2d\u83b7\u53d6\u3002 --tag_set : \u9700\u8981\u548csave model\u65f6\u6240\u6307\u5b9a\u7684tag\u5339\u914d\uff0c\u5982\u679c\u4e0d\u505a\u8bbe\u5b9a\uff0c\u5219\u9ed8\u8ba4\u4e3a\u2018serve\u2019\u3002 --signature_key : \u9700\u8981\u548csave model\u65f6\u6240\u6307\u5b9a\u7684signature\u5339\u914d\u3002\u5982\u679c\u4e0d\u505a\u8bbe\u5b9a\uff0c\u5219\u9ed8\u8ba4\u4e3a \u2018DEFAULT_SERVING_SIGNATURE_DEF_KEY\u2019","title":"2.1.2 tensorflow_savemodel \u6846\u67b6\u6307\u4ee4"},{"location":"module/User_Guide/IPU200M/Convert.html#213-keras","text":"python3 ConvertTool.py keras -h usage : ConvertTool.py keras [-h] --model_file MODEL_FILE --input_config INPUT_CONFIG --output_file OUTPUT_FILE --input_arrays INPUT_ARRAYS (optional) --output_arrays OUTPUT_ARRAYS (optional) --input_shapes INPUT_SHAPES (optional) --custom_objects CUSTOM_OBJECTS (optional) optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of HDF5 file containing the tf.keras model. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. --input_arrays INPUT_ARRAYS Names of the input arrays, comma-separated. Default : None. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth. Default : None. --output_arrays OUTPUT_ARRAYS Names of the output arrays, comma-separated. Default : None. --custom_objects CUSTOM_OBJECTS Dict mapping names (strings) to custom classes or functions to be considered during model deserialization. Default : None. \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ConvertTool.py keras \\ --model_file ./TEST_h5/resnet50/resnet50.h5 \\ --input_config ./TEST_h5/resnet50/input_config.ini \\ --output_file ./TEST_h5/resnet50/resnet50_float.sim \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a --model_file : \u8f93\u5165\u7684\u6a21\u578b\u4e3akeras h5\u683c\u5f0f\u6587\u4ef6\u8def\u5f84\u3002 --output_file : \u8f93\u51fa\u7684\u6a21\u578b\u6587\u4ef6\uff0cflatbuffer\u683c\u5f0f\uff0csim\u540e\u7f00\u6587\u4ef6\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 \u53ef\u9009\u53c2\u6570\uff1a --input_arrays : \u7f51\u7edc\u8f93\u5165Tensor\u7684\u540d\u5b57\uff0c\u4ee5\u5b57\u7b26\u4e32\u7c7b\u578b\u6307\u5b9a\uff0c\u591a\u4e2ainputs\u7684\u8bdd\uff0c\u4e2d\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0c\u5982\uff1a--input_arrays='Input1','Input2'\u3002 --output_arrays : \u7f51\u7edc\u8f93\u51faTensor\u7684\u540d\u5b57\uff0c\u4ee5\u5b57\u7b26\u4e32\u7c7b\u578b\u6307\u5b9a\uff0c\u591a\u4e2aoutputs\u7684\u8bdd\uff0c\u4e2d\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\u3002 --input_shapes : \u7f51\u7edc\u8f93\u5165Tensor\u7684shape\uff0c\u683c\u5f0f\u4e3aNHWC\uff0cdimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0cshape\u4e2a\u6570\u548cinputs \u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002 --custom_objects : Dict mapping names (strings) to custom classes or functions to be considered during model deserialization (default None).","title":"2.1.3 keras\u6846\u67b6\u6307\u4ee4"},{"location":"module/User_Guide/IPU200M/Convert.html#214-tflite","text":"python3 ConvertTool.py tflite -h usage : ConvertTool.py tflite [-h] --model_file MODEL_FILE --input_config INPUT_CONFIG --output_file OUTPUT_FILE optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of tflite file containing the tflite model. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ConvertTool.py tflite \\ --model_file ~/test/tensorflow_model/Debug_save_model_float.tflite \\ --input_config ~/test/tensorflow_model/input_config.ini \\ --output_file ~/test/tensorflow_model/save_model_float.sim \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a --model_file : \u8f93\u5165\u7684\u6a21\u578b\u4e3atflite\u683c\u5f0f\u6587\u4ef6\u8def\u5f84(\u5fc5\u987b\u4e3a\u975e\u91cf\u5316\u6a21\u578b)\u3002 --output_file : \u8f93\u51fa\u7684\u6a21\u578b\u6587\u4ef6\uff0cflatbuffer\u683c\u5f0f\uff0csim\u540e\u7f00\u6587\u4ef6\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002","title":"2.1.4 tflite\u6846\u67b6\u6307\u4ee4"},{"location":"module/User_Guide/IPU200M/Convert.html#215-caffe","text":"python3 ConvertTool.py caffe -h usage : ConvertTool.py caffe [-h] --model_file MODEL_FILE --weight_file WEIGHT_FILE --input_config INPUT_CONFIG --output_file OUTPUT_FILE --input_arrays INPUT_ARRAYS (optional) --output_arrays OUTPUT_ARRAYS (optional) optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of tflite file containing the caffe model. --weight_file WEIGHT_FILE Full filepath of tflite file containing the caffe weight. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. --input_arrays INPUT_ARRAYS Names of the input arrays, comma-separated. Default : None. --output_arrays OUTPUT_ARRAYS Names of the output arrays, comma-separated. Default : None. --debug Run gdb in Debug mode. \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ConvertTool.py caffe \\ --model_file ~/SGS_Models/caffe/caffe_resnet50_conv/caffe_resnet50_conv.prototxt \\ --weight_file ~/SGS_Models/caffe/caffe_resnet50_conv/caffe_resnet50_conv.caffemodel \\ --input_config ~/SGS_Models/caffe/caffe_resnet50_conv/input_config.ini \\ --output_file ./resnet50_float.sim \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a --model_file : Caffe\u6a21\u578b\u6587\u4ef6\u7684\u8def\u5f84 --weight_file : Caffe\u6743\u91cd\u6587\u4ef6\u7684\u8def\u5f84 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput config\u7684\u914d\u7f6e\u4fe1\u606f\u3002 --output_file : \u8f6c\u6362\u6a21\u578b\u7684\u8f93\u51fa\u8def\u5f84\u3002 \u53ef\u9009\u53c2\u6570\uff1a --input_arrays : Caffe\u6a21\u578b\u8f93\u5165\u7684\u8282\u70b9\u540d\u79f0\uff0c\u4f7f\u7528input\u7684\u540d\u5b57\uff0c\u5982\u6709\u591a\u4e2a\u8f93\u51fa\u8282\u70b9\uff0c\u8bf7\u7528\u9017\u53f7( , )\u5206\u9694 --output_arrays : \u6a21\u578b\u8f93\u51fa\u7684\u8282\u70b9\u540d\u79f0\uff0c\u4f7f\u7528\u6700\u540elayer\u7684top\u540d\u5b57\uff0c\u5982\u6709\u591a\u4e2a\u8f93\u51fa\u8282\u70b9\uff0c\u8bf7\u7528\u9017\u53f7( , )\u5206\u9694 --output_pack_model_arrays : \u8f93\u51faTensors\u6570\u636e\u9ed8\u8ba4\u6392\u5e03\u4e3aNHWC,\u9ed8\u8ba4\u4e3aNone\uff1b\u652f\u6301\u4e24\u79cd\u6307\u5b9a\u8f93\u51fa\u6570\u636e\u6392\u5e03\u4e3aNCHW\u7684\u8868\u8fbe\u65b9\u5f0f \uff081\uff09caffe\u6a21\u578b\u4f7f\u7528\u2018caffe\u2019\uff0c\u8f93\u51faTensors\u7684\u6570\u636e\u6392\u5e03\u4e3aNCHW\uff1b\uff082\uff09\u8bbe\u4e3a\u8f93\u51faTensors\u540d\u5b57\uff0c\u8be5\u8f93\u51faTensor\u7684\u6570\u636e\u6392\u5e03\u4e3aNCHW\u3002","title":"2.1.5 caffe\u6846\u67b6\u6307\u4ee4"},{"location":"module/User_Guide/IPU200M/Convert.html#216-onnx","text":"python3 Path_to_SGS_IPU_SDK/Scripts/ConvertTool onnx -h usage : ConvertTool.py onnx [-h] --model_file MODEL_FILE --input_arrays INPUT_ARRAYS (optional) --input_shapes INPUT_SHAPES --output_arrays OUTPUT_ARRAYS (optional) --input_config INPUT_CONFIG --output_file OUTPUT_FILE optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of tflite file containing the onnx model. --input_arrays INPUT_ARRAYS Names of the input arrays, comma-separated. (default None). --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon-separated. For many models each shape takes the form N C H W (default None) --output_arrays OUTPUT_ARRAYS Names of the output arrays, comma-separated. (default None) --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ~/SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py onnx \\ --model_file ~/SGS_Models/onnx/ onnx_mobilenet_v2/ onnx_mobilenet_v2.onnx \\ --input_shapes 1,3,224,224 \\ --input_config ~/SGS_Models/onnx/ onnx_mobilenet_v2/input_config.ini \\ --output_file ./onnx_mobilenet_v2_float.sim \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a --model_file : Onnx\u6a21\u578b\u6587\u4ef6\u7684\u8def\u5f84 --input_shapes : Onnx \u6a21\u578b\u8f93\u5165shape\uff0c \u591a\u8f93\u5165\u7528\u5192\u53f7( : )\u5206\u9694 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput config\u7684\u914d\u7f6e\u4fe1\u606f\u3002 --output_file : \u8f6c\u6362\u6a21\u578b\u7684\u8f93\u51fa\u8def\u5f84\u3002 \u53ef\u9009\u53c2\u6570\uff1a --input_arrays : Onnx\u6a21\u578b\u8f93\u5165\u7684\u8282\u70b9\u540d\u79f0\uff0c\u4f7f\u7528input\u7684\u540d\u5b57,\u591a\u8f93\u5165\u7528\u9017\u53f7( , )\u5206\u9694 --output_arrays : \u6a21\u578b\u8f93\u51fa\u7684\u8282\u70b9\u540d\u79f0\uff0c\u4f7f\u7528\u6700\u540elayer\u7684top\u540d\u5b57\uff0c\u5982\u6709\u591a\u4e2a\u8f93\u51fa\u8282\u70b9\uff0c\u8bf7\u7528\u9017\u53f7( , )\u5206\u9694 --output_pack_model_arrays : \u8f93\u51faTensors\u6570\u636e\u9ed8\u8ba4\u6392\u5e03\u4e3aNHWC,\u9ed8\u8ba4\u4e3aNone\uff1b\u652f\u6301\u4e24\u79cd\u6307\u5b9a\u8f93\u51fa\u6570\u636e\u6392\u5e03\u4e3aNCHW\u7684\u8868\u8fbe\u65b9\u5f0f \uff081\uff09onnx\u6a21\u578b\u4f7f\u7528\u2018onnx\u2019\uff0c\u8f93\u51faTensors\u7684\u6570\u636e\u6392\u5e03\u4e3aNCHW\uff1b\uff082\uff09\u8bbe\u4e3a\u8f93\u51faTensors\u540d\u5b57\uff0c\u8be5\u8f93\u51faTensor\u7684\u6570\u636e\u6392\u5e03\u4e3aNCHW\u3002 \u6ce8\u610f 1.\u5982\u679c\u6a21\u578b\u4e2d\u5e26\u6709\u540e\u5904\u7406\u7684\u7b97\u5b50\uff0c\u8bf7\u5148\u53bb\u9664\uff0c\u76ee\u524d\u53ea\u652f\u6301\u4e3b\u5e72\u7f51\u7edc\u7684\u8f6c\u6362\u3002 2.Convert Tool\u8f6c\u6362\u5de5\u5177\u8f6c\u6362\u5b8c\u6210\u540e\u4f1a\u751f\u6210\u4e24\u4e2a\u6587\u4ef6\uff0c\u4f8b\u5982 --output_file \u6307\u5b9a\u4e3a ./resnet50_float.sim\uff0c\u8f6c\u6362\u5b8c\u6210\u540e\u4f1a\u751f\u6210Debug_resnet50_float.sim\u548cresnet50_float.sim\u3002\u5176\u4e2d\uff0cresnet50_float.sim\u662f\u771f\u6b63\u8f6c\u6362\u597d\u7684\u6587\u4ef6\uff0cDebug_resnet50_float.sim\u662f\u7ecf\u8fc7\u8f6c\u6362\u540e\u7684\u4e2d\u95f4\u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u672a\u7ecf\u8fc7\u4f18\u5316\uff0c\u4e0e\u539f\u6846\u67b6\u6a21\u578b\u62e5\u6709\u76f8\u540c\u7684\u7f51\u7edc\u7ed3\u6784\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f5c\u4e3a\u8f6c\u6362\u540e\u8c03\u8bd5\u4f7f\u7528\uff0c\u4f46\u662f\u65e0\u6cd5\u5728IPU SDK\u4e2d\u8fd0\u884c\u3002","title":"2.1.6 Onnx\u6846\u67b6\u6307\u4ee4"},{"location":"module/User_Guide/IPU200M/Convert.html#22-input-config","text":"\u5de5\u5177\u7684\u53c2\u6570 --input_config \u9700\u8981\u6307\u5b9ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u6587\u4ef6input_config.ini\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u7684\u4e3b\u8981\u529f\u80fd\u6709\uff1a \u2022 \u914d\u7f6e\u7f51\u7edc\u6a21\u578b\u56fe\u7247\u524d\u5904\u7406\u7684\u5f52\u4e00\u5316\u4fe1\u606f\uff1b \u2022 \u914d\u7f6e\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u8f93\u51fa\u7684\u91cf\u5316\u5904\u7406\u4fe1\u606f\uff1b \u2022 \u914d\u7f6e\u7f51\u7edc\u6a21\u578b\u4e2d\u5377\u79ef\u7684\u91cf\u5316\u4fe1\u606f\u3002 \u914d\u7f6einput_config.ini\u6587\u4ef6\u4e3b\u8981\u662f\u4e3a\u4e86\u80fd\u5c06\u7f51\u7edc\u6a21\u578b\u5feb\u901f\u9002\u914d\u5230SigmaStar\u82af\u7247\u4e2d\u4f7f\u7528\u3002\u5728\u7f51\u7edc\u6a21\u578b\u7684\u8bad\u7ec3\u4e2d\uff0c\u4e0d\u540c\u7684\u6846\u67b6\u548c\u8bad\u7ec3\u6570\u636e\u96c6\u9700\u8981\u7f51\u7edc\u4f7f\u7528\u4e0d\u540c\u7684\u56fe\u7247\u5f52\u4e00\u5316\u65b9\u6cd5\uff0c\u800c\u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0c\u4e3a\u4e86\u80fd\u591f\u8ba9\u7f51\u7edc\u6a21\u578b\u7684\u9884\u6d4b\u66f4\u52a0\u51c6\u786e\uff0c\u9700\u8981\u8fd8\u539f\u8bad\u7ec3\u6a21\u578b\u65f6\u7684\u56fe\u7247\u524d\u5904\u7406\u5f52\u4e00\u5316\u65b9\u6cd5\u3002 \u5c06RGB\u4e09\u4e2a\u901a\u9053\u7684\u5747\u503c\u548cstd_value\u8bbe\u7f6e\u597d\u540e\uff0c\u5728\u8f6c\u6362\u6a21\u578b\u65f6\u4f1a\u5199\u5165\u5230\u6a21\u578b\u5185\u90e8\uff0c\u8fd9\u6837\u5728\u786c\u4ef6\u4e0a\u5b9e\u9645\u4f7f\u7528\u65f6\uff0c\u4ec5\u9700\u8981\u5c06\u56fe\u7247resize\u5230\u7f51\u7edc\u6a21\u578b\u7684\u8f93\u5165\u7684\u5c3a\u5bf8\uff0c\u56fe\u7247\u5f52\u4e00\u5316\u7684\u5de5\u4f5c\u5728\u7f51\u7edc\u5185\u90e8\u5b8c\u6210\u3002 \u53e6\u5916\uff0c\u5b9e\u9645\u786c\u4ef6\u4e0a\u4f7f\u7528\u65f6\u56fe\u7247\u8f93\u5165\u683c\u5f0f\u4e0e\u8bad\u7ec3\u65f6\u4f7f\u7528\u7684RGB\u53ef\u80fd\u6709\u5f88\u5927\u533a\u522b\uff0c\u6b63\u786e\u914d\u7f6e\u8fd9\u4e9b\u9009\u9879\u80fd\u4f7f\u8f6c\u6362\u597d\u7684\u6a21\u578b\u5185\u62e5\u6709\u8fd9\u4e9b\u914d\u7f6e\u4fe1\u606f\uff0c\u80fd\u591f\u76f4\u63a5\u5728SigmaStar\u7684\u786c\u4ef6\u4e0a\u90e8\u7f72\u3002 [INPUT_CONFIG] ;Names of the input arrays, comma-separated.image input must be the first. inputs = 'data'; ;Memory formats of input arrays, comma-separated. ;One of RGB, BGR, RGBA, BGRA, YUV_NV12, RAWDATA_S16_NHWC, RAWDATA_F32_NHWC. ;Each entry in the list should match an entry in inputs arrays. training_input_formats = BGR; input_formats = BGR; ;Indicate the input data need qauntize or not. ;Each entry in the list should match an entry in inputs arrays. quantizations = TRUE; ;mean_values parameter for image models, ;Each entry in the list match RGB channel of\uff08RGB,BGR,RGBA,BGRA,YUV_NV12\uff09 mean_red = 0.0; mean_green = 0.0; mean_blue = 0.0; ;std_value parameter for image models, std_value = 1.0; [OUTPUT_CONFIG] ;Names of the output arrays, comma-separated. outputs = 'prob'; ;Indicate the output data need deqauntize or not. ;Each entry in the list should match an entry in outputs arrays. dequantizations = TRUE; [CONV_CONFIG] ;input_format=ALL_INT16; tensor_arrays = 'conv1-1,conv2-1'; \u8be5\u6587\u4ef6\u4e3b\u8981\u5206\u4e3a\u4e09\u4e2a\u8bbe\u7f6e\u4fe1\u606f\uff1a [INPUT_CONFIG] [OUTPUT_CONFIG] [CONV_CONFIG] \u9488\u5bf9\u8fd9\u4e09\u4e2a\u8bbe\u7f6e\u4fe1\u606f\u5177\u4f53\u8bf4\u660e\uff1a \u6ce8\u610f String\u7c7b\u578b\u7684\u503c\uff0c\u5982tensor name\uff0c\u9700\u7528('')\u5c06\u5185\u5bb9\u5305\u542b\u8d77\u6765\uff0c\u4f8b\u5982outputs='detectionBoxes,detectionClasses,detectionScores,numDetections';","title":"2.2. input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e"},{"location":"module/User_Guide/IPU200M/Convert.html#221-input_config","text":"inputs : \u7f51\u7edc\u8f93\u5165Tensor\u7684name\uff0c\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u8bf7\u7528\u9017\u53f7( , )\u5206\u9694\u3002\u6a21\u578b\u8f93\u5165Tensor\u987a\u5e8f\u4e0e inputs \u7684\u914d\u7f6e\u987a\u5e8f\u4e00\u81f4\u3002\u6240\u6709\u8f93\u5165name\u7684\u957f\u5ea6\u4e0d\u80fd\u8d85\u8fc71024\u4e2a\u5b57\u7b26\u3002 training_input_formats : \u7f51\u7edc\u8bad\u7ec3\u65f6\u7684\u56fe\u7247\u683c\u5f0f\uff0c\u6570\u91cf\u548c\u987a\u5e8f\u4e0einputs\u4e00\u4e00\u5bf9\u5e94\uff0c\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u3002\u8fd9\u4e9b\u683c\u5f0f\u5305\u62ecRGB\uff0cBGR\uff0cRAWDATA_S16_NHWC(\u82e5 training_input_formats \u8bbe\u7f6e\u4e3a RAWDATA_S16_NHWC ,\u5219 input_formats \u4e5f\u5fc5\u987b\u8bbe\u7f6e\u4e3a RAWDATA_S16_NHWC ) \u5176\u4e2d\u4e4b\u4e00\u3002training_input_formats\u53ef\u4ee5\u548cinput_formats \u4e0d\u4e00\u6837\u3002\u4f8b\u5982\u5728\u5728SigmaStar\u5f00\u53d1\u677f\u4e0a\uff0cinput_formats\u662fYUV_NV12\uff0c\u4f46\u662ftraining input formats \u662fRGB\u3002 input_formats : \u7f51\u7edc\u6a21\u578b\u5728SigmaStar\u82af\u7247\u4e0a\u8fd0\u884c\u7684\u56fe\u7247\u8f93\u5165\u683c\u5f0f\uff0c\u6570\u91cf\u548c\u987a\u5e8f\u4e0einputs\u4e00\u4e00\u5bf9\u5e94\uff0c\u9017\u53f7( , )\u5206\u9694\u3002 \u8fd9\u4e9b\u683c\u5f0f\u5305\u62ec\uff1a RGB BGR RGBA BGRA YUV_NV12 RAWDATA_F32_NHWC RAWDATA_S16_NHWC \u6ce8\u610f\uff1a * training_input_formats \u548c input_formats \u4e0d\u80fd\u914d\u7f6e\u4e3a\u5982\u4e0b\u60c5\u51b5\uff1a training_input_formats=RGB; input_formats=BGR; \u6216\u8005 training_input_formats=BGR; input_formats=RGB; * \u7070\u5ea6\u56fe\u7247\u8bf7\u6309\u5982\u4e0b\u65b9\u5f0f\u914d\u7f6e\uff1a training_input_formats=RGB; input_formats=GRAY; \u5177\u4f53\u8be6\u89c1 9.1 \u7070\u5ea6\u6a21\u578b\u8f6c\u6362\u8981\u70b9 * \u914d\u7f6e RAWDATA_F32_NHWC \u6216 RAWDATA_S16_NHWC \u65f6\uff0c mean_red \u3001 mean_green \u3001 mean_blue \u548c std_value \u4e0d\u8981\u914d\u7f6e\uff0c\u5177\u4f53\u8be6\u89c1 9.2 RAWDATA_F32_NHWC\u6a21\u578b\u8f6c\u6362\u8981\u70b9 quantizations : \u7528\u6765\u6807\u8bc6\u6240\u6709\u8f93\u5165Tensor\u7684\u6570\u636e\u662f\u5426\u9700\u8981\u505a\u91cf\u5316\uff0cTRUE\u6216\u8005FALSE\uff0c\u9ed8\u8ba4\u503c\u4e3aTRUE,\u6570\u91cf\u7b49\u4e8einputs \u4e2a\u6570\u3002\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 mean_red / mean_green / mean_blue : \u7f51\u7edc\u8bad\u7ec3\u9636\u6bb5\uff0c\u4e00\u822c\u4f1a\u5bf9\u56fe\u7247\u505a\u524d\u5904\u7406\uff0c\u5bf9\u4e8eRGB\u901a\u9053\u7684\u56fe\u7247\uff0c\u4f7f\u7528\u5982\u4e0b\u516c\u5f0f\u5bf9\u56fe\u7247\u8fdb\u884c\u9884\u5904\u7406\uff1a (RGB - [mean_red, mean_green, mean_green])/std_value mean_red / mean_green / mean_blue \u5c31\u662f\u76f8\u5e94\u901a\u9053\u4e0a\u7684mean\u503c\u3002\u5982\u679c\u8fd9\u4e2a\u7f51\u7edc\u6ca1\u6709\u505a\u4efb\u4f55\u5f52\u4e00\u5316\u5904\u7406\uff0c\u8fd9\u4e2a\u503c\u8bbe\u4e3a0\u5373\u53ef\u3002\u6bcf\u4e2amean\u6570\u91cf\u7b49\u4e8einputs \u4e2a\u6570\u3002\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 std_value : \u5982\u4e0a\u516c\u5f0f\uff0c\u5982\u679c\u6ca1\u6709\u505a\u4efb\u4f55\u5f52\u4e00\u5316\u5904\u7406\uff0c\u8fd9\u4e2a\u503c\u8bbe\u4e3a1\u5373\u53ef\u3002\u5982\u679c\u6bcf\u4e2a\u901a\u9053\u90fd\u6709\u5bf9\u5e94\u7684std_value\u503c\uff0c\u4ee5\u82f1\u6587\u5192\u53f7( : )\u5206\u9694\uff0c\u987a\u5e8f\u4e3aRGB\u3002\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 yuv420_h_pitch_alignment \uff1a\u7528\u6765\u6807\u8bc6YUV\u6570\u636e\u4f5c\u4e3a\u7f51\u7edc\u8f93\u5165\u65f6H\u65b9\u5411\u5bf9\u9f50\u7684\u6570\u91cf\uff0c\u9ed8\u8ba4\u4e3a16\u3002 yuv420_v_pitch_alignment \uff1a\u7528\u6765\u6807\u8bc6YUV\u6570\u636e\u4f5c\u4e3a\u7f51\u7edc\u8f93\u5165\u65f6V\u65b9\u5411\u5bf9\u9f50\u7684\u6570\u91cf\uff0c\u9ed8\u8ba4\u4e3a2\u3002 xrgb_h_pitch_alignment \uff1a\u7528\u6765\u6807\u8bc6XRGB\u6570\u636e\u4f5c\u4e3a\u7f51\u7edc\u8f93\u5165\u65f6H\u65b9\u5411\u5bf9\u9f50\u7684\u6570\u91cf\uff0c\u9ed8\u8ba4\u4e3a16\u3002 \u6ce8\u610f \u4ee5\u4e0a\u4e09\u4e2a\u914d\u7f6e\u53ea\u80fd\u914d\u7f6e\u9ed8\u8ba4\u503c\u7684\u6574\u6570\u500d\u3002 \u4f8b\u5982\uff1ayuv420_h_pitch_alignment=32;","title":"2.2.1 INPUT_CONFIG"},{"location":"module/User_Guide/IPU200M/Convert.html#222-output_config","text":"outputs : \u7f51\u7edc\u8f93\u51faTensor\u7684name(\u53ef\u7528Netron\u5de5\u5177\u6253\u5f00\u6a21\u578b\u67e5\u770b)\uff0c\u5982\u679c\u6709\u591a\u4e2a\u8f93\u51faTensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u3002\u8f6c\u6362\u5e26\u540e\u5904\u7406\u7f51\u7edc\u65f6\uff0cBackbone\u7f51\u7edc\u7684outputs\u4e0e\u5b8c\u6574\u7f51\u7edcoutputs\u7684\u540d\u79f0\u4e0d\u540c\uff0c\u5176\u4f59\u8bbe\u7f6e\u5e94\u5b8c\u5168\u4e00\u81f4\u3002\u6a21\u578b\u8f93\u51faTensor\u987a\u5e8f\u4e0e outputs \u7684\u914d\u7f6e\u987a\u5e8f\u4e00\u81f4\u3002\u6240\u6709\u8f93\u51faname\u7684\u957f\u5ea6\u4e0d\u80fd\u8d85\u8fc71024\u4e2a\u5b57\u7b26\u3002 dequantizations : \u7528\u6765\u6807\u8bc6\u6240\u6709\u8f93\u51faTensor\u7684\u6570\u636e\u662f\u5426\u9700\u8981\u505a\u53cd\u91cf\u5316\uff0cTRUE\u6216\u8005FALSE\uff0c\u9ed8\u8ba4\u503c\u4e3aTRUE,\u6570\u91cf\u7b49\u4e8eoutputs\u3002\u5982\u679c\u6709\u591a\u4e2a\u8f93\u51faTensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002\u8be5\u9009\u9879\u4ec5\u5728\u677f\u4e0a\u8fd0\u884c\u65f6\u751f\u6548\u3002\u8be5\u9009\u9879\u8bbe\u4e3aTRUE\u65f6\uff0c\u4f1a\u5728\u8f6c\u6362\u5230Fixed\u6a21\u578b\u540e\u5728\u5bf9\u5e94\u7684\u8f93\u51fa\u589e\u52a0Fix2float\u7b97\u5b50\uff0c\u5b8c\u6210\u8f93\u51fa\u6570\u636e\u4e58scale\u8f6c\u6362\u6210float\u7684\u64cd\u4f5c\u3002 output_formats : \u7528\u6765\u6807\u8bc6\u8f93\u51faTensor\u7684\u6570\u636e\u6392\u5e03\u683c\u5f0f\uff0cNCHW\u6216\u8005NHWC\uff0c\u6570\u91cf\u7b49\u4e8eoutputs\u4e2a\u6570\uff0c\u6a21\u578b\u8f93\u51faTensor\u987a\u5e8f\u4e0e output_formats \u7684\u914d\u7f6e\u987a\u5e8f\u4e00\u81f4\u3002\u5982\u679c\u6709\u591a\u4e2a\u8f93\u51faTensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7\uff08,\uff09\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002NCHW\u8868\u793a\u5bf9\u5e94\u987a\u5e8f\u7684outputTensor\u6309NCHW\u7684\u6570\u636e\u683c\u5f0f\u6392\u5e03\uff08\u4e0e\u539f\u6a21\u578b\u76f8\u540c\uff09\uff1bNHWC\u8868\u793a\u5bf9\u5e94\u987a\u5e8f\u7684outputTensor\u6309NHWC\u7684\u683c\u5f0f\u6392\u5e03\uff08\u9ed8\u8ba4\u683c\u5f0f\uff09\u3002 \u6ce8\u610f \uff081\uff09\u5982\u679c\u662f\u591a\u8f93\u51fa\u6a21\u578b\uff0c\u82e5\u4ec5\u9700\u6307\u5b9a\u90e8\u5206\u8f93\u51fa\u4e3aNCHW\uff0c\u5219\u6309\u5e8f\u8bbe\u7f6e\u53c2\u6570\uff0c\u65e0\u9700\u8f6c\u6362\u7684\u7528None\u8868\u793a\uff0c\u5982\uff1acaffe\uff0cNone,caffe\uff1b\u5f53\u4f7f\u7528\u8f93\u51faTensors\u540d\u5b57\u8fdb\u884c\u8bbe\u7f6e\u65f6\uff0c\u82e5\u4ec5\u6307\u5b9a\u90e8\u5206\u8f93\u51fa\u4e3aNCHW\uff0c\u5219\u4ec5\u7ed9\u51fa\u9700\u8981\u8f6c\u6362\u7684tensor name\u5373\u53ef\uff0c\u5982\uff1aoutput0\uff0coutput2\u3002 \uff082\uff09\u82e5\u914d\u7f6e\u4e86output_pack_model_arrays:\u53c2\u6570\uff0c\u5c06\u81ea\u52a8\u5728ini\u4e2d\u586b\u5145output_formats\u7684\u4fe1\u606f\u3002 \uff083\uff09\u5982\u679c\u60f3\u6307\u5b9a\u8f93\u51fatensor\u7684\u6570\u636e\u6392\u5e03\uff0c\u9664\u652f\u6301\u914d\u7f6eoutput_pack_model_arrays:\u53c2\u6570\u7684\u65b9\u5f0f\u5916\uff0c\u8fd8\u53ef\u652f\u6301\u901a\u8fc7\u5728ini\u4e2d\u914d\u7f6e[OUTPUT_CONFIG]\u7684output_formats\u4fe1\u606f\u6765\u6307\u5b9a\u8f93\u51fatensor\u7684\u6570\u636e\u6392\u5e03\uff0c\u4f7f\u7528NCHW\uff0cNHWC\u6765\u8fdb\u884c\u6307\u5b9a\uff0c\u5982\uff1aoutput_formats = NHWC,NCHW,NHWC\u3002","title":"2.2.2 OUTPUT_CONFIG"},{"location":"module/User_Guide/IPU200M/Convert.html#223-conv_config","text":"input_format : \u6307\u5b9a\u7f51\u7edc\u4e2d\u6240\u6709\u5377\u79ef\u7684\u91cf\u5316\u65b9\u5f0f\uff0c\u9ed8\u8ba4L5\uff0c\u53ef\u9009\u65b9\u6848ALL_UINT8\uff0cALL_INT16\uff0c CONV2D_INT16\uff0cDEPTHWISE_INT16\u3002 ALL_UINT8 : \u6307\u5b9a\u6240\u6709\u5377\u79ef\u6309\u7167UINT8\u91cf\u5316\u3002 ALL_INT16 : \u6307\u5b9a\u6240\u6709\u5377\u79ef\u6309\u7167INT16\u91cf\u5316\u3002 CONV2D_INT16 : \u53ea\u6307\u5b9a\u6240\u6709\u666e\u901a\u5377\u79ef\u6309\u7167INT16\u91cf\u5316\u3002 DEPTHWISE_INT16 : \u53ea\u6307\u5b9a\u6240\u6709Depthwise \u5377\u79ef\u6309\u7167INT16\u91cf\u5316\u3002 \u5728 UINT8 \u6a21\u5f0f \u4e0b\uff0c\u5377\u79ef\u8fd0\u884c\u6240\u5360\u5e26\u5bbd\u5c0f\uff0c\u8fd0\u884c\u901f\u5ea6\u5feb\uff1b\u5728 INT16\u6a21\u5f0f \u4e0b\uff0c\u53ef\u4ee5\u6781\u5927\u7684\u63d0\u9ad8\u5377\u79ef\u7684\u7cbe\u5ea6\uff0c\u4f46\u662f\u8fd0\u884c\u7684\u901f\u5ea6\u4f1a\u6709\u5f71\u54cd\u3002 tensor_arrays : \u6307\u5b9a\u7f51\u7edc\u4e2d\u67d0\u4e9b\u5c42\u7684\u5377\u79ef\u91cf\u5316\u65b9\u5f0f\u3002\u6574\u4e2a\u7f51\u7edc\u5377\u79ef\u90fd\u91c7\u7528\u9ed8\u8ba4\u7684UINT8 \uff0c\u4f46\u662f\u67d0\u4e9b\u5377\u79ef\u5c42\u9700\u8981\u66f4\u9ad8\u7684\u7cbe\u5ea6\uff0c\u8fd9\u65f6\u76f4\u63a5\u586b\u5199\u90a3\u4e9b\u5377\u79ef\u5c42\u7684\u7b2c\u4e00\u4e2a\u8f93\u5165\u7684 input id name\u5373\u53ef\u3002\u591a\u5c42\u65f6\uff0cname\u4ee5\u9017\u53f7( , )\u5206\u9694\u3002 \u6ce8\u610f \u5377\u79ef\u7b2c\u4e00\u4e2a\u8f93\u5165\u7684input id \u540d\u5b57\u53ef\u901a\u8fc7netron\u5de5\u5177\u67e5\u770b\u3002\u6307\u5b9a\u91cf\u5316\u65f6\uff0c\u7f51\u7edc\u4e2d\u7684\u7b2c\u4e00\u5c42\u5377\u79ef\u4e0d\u751f\u6548\u3002","title":"2.2.3 CONV_CONFIG"},{"location":"module/User_Guide/IPU200M/Convert.html#224-optimize_config","text":"skip_concatenation : \u7f51\u7edc\u4e2d\u7684Concatenation\u5c42\uff0c\u5982\u679c\u53ea\u9488\u5bf9\u6700\u540e\u4e00\u4e2a\u7ef4\u5ea6\u5408\u5e76\uff0c\u4f1a\u8d70\u8fdb\u8be5\u4f18\u5316\u4e2d\u3002Fixed\u6a21\u578b\u4f1a\u5c06Concatenation\u5c42\u8f6c\u6362\u4e3askip_concatenation\uff0cskip_concatenation\u5c42\u4f1a\u5927\u5e45\u51cf\u5c0f\u8fd0\u884c\u65f6\u95f4\u3002","title":"2.2.4 OPTIMIZE_CONFIG"},{"location":"module/User_Guide/IPU200M/Convert.html#225","text":"training_input_formats input_formats \u677f\u4e0a\u8fd0\u884c\u65f6\u6570\u636e\u5bf9\u9f50\u65b9\u5f0f RGB/BGR RGB/BGR \u4e0d\u7528\u5bf9\u9f50 RGB/BGR RGBA/BGRA W = ALIGN_UP(W * 4, xrgb_h_pitch_alignment ) / 4 RGB/BGR YUV_NV12/GRAY H = ALIGN_UP(H, yuv420_v_pitch_alignment ) W = ALIGN_UP(W, yuv420_h_pitch_alignment ) RAWDATA_F32_NHWC RAWDATA_F32_NHWC \u4e0d\u7528\u5bf9\u9f50 RAWDATA_S16_NHWC RAWDATA_S16_NHWC \u6700\u540e1\u4e2a\u7ef4\u5ea6 = ALIGN_UP(\u6700\u540e1\u4e2a\u7ef4\u5ea6, 8 ) \u5982\u679c\u914d\u7f6e dequantizations \u4e3aTRUE\uff0c\u751f\u6210\u7684\u6a21\u578b\u5bf9\u5e94\u8f93\u51fa\u4f1a\u589e\u52a0Fix2Float\u7b97\u5b50\uff0c\u8f93\u51fa\u6570\u636e\u7c7b\u578b\u4e3afloat32\uff0c\u6570\u636e\u4e0e\u8f93\u51fashape\u4e00\u81f4\uff0c\u6ca1\u6709\u5bf9\u9f50\u8981\u6c42\u3002 \u5982\u679c\u914d\u7f6e dequantizations \u4e3aFALSE\uff0c\u5728\u677f\u7aef\u8fd0\u884c\u65f6\u8f93\u51fa\u6570\u636e\u7c7b\u578b\u4e3aint16\uff0c\u8f93\u51fa\u7684\u6570\u636e\u5bf9\u9f50\u65b9\u6cd5\u4e3a\uff1a\u6700\u540e1\u4e2a\u7ef4\u5ea6 = ALIGN_UP(\u6700\u540e1\u4e2a\u7ef4\u5ea6, 8 )\u3002 \u5177\u4f53\u8be6\u89c15.2.1\u8282\u53bb\u9664\u65e0\u7528\u6570\u636e\u3002","title":"2.2.5 \u8f93\u5165\u8f93\u51fa\u914d\u7f6e\u603b\u7ed3"},{"location":"module/User_Guide/IPU200M/DLA_SDK_Support.html","text":"10.1. Caffe\u652f\u6301\u7b97\u5b50 \u00b6 \u7b97\u5b50 \u5907\u6ce8 ArgMax only support top 1 BatchNorm Concat \u6700\u5927256\u4e2atensor concat Convolution \u9650\u5236\u6761\u4ef6\uff1aAll tensor size < 2^31 \u82e5kernel size \u4e3a do*h*w*di \u5219h * w < 64 group\u4e3a1\u65f6\uff1a\u8f6c\u6362\u6210Depthwise Convolution; group\u4e3aC\u65f6\uff1a\u8f6c\u6362\u4e3aConvolution; group\u4e3a (1, C) \u65f6\uff1a\u62c6\u89e3\u6210\u82e5\u5e72Convolution round(di/16)*round(do/16) < 512 * 1024 ConvolutionDepthwise \u539f\u751f\u652f\u6301Kernel_size\u4e3a3*3\uff0c6*6\uff0c9*9\uff0c\u5176\u4f59\u60c5\u51b5\u8f6c\u6362\u6210Convolution\u5904\u7406\u9650\u5236\u6761\u4ef6\uff1aPad\u8303\u56f4\uff1a[0, 1] CReLU ContinuationIndicator Crop Deconvolution All tensor size < 2^31 \u82e5kernel size \u4e3a do*h*w*di\uff0ch * w < 64 round(di/16)*round(do/16) < 512 * 1024 Dropout Eltwise \u652f\u6301Add\u3001Sub\u3001Mul\u3001Maximum \u5bf9\u4e8e\u8f93\u5165\u7684\u4e24\u4e2atensor,shape\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6 1. 4\u7ef4\u5411\u91cf\uff0cNCHW 2. NCHW \uff0cconst 3. NCHW \uff0cC\u7ef4\u5411\u91cf 4. NCHW \uff0cNCHW Flatten InnerProduct \u82e5weight size do*di round(di/16)*round(do/16) < 512 * 1024 Permute Pooling \u82e5kernel size\u4e3ah*w 1.global_pooling\u4e3atrue h*w < = 65025 2.global_pooling\u4e3afalse h*w < = 19*19 PriorBox Power \u4ec5\u652f\u6301\u6307\u6570\u4e3a\u6b63\u6574\u6570 Reshape Reverse ROIPooling ROIPooling\u7684rois\u8f93\u5165\u7ef4\u5ea6\u4e3a\uff08N\u00d75\uff09\uff0c\u5f53\u540e\u6bb5\u7f51\u7edc\u5168\u90e8\u662fInnerProduct\u65f6\uff0cN\u624d\u53ef\u4ee5\u8bbe\u7f6e\u5927\u4e8e1\uff0c\u5982\u679c\u540e\u6bb5\u7f51\u7edc\u4e2d\u6709\u5377\u79ef\u65f6\uff0cN\u4ec5\u53ef\u4ee5\u8bbe\u7f6e\u4e3a1\uff0c\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u9700\u8981\u5faa\u73af\u6267\u884cN\u6b21\u3002\u4f7f\u7528\u65b9\u6cd5\u548c\u9650\u5236\u8be6\u89c1\u4e0b\u65b9Please Note\u3002 ReLU \u8f93\u5165 < =4\u7ef4 PReLU \u8f93\u5165 < =4\u7ef4 Sigmoid Slice Scale \u5bf9\u4e8e\u8f93\u5165\u7684\u4e24\u4e2atensor,shape\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6 1. 4\u7ef4\u5411\u91cf\uff0cNCHW 2. NCHW \uff0cconst 3. NCHW \uff0cC\u7ef4\u5411\u91cf 4. NCHW \uff0cNCHW Softmax \u5982\u9700\u5bf9\u6307\u5b9a\u7ef4\u5ea6\u8fdb\u884c\u8fd0\u7b97\uff0c\u5c06\u8981\u8ba1\u7b97\u7684\u7ef4\u5ea6\u8f6c\u7f6e\u5230\u6700\u540e\u7684\u7ef4\u5ea6\uff08\u6700\u5185\u7ef4\u5ea6\uff09\uff0c\u6700\u5927\u652f\u630132*512=16384 Split Tanh Threshold \u53ea\u652f\u63014\u7ef4\u8f93\u5165 Tile Upsample Upsample\u7b97\u5b50\u5728caffe\u4e2d\u6ca1\u6709\uff0c\u53ef\u4ee5\u624b\u52a8\u5c06Deconvolution\u4fee\u6539\u6210Upsample \u53ea\u652f\u63014\u7ef4\u8f93\u5165 Only support same scale on H and W Reorg \u53ea\u652f\u6301stride = 2 LSTM \u8f93\u5165c0,h0\u5fc5\u987b\u662fconst tensor,cn,hn\u4e0d\u652f\u6301\u5355\u72ec\u8f93\u51fa\uff0c\u53ea\u652f\u6301\u5355\u5411LSTM Please Note: Upsample\u7b97\u5b50\u5728prototxt\u4e2d\u8fd9\u6837\u63cf\u8ff0\uff1a layer { bottom : \"layer85-conv\" top : \"layer86-upsample\" name : \"layer86-upsample\" type : \"Upsample\" upsample_param { scale : 2 } } scale\u53c2\u6570\u4e0eDeconvolution\u7684Stride\u542b\u4e49\u76f8\u540c\u3002\u4f46\u9700\u6ce8\u610fUpsample\u76f8\u5f53\u4e8e\u6743\u91cd\u5168\u4e3a1\u7684Deconvolution\u7b97\u5b50\u3002 ROIPooling\u7b97\u5b50\u5728prototxt\u4e2d\u8fd9\u6837\u63cf\u8ff0\uff1a layer { name : \"roi_pool5\" type : \"ROIPooling\" bottom : \"conv5_3\" bottom : \"rois\" top : \"pool5\" roi_pooling_param { pooled_w : 7 pooled_h : 7 spatial_scale : 0.0625 } } Roi_pooling_param\u4ec5\u652f\u6301pooled_w\uff0cpooled_h\u548cspatial_scale\u3002Float\u6a21\u578b\u7684rois\u8f93\u5165\u4e3arpn\u5c42\u8f93\u51fa\u7684\u5750\u6807\uff0cFixed\u548cOffline\u6a21\u578b\u7684rois\u8f93\u5165\u4e3arpn\u5c42\u8f93\u51fa\u5750\u6807\u4e58spatial_scale\u503c\u540e\u518d\u91cf\u5316\u5230int16\u540e\u9001\u5165\u6a21\u578b\u3002 10.2. TensorFlow\u652f\u6301\u7b97\u5b50 \u00b6 \u7c7b\u522b \u7b97\u5b50 \u5907\u6ce8 Convolution Conv \u9650\u5236\u6761\u4ef6\uff1aKernel_size\uff1aH * W < 64 Convolution DepthwiseConv2dNative \u539f\u751f\u652f\u6301Kernel_size\u4e3a3*3\uff0c6*6\uff0c9*9\uff0c\u5176\u4f59\u60c5\u51b5\u8f6c\u6362\u6210Convolution\u5904\u7406 Convolution FullyConnected Pooling Max pooling Pooling Average Pooling Activation ReLU Activation PReLU Activation ReLU6 Activation LeakyReLU Activation Sigmoid Math Less Math Greater Math GreaterEqual Math Equal Math Add Math Sub Math Mul Math RealDiv \u4ec5\u652f\u6301\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u6570\u4e3a\u5e38\u91cfTensor Math Maximum Math Minimum Math Mean Math Max Math Sqrt Math Rsqrt Math Round Math Softmax \u5982\u9700\u5bf9\u6307\u5b9a\u7ef4\u5ea6\u8fdb\u884c\u8fd0\u7b97\uff0c\u5c06\u8981\u8ba1\u7b97\u7684\u7ef4\u5ea6\u8f6c\u7f6e\u5230\u6700\u540e\u7684\u7ef4\u5ea6\uff08\u6700\u5185\u7ef4\u5ea6\uff09 Math FusedBatchNorm Math Exp DMA Align DMA ConcatV2 DMA Fill DMA Gather DMA GatherV2 DMA Pack DMA Pad DMA SpaceToBatchND DMA BatchToSpaceND DMA Zeroslike DMA Split DMA Slice DMA Unpack DMA Tile DMA Reshape DMA Transpose DMA Resize_bilinear DMA Resize_NearestNeighbor Misc TopKV2 Misc shape 10.3. Onnx\u652f\u6301\u7b97\u5b50 \u00b6 \u7b97\u5b50 \u5907\u6ce8 Add \u5bf9\u4e8e\u8f93\u5165\u7684\u4e24\u4e2atensor,shape\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6 1. 4\u7ef4\u5411\u91cf\uff0cNCHW 2. NCHW \uff0cconst 3. NCHW \uff0cC\u7ef4\u5411\u91cf 4. NCHW \uff0cNCHW Abs ArgMax AveragePool \u82e5kernel size\u4e3ah*w\uff0c\u5f53\u8be5\u7b97\u5b50l\u8f93\u5165\u4e3a h*w < = 19*19 BatchNorm Concat \u6700\u5927256\u4e2atensor concat Convolution All tensor size < 2^31 \u82e5kernel size \u4e3a do*h*w*di \u5219h * w < 64 round(di/16)*round(do/16) < 512 * 1024 \u652f\u6301autoPad\u7684SAME_UPPER\u5c5e\u6027;\u9650\u5236\u6761\u4ef6\uff1aPads\u8303\u56f4\uff1a[0, 7] ConvTranspose All tensor size < 2^32 \u82e5kernel size \u4e3a do*h*w*di\uff0ch * w < 64 round(di/16)*round(do/16) < 512 * 1024 Clip DepthwiseConv2D \u539f\u751f\u652f\u6301Kernel_size\u4e3a3*3\uff0c6*6\uff0c9*9\uff0c\u5176\u4f59\u60c5\u51b5\u8f6c\u6362\u6210Convolution\u5904\u7406 Div \u5bf9\u4e8e\u8f93\u5165\u7684\u4e24\u4e2atensor,shape\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6 1. 4\u7ef4\u5411\u91cf\uff0cNCHW 2. NCHW \uff0cconst 3. NCHW \uff0cC\u7ef4\u5411\u91cf 4. NCHW \uff0cNCHW Dropout DepthToSpace \u53ea\u652f\u63014\u7ef4\u8f93\u5165 Expand Exp Gather \u53ea\u652f\u6301indices\u4e3aint32\u7684\u5e38\u6570 Gemm \u8f93\u5165 < =4\u7ef4\uff0c\u82e5weight size do*di round(di/16)*round(do/16) < 512 * 1024 GlobalAveragePool \u82e5kernel size\u4e3ah*w \u5f53\u8be5\u7b97\u5b50l\u8f93\u5165\u4e3a h*w < = 65025 GlobalMaxPool \u82e5kernel size\u4e3ah*w \u5f53\u8be5\u7b97\u5b50l\u8f93\u5165\u4e3a h*w < = 65025 LSTM \u6fc0\u6d3b\u51fd\u6570\u56fa\u5b9a\uff0c\u4e0d\u80fd\u914d\u7f6e\u3002\u53c2\u89c1\u7528\u6237\u624b\u518c\u7279\u6b8a\u7f51\u7edc\u8f6c\u6362LSTM\u7ae0\u8282 \u8f93\u5165c0,h0\u5fc5\u987b\u662fconst tensor,cn,hn\u4e0d\u652f\u6301\u5355\u72ec\u8f93\u51fa\uff0c \u652f\u6301\u5355\u5411LSTM\u548c\u53cc\u5411LSTM Matmul \u8f93\u5165 < =4\u7ef4\uff0c\u82e5weight size do*di round(di/16)*round(do/16) < 512 * 1024 Mul \u5bf9\u4e8e\u8f93\u5165\u7684\u4e24\u4e2atensor,shape\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6 1. 4\u7ef4\u5411\u91cf\uff0cNCHW 2. NCHW \uff0cconst 3. NCHW \uff0cC\u7ef4\u5411\u91cf 4. NCHW \uff0cNCHW MaxPool \u82e5kernel size\u4e3ah*w \u5f53\u8be5\u7b97\u5b50l\u8f93\u5165\u4e3a h*w < = 19*19 Max Pad \u652f\u6301\uff0conly support constant Reshape ReduceSum \u8f93\u5165 < =4\u7ef4 ReduceMean \u8f93\u5165 < =4\u7ef4 ReduceMax \u8f93\u5165 < =4\u7ef4\uff0c\u4ec5\u652f\u6301\u540c\u65f6\u5bf9\u4e00\u4e2aaxis\u8fdb\u884c\u8ba1\u7b97 Resize \u5f53'model'\u4e3anearest \u4e0a\u91c7\u6837\u65f6\uff0c'coordinate_transformation_mode'\u4e3a'asymmetric', 'nearest_mode'only support round_prefer_floor(Default) and floor coordinate_transformation_mode'\u4e3a'align_corners', 'nearest_mode'only support round_prefer_floor(Default) and round_prefer_ceil. \u4e0b\u91c7\u6837\u65f6\uff0c 'coordinate_transformation_mode'\u4e3a'asymmetric', 'nearest_mode' is not support floor ReLU \u53ea\u652f\u63014\u7ef4\u8f93\u5165 PReLU \u8f93\u5165 < =4\u7ef4 LeakyReLU \u8f93\u5165 < =4\u7ef4 TanH Sigmoid Slice Softmax \u5982\u9700\u5bf9\u6307\u5b9a\u7ef4\u5ea6\u8fdb\u884c\u8fd0\u7b97\uff0c\u5c06\u8981\u8ba1\u7b97\u7684\u7ef4\u5ea6\u8f6c\u7f6e\u5230\u6700\u540e\u7684\u7ef4\u5ea6\uff08\u6700\u5185\u7ef4\u5ea6\uff09\uff0c\u6700\u5927\u652f\u630132*512=16384 Split SpaceToDepth Squeeze Sub \u5bf9\u4e8e\u8f93\u5165\u7684\u4e24\u4e2atensor,shape\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6 1. 4\u7ef4\u5411\u91cf\uff0cNCHW 2. NCHW \uff0cconst 3. NCHW \uff0cC\u7ef4\u5411\u91cf 4. NCHW \uff0cNCHW Transpose Tile Unsqueeze Upsample \u53ea\u652f\u63014\u7ef4\u8f93\u5165Only support same scale on H and W 10.4. SigmaStar DLA SDK\u5bf9\u6a21\u578b\u7684\u9650\u5236 \u00b6 1. \u5bf9\u4e8e\u6307\u5b9a\u7ef4\u5ea6\u7684Softmax\uff0c\u6211\u4eec\u53ea\u652f\u6301\u5bf9\u6700\u5185\u7ef4\u5ea6\u7684\u64cd\u4f5c\uff08\u591a\u4f59\u591a\u7ef4Tensor\u6240Softmax\u8fd0\u7b97\uff0c\u6211\u4eec\u53ea\u652f\u6301Softmax\u5236\u5b9a\u5728\u6700\u5185\u7ef4\u5ea6\u505a\uff09\u3002 2. \u9664\u7b2c\u4e00\u5c42Conv\u5916\uff0c\u5176\u4ed6\u5c42\u7684Conv DI\u7ef4\u5ea6\uff08\u5373NHWC \u4e2dC\u8fd9\u4e2a\u7ef4\u5ea6\uff09\u8d8a\u5927\u6548\u7387\u4f1a\u8d8a\u9ad8\uff0c\u6700\u5927\u652f\u63f42048\u3002 3. Math\u7c7b\u7b97\u5b50\uff08\u5305\u62ecAdd\u3001Sub\u3001Mul\u3001Div\u7b49\u5143\u7d20\u64cd\u4f5c\u7684\u7b97\u5b50\uff09\uff0c\u5982\u679c\u53f3\u64cd\u4f5c\u6570\u662fscaler\uff08\u5355\u4e2a\u6570\u5b57\uff09 \u6216\u8005 1 \u7ef4\u5411\u91cf\uff08HW\u7ef4\u5ea6\u6570\u636e\u76f8\u540c\uff0cC\u7ef4\u5ea6\u4e0d\u540c\uff09\uff0c\u6548\u7387\u4f1a\u66f4\u9ad8\u3002 4. \u7f51\u7edc\u7ed3\u6784\u4e2d\u5c3d\u91cf\u51cf\u5c11\u4e00\u4e2a\u7b97\u5b50\u7684\u8f93\u51fa\u88ab\u591a\u4e2a\u7b97\u5b50\u4f5c\u4e3a\u8f93\u5165\u7684\u60c5\u51b5\uff0c\u5982ResNet\u7684\u6b8b\u5dee\u7ed3\u6784\uff0cGoogLeNet\u7684Inception\u6a21\u5757\u7b49\u3002","title":"DLA SDK Support"},{"location":"module/User_Guide/IPU200M/DLA_SDK_Support.html#101-caffe","text":"\u7b97\u5b50 \u5907\u6ce8 ArgMax only support top 1 BatchNorm Concat \u6700\u5927256\u4e2atensor concat Convolution \u9650\u5236\u6761\u4ef6\uff1aAll tensor size < 2^31 \u82e5kernel size \u4e3a do*h*w*di \u5219h * w < 64 group\u4e3a1\u65f6\uff1a\u8f6c\u6362\u6210Depthwise Convolution; group\u4e3aC\u65f6\uff1a\u8f6c\u6362\u4e3aConvolution; group\u4e3a (1, C) \u65f6\uff1a\u62c6\u89e3\u6210\u82e5\u5e72Convolution round(di/16)*round(do/16) < 512 * 1024 ConvolutionDepthwise \u539f\u751f\u652f\u6301Kernel_size\u4e3a3*3\uff0c6*6\uff0c9*9\uff0c\u5176\u4f59\u60c5\u51b5\u8f6c\u6362\u6210Convolution\u5904\u7406\u9650\u5236\u6761\u4ef6\uff1aPad\u8303\u56f4\uff1a[0, 1] CReLU ContinuationIndicator Crop Deconvolution All tensor size < 2^31 \u82e5kernel size \u4e3a do*h*w*di\uff0ch * w < 64 round(di/16)*round(do/16) < 512 * 1024 Dropout Eltwise \u652f\u6301Add\u3001Sub\u3001Mul\u3001Maximum \u5bf9\u4e8e\u8f93\u5165\u7684\u4e24\u4e2atensor,shape\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6 1. 4\u7ef4\u5411\u91cf\uff0cNCHW 2. NCHW \uff0cconst 3. NCHW \uff0cC\u7ef4\u5411\u91cf 4. NCHW \uff0cNCHW Flatten InnerProduct \u82e5weight size do*di round(di/16)*round(do/16) < 512 * 1024 Permute Pooling \u82e5kernel size\u4e3ah*w 1.global_pooling\u4e3atrue h*w < = 65025 2.global_pooling\u4e3afalse h*w < = 19*19 PriorBox Power \u4ec5\u652f\u6301\u6307\u6570\u4e3a\u6b63\u6574\u6570 Reshape Reverse ROIPooling ROIPooling\u7684rois\u8f93\u5165\u7ef4\u5ea6\u4e3a\uff08N\u00d75\uff09\uff0c\u5f53\u540e\u6bb5\u7f51\u7edc\u5168\u90e8\u662fInnerProduct\u65f6\uff0cN\u624d\u53ef\u4ee5\u8bbe\u7f6e\u5927\u4e8e1\uff0c\u5982\u679c\u540e\u6bb5\u7f51\u7edc\u4e2d\u6709\u5377\u79ef\u65f6\uff0cN\u4ec5\u53ef\u4ee5\u8bbe\u7f6e\u4e3a1\uff0c\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u9700\u8981\u5faa\u73af\u6267\u884cN\u6b21\u3002\u4f7f\u7528\u65b9\u6cd5\u548c\u9650\u5236\u8be6\u89c1\u4e0b\u65b9Please Note\u3002 ReLU \u8f93\u5165 < =4\u7ef4 PReLU \u8f93\u5165 < =4\u7ef4 Sigmoid Slice Scale \u5bf9\u4e8e\u8f93\u5165\u7684\u4e24\u4e2atensor,shape\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6 1. 4\u7ef4\u5411\u91cf\uff0cNCHW 2. NCHW \uff0cconst 3. NCHW \uff0cC\u7ef4\u5411\u91cf 4. NCHW \uff0cNCHW Softmax \u5982\u9700\u5bf9\u6307\u5b9a\u7ef4\u5ea6\u8fdb\u884c\u8fd0\u7b97\uff0c\u5c06\u8981\u8ba1\u7b97\u7684\u7ef4\u5ea6\u8f6c\u7f6e\u5230\u6700\u540e\u7684\u7ef4\u5ea6\uff08\u6700\u5185\u7ef4\u5ea6\uff09\uff0c\u6700\u5927\u652f\u630132*512=16384 Split Tanh Threshold \u53ea\u652f\u63014\u7ef4\u8f93\u5165 Tile Upsample Upsample\u7b97\u5b50\u5728caffe\u4e2d\u6ca1\u6709\uff0c\u53ef\u4ee5\u624b\u52a8\u5c06Deconvolution\u4fee\u6539\u6210Upsample \u53ea\u652f\u63014\u7ef4\u8f93\u5165 Only support same scale on H and W Reorg \u53ea\u652f\u6301stride = 2 LSTM \u8f93\u5165c0,h0\u5fc5\u987b\u662fconst tensor,cn,hn\u4e0d\u652f\u6301\u5355\u72ec\u8f93\u51fa\uff0c\u53ea\u652f\u6301\u5355\u5411LSTM Please Note: Upsample\u7b97\u5b50\u5728prototxt\u4e2d\u8fd9\u6837\u63cf\u8ff0\uff1a layer { bottom : \"layer85-conv\" top : \"layer86-upsample\" name : \"layer86-upsample\" type : \"Upsample\" upsample_param { scale : 2 } } scale\u53c2\u6570\u4e0eDeconvolution\u7684Stride\u542b\u4e49\u76f8\u540c\u3002\u4f46\u9700\u6ce8\u610fUpsample\u76f8\u5f53\u4e8e\u6743\u91cd\u5168\u4e3a1\u7684Deconvolution\u7b97\u5b50\u3002 ROIPooling\u7b97\u5b50\u5728prototxt\u4e2d\u8fd9\u6837\u63cf\u8ff0\uff1a layer { name : \"roi_pool5\" type : \"ROIPooling\" bottom : \"conv5_3\" bottom : \"rois\" top : \"pool5\" roi_pooling_param { pooled_w : 7 pooled_h : 7 spatial_scale : 0.0625 } } Roi_pooling_param\u4ec5\u652f\u6301pooled_w\uff0cpooled_h\u548cspatial_scale\u3002Float\u6a21\u578b\u7684rois\u8f93\u5165\u4e3arpn\u5c42\u8f93\u51fa\u7684\u5750\u6807\uff0cFixed\u548cOffline\u6a21\u578b\u7684rois\u8f93\u5165\u4e3arpn\u5c42\u8f93\u51fa\u5750\u6807\u4e58spatial_scale\u503c\u540e\u518d\u91cf\u5316\u5230int16\u540e\u9001\u5165\u6a21\u578b\u3002","title":"10.1. Caffe\u652f\u6301\u7b97\u5b50"},{"location":"module/User_Guide/IPU200M/DLA_SDK_Support.html#102-tensorflow","text":"\u7c7b\u522b \u7b97\u5b50 \u5907\u6ce8 Convolution Conv \u9650\u5236\u6761\u4ef6\uff1aKernel_size\uff1aH * W < 64 Convolution DepthwiseConv2dNative \u539f\u751f\u652f\u6301Kernel_size\u4e3a3*3\uff0c6*6\uff0c9*9\uff0c\u5176\u4f59\u60c5\u51b5\u8f6c\u6362\u6210Convolution\u5904\u7406 Convolution FullyConnected Pooling Max pooling Pooling Average Pooling Activation ReLU Activation PReLU Activation ReLU6 Activation LeakyReLU Activation Sigmoid Math Less Math Greater Math GreaterEqual Math Equal Math Add Math Sub Math Mul Math RealDiv \u4ec5\u652f\u6301\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u6570\u4e3a\u5e38\u91cfTensor Math Maximum Math Minimum Math Mean Math Max Math Sqrt Math Rsqrt Math Round Math Softmax \u5982\u9700\u5bf9\u6307\u5b9a\u7ef4\u5ea6\u8fdb\u884c\u8fd0\u7b97\uff0c\u5c06\u8981\u8ba1\u7b97\u7684\u7ef4\u5ea6\u8f6c\u7f6e\u5230\u6700\u540e\u7684\u7ef4\u5ea6\uff08\u6700\u5185\u7ef4\u5ea6\uff09 Math FusedBatchNorm Math Exp DMA Align DMA ConcatV2 DMA Fill DMA Gather DMA GatherV2 DMA Pack DMA Pad DMA SpaceToBatchND DMA BatchToSpaceND DMA Zeroslike DMA Split DMA Slice DMA Unpack DMA Tile DMA Reshape DMA Transpose DMA Resize_bilinear DMA Resize_NearestNeighbor Misc TopKV2 Misc shape","title":"10.2. TensorFlow\u652f\u6301\u7b97\u5b50"},{"location":"module/User_Guide/IPU200M/DLA_SDK_Support.html#103-onnx","text":"\u7b97\u5b50 \u5907\u6ce8 Add \u5bf9\u4e8e\u8f93\u5165\u7684\u4e24\u4e2atensor,shape\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6 1. 4\u7ef4\u5411\u91cf\uff0cNCHW 2. NCHW \uff0cconst 3. NCHW \uff0cC\u7ef4\u5411\u91cf 4. NCHW \uff0cNCHW Abs ArgMax AveragePool \u82e5kernel size\u4e3ah*w\uff0c\u5f53\u8be5\u7b97\u5b50l\u8f93\u5165\u4e3a h*w < = 19*19 BatchNorm Concat \u6700\u5927256\u4e2atensor concat Convolution All tensor size < 2^31 \u82e5kernel size \u4e3a do*h*w*di \u5219h * w < 64 round(di/16)*round(do/16) < 512 * 1024 \u652f\u6301autoPad\u7684SAME_UPPER\u5c5e\u6027;\u9650\u5236\u6761\u4ef6\uff1aPads\u8303\u56f4\uff1a[0, 7] ConvTranspose All tensor size < 2^32 \u82e5kernel size \u4e3a do*h*w*di\uff0ch * w < 64 round(di/16)*round(do/16) < 512 * 1024 Clip DepthwiseConv2D \u539f\u751f\u652f\u6301Kernel_size\u4e3a3*3\uff0c6*6\uff0c9*9\uff0c\u5176\u4f59\u60c5\u51b5\u8f6c\u6362\u6210Convolution\u5904\u7406 Div \u5bf9\u4e8e\u8f93\u5165\u7684\u4e24\u4e2atensor,shape\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6 1. 4\u7ef4\u5411\u91cf\uff0cNCHW 2. NCHW \uff0cconst 3. NCHW \uff0cC\u7ef4\u5411\u91cf 4. NCHW \uff0cNCHW Dropout DepthToSpace \u53ea\u652f\u63014\u7ef4\u8f93\u5165 Expand Exp Gather \u53ea\u652f\u6301indices\u4e3aint32\u7684\u5e38\u6570 Gemm \u8f93\u5165 < =4\u7ef4\uff0c\u82e5weight size do*di round(di/16)*round(do/16) < 512 * 1024 GlobalAveragePool \u82e5kernel size\u4e3ah*w \u5f53\u8be5\u7b97\u5b50l\u8f93\u5165\u4e3a h*w < = 65025 GlobalMaxPool \u82e5kernel size\u4e3ah*w \u5f53\u8be5\u7b97\u5b50l\u8f93\u5165\u4e3a h*w < = 65025 LSTM \u6fc0\u6d3b\u51fd\u6570\u56fa\u5b9a\uff0c\u4e0d\u80fd\u914d\u7f6e\u3002\u53c2\u89c1\u7528\u6237\u624b\u518c\u7279\u6b8a\u7f51\u7edc\u8f6c\u6362LSTM\u7ae0\u8282 \u8f93\u5165c0,h0\u5fc5\u987b\u662fconst tensor,cn,hn\u4e0d\u652f\u6301\u5355\u72ec\u8f93\u51fa\uff0c \u652f\u6301\u5355\u5411LSTM\u548c\u53cc\u5411LSTM Matmul \u8f93\u5165 < =4\u7ef4\uff0c\u82e5weight size do*di round(di/16)*round(do/16) < 512 * 1024 Mul \u5bf9\u4e8e\u8f93\u5165\u7684\u4e24\u4e2atensor,shape\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6 1. 4\u7ef4\u5411\u91cf\uff0cNCHW 2. NCHW \uff0cconst 3. NCHW \uff0cC\u7ef4\u5411\u91cf 4. NCHW \uff0cNCHW MaxPool \u82e5kernel size\u4e3ah*w \u5f53\u8be5\u7b97\u5b50l\u8f93\u5165\u4e3a h*w < = 19*19 Max Pad \u652f\u6301\uff0conly support constant Reshape ReduceSum \u8f93\u5165 < =4\u7ef4 ReduceMean \u8f93\u5165 < =4\u7ef4 ReduceMax \u8f93\u5165 < =4\u7ef4\uff0c\u4ec5\u652f\u6301\u540c\u65f6\u5bf9\u4e00\u4e2aaxis\u8fdb\u884c\u8ba1\u7b97 Resize \u5f53'model'\u4e3anearest \u4e0a\u91c7\u6837\u65f6\uff0c'coordinate_transformation_mode'\u4e3a'asymmetric', 'nearest_mode'only support round_prefer_floor(Default) and floor coordinate_transformation_mode'\u4e3a'align_corners', 'nearest_mode'only support round_prefer_floor(Default) and round_prefer_ceil. \u4e0b\u91c7\u6837\u65f6\uff0c 'coordinate_transformation_mode'\u4e3a'asymmetric', 'nearest_mode' is not support floor ReLU \u53ea\u652f\u63014\u7ef4\u8f93\u5165 PReLU \u8f93\u5165 < =4\u7ef4 LeakyReLU \u8f93\u5165 < =4\u7ef4 TanH Sigmoid Slice Softmax \u5982\u9700\u5bf9\u6307\u5b9a\u7ef4\u5ea6\u8fdb\u884c\u8fd0\u7b97\uff0c\u5c06\u8981\u8ba1\u7b97\u7684\u7ef4\u5ea6\u8f6c\u7f6e\u5230\u6700\u540e\u7684\u7ef4\u5ea6\uff08\u6700\u5185\u7ef4\u5ea6\uff09\uff0c\u6700\u5927\u652f\u630132*512=16384 Split SpaceToDepth Squeeze Sub \u5bf9\u4e8e\u8f93\u5165\u7684\u4e24\u4e2atensor,shape\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6 1. 4\u7ef4\u5411\u91cf\uff0cNCHW 2. NCHW \uff0cconst 3. NCHW \uff0cC\u7ef4\u5411\u91cf 4. NCHW \uff0cNCHW Transpose Tile Unsqueeze Upsample \u53ea\u652f\u63014\u7ef4\u8f93\u5165Only support same scale on H and W","title":"10.3. Onnx\u652f\u6301\u7b97\u5b50"},{"location":"module/User_Guide/IPU200M/DLA_SDK_Support.html#104-sigmastar-dla-sdk","text":"1. \u5bf9\u4e8e\u6307\u5b9a\u7ef4\u5ea6\u7684Softmax\uff0c\u6211\u4eec\u53ea\u652f\u6301\u5bf9\u6700\u5185\u7ef4\u5ea6\u7684\u64cd\u4f5c\uff08\u591a\u4f59\u591a\u7ef4Tensor\u6240Softmax\u8fd0\u7b97\uff0c\u6211\u4eec\u53ea\u652f\u6301Softmax\u5236\u5b9a\u5728\u6700\u5185\u7ef4\u5ea6\u505a\uff09\u3002 2. \u9664\u7b2c\u4e00\u5c42Conv\u5916\uff0c\u5176\u4ed6\u5c42\u7684Conv DI\u7ef4\u5ea6\uff08\u5373NHWC \u4e2dC\u8fd9\u4e2a\u7ef4\u5ea6\uff09\u8d8a\u5927\u6548\u7387\u4f1a\u8d8a\u9ad8\uff0c\u6700\u5927\u652f\u63f42048\u3002 3. Math\u7c7b\u7b97\u5b50\uff08\u5305\u62ecAdd\u3001Sub\u3001Mul\u3001Div\u7b49\u5143\u7d20\u64cd\u4f5c\u7684\u7b97\u5b50\uff09\uff0c\u5982\u679c\u53f3\u64cd\u4f5c\u6570\u662fscaler\uff08\u5355\u4e2a\u6570\u5b57\uff09 \u6216\u8005 1 \u7ef4\u5411\u91cf\uff08HW\u7ef4\u5ea6\u6570\u636e\u76f8\u540c\uff0cC\u7ef4\u5ea6\u4e0d\u540c\uff09\uff0c\u6548\u7387\u4f1a\u66f4\u9ad8\u3002 4. \u7f51\u7edc\u7ed3\u6784\u4e2d\u5c3d\u91cf\u51cf\u5c11\u4e00\u4e2a\u7b97\u5b50\u7684\u8f93\u51fa\u88ab\u591a\u4e2a\u7b97\u5b50\u4f5c\u4e3a\u8f93\u5165\u7684\u60c5\u51b5\uff0c\u5982ResNet\u7684\u6b8b\u5dee\u7ed3\u6784\uff0cGoogLeNet\u7684Inception\u6a21\u5757\u7b49\u3002","title":"10.4. SigmaStar DLA SDK\u5bf9\u6a21\u578b\u7684\u9650\u5236"},{"location":"module/User_Guide/IPU200M/Preprocess.py_and_Input_Config.ini_Support.html","text":"1. \u524d\u5904\u7406\u6587\u4ef6Preprocess.py \u00b6 \u7531\u4e8e\u4e0d\u540c\u7f51\u7edc\u6a21\u578b\u7684\u524d\u5904\u7406\u65b9\u5f0f\u4e0d\u5c3d\u76f8\u540c\uff0c\u4e3a\u4e86\u80fd\u591f\u5728\u8f6c\u6362\u7f51\u7edc\u65f6\u5c3d\u53ef\u80fd\u51cf\u5c0f\u7cbe\u5ea6\u7684\u4e22\u5931\uff0c\u5e94\u8be5\u4f7f\u7528\u4e0e\u8bad\u7ec3\u76f8\u540c\u7684\u56fe\u7247\u524d\u5904\u7406\u65b9\u5f0f\uff0c\u6bcf\u79cd\u524d\u5904\u7406\u65b9\u5f0f\u9700\u72ec\u7acb\u7f16\u5199python\u6587\u4ef6\u3002 \u7f16\u5199\u56fe\u7247\u524d\u5904\u7406\u6587\u4ef6\u65f6\uff0c\u7f16\u5199\u56fe\u7247\u5904\u7406\u51fd\u6570\uff08\u51fd\u6570\u540d\u79f0\u4e0d\u9650\uff09\uff0c\u8fd4\u56denp.array \u683c\u5f0f\u7684\u56fe\u7247\u6570\u636e\uff0c\u51fd\u6570\u5fc5\u987b\u5305\u542b2\u4e2a\u53c2\u6570\uff1a \u56fe\u7247\u8def\u5f84 \u5f52\u4e00\u5316\u6807\u8bb0\uff08norm=True\uff09 \u5f52\u4e00\u5316\u6807\u8bb0\u662f\u4e3a\u4e86\u533a\u5206\u7f51\u7edc\u6a21\u578b\u662f\u5426\u662f\u6d6e\u70b9\u6a21\u578b\u3002\u56e0\u4e3a\u5728\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u9636\u6bb5\uff0c\u56fe\u7247\u7684\u5f52\u4e00\u5316\u9700\u8981\u5728\u9001\u8fdb\u7f51\u7edc\u524d\u5904\u7406\u597d\u3002\u4f46\u662f\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u548c\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u5df2\u7ecf\u5305\u542b\u4e86input_config.ini\u6587\u4ef6\u7684\u8bbe\u7f6e\u4fe1\u606f\uff0c\u80fd\u591f\u5c06\u56fe\u7247\u6570\u636e\u81ea\u884c\u505a\u5f52\u4e00\u5316\u5904\u7406\uff0c\u56e0\u6b64\u9001\u8fdb\u7f51\u7edc\u6a21\u578b\u7684\u6570\u636e\u4e0d\u9700\u8981\u505a\u5f52\u4e00\u5316\uff0c\u8fd9\u4e0e\u5728SigmaStar\u786c\u4ef6\u4e0a\u5904\u7406\u65b9\u5f0f\u76f8\u540c\u3002 \u6839\u636einput_config.ini\u6587\u4ef6\u4e2dtraining_input_formats \u548c input_formats\u8bbe\u7f6e\u7684\u4e0d\u540c\uff0c\u4e0b\u9762\u4e3e\u4f8b\u524d\u5904\u7406\u6587\u4ef6\u7684\u5199\u6cd5\u3002 1.1. training_input_formats\u548cinput_formats\u5747\u4e3aRGB\u6216\u8005\u5747\u4e3aBGR \u00b6 PC\u4e0a\u8f6c\u6362\u6a21\u578b\u548csimulator\u6a21\u578b\u793a\u4f8b\u7684preprocess.py\u5982\u4e0b\u3002 \u5982\u679c\u5728\u6bcf\u4e2achannel\u4e0a\u6709\u4e0d\u540c\u7684std\u503c\uff0c\u9700\u8981\u5728\u5bf9\u5e94channel\u4e0a\u9664\u4ee5std\uff0c\u5982 std= [57.375, 57.12, 58.395]\u3002 \u540c\u65f6\uff0cinput_config.ini\u6587\u4ef6\u4e2dstd_value\u6bcf\u4e2a\u901a\u9053\u5bf9\u5e94\u7684std_value\u503c\uff0c\u4ee5\u82f1\u6587\u5192\u53f7( : )\u5206\u9694\uff0c\u987a\u5e8f\u4e3aRGB\u3002 training_input_formats input_formats \u677f\u4e0a\u8fd0\u884c\u65f6\u6570\u636e\u5bf9\u9f50\u65b9\u5f0f RGB/BGR RGB/BGR \u4e0d\u7528\u5bf9\u9f50 RGB/BGR RGBA/BGRA W = ALIGN_UP(W * 4, xrgb_h_pitch_alignment ) / 4 import cv2 import numpy as np def get_image ( img_path , resizeH = 224 , resizeW = 224 , norm = True , meanB = 103.53 , meanG = 116.28 , meanR = 123.68 , std = 57.375 , rgb = False , nchw = False ): img = cv2 . imread ( img_path ) if img is None : raise FileNotFoundError ( 'No such image: {} ' . format ( img_path )) img_norm = cv2 . resize ( img , ( resizeW , resizeH ), interpolation = cv2 . INTER_LINEAR ) if norm : img_norm = ( img_norm - [ meanB , meanG , meanR ]) / std img_norm = img_norm . astype ( 'float32' ) else : img_norm = np . round ( img_norm ) . astype ( 'uint8' ) if rgb : img_norm = cv2 . cvtColor ( img_norm , cv2 . COLOR_BGR2RGB ) if nchw : img_norm = np . transpose ( img_norm , axes = ( 2 , 0 , 1 )) return np . expand_dims ( img_norm , 0 ) def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm ) 1.2. training_input_formats\u4e3aRGB\u548cinput_formats\u4e3aGRAY \u00b6 PC\u4e0a\u8f6c\u6362\u6a21\u578b\u548csimulator\u6a21\u578b\u793a\u4f8b\u7684preprocess.py\u5982\u4e0b\u3002 \u7070\u5ea6\u6a21\u578b\uff0c\u6307\u8f93\u5165\u662f\u5355\u901a\u9053\u56fe\u7247\u7684\u6a21\u578b\uff0c\u5373\u8f93\u5165C\u7ef4\u5ea6\u4e0a\u4e3a1\u7684\u6a21\u578b\u3002input_config.ini\u7070\u5ea6\u56fe\u7247\u8bf7\u6309\u5982\u4e0b\u65b9\u5f0f\u914d\u7f6e\uff1atraining_input_formats=RGB;input_formats=GRAY; training_input_formats input_formats \u677f\u4e0a\u8fd0\u884c\u65f6\u6570\u636e\u5bf9\u9f50\u65b9\u5f0f RGB/BGR GRAY H = ALIGN_UP(H, yuv420_v_pitch_alignment ) W = ALIGN_UP(W, yuv420_h_pitch_alignment ) import cv2 import numpy as np def get_image ( img_path , resizeH = 28 , resizeW = 28 , norm = True , meanR = 33.318 , std = 1.0 , rgb = False , nchw = False ): img = cv2 . imread ( img_path , flags =- 1 ) if img is None : raise FileNotFoundError ( 'No such image: {} ' . format ( img_path )) try : img_dim = img . shape [ 2 ] except IndexError : img_dim = 1 if img_dim == 3 : img = cv2 . cvtColor ( img , cv2 . COLOR_BGR2GRAY ) elif img_dim == 4 : img = cv2 . cvtColor ( img , cv2 . COLOR_BGRA2GRAY ) img_norm = cv2 . resize ( img , ( resizeW , resizeH ), interpolation = cv2 . INTER_LINEAR ) if norm : img_norm = ( img_norm - meanR ) / std img_norm = np . expand_dims ( img_norm , axis = 2 ) dummy = np . zeros (( 28 , 28 , 2 )) img_norm = np . concatenate (( img_norm , dummy ), axis = 2 ) img_norm = img_norm . astype ( 'float32' ) else : img_norm = np . expand_dims ( img_norm , 2 ) img_norm = np . round ( img_norm ) . astype ( 'uint8' ) if rgb : img_norm = cv2 . cvtColor ( img_norm , cv2 . COLOR_BGR2RGB ) if nchw : # NCHW img_norm = np . transpose ( img_norm , axes = ( 2 , 0 , 1 )) return np . expand_dims ( img_norm , 0 ) def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm ) 1.3. training_input_formats\u4e3aRGB\u6216BGR\u548cinput_formats\u4e3aYUV_NV12 \u00b6 PC\u4e0a\u8f6c\u6362\u6a21\u578b\u548csimulator\u6a21\u578b\u793a\u4f8b\u7684preprocess.py\u5982\u4e0b\u3002 training_input_formats input_formats \u677f\u4e0a\u8fd0\u884c\u65f6\u6570\u636e\u5bf9\u9f50\u65b9\u5f0f RGB/BGR YUV_NV12 H = ALIGN_UP(H, yuv420_v_pitch_alignment ) W = ALIGN_UP(W, yuv420_h_pitch_alignment ) import cv2 import numpy as np def get_image ( img_path , resizeH = 224 , resizeW = 224 , norm = True , meanB = 127.5 , meanG = 127.5 , meanR = 127.5 , std = 128.0 , rgb = False , nchw = False ): img = cv2 . imread ( img_path ) if img is None : raise FileNotFoundError ( 'No such image: {} ' . format ( img_path )) img_norm = cv2 . resize ( img , ( resizeW , resizeH ), interpolation = cv2 . INTER_LINEAR ) if norm : img_norm = ( img_norm - [ meanB , meanG , meanR ]) / std img_norm = img_norm . astype ( 'float32' ) else : img_norm = np . round ( img_norm ) . astype ( 'uint8' ) if rgb : img_norm = cv2 . cvtColor ( img_norm , cv2 . COLOR_BGR2RGB ) if nchw : img_norm = np . transpose ( img_norm , axes = ( 2 , 0 , 1 )) return np . expand_dims ( img_norm , 0 ) def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm ) 1.4. training_input_formats\u548cinput_formats\u5747\u4e3aRAWDATA_S16_NHWC\u6216\u8005\u5747\u4e3aRAWDATA_F32_NHWC \u00b6 PC\u4e0a\u8f6c\u6362\u6a21\u578b\u548csimulator\u6a21\u578b\u793a\u4f8b\u7684preprocess.py\u5982\u4e0b\u3002 \u5728PC\u4e0a \u5f53input_config.ini\u4e2d\u7684training_input_formats\u548cinput_formats\u90fd\u586b\u5199RAWDATA_S16_NHWC\u65f6\uff0c \u6b64\u65f6input_config.ini\u4e2dmean_red\u3001mean_green\u3001mean_blue\u548cstd_value\u4e0d\u4f1a\u518d\u5728\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u4e2d\u751f\u6548\uff0c \u6240\u6709\u524d\u5904\u7406\u8fc7\u7a0b\u90fd\u5c06\u5728\u8f93\u5165\u6a21\u578b\u524d\u5b8c\u6210\u3002mean_red\u3001mean_green\u3001mean_blue\u548cstd_value\u4e0d\u8981\u586b\u5199\u3002 \u6d6e\u70b9\u6a21\u578b\u8fd0\u884c\u65f6\uff0c\u4f7f\u7528\u65b9\u6cd5\u4e0e\u8fd0\u884c\u56fe\u7247\u8f93\u5165\u7684\u6a21\u578b\u76f8\u540c\u3002\u4f7f\u7528simulator.py\u8fd0\u884c\u5b9a\u70b9\u6a21\u578b\u65f6\uff0c\u524d\u5904\u7406\u65b9\u6cd5\u5e94\u4e0e\u6d6e\u70b9\u524d\u5904\u7406\u6a21\u578b\u4fdd\u6301\u4e00\u81f4\uff0c \u4ecd\u7136\u8f93\u5165norm=True\u65f6\u7684\u65b9\u6cd5\uff0c\u6240\u4ee5RAWDATA_S16_NHWC\u7684\u7f51\u7edc\u524d\u5904\u7406Python\u6587\u4ef6\u7f16\u5199\u65f6norm\u4e3aTrue\u548cFalse\u7684\u5b9e\u73b0\u90fd\u5e94\u6309\u7167norm\u4e3aTrue\u65f6\u7f16\u5199\u3002 simulator.py\u4f1a\u8bfb\u5165\u539f\u6d6e\u70b9\u6570\u636e\uff0c\u8fdb\u884c\u53cd\u91cf\u5316\u548c\u5bf9\u9f50\u6392\u5217\u540e\u8f93\u5165\u7ed9\u5b9a\u70b9\u6a21\u578b\u3002 \u5f53input_config.ini\u4e2d\u7684training_input_formats\u548cinput_formats\u90fd\u586b\u5199RAWDATA_F32_NHWC\u65f6\uff0csimulator.py\u4f1a\u8bfb\u5165\u539f\u6d6e\u70b9\u6570\u636e\uff0c\u7531\u6a21\u578b\u5185\u90e8\u7684align\u7b97\u5b50\u81ea\u52a8\u5bf9\u9f50\u6570\u636e\uff0c\u4e0d\u9700\u8981\u4eba\u4e3a\u64cd\u4f5c\u3002 \u5728\u5f00\u53d1\u677f\u4e0a \u5728\u677f\u4e0a\u8fd0\u884cRAWDATA_S16_NHWC\u7684\u7f51\u7edc\u65f6\uff0c\u4e5f\u9700\u8981\u5b8c\u6210\u8f93\u5165\u6570\u636e\u7684\u5b9a\u70b9\u5316\u548c\u5bf9\u9f50\u6392\u5217\u8fc7\u7a0b\u3002\u5b9a\u70b9\u5316\u548c\u5bf9\u9f50\u6392\u5217\u8fc7\u7a0b\u9700\u8981\u81ea\u884c\u5b8c\u6210\u3002 \u5728\u677f\u4e0a\u8fd0\u884cRAWDATA_F32_NHWC\u7684\u7f51\u7edc\u65f6\uff0c\u4e0d\u9700\u8981\u8f93\u5165\u6570\u636e\u7684\u5b9a\u70b9\u5316\u548c\u5bf9\u9f50\u6392\u5217\u8fc7\u7a0b\u3002\u7531\u6a21\u578b\u5185\u90e8\u7684align\u7b97\u5b50\u81ea\u52a8\u5bf9\u9f50\u6570\u636e\u3002\u5177\u4f53\u8be6\u89c1\u3002 9.2 RAWDATA_F32_NHWC\u6a21\u578b\u8f6c\u6362\u8981\u70b9 training_input_formats input_formats \u677f\u4e0a\u8fd0\u884c\u65f6\u6570\u636e\u5bf9\u9f50\u65b9\u5f0f RAWDATA_F32_NHWC RAWDATA_F32_NHWC \u4e0d\u7528\u5bf9\u9f50 RAWDATA_S16_NHWC RAWDATA_S16_NHWC \u6700\u540e1\u4e2a\u7ef4\u5ea6 = ALIGN_UP(\u6700\u540e1\u4e2a\u7ef4\u5ea6, 8 ) import cv2 import numpy as np def get_image ( img_path , resizeH = 224 , resizeW = 224 , norm = True , rgb = False , nchw = False ): img = cv2 . imread ( img_path ) if img is None : raise FileNotFoundError ( 'No such image: {} ' . format ( img_path )) img_norm = cv2 . resize ( img , ( resizeW , resizeH ), interpolation = cv2 . INTER_LINEAR ) img_norm = img_norm . astype ( 'float32' ) if rgb : img_norm = cv2 . cvtColor ( img_norm , cv2 . COLOR_BGR2RGB ) if nchw : img_norm = np . transpose ( img_norm , axes = ( 2 , 0 , 1 )) return np . expand_dims ( img_norm , 0 ) def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm ) 2. \u6a21\u578b\u6027\u80fd\u4f18\u5316\u89c4\u5219 \u00b6 \u5bf9\u4e8e\u5377\u79ef\u7684\u6027\u80fd\u4f18\u5316 1. kernel size 3x3 \u6700\u597d\uff0c\u7279\u522b\u5bf9\u4e8e\u9996\u5c42\u3002 2. kernel size 1x1 \u7684\u65f6\u5019\uff0cinput tensor \u6700\u5185\u7ef4\u5ea6shape\u503c\u5bf9\u9f50\u523016 \u6700\u597d\u3002 \u5bf9\u4e8eDMA\u7b97\u5b50 1. concatenation\u7b97\u5b50\u6bd4pack\u7b97\u5b50\u6027\u80fd\u66f4\u597d\u3002 2. split\u6bd4slice\u7b97\u5b50\u6027\u80fd\u66f4\u597d\u3002 3. \u5c3d\u91cf\u51cf\u5c11\u5728\u6700\u5185\u7ef4\u4e0a\u505atranspose\u3002 4. \u5355\u53e3elementwise \u7b97\u5b50\u7684const \u64cd\u4f5c\u6570\u6700\u597d\u662f\u53f3\u64cd\u4f5c\u6570\uff0c\u5373input[1]\u3002 \u7efc\u5408\u90e8\u5206 1. Tensor\u7684\u7ef4\u5ea6\u4e3a4\u6700\u597d\u3002 2. Tensor\u6700\u5185\u7ef4\u7684shape\u503c\u5bf9\u9f50\u523032\u6700\u597d\u3002 3. Softmax\u6700\u597d\u53ea\u5bf9\u6700\u5185\u7ef4\u5ea6\u64cd\u4f5c\u3002 4. ReduceMax\u3001ReduceMin\u3001ReduceSum\u6700\u597d\u574d\u584c\u7684\u7eac\u5ea6\u662f\u76f8\u90bb\u7684\u3002 \u5408\u5e76\u89c4\u5219 1. Pad + Conv2D/DepthwiseConv\uff0cpad\u4f1a\u88ab\u5408\u5e76\u5230\u5377\u79ef\u4e2d\uff0cpad\u51e0\u4e4e\u4e0d\u5360\u7528\u65f6\u95f4\u3002 2. Conv2D/DepthwiseConv + \u5355\u53e3Mul + \u5355\u53e3Add\uff0cMul\u548cAdd\u7b97\u5b50\u4f1a\u548c\u5377\u79ef\u4e00\u8d77\u8fd0\u7b97\u3002\u6211\u4eec\u4f1a\u628aBatchNorm\u8f6c\u6362\u6210Mul+Add,\u6240\u4ee5Conv2D/DepthwiseConv + BatchNorm\u53ef\u4ee5\u5408\u5e76\u3002 3. Pad + avgPooling \u53ef\u4ee5\u5408\u5e76\u3002 4. \u8fde\u7eed\u7684transpose\u4f1a\u81ea\u52a8\u5408\u5e76\u4e3a\u4e00\u4e2a\u3002 5. \u6240\u6709reshape\u7b97\u5b50\u90fd\u4f1a\u88ab\u8df3\u8fc7\u3002 6. \u8fde\u7eed\u7684\u5355\u53e3\u7684\u76f8\u540celementwise\u7b97\u5b50\u4f1a\u5408\u5e76\u3002 7. \u5355\u72ec\u7684\u5355\u53e3mul\u548c\u5355\u53e3add\uff0c\u4f1a\u53d8\u6210MultAdd\u5355\u4e00\u7684\u7b97\u5b50\u3002 \u6ce8\u610f\uff1a\u8fd9\u91cc\u5355\u53e3\u610f\u601d\u4e3a\u4e00\u4e2a\u6570\u636e\u662fconstant\u7684\u60c5\u51b5","title":"Preprocess.py and Input Config.ini Support"},{"location":"module/User_Guide/IPU200M/Preprocess.py_and_Input_Config.ini_Support.html#1-preprocesspy","text":"\u7531\u4e8e\u4e0d\u540c\u7f51\u7edc\u6a21\u578b\u7684\u524d\u5904\u7406\u65b9\u5f0f\u4e0d\u5c3d\u76f8\u540c\uff0c\u4e3a\u4e86\u80fd\u591f\u5728\u8f6c\u6362\u7f51\u7edc\u65f6\u5c3d\u53ef\u80fd\u51cf\u5c0f\u7cbe\u5ea6\u7684\u4e22\u5931\uff0c\u5e94\u8be5\u4f7f\u7528\u4e0e\u8bad\u7ec3\u76f8\u540c\u7684\u56fe\u7247\u524d\u5904\u7406\u65b9\u5f0f\uff0c\u6bcf\u79cd\u524d\u5904\u7406\u65b9\u5f0f\u9700\u72ec\u7acb\u7f16\u5199python\u6587\u4ef6\u3002 \u7f16\u5199\u56fe\u7247\u524d\u5904\u7406\u6587\u4ef6\u65f6\uff0c\u7f16\u5199\u56fe\u7247\u5904\u7406\u51fd\u6570\uff08\u51fd\u6570\u540d\u79f0\u4e0d\u9650\uff09\uff0c\u8fd4\u56denp.array \u683c\u5f0f\u7684\u56fe\u7247\u6570\u636e\uff0c\u51fd\u6570\u5fc5\u987b\u5305\u542b2\u4e2a\u53c2\u6570\uff1a \u56fe\u7247\u8def\u5f84 \u5f52\u4e00\u5316\u6807\u8bb0\uff08norm=True\uff09 \u5f52\u4e00\u5316\u6807\u8bb0\u662f\u4e3a\u4e86\u533a\u5206\u7f51\u7edc\u6a21\u578b\u662f\u5426\u662f\u6d6e\u70b9\u6a21\u578b\u3002\u56e0\u4e3a\u5728\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u9636\u6bb5\uff0c\u56fe\u7247\u7684\u5f52\u4e00\u5316\u9700\u8981\u5728\u9001\u8fdb\u7f51\u7edc\u524d\u5904\u7406\u597d\u3002\u4f46\u662f\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u548c\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u5df2\u7ecf\u5305\u542b\u4e86input_config.ini\u6587\u4ef6\u7684\u8bbe\u7f6e\u4fe1\u606f\uff0c\u80fd\u591f\u5c06\u56fe\u7247\u6570\u636e\u81ea\u884c\u505a\u5f52\u4e00\u5316\u5904\u7406\uff0c\u56e0\u6b64\u9001\u8fdb\u7f51\u7edc\u6a21\u578b\u7684\u6570\u636e\u4e0d\u9700\u8981\u505a\u5f52\u4e00\u5316\uff0c\u8fd9\u4e0e\u5728SigmaStar\u786c\u4ef6\u4e0a\u5904\u7406\u65b9\u5f0f\u76f8\u540c\u3002 \u6839\u636einput_config.ini\u6587\u4ef6\u4e2dtraining_input_formats \u548c input_formats\u8bbe\u7f6e\u7684\u4e0d\u540c\uff0c\u4e0b\u9762\u4e3e\u4f8b\u524d\u5904\u7406\u6587\u4ef6\u7684\u5199\u6cd5\u3002","title":"1. \u524d\u5904\u7406\u6587\u4ef6Preprocess.py"},{"location":"module/User_Guide/IPU200M/Preprocess.py_and_Input_Config.ini_Support.html#11-training_input_formatsinput_formatsrgbbgr","text":"PC\u4e0a\u8f6c\u6362\u6a21\u578b\u548csimulator\u6a21\u578b\u793a\u4f8b\u7684preprocess.py\u5982\u4e0b\u3002 \u5982\u679c\u5728\u6bcf\u4e2achannel\u4e0a\u6709\u4e0d\u540c\u7684std\u503c\uff0c\u9700\u8981\u5728\u5bf9\u5e94channel\u4e0a\u9664\u4ee5std\uff0c\u5982 std= [57.375, 57.12, 58.395]\u3002 \u540c\u65f6\uff0cinput_config.ini\u6587\u4ef6\u4e2dstd_value\u6bcf\u4e2a\u901a\u9053\u5bf9\u5e94\u7684std_value\u503c\uff0c\u4ee5\u82f1\u6587\u5192\u53f7( : )\u5206\u9694\uff0c\u987a\u5e8f\u4e3aRGB\u3002 training_input_formats input_formats \u677f\u4e0a\u8fd0\u884c\u65f6\u6570\u636e\u5bf9\u9f50\u65b9\u5f0f RGB/BGR RGB/BGR \u4e0d\u7528\u5bf9\u9f50 RGB/BGR RGBA/BGRA W = ALIGN_UP(W * 4, xrgb_h_pitch_alignment ) / 4 import cv2 import numpy as np def get_image ( img_path , resizeH = 224 , resizeW = 224 , norm = True , meanB = 103.53 , meanG = 116.28 , meanR = 123.68 , std = 57.375 , rgb = False , nchw = False ): img = cv2 . imread ( img_path ) if img is None : raise FileNotFoundError ( 'No such image: {} ' . format ( img_path )) img_norm = cv2 . resize ( img , ( resizeW , resizeH ), interpolation = cv2 . INTER_LINEAR ) if norm : img_norm = ( img_norm - [ meanB , meanG , meanR ]) / std img_norm = img_norm . astype ( 'float32' ) else : img_norm = np . round ( img_norm ) . astype ( 'uint8' ) if rgb : img_norm = cv2 . cvtColor ( img_norm , cv2 . COLOR_BGR2RGB ) if nchw : img_norm = np . transpose ( img_norm , axes = ( 2 , 0 , 1 )) return np . expand_dims ( img_norm , 0 ) def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm )","title":"1.1. training_input_formats\u548cinput_formats\u5747\u4e3aRGB\u6216\u8005\u5747\u4e3aBGR"},{"location":"module/User_Guide/IPU200M/Preprocess.py_and_Input_Config.ini_Support.html#12-training_input_formatsrgbinput_formatsgray","text":"PC\u4e0a\u8f6c\u6362\u6a21\u578b\u548csimulator\u6a21\u578b\u793a\u4f8b\u7684preprocess.py\u5982\u4e0b\u3002 \u7070\u5ea6\u6a21\u578b\uff0c\u6307\u8f93\u5165\u662f\u5355\u901a\u9053\u56fe\u7247\u7684\u6a21\u578b\uff0c\u5373\u8f93\u5165C\u7ef4\u5ea6\u4e0a\u4e3a1\u7684\u6a21\u578b\u3002input_config.ini\u7070\u5ea6\u56fe\u7247\u8bf7\u6309\u5982\u4e0b\u65b9\u5f0f\u914d\u7f6e\uff1atraining_input_formats=RGB;input_formats=GRAY; training_input_formats input_formats \u677f\u4e0a\u8fd0\u884c\u65f6\u6570\u636e\u5bf9\u9f50\u65b9\u5f0f RGB/BGR GRAY H = ALIGN_UP(H, yuv420_v_pitch_alignment ) W = ALIGN_UP(W, yuv420_h_pitch_alignment ) import cv2 import numpy as np def get_image ( img_path , resizeH = 28 , resizeW = 28 , norm = True , meanR = 33.318 , std = 1.0 , rgb = False , nchw = False ): img = cv2 . imread ( img_path , flags =- 1 ) if img is None : raise FileNotFoundError ( 'No such image: {} ' . format ( img_path )) try : img_dim = img . shape [ 2 ] except IndexError : img_dim = 1 if img_dim == 3 : img = cv2 . cvtColor ( img , cv2 . COLOR_BGR2GRAY ) elif img_dim == 4 : img = cv2 . cvtColor ( img , cv2 . COLOR_BGRA2GRAY ) img_norm = cv2 . resize ( img , ( resizeW , resizeH ), interpolation = cv2 . INTER_LINEAR ) if norm : img_norm = ( img_norm - meanR ) / std img_norm = np . expand_dims ( img_norm , axis = 2 ) dummy = np . zeros (( 28 , 28 , 2 )) img_norm = np . concatenate (( img_norm , dummy ), axis = 2 ) img_norm = img_norm . astype ( 'float32' ) else : img_norm = np . expand_dims ( img_norm , 2 ) img_norm = np . round ( img_norm ) . astype ( 'uint8' ) if rgb : img_norm = cv2 . cvtColor ( img_norm , cv2 . COLOR_BGR2RGB ) if nchw : # NCHW img_norm = np . transpose ( img_norm , axes = ( 2 , 0 , 1 )) return np . expand_dims ( img_norm , 0 ) def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm )","title":"1.2. training_input_formats\u4e3aRGB\u548cinput_formats\u4e3aGRAY"},{"location":"module/User_Guide/IPU200M/Preprocess.py_and_Input_Config.ini_Support.html#13-training_input_formatsrgbbgrinput_formatsyuv_nv12","text":"PC\u4e0a\u8f6c\u6362\u6a21\u578b\u548csimulator\u6a21\u578b\u793a\u4f8b\u7684preprocess.py\u5982\u4e0b\u3002 training_input_formats input_formats \u677f\u4e0a\u8fd0\u884c\u65f6\u6570\u636e\u5bf9\u9f50\u65b9\u5f0f RGB/BGR YUV_NV12 H = ALIGN_UP(H, yuv420_v_pitch_alignment ) W = ALIGN_UP(W, yuv420_h_pitch_alignment ) import cv2 import numpy as np def get_image ( img_path , resizeH = 224 , resizeW = 224 , norm = True , meanB = 127.5 , meanG = 127.5 , meanR = 127.5 , std = 128.0 , rgb = False , nchw = False ): img = cv2 . imread ( img_path ) if img is None : raise FileNotFoundError ( 'No such image: {} ' . format ( img_path )) img_norm = cv2 . resize ( img , ( resizeW , resizeH ), interpolation = cv2 . INTER_LINEAR ) if norm : img_norm = ( img_norm - [ meanB , meanG , meanR ]) / std img_norm = img_norm . astype ( 'float32' ) else : img_norm = np . round ( img_norm ) . astype ( 'uint8' ) if rgb : img_norm = cv2 . cvtColor ( img_norm , cv2 . COLOR_BGR2RGB ) if nchw : img_norm = np . transpose ( img_norm , axes = ( 2 , 0 , 1 )) return np . expand_dims ( img_norm , 0 ) def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm )","title":"1.3. training_input_formats\u4e3aRGB\u6216BGR\u548cinput_formats\u4e3aYUV_NV12"},{"location":"module/User_Guide/IPU200M/Preprocess.py_and_Input_Config.ini_Support.html#14-training_input_formatsinput_formatsrawdata_s16_nhwcrawdata_f32_nhwc","text":"PC\u4e0a\u8f6c\u6362\u6a21\u578b\u548csimulator\u6a21\u578b\u793a\u4f8b\u7684preprocess.py\u5982\u4e0b\u3002 \u5728PC\u4e0a \u5f53input_config.ini\u4e2d\u7684training_input_formats\u548cinput_formats\u90fd\u586b\u5199RAWDATA_S16_NHWC\u65f6\uff0c \u6b64\u65f6input_config.ini\u4e2dmean_red\u3001mean_green\u3001mean_blue\u548cstd_value\u4e0d\u4f1a\u518d\u5728\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u4e2d\u751f\u6548\uff0c \u6240\u6709\u524d\u5904\u7406\u8fc7\u7a0b\u90fd\u5c06\u5728\u8f93\u5165\u6a21\u578b\u524d\u5b8c\u6210\u3002mean_red\u3001mean_green\u3001mean_blue\u548cstd_value\u4e0d\u8981\u586b\u5199\u3002 \u6d6e\u70b9\u6a21\u578b\u8fd0\u884c\u65f6\uff0c\u4f7f\u7528\u65b9\u6cd5\u4e0e\u8fd0\u884c\u56fe\u7247\u8f93\u5165\u7684\u6a21\u578b\u76f8\u540c\u3002\u4f7f\u7528simulator.py\u8fd0\u884c\u5b9a\u70b9\u6a21\u578b\u65f6\uff0c\u524d\u5904\u7406\u65b9\u6cd5\u5e94\u4e0e\u6d6e\u70b9\u524d\u5904\u7406\u6a21\u578b\u4fdd\u6301\u4e00\u81f4\uff0c \u4ecd\u7136\u8f93\u5165norm=True\u65f6\u7684\u65b9\u6cd5\uff0c\u6240\u4ee5RAWDATA_S16_NHWC\u7684\u7f51\u7edc\u524d\u5904\u7406Python\u6587\u4ef6\u7f16\u5199\u65f6norm\u4e3aTrue\u548cFalse\u7684\u5b9e\u73b0\u90fd\u5e94\u6309\u7167norm\u4e3aTrue\u65f6\u7f16\u5199\u3002 simulator.py\u4f1a\u8bfb\u5165\u539f\u6d6e\u70b9\u6570\u636e\uff0c\u8fdb\u884c\u53cd\u91cf\u5316\u548c\u5bf9\u9f50\u6392\u5217\u540e\u8f93\u5165\u7ed9\u5b9a\u70b9\u6a21\u578b\u3002 \u5f53input_config.ini\u4e2d\u7684training_input_formats\u548cinput_formats\u90fd\u586b\u5199RAWDATA_F32_NHWC\u65f6\uff0csimulator.py\u4f1a\u8bfb\u5165\u539f\u6d6e\u70b9\u6570\u636e\uff0c\u7531\u6a21\u578b\u5185\u90e8\u7684align\u7b97\u5b50\u81ea\u52a8\u5bf9\u9f50\u6570\u636e\uff0c\u4e0d\u9700\u8981\u4eba\u4e3a\u64cd\u4f5c\u3002 \u5728\u5f00\u53d1\u677f\u4e0a \u5728\u677f\u4e0a\u8fd0\u884cRAWDATA_S16_NHWC\u7684\u7f51\u7edc\u65f6\uff0c\u4e5f\u9700\u8981\u5b8c\u6210\u8f93\u5165\u6570\u636e\u7684\u5b9a\u70b9\u5316\u548c\u5bf9\u9f50\u6392\u5217\u8fc7\u7a0b\u3002\u5b9a\u70b9\u5316\u548c\u5bf9\u9f50\u6392\u5217\u8fc7\u7a0b\u9700\u8981\u81ea\u884c\u5b8c\u6210\u3002 \u5728\u677f\u4e0a\u8fd0\u884cRAWDATA_F32_NHWC\u7684\u7f51\u7edc\u65f6\uff0c\u4e0d\u9700\u8981\u8f93\u5165\u6570\u636e\u7684\u5b9a\u70b9\u5316\u548c\u5bf9\u9f50\u6392\u5217\u8fc7\u7a0b\u3002\u7531\u6a21\u578b\u5185\u90e8\u7684align\u7b97\u5b50\u81ea\u52a8\u5bf9\u9f50\u6570\u636e\u3002\u5177\u4f53\u8be6\u89c1\u3002 9.2 RAWDATA_F32_NHWC\u6a21\u578b\u8f6c\u6362\u8981\u70b9 training_input_formats input_formats \u677f\u4e0a\u8fd0\u884c\u65f6\u6570\u636e\u5bf9\u9f50\u65b9\u5f0f RAWDATA_F32_NHWC RAWDATA_F32_NHWC \u4e0d\u7528\u5bf9\u9f50 RAWDATA_S16_NHWC RAWDATA_S16_NHWC \u6700\u540e1\u4e2a\u7ef4\u5ea6 = ALIGN_UP(\u6700\u540e1\u4e2a\u7ef4\u5ea6, 8 ) import cv2 import numpy as np def get_image ( img_path , resizeH = 224 , resizeW = 224 , norm = True , rgb = False , nchw = False ): img = cv2 . imread ( img_path ) if img is None : raise FileNotFoundError ( 'No such image: {} ' . format ( img_path )) img_norm = cv2 . resize ( img , ( resizeW , resizeH ), interpolation = cv2 . INTER_LINEAR ) img_norm = img_norm . astype ( 'float32' ) if rgb : img_norm = cv2 . cvtColor ( img_norm , cv2 . COLOR_BGR2RGB ) if nchw : img_norm = np . transpose ( img_norm , axes = ( 2 , 0 , 1 )) return np . expand_dims ( img_norm , 0 ) def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm )","title":"1.4. training_input_formats\u548cinput_formats\u5747\u4e3aRAWDATA_S16_NHWC\u6216\u8005\u5747\u4e3aRAWDATA_F32_NHWC"},{"location":"module/User_Guide/IPU200M/Preprocess.py_and_Input_Config.ini_Support.html#2","text":"\u5bf9\u4e8e\u5377\u79ef\u7684\u6027\u80fd\u4f18\u5316 1. kernel size 3x3 \u6700\u597d\uff0c\u7279\u522b\u5bf9\u4e8e\u9996\u5c42\u3002 2. kernel size 1x1 \u7684\u65f6\u5019\uff0cinput tensor \u6700\u5185\u7ef4\u5ea6shape\u503c\u5bf9\u9f50\u523016 \u6700\u597d\u3002 \u5bf9\u4e8eDMA\u7b97\u5b50 1. concatenation\u7b97\u5b50\u6bd4pack\u7b97\u5b50\u6027\u80fd\u66f4\u597d\u3002 2. split\u6bd4slice\u7b97\u5b50\u6027\u80fd\u66f4\u597d\u3002 3. \u5c3d\u91cf\u51cf\u5c11\u5728\u6700\u5185\u7ef4\u4e0a\u505atranspose\u3002 4. \u5355\u53e3elementwise \u7b97\u5b50\u7684const \u64cd\u4f5c\u6570\u6700\u597d\u662f\u53f3\u64cd\u4f5c\u6570\uff0c\u5373input[1]\u3002 \u7efc\u5408\u90e8\u5206 1. Tensor\u7684\u7ef4\u5ea6\u4e3a4\u6700\u597d\u3002 2. Tensor\u6700\u5185\u7ef4\u7684shape\u503c\u5bf9\u9f50\u523032\u6700\u597d\u3002 3. Softmax\u6700\u597d\u53ea\u5bf9\u6700\u5185\u7ef4\u5ea6\u64cd\u4f5c\u3002 4. ReduceMax\u3001ReduceMin\u3001ReduceSum\u6700\u597d\u574d\u584c\u7684\u7eac\u5ea6\u662f\u76f8\u90bb\u7684\u3002 \u5408\u5e76\u89c4\u5219 1. Pad + Conv2D/DepthwiseConv\uff0cpad\u4f1a\u88ab\u5408\u5e76\u5230\u5377\u79ef\u4e2d\uff0cpad\u51e0\u4e4e\u4e0d\u5360\u7528\u65f6\u95f4\u3002 2. Conv2D/DepthwiseConv + \u5355\u53e3Mul + \u5355\u53e3Add\uff0cMul\u548cAdd\u7b97\u5b50\u4f1a\u548c\u5377\u79ef\u4e00\u8d77\u8fd0\u7b97\u3002\u6211\u4eec\u4f1a\u628aBatchNorm\u8f6c\u6362\u6210Mul+Add,\u6240\u4ee5Conv2D/DepthwiseConv + BatchNorm\u53ef\u4ee5\u5408\u5e76\u3002 3. Pad + avgPooling \u53ef\u4ee5\u5408\u5e76\u3002 4. \u8fde\u7eed\u7684transpose\u4f1a\u81ea\u52a8\u5408\u5e76\u4e3a\u4e00\u4e2a\u3002 5. \u6240\u6709reshape\u7b97\u5b50\u90fd\u4f1a\u88ab\u8df3\u8fc7\u3002 6. \u8fde\u7eed\u7684\u5355\u53e3\u7684\u76f8\u540celementwise\u7b97\u5b50\u4f1a\u5408\u5e76\u3002 7. \u5355\u72ec\u7684\u5355\u53e3mul\u548c\u5355\u53e3add\uff0c\u4f1a\u53d8\u6210MultAdd\u5355\u4e00\u7684\u7b97\u5b50\u3002 \u6ce8\u610f\uff1a\u8fd9\u91cc\u5355\u53e3\u610f\u601d\u4e3a\u4e00\u4e2a\u6570\u636e\u662fconstant\u7684\u60c5\u51b5","title":"2. \u6a21\u578b\u6027\u80fd\u4f18\u5316\u89c4\u5219"},{"location":"module/User_Guide/IPU200M/Simulate.html","text":"5.1. \u4f7f\u7528\u65b9\u6cd5 \u00b6 Simulator\u5de5\u5177\u7684\u4f4d\u7f6e\u5728 SGS_IPU_SDK/Scripts/calibrator/simulator.py \u3002 \u8be5\u5de5\u5177\u5177\u6709\u4ee5\u4e0b\u529f\u80fd\uff1a \u5bf9\u5206\u7c7b\u7f51\u7edc\u6570\u636e\u96c6\u9a8c\u8bc1\uff1b \u5bf9\u68c0\u6d4b\u7f51\u7edc\u6570\u636e\u96c6\u9a8c\u8bc1\uff08\u652f\u6301COCO\u6570\u636e\u96c6\uff09\uff1b \u5bf9\u5355\u5f20\u56fe\u7247\u9884\u6d4b\uff1b \u7ed8\u5236\u5355\u5f20\u56fe\u7247\u76ee\u6807\u68c0\u6d4b\u7ed3\u679c\uff1b \u5728SGS_IPU_SDK \u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK source cfg_env.sh \u8fdb\u5165\u5230\u8be5\u5de5\u5177\u76ee\u5f55\uff0c\u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a \u6d4b\u8bd5ILSVRC\u6570\u636e\u96c6\uff0c\u5e76\u8fd4\u56de\u6a21\u578b\u7cbe\u5ea6\u7ed3\u679c\uff1a python3 simulator.py \\ -i ~/SGS_Models/resource/classify/ilsvrc2012_val_set100/ \\ -m ~/SGS_Models/tensorflow/mobilenet_v2/mobilenet_v2_float.sim \\ -l ~/SGS_Models/resource/classify/tensorflow_labels.txt \\ -c Classification \\ -t Float \\ -n mobilenet_v2 \\ --num_process 20 \u6216\u8005\u53ef\u4ee5\u4f7f\u7528\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\uff1a python3 simulator.py \\ -i ~/SGS_Models/resource/classify/ilsvrc2012_val_set100/file.list \\ -m ~/SGS_Models/tensorflow/mobilenet_v2/mobilenet_v2_float.sim \\ -l ~/SGS_Models/resource/classify/tensorflow_labels.txt \\ -c Classification \\ -t Float \\ -n mobilenet_v2 \\ --num_process 20 \u6d4b\u8bd5COCO2017\u6570\u636e\u96c6\uff0c\u5e76\u8fd4\u56de\u6a21\u578b\u68c0\u6d4b\u7ed3\u679c\uff1a python3 simulator.py \\ -i ~/SGS_Models/resource/detection/coco2017_val_set100 \\ -m ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1_float.sim \\ -l ~/SGS_Models/resource/detection/coco2017_val_set100.json \\ -c Detection \\ -t Float \\ -n ssd_mobilenet_v1 \\ --num_process 10 \u6216\u8005\u53ef\u4ee5\u4f7f\u7528\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\uff1a python3 simulator.py \\ -i ~/SGS_Models/resource/detection/coco2017_val_set100/file.list \\ -m ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1_float.sim \\ -l ~/SGS_Models/resource/detection/coco2017_val_set100.json \\ -c Detection \\ -t Float \\ -n ssd_mobilenet_v1 \\ --num_process 10 \u6d4b\u8bd5\u5355\u5f20\u56fe\u7247\uff0c\u5e76\u5c06\u68c0\u6d4b\u7ed3\u679c\u7ed8\u5236\u5728\u56fe\u7247\u4e0a\uff0c\u4fdd\u5b58\u5230 ./results/ \u6587\u4ef6\u5939\u4e0b\uff1a python3 simulator.py \\ -i ~/SGS_Models/resource/detection/coco2017_val_set100/000000567877.jpg \\ -m ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1_float.sim \\ -c Detection \\ -t Float \\ -n ssd_mobilenet_v1 \\ --draw_result ./results \u5bf9\u8be5\u5de5\u5177\u53c2\u6570\u7684\u5177\u4f53\u8bf4\u660e\u5982\u4e0b\u3002 5.1.1 \u5fc5\u9009\u53c2\u6570 \u00b6 -i , --image : \u56fe\u7247\u6587\u4ef6 / \u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84 / \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u3002 -m , --model : \u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 -c , --category : \u6a21\u578b\u7684\u7c7b\u522b\uff0c\u4e3b\u8981\u6709Classification / Detection / Unknown\u3002 Classification : \u6a21\u578b\u67091\u4e2a\u8f93\u51fa\uff0c\u4f1a\u6839\u636e\u8f93\u51fa\u6392\u5e8f\u8f93\u51fa\u5206\u6570\u7531\u9ad8\u81f3\u4f4e\u7684\u524d5\u4e2a\u3002 Detection : \u6a21\u578b\u67094\u4e2a\u8f93\u51fa\uff0c\u4f1a\u6839\u636e\u8f93\u51fa\u8f6c\u6362\u4e3a\u8f93\u5165\u56fe\u7247\u7684bbox\u4f4d\u7f6e\u4ee5\u53ca\u7c7b\u522b\u3002\u53ea\u652f\u6301SigmaStar\u540e\u5904\u7406\u7b97\u5b50 [SigmaStar\u540e\u5904\u7406\u6a21\u5757]\u3002\u5176\u4ed6\u540e\u5904\u7406\u8bf7\u4f7f\u7528Unknown\u3002 Unknown : \u6a21\u578b\u8f93\u51fa\u4e0d\u5c5e\u4e8e\u4e0a\u8ff0\u4e24\u79cd\u7c7b\u578b\uff0c\u4f1a\u8f93\u51fa\u5168\u90e8\u7684Tensor\u6570\u503c\u3002 -t , --type : \u6a21\u578b\u7684\u6570\u636e\u7c7b\u578b\uff1a Float : \u6d6e\u70b9\u6a21\u578b\u3002 Fixed : \u5b9a\u70b9\u5728\u7ebf\u6a21\u578b\u3002 Offline : \u5b9a\u70b9\u79bb\u7ebf\u6a21\u578b\u3002 Please Note: \u4e0d\u52a0-n/--preprocess\u53c2\u6570\u65f6\uff0c-i/--image\u4e0d\u80fd\u7ed9\u56fe\u7247\u6216\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\u3002 -i/--image\u53c2\u6570\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\u65f6\uff1a \u7f51\u7edc\u6a21\u578b\u4e3a\u5355\u8f93\u5165\u65f6\uff1a ~/SGS_IPU_SDK/image_test/2007000364.jpg ~/SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp ... \u7f51\u7edc\u6a21\u578b\u4e3a\u591a\u8f93\u5165\u65f6\uff1a ~/SGS_IPU_SDK/image_test/2007000364.jpg,~/SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp ~/SGS_IPU_SDK/image_test/2007000365.jpg,~/SGS_IPU_SDK/image_test/ILSVRC2012_test_00000003.bmp ... 5.1.2 \u53ef\u9009\u53c2\u6570 \u00b6 -l , --label : \u6570\u636e\u96c6\u7684\u6807\u7b7e\u6587\u4ef6\u8def\u5f84 / \u56fe\u7247\u6587\u5b57\u63cf\u8ff0\u7684\u6807\u7b7e\u3002 -n , --preprocess : \u6a21\u578b\u540d\u79f0\uff0c\u4e0e\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\u76f8\u5173\uff0c\u8be6\u89c1 [3.2. \u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5]\u3002 \u4e5f\u53ef\u4ee5\u5b8c\u6210\u524d\u5904\u7406\u6587\u4ef6\u914d\u7f6e\u540e\uff0c\u7ed9\u5b9a\u524d\u5904\u7406\u6587\u4ef6\u8def\u5f84\u3002\u4e0d\u52a0\u8be5\u53c2\u6570\uff0c\u56fe\u7247\u53c2\u6570\u9700\u8981\u7ed9\u539f\u59cb\u6570\u636e\uff0c\u53ef\u91c7\u7528--save_input\u4fdd\u5b58\u56fe\u7247\u6570\u636e\u540e\uff0c\u6839\u636e\u8be5\u683c\u5f0f\u5236\u5b9a\u5176\u4ed6\u7684\u539f\u59cb\u6570\u636e\u3002 \u6ce8\u610f\u4e8b\u9879 \u82e5\u6a21\u578b\u4e3a \u591a\u8f93\u5165 \u65f6\uff0c -n,--preprocess \u53c2\u6570\u7528\u6cd5\u9700\u8981\u591a\u4e2a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4f8b\u5982 -n preprocess1.py,preprocess2.py \u6216\u8005 --preprocess preprocess1.py,preprocess2.py --tool : sgs_simulator\u6587\u4ef6\u8def\u5f84\u3002 --skip_garbage : Fixed\u548cOffline\u6a21\u578b\u8f93\u51fa\u7ed3\u679c\u8df3\u8fc7\u65e0\u7528\u6570\u636e\u3002 --dump_rawdata : \u4fdd\u5b58Fixed\u548cOffline\u6a21\u578b\u8f93\u5165\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u6587\u4ef6\u540d\u4e3a\u56fe\u7247\u540d + .bin\uff0c\u4fdd\u5b58\u5728\u5f53\u524d\u8def\u5f84\u3002 --num_process : \u8fdb\u7a0b\u6570\uff0c\u8fd0\u884c\u540c\u65f6\u8fd0\u884c\u7684\u8fdb\u7a0b\u6570\u3002\uff08\u53ef\u9009\u53c2\u6570\uff0c\u4e0d\u52a0\u8be5\u53c2\u6570\u9ed8\u8ba4\u4e3a\u5355\u7ebf\u7a0b\uff09\u9a8c\u8bc1\u6570\u636e\u96c6\u5fc5\u987b\u52a0\u6b64\u53c2\u6570\u4e14\u8fdb\u7a0b\u6570 > 1\u3002 --draw_result : \u7ed8\u5236\u76ee\u6807\u68c0\u6d4b\u7f51\u7edc\u9009\u6846\u7ed3\u679c\uff0c\u53c2\u6570\u4e3a\u7ed3\u679c\u4fdd\u5b58\u6587\u4ef6\u5939\u8def\u5f84\uff08\u6587\u4ef6\u5939\u4e0d\u5b58\u5728\u4f1a\u81ea\u52a8\u521b\u5efa\uff09\u548c\u753b\u6846\u7684\u9608\u503c\uff0c\u4f7f\u7528\u9017\u53f7( , )\u5206\u9694\u4fdd\u5b58\u8def\u5f84\u4e0e\u9608\u503c\u3002\u8f93\u5165\u9608\u503c\u753b\u51fa\u5927\u4e8e\u9608\u503c\u7684\u68c0\u6d4b\u7ed3\u679c\uff0c\u4e0d\u8f93\u5165\u9608\u503c\u5219\u753b\u51fa\u5168\u90e8\u68c0\u6d4b\u7ed3\u679c\u3002 --continue_run : \u63a5\u7740\u4e0a\u6b21\u6570\u636e\u96c6\u5269\u4e0b\u7684\u90e8\u5206\u8fd0\u884c\u3002 --save_input : \u4fdd\u5b58simulator \u524d\u5904\u7406\u540e\u7684\u6587\u4ef6\uff0c\u9ed8\u8ba4\u4e0d\u4fdd\u5b58\u3002\u6587\u4ef6\u4e3a\u6587\u672c\u6587\u4ef6\uff0c\u4f1a\u5728\u8fd0\u884c\u8def\u5f84\u4e0b\u521b\u5efa\u6587\u4ef6\u5939tmp_image\uff0c\u6587\u4ef6\u4fdd\u5b58\u5728 ./tmp_image/imagename \u56fe\u7247\u540d\u3002 5.1.3 \u6ce8\u610f\u4e8b\u9879 \u00b6 simulator\u5de5\u5177\u4f1a\u5bfb\u627e\u7cfb\u7edf\u53d8\u91cf\u4ece\u800c\u83b7\u5f97\u5bf9\u5e94\u9636\u6bb5\u4efb\u52a1\u6240\u9700\u5de5\u5177\u8def\u5f84\uff0c\u56e0\u6b64\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u53c2\u6570-t/--tool\u4e0d\u7528\u6307\u5b9a\u76f8\u5173\u5de5\u5177\u7684\u4f4d\u7f6e\u3002 simulator\u5de5\u5177\u6bcf\u6b21\u8fd0\u884c\u7ed3\u675f\u540e\u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u521b\u5efalog\u76ee\u5f55\uff0clog\u76ee\u5f55\u4e0b\u7684output\u6587\u4ef6\u5939\uff0c\u5b58\u653e\u6a21\u578b\u63a8\u6f14\u7684\u7ed3\u679c\u3002 \u5f53 -i/--image \u7684\u53c2\u6570\u4e3a\u5355\u5f20\u56fe\u7247\u7684\u8def\u5f84\u65f6\uff0csimulator\u53ea\u5bf9\u8be5\u56fe\u7247\u63a8\u6f14\uff1b\u5f53 -i/--image \u7684\u53c2\u6570\u4e3a\u56fe\u7247\u6587\u4ef6\u5939\u7684\u8def\u5f84\u65f6\uff0csimulator\u4f1a\u5bf9\u6587\u4ef6\u5939\u5185\u7684\u56fe\u7247\u5168\u90e8\u63a8\u6f14\uff0c\u6b64\u65f6\u589e\u52a0--num_process\uff08\u53c2\u6570 > 1\uff09\uff0c\u53ef\u4ee5\u5f00\u542f\u591a\u8fdb\u7a0b\u63a8\u6f14\u3002 \u5f53 -l/--label \u7684\u53c2\u6570\u4e3a\u6570\u636e\u96c6\u6807\u7b7e\u6587\u4ef6\u8def\u5f84\u65f6\u5fc5\u987b\u4f7f\u7528--num_process\u53c2\u6570\uff0c\u6570\u636e\u96c6\u9a8c\u8bc1\u652f\u6301ImageNet\uff08Top1\u3001Top5\uff09\u3001COCO\u76ee\u6807\u68c0\u6d4b(mmAP)\uff1b\u5f53 -l/--label \u53c2\u6570\u4e3a\u56fe\u7247\u6587\u5b57\u63cf\u8ff0\u6807\u7b7e\u65f6\uff0c\u4e0d\u80fd\u4f7f\u7528\u9009\u9879--num_process\u3002 -c/--category \u7684\u53c2\u6570\u9009\u62e9Unknown\u65f6\uff0c\u5f53input_config.ini\u4e2d[OUTPUT_CONFIG]\u7684dequantizations\u4e3a'TRUE'\u65f6\uff0c\u4f1a\u5728\u8f6c\u6362Fixed\u6a21\u578b\u65f6\u5728\u589e\u52a0Fix2float\u7b97\u5b50\uff0c\u8be5\u7b97\u5b50\u4f1a\u8f6c\u6362\u5b9a\u70b9\u6570\u636e\u5230\u6d6e\u70b9\u6570\u636e\uff0c\u5b9a\u70b9\u548c\u79bb\u7ebf\u6a21\u578b\u7684\u8f93\u51faTensor\u7ef4\u5ea6\u4e0e\u6a21\u578b\u7ef4\u5ea6\u76f8\u540c layer46 - conv Tensor : { tensor dim : 4 , Original shape :[ 1 13 13 255 ] The following tensor data shape is alignment shape . tensor data : ... 5.2. calibrator_custom.simulator \u00b6 calibrator_custom.simulator\u662f\u57fa\u4e8ePython\u7684\u5feb\u901f\u91cf\u5316\u548c\u8f6c\u6362\u6a21\u578b\u7684\u6a21\u5757\u3002\u4f7f\u7528calibrator_custom.simulator\u53ef\u4ee5\u66f4\u65b9\u4fbf\u7075\u6d3b\u7684\u5bf9\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u8fdb\u884c\u91cf\u5316\u548c\u8f6c\u6362\u3002calibrator_custom.simulator\u5305\u542b3\u79cd\uff0c\u7528\u4e8e\u89e3\u6790\u4e0d\u540c\u9636\u6bb5\u7684\u6a21\u578b\u3002 calibrator_custom.float_simulator \u7528\u4e8e\u89e3\u6790float\u6a21\u578b calibrator_custom.fixed_simulator \u7528\u4e8e\u89e3\u6790fixed\u6a21\u578b calibrator_custom.offline_simulator \u7528\u4e8e\u89e3\u6790offline\u6a21\u578b \u76ee\u524d\u57fa\u4e8e\u7684docker\u73af\u5883\uff0c\u63d0\u4f9bPython3.7\u7684\u9884\u7f16\u8bd1\u7684Python\u6a21\u5757\u3002\u7531\u4e8efixed\u6a21\u578b\u548coffline\u6a21\u578b\u4f7f\u752832\u4f4d\u8fd0\u884c\u5e93\uff0c\u56e0\u6b64\u9700\u4f7f\u752832\u4f4dPython3.7\u73af\u5883\u8fd0\u884c\u3002Docker\u4e2d\u5df2\u66f4\u65b032\u4f4dPython3.7\u73af\u5883\uff0c\u4f7f\u7528python32\u5373\u53ef\u8fd0\u884c\u3002float\u6a21\u578b\u4f7f\u752864\u4f4dPython\u8fd0\u884c\u3002 \u4e0b\u9762\u57fa\u4e8ecalibrator_custom.float_simulator\uff0c\u8bf4\u660e\u4f7f\u7528\u65b9\u6cd5\u548c\u76f8\u5173API\u63a5\u53e3\uff1a import calibrator_custom model_path = './mobilenet_v2_float.sim' model = calibrator_custom . float_simulator ( model_path ) calibrator_custom.float_simulator \u4f7f\u7528calibrator_custom.float_simulator\u65f6\uff0c\u9700\u8981\u7ed9\u5b9afloat.sim\u6a21\u578b\u7684\u8def\u5f84\uff0c\u7528\u4e8e\u521b\u5efafloat_simulator\u7684\u5b9e\u4f8b\u3002\u53c2\u6570\u7ed9\u5b9a\u9519\u8bef\uff0c\u5c06\u65e0\u6cd5\u6210\u529f\u521b\u5efafloat_simulator\u5b9e\u4f8b\uff0c\u5e76\u8fd4\u56deValueError\u3002 5.2.1 calibrator_custom.simulator\u65b9\u6cd5 \u00b6 get_input_details : \u8fd4\u56de\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u4fe1\u606f\uff08list\uff09 Float\u6a21\u578b\u8fd4\u56de\u5982\u4e0b\uff1a input_details = model . get_input_details () print ( input_details ) [ { 'name' : 'sub_7' , 'shape' : array ([ 1 , 513 , 513 , 3 ], dtype = int32 ), 'dtype' : < class ' numpy . float32 '>, 'index' : 0 } ] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578b\u8f93\u5165\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a index : \u8f93\u5165Tensor\u5e8f\u53f7 name : \u8f93\u5165Tensor\u540d\u79f0 shape : \u8f93\u5165Tensor\u7684\u5f62\u72b6 dtype : \u8f93\u5165Tensor\u7684\u6570\u636e\u7c7b\u578b Fixed\u548cOffline\u6a21\u578b\u8fd4\u56de\u5982\u4e0b\uff1a >>> input_details = model . get_input_details () >>> print ( input_details ) [ { 'index' : 0 , 'shape' : array ([ 1 , 513 , 513 , 3 ]), 'dtype' : < class ' numpy . uint8 '>, 'name' : 'sub_7' , 'input_formats' : 'RGB' , 'training_input_formats' : 'RGB' } ] get_output_detail \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578b\u8f93\u5165\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a index : \u8f93\u5165Tensor\u5e8f\u53f7 name : \u8f93\u5165Tensor\u540d\u79f0 shape : \u8f93\u5165Tensor\u7684\u5f62\u72b6 dtype : \u8f93\u5165Tensor\u7684\u6570\u636e\u7c7b\u578b input_formats : \u7f51\u7edc\u6a21\u578b\u5b9e\u9645\u8fd0\u884c\u65f6\u7684\u56fe\u7247\u8f93\u5165\u683c\u5f0f training_input_formats : \u7f51\u7edc\u6a21\u578b\u8bad\u7ec3\u662f\u7684\u56fe\u7247\u8f93\u5165\u683c\u5f0f \u8fd4\u56de\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u4fe1\u606f\uff08list\uff09 Float\u6a21\u578b\u8fd4\u56de\u5982\u4e0b\uff1a >>> output_details = model . get_output_details () >>> print ( output_details ) [ { 'name' : 'MobilenetV2/Conv/Conv2D' , 'shape' : array ([ 1 , 257 , 257 , 30 ], dtype = int32 ), 'dtype' : < class ' numpy . float32 '>, 'index' : 0 } ] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578b\u8f93\u51fa\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a index : \u8f93\u51faTensor\u5e8f\u53f7 name : \u8f93\u51faTensor\u540d\u79f0 shape : \u8f93\u51faTensor\u7684\u5f62\u72b6 dtype : \u8f93\u51faTensor\u7684\u6570\u636e\u7c7b\u578b Fixed\u548cOffline\u6a21\u578b\u8fd4\u56de\u5982\u4e0b\uff1a >>> output_details = model . get_output_details () >>> print ( output_details ) [ { 'index' : 0 , 'shape' : array ([ 1 , 257 , 257 , 30 ]), 'name' : 'MobilenetV2/Conv/Conv2D' , 'dtype' : < class ' numpy . int16 '>, 'quantization' : ( 0.00013832777040079236 , 0 ) } ] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578b\u8f93\u51fa\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a index : \u8f93\u51faTensor\u5e8f\u53f7 name : \u8f93\u51faTensor\u540d\u79f0 shape : \u8f93\u51faTensor\u7684\u5f62\u72b6 dtype : \u8f93\u51faTensor\u7684\u6570\u636e\u7c7b\u578b quantization : \u8f93\u51faTensor\u7684scale\u548czero_point\uff08\u9700\u5c06\u6a21\u578b\u8f93\u51faTensor\u4e58scale\u5f97\u5230\u6d6e\u70b9\u6570\uff09 set_input : \u8bbe\u7f6e\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u6570\u636e >>> model . set_input ( 0 , img_data ) \u8f93\u5165\u6570\u636e\uff0c0\u4e3a\u8f93\u5165Tensor\u7684index\uff0c\u53ef\u4ee5\u5728get_input_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230\u3002img_data\u662f\u4e0emodel\u8f93\u5165shape\u548cdtype\u76f8\u540c\u7684numpy.ndarray\u683c\u5f0f\u6570\u636e\uff0c\u9519\u8bef\u7684shape\u6216dtype\uff0c\u5c06\u5bfc\u81f4set_input\u8fd4\u56deValueError\u3002\u5982\u679c\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u53ef\u4ee5\u591a\u6b21\u8c03\u7528set_input\uff0c\u6839\u636eget_input_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230index\u8bbe\u7f6e\u5bf9\u5e94Tensor\u7684\u8f93\u5165\u6570\u636e\u3002 invoke \u6a21\u578b\u8fd0\u884c\u4e00\u6b21 >>> model . invoke () \u8c03\u7528invoke\u524d\u8bf7\u5148\u4f7f\u7528set_input\u8bbe\u7f6e\u8f93\u5165\u6570\u636e\uff0c\u672a\u8c03\u7528set_input\u76f4\u63a5\u8c03\u7528invoke\u4f1a\u8fd4\u56deValueError\u3002 get_output \u83b7\u53d6\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u6570\u636e >>> result = model . get_output ( 0 ) \u83b7\u53d6\u8f93\u51fa\u6570\u636e\uff0c0\u4e3a\u8f93\u51faTensor\u7684index\uff0c\u53ef\u4ee5\u5728get_output_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230\uff0c\u8fd4\u56denumpy.ndarray\u683c\u5f0f\u8f93\u51fa\u6570\u636e\u3002\u5982\u679c\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u51fa\uff0c\u53ef\u4ee5\u591a\u6b21\u8c03\u7528get_output\uff0c\u6839\u636eget_output_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230index\u83b7\u53d6\u5bf9\u5e94Tensor\u7684\u8f93\u51fa\u6570\u636e\u3002 \u5047\u8bbe\u6a21\u578b\u8f93\u51fa\u7684shape\u4e3a[1, 257, 257, 30] Float\u6a21\u578b\u67e5\u770b\u7ed3\u679c\u7684shape >>> print ( result . shape ) ( 1 , 257 , 257 , 30 ) Fixed\u548cOffline\u6a21\u578b\u67e5\u770b\u7ed3\u679cshape >>> print ( result . shape ) ( 1 , 257 , 257 , 32 ) Fixed\u548cOffline\u6a21\u578b\u8f93\u51faTensor\u56e0\u4e3a\u6a21\u62df\u4e86\u5728\u786c\u4ef6\u7684\u50a8\u5b58\u65b9\u5f0f\uff0cTensor\u7684\u6700\u540e\u4e00\u4e2a\u7ef4\u5ea6\u4f1a\u5411\u4e0a\u5bf9\u9f50\uff0c\u56e0\u6b64\u8f93\u51fa\u7684\u7ef4\u5ea6\u4e3aTensor\u5bf9\u9f50\u7684\u7ef4\u5ea6\u3002\u6700\u540e\u5bf9\u9f50\u7684\u6570\u636e\u662f\u65e0\u7528\u6570\u636e\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u65b9\u6cd5\u53bb\u9664\uff1a >>> result = result [ ... , : output_details [ 0 ][ 'shape' ][ - 1 ]] >>> print ( result . shape ) ( 1 , 257 , 257 , 30 ) \u914d\u7f6einput_config.ini\u4e2d[OUTPUT_CONFIG]\u7684dequantizations\u4e3aTRUE\u65f6\uff0c\u5b9a\u70b9\u548c\u79bb\u7ebf\u6a21\u578b\u7684\u8f93\u51faTensor\u7684shape\u4e0eFloat\u6a21\u578b\u7ef4\u5ea6\u76f8\u540c\u3002 get_tensor_details \u8fd4\u56de\u7f51\u7edc\u6a21\u578b\u6bcf\u4e2aTensor\u7684\u4fe1\u606f\uff08list\uff09 Float\u6a21\u578b\u8fd4\u56de\u5982\u4e0b\uff1a >>> tensor_details = model . get_tensor_details () >>> print ( tensor_details ) [ { 'name' : 'MobilenetV2/Conv/Conv2D' , 'shape' : array ([ 1 , 257 , 257 , 30 ], dtype = int32 ), 'dtype' : 'FLOAT32' , 'qtype' : 'INT16' }, { 'name' : 'MobilenetV2/Conv/Conv2D_bias' , 'shape' : array ( [ 2 , 30 ], dtype = int32 ), 'dtype' : 'FLOAT32' , 'qtype' : 'INT16' }, { 'name' : 'MobilenetV2/Conv/weights/read' , 'shape' : array ( [ 30 , 3 , 3 , 3 ], dtype = int32 ), 'dtype' : 'FLOAT32' , 'qtype' : 'INT8' }, { 'name' : 'sub_7' , 'shape' : array ([ 1 , 513 , 513 , 3 ], dtype = int32 ), 'dtype' : 'FLOAT32' , 'qtype' : 'UINT8' } ] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578bTensor\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a name : Tensor\u540d\u79f0 shape : Tensor\u7684\u5f62\u72b6 dtype : Tensor\u7684\u6570\u636e\u7c7b\u578b qtype : \u5b9a\u70b9\u6a21\u578b\u8be5Tensor\u53ef\u80fd\u7684\u6570\u636e\u7c7b\u578b\uff08quantization type\uff09 Fixed\u548cOffline\u6a21\u578b\u5982\u679cinput_config.ini\u4e2d[OUTPUT_CONFIG]\u7684dequantizations\u914d\u7f6e\u4e3aFALSE\u65f6\u8fd4\u56de\u5982\u4e0b\uff1a >>> tensor_details = model . get_tensor_details () >>> print ( tensor_details ) [ { 'shape' : array ([ 1 , 257 , 257 , 30 ]), 'quantization' : [( 0.00013832777040079236 , 0 )], 'min' : [ - 4.230099201202393 ], 'max' : [ 4.532586097717285 ], 'name' : 'MobilenetV2/Conv/Conv2D' , 'dtype' : 'INT16' }, { 'shape' : array ([ 2 , 30 ]), 'quantization' : [], 'min' : [ 0.0 ], 'max ' : [ 1.0 ], 'name' : 'MobilenetV2/Conv/Conv2D_bias' , 'dtype' : 'INT16' }, { 'shape' : array ([ 30 , 3 , 3 , 3 ]), 'quantization' : [( 0.004813921172171831 , 0 )], 'min' : [ - 0.5498989820480347 ], 'max' : [ 0.6113680005073547 ], 'name' : 'MobilenetV2/Conv/weights/read' , 'dtype' : 'INT8' }, { 'shape' : array ([ 1 , 513 , 513 , 3 ]), 'quantization' : [( 0.007843137718737125 , 128 )], 'min' : [ - 1 . 0 ], 'max' : [ 1.0 ], 'name' : 'sub_7' , 'dtype' : 'UINT8' } ] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578bTensor\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a name : Tensor\u540d\u79f0 shape : Tensor\u7684\u5f62\u72b6 dtype : Tensor\u7684\u6570\u636e\u7c7b\u578b quantization : Tensor\u7684scale\u548czero_point min : Tensor\u7684\u6700\u5c0f\u503c max : Tensor\u7684\u6700\u5927\u503c \u914d\u7f6einput_config.ini\u4e2d[OUTPUT_CONFIG]\u7684dequantizations\u4e3aTRUE\u65f6\uff0c\u4f1a\u5728\u8f6c\u6362Fixed\u6a21\u578b\u65f6\u5728\u589e\u52a0Fix2float\u7b97\u5b50\uff0c\u8be5\u7b97\u5b50\u4f1a\u8f6c\u6362\u5b9a\u70b9\u6570\u636e\u5230\u6d6e\u70b9\u6570\u636e\uff0c\u56e0\u6b64model.get_tensor_details()\u5c06\u4e0d\u518d\u6709'quantization'\u4fe1\u606f\u3002 5.2.2 calibrator_custom.SIM_Simulator \u00b6 \u5bf9\u4e8e\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u540c\u65f6\u8f6c\u6362\u65f6\uff0c\u63d0\u4f9bcalibrator_custom.SIM_Simulator\uff0c\u65b9\u4fbf\u8fdb\u884c\u7b80\u5355\u5b9a\u4e49\u540e\uff0c\u7edf\u4e00\u8fd0\u884c\u3002 calibrator_custom.SIM_Simulator\u662f\u5df2\u7ecf\u5b9e\u73b0\u597d\u7684class\uff0c\u5f53\u4e2d\u53ea\u6709forward\u65b9\u6cd5\u672a\u5b9e\u73b0\uff0c\u4f7f\u7528\u65f6\u4ec5\u9700\u5b9e\u73b0\u8be5\u65b9\u6cd5\uff0c\u5373\u53ef\u8f6c\u6362\u5b8c\u6210\u3002 \u4e0b\u9762\u4ee5 SGS_IPU_SDK/Scripts/examples/sim_simulator.py \u4e3a\u4f8b\uff0c\u8bf4\u660ecalibrator_custom.SIM_Simulator\u7684\u4f7f\u7528\u65b9\u6cd5\uff1a import calibrator_custom class Net ( calibrator_custom . SIM_Simulator ): def __init__ ( self ): super () . __init__ () self . model = calibrator_custom . fixed_simulator ( model_path ) def forward ( self , x ): out_details = self . model . get_output_details () self . model . set_input ( 0 , x ) self . model . invoke () result_list = [] for idx in range ( len ( out_details )): result = self . model . get_output ( idx ) # for Fixed and Offline model if result . shape [ - 1 ] != out_details [ idx ][ 'shape' ][ - 1 ]: result = result [ ... , : out_details [ idx ][ 'shape' ][ - 1 ]] if out_details [ idx ][ 'dtype' ] == np . int16 : scale , _ = out_details [ idx ][ 'quantization' ] result = np . dot ( result , scale ) result_list . append ( result ) return result_list \u5b9a\u4e49forward\u65b9\u6cd5\uff0cforward\u7684\u53c2\u6570\u4e3a\u6a21\u578b\u8f93\u5165\uff0c\u5982\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u53ef\u589e\u52a0forward\u7684\u53c2\u6570\u3002 \u521b\u5efacalibrator_custom.SIM_Simulator\u7684\u5b9e\u4f8b net = Net () \u8c03\u7528calibrator_custom.SIM_Simulator\u5b9e\u4f8b\u7684\u65b9\u6cd5 result = net ( img_gen , num_process = 4 ) \u8c03\u7528calibrator_custom.SIM_Simulator\u5b9e\u4f8b\uff0c\u9700\u8981\u7ed9\u5b9a\u8f93\u5165\u56fe\u7247\u7684numpy.ndarray\u6216\u8005\u56fe\u7247\u751f\u6210\u5668\u3002 \u5f53num_process\u5927\u4e8e1\u65f6\uff0cimg_gen\u5fc5\u987b\u4e3a\u56fe\u7247\u751f\u6210\u5668\u3002 \u56fe\u7247\u751f\u6210\u5668\uff08img_gen\uff09 \u4e3a\u65b9\u4fbf\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u8f6c\u6362\u6a21\u578b\uff0c\u901a\u8fc7\u751f\u6210\u5668\u65b9\u4fbf\u7ec4\u7ec7\u8f93\u5165\u56fe\u7247\u7684\u5e8f\u5217\u3002\u5982\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u751f\u6210\u5668\u5e94\u8be5\u6309\u7167\u5b9a\u4e49forward\u65f6\u7684\u8f93\u5165\u987a\u5e8f\uff0c\u8fd4\u56de\u6709\u591a\u4e2anumpy.ndarray\u7684list\u3002 calibrator_custom.utils.image_preprocess_func\u4f7f\u7528\u9884\u5148\u5b9a\u4e49\u597d\u7684\u524d\u5904\u7406\u65b9\u6cd5 preprocess_func = calibrator_custom . utils . image_preprocess_func ( model_name ) def image_generator ( folder_path , preprocess_func , norm ): images = [ os . path . join ( folder_path , img ) for img in os . listdir ( folder_path )] for image in images : img = preprocess_func ( image , norm ) yield [ img ] img_gen = image_generator ( './images' , preprocess_func , False )","title":"Simulate"},{"location":"module/User_Guide/IPU200M/Simulate.html#51","text":"Simulator\u5de5\u5177\u7684\u4f4d\u7f6e\u5728 SGS_IPU_SDK/Scripts/calibrator/simulator.py \u3002 \u8be5\u5de5\u5177\u5177\u6709\u4ee5\u4e0b\u529f\u80fd\uff1a \u5bf9\u5206\u7c7b\u7f51\u7edc\u6570\u636e\u96c6\u9a8c\u8bc1\uff1b \u5bf9\u68c0\u6d4b\u7f51\u7edc\u6570\u636e\u96c6\u9a8c\u8bc1\uff08\u652f\u6301COCO\u6570\u636e\u96c6\uff09\uff1b \u5bf9\u5355\u5f20\u56fe\u7247\u9884\u6d4b\uff1b \u7ed8\u5236\u5355\u5f20\u56fe\u7247\u76ee\u6807\u68c0\u6d4b\u7ed3\u679c\uff1b \u5728SGS_IPU_SDK \u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK source cfg_env.sh \u8fdb\u5165\u5230\u8be5\u5de5\u5177\u76ee\u5f55\uff0c\u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a \u6d4b\u8bd5ILSVRC\u6570\u636e\u96c6\uff0c\u5e76\u8fd4\u56de\u6a21\u578b\u7cbe\u5ea6\u7ed3\u679c\uff1a python3 simulator.py \\ -i ~/SGS_Models/resource/classify/ilsvrc2012_val_set100/ \\ -m ~/SGS_Models/tensorflow/mobilenet_v2/mobilenet_v2_float.sim \\ -l ~/SGS_Models/resource/classify/tensorflow_labels.txt \\ -c Classification \\ -t Float \\ -n mobilenet_v2 \\ --num_process 20 \u6216\u8005\u53ef\u4ee5\u4f7f\u7528\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\uff1a python3 simulator.py \\ -i ~/SGS_Models/resource/classify/ilsvrc2012_val_set100/file.list \\ -m ~/SGS_Models/tensorflow/mobilenet_v2/mobilenet_v2_float.sim \\ -l ~/SGS_Models/resource/classify/tensorflow_labels.txt \\ -c Classification \\ -t Float \\ -n mobilenet_v2 \\ --num_process 20 \u6d4b\u8bd5COCO2017\u6570\u636e\u96c6\uff0c\u5e76\u8fd4\u56de\u6a21\u578b\u68c0\u6d4b\u7ed3\u679c\uff1a python3 simulator.py \\ -i ~/SGS_Models/resource/detection/coco2017_val_set100 \\ -m ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1_float.sim \\ -l ~/SGS_Models/resource/detection/coco2017_val_set100.json \\ -c Detection \\ -t Float \\ -n ssd_mobilenet_v1 \\ --num_process 10 \u6216\u8005\u53ef\u4ee5\u4f7f\u7528\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\uff1a python3 simulator.py \\ -i ~/SGS_Models/resource/detection/coco2017_val_set100/file.list \\ -m ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1_float.sim \\ -l ~/SGS_Models/resource/detection/coco2017_val_set100.json \\ -c Detection \\ -t Float \\ -n ssd_mobilenet_v1 \\ --num_process 10 \u6d4b\u8bd5\u5355\u5f20\u56fe\u7247\uff0c\u5e76\u5c06\u68c0\u6d4b\u7ed3\u679c\u7ed8\u5236\u5728\u56fe\u7247\u4e0a\uff0c\u4fdd\u5b58\u5230 ./results/ \u6587\u4ef6\u5939\u4e0b\uff1a python3 simulator.py \\ -i ~/SGS_Models/resource/detection/coco2017_val_set100/000000567877.jpg \\ -m ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1_float.sim \\ -c Detection \\ -t Float \\ -n ssd_mobilenet_v1 \\ --draw_result ./results \u5bf9\u8be5\u5de5\u5177\u53c2\u6570\u7684\u5177\u4f53\u8bf4\u660e\u5982\u4e0b\u3002","title":"5.1. \u4f7f\u7528\u65b9\u6cd5"},{"location":"module/User_Guide/IPU200M/Simulate.html#511","text":"-i , --image : \u56fe\u7247\u6587\u4ef6 / \u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84 / \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u3002 -m , --model : \u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 -c , --category : \u6a21\u578b\u7684\u7c7b\u522b\uff0c\u4e3b\u8981\u6709Classification / Detection / Unknown\u3002 Classification : \u6a21\u578b\u67091\u4e2a\u8f93\u51fa\uff0c\u4f1a\u6839\u636e\u8f93\u51fa\u6392\u5e8f\u8f93\u51fa\u5206\u6570\u7531\u9ad8\u81f3\u4f4e\u7684\u524d5\u4e2a\u3002 Detection : \u6a21\u578b\u67094\u4e2a\u8f93\u51fa\uff0c\u4f1a\u6839\u636e\u8f93\u51fa\u8f6c\u6362\u4e3a\u8f93\u5165\u56fe\u7247\u7684bbox\u4f4d\u7f6e\u4ee5\u53ca\u7c7b\u522b\u3002\u53ea\u652f\u6301SigmaStar\u540e\u5904\u7406\u7b97\u5b50 [SigmaStar\u540e\u5904\u7406\u6a21\u5757]\u3002\u5176\u4ed6\u540e\u5904\u7406\u8bf7\u4f7f\u7528Unknown\u3002 Unknown : \u6a21\u578b\u8f93\u51fa\u4e0d\u5c5e\u4e8e\u4e0a\u8ff0\u4e24\u79cd\u7c7b\u578b\uff0c\u4f1a\u8f93\u51fa\u5168\u90e8\u7684Tensor\u6570\u503c\u3002 -t , --type : \u6a21\u578b\u7684\u6570\u636e\u7c7b\u578b\uff1a Float : \u6d6e\u70b9\u6a21\u578b\u3002 Fixed : \u5b9a\u70b9\u5728\u7ebf\u6a21\u578b\u3002 Offline : \u5b9a\u70b9\u79bb\u7ebf\u6a21\u578b\u3002 Please Note: \u4e0d\u52a0-n/--preprocess\u53c2\u6570\u65f6\uff0c-i/--image\u4e0d\u80fd\u7ed9\u56fe\u7247\u6216\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\u3002 -i/--image\u53c2\u6570\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\u65f6\uff1a \u7f51\u7edc\u6a21\u578b\u4e3a\u5355\u8f93\u5165\u65f6\uff1a ~/SGS_IPU_SDK/image_test/2007000364.jpg ~/SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp ... \u7f51\u7edc\u6a21\u578b\u4e3a\u591a\u8f93\u5165\u65f6\uff1a ~/SGS_IPU_SDK/image_test/2007000364.jpg,~/SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp ~/SGS_IPU_SDK/image_test/2007000365.jpg,~/SGS_IPU_SDK/image_test/ILSVRC2012_test_00000003.bmp ...","title":"5.1.1   \u5fc5\u9009\u53c2\u6570"},{"location":"module/User_Guide/IPU200M/Simulate.html#512","text":"-l , --label : \u6570\u636e\u96c6\u7684\u6807\u7b7e\u6587\u4ef6\u8def\u5f84 / \u56fe\u7247\u6587\u5b57\u63cf\u8ff0\u7684\u6807\u7b7e\u3002 -n , --preprocess : \u6a21\u578b\u540d\u79f0\uff0c\u4e0e\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\u76f8\u5173\uff0c\u8be6\u89c1 [3.2. \u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5]\u3002 \u4e5f\u53ef\u4ee5\u5b8c\u6210\u524d\u5904\u7406\u6587\u4ef6\u914d\u7f6e\u540e\uff0c\u7ed9\u5b9a\u524d\u5904\u7406\u6587\u4ef6\u8def\u5f84\u3002\u4e0d\u52a0\u8be5\u53c2\u6570\uff0c\u56fe\u7247\u53c2\u6570\u9700\u8981\u7ed9\u539f\u59cb\u6570\u636e\uff0c\u53ef\u91c7\u7528--save_input\u4fdd\u5b58\u56fe\u7247\u6570\u636e\u540e\uff0c\u6839\u636e\u8be5\u683c\u5f0f\u5236\u5b9a\u5176\u4ed6\u7684\u539f\u59cb\u6570\u636e\u3002 \u6ce8\u610f\u4e8b\u9879 \u82e5\u6a21\u578b\u4e3a \u591a\u8f93\u5165 \u65f6\uff0c -n,--preprocess \u53c2\u6570\u7528\u6cd5\u9700\u8981\u591a\u4e2a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4f8b\u5982 -n preprocess1.py,preprocess2.py \u6216\u8005 --preprocess preprocess1.py,preprocess2.py --tool : sgs_simulator\u6587\u4ef6\u8def\u5f84\u3002 --skip_garbage : Fixed\u548cOffline\u6a21\u578b\u8f93\u51fa\u7ed3\u679c\u8df3\u8fc7\u65e0\u7528\u6570\u636e\u3002 --dump_rawdata : \u4fdd\u5b58Fixed\u548cOffline\u6a21\u578b\u8f93\u5165\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u6587\u4ef6\u540d\u4e3a\u56fe\u7247\u540d + .bin\uff0c\u4fdd\u5b58\u5728\u5f53\u524d\u8def\u5f84\u3002 --num_process : \u8fdb\u7a0b\u6570\uff0c\u8fd0\u884c\u540c\u65f6\u8fd0\u884c\u7684\u8fdb\u7a0b\u6570\u3002\uff08\u53ef\u9009\u53c2\u6570\uff0c\u4e0d\u52a0\u8be5\u53c2\u6570\u9ed8\u8ba4\u4e3a\u5355\u7ebf\u7a0b\uff09\u9a8c\u8bc1\u6570\u636e\u96c6\u5fc5\u987b\u52a0\u6b64\u53c2\u6570\u4e14\u8fdb\u7a0b\u6570 > 1\u3002 --draw_result : \u7ed8\u5236\u76ee\u6807\u68c0\u6d4b\u7f51\u7edc\u9009\u6846\u7ed3\u679c\uff0c\u53c2\u6570\u4e3a\u7ed3\u679c\u4fdd\u5b58\u6587\u4ef6\u5939\u8def\u5f84\uff08\u6587\u4ef6\u5939\u4e0d\u5b58\u5728\u4f1a\u81ea\u52a8\u521b\u5efa\uff09\u548c\u753b\u6846\u7684\u9608\u503c\uff0c\u4f7f\u7528\u9017\u53f7( , )\u5206\u9694\u4fdd\u5b58\u8def\u5f84\u4e0e\u9608\u503c\u3002\u8f93\u5165\u9608\u503c\u753b\u51fa\u5927\u4e8e\u9608\u503c\u7684\u68c0\u6d4b\u7ed3\u679c\uff0c\u4e0d\u8f93\u5165\u9608\u503c\u5219\u753b\u51fa\u5168\u90e8\u68c0\u6d4b\u7ed3\u679c\u3002 --continue_run : \u63a5\u7740\u4e0a\u6b21\u6570\u636e\u96c6\u5269\u4e0b\u7684\u90e8\u5206\u8fd0\u884c\u3002 --save_input : \u4fdd\u5b58simulator \u524d\u5904\u7406\u540e\u7684\u6587\u4ef6\uff0c\u9ed8\u8ba4\u4e0d\u4fdd\u5b58\u3002\u6587\u4ef6\u4e3a\u6587\u672c\u6587\u4ef6\uff0c\u4f1a\u5728\u8fd0\u884c\u8def\u5f84\u4e0b\u521b\u5efa\u6587\u4ef6\u5939tmp_image\uff0c\u6587\u4ef6\u4fdd\u5b58\u5728 ./tmp_image/imagename \u56fe\u7247\u540d\u3002","title":"5.1.2   \u53ef\u9009\u53c2\u6570"},{"location":"module/User_Guide/IPU200M/Simulate.html#513","text":"simulator\u5de5\u5177\u4f1a\u5bfb\u627e\u7cfb\u7edf\u53d8\u91cf\u4ece\u800c\u83b7\u5f97\u5bf9\u5e94\u9636\u6bb5\u4efb\u52a1\u6240\u9700\u5de5\u5177\u8def\u5f84\uff0c\u56e0\u6b64\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u53c2\u6570-t/--tool\u4e0d\u7528\u6307\u5b9a\u76f8\u5173\u5de5\u5177\u7684\u4f4d\u7f6e\u3002 simulator\u5de5\u5177\u6bcf\u6b21\u8fd0\u884c\u7ed3\u675f\u540e\u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u521b\u5efalog\u76ee\u5f55\uff0clog\u76ee\u5f55\u4e0b\u7684output\u6587\u4ef6\u5939\uff0c\u5b58\u653e\u6a21\u578b\u63a8\u6f14\u7684\u7ed3\u679c\u3002 \u5f53 -i/--image \u7684\u53c2\u6570\u4e3a\u5355\u5f20\u56fe\u7247\u7684\u8def\u5f84\u65f6\uff0csimulator\u53ea\u5bf9\u8be5\u56fe\u7247\u63a8\u6f14\uff1b\u5f53 -i/--image \u7684\u53c2\u6570\u4e3a\u56fe\u7247\u6587\u4ef6\u5939\u7684\u8def\u5f84\u65f6\uff0csimulator\u4f1a\u5bf9\u6587\u4ef6\u5939\u5185\u7684\u56fe\u7247\u5168\u90e8\u63a8\u6f14\uff0c\u6b64\u65f6\u589e\u52a0--num_process\uff08\u53c2\u6570 > 1\uff09\uff0c\u53ef\u4ee5\u5f00\u542f\u591a\u8fdb\u7a0b\u63a8\u6f14\u3002 \u5f53 -l/--label \u7684\u53c2\u6570\u4e3a\u6570\u636e\u96c6\u6807\u7b7e\u6587\u4ef6\u8def\u5f84\u65f6\u5fc5\u987b\u4f7f\u7528--num_process\u53c2\u6570\uff0c\u6570\u636e\u96c6\u9a8c\u8bc1\u652f\u6301ImageNet\uff08Top1\u3001Top5\uff09\u3001COCO\u76ee\u6807\u68c0\u6d4b(mmAP)\uff1b\u5f53 -l/--label \u53c2\u6570\u4e3a\u56fe\u7247\u6587\u5b57\u63cf\u8ff0\u6807\u7b7e\u65f6\uff0c\u4e0d\u80fd\u4f7f\u7528\u9009\u9879--num_process\u3002 -c/--category \u7684\u53c2\u6570\u9009\u62e9Unknown\u65f6\uff0c\u5f53input_config.ini\u4e2d[OUTPUT_CONFIG]\u7684dequantizations\u4e3a'TRUE'\u65f6\uff0c\u4f1a\u5728\u8f6c\u6362Fixed\u6a21\u578b\u65f6\u5728\u589e\u52a0Fix2float\u7b97\u5b50\uff0c\u8be5\u7b97\u5b50\u4f1a\u8f6c\u6362\u5b9a\u70b9\u6570\u636e\u5230\u6d6e\u70b9\u6570\u636e\uff0c\u5b9a\u70b9\u548c\u79bb\u7ebf\u6a21\u578b\u7684\u8f93\u51faTensor\u7ef4\u5ea6\u4e0e\u6a21\u578b\u7ef4\u5ea6\u76f8\u540c layer46 - conv Tensor : { tensor dim : 4 , Original shape :[ 1 13 13 255 ] The following tensor data shape is alignment shape . tensor data : ...","title":"5.1.3   \u6ce8\u610f\u4e8b\u9879"},{"location":"module/User_Guide/IPU200M/Simulate.html#52-calibrator_customsimulator","text":"calibrator_custom.simulator\u662f\u57fa\u4e8ePython\u7684\u5feb\u901f\u91cf\u5316\u548c\u8f6c\u6362\u6a21\u578b\u7684\u6a21\u5757\u3002\u4f7f\u7528calibrator_custom.simulator\u53ef\u4ee5\u66f4\u65b9\u4fbf\u7075\u6d3b\u7684\u5bf9\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u8fdb\u884c\u91cf\u5316\u548c\u8f6c\u6362\u3002calibrator_custom.simulator\u5305\u542b3\u79cd\uff0c\u7528\u4e8e\u89e3\u6790\u4e0d\u540c\u9636\u6bb5\u7684\u6a21\u578b\u3002 calibrator_custom.float_simulator \u7528\u4e8e\u89e3\u6790float\u6a21\u578b calibrator_custom.fixed_simulator \u7528\u4e8e\u89e3\u6790fixed\u6a21\u578b calibrator_custom.offline_simulator \u7528\u4e8e\u89e3\u6790offline\u6a21\u578b \u76ee\u524d\u57fa\u4e8e\u7684docker\u73af\u5883\uff0c\u63d0\u4f9bPython3.7\u7684\u9884\u7f16\u8bd1\u7684Python\u6a21\u5757\u3002\u7531\u4e8efixed\u6a21\u578b\u548coffline\u6a21\u578b\u4f7f\u752832\u4f4d\u8fd0\u884c\u5e93\uff0c\u56e0\u6b64\u9700\u4f7f\u752832\u4f4dPython3.7\u73af\u5883\u8fd0\u884c\u3002Docker\u4e2d\u5df2\u66f4\u65b032\u4f4dPython3.7\u73af\u5883\uff0c\u4f7f\u7528python32\u5373\u53ef\u8fd0\u884c\u3002float\u6a21\u578b\u4f7f\u752864\u4f4dPython\u8fd0\u884c\u3002 \u4e0b\u9762\u57fa\u4e8ecalibrator_custom.float_simulator\uff0c\u8bf4\u660e\u4f7f\u7528\u65b9\u6cd5\u548c\u76f8\u5173API\u63a5\u53e3\uff1a import calibrator_custom model_path = './mobilenet_v2_float.sim' model = calibrator_custom . float_simulator ( model_path ) calibrator_custom.float_simulator \u4f7f\u7528calibrator_custom.float_simulator\u65f6\uff0c\u9700\u8981\u7ed9\u5b9afloat.sim\u6a21\u578b\u7684\u8def\u5f84\uff0c\u7528\u4e8e\u521b\u5efafloat_simulator\u7684\u5b9e\u4f8b\u3002\u53c2\u6570\u7ed9\u5b9a\u9519\u8bef\uff0c\u5c06\u65e0\u6cd5\u6210\u529f\u521b\u5efafloat_simulator\u5b9e\u4f8b\uff0c\u5e76\u8fd4\u56deValueError\u3002","title":"5.2. calibrator_custom.simulator"},{"location":"module/User_Guide/IPU200M/Simulate.html#521-calibrator_customsimulator","text":"get_input_details : \u8fd4\u56de\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u4fe1\u606f\uff08list\uff09 Float\u6a21\u578b\u8fd4\u56de\u5982\u4e0b\uff1a input_details = model . get_input_details () print ( input_details ) [ { 'name' : 'sub_7' , 'shape' : array ([ 1 , 513 , 513 , 3 ], dtype = int32 ), 'dtype' : < class ' numpy . float32 '>, 'index' : 0 } ] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578b\u8f93\u5165\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a index : \u8f93\u5165Tensor\u5e8f\u53f7 name : \u8f93\u5165Tensor\u540d\u79f0 shape : \u8f93\u5165Tensor\u7684\u5f62\u72b6 dtype : \u8f93\u5165Tensor\u7684\u6570\u636e\u7c7b\u578b Fixed\u548cOffline\u6a21\u578b\u8fd4\u56de\u5982\u4e0b\uff1a >>> input_details = model . get_input_details () >>> print ( input_details ) [ { 'index' : 0 , 'shape' : array ([ 1 , 513 , 513 , 3 ]), 'dtype' : < class ' numpy . uint8 '>, 'name' : 'sub_7' , 'input_formats' : 'RGB' , 'training_input_formats' : 'RGB' } ] get_output_detail \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578b\u8f93\u5165\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a index : \u8f93\u5165Tensor\u5e8f\u53f7 name : \u8f93\u5165Tensor\u540d\u79f0 shape : \u8f93\u5165Tensor\u7684\u5f62\u72b6 dtype : \u8f93\u5165Tensor\u7684\u6570\u636e\u7c7b\u578b input_formats : \u7f51\u7edc\u6a21\u578b\u5b9e\u9645\u8fd0\u884c\u65f6\u7684\u56fe\u7247\u8f93\u5165\u683c\u5f0f training_input_formats : \u7f51\u7edc\u6a21\u578b\u8bad\u7ec3\u662f\u7684\u56fe\u7247\u8f93\u5165\u683c\u5f0f \u8fd4\u56de\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u4fe1\u606f\uff08list\uff09 Float\u6a21\u578b\u8fd4\u56de\u5982\u4e0b\uff1a >>> output_details = model . get_output_details () >>> print ( output_details ) [ { 'name' : 'MobilenetV2/Conv/Conv2D' , 'shape' : array ([ 1 , 257 , 257 , 30 ], dtype = int32 ), 'dtype' : < class ' numpy . float32 '>, 'index' : 0 } ] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578b\u8f93\u51fa\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a index : \u8f93\u51faTensor\u5e8f\u53f7 name : \u8f93\u51faTensor\u540d\u79f0 shape : \u8f93\u51faTensor\u7684\u5f62\u72b6 dtype : \u8f93\u51faTensor\u7684\u6570\u636e\u7c7b\u578b Fixed\u548cOffline\u6a21\u578b\u8fd4\u56de\u5982\u4e0b\uff1a >>> output_details = model . get_output_details () >>> print ( output_details ) [ { 'index' : 0 , 'shape' : array ([ 1 , 257 , 257 , 30 ]), 'name' : 'MobilenetV2/Conv/Conv2D' , 'dtype' : < class ' numpy . int16 '>, 'quantization' : ( 0.00013832777040079236 , 0 ) } ] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578b\u8f93\u51fa\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a index : \u8f93\u51faTensor\u5e8f\u53f7 name : \u8f93\u51faTensor\u540d\u79f0 shape : \u8f93\u51faTensor\u7684\u5f62\u72b6 dtype : \u8f93\u51faTensor\u7684\u6570\u636e\u7c7b\u578b quantization : \u8f93\u51faTensor\u7684scale\u548czero_point\uff08\u9700\u5c06\u6a21\u578b\u8f93\u51faTensor\u4e58scale\u5f97\u5230\u6d6e\u70b9\u6570\uff09 set_input : \u8bbe\u7f6e\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u6570\u636e >>> model . set_input ( 0 , img_data ) \u8f93\u5165\u6570\u636e\uff0c0\u4e3a\u8f93\u5165Tensor\u7684index\uff0c\u53ef\u4ee5\u5728get_input_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230\u3002img_data\u662f\u4e0emodel\u8f93\u5165shape\u548cdtype\u76f8\u540c\u7684numpy.ndarray\u683c\u5f0f\u6570\u636e\uff0c\u9519\u8bef\u7684shape\u6216dtype\uff0c\u5c06\u5bfc\u81f4set_input\u8fd4\u56deValueError\u3002\u5982\u679c\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u53ef\u4ee5\u591a\u6b21\u8c03\u7528set_input\uff0c\u6839\u636eget_input_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230index\u8bbe\u7f6e\u5bf9\u5e94Tensor\u7684\u8f93\u5165\u6570\u636e\u3002 invoke \u6a21\u578b\u8fd0\u884c\u4e00\u6b21 >>> model . invoke () \u8c03\u7528invoke\u524d\u8bf7\u5148\u4f7f\u7528set_input\u8bbe\u7f6e\u8f93\u5165\u6570\u636e\uff0c\u672a\u8c03\u7528set_input\u76f4\u63a5\u8c03\u7528invoke\u4f1a\u8fd4\u56deValueError\u3002 get_output \u83b7\u53d6\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u6570\u636e >>> result = model . get_output ( 0 ) \u83b7\u53d6\u8f93\u51fa\u6570\u636e\uff0c0\u4e3a\u8f93\u51faTensor\u7684index\uff0c\u53ef\u4ee5\u5728get_output_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230\uff0c\u8fd4\u56denumpy.ndarray\u683c\u5f0f\u8f93\u51fa\u6570\u636e\u3002\u5982\u679c\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u51fa\uff0c\u53ef\u4ee5\u591a\u6b21\u8c03\u7528get_output\uff0c\u6839\u636eget_output_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230index\u83b7\u53d6\u5bf9\u5e94Tensor\u7684\u8f93\u51fa\u6570\u636e\u3002 \u5047\u8bbe\u6a21\u578b\u8f93\u51fa\u7684shape\u4e3a[1, 257, 257, 30] Float\u6a21\u578b\u67e5\u770b\u7ed3\u679c\u7684shape >>> print ( result . shape ) ( 1 , 257 , 257 , 30 ) Fixed\u548cOffline\u6a21\u578b\u67e5\u770b\u7ed3\u679cshape >>> print ( result . shape ) ( 1 , 257 , 257 , 32 ) Fixed\u548cOffline\u6a21\u578b\u8f93\u51faTensor\u56e0\u4e3a\u6a21\u62df\u4e86\u5728\u786c\u4ef6\u7684\u50a8\u5b58\u65b9\u5f0f\uff0cTensor\u7684\u6700\u540e\u4e00\u4e2a\u7ef4\u5ea6\u4f1a\u5411\u4e0a\u5bf9\u9f50\uff0c\u56e0\u6b64\u8f93\u51fa\u7684\u7ef4\u5ea6\u4e3aTensor\u5bf9\u9f50\u7684\u7ef4\u5ea6\u3002\u6700\u540e\u5bf9\u9f50\u7684\u6570\u636e\u662f\u65e0\u7528\u6570\u636e\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u65b9\u6cd5\u53bb\u9664\uff1a >>> result = result [ ... , : output_details [ 0 ][ 'shape' ][ - 1 ]] >>> print ( result . shape ) ( 1 , 257 , 257 , 30 ) \u914d\u7f6einput_config.ini\u4e2d[OUTPUT_CONFIG]\u7684dequantizations\u4e3aTRUE\u65f6\uff0c\u5b9a\u70b9\u548c\u79bb\u7ebf\u6a21\u578b\u7684\u8f93\u51faTensor\u7684shape\u4e0eFloat\u6a21\u578b\u7ef4\u5ea6\u76f8\u540c\u3002 get_tensor_details \u8fd4\u56de\u7f51\u7edc\u6a21\u578b\u6bcf\u4e2aTensor\u7684\u4fe1\u606f\uff08list\uff09 Float\u6a21\u578b\u8fd4\u56de\u5982\u4e0b\uff1a >>> tensor_details = model . get_tensor_details () >>> print ( tensor_details ) [ { 'name' : 'MobilenetV2/Conv/Conv2D' , 'shape' : array ([ 1 , 257 , 257 , 30 ], dtype = int32 ), 'dtype' : 'FLOAT32' , 'qtype' : 'INT16' }, { 'name' : 'MobilenetV2/Conv/Conv2D_bias' , 'shape' : array ( [ 2 , 30 ], dtype = int32 ), 'dtype' : 'FLOAT32' , 'qtype' : 'INT16' }, { 'name' : 'MobilenetV2/Conv/weights/read' , 'shape' : array ( [ 30 , 3 , 3 , 3 ], dtype = int32 ), 'dtype' : 'FLOAT32' , 'qtype' : 'INT8' }, { 'name' : 'sub_7' , 'shape' : array ([ 1 , 513 , 513 , 3 ], dtype = int32 ), 'dtype' : 'FLOAT32' , 'qtype' : 'UINT8' } ] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578bTensor\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a name : Tensor\u540d\u79f0 shape : Tensor\u7684\u5f62\u72b6 dtype : Tensor\u7684\u6570\u636e\u7c7b\u578b qtype : \u5b9a\u70b9\u6a21\u578b\u8be5Tensor\u53ef\u80fd\u7684\u6570\u636e\u7c7b\u578b\uff08quantization type\uff09 Fixed\u548cOffline\u6a21\u578b\u5982\u679cinput_config.ini\u4e2d[OUTPUT_CONFIG]\u7684dequantizations\u914d\u7f6e\u4e3aFALSE\u65f6\u8fd4\u56de\u5982\u4e0b\uff1a >>> tensor_details = model . get_tensor_details () >>> print ( tensor_details ) [ { 'shape' : array ([ 1 , 257 , 257 , 30 ]), 'quantization' : [( 0.00013832777040079236 , 0 )], 'min' : [ - 4.230099201202393 ], 'max' : [ 4.532586097717285 ], 'name' : 'MobilenetV2/Conv/Conv2D' , 'dtype' : 'INT16' }, { 'shape' : array ([ 2 , 30 ]), 'quantization' : [], 'min' : [ 0.0 ], 'max ' : [ 1.0 ], 'name' : 'MobilenetV2/Conv/Conv2D_bias' , 'dtype' : 'INT16' }, { 'shape' : array ([ 30 , 3 , 3 , 3 ]), 'quantization' : [( 0.004813921172171831 , 0 )], 'min' : [ - 0.5498989820480347 ], 'max' : [ 0.6113680005073547 ], 'name' : 'MobilenetV2/Conv/weights/read' , 'dtype' : 'INT8' }, { 'shape' : array ([ 1 , 513 , 513 , 3 ]), 'quantization' : [( 0.007843137718737125 , 128 )], 'min' : [ - 1 . 0 ], 'max' : [ 1.0 ], 'name' : 'sub_7' , 'dtype' : 'UINT8' } ] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578bTensor\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a name : Tensor\u540d\u79f0 shape : Tensor\u7684\u5f62\u72b6 dtype : Tensor\u7684\u6570\u636e\u7c7b\u578b quantization : Tensor\u7684scale\u548czero_point min : Tensor\u7684\u6700\u5c0f\u503c max : Tensor\u7684\u6700\u5927\u503c \u914d\u7f6einput_config.ini\u4e2d[OUTPUT_CONFIG]\u7684dequantizations\u4e3aTRUE\u65f6\uff0c\u4f1a\u5728\u8f6c\u6362Fixed\u6a21\u578b\u65f6\u5728\u589e\u52a0Fix2float\u7b97\u5b50\uff0c\u8be5\u7b97\u5b50\u4f1a\u8f6c\u6362\u5b9a\u70b9\u6570\u636e\u5230\u6d6e\u70b9\u6570\u636e\uff0c\u56e0\u6b64model.get_tensor_details()\u5c06\u4e0d\u518d\u6709'quantization'\u4fe1\u606f\u3002","title":"5.2.1   calibrator_custom.simulator\u65b9\u6cd5"},{"location":"module/User_Guide/IPU200M/Simulate.html#522-calibrator_customsim_simulator","text":"\u5bf9\u4e8e\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u540c\u65f6\u8f6c\u6362\u65f6\uff0c\u63d0\u4f9bcalibrator_custom.SIM_Simulator\uff0c\u65b9\u4fbf\u8fdb\u884c\u7b80\u5355\u5b9a\u4e49\u540e\uff0c\u7edf\u4e00\u8fd0\u884c\u3002 calibrator_custom.SIM_Simulator\u662f\u5df2\u7ecf\u5b9e\u73b0\u597d\u7684class\uff0c\u5f53\u4e2d\u53ea\u6709forward\u65b9\u6cd5\u672a\u5b9e\u73b0\uff0c\u4f7f\u7528\u65f6\u4ec5\u9700\u5b9e\u73b0\u8be5\u65b9\u6cd5\uff0c\u5373\u53ef\u8f6c\u6362\u5b8c\u6210\u3002 \u4e0b\u9762\u4ee5 SGS_IPU_SDK/Scripts/examples/sim_simulator.py \u4e3a\u4f8b\uff0c\u8bf4\u660ecalibrator_custom.SIM_Simulator\u7684\u4f7f\u7528\u65b9\u6cd5\uff1a import calibrator_custom class Net ( calibrator_custom . SIM_Simulator ): def __init__ ( self ): super () . __init__ () self . model = calibrator_custom . fixed_simulator ( model_path ) def forward ( self , x ): out_details = self . model . get_output_details () self . model . set_input ( 0 , x ) self . model . invoke () result_list = [] for idx in range ( len ( out_details )): result = self . model . get_output ( idx ) # for Fixed and Offline model if result . shape [ - 1 ] != out_details [ idx ][ 'shape' ][ - 1 ]: result = result [ ... , : out_details [ idx ][ 'shape' ][ - 1 ]] if out_details [ idx ][ 'dtype' ] == np . int16 : scale , _ = out_details [ idx ][ 'quantization' ] result = np . dot ( result , scale ) result_list . append ( result ) return result_list \u5b9a\u4e49forward\u65b9\u6cd5\uff0cforward\u7684\u53c2\u6570\u4e3a\u6a21\u578b\u8f93\u5165\uff0c\u5982\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u53ef\u589e\u52a0forward\u7684\u53c2\u6570\u3002 \u521b\u5efacalibrator_custom.SIM_Simulator\u7684\u5b9e\u4f8b net = Net () \u8c03\u7528calibrator_custom.SIM_Simulator\u5b9e\u4f8b\u7684\u65b9\u6cd5 result = net ( img_gen , num_process = 4 ) \u8c03\u7528calibrator_custom.SIM_Simulator\u5b9e\u4f8b\uff0c\u9700\u8981\u7ed9\u5b9a\u8f93\u5165\u56fe\u7247\u7684numpy.ndarray\u6216\u8005\u56fe\u7247\u751f\u6210\u5668\u3002 \u5f53num_process\u5927\u4e8e1\u65f6\uff0cimg_gen\u5fc5\u987b\u4e3a\u56fe\u7247\u751f\u6210\u5668\u3002 \u56fe\u7247\u751f\u6210\u5668\uff08img_gen\uff09 \u4e3a\u65b9\u4fbf\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u8f6c\u6362\u6a21\u578b\uff0c\u901a\u8fc7\u751f\u6210\u5668\u65b9\u4fbf\u7ec4\u7ec7\u8f93\u5165\u56fe\u7247\u7684\u5e8f\u5217\u3002\u5982\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u751f\u6210\u5668\u5e94\u8be5\u6309\u7167\u5b9a\u4e49forward\u65f6\u7684\u8f93\u5165\u987a\u5e8f\uff0c\u8fd4\u56de\u6709\u591a\u4e2anumpy.ndarray\u7684list\u3002 calibrator_custom.utils.image_preprocess_func\u4f7f\u7528\u9884\u5148\u5b9a\u4e49\u597d\u7684\u524d\u5904\u7406\u65b9\u6cd5 preprocess_func = calibrator_custom . utils . image_preprocess_func ( model_name ) def image_generator ( folder_path , preprocess_func , norm ): images = [ os . path . join ( folder_path , img ) for img in os . listdir ( folder_path )] for image in images : img = preprocess_func ( image , norm ) yield [ img ] img_gen = image_generator ( './images' , preprocess_func , False )","title":"5.2.2   calibrator_custom.SIM_Simulator"},{"location":"module/User_Guide/IPU200M/Special_Model_Conversion.html","text":"9.1. \u7070\u5ea6\u6a21\u578b\u8f6c\u6362\u8981\u70b9 \u00b6 \u7070\u5ea6\u6a21\u578b\uff0c\u6307\u8f93\u5165\u662f\u5355\u901a\u9053\u56fe\u7247\u7684\u6a21\u578b\uff0c\u5373\u8f93\u5165C\u7ef4\u5ea6\u4e0a\u4e3a1\u7684\u6a21\u578b\u3002 9.1.1. \u7070\u5ea6\u6a21\u578binput_config\u914d\u7f6e\u4fe1\u606f\u8981\u70b9 \u00b6 input_config.ini\u6587\u4ef6\u4f7f\u7528\u57282.2\u8282input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e\u6709\u8fc7\u4ecb\u7ecd\uff0c\u5bf9\u4e8e\u7070\u5ea6\u6a21\u578b\uff0c\u8981\u6ce8\u610f\u5982\u4e0b\u8981\u70b9\u3002 input_config.ini\u6587\u4ef6\u4e2d\u8fd9\u4e24\u4e2a\u914d\u7f6e\u5fc5\u987b\u5199\u6210 [INPUT_CONFIG] ...... training_input_formats = RGB; input_formats = GRAY; ...... \u5c06\u7070\u5ea6\u56fe\u7247\u7684\u6709\u6548\u6570\u636e\u53ea\u653e\u5728R\u901a\u9053\u4e0a\uff0c\u56e0\u6b64\u4ec5\u9700\u8bbe\u7f6eR\u901a\u9053\u7684mean\u503c\uff08mean_red\uff09 [INPUT_CONFIG] ...... mean_red = 127.5; mean_green = 0.0; mean_blue = 0.0; ;std_value parameter for image models, std_value = 1.0; 9.1.2. \u7070\u5ea6\u56fe\u7247\u8f93\u5165\u6a21\u578b\u524d\u5904\u7406\u65b9\u6cd5 \u00b6 \u7070\u5ea6\u56fe\u7247\u8f93\u5165\u7684\u524d\u5904\u7406\u65b9\u6cd5\u4e0e3.2\u8282\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\u8981\u6c42\u76f8\u540c\uff0c\u51fd\u6570\u5fc5\u987b\u5305\u542b2\u4e2a\u53c2\u6570\uff1a \u56fe\u7247\u8def\u5f84 \u5f52\u4e00\u5316\u6807\u8bb0\uff08norm=True\uff09 \u53c2\u8003\u4ee3\u7801 SGS_IPU_SDK/Scripts/calibrator/preprocess_method/caffe_lenet.py import cv2 import numpy as np def get_image ( img_path , resizeH = 28 , resizeW = 28 , norm = True , meanR = 33.318 , std = 1 ): img = cv2 . imread ( img_path , flags =- 1 ) try : img_dim = img . shape [ 2 ] except IndexError : img_dim = 1 if img_dim == 3 : img = cv2 . cvtColor ( img , cv2 . COLOR_BGR2GRAY ) elif img_dim == 4 : img = cv2 . cvtColor ( img , cv2 . COLOR_BGRA2GRAY ) img_norm = cv2 . resize ( img , ( resizeW , resizeH ), interpolation = cv2 . INTER_LINEAR ) if norm : img_norm = ( img_norm - meanR ) / std img_norm = np . expand_dims ( img_norm , axis = 2 ) dummy = np . zeros (( 28 , 28 , 2 )) img_norm = np . concatenate (( img_norm , dummy ), axis = 2 ) img_norm = img_norm . astype ( 'float32' ) return img_norm def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm ) Please Note: \u7070\u5ea6\u56fe\u7247\u8f93\u5165\u6a21\u578b\u5728PC \u4e0a\u8fd0\u884c\u4e0e\u5f00\u53d1\u677f\u4e0a\u8fd0\u884c\u4e0d\u540c\u3002\u5728PC \u4e0a\u9700\u8981\u5c06\u5355\u901a\u9053\u56fe\u7247\u6269\u7ef4\u81f33 \u901a\u9053\uff0c\u5e76\u5728\u540e\u4e24\u4e2a\u901a\u9053 \u88650\u3002\u5728\u5f00\u53d1\u677f\u4e0a\u9700\u8981YUV \u56fe\u7247\u8f93\u5165\u6570\u636e\u3002 9.2. RAWDATA_F32_NHWC\u4e0eRAWDATA_S16_NHWC\u8f93\u5165\u7684\u6a21\u578b \u00b6 RAWDATA_F32_NHWC \u4e0e RAWDATA_S16_NHWC \u53ef\u4ee5\u7528\u4e8e\u5206\u6bb5\u7f51\u7edc\u7684\u540e\u7aef\u7f51\u7edc\u6a21\u578b\u8f93\u5165\uff0c\u6216\u8005\u975e\u56fe\u7247\u6570\u636e\u8f93\u5165\u7684\u7f51\u7edc\u6a21\u578b\u3002 9.2.1.1 RAWDATA_F32_NHWC\u6a21\u578b\u8f6c\u6362 \u00b6 \u8f6c\u6362\u65b9\u5f0f\u4e0e\u524d\u8ff0\u4ecb\u7ecd\u57fa\u672c\u76f8\u540c\uff0c\u4f46\u914d\u7f6e input_config.ini \u4e2d\u7684 input_formats \u548c training_input_formats \u90fd\u586b\u5199 RAWDATA_F32_NHWC \uff0c quantizations \u914d\u7f6e\u4e3a TRUE \u3002 \u5f53input_config.ini\u4e2d\u7684 input_formats \u586b\u5199 RAWDATA_F32_NHWC \u65f6\uff0c\u6b64\u65f6input_config.ini\u4e2d mean_red \u3001 mean_green \u3001 mean_blue \u548c std_value \u4e0d\u4f1a\u518d\u5728\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u4e2d\u751f\u6548\uff0c\u6240\u6709\u524d\u5904\u7406\u8fc7\u7a0b\u90fd\u5c06\u5728\u8f93\u5165\u6a21\u578b\u524d\u5b8c\u6210\u3002 mean_red \u3001 mean_green \u3001 mean_blue \u548c std_value \u4e0d\u8981\u586b\u5199\u3002 \u6a21\u578b\u5728calibrator.py\u8f6c\u6362\u65f6\u4f7f\u7528\u6d6e\u70b9\u6570\u636e\uff0c\u56e0\u6b64\u8f6c\u6362\u65b9\u6cd5\u4e0e\u6b63\u5e38\u7f51\u7edc\u76f8\u540c\u3002\u53ef\u4ee5\u53c2\u8003\u7b2c3\u7ae0Calibrator\u7684\u4f7f\u7528\u65b9\u6cd5\u3002 9.2.1.2 RAWDATA_F32_NHWC\u6a21\u578b\u8fd0\u884c \u00b6 \u6d6e\u70b9\u6a21\u578b\u8fd0\u884c\u65f6\uff0c\u4f7f\u7528\u65b9\u6cd5\u4e0e\u8fd0\u884c\u56fe\u7247\u8f93\u5165\u7684\u6a21\u578b\u76f8\u540c\u3002 \u4f7f\u7528simulator.py\u8fd0\u884c\u5b9a\u70b9\u6a21\u578b\u65f6\uff0c\u524d\u5904\u7406\u65b9\u6cd5\u5e94\u4e0e\u6d6e\u70b9\u524d\u5904\u7406\u6a21\u578b\u4fdd\u6301\u4e00\u81f4\uff0c\u4ecd\u7136\u8f93\u5165norm=True\u65f6\u7684\u65b9\u6cd5\uff0c\u6240\u4ee5 RAWDATA_F32_NHWC \u7684\u7f51\u7edc\u524d\u5904\u7406Python\u6587\u4ef6\u7f16\u5199\u65f6norm\u4e3aTrue\u548cFalse\u7684\u5b9e\u73b0\u90fd\u5e94\u6309\u7167norm\u4e3aTrue\u65f6\u7f16\u5199\u3002 \u4f7f\u7528calibrator_custom.fixed_simulator\u65f6\uff0c\u8f93\u5165\u6570\u636e\u7c7b\u578b\u4e3afloat32\u3002 >>> import calibrator_custom >>> model = calibrator_custom . fixed_simulator ( './mobilenet_v2_fixed.sim' ) >>> input_details = model . get_input_details () >>> print ( input_details ) [{ 'shape' : array ([ 1 , 513 , 513 , 3 ]), 'name' : 'sub_7' , 'dtype' : < class ' numpy . float32 '>, ' index ': 0}] calibrator_custom.fixed_simulator\u4e2d\u68c0\u67e5\u4e86\u6a21\u578b\u7684\u8f93\u5165\u683c\u5f0f\uff0c\u8ba1\u7b97\u51fa\u9700\u8981\u8f93\u5165\u7684shape\u4fe1\u606f\u3002 \u5df2\u4f7f\u7528float\u7f51\u7edc\u7684\u524d\u5904\u7406\u5904\u7406\u5b8c\u56fe\u7247\uff0c\u8fd4\u56denumpy.ndarray\u683c\u5f0f\u7684\u53d8\u91cfimg >>> print ( img . shape ) ( 1 , 513 , 513 , 3 ) >>> print ( img . dtype ) float32 \u8f93\u5165\u6a21\u578b\u6570\u636e >>> model . set_input ( input_details [ 0 ][ 'index' ], img ) \u5728\u677f\u4e0a\u8fd0\u884c RAWDATA_F32_NHWC \u7684\u7f51\u7edc\u65f6\uff0c\u53ef\u4ee5\u53c2\u8003\u5982\u4e0b\u4ee3\u7801\uff0cFillInputData\u51fd\u6570\u7684\u8f93\u5165\u5206\u522b\u662f\u6d6e\u70b9\u8f93\u5165\u6570\u636e\u7684\u6570\u7ec4\uff0cMI_IPU\u8f93\u5165Tensor\u7ed3\u6784\u4f53\u548cMI_IPU\u7f51\u7edc\u63cf\u8ff0\u7ed3\u6784\u4f53\u3002 void FillInputData ( MI_FLOAT * pfData , MI_IPU_TensorVector_t & InputTensorVector , MI_IPU_SubNet_InputOutputDesc_t & desc ) { const MI_U32 H = desc . astMI_InputTensorDescs [ 0 ]. u32TensorShape [ 1 ]; const MI_U32 W = desc . astMI_InputTensorDescs [ 0 ]. u32TensorShape [ 2 ]; const MI_U32 C = desc . astMI_InputTensorDescs [ 0 ]. u32TensorShape [ 3 ]; MI_FLOAT * pTensorData = ( MI_FLOAT * ) InputTensorVector . astArrayTensors [ 0 ]. ptTensorData [ 0 ]; if ( desc . eElmFormat == MI_IPU_FORMAT_FP32 ) { memcpy ( pTensorData , pfData , H * W * C * sizeof ( MI_FLOAT )); } } \u6ce8\u610f\u4e8b\u9879 \u53ea\u6709\u4f7f\u7528 RAWDATA_F32_NHWC \u914d\u7f6e\u7684\u7f51\u7edc\u5728\u677f\u4e0amemcpy\u5b8c\u6570\u636e\u540e\u4e0d\u8981\u8c03\u7528MI_SYS_FlushInvCache\u3002 9.2.2.1 RAWDATA_S16_NHWC\u6a21\u578b\u8f6c\u6362 \u00b6 \u4f7f\u7528\u8be5\u79cd\u65b9\u5f0f\u8f93\u5165\u65f6\uff0c\u7531\u4e8e\u786c\u4ef6\u7684\u9650\u5236\u6761\u4ef6\uff0c\u6240\u4ee5\u9700\u8981\u63d0\u524d\u6392\u5217\u597d\u6570\u636e\u540e\u624d\u80fd\u8fdb\u884c\u8ba1\u7b97\u3002 \u8f6c\u6362\u65b9\u5f0f\u4e0e\u524d\u8ff0\u4ecb\u7ecd\u57fa\u672c\u76f8\u540c\uff0c\u4f46\u914d\u7f6e input_config.ini \u4e2d\u7684 training_input_formats \u548c input_formats \u65f6\u90fd\u586b\u5199 RAWDATA_S16_NHWC \u3002 \u5f53input_config.ini\u4e2d\u7684 training_input_formats \u548c input_formats \u90fd\u586b\u5199 RAWDATA_S16_NHWC \u65f6\uff0c\u6b64\u65f6input_config.ini\u4e2d mean_red \u3001 mean_green \u3001 mean_blue \u548c std_value \u4e0d\u4f1a\u518d\u5728\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u4e2d\u751f\u6548\uff0c\u6240\u6709\u524d\u5904\u7406\u8fc7\u7a0b\u90fd\u5c06\u5728\u8f93\u5165\u6a21\u578b\u524d\u5b8c\u6210\u3002 mean_red \u3001 mean_green \u3001 mean_blue \u548c std_value \u4e0d\u8981\u586b\u5199\u3002 \u7531\u4e8e\u6a21\u578b\u5728calibrator.py\u8f6c\u6362\u65f6\u4ecd\u7136\u4f7f\u7528\u6d6e\u70b9\u6570\u636e\uff0c\u56e0\u6b64\u8f6c\u6362\u65b9\u6cd5\u4e0e\u6b63\u5e38\u7f51\u7edc\u76f8\u540c\u3002\u53ef\u4ee5\u53c2\u8003\u7b2c3\u7ae0Calibrator\u7684\u4f7f\u7528\u65b9\u6cd5\u3002 9.2.2.2 RAWDATA_S16_NHWC\u6a21\u578b\u8fd0\u884c \u00b6 \u6d6e\u70b9\u6a21\u578b\u8fd0\u884c\u65f6\uff0c\u4f7f\u7528\u65b9\u6cd5\u4e0e\u8fd0\u884c\u56fe\u7247\u8f93\u5165\u7684\u6a21\u578b\u76f8\u540c\u3002 \u4f7f\u7528simulator.py\u8fd0\u884c\u5b9a\u70b9\u6a21\u578b\u65f6\uff0c\u524d\u5904\u7406\u65b9\u6cd5\u5e94\u4e0e\u6d6e\u70b9\u524d\u5904\u7406\u6a21\u578b\u4fdd\u6301\u4e00\u81f4\uff0c\u4ecd\u7136\u8f93\u5165norm=True\u65f6\u7684\u65b9\u6cd5\uff0c\u6240\u4ee5 RAWDATA_S16_NHWC \u7684\u7f51\u7edc\u524d\u5904\u7406Python\u6587\u4ef6\u7f16\u5199\u65f6norm\u4e3aTrue\u548cFalse\u7684\u5b9e\u73b0\u90fd\u5e94\u6309\u7167norm\u4e3aTrue\u65f6\u7f16\u5199\u3002simulator.py\u4f1a\u8bfb\u5165\u539f\u6d6e\u70b9\u6570\u636e\uff0c\u8fdb\u884c\u53cd\u91cf\u5316\u548c\u5bf9\u9f50\u6392\u5217\u540e\u8f93\u5165\u7ed9\u5b9a\u70b9\u6a21\u578b\u3002 \u4f7f\u7528calibrator_custom.fixed_simulator\u65f6\uff0c\u5b9a\u70b9\u5316\u548c\u5bf9\u9f50\u6392\u5217\u8fc7\u7a0b\u9700\u8981\u81ea\u884c\u5b8c\u6210\u3002\u4ee5\u4e0b\u4e3a\u4f8b\uff0c\u8bf4\u660e\u5b9a\u70b9\u5316\u548c\u5bf9\u9f50\u6392\u5217\u8fc7\u7a0b\u7684\u505a\u6cd5\u3002 >>> import calibrator_custom >>> model = calibrator_custom . fixed_simulator ( './mobilenet_v2_s16_fixed.sim' ) >>> input_details = model . get_input_details () >>> print ( input_details ) [{ 'input_formats' : 'RAWDATA_S16_NHWC' , 'training_input_formats' : 'RAWDATA_S16_NHWC' , 'shape' : array ([ 1 , 513 , 513 , 8 ]), 'name' : 'sub_7' , 'dtype' : < class ' numpy . int16 '>, ' index ': 0, ' quantization ': (3.0518509447574615e-05, 0)}] calibrator_custom.fixed_simulator\u4e2d\u68c0\u67e5\u4e86\u6a21\u578b\u7684\u8f93\u5165\u683c\u5f0f\uff0c\u8ba1\u7b97\u51fa\u9700\u8981\u8f93\u5165\u7684shape\u4fe1\u606f\u3002 \u5df2\u4f7f\u7528float\u7f51\u7edc\u7684\u524d\u5904\u7406\u5904\u7406\u5b8c\u56fe\u7247\uff0c\u8fd4\u56denumpy.ndarray\u683c\u5f0f\u7684\u53d8\u91cfimg >>> print ( img . shape ) ( 1 , 513 , 513 , 3 ) \u5b9a\u70b9\u5316img\u7684\u6570\u636e\uff0c\u5e76\u8f6c\u6362\u6570\u636e\u7c7b\u578b >>> ins , zp = input_details [ 0 ][ 'quantization' ] >>> img = ( img / ins + zp ) . astype ( input_details [ 0 ][ 'dtype' ]) >>> print ( img . dtype ) int16 \u5bf9\u9f50\u6392\u5217img\u6570\u636e\uff0c\u4f7f\u4e4b\u7b26\u5408\u8f93\u5165\u6761\u4ef6\uff0c\u5bf9\u9f50\u4ec5\u9488\u5bf9\u8f93\u5165\u7684\u6700\u540e\u4e00\u4e2a\u7ef4\u5ea6\u4f1a\u5411\u4e0a\u5bf9\u9f50\u3002 >>> img_s16 = np . zeros ( input_details [ 0 ][ 'shape' ]) . astype ( 'int16' ) >>> img_s16 [:, :, :, : 3 ] = img >>> model . set_input ( input_details [ 0 ][ 'index' ], img_s16 ) \u7531\u4e8e\u4e0a\u8ff0\u64cd\u4f5c\u6b65\u9aa4\u5728simulator.py\u4e2d\u5df2\u7ecf\u505a\u5b8c\uff0c\u6240\u4ee5\u4f7f\u7528\u4f7f\u7528simulator.py\u8fd0\u884c\u5b9a\u70b9\u6a21\u578b\u8fd0\u884c\u65f6\uff0c\u524d\u5904\u7406\u65b9\u6cd5\u5e94\u4e0e\u6d6e\u70b9\u524d\u5904\u7406\u6a21\u578b\u4fdd\u6301\u4e00\u81f4\u3002 \u5728\u677f\u4e0a\u8fd0\u884c RAWDATA_S16_NHWC \u7684\u7f51\u7edc\u65f6\uff0c\u4e5f\u9700\u8981\u5b8c\u6210\u8f93\u5165\u6570\u636e\u7684\u5b9a\u70b9\u5316\u548c\u5bf9\u9f50\u6392\u5217\u8fc7\u7a0b\uff0c\u53ef\u4ee5\u53c2\u8003\u5982\u4e0b\u4ee3\u7801\uff0cFillInputData\u51fd\u6570\u7684\u8f93\u5165\u5206\u522b\u662f\u6d6e\u70b9\u8f93\u5165\u6570\u636e\u7684\u6570\u7ec4\uff0cMI_IPU\u8f93\u5165Tensor\u7ed3\u6784\u4f53\u548cMI_IPU\u7f51\u7edc\u63cf\u8ff0\u7ed3\u6784\u4f53\u3002 #define ALIGN_UP(x, align) (((x) + ((align) - 1)) & ~((align) - 1)) #define CLIP3(x, min, max) ((x) < (min) ? (min) : ((x) > (max) ? (max) : (x))) void FillInputData ( MI_FLOAT * pfData , MI_IPU_TensorVector_t & InputTensorVector , MI_IPU_SubNet_InputOutputDesc_t & desc ) { const MI_U32 H = desc . astMI_InputTensorDescs [ 0 ]. u32TensorShape [ 1 ]; const MI_U32 W = desc . astMI_InputTensorDescs [ 0 ]. u32TensorShape [ 2 ]; const MI_U32 C = desc . astMI_InputTensorDescs [ 0 ]. u32TensorShape [ 3 ]; const MI_U32 inner_size = ALIGN_UP ( C , 8 ); const MI_U32 outer_size = H * W ; const MI_FLOAT Scale = desc . astMI_InputTensorDescs [ 0 ]. fScalar ; const MI_S64 ZeroPoint = desc . astMI_InputTensorDescs [ 0 ]. s64ZeroPoint ; MI_S16 * pData = ( MI_S16 * ) InputTensorVector . astArrayTensors [ 0 ]. ptTensorData [ 0 ]; for ( MI_U32 i = 0 ; i < outer_size ; i ++ ) { for ( MI_U32 j = 0 ; j < C ; j ++ ) { * ( pData + i * inner_size + j ) = ( MI_S16 ) CLIP3 ( round ( pfData [ i * C + j ] / Scale + ZeroPoint ), -32768 , 32767 ); } } MI_SYS_FlushInvCache ( pData , inner_size * outer_size * sizeof ( MI_S16 )); } 9.3. \u5206\u6bb5\u7f51\u7edc\u8f6c\u6362\u8981\u70b9 \u00b6 \u7f51\u7edc\u4e2d\u6709\u4e0d\u652f\u6301\u7684Layer\uff0c\u53ef\u5c06\u5b8c\u6574\u7f51\u7edc\u5206\u6bb5\u6267\u884c\u3002\u524d\u4e00\u6bb5\u7f51\u7edc\u8fd0\u884c\u5b8c\u6210\u540e\u5c06\u7ed3\u679c\u8f93\u5165\u7ed9\u81ea\u5b9a\u4e49\u5b9e\u73b0\u5c42\uff0c\u518d\u5c06\u81ea\u5b9a\u4e49\u5c42\u7684\u8f93\u51fa\u7ed3\u679c\u4f5c\u4e3a\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u8fd0\u884c\u3002\u4e0b\u9762\u4ee5Faster_RCNN\u7f51\u7edc\u4e3a\u4f8b\uff0c\u8bf4\u660e\u5982\u4f55\u8f6c\u6362\u5206\u6bb5\u7f51\u7edc\u3002 9.3.1 \u7f51\u7edc\u5207\u5206 \u00b6 Faster_RCNN\u7f51\u7edc\u4e2d\u7684Proposal Layer\u662f\u4e0d\u652f\u6301\u7684\uff0c\u6211\u4eec\u9700\u8981\u5c06\u7f51\u7edc\u4ece\u8be5\u5c42\u5206\u6210\u4e24\u6bb5\u3002 \u5982\u4e0b\u56fe\u6240\u793a\uff0c\u56fe\u4e2d\u7684Python Layer\u662fProposal Layer\uff0c\u901a\u8fc7\u4fee\u6539prototxt\u6587\u4ef6\uff0c\u5c06\u7f51\u7edc\u4eceProposal Layer\u5904\u62c6\u6210\u4e24\u6bb5\uff1a\u7b2c\u4e00\u6bb5\u7f51\u7edc\u5c06\u67093\u4e2a\u8f93\u51fa\uff0c\u5176\u4e2drpn_cls_prob_reshape\u548crpn_bbox_pred\u4e24\u4e2a\u8f93\u51fa\u7ed3\u679c\u5c06\u4f5c\u4e3aProposal Layer\u7684\u8f93\u5165\uff0cconv5_3\u548cProposal Layer\u7684\u8f93\u51fa\u5c06\u4f5c\u4e3a\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u3002 \u7b2c\u4e00\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u662f\u56fe\u7247\u6570\u636e\uff0cinput_config.ini\u548c\u524d\u5904\u7406python\u6587\u4ef6\u6309\u71672.2\u548c3.2\u8282\u5904\u7406\u3002\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u4e0d\u662f\u56fe\u7247\u6570\u636e\uff0c\u53ef\u4ee5\u53c2\u80039.2\u8282\u5bf9\u4e24\u4e2a\u8f93\u5165\u540c\u65f6\u91c7\u7528RAWDATA_S16_NHWC\u7684\u683c\u5f0f\u914d\u7f6e\u3002\u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u901a\u8fc7 ConvertTool.py\u5206\u522b\u5c06\u4e24\u4e2a\u7f51\u7edc\u8f6c\u6362\u6210float.sim\u6a21\u578b\u6587\u4ef6\u3002\u5177\u4f53\u914d\u7f6e\u6587\u4ef6\u548c\u8f6c\u6362\u547d\u4ee4\u5982\u4e0b\uff1a \u7b2c\u4e00\u6bb5\u7f51\u7edc\uff1a python3 ~/SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py caffe \\ --model_file test_stageone.prototxt \\ --weight_file VGG16_faster_rcnn_final.caffemodel \\ --input_arrays data \\ --output_arrays rpn_cls_prob_reshape,rpn_bbox_pred,conv5_3 \\ --input_config input_config.ini \\ --output_file faster_rcnn_main_float.sim [INPUT_CONFIG] inputs = data; input_formats = BGR; quantizations = TRUE; mean_red = 122.7717; mean_green = 115.9465; mean_blue = 102.9801; std_value = 1; [OUTPUT_CONFIG] outputs = rpn_cls_prob_reshape,rpn_bbox_pred,conv5_3; dequantizations = TRUE,TRUE,FALSE; \u8bbe\u5b9aconv5_3 \u8fd9\u4e2a\u8f93\u51fa\u7684dequantizations \u4e3aFALSE\uff0c\u7531\u4e8e\u8be5\u8f93\u51fa\u76f4\u63a5\u8f93\u5165\u7b2c\u4e8c\u6bb5\u7f51\u7edc\uff0c\u6240\u4ee5\u5728\u677f\u7aef\u8fd0\u884c\u65f6\u4e0d\u9700\u8981 \u8f6c\u6362\u6210float\uff0c\u53ef\u4ee5\u76f4\u63a5\u5c06\u8be5\u8f93\u51fa\u9001\u8fdb\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u3002 \u7b2c\u4e8c\u6bb5\u7f51\u7edc\uff1a ROIPooling\u7684rois\u8f93\u5165\u7ef4\u5ea6\u4e3a\uff08N\u00d75\uff09\uff0c\u5f53\u540e\u6bb5\u7f51\u7edc\u5168\u90e8\u662fInnerProduct\u65f6\uff0cN\u624d\u53ef\u4ee5\u8bbe\u7f6e\u4e3a300\uff08\u5982\u4e0a\u56fe\u6240\u793a\uff09\uff0c\u5982\u679c\u540e\u6bb5\u7f51\u7edc\u4e2d\u6709\u5377\u79ef\u65f6\uff0cN\u4ec5\u53ef\u4ee5\u8bbe\u7f6e\u4e3a1\uff0c\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u9700\u8981\u5faa\u73af\u6267\u884cN\u6b21\u3002 python3 ~/SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py caffe \\ --model_file second_stage.prototxt \\ --weight_file VGG16_faster_rcnn_final.caffemodel \\ --input_arrays conv5_3,rois \\ --output_arrays cls_prob,bbox_pred \\ --input_config input_config_stage2.ini \\ --output_file faster_rcnn_stage2_float.sim [INPUT_CONFIG] inputs = conv5_3,rois input_formats = RAWDATA_F32_NHWC,RAWDATA_F32_NHWC; quantizations = TRUE,TRUE; [OUTPUT_CONFIG] outputs = cls_prob,bbox_pred; dequantizations = TRUE,TRUE; 9.3.2 \u8f6c\u6362\u7f51\u7edc \u00b6 \u5de5\u5177\u8def\u5f84 SGS_IPU_SDK/Scripts/examples/caffe_faster_rcnn/faster_rcnn_calibrator.py \u8be5\u5de5\u5177\u4f5c\u4e3aFaster_RCNN\u7f51\u7edc\u8f6c\u6362demo\uff0c\u76f4\u63a5\u8fd0\u884c\u5373\u53ef\u5c06\u4e24\u6bb5\u7f51\u7edc\u76f4\u63a5\u8f6c\u6362\u6210fixed\u6a21\u578b\u3002 python3 ~/SGS_IPU_SDK/Scripts/examples/caffe_faster_rcnn/faster_rcnn_calibrator.py \\ -i ~/SGS_Models/resource/detection/voc_calibration_set32/ \\ -m0 faster_rcnn_main_float.sim \\ -m1 faster_rcnn_stage2_float.sim \\ --input_config0 input_config.ini \\ --input_config1 input_config_stage2.ini \u5728\u8f6c\u6362\u5206\u6bb5\u7f51\u7edc\u65f6\uff0c\u9996\u5148\u5b9a\u4e49\u7f51\u7edc\u7684\u4e24\u6bb5\u7f51\u7edc\uff0c\u518d\u7ec4\u7ec7\u4e24\u6bb5\u7f51\u7edc\u7684\u8fd0\u884c\u65b9\u5f0f\uff0c\u5b9a\u4e49\u5728forward\u65b9\u6cd5\u91cc\uff1a class Net ( calibrator_custom . SIM_Calibrator ): def __init__ ( self , main_model_path , main_input_config , second_model_path , second_input_config ): super () . __init__ () self . main_model = calibrator_custom . calibrator ( main_model_path , main_input_config ) self . second_model = calibrator_custom . calibrator ( second_model_path , second_input_config ) self . rpn = rpn . ProposalLayer () def forward ( self , x ): out_details = self . main_model . get_output_details () input_data , im_scale = fill_inputImg2main ( x ) self . main_model . set_input ( 0 , input_data ) self . main_model . invoke () result_list = [] for idx , _ in enumerate ( out_details ): result = self . main_model . get_output ( idx ) result_list . append ( result ) im_info = np . array ([ x . shape [ 0 ], x . shape [ 1 ], im_scale ]) . reshape ( 1 , 3 ) bottom = [ result_list [ 0 ], result_list [ 1 ], im_info ] roi = self . rpn . forward ( bottom ) out2_details = self . second_model . get_output_details () self . second_model . set_input ( 0 , result_list [ 2 ]) self . second_model . set_input ( 1 , roi ) self . second_model . invoke () second_result = [] for idx , _ in enumerate ( out2_details ): result = self . second_model . get_output ( idx ) second_result . append ( result ) return second_result Faster_RCNN\u7f51\u7edc\u4e2d\uff0c\u4f7f\u7528\u4e86\u81ea\u5b9a\u4e49\u7684rpn\u5c42\uff0c\u56e0\u6b64\u5c06\u7b2c\u4e00\u6bb5\u7f51\u7edc\u7684\u7b2c1\u4e2a\u548c\u7b2c2\u4e2a\u8f93\u51fa\u4ee5\u53ca\u56fe\u7247\u4fe1\u606f\u4f5c\u4e3arpn\u5c42\u7684\u8f93\u5165\uff0c\u7b2c\u4e00\u6bb5\u7f51\u7edc\u7684\u7b2c3\u4e2a\u8f93\u51fa\u548crpn\u5c42\u7684\u8f93\u51faroi\u4f5c\u4e3a\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u3002 \u6700\u540e\u8c03\u7528Net\u7684convert\u65b9\u6cd5\uff0c\u540c\u65f6\u751f\u6210\u4e24\u6bb5\u7f51\u7edc\u7684fixed\u6a21\u578b\u3002 net = Net () net . convert ( img_gen , num_process = num_subsets , fix_model = [ out_main_model , out_second_model ]) 9.3.3 \u8fd0\u884c\u7f51\u7edc \u00b6 \u5de5\u5177\u8def\u5f84 SGS_IPU_SDK/Scripts/examples/caffe_faster_rcnn/faster_rcnn_simulator.py \u8be5\u5de5\u5177\u4f5c\u4e3aFaster_RCNN\u7f51\u7edc\u8fd0\u884cdemo\uff0c\u76f4\u63a5\u8fd0\u884c\u4e24\u6bb5\u7f51\u7edc\u3002 python3 ~/SGS_IPU_SDK/Scripts/examples/caffe_faster_rcnn/faster_rcnn_simulator.py \\ -i ~/SGS_Models/resource/detection/004545.jpg \\ -m0 faster_rcnn_main_float.sim \\ -m1 faster_rcnn_stage2_float.sim \\ -t Float \u8fd0\u884c\u4e24\u6bb5\u6a21\u578b\u7684\u65b9\u6cd5\u4e0e\u8f6c\u6362\u7f51\u7edc\u65f6\u7c7b\u4f3c\u3002 class Net ( calibrator_custom . SIM_Simulator ): def __init__ ( self , main_model_path , second_model_path , phase ): super () . __init__ () if phase == 'Float' : self . main_model = calibrator_custom . float_simulator ( main_model_path ) self . second_model = calibrator_custom . float_simulator ( second_model_path ) self . norm = True elif phase == 'Fixed' : self . main_model = calibrator_custom . fixed_simulator ( main_model_path ) self . second_model = calibrator_custom . fixed_simulator ( second_model_path ) self . norm = False else : self . main_model = calibrator_custom . offline_simulator ( main_model_path ) self . second_model = calibrator_custom . offline_simulator ( second_model_path ) self . norm = False self . rpn = rpn . ProposalLayer () def forward ( self , x ): # Run main model out_details = self . main_model . get_output_details () input_data , im_scale = fill_inputImg2main ( x , norm = norm ) self . main_model . set_input ( 0 , input_data ) self . main_model . invoke () def forward ( self , x ): out_details = self . main_model . get_output_details () input_data , im_scale = fill_inputImg2main ( x ) self . main_model . set_input ( 0 , input_data ) self . main_model . invoke () result_list = [] for idx , _ in enumerate ( out_details ): result = self . main_model . get_output ( idx ) result_list . append ( result ) im_info = np . array ([ x . shape [ 0 ], x . shape [ 1 ], im_scale ]) . reshape ( 1 , 3 ) bottom = [ result_list [ 0 ], result_list [ 1 ], im_info ] roi = self . rpn . forward ( bottom ) out2_details = self . second_model . get_output_details () self . second_model . set_input ( 0 , result_list [ 2 ]) if self . norm : self . second_model . set_input ( 1 , roi ) else : self . second_model . set_input ( 1 , roi ) self . second_model . invoke () second_result = [] for idx , _ in enumerate ( out2_details ): result = self . second_model . get_output ( idx ) second_result . append ( result ) return second_result \u8fd0\u884c\u7f51\u7edc\u65f6\u5148\u521b\u5efaNet\u7684\u5b9e\u4f8b\uff0c\u7136\u540e\u8c03\u7528\u81ea\u8eab\u7684\u65b9\u6cd5\u5c31\u53ef\u4ee5\u8fd0\u884c\u3002\u5177\u4f53\u53c2\u80035.2.2\u8282\u3002 net = Net () results = net ( img_gen , num_process = num_subsets ) 9.4. \u591a\u8f93\u5165\u7f51\u7edc\u8f6c\u6362\u8981\u70b9 \u00b6 9.4.1 \u6784\u5efa\u591a\u8f93\u5165\u7f51\u7edc \u00b6 \u4f7f\u7528Tensorflow1.14.0\u6784\u5efa\u4e00\u4e2a\u53cc\u8f93\u5165\u7f51\u7edc\uff0c\u8be5\u7f51\u7edc\u7528\u6765\u505a\u77e9\u9635\u4e58\u6cd5\uff0c\u8ba1\u7b97\u4e24\u4e2a\u5411\u91cf\u7684\u5185\u79ef\u3002 import tensorflow as tf import numpy as np SHAPE_DIMS = 256 input_np0 = np . random . rand ( 1 , SHAPE_DIMS ) . astype ( np . float32 ) input_np1 = np . random . rand ( 1 , SHAPE_DIMS ) . astype ( np . float32 ) input_0 = tf . placeholder ( dtype = tf . float32 , shape = ( 1 , SHAPE_DIMS ), name = 'input0' ) input_1 = tf . placeholder ( dtype = tf . float32 , shape = ( 1 , SHAPE_DIMS ), name = 'input1' ) out = tf . matmul ( input_0 , tf . reshape ( input_1 , ( SHAPE_DIMS , 1 )), name = 'output' ) with tf . Session () as sess : results = sess . run ( out , feed_dict = { input_0 : input_np0 , input_1 : input_np1 }) # Convert .pb output_graph_def = tf . graph_util . convert_variables_to_constants ( sess , sess . graph_def , [ 'output' ] ) with tf . gfile . GFile ( 'matmul.pb' , 'wb' ) as f : f . write ( output_graph_def . SerializeToString ()) print ( 'matmul.pb Saved!' ) # convert to .tflite tflite_model = tf . lite . TFLiteConverter . from_frozen_graph ( 'matmul.pb' , [ 'input0' , 'input1' ], [ 'output' ] ) tflite_model = tflite_model . convert () with open ( 'matmul.tflite' , 'wb' ) as f : f . write ( tflite_model ) print ( 'matmul.tflite Saved!' ) \u8fd0\u884c\u8be5\u811a\u672c\uff0c\u5c31\u80fd\u751f\u6210matmul.tflite\u6a21\u578b\u6587\u4ef6\u4e86\u3002 9.4.2 \u8f6c\u6362\u591a\u8f93\u5165\u7f51\u7edc \u00b6 \u4e0b\u9762\u5c06matmul.tflte\u8f6c\u6362\u6210\u53ef\u4ee5\u5728\u677f\u4e0a\u8fd0\u884c\u7684\u6a21\u578b\u6587\u4ef6\u3002 matmul.tflite\u6a21\u578b\u4e0d\u662f\u56fe\u7247\u8f93\u5165\uff0c\u56e0\u6b64\u914d\u7f6einput_config.ini\u6587\u4ef6\u8bf7\u53c2\u80039.2\u8282\u3002 \u914d\u7f6einput_config.ini\u811a\u672c [INPUT_CONFIG] inputs = input0,input1; input_formats = RAWDATA_F32_NHWC,RAWDATA_F32_NHWC; quantization = TRUE,TRUE; [OUTPUT_CONFIG] outputs = output; dequantization = TRUE; \u8bf7\u5148\u5728SGS_IPU_SDK\u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK source cfg_env.sh \u7136\u540e\u4f7f\u7528ConvertTool\u5de5\u5177\u8f6c\u6362matmul.tflite\uff1a python3 ~/SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py tflite \\ --model_file /path/to/matmul.tflite \\ --input_config /path/to/input_config.ini \\ --output_file /path/to/matmul_float.sim \u591a\u8f93\u5165\u7f51\u7edc\u7684calibrator\u8fc7\u7a0b\u9700\u8981\u4f7f\u7528calibrator_custom\u6a21\u5757\uff0c\u8be6\u7ec6\u53ef\u4ee5\u53c2\u80033.4\u8282\u3002\u4f46\u4e0e3.4.2\u8282\u4e2d\u4e0d\u540c\u7684\u662f\u8f93\u5165\u7684\u751f\u6210\u5668\u9700\u8981\u914d\u7f6e\u6210\u53cc\u8f93\u5165\u3002\u5c06\u4ee5\u4e0b\u793a\u4f8b\u6587\u4ef6\u4fdd\u5b58\u4e3amatmul_calibrator.py\u3002 # -*- coding: utf-8 -*- import calibrator_custom import os import sys import numpy as np import argparse from calibrator_custom import utils class Net ( calibrator_custom . SIM_Calibrator ): def __init__ ( self , model_path , input_config ): super () . __init__ () self . model = calibrator_custom . calibrator ( model_path , input_config ) def forward ( self , x , y ): out_details = self . model . get_output_details () self . model . set_input ( 0 , x ) self . model . set_input ( 1 , y ) self . model . invoke () result_list = [] for idx in range ( len ( out_details )): result = self . model . get_output ( idx ) result_list . append ( result ) return result_list def arg_parse (): parser = argparse . ArgumentParser ( description = 'Calibrator Tool' ) parser . add_argument ( '-m' , '--model' , type = str , required = True , help = 'Model path.' ) parser . add_argument ( '--input_config' , type = str , required = True , help = 'Input config path.' ) parser . add_argument ( '--quant_level' , type = str , default = 'L5' , choices = [ 'L1' , 'L2' , 'L3' , 'L4' , 'L5' ], help = 'Indicate Quantilization level. The higher the level, \\ the slower the speed and the higher the accuracy.' ) parser . add_argument ( '--num_process' , default = 10 , type = int , help = 'Amount of processes run at same time.' ) parser . add_argument ( '-o' , '--output' , default = None , type = str , help = 'Output path for fixed model.' ) return parser . parse_args () def data_gen (): calibrator_data = np . random . rand ( 100 , 1 , 256 ) . astype ( np . float32 ) bench_data = np . random . rand ( 100 , 1 , 256 ) . astype ( np . float32 ) for i , j in zip ( calibrator_data , bench_data ): yield [ i , j ] def main (): args = arg_parse () model_path = args . model input_config = args . input_config quant_level = args . quant_level num_subsets = args . num_process output = args . output if not os . path . exists ( model_path ): raise FileNotFoundError ( 'No such {} model' . format ( model_path )) if not os . path . exists ( input_config ): raise FileNotFoundError ( 'input_config.ini file not found.' ) net = Net ( model_path , input_config ) print ( net ) # random generate data # must change real data when using img_gen = data_gen () print ( ' \\033 [31m[WARNING] random generate data, \\ must change real data when using! \\033 [0m' , file = sys . stderr ) out_model = utils . get_out_model_name ( model_path , output ) net . convert ( img_gen , num_process = num_subsets , quant_level = quant_level , fix_model = [ out_model ]) if __name__ == '__main__' : main () \u4f7f\u7528\u7f16\u5199\u7684matmul_calibrator.py\u8f6c\u6362matmul_float.sim\uff0c\u751f\u6210matmul_fixed.sim\u3002 python3 matmul_calibrator.py \\ -m /path/to/matmul_float.sim \\ --input_config /path/to/input_config.ini \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u91cf\u5316\u8be5\u6a21\u578b\u7684\u8f93\u5165\u6570\u636e\u4e00\u5b9a\u8981\u6362\u6210\u771f\u5b9e\u6570\u636e\uff0c\u4e0d\u7136\u7edf\u8ba1\u751f\u6210\u7684fixed\u6a21\u578b\u7cbe\u5ea6\u4f1a\u51fa\u9519\u3002\u5982\u679c\u5355\u72ec\u91cf\u5316\u8be5\u6a21\u578b\u6bd4\u8f83\u56f0\u96be\uff0c\u6bd4\u5982\u5b83\u662f\u63a5\u5728\u67d0\u4e2a\u7f51\u7edc\u540e\u9762\u8fd0\u884c\u7684\uff0c\u53ef\u4ee5\u53c2\u80039.4\u8282\uff0c\u6309\u7167\u591a\u6bb5\u7f51\u7edc\u5904\u7406\uff0c\u5728calibrator_custom.SIM_Calibrator\u7c7b\u91cc\u5b9a\u4e49\u591a\u4e2a\u6a21\u578b\uff0c\u53ef\u4ee5\u76f4\u63a5\u751f\u6210\u51fa\u591a\u4e2afixed\u7f51\u7edc\u3002 \u6700\u540e\u4f7f\u7528compiler.py\u8f6c\u6362matmul_fixed.sim\uff0c\u751f\u6210matmul_fixed.sim_sgsimg.img\u3002 9.4.3 \u5728PC\u4e0a\u8fd0\u884c\u591a\u8f93\u5165\u7f51\u7edc \u00b6 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd0\u884cFloat\u7684\u7f51\u7edc\u65f6\uff0c\u8f93\u5165\u6570\u636e\u7684type\u9700\u8981\u4e3afloat32\uff0c\u8f93\u5165\u6570\u636e\u7684shape\u4e0e\u6a21\u578b\u8f93\u5165shape\u76f8\u540c\u3002\u4f46\u662f\u7531\u4e8ematmul\u7684Fixed\u548cOffline\u6a21\u578b\u662fRAWDATA_S16_NHWC\u8f93\u5165\uff0c\u8f93\u5165\u6570\u636e\u9700\u8981\u5148\u53cd\u91cf\u5316\u5230int16\uff0c\u7136\u540e\u5bf9\u9f50\u540e\u624d\u80fd\u8f93\u5165\u5230\u6a21\u578b\u3002\u6240\u4ee5\u5b9a\u4e49calibrator_custom.SIM_Simulator\u7684forward\u51fd\u6570\u65f6\u9700\u8981\u6ce8\u610f\u8be5\u6a21\u578b\u7684\u7279\u6b8a\u6027\uff1a class Net ( calibrator_custom . SIM_Simulator ): def __init__ ( self , model_path , phase ): super () . __init__ () if phase == 'Float' : self . model = calibrator_custom . float_simulator ( model_path ) elif phase == 'Fixed' : self . model = calibrator_custom . fixed_simulator ( model_path ) else : self . model = calibrator_custom . offline_simulator ( model_path ) def forward ( self , x , y ): out_details = self . model . get_output_details () self . model . set_input ( 0 , x ) self . model . set_input ( 1 , y ) self . model . invoke () result_list = [] for idx , _ in enumerate ( out_details ): result = self . model . get_output ( idx ) result_list . append ( result ) return result_list 9.4.4 \u5728\u677f\u4e0a\u8fd0\u884c\u591a\u8f93\u5165\u7f51\u7edc \u00b6 \u7531\u4e8ematmul_fixed.sim_sgsimg.img\u7f51\u7edc\u8f93\u5165\u662f RAWDATA_F32_NHWC \uff0c\u53ef\u4ee5\u53c2\u80039.2.2\u8282\u4e2dFillInputData\u51fd\u6570\uff0c\u4e0e\u5728PC\u4e0a\u76f8\u540c\uff0c\u9700\u8981\u5c06\u8f93\u5165\u6570\u636e\u5904\u7406\u540e\u518d\u9001\u5165\u6a21\u578b\u3002 \u591a\u8f93\u5165\u6a21\u578b\u53ea\u9700\u5728FillInputData\u51fd\u6570\u4e2d\u589e\u52a0\u5bf9\u6a21\u578b\u7684\u7b2c\u4e8c\u4e2a\u8f93\u5165\u704c\u5165\u6570\u636e\uff1a // input0 I_FLOAT * pData0 = ( MI_FLOAT * ) InputTensorVector . astArrayTensors [ 0 ]. ptTensorData [ 0 ]; // input1 I_FLOAT * pData1 = ( MI_FLOAT * ) InputTensorVector . astArrayTensors [ 1 ]. ptTensorData [ 0 ];","title":"Special Model Conversion"},{"location":"module/User_Guide/IPU200M/Special_Model_Conversion.html#91","text":"\u7070\u5ea6\u6a21\u578b\uff0c\u6307\u8f93\u5165\u662f\u5355\u901a\u9053\u56fe\u7247\u7684\u6a21\u578b\uff0c\u5373\u8f93\u5165C\u7ef4\u5ea6\u4e0a\u4e3a1\u7684\u6a21\u578b\u3002","title":"9.1. \u7070\u5ea6\u6a21\u578b\u8f6c\u6362\u8981\u70b9"},{"location":"module/User_Guide/IPU200M/Special_Model_Conversion.html#911-input_config","text":"input_config.ini\u6587\u4ef6\u4f7f\u7528\u57282.2\u8282input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e\u6709\u8fc7\u4ecb\u7ecd\uff0c\u5bf9\u4e8e\u7070\u5ea6\u6a21\u578b\uff0c\u8981\u6ce8\u610f\u5982\u4e0b\u8981\u70b9\u3002 input_config.ini\u6587\u4ef6\u4e2d\u8fd9\u4e24\u4e2a\u914d\u7f6e\u5fc5\u987b\u5199\u6210 [INPUT_CONFIG] ...... training_input_formats = RGB; input_formats = GRAY; ...... \u5c06\u7070\u5ea6\u56fe\u7247\u7684\u6709\u6548\u6570\u636e\u53ea\u653e\u5728R\u901a\u9053\u4e0a\uff0c\u56e0\u6b64\u4ec5\u9700\u8bbe\u7f6eR\u901a\u9053\u7684mean\u503c\uff08mean_red\uff09 [INPUT_CONFIG] ...... mean_red = 127.5; mean_green = 0.0; mean_blue = 0.0; ;std_value parameter for image models, std_value = 1.0;","title":"9.1.1. \u7070\u5ea6\u6a21\u578binput_config\u914d\u7f6e\u4fe1\u606f\u8981\u70b9"},{"location":"module/User_Guide/IPU200M/Special_Model_Conversion.html#912","text":"\u7070\u5ea6\u56fe\u7247\u8f93\u5165\u7684\u524d\u5904\u7406\u65b9\u6cd5\u4e0e3.2\u8282\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\u8981\u6c42\u76f8\u540c\uff0c\u51fd\u6570\u5fc5\u987b\u5305\u542b2\u4e2a\u53c2\u6570\uff1a \u56fe\u7247\u8def\u5f84 \u5f52\u4e00\u5316\u6807\u8bb0\uff08norm=True\uff09 \u53c2\u8003\u4ee3\u7801 SGS_IPU_SDK/Scripts/calibrator/preprocess_method/caffe_lenet.py import cv2 import numpy as np def get_image ( img_path , resizeH = 28 , resizeW = 28 , norm = True , meanR = 33.318 , std = 1 ): img = cv2 . imread ( img_path , flags =- 1 ) try : img_dim = img . shape [ 2 ] except IndexError : img_dim = 1 if img_dim == 3 : img = cv2 . cvtColor ( img , cv2 . COLOR_BGR2GRAY ) elif img_dim == 4 : img = cv2 . cvtColor ( img , cv2 . COLOR_BGRA2GRAY ) img_norm = cv2 . resize ( img , ( resizeW , resizeH ), interpolation = cv2 . INTER_LINEAR ) if norm : img_norm = ( img_norm - meanR ) / std img_norm = np . expand_dims ( img_norm , axis = 2 ) dummy = np . zeros (( 28 , 28 , 2 )) img_norm = np . concatenate (( img_norm , dummy ), axis = 2 ) img_norm = img_norm . astype ( 'float32' ) return img_norm def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm ) Please Note: \u7070\u5ea6\u56fe\u7247\u8f93\u5165\u6a21\u578b\u5728PC \u4e0a\u8fd0\u884c\u4e0e\u5f00\u53d1\u677f\u4e0a\u8fd0\u884c\u4e0d\u540c\u3002\u5728PC \u4e0a\u9700\u8981\u5c06\u5355\u901a\u9053\u56fe\u7247\u6269\u7ef4\u81f33 \u901a\u9053\uff0c\u5e76\u5728\u540e\u4e24\u4e2a\u901a\u9053 \u88650\u3002\u5728\u5f00\u53d1\u677f\u4e0a\u9700\u8981YUV \u56fe\u7247\u8f93\u5165\u6570\u636e\u3002","title":"9.1.2. \u7070\u5ea6\u56fe\u7247\u8f93\u5165\u6a21\u578b\u524d\u5904\u7406\u65b9\u6cd5"},{"location":"module/User_Guide/IPU200M/Special_Model_Conversion.html#92-rawdata_f32_nhwcrawdata_s16_nhwc","text":"RAWDATA_F32_NHWC \u4e0e RAWDATA_S16_NHWC \u53ef\u4ee5\u7528\u4e8e\u5206\u6bb5\u7f51\u7edc\u7684\u540e\u7aef\u7f51\u7edc\u6a21\u578b\u8f93\u5165\uff0c\u6216\u8005\u975e\u56fe\u7247\u6570\u636e\u8f93\u5165\u7684\u7f51\u7edc\u6a21\u578b\u3002","title":"9.2. RAWDATA_F32_NHWC\u4e0eRAWDATA_S16_NHWC\u8f93\u5165\u7684\u6a21\u578b"},{"location":"module/User_Guide/IPU200M/Special_Model_Conversion.html#9211-rawdata_f32_nhwc","text":"\u8f6c\u6362\u65b9\u5f0f\u4e0e\u524d\u8ff0\u4ecb\u7ecd\u57fa\u672c\u76f8\u540c\uff0c\u4f46\u914d\u7f6e input_config.ini \u4e2d\u7684 input_formats \u548c training_input_formats \u90fd\u586b\u5199 RAWDATA_F32_NHWC \uff0c quantizations \u914d\u7f6e\u4e3a TRUE \u3002 \u5f53input_config.ini\u4e2d\u7684 input_formats \u586b\u5199 RAWDATA_F32_NHWC \u65f6\uff0c\u6b64\u65f6input_config.ini\u4e2d mean_red \u3001 mean_green \u3001 mean_blue \u548c std_value \u4e0d\u4f1a\u518d\u5728\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u4e2d\u751f\u6548\uff0c\u6240\u6709\u524d\u5904\u7406\u8fc7\u7a0b\u90fd\u5c06\u5728\u8f93\u5165\u6a21\u578b\u524d\u5b8c\u6210\u3002 mean_red \u3001 mean_green \u3001 mean_blue \u548c std_value \u4e0d\u8981\u586b\u5199\u3002 \u6a21\u578b\u5728calibrator.py\u8f6c\u6362\u65f6\u4f7f\u7528\u6d6e\u70b9\u6570\u636e\uff0c\u56e0\u6b64\u8f6c\u6362\u65b9\u6cd5\u4e0e\u6b63\u5e38\u7f51\u7edc\u76f8\u540c\u3002\u53ef\u4ee5\u53c2\u8003\u7b2c3\u7ae0Calibrator\u7684\u4f7f\u7528\u65b9\u6cd5\u3002","title":"9.2.1.1 RAWDATA_F32_NHWC\u6a21\u578b\u8f6c\u6362"},{"location":"module/User_Guide/IPU200M/Special_Model_Conversion.html#9212-rawdata_f32_nhwc","text":"\u6d6e\u70b9\u6a21\u578b\u8fd0\u884c\u65f6\uff0c\u4f7f\u7528\u65b9\u6cd5\u4e0e\u8fd0\u884c\u56fe\u7247\u8f93\u5165\u7684\u6a21\u578b\u76f8\u540c\u3002 \u4f7f\u7528simulator.py\u8fd0\u884c\u5b9a\u70b9\u6a21\u578b\u65f6\uff0c\u524d\u5904\u7406\u65b9\u6cd5\u5e94\u4e0e\u6d6e\u70b9\u524d\u5904\u7406\u6a21\u578b\u4fdd\u6301\u4e00\u81f4\uff0c\u4ecd\u7136\u8f93\u5165norm=True\u65f6\u7684\u65b9\u6cd5\uff0c\u6240\u4ee5 RAWDATA_F32_NHWC \u7684\u7f51\u7edc\u524d\u5904\u7406Python\u6587\u4ef6\u7f16\u5199\u65f6norm\u4e3aTrue\u548cFalse\u7684\u5b9e\u73b0\u90fd\u5e94\u6309\u7167norm\u4e3aTrue\u65f6\u7f16\u5199\u3002 \u4f7f\u7528calibrator_custom.fixed_simulator\u65f6\uff0c\u8f93\u5165\u6570\u636e\u7c7b\u578b\u4e3afloat32\u3002 >>> import calibrator_custom >>> model = calibrator_custom . fixed_simulator ( './mobilenet_v2_fixed.sim' ) >>> input_details = model . get_input_details () >>> print ( input_details ) [{ 'shape' : array ([ 1 , 513 , 513 , 3 ]), 'name' : 'sub_7' , 'dtype' : < class ' numpy . float32 '>, ' index ': 0}] calibrator_custom.fixed_simulator\u4e2d\u68c0\u67e5\u4e86\u6a21\u578b\u7684\u8f93\u5165\u683c\u5f0f\uff0c\u8ba1\u7b97\u51fa\u9700\u8981\u8f93\u5165\u7684shape\u4fe1\u606f\u3002 \u5df2\u4f7f\u7528float\u7f51\u7edc\u7684\u524d\u5904\u7406\u5904\u7406\u5b8c\u56fe\u7247\uff0c\u8fd4\u56denumpy.ndarray\u683c\u5f0f\u7684\u53d8\u91cfimg >>> print ( img . shape ) ( 1 , 513 , 513 , 3 ) >>> print ( img . dtype ) float32 \u8f93\u5165\u6a21\u578b\u6570\u636e >>> model . set_input ( input_details [ 0 ][ 'index' ], img ) \u5728\u677f\u4e0a\u8fd0\u884c RAWDATA_F32_NHWC \u7684\u7f51\u7edc\u65f6\uff0c\u53ef\u4ee5\u53c2\u8003\u5982\u4e0b\u4ee3\u7801\uff0cFillInputData\u51fd\u6570\u7684\u8f93\u5165\u5206\u522b\u662f\u6d6e\u70b9\u8f93\u5165\u6570\u636e\u7684\u6570\u7ec4\uff0cMI_IPU\u8f93\u5165Tensor\u7ed3\u6784\u4f53\u548cMI_IPU\u7f51\u7edc\u63cf\u8ff0\u7ed3\u6784\u4f53\u3002 void FillInputData ( MI_FLOAT * pfData , MI_IPU_TensorVector_t & InputTensorVector , MI_IPU_SubNet_InputOutputDesc_t & desc ) { const MI_U32 H = desc . astMI_InputTensorDescs [ 0 ]. u32TensorShape [ 1 ]; const MI_U32 W = desc . astMI_InputTensorDescs [ 0 ]. u32TensorShape [ 2 ]; const MI_U32 C = desc . astMI_InputTensorDescs [ 0 ]. u32TensorShape [ 3 ]; MI_FLOAT * pTensorData = ( MI_FLOAT * ) InputTensorVector . astArrayTensors [ 0 ]. ptTensorData [ 0 ]; if ( desc . eElmFormat == MI_IPU_FORMAT_FP32 ) { memcpy ( pTensorData , pfData , H * W * C * sizeof ( MI_FLOAT )); } } \u6ce8\u610f\u4e8b\u9879 \u53ea\u6709\u4f7f\u7528 RAWDATA_F32_NHWC \u914d\u7f6e\u7684\u7f51\u7edc\u5728\u677f\u4e0amemcpy\u5b8c\u6570\u636e\u540e\u4e0d\u8981\u8c03\u7528MI_SYS_FlushInvCache\u3002","title":"9.2.1.2 RAWDATA_F32_NHWC\u6a21\u578b\u8fd0\u884c"},{"location":"module/User_Guide/IPU200M/Special_Model_Conversion.html#9221-rawdata_s16_nhwc","text":"\u4f7f\u7528\u8be5\u79cd\u65b9\u5f0f\u8f93\u5165\u65f6\uff0c\u7531\u4e8e\u786c\u4ef6\u7684\u9650\u5236\u6761\u4ef6\uff0c\u6240\u4ee5\u9700\u8981\u63d0\u524d\u6392\u5217\u597d\u6570\u636e\u540e\u624d\u80fd\u8fdb\u884c\u8ba1\u7b97\u3002 \u8f6c\u6362\u65b9\u5f0f\u4e0e\u524d\u8ff0\u4ecb\u7ecd\u57fa\u672c\u76f8\u540c\uff0c\u4f46\u914d\u7f6e input_config.ini \u4e2d\u7684 training_input_formats \u548c input_formats \u65f6\u90fd\u586b\u5199 RAWDATA_S16_NHWC \u3002 \u5f53input_config.ini\u4e2d\u7684 training_input_formats \u548c input_formats \u90fd\u586b\u5199 RAWDATA_S16_NHWC \u65f6\uff0c\u6b64\u65f6input_config.ini\u4e2d mean_red \u3001 mean_green \u3001 mean_blue \u548c std_value \u4e0d\u4f1a\u518d\u5728\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u4e2d\u751f\u6548\uff0c\u6240\u6709\u524d\u5904\u7406\u8fc7\u7a0b\u90fd\u5c06\u5728\u8f93\u5165\u6a21\u578b\u524d\u5b8c\u6210\u3002 mean_red \u3001 mean_green \u3001 mean_blue \u548c std_value \u4e0d\u8981\u586b\u5199\u3002 \u7531\u4e8e\u6a21\u578b\u5728calibrator.py\u8f6c\u6362\u65f6\u4ecd\u7136\u4f7f\u7528\u6d6e\u70b9\u6570\u636e\uff0c\u56e0\u6b64\u8f6c\u6362\u65b9\u6cd5\u4e0e\u6b63\u5e38\u7f51\u7edc\u76f8\u540c\u3002\u53ef\u4ee5\u53c2\u8003\u7b2c3\u7ae0Calibrator\u7684\u4f7f\u7528\u65b9\u6cd5\u3002","title":"9.2.2.1 RAWDATA_S16_NHWC\u6a21\u578b\u8f6c\u6362"},{"location":"module/User_Guide/IPU200M/Special_Model_Conversion.html#9222-rawdata_s16_nhwc","text":"\u6d6e\u70b9\u6a21\u578b\u8fd0\u884c\u65f6\uff0c\u4f7f\u7528\u65b9\u6cd5\u4e0e\u8fd0\u884c\u56fe\u7247\u8f93\u5165\u7684\u6a21\u578b\u76f8\u540c\u3002 \u4f7f\u7528simulator.py\u8fd0\u884c\u5b9a\u70b9\u6a21\u578b\u65f6\uff0c\u524d\u5904\u7406\u65b9\u6cd5\u5e94\u4e0e\u6d6e\u70b9\u524d\u5904\u7406\u6a21\u578b\u4fdd\u6301\u4e00\u81f4\uff0c\u4ecd\u7136\u8f93\u5165norm=True\u65f6\u7684\u65b9\u6cd5\uff0c\u6240\u4ee5 RAWDATA_S16_NHWC \u7684\u7f51\u7edc\u524d\u5904\u7406Python\u6587\u4ef6\u7f16\u5199\u65f6norm\u4e3aTrue\u548cFalse\u7684\u5b9e\u73b0\u90fd\u5e94\u6309\u7167norm\u4e3aTrue\u65f6\u7f16\u5199\u3002simulator.py\u4f1a\u8bfb\u5165\u539f\u6d6e\u70b9\u6570\u636e\uff0c\u8fdb\u884c\u53cd\u91cf\u5316\u548c\u5bf9\u9f50\u6392\u5217\u540e\u8f93\u5165\u7ed9\u5b9a\u70b9\u6a21\u578b\u3002 \u4f7f\u7528calibrator_custom.fixed_simulator\u65f6\uff0c\u5b9a\u70b9\u5316\u548c\u5bf9\u9f50\u6392\u5217\u8fc7\u7a0b\u9700\u8981\u81ea\u884c\u5b8c\u6210\u3002\u4ee5\u4e0b\u4e3a\u4f8b\uff0c\u8bf4\u660e\u5b9a\u70b9\u5316\u548c\u5bf9\u9f50\u6392\u5217\u8fc7\u7a0b\u7684\u505a\u6cd5\u3002 >>> import calibrator_custom >>> model = calibrator_custom . fixed_simulator ( './mobilenet_v2_s16_fixed.sim' ) >>> input_details = model . get_input_details () >>> print ( input_details ) [{ 'input_formats' : 'RAWDATA_S16_NHWC' , 'training_input_formats' : 'RAWDATA_S16_NHWC' , 'shape' : array ([ 1 , 513 , 513 , 8 ]), 'name' : 'sub_7' , 'dtype' : < class ' numpy . int16 '>, ' index ': 0, ' quantization ': (3.0518509447574615e-05, 0)}] calibrator_custom.fixed_simulator\u4e2d\u68c0\u67e5\u4e86\u6a21\u578b\u7684\u8f93\u5165\u683c\u5f0f\uff0c\u8ba1\u7b97\u51fa\u9700\u8981\u8f93\u5165\u7684shape\u4fe1\u606f\u3002 \u5df2\u4f7f\u7528float\u7f51\u7edc\u7684\u524d\u5904\u7406\u5904\u7406\u5b8c\u56fe\u7247\uff0c\u8fd4\u56denumpy.ndarray\u683c\u5f0f\u7684\u53d8\u91cfimg >>> print ( img . shape ) ( 1 , 513 , 513 , 3 ) \u5b9a\u70b9\u5316img\u7684\u6570\u636e\uff0c\u5e76\u8f6c\u6362\u6570\u636e\u7c7b\u578b >>> ins , zp = input_details [ 0 ][ 'quantization' ] >>> img = ( img / ins + zp ) . astype ( input_details [ 0 ][ 'dtype' ]) >>> print ( img . dtype ) int16 \u5bf9\u9f50\u6392\u5217img\u6570\u636e\uff0c\u4f7f\u4e4b\u7b26\u5408\u8f93\u5165\u6761\u4ef6\uff0c\u5bf9\u9f50\u4ec5\u9488\u5bf9\u8f93\u5165\u7684\u6700\u540e\u4e00\u4e2a\u7ef4\u5ea6\u4f1a\u5411\u4e0a\u5bf9\u9f50\u3002 >>> img_s16 = np . zeros ( input_details [ 0 ][ 'shape' ]) . astype ( 'int16' ) >>> img_s16 [:, :, :, : 3 ] = img >>> model . set_input ( input_details [ 0 ][ 'index' ], img_s16 ) \u7531\u4e8e\u4e0a\u8ff0\u64cd\u4f5c\u6b65\u9aa4\u5728simulator.py\u4e2d\u5df2\u7ecf\u505a\u5b8c\uff0c\u6240\u4ee5\u4f7f\u7528\u4f7f\u7528simulator.py\u8fd0\u884c\u5b9a\u70b9\u6a21\u578b\u8fd0\u884c\u65f6\uff0c\u524d\u5904\u7406\u65b9\u6cd5\u5e94\u4e0e\u6d6e\u70b9\u524d\u5904\u7406\u6a21\u578b\u4fdd\u6301\u4e00\u81f4\u3002 \u5728\u677f\u4e0a\u8fd0\u884c RAWDATA_S16_NHWC \u7684\u7f51\u7edc\u65f6\uff0c\u4e5f\u9700\u8981\u5b8c\u6210\u8f93\u5165\u6570\u636e\u7684\u5b9a\u70b9\u5316\u548c\u5bf9\u9f50\u6392\u5217\u8fc7\u7a0b\uff0c\u53ef\u4ee5\u53c2\u8003\u5982\u4e0b\u4ee3\u7801\uff0cFillInputData\u51fd\u6570\u7684\u8f93\u5165\u5206\u522b\u662f\u6d6e\u70b9\u8f93\u5165\u6570\u636e\u7684\u6570\u7ec4\uff0cMI_IPU\u8f93\u5165Tensor\u7ed3\u6784\u4f53\u548cMI_IPU\u7f51\u7edc\u63cf\u8ff0\u7ed3\u6784\u4f53\u3002 #define ALIGN_UP(x, align) (((x) + ((align) - 1)) & ~((align) - 1)) #define CLIP3(x, min, max) ((x) < (min) ? (min) : ((x) > (max) ? (max) : (x))) void FillInputData ( MI_FLOAT * pfData , MI_IPU_TensorVector_t & InputTensorVector , MI_IPU_SubNet_InputOutputDesc_t & desc ) { const MI_U32 H = desc . astMI_InputTensorDescs [ 0 ]. u32TensorShape [ 1 ]; const MI_U32 W = desc . astMI_InputTensorDescs [ 0 ]. u32TensorShape [ 2 ]; const MI_U32 C = desc . astMI_InputTensorDescs [ 0 ]. u32TensorShape [ 3 ]; const MI_U32 inner_size = ALIGN_UP ( C , 8 ); const MI_U32 outer_size = H * W ; const MI_FLOAT Scale = desc . astMI_InputTensorDescs [ 0 ]. fScalar ; const MI_S64 ZeroPoint = desc . astMI_InputTensorDescs [ 0 ]. s64ZeroPoint ; MI_S16 * pData = ( MI_S16 * ) InputTensorVector . astArrayTensors [ 0 ]. ptTensorData [ 0 ]; for ( MI_U32 i = 0 ; i < outer_size ; i ++ ) { for ( MI_U32 j = 0 ; j < C ; j ++ ) { * ( pData + i * inner_size + j ) = ( MI_S16 ) CLIP3 ( round ( pfData [ i * C + j ] / Scale + ZeroPoint ), -32768 , 32767 ); } } MI_SYS_FlushInvCache ( pData , inner_size * outer_size * sizeof ( MI_S16 )); }","title":"9.2.2.2 RAWDATA_S16_NHWC\u6a21\u578b\u8fd0\u884c"},{"location":"module/User_Guide/IPU200M/Special_Model_Conversion.html#93","text":"\u7f51\u7edc\u4e2d\u6709\u4e0d\u652f\u6301\u7684Layer\uff0c\u53ef\u5c06\u5b8c\u6574\u7f51\u7edc\u5206\u6bb5\u6267\u884c\u3002\u524d\u4e00\u6bb5\u7f51\u7edc\u8fd0\u884c\u5b8c\u6210\u540e\u5c06\u7ed3\u679c\u8f93\u5165\u7ed9\u81ea\u5b9a\u4e49\u5b9e\u73b0\u5c42\uff0c\u518d\u5c06\u81ea\u5b9a\u4e49\u5c42\u7684\u8f93\u51fa\u7ed3\u679c\u4f5c\u4e3a\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u8fd0\u884c\u3002\u4e0b\u9762\u4ee5Faster_RCNN\u7f51\u7edc\u4e3a\u4f8b\uff0c\u8bf4\u660e\u5982\u4f55\u8f6c\u6362\u5206\u6bb5\u7f51\u7edc\u3002","title":"9.3. \u5206\u6bb5\u7f51\u7edc\u8f6c\u6362\u8981\u70b9"},{"location":"module/User_Guide/IPU200M/Special_Model_Conversion.html#931","text":"Faster_RCNN\u7f51\u7edc\u4e2d\u7684Proposal Layer\u662f\u4e0d\u652f\u6301\u7684\uff0c\u6211\u4eec\u9700\u8981\u5c06\u7f51\u7edc\u4ece\u8be5\u5c42\u5206\u6210\u4e24\u6bb5\u3002 \u5982\u4e0b\u56fe\u6240\u793a\uff0c\u56fe\u4e2d\u7684Python Layer\u662fProposal Layer\uff0c\u901a\u8fc7\u4fee\u6539prototxt\u6587\u4ef6\uff0c\u5c06\u7f51\u7edc\u4eceProposal Layer\u5904\u62c6\u6210\u4e24\u6bb5\uff1a\u7b2c\u4e00\u6bb5\u7f51\u7edc\u5c06\u67093\u4e2a\u8f93\u51fa\uff0c\u5176\u4e2drpn_cls_prob_reshape\u548crpn_bbox_pred\u4e24\u4e2a\u8f93\u51fa\u7ed3\u679c\u5c06\u4f5c\u4e3aProposal Layer\u7684\u8f93\u5165\uff0cconv5_3\u548cProposal Layer\u7684\u8f93\u51fa\u5c06\u4f5c\u4e3a\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u3002 \u7b2c\u4e00\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u662f\u56fe\u7247\u6570\u636e\uff0cinput_config.ini\u548c\u524d\u5904\u7406python\u6587\u4ef6\u6309\u71672.2\u548c3.2\u8282\u5904\u7406\u3002\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u4e0d\u662f\u56fe\u7247\u6570\u636e\uff0c\u53ef\u4ee5\u53c2\u80039.2\u8282\u5bf9\u4e24\u4e2a\u8f93\u5165\u540c\u65f6\u91c7\u7528RAWDATA_S16_NHWC\u7684\u683c\u5f0f\u914d\u7f6e\u3002\u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u901a\u8fc7 ConvertTool.py\u5206\u522b\u5c06\u4e24\u4e2a\u7f51\u7edc\u8f6c\u6362\u6210float.sim\u6a21\u578b\u6587\u4ef6\u3002\u5177\u4f53\u914d\u7f6e\u6587\u4ef6\u548c\u8f6c\u6362\u547d\u4ee4\u5982\u4e0b\uff1a \u7b2c\u4e00\u6bb5\u7f51\u7edc\uff1a python3 ~/SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py caffe \\ --model_file test_stageone.prototxt \\ --weight_file VGG16_faster_rcnn_final.caffemodel \\ --input_arrays data \\ --output_arrays rpn_cls_prob_reshape,rpn_bbox_pred,conv5_3 \\ --input_config input_config.ini \\ --output_file faster_rcnn_main_float.sim [INPUT_CONFIG] inputs = data; input_formats = BGR; quantizations = TRUE; mean_red = 122.7717; mean_green = 115.9465; mean_blue = 102.9801; std_value = 1; [OUTPUT_CONFIG] outputs = rpn_cls_prob_reshape,rpn_bbox_pred,conv5_3; dequantizations = TRUE,TRUE,FALSE; \u8bbe\u5b9aconv5_3 \u8fd9\u4e2a\u8f93\u51fa\u7684dequantizations \u4e3aFALSE\uff0c\u7531\u4e8e\u8be5\u8f93\u51fa\u76f4\u63a5\u8f93\u5165\u7b2c\u4e8c\u6bb5\u7f51\u7edc\uff0c\u6240\u4ee5\u5728\u677f\u7aef\u8fd0\u884c\u65f6\u4e0d\u9700\u8981 \u8f6c\u6362\u6210float\uff0c\u53ef\u4ee5\u76f4\u63a5\u5c06\u8be5\u8f93\u51fa\u9001\u8fdb\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u3002 \u7b2c\u4e8c\u6bb5\u7f51\u7edc\uff1a ROIPooling\u7684rois\u8f93\u5165\u7ef4\u5ea6\u4e3a\uff08N\u00d75\uff09\uff0c\u5f53\u540e\u6bb5\u7f51\u7edc\u5168\u90e8\u662fInnerProduct\u65f6\uff0cN\u624d\u53ef\u4ee5\u8bbe\u7f6e\u4e3a300\uff08\u5982\u4e0a\u56fe\u6240\u793a\uff09\uff0c\u5982\u679c\u540e\u6bb5\u7f51\u7edc\u4e2d\u6709\u5377\u79ef\u65f6\uff0cN\u4ec5\u53ef\u4ee5\u8bbe\u7f6e\u4e3a1\uff0c\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u9700\u8981\u5faa\u73af\u6267\u884cN\u6b21\u3002 python3 ~/SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py caffe \\ --model_file second_stage.prototxt \\ --weight_file VGG16_faster_rcnn_final.caffemodel \\ --input_arrays conv5_3,rois \\ --output_arrays cls_prob,bbox_pred \\ --input_config input_config_stage2.ini \\ --output_file faster_rcnn_stage2_float.sim [INPUT_CONFIG] inputs = conv5_3,rois input_formats = RAWDATA_F32_NHWC,RAWDATA_F32_NHWC; quantizations = TRUE,TRUE; [OUTPUT_CONFIG] outputs = cls_prob,bbox_pred; dequantizations = TRUE,TRUE;","title":"9.3.1 \u7f51\u7edc\u5207\u5206"},{"location":"module/User_Guide/IPU200M/Special_Model_Conversion.html#932","text":"\u5de5\u5177\u8def\u5f84 SGS_IPU_SDK/Scripts/examples/caffe_faster_rcnn/faster_rcnn_calibrator.py \u8be5\u5de5\u5177\u4f5c\u4e3aFaster_RCNN\u7f51\u7edc\u8f6c\u6362demo\uff0c\u76f4\u63a5\u8fd0\u884c\u5373\u53ef\u5c06\u4e24\u6bb5\u7f51\u7edc\u76f4\u63a5\u8f6c\u6362\u6210fixed\u6a21\u578b\u3002 python3 ~/SGS_IPU_SDK/Scripts/examples/caffe_faster_rcnn/faster_rcnn_calibrator.py \\ -i ~/SGS_Models/resource/detection/voc_calibration_set32/ \\ -m0 faster_rcnn_main_float.sim \\ -m1 faster_rcnn_stage2_float.sim \\ --input_config0 input_config.ini \\ --input_config1 input_config_stage2.ini \u5728\u8f6c\u6362\u5206\u6bb5\u7f51\u7edc\u65f6\uff0c\u9996\u5148\u5b9a\u4e49\u7f51\u7edc\u7684\u4e24\u6bb5\u7f51\u7edc\uff0c\u518d\u7ec4\u7ec7\u4e24\u6bb5\u7f51\u7edc\u7684\u8fd0\u884c\u65b9\u5f0f\uff0c\u5b9a\u4e49\u5728forward\u65b9\u6cd5\u91cc\uff1a class Net ( calibrator_custom . SIM_Calibrator ): def __init__ ( self , main_model_path , main_input_config , second_model_path , second_input_config ): super () . __init__ () self . main_model = calibrator_custom . calibrator ( main_model_path , main_input_config ) self . second_model = calibrator_custom . calibrator ( second_model_path , second_input_config ) self . rpn = rpn . ProposalLayer () def forward ( self , x ): out_details = self . main_model . get_output_details () input_data , im_scale = fill_inputImg2main ( x ) self . main_model . set_input ( 0 , input_data ) self . main_model . invoke () result_list = [] for idx , _ in enumerate ( out_details ): result = self . main_model . get_output ( idx ) result_list . append ( result ) im_info = np . array ([ x . shape [ 0 ], x . shape [ 1 ], im_scale ]) . reshape ( 1 , 3 ) bottom = [ result_list [ 0 ], result_list [ 1 ], im_info ] roi = self . rpn . forward ( bottom ) out2_details = self . second_model . get_output_details () self . second_model . set_input ( 0 , result_list [ 2 ]) self . second_model . set_input ( 1 , roi ) self . second_model . invoke () second_result = [] for idx , _ in enumerate ( out2_details ): result = self . second_model . get_output ( idx ) second_result . append ( result ) return second_result Faster_RCNN\u7f51\u7edc\u4e2d\uff0c\u4f7f\u7528\u4e86\u81ea\u5b9a\u4e49\u7684rpn\u5c42\uff0c\u56e0\u6b64\u5c06\u7b2c\u4e00\u6bb5\u7f51\u7edc\u7684\u7b2c1\u4e2a\u548c\u7b2c2\u4e2a\u8f93\u51fa\u4ee5\u53ca\u56fe\u7247\u4fe1\u606f\u4f5c\u4e3arpn\u5c42\u7684\u8f93\u5165\uff0c\u7b2c\u4e00\u6bb5\u7f51\u7edc\u7684\u7b2c3\u4e2a\u8f93\u51fa\u548crpn\u5c42\u7684\u8f93\u51faroi\u4f5c\u4e3a\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u3002 \u6700\u540e\u8c03\u7528Net\u7684convert\u65b9\u6cd5\uff0c\u540c\u65f6\u751f\u6210\u4e24\u6bb5\u7f51\u7edc\u7684fixed\u6a21\u578b\u3002 net = Net () net . convert ( img_gen , num_process = num_subsets , fix_model = [ out_main_model , out_second_model ])","title":"9.3.2 \u8f6c\u6362\u7f51\u7edc"},{"location":"module/User_Guide/IPU200M/Special_Model_Conversion.html#933","text":"\u5de5\u5177\u8def\u5f84 SGS_IPU_SDK/Scripts/examples/caffe_faster_rcnn/faster_rcnn_simulator.py \u8be5\u5de5\u5177\u4f5c\u4e3aFaster_RCNN\u7f51\u7edc\u8fd0\u884cdemo\uff0c\u76f4\u63a5\u8fd0\u884c\u4e24\u6bb5\u7f51\u7edc\u3002 python3 ~/SGS_IPU_SDK/Scripts/examples/caffe_faster_rcnn/faster_rcnn_simulator.py \\ -i ~/SGS_Models/resource/detection/004545.jpg \\ -m0 faster_rcnn_main_float.sim \\ -m1 faster_rcnn_stage2_float.sim \\ -t Float \u8fd0\u884c\u4e24\u6bb5\u6a21\u578b\u7684\u65b9\u6cd5\u4e0e\u8f6c\u6362\u7f51\u7edc\u65f6\u7c7b\u4f3c\u3002 class Net ( calibrator_custom . SIM_Simulator ): def __init__ ( self , main_model_path , second_model_path , phase ): super () . __init__ () if phase == 'Float' : self . main_model = calibrator_custom . float_simulator ( main_model_path ) self . second_model = calibrator_custom . float_simulator ( second_model_path ) self . norm = True elif phase == 'Fixed' : self . main_model = calibrator_custom . fixed_simulator ( main_model_path ) self . second_model = calibrator_custom . fixed_simulator ( second_model_path ) self . norm = False else : self . main_model = calibrator_custom . offline_simulator ( main_model_path ) self . second_model = calibrator_custom . offline_simulator ( second_model_path ) self . norm = False self . rpn = rpn . ProposalLayer () def forward ( self , x ): # Run main model out_details = self . main_model . get_output_details () input_data , im_scale = fill_inputImg2main ( x , norm = norm ) self . main_model . set_input ( 0 , input_data ) self . main_model . invoke () def forward ( self , x ): out_details = self . main_model . get_output_details () input_data , im_scale = fill_inputImg2main ( x ) self . main_model . set_input ( 0 , input_data ) self . main_model . invoke () result_list = [] for idx , _ in enumerate ( out_details ): result = self . main_model . get_output ( idx ) result_list . append ( result ) im_info = np . array ([ x . shape [ 0 ], x . shape [ 1 ], im_scale ]) . reshape ( 1 , 3 ) bottom = [ result_list [ 0 ], result_list [ 1 ], im_info ] roi = self . rpn . forward ( bottom ) out2_details = self . second_model . get_output_details () self . second_model . set_input ( 0 , result_list [ 2 ]) if self . norm : self . second_model . set_input ( 1 , roi ) else : self . second_model . set_input ( 1 , roi ) self . second_model . invoke () second_result = [] for idx , _ in enumerate ( out2_details ): result = self . second_model . get_output ( idx ) second_result . append ( result ) return second_result \u8fd0\u884c\u7f51\u7edc\u65f6\u5148\u521b\u5efaNet\u7684\u5b9e\u4f8b\uff0c\u7136\u540e\u8c03\u7528\u81ea\u8eab\u7684\u65b9\u6cd5\u5c31\u53ef\u4ee5\u8fd0\u884c\u3002\u5177\u4f53\u53c2\u80035.2.2\u8282\u3002 net = Net () results = net ( img_gen , num_process = num_subsets )","title":"9.3.3 \u8fd0\u884c\u7f51\u7edc"},{"location":"module/User_Guide/IPU200M/Special_Model_Conversion.html#94","text":"","title":"9.4. \u591a\u8f93\u5165\u7f51\u7edc\u8f6c\u6362\u8981\u70b9"},{"location":"module/User_Guide/IPU200M/Special_Model_Conversion.html#941","text":"\u4f7f\u7528Tensorflow1.14.0\u6784\u5efa\u4e00\u4e2a\u53cc\u8f93\u5165\u7f51\u7edc\uff0c\u8be5\u7f51\u7edc\u7528\u6765\u505a\u77e9\u9635\u4e58\u6cd5\uff0c\u8ba1\u7b97\u4e24\u4e2a\u5411\u91cf\u7684\u5185\u79ef\u3002 import tensorflow as tf import numpy as np SHAPE_DIMS = 256 input_np0 = np . random . rand ( 1 , SHAPE_DIMS ) . astype ( np . float32 ) input_np1 = np . random . rand ( 1 , SHAPE_DIMS ) . astype ( np . float32 ) input_0 = tf . placeholder ( dtype = tf . float32 , shape = ( 1 , SHAPE_DIMS ), name = 'input0' ) input_1 = tf . placeholder ( dtype = tf . float32 , shape = ( 1 , SHAPE_DIMS ), name = 'input1' ) out = tf . matmul ( input_0 , tf . reshape ( input_1 , ( SHAPE_DIMS , 1 )), name = 'output' ) with tf . Session () as sess : results = sess . run ( out , feed_dict = { input_0 : input_np0 , input_1 : input_np1 }) # Convert .pb output_graph_def = tf . graph_util . convert_variables_to_constants ( sess , sess . graph_def , [ 'output' ] ) with tf . gfile . GFile ( 'matmul.pb' , 'wb' ) as f : f . write ( output_graph_def . SerializeToString ()) print ( 'matmul.pb Saved!' ) # convert to .tflite tflite_model = tf . lite . TFLiteConverter . from_frozen_graph ( 'matmul.pb' , [ 'input0' , 'input1' ], [ 'output' ] ) tflite_model = tflite_model . convert () with open ( 'matmul.tflite' , 'wb' ) as f : f . write ( tflite_model ) print ( 'matmul.tflite Saved!' ) \u8fd0\u884c\u8be5\u811a\u672c\uff0c\u5c31\u80fd\u751f\u6210matmul.tflite\u6a21\u578b\u6587\u4ef6\u4e86\u3002","title":"9.4.1 \u6784\u5efa\u591a\u8f93\u5165\u7f51\u7edc"},{"location":"module/User_Guide/IPU200M/Special_Model_Conversion.html#942","text":"\u4e0b\u9762\u5c06matmul.tflte\u8f6c\u6362\u6210\u53ef\u4ee5\u5728\u677f\u4e0a\u8fd0\u884c\u7684\u6a21\u578b\u6587\u4ef6\u3002 matmul.tflite\u6a21\u578b\u4e0d\u662f\u56fe\u7247\u8f93\u5165\uff0c\u56e0\u6b64\u914d\u7f6einput_config.ini\u6587\u4ef6\u8bf7\u53c2\u80039.2\u8282\u3002 \u914d\u7f6einput_config.ini\u811a\u672c [INPUT_CONFIG] inputs = input0,input1; input_formats = RAWDATA_F32_NHWC,RAWDATA_F32_NHWC; quantization = TRUE,TRUE; [OUTPUT_CONFIG] outputs = output; dequantization = TRUE; \u8bf7\u5148\u5728SGS_IPU_SDK\u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK source cfg_env.sh \u7136\u540e\u4f7f\u7528ConvertTool\u5de5\u5177\u8f6c\u6362matmul.tflite\uff1a python3 ~/SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py tflite \\ --model_file /path/to/matmul.tflite \\ --input_config /path/to/input_config.ini \\ --output_file /path/to/matmul_float.sim \u591a\u8f93\u5165\u7f51\u7edc\u7684calibrator\u8fc7\u7a0b\u9700\u8981\u4f7f\u7528calibrator_custom\u6a21\u5757\uff0c\u8be6\u7ec6\u53ef\u4ee5\u53c2\u80033.4\u8282\u3002\u4f46\u4e0e3.4.2\u8282\u4e2d\u4e0d\u540c\u7684\u662f\u8f93\u5165\u7684\u751f\u6210\u5668\u9700\u8981\u914d\u7f6e\u6210\u53cc\u8f93\u5165\u3002\u5c06\u4ee5\u4e0b\u793a\u4f8b\u6587\u4ef6\u4fdd\u5b58\u4e3amatmul_calibrator.py\u3002 # -*- coding: utf-8 -*- import calibrator_custom import os import sys import numpy as np import argparse from calibrator_custom import utils class Net ( calibrator_custom . SIM_Calibrator ): def __init__ ( self , model_path , input_config ): super () . __init__ () self . model = calibrator_custom . calibrator ( model_path , input_config ) def forward ( self , x , y ): out_details = self . model . get_output_details () self . model . set_input ( 0 , x ) self . model . set_input ( 1 , y ) self . model . invoke () result_list = [] for idx in range ( len ( out_details )): result = self . model . get_output ( idx ) result_list . append ( result ) return result_list def arg_parse (): parser = argparse . ArgumentParser ( description = 'Calibrator Tool' ) parser . add_argument ( '-m' , '--model' , type = str , required = True , help = 'Model path.' ) parser . add_argument ( '--input_config' , type = str , required = True , help = 'Input config path.' ) parser . add_argument ( '--quant_level' , type = str , default = 'L5' , choices = [ 'L1' , 'L2' , 'L3' , 'L4' , 'L5' ], help = 'Indicate Quantilization level. The higher the level, \\ the slower the speed and the higher the accuracy.' ) parser . add_argument ( '--num_process' , default = 10 , type = int , help = 'Amount of processes run at same time.' ) parser . add_argument ( '-o' , '--output' , default = None , type = str , help = 'Output path for fixed model.' ) return parser . parse_args () def data_gen (): calibrator_data = np . random . rand ( 100 , 1 , 256 ) . astype ( np . float32 ) bench_data = np . random . rand ( 100 , 1 , 256 ) . astype ( np . float32 ) for i , j in zip ( calibrator_data , bench_data ): yield [ i , j ] def main (): args = arg_parse () model_path = args . model input_config = args . input_config quant_level = args . quant_level num_subsets = args . num_process output = args . output if not os . path . exists ( model_path ): raise FileNotFoundError ( 'No such {} model' . format ( model_path )) if not os . path . exists ( input_config ): raise FileNotFoundError ( 'input_config.ini file not found.' ) net = Net ( model_path , input_config ) print ( net ) # random generate data # must change real data when using img_gen = data_gen () print ( ' \\033 [31m[WARNING] random generate data, \\ must change real data when using! \\033 [0m' , file = sys . stderr ) out_model = utils . get_out_model_name ( model_path , output ) net . convert ( img_gen , num_process = num_subsets , quant_level = quant_level , fix_model = [ out_model ]) if __name__ == '__main__' : main () \u4f7f\u7528\u7f16\u5199\u7684matmul_calibrator.py\u8f6c\u6362matmul_float.sim\uff0c\u751f\u6210matmul_fixed.sim\u3002 python3 matmul_calibrator.py \\ -m /path/to/matmul_float.sim \\ --input_config /path/to/input_config.ini \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u91cf\u5316\u8be5\u6a21\u578b\u7684\u8f93\u5165\u6570\u636e\u4e00\u5b9a\u8981\u6362\u6210\u771f\u5b9e\u6570\u636e\uff0c\u4e0d\u7136\u7edf\u8ba1\u751f\u6210\u7684fixed\u6a21\u578b\u7cbe\u5ea6\u4f1a\u51fa\u9519\u3002\u5982\u679c\u5355\u72ec\u91cf\u5316\u8be5\u6a21\u578b\u6bd4\u8f83\u56f0\u96be\uff0c\u6bd4\u5982\u5b83\u662f\u63a5\u5728\u67d0\u4e2a\u7f51\u7edc\u540e\u9762\u8fd0\u884c\u7684\uff0c\u53ef\u4ee5\u53c2\u80039.4\u8282\uff0c\u6309\u7167\u591a\u6bb5\u7f51\u7edc\u5904\u7406\uff0c\u5728calibrator_custom.SIM_Calibrator\u7c7b\u91cc\u5b9a\u4e49\u591a\u4e2a\u6a21\u578b\uff0c\u53ef\u4ee5\u76f4\u63a5\u751f\u6210\u51fa\u591a\u4e2afixed\u7f51\u7edc\u3002 \u6700\u540e\u4f7f\u7528compiler.py\u8f6c\u6362matmul_fixed.sim\uff0c\u751f\u6210matmul_fixed.sim_sgsimg.img\u3002","title":"9.4.2 \u8f6c\u6362\u591a\u8f93\u5165\u7f51\u7edc"},{"location":"module/User_Guide/IPU200M/Special_Model_Conversion.html#943-pc","text":"\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd0\u884cFloat\u7684\u7f51\u7edc\u65f6\uff0c\u8f93\u5165\u6570\u636e\u7684type\u9700\u8981\u4e3afloat32\uff0c\u8f93\u5165\u6570\u636e\u7684shape\u4e0e\u6a21\u578b\u8f93\u5165shape\u76f8\u540c\u3002\u4f46\u662f\u7531\u4e8ematmul\u7684Fixed\u548cOffline\u6a21\u578b\u662fRAWDATA_S16_NHWC\u8f93\u5165\uff0c\u8f93\u5165\u6570\u636e\u9700\u8981\u5148\u53cd\u91cf\u5316\u5230int16\uff0c\u7136\u540e\u5bf9\u9f50\u540e\u624d\u80fd\u8f93\u5165\u5230\u6a21\u578b\u3002\u6240\u4ee5\u5b9a\u4e49calibrator_custom.SIM_Simulator\u7684forward\u51fd\u6570\u65f6\u9700\u8981\u6ce8\u610f\u8be5\u6a21\u578b\u7684\u7279\u6b8a\u6027\uff1a class Net ( calibrator_custom . SIM_Simulator ): def __init__ ( self , model_path , phase ): super () . __init__ () if phase == 'Float' : self . model = calibrator_custom . float_simulator ( model_path ) elif phase == 'Fixed' : self . model = calibrator_custom . fixed_simulator ( model_path ) else : self . model = calibrator_custom . offline_simulator ( model_path ) def forward ( self , x , y ): out_details = self . model . get_output_details () self . model . set_input ( 0 , x ) self . model . set_input ( 1 , y ) self . model . invoke () result_list = [] for idx , _ in enumerate ( out_details ): result = self . model . get_output ( idx ) result_list . append ( result ) return result_list","title":"9.4.3 \u5728PC\u4e0a\u8fd0\u884c\u591a\u8f93\u5165\u7f51\u7edc"},{"location":"module/User_Guide/IPU200M/Special_Model_Conversion.html#944","text":"\u7531\u4e8ematmul_fixed.sim_sgsimg.img\u7f51\u7edc\u8f93\u5165\u662f RAWDATA_F32_NHWC \uff0c\u53ef\u4ee5\u53c2\u80039.2.2\u8282\u4e2dFillInputData\u51fd\u6570\uff0c\u4e0e\u5728PC\u4e0a\u76f8\u540c\uff0c\u9700\u8981\u5c06\u8f93\u5165\u6570\u636e\u5904\u7406\u540e\u518d\u9001\u5165\u6a21\u578b\u3002 \u591a\u8f93\u5165\u6a21\u578b\u53ea\u9700\u5728FillInputData\u51fd\u6570\u4e2d\u589e\u52a0\u5bf9\u6a21\u578b\u7684\u7b2c\u4e8c\u4e2a\u8f93\u5165\u704c\u5165\u6570\u636e\uff1a // input0 I_FLOAT * pData0 = ( MI_FLOAT * ) InputTensorVector . astArrayTensors [ 0 ]. ptTensorData [ 0 ]; // input1 I_FLOAT * pData1 = ( MI_FLOAT * ) InputTensorVector . astArrayTensors [ 1 ]. ptTensorData [ 0 ];","title":"9.4.4 \u5728\u677f\u4e0a\u8fd0\u884c\u591a\u8f93\u5165\u7f51\u7edc"},{"location":"module/User_Guide/IPU220/Convert.html","text":"2.1. \u4f7f\u7528\u65b9\u6cd5 \u00b6 Convert Tool\u5de5\u5177\u7684\u4f4d\u7f6e\u5728 SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py \u3002 \u76ee\u524dConvert Tool\u652f\u6301\u4ecetensorflow_graphdef\uff0ctensorflow_savemodel\uff0ckeras\uff0ctflite\uff0ccaffe\uff0connx \u516d\u79cd\u6846\u67b6\u6a21\u578b\u8f6c\u6362\u4e3aSGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u3002 \u4f7f\u7528\u524d\u5148\u5728SGS_IPU_SDK\u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK source cfg_env.sh \u4e0b\u9762\u662fConvert Tool\u76ee\u524d\u652f\u6301\u7684platform information\uff1a python3 ConvertTool.py -h usage : ConvertTool.py [-h] {tensorflow_graphdef,tensorflow_savemodel,keras,tflite,caffe,onnx} ... Convert Tool positional arguments : {tensorflow_graphdef,tensorflow_savemodel,keras,tflite,caffe,onnx} platform info tensorflow_graphdef tensorflow graphdef commands tensorflow_savemodel tensorflow save_model commands keras keras commands tflite tflite commands caffe caffe commands onnx onnx commands optional arguments : -h, --help show this help message and exit \u5982\u679c\u60f3\u8fdb\u4e00\u6b65\u770b\u770b\u5404\u4e2a\u5e73\u53f0\u8f6c\u6362\u6240\u9700\u8981\u7684\u53c2\u6570\u4fe1\u606f\uff0c\u53ef\u4ee5\u6267\u884c python3 ConvertTool.py {platform} \u2013h \uff0c\u5404\u4e2a\u5e73\u53f0\u5177\u4f53\u4fe1\u606f\u548c\u67e5\u770b\u6307\u4ee4\u5982\u4e0b\uff1a 2.1.1 tensorflow_graphdef \u6846\u67b6\u6307\u4ee4 \u00b6 python3 ConvertTool.py tensorflow_graphdef -h usage : ConvertTool.py tensorflow_graphdef [-h] --graph_def_file GRAPH_DEF_FILE --input_config INPUT_CONFIG --output_file OUTPUT_FILE --input_shapes INPUT_SHAPES (optional) optional arguments : -h, --help show this help message and exit. --graph_def_file GRAPH_DEF_FILE Full filepath of file containing frozen GraphDef. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth. Default : None \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ConvertTool.py tensorflow_graphdef \\ --graph_def_file ~/SGS_Models/tensorflow/resnet_v2_50/resnet_v2_50.pb \\ --output_file ./resnet_v2_float.sim \\ --input_shapes 1,299,299,3 \\ --input_config ~/SGS_Models/tensorflow/resnet_v2_50/input_config.ini \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a --graph_def_file : \u8f93\u5165\u7684\u6a21\u578b\u4e3aTensorFlow frozen\u7684graphdef\u7684pb\u683c\u5f0f\u6587\u4ef6\u8def\u5f84\u3002 --output_file : \u8f93\u51fa\u7684\u6a21\u578b\u6587\u4ef6\uff0cflatbuffer\u683c\u5f0f\uff0csim\u540e\u7f00\u6587\u4ef6\u3002 --input_shapes : \u7f51\u7edc\u8f93\u5165Tensor\u7684shape\uff0c\u683c\u5f0f\u4e3aNHWC\uff0cdimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0cshape\u4e2a\u6570\u548cinputs\u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 2.1.2 tensorflow_savemodel \u6846\u67b6\u6307\u4ee4 \u00b6 python3 ConvertTool.py tensorflow_savemodel -h usage : ConvertTool.py tensorflow_savemodel [-h] --saved_model_dir SAVED_MODEL_DIR --input_config INPUT_CONFIG --output_file OUTPUT_FILE --input_shapes INPUT_SHAPES (optional) --tag_set TAG_SET (optional) --signature_key SIGNATURE_KEY (optional) optional arguments : -h, --help show this help message and exit. --saved_model_dir SAVED_MODEL_DIR SavedModel directory to convert. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. --debug Run gdb in Debug mode. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth Default : None. --tag_set TAG_SET Set of tags identifying the MetaGraphDef within the SavedModel to analyze. All tags in the tag set must be present. Default : None. --signature_key SIGNATURE_KEY Key identifying SignatureDef containing inputs and outputs. Default : DEFAULT_SERVING_SIGNATURE_DEF_KEY \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ConvertTool.py tensorflow_savemodel \\ --saved_model_dir ~/test/tensorflow_model/save_model \\ --input_config ~/test/tensorflow_model/input_config.ini \\ --output_file ~/test/tensorflow_model/save_model_float.sim \\ --tag_set test_saved_model \\ --signature_key test_signature \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a --saved_model_dir : \u8f93\u5165\u7684\u6a21\u578b\u4e3aTensorFlow saved_model.builder\u751f\u6210\u7684\u6587\u4ef6\u8def\u5f84\u3002 --output_file : \u8f93\u51fa\u7684\u6a21\u578b\u6587\u4ef6\uff0cflatbuffer\u683c\u5f0f\uff0csim\u540e\u7f00\u6587\u4ef6\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 \u53ef\u9009\u53c2\u6570\uff1a --input_shapes : \u7f51\u7edc\u8f93\u5165Tensor\u7684shape\uff0c\u683c\u5f0f\u4e3aNHWC\uff0cdimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0cshape\u4e2a\u6570\u548cinputs \u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002\u82e5\u4e0d\u6307\u5b9a\u5219\u4ecesaved_model_dir\u4e2d\u83b7\u53d6\u3002 --tag_set : \u9700\u8981\u548csave model\u65f6\u6240\u6307\u5b9a\u7684tag\u5339\u914d\uff0c\u5982\u679c\u4e0d\u505a\u8bbe\u5b9a\uff0c\u5219\u9ed8\u8ba4\u4e3a\u2018serve\u2019\u3002 --signature_key : \u9700\u8981\u548csave model\u65f6\u6240\u6307\u5b9a\u7684signature\u5339\u914d\u3002\u5982\u679c\u4e0d\u505a\u8bbe\u5b9a\uff0c\u5219\u9ed8\u8ba4\u4e3a \u2018DEFAULT_SERVING_SIGNATURE_DEF_KEY\u2019 2.1.3 keras\u6846\u67b6\u6307\u4ee4 \u00b6 python3 ConvertTool.py keras -h usage : ConvertTool.py keras [-h] --model_file MODEL_FILE --input_config INPUT_CONFIG --output_file OUTPUT_FILE --input_shapes INPUT_SHAPES (optional) --custom_objects CUSTOM_OBJECTS (optional) optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of HDF5 file containing the tf.keras model. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth. Default : None. --custom_objects CUSTOM_OBJECTS Dict mapping names (strings) to custom classes or functions to be considered during model deserialization. Default : None. \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ConvertTool.py keras \\ --model_file ./TEST_h5/resnet50/resnet50.h5 \\ --input_config ./TEST_h5/resnet50/input_config.ini \\ --output_file ./TEST_h5/resnet50/resnet50_float.sim \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a --model_file : \u8f93\u5165\u7684\u6a21\u578b\u4e3akeras h5\u683c\u5f0f\u6587\u4ef6\u8def\u5f84\u3002 --output_file : \u8f93\u51fa\u7684\u6a21\u578b\u6587\u4ef6\uff0cflatbuffer\u683c\u5f0f\uff0csim\u540e\u7f00\u6587\u4ef6\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 \u53ef\u9009\u53c2\u6570\uff1a --input_shapes : \u7f51\u7edc\u8f93\u5165Tensor\u7684shape\uff0c\u683c\u5f0f\u4e3aNHWC\uff0cdimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0cshape\u4e2a\u6570\u548cinputs \u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002 --custom_objects : Dict mapping names (strings) to custom classes or functions to be considered during model deserialization (default None). 2.1.4 tflite\u6846\u67b6\u6307\u4ee4 \u00b6 python3 ConvertTool.py tflite -h usage : ConvertTool.py tflite [-h] --model_file MODEL_FILE --input_config INPUT_CONFIG --output_file OUTPUT_FILE optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of tflite file containing the tflite model. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ConvertTool.py tflite \\ --model_file ~/test/tensorflow_model/Debug_save_model_float.tflite \\ --input_config ~/test/tensorflow_model/input_config.ini \\ --output_file ~/test/tensorflow_model/save_model_float.sim \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a --model_file : \u8f93\u5165\u7684\u6a21\u578b\u4e3atflite\u683c\u5f0f\u6587\u4ef6\u8def\u5f84(\u5fc5\u987b\u4e3a\u975e\u91cf\u5316\u6a21\u578b)\u3002 --output_file : \u8f93\u51fa\u7684\u6a21\u578b\u6587\u4ef6\uff0cflatbuffer\u683c\u5f0f\uff0csim\u540e\u7f00\u6587\u4ef6\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 2.1.5 caffe\u6846\u67b6\u6307\u4ee4 \u00b6 python3 ConvertTool.py caffe -h usage : ConvertTool.py caffe [-h] --model_file MODEL_FILE --weight_file WEIGHT_FILE --input_config INPUT_CONFIG --output_file OUTPUT_FILE optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of tflite file containing the caffe model. --weight_file WEIGHT_FILE Full filepath of tflite file containing the caffe weight. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ConvertTool.py caffe \\ --model_file ~/SGS_Models/caffe/caffe_resnet50_conv/caffe_resnet50_conv.prototxt \\ --weight_file ~/SGS_Models/caffe/caffe_resnet50_conv/caffe_resnet50_conv.caffemodel \\ --input_config ~/SGS_Models/caffe/caffe_resnet50_conv/input_config.ini \\ --output_file ./resnet50_float.sim \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a --model_file : Caffe\u6a21\u578b\u6587\u4ef6\u7684\u8def\u5f84 --weight_file : Caffe\u6743\u91cd\u6587\u4ef6\u7684\u8def\u5f84 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput config\u7684\u914d\u7f6e\u4fe1\u606f\u3002 --output_file : \u8f6c\u6362\u6a21\u578b\u7684\u8f93\u51fa\u8def\u5f84\u3002 2.1.6 Onnx\u6846\u67b6\u6307\u4ee4 \u00b6 python3 Path_to_SGS_IPU_SDK/Scripts/ConvertTool onnx -h usage : ConvertTool.py onnx [-h] --model_file MODEL_FILE --input_shapes INPUT_SHAPES --input_config INPUT_CONFIG --output_file OUTPUT_FILE optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of tflite file containing the onnx model. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon-separated. For many models each shape takes the form N C H W (default None) --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ~/SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py onnx --model_file ~/SGS_Models/onnx/onnx_mobilenet_v2/onnx_mobilenet_v2.onnx \\ --input_shapes 1,3,224,224 \\ --input_config ~/SGS_Models/onnx/onnx_mobilenet_v2/input_config.ini \\ --output_file ./onnx_mobilenet_v2_float.sim \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a --model_file : Onnx\u6a21\u578b\u6587\u4ef6\u7684\u8def\u5f84 --input_shapes : Onnx \u6a21\u578b\u8f93\u5165shape\uff0c \u591a\u8f93\u5165\u7528\u5192\u53f7( : )\u5206\u9694 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput config\u7684\u914d\u7f6e\u4fe1\u606f\u3002 --output_file : \u8f6c\u6362\u6a21\u578b\u7684\u8f93\u51fa\u8def\u5f84\u3002 \u6ce8\u610f 1.\u5982\u679c\u6a21\u578b\u4e2d\u5e26\u6709\u540e\u5904\u7406\u7684\u7b97\u5b50\uff0c\u8bf7\u5148\u53bb\u9664\uff0c\u76ee\u524d\u53ea\u652f\u6301\u4e3b\u5e72\u7f51\u7edc\u7684\u8f6c\u6362\u3002 2.Convert Tool\u8f6c\u6362\u5de5\u5177\u8f6c\u6362\u5b8c\u6210\u540e\u4f1a\u751f\u6210\u4e24\u4e2a\u6587\u4ef6\uff0c\u4f8b\u5982 --output_file \u6307\u5b9a\u4e3a ./resnet50_float.sim\uff0c\u8f6c\u6362\u5b8c\u6210\u540e\u4f1a\u751f\u6210Debug_resnet50_float.sim\u548cresnet50_float.sim\u3002\u5176\u4e2d\uff0cresnet50_float.sim\u662f\u771f\u6b63\u8f6c\u6362\u597d\u7684\u6587\u4ef6\uff0cDebug_resnet50_float.sim\u662f\u7ecf\u8fc7\u8f6c\u6362\u540e\u7684\u4e2d\u95f4\u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u672a\u7ecf\u8fc7\u4f18\u5316\uff0c\u4e0e\u539f\u6846\u67b6\u6a21\u578b\u62e5\u6709\u76f8\u540c\u7684\u7f51\u7edc\u7ed3\u6784\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f5c\u4e3a\u8f6c\u6362\u540e\u8c03\u8bd5\u4f7f\u7528\uff0c\u4f46\u662f\u65e0\u6cd5\u5728IPU SDK\u4e2d\u8fd0\u884c\u3002 2.2. input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e \u00b6 \u5de5\u5177\u7684\u53c2\u6570 --input_config \u9700\u8981\u6307\u5b9ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u6587\u4ef6input_config.ini\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u7684\u4e3b\u8981\u529f\u80fd\u6709\uff1a \u2022 \u914d\u7f6e\u7f51\u7edc\u6a21\u578b\u56fe\u7247\u524d\u5904\u7406\u7684\u5f52\u4e00\u5316\u4fe1\u606f\uff1b \u2022 \u914d\u7f6e\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u8f93\u51fa\u7684\u91cf\u5316\u5904\u7406\u4fe1\u606f\uff1b \u2022 \u914d\u7f6e\u7f51\u7edc\u6a21\u578b\u4e2d\u5377\u79ef\u7684\u91cf\u5316\u4fe1\u606f\u3002 \u914d\u7f6einput_config.ini\u6587\u4ef6\u4e3b\u8981\u662f\u4e3a\u4e86\u80fd\u5c06\u7f51\u7edc\u6a21\u578b\u5feb\u901f\u9002\u914d\u5230SigmaStar\u82af\u7247\u4e2d\u4f7f\u7528\u3002\u5728\u7f51\u7edc\u6a21\u578b\u7684\u8bad\u7ec3\u4e2d\uff0c\u4e0d\u540c\u7684\u6846\u67b6\u548c\u8bad\u7ec3\u6570\u636e\u96c6\u9700\u8981\u7f51\u7edc\u4f7f\u7528\u4e0d\u540c\u7684\u56fe\u7247\u5f52\u4e00\u5316\u65b9\u6cd5\uff0c\u800c\u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0c\u4e3a\u4e86\u80fd\u591f\u8ba9\u7f51\u7edc\u6a21\u578b\u7684\u9884\u6d4b\u66f4\u52a0\u51c6\u786e\uff0c\u9700\u8981\u8fd8\u539f\u8bad\u7ec3\u6a21\u578b\u65f6\u7684\u56fe\u7247\u524d\u5904\u7406\u5f52\u4e00\u5316\u65b9\u6cd5\u3002 \u5c06RGB\u4e09\u4e2a\u901a\u9053\u7684\u5747\u503c\u548cstd_value\u8bbe\u7f6e\u597d\u540e\uff0c\u5728\u8f6c\u6362\u6a21\u578b\u65f6\u4f1a\u5199\u5165\u5230\u6a21\u578b\u5185\u90e8\uff0c\u8fd9\u6837\u5728\u786c\u4ef6\u4e0a\u5b9e\u9645\u4f7f\u7528\u65f6\uff0c\u4ec5\u9700\u8981\u5c06\u56fe\u7247resize\u5230\u7f51\u7edc\u6a21\u578b\u7684\u8f93\u5165\u7684\u5c3a\u5bf8\uff0c\u56fe\u7247\u5f52\u4e00\u5316\u7684\u5de5\u4f5c\u5728\u7f51\u7edc\u5185\u90e8\u5b8c\u6210\u3002 \u53e6\u5916\uff0c\u5b9e\u9645\u786c\u4ef6\u4e0a\u4f7f\u7528\u65f6\u56fe\u7247\u8f93\u5165\u683c\u5f0f\u4e0e\u8bad\u7ec3\u65f6\u4f7f\u7528\u7684RGB\u53ef\u80fd\u6709\u5f88\u5927\u533a\u522b\uff0c\u6b63\u786e\u914d\u7f6e\u8fd9\u4e9b\u9009\u9879\u80fd\u4f7f\u8f6c\u6362\u597d\u7684\u6a21\u578b\u5185\u62e5\u6709\u8fd9\u4e9b\u914d\u7f6e\u4fe1\u606f\uff0c\u80fd\u591f\u76f4\u63a5\u5728SigmaStar\u7684\u786c\u4ef6\u4e0a\u90e8\u7f72\u3002 [INPUT_CONFIG] ;Names of the input arrays, comma-separated.image input must be the first. inputs = 'data'; ;Memory formats of input arrays, comma-separated. ;One of RGB, BGR, RGBA, BGRA, YUV_NV12, RAWDATA_S16_NHWC ;Each entry in the list should match an entry in inputs arrays. training_input_formats = BGR; input_formats = BGR; ;Indicate the input data need qauntize or not. ;Each entry in the list should match an entry in inputs arrays. quantizations = TRUE; ;mean_values parameter for image models, ;Each entry in the list match RGB channel of\uff08RGB,BGR,RGBA,BGRA,YUV_NV12\uff09, channel order is R,G,B. mean = 127.5:127.5:127.5; ;std_value parameter for image models, std_value = 1.0; [OUTPUT_CONFIG] ;Names of the output arrays, comma-separated. outputs = 'prob'; ;Indicate the output data need deqauntize or not. ;Each entry in the list should match an entry in outputs arrays. dequantizations = TRUE; [CONV_CONFIG] ;input_format=ALL_INT16; tensor_arrays = 'conv1-1,conv2-1'; \u8be5\u6587\u4ef6\u4e3b\u8981\u5206\u4e3a\u4e09\u4e2a\u8bbe\u7f6e\u4fe1\u606f\uff1a [INPUT_CONFIG] [OUTPUT_CONFIG] [CONV_CONFIG] \u9488\u5bf9\u8fd9\u4e09\u4e2a\u8bbe\u7f6e\u4fe1\u606f\u5177\u4f53\u8bf4\u660e\uff1a \u6ce8\u610f String\u7c7b\u578b\u7684\u503c\uff0c\u5982tensor name\uff0c\u9700\u7528('')\u5c06\u5185\u5bb9\u5305\u542b\u8d77\u6765\uff0c\u4f8b\u5982outputs='detectionBoxes,detectionClasses,detectionScores,numDetections'; 2.2.1 INPUT_CONFIG \u00b6 inputs : \u7f51\u7edc\u8f93\u5165Tensor\u7684name\uff0c\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u8bf7\u7528\u9017\u53f7( , )\u5206\u9694\u3002\u6a21\u578b\u8f93\u5165Tensor\u987a\u5e8f\u4e0e inputs \u7684\u914d\u7f6e\u987a\u5e8f\u4e00\u81f4\u3002\u6240\u6709\u8f93\u5165name\u7684\u957f\u5ea6\u4e0d\u80fd\u8d85\u8fc71024\u4e2a\u5b57\u7b26\u3002 training_input_formats : \u7f51\u7edc\u8bad\u7ec3\u65f6\u7684\u56fe\u7247\u683c\u5f0f\uff0c\u6570\u91cf\u548c\u987a\u5e8f\u4e0einputs\u4e00\u4e00\u5bf9\u5e94\uff0c\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u3002\u8fd9\u4e9b\u683c\u5f0f\u5305\u62ecRGB\uff0cBGR\uff0cRAWDATA_S16_NHWC(\u82e5 training_input_formats \u8bbe\u7f6e\u4e3a RAWDATA_S16_NHWC ,\u5219 input_formats \u4e5f\u5fc5\u987b\u8bbe\u7f6e\u4e3a RAWDATA_S16_NHWC ) \u5176\u4e2d\u4e4b\u4e00\u3002training_input_formats\u53ef\u4ee5\u548cinput_formats \u4e0d\u4e00\u6837\u3002\u4f8b\u5982\u5728\u5728SigmaStar\u5f00\u53d1\u677f\u4e0a\uff0cinput_formats\u662fYUV_NV12\uff0c\u4f46\u662ftraining input formats \u662fRGB\u3002 input_formats : \u7f51\u7edc\u6a21\u578b\u5728SigmaStar\u82af\u7247\u4e0a\u8fd0\u884c\u7684\u56fe\u7247\u8f93\u5165\u683c\u5f0f\uff0c\u6570\u91cf\u548c\u987a\u5e8f\u4e0einputs\u4e00\u4e00\u5bf9\u5e94\uff0c\u9017\u53f7( , )\u5206\u9694\u3002 \u8fd9\u4e9b\u683c\u5f0f\u5305\u62ec\uff1a RGB BGR RGBA BGRA YUV_NV12 RAWDATA_F32_NHWC RAWDATA_S16_NHWC \u6ce8\u610f\uff1a * training_input_formats \u548c input_formats \u4e0d\u80fd\u914d\u7f6e\u4e3a\u5982\u4e0b\u60c5\u51b5\uff1a training_input_formats=RGB; input_formats=BGR; \u6216\u8005 training_input_formats=BGR; input_formats=RGB; * \u7070\u5ea6\u56fe\u7247\u8bf7\u6309\u5982\u4e0b\u65b9\u5f0f\u914d\u7f6e\uff1a training_input_formats=GRAY; input_formats=YUV_NV12; \u5177\u4f53\u8be6\u89c1 9.1 \u7070\u5ea6\u6a21\u578b\u8f6c\u6362\u8981\u70b9 * \u914d\u7f6e RAWDATA_F32_NHWC \u6216 RAWDATA_S16_NHWC \u65f6\uff0c mean \u548c std_value \u4e0d\u8981\u914d\u7f6e\uff0c\u5177\u4f53\u8be6\u89c1 9.2 RAWDATA_F32_NHWC\u6a21\u578b\u8f6c\u6362\u8981\u70b9 quantizations : \u7528\u6765\u6807\u8bc6\u6240\u6709\u8f93\u5165Tensor\u7684\u6570\u636e\u662f\u5426\u9700\u8981\u505a\u91cf\u5316\uff0cTRUE\u6216\u8005FALSE\uff0c\u9ed8\u8ba4\u503c\u4e3aTRUE,\u6570\u91cf\u7b49\u4e8einputs \u4e2a\u6570\u3002\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 mean : \u7f51\u7edc\u8bad\u7ec3\u9636\u6bb5\uff0c\u4e00\u822c\u4f1a\u5bf9\u56fe\u7247\u505a\u524d\u5904\u7406\uff0c\u5bf9\u4e8eRGB\u901a\u9053\u7684\u56fe\u7247\uff0c\u4f7f\u7528\u5982\u4e0b\u516c\u5f0f\u5bf9\u56fe\u7247\u8fdb\u884c\u9884\u5904\u7406\uff1a mean_red:mean_green:mean_blue \u5c31\u662f\u76f8\u5e94\u901a\u9053\u4e0a\u7684mean\u503c\u3002\u5982\u679c\u8fd9\u4e2a\u7f51\u7edc\u6ca1\u6709\u505a\u4efb\u4f55\u5f52\u4e00\u5316\u5904\u7406\uff0c\u8fd9\u4e2a\u503c\u8bbe\u4e3a0\u5373\u53ef\u3002\u6bcf\u4e2amean\u6570\u91cf\u7b49\u4e8einputs \u4e2a\u6570\u3002\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 std_value : \u5982\u4e0a\u516c\u5f0f\uff0c\u5982\u679c\u6ca1\u6709\u505a\u4efb\u4f55\u5f52\u4e00\u5316\u5904\u7406\uff0c\u8fd9\u4e2a\u503c\u8bbe\u4e3a1\u5373\u53ef\u3002\u5982\u679c\u6bcf\u4e2a\u901a\u9053\u90fd\u6709\u5bf9\u5e94\u7684std_value\u503c\uff0c\u4ee5\u82f1\u6587\u5192\u53f7( : )\u5206\u9694\uff0c\u987a\u5e8f\u4e3aRGB\u3002\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 input_width_alignment \uff1a\u7528\u6765\u6807\u8bc6\u6570\u636e\u4f5c\u4e3a\u7f51\u7edc\u8f93\u5165\u65f6Width\u65b9\u5411\u5bf9\u9f50\u7684\u6570\u91cf\uff0c\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 input_height_alignment \uff1a\u7528\u6765\u6807\u8bc6\u6570\u636e\u4f5c\u4e3a\u7f51\u7edc\u8f93\u5165\u65f6Height\u65b9\u5411\u5bf9\u9f50\u7684\u6570\u91cf\uff0c\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 \u6ce8\u610f \u5f53input_formats\u8bbe\u5b9a\u4e3aYUV_NV12\u65f6\uff0c input_width_alignment \u548c input_height_alignment \u9ed8\u8ba4\u503c\u4e3a2\uff0c\u5176\u4f59\u60c5\u51b5\u9ed8\u8ba4\u503c\u4e3a1\u3002 input_layouts : \u7528\u6765\u6807\u8bc6\u8f93\u5165Tensor\u7684\u6570\u636e\u6392\u5e03\u683c\u5f0f\uff0c NCHW \u6216\u8005 NHWC \uff0c\u6570\u91cf\u7b49\u4e8einputs\u4e2a\u6570\uff0c\u6a21\u578b\u8f93\u5165Tensor\u987a\u5e8f\u4e0e input_layouts \u7684\u914d\u7f6e\u987a\u5e8f\u4e00\u81f4\u3002\u5982\u679c\u4e0d\u8bbe\u7f6e\u8be5\u9879\uff0c\u9ed8\u8ba4\u5168\u90e8\u4e3a NHWC \u3002\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7\uff08,\uff09\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 NCHW \u8868\u793a\u5bf9\u5e94\u987a\u5e8f\u7684inputTensor\u82e5\u662f\u56db\u7ef4\u5219\u6309\u7167NCHW\u7684\u6570\u636e\u683c\u5f0f\u6392\u5e03\uff08\u4e0ecaffe/onnx\u539f\u6a21\u578b\u76f8\u540c\uff09\uff1b NHWC \u8868\u793a\u5bf9\u5e94\u987a\u5e8f\u7684inputTensor\u82e5\u662f\u56db\u7ef4\u5219\u6309\u7167NHWC\u7684\u683c\u5f0f\u6392\u5e03\uff08\u9ed8\u8ba4\u683c\u5f0f\uff09\u3002 \u6ce8\u610f \u5f53\u8be5\u8f93\u5165\u7684 input_layouts \u8bbe\u4e3a NCHW \u4e14\u662f\u56db\u7ef4Tensor\uff0c\u9700\u8981\u786e\u4fdd\u8be5\u8f93\u5165\u5bf9\u5e94\u7684\u524d\u5904\u7406\u811a\u672c\u8fd4\u56de\u6570\u636e\u4e5f\u6309\u7167NCHW\u6392\u5e03\uff0c\u4e14\u677f\u7aef\u8fd0\u884c\u79bb\u7ebf\u6a21\u578b\u65f6\u7684\u8f93\u5165\u6570\u636e\u6392\u5e03\u4e5f\u6309\u7167NCHW\u6392\u5e03\u3002 \u5f53input_formats\u8bbe\u5b9a\u4e3aYUV_NV12\u4e14\u8be5\u8f93\u5165 input_layouts \u8bbe\u4e3a NCHW \uff0c\u524d\u5904\u7406\u811a\u672c\u9700\u8981\u6309\u7167 training_input_formats \uff08BGR\u3001RGB\u3001GRAY\uff09\u8fd4\u56deNCHW\u6392\u5e03\u7684\u6570\u636e\uff0c\u800c\u5728\u677f\u7aef\u8fd0\u884c\u79bb\u7ebf\u6a21\u578b\u65f6\u7684\u8f93\u5165\u6570\u636e\u4e3a\u6b63\u5e38\u6392\u5e03\u7684YUV_NV12\u3002 \u5f53input_formats\u8bbe\u5b9a\u4e3aRGBA\u3001BGRA\u65f6\uff0c\u8be5\u8f93\u5165\u4e0d\u652f\u6301 input_layouts \u8bbe\u4e3a NCHW \u3002 2.2.2 OUTPUT_CONFIG \u00b6 outputs : \u7f51\u7edc\u8f93\u51faTensor\u7684name(\u53ef\u7528Netron\u5de5\u5177\u6253\u5f00\u6a21\u578b\u67e5\u770b)\uff0c\u5982\u679c\u6709\u591a\u4e2a\u8f93\u51faTensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u3002\u8f6c\u6362\u5e26\u540e\u5904\u7406\u7f51\u7edc\u65f6\uff0cBackbone\u7f51\u7edc\u7684outputs\u4e0e\u5b8c\u6574\u7f51\u7edcoutputs\u7684\u540d\u79f0\u4e0d\u540c\uff0c\u5176\u4f59\u8bbe\u7f6e\u5e94\u5b8c\u5168\u4e00\u81f4\u3002\u6a21\u578b\u8f93\u51faTensor\u987a\u5e8f\u4e0e outputs \u7684\u914d\u7f6e\u987a\u5e8f\u4e00\u81f4\u3002\u6240\u6709\u8f93\u51faname\u7684\u957f\u5ea6\u4e0d\u80fd\u8d85\u8fc71024\u4e2a\u5b57\u7b26\u3002 dequantizations : \u7528\u6765\u6807\u8bc6\u6240\u6709\u8f93\u51faTensor\u7684\u6570\u636e\u662f\u5426\u9700\u8981\u505a\u53cd\u91cf\u5316\uff0cTRUE\u6216\u8005FALSE\uff0c\u9ed8\u8ba4\u503c\u4e3aTRUE,\u6570\u91cf\u7b49\u4e8eoutputs\u3002\u5982\u679c\u6709\u591a\u4e2a\u8f93\u51faTensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002\u8be5\u9009\u9879\u4ec5\u5728\u677f\u4e0a\u8fd0\u884c\u65f6\u751f\u6548\u3002\u8be5\u9009\u9879\u8bbe\u4e3aTRUE\u65f6\uff0c\u4f1a\u5728\u8f6c\u6362\u5230Fixed\u6a21\u578b\u540e\u5728\u5bf9\u5e94\u7684\u8f93\u51fa\u589e\u52a0Fix2float\u7b97\u5b50\uff0c\u5b8c\u6210\u8f93\u51fa\u6570\u636e\u4e58scale\u8f6c\u6362\u6210float\u7684\u64cd\u4f5c\u3002 output_layouts : \u7528\u6765\u6807\u8bc6\u8f93\u51faTensor\u7684\u6570\u636e\u6392\u5e03\u683c\u5f0f\uff0c NCHW \u6216\u8005 NHWC \uff0c\u6570\u91cf\u7b49\u4e8eoutputs\u4e2a\u6570\uff0c\u6a21\u578b\u8f93\u51faTensor\u987a\u5e8f\u4e0e output_layouts \u7684\u914d\u7f6e\u987a\u5e8f\u4e00\u81f4\u3002\u5982\u679c\u4e0d\u8bbe\u7f6e\u8be5\u9879\uff0c\u9ed8\u8ba4\u5168\u90e8\u4e3a NHWC \u3002\u5982\u679c\u6709\u591a\u4e2a\u8f93\u51faTensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7\uff08,\uff09\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 NCHW \u8868\u793a\u5bf9\u5e94\u987a\u5e8f\u7684outputTensor\u82e5\u662f\u56db\u7ef4\u5219\u6309\u7167NCHW\u7684\u6570\u636e\u683c\u5f0f\u6392\u5e03\uff08\u4e0ecaffe/onnx\u539f\u6a21\u578b\u76f8\u540c\uff09\uff1b NHWC \u8868\u793a\u5bf9\u5e94\u987a\u5e8f\u7684outputTensor\u82e5\u662f\u56db\u7ef4\u5219\u6309\u7167NHWC\u7684\u683c\u5f0f\u6392\u5e03\uff08\u9ed8\u8ba4\u683c\u5f0f\uff09\u3002 2.2.3 CONV_CONFIG \u00b6 input_format : \u6307\u5b9a\u7f51\u7edc\u4e2d\u6240\u6709\u5377\u79ef\u7684\u91cf\u5316\u65b9\u5f0f\uff0c\u9ed8\u8ba4L5\uff0c\u53ef\u9009\u65b9\u6848ALL_UINT8\uff0cALL_INT16\uff0c CONV2D_INT16\uff0cDEPTHWISE_INT16\u3002 ALL_UINT8 : \u6307\u5b9a\u6240\u6709\u5377\u79ef\u6309\u7167UINT8\u91cf\u5316\u3002 ALL_INT16 : \u6307\u5b9a\u6240\u6709\u5377\u79ef\u6309\u7167INT16\u91cf\u5316\u3002 CONV2D_INT16 : \u53ea\u6307\u5b9a\u6240\u6709\u666e\u901a\u5377\u79ef\u6309\u7167INT16\u91cf\u5316\u3002 DEPTHWISE_INT16 : \u53ea\u6307\u5b9a\u6240\u6709Depthwise \u5377\u79ef\u6309\u7167INT16\u91cf\u5316\u3002 \u5728 ALL_UINT8 \u6a21\u5f0f \u4e0b\uff0c\u5377\u79ef\u8fd0\u884c\u6240\u5360\u5e26\u5bbd\u5c0f\uff0c\u8fd0\u884c\u901f\u5ea6\u5feb\uff1b\u5728 ALL_INT16 \u6a21\u5f0f \u4e0b\uff0c\u53ef\u4ee5\u6781\u5927\u7684\u63d0\u9ad8\u5377\u79ef\u7684\u7cbe\u5ea6\uff0c\u4f46\u662f\u8fd0\u884c\u7684\u901f\u5ea6\u4f1a\u6709\u5f71\u54cd\u3002 tensor_arrays : \u6307\u5b9a\u7f51\u7edc\u4e2d\u67d0\u4e9b\u5c42\u7684\u5377\u79ef\u91cf\u5316\u65b9\u5f0f\u3002\u6574\u4e2a\u7f51\u7edc\u5377\u79ef\u90fd\u91c7\u7528\u9ed8\u8ba4\u7684UINT8 \uff0c\u4f46\u662f\u67d0\u4e9b\u5377\u79ef\u5c42\u9700\u8981\u66f4\u9ad8\u7684\u7cbe\u5ea6\uff0c\u8fd9\u65f6\u76f4\u63a5\u586b\u5199\u90a3\u4e9b\u5377\u79ef\u5c42\u7684\u7b2c\u4e00\u4e2a\u8f93\u5165\u7684 input id name\u5373\u53ef\u3002\u591a\u5c42\u65f6\uff0cname\u4ee5\u9017\u53f7( , )\u5206\u9694\u3002 \u6ce8\u610f \u5377\u79ef\u7b2c\u4e00\u4e2a\u8f93\u5165\u7684input id\u540d\u5b57\u53ef\u901a\u8fc7netron\u5de5\u5177\u67e5\u770b\u3002\u6307\u5b9a\u91cf\u5316\u65f6\uff0c\u7f51\u7edc\u4e2d\u7684\u7b2c\u4e00\u5c42\u5377\u79ef\u4e0d\u751f\u6548\u3002 2.2.4 OPTIMIZE_CONFIG \u00b6 skip_concatenation : \u7f51\u7edc\u4e2d\u7684Concatenation\u5c42\uff0c\u5982\u679c\u53ea\u9488\u5bf9\u6700\u540e\u4e00\u4e2a\u7ef4\u5ea6\u5408\u5e76\uff0c\u4f1a\u8d70\u8fdb\u8be5\u4f18\u5316\u4e2d\u3002Fixed\u6a21\u578b\u4f1a\u5c06Concatenation\u5c42\u8f6c\u6362\u4e3askip_concatenation\uff0cskip_concatenation\u5c42\u4f1a\u5927\u5e45\u51cf\u5c0f\u8fd0\u884c\u65f6\u95f4\u3002 2.2.5 \u8f93\u5165\u8f93\u51fa\u914d\u7f6e\u603b\u7ed3 \u00b6 training_input_formats input_formats \u677f\u4e0a\u8fd0\u884c\u65f6\u6570\u636e\u5bf9\u9f50\u65b9\u5f0f RGB/BGR RGB/BGR \u4e0d\u7528\u5bf9\u9f50 RGB/BGR RGBA/BGRA W = ALIGN_UP(W * 4, input_width_alignment ) / 4 input_width_alignment \u9ed8\u8ba4\u4e3a1 RGB/BGR/GRAY YUV_NV12 H = ALIGN_UP(H, input_height_alignment ) input_height_alignment \u9ed8\u8ba4\u4e3a2 W = ALIGN_UP(W, input_width_alignment ) input_width_alignment \u9ed8\u8ba4\u4e3a2 GRAY GRAY H = ALIGN_UP(H, input_height_alignment ) input_height_alignment \u9ed8\u8ba4\u4e3a1 W = ALIGN_UP(W, input_width_alignment ) input_width_alignment \u9ed8\u8ba4\u4e3a1 RAWDATA_F32_NHWC RAWDATA_F32_NHWC \u4e0d\u7528\u5bf9\u9f50 RAWDATA_S16_NHWC RAWDATA_S16_NHWC \u4e0d\u7528\u5bf9\u9f50 \u5982\u679c\u914d\u7f6e dequantizations \u4e3aTRUE\uff0c\u751f\u6210\u7684\u6a21\u578b\u5bf9\u5e94\u8f93\u51fa\u4f1a\u589e\u52a0Fix2Float\u7b97\u5b50\uff0c\u8f93\u51fa\u6570\u636e\u7c7b\u578b\u4e3afloat32\uff0c\u6570\u636e\u4e0e\u8f93\u51fashape\u4e00\u81f4\uff0c\u6ca1\u6709\u5bf9\u9f50\u8981\u6c42\u3002 \u5982\u679c\u914d\u7f6e dequantizations \u4e3aFALSE\uff0c\u5728\u677f\u7aef\u8fd0\u884c\u65f6\u8f93\u51fa\u6570\u636e\u7c7b\u578b\u4e3aint16\uff0c\u6570\u636e\u4e0e\u8f93\u51fashape\u4e00\u81f4\uff0c\u6ca1\u6709\u5bf9\u9f50\u8981\u6c42\u3002","title":"Convert"},{"location":"module/User_Guide/IPU220/Convert.html#21","text":"Convert Tool\u5de5\u5177\u7684\u4f4d\u7f6e\u5728 SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py \u3002 \u76ee\u524dConvert Tool\u652f\u6301\u4ecetensorflow_graphdef\uff0ctensorflow_savemodel\uff0ckeras\uff0ctflite\uff0ccaffe\uff0connx \u516d\u79cd\u6846\u67b6\u6a21\u578b\u8f6c\u6362\u4e3aSGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u3002 \u4f7f\u7528\u524d\u5148\u5728SGS_IPU_SDK\u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK source cfg_env.sh \u4e0b\u9762\u662fConvert Tool\u76ee\u524d\u652f\u6301\u7684platform information\uff1a python3 ConvertTool.py -h usage : ConvertTool.py [-h] {tensorflow_graphdef,tensorflow_savemodel,keras,tflite,caffe,onnx} ... Convert Tool positional arguments : {tensorflow_graphdef,tensorflow_savemodel,keras,tflite,caffe,onnx} platform info tensorflow_graphdef tensorflow graphdef commands tensorflow_savemodel tensorflow save_model commands keras keras commands tflite tflite commands caffe caffe commands onnx onnx commands optional arguments : -h, --help show this help message and exit \u5982\u679c\u60f3\u8fdb\u4e00\u6b65\u770b\u770b\u5404\u4e2a\u5e73\u53f0\u8f6c\u6362\u6240\u9700\u8981\u7684\u53c2\u6570\u4fe1\u606f\uff0c\u53ef\u4ee5\u6267\u884c python3 ConvertTool.py {platform} \u2013h \uff0c\u5404\u4e2a\u5e73\u53f0\u5177\u4f53\u4fe1\u606f\u548c\u67e5\u770b\u6307\u4ee4\u5982\u4e0b\uff1a","title":"2.1. \u4f7f\u7528\u65b9\u6cd5"},{"location":"module/User_Guide/IPU220/Convert.html#211-tensorflow_graphdef","text":"python3 ConvertTool.py tensorflow_graphdef -h usage : ConvertTool.py tensorflow_graphdef [-h] --graph_def_file GRAPH_DEF_FILE --input_config INPUT_CONFIG --output_file OUTPUT_FILE --input_shapes INPUT_SHAPES (optional) optional arguments : -h, --help show this help message and exit. --graph_def_file GRAPH_DEF_FILE Full filepath of file containing frozen GraphDef. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth. Default : None \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ConvertTool.py tensorflow_graphdef \\ --graph_def_file ~/SGS_Models/tensorflow/resnet_v2_50/resnet_v2_50.pb \\ --output_file ./resnet_v2_float.sim \\ --input_shapes 1,299,299,3 \\ --input_config ~/SGS_Models/tensorflow/resnet_v2_50/input_config.ini \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a --graph_def_file : \u8f93\u5165\u7684\u6a21\u578b\u4e3aTensorFlow frozen\u7684graphdef\u7684pb\u683c\u5f0f\u6587\u4ef6\u8def\u5f84\u3002 --output_file : \u8f93\u51fa\u7684\u6a21\u578b\u6587\u4ef6\uff0cflatbuffer\u683c\u5f0f\uff0csim\u540e\u7f00\u6587\u4ef6\u3002 --input_shapes : \u7f51\u7edc\u8f93\u5165Tensor\u7684shape\uff0c\u683c\u5f0f\u4e3aNHWC\uff0cdimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0cshape\u4e2a\u6570\u548cinputs\u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002","title":"2.1.1 tensorflow_graphdef \u6846\u67b6\u6307\u4ee4"},{"location":"module/User_Guide/IPU220/Convert.html#212-tensorflow_savemodel","text":"python3 ConvertTool.py tensorflow_savemodel -h usage : ConvertTool.py tensorflow_savemodel [-h] --saved_model_dir SAVED_MODEL_DIR --input_config INPUT_CONFIG --output_file OUTPUT_FILE --input_shapes INPUT_SHAPES (optional) --tag_set TAG_SET (optional) --signature_key SIGNATURE_KEY (optional) optional arguments : -h, --help show this help message and exit. --saved_model_dir SAVED_MODEL_DIR SavedModel directory to convert. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. --debug Run gdb in Debug mode. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth Default : None. --tag_set TAG_SET Set of tags identifying the MetaGraphDef within the SavedModel to analyze. All tags in the tag set must be present. Default : None. --signature_key SIGNATURE_KEY Key identifying SignatureDef containing inputs and outputs. Default : DEFAULT_SERVING_SIGNATURE_DEF_KEY \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ConvertTool.py tensorflow_savemodel \\ --saved_model_dir ~/test/tensorflow_model/save_model \\ --input_config ~/test/tensorflow_model/input_config.ini \\ --output_file ~/test/tensorflow_model/save_model_float.sim \\ --tag_set test_saved_model \\ --signature_key test_signature \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a --saved_model_dir : \u8f93\u5165\u7684\u6a21\u578b\u4e3aTensorFlow saved_model.builder\u751f\u6210\u7684\u6587\u4ef6\u8def\u5f84\u3002 --output_file : \u8f93\u51fa\u7684\u6a21\u578b\u6587\u4ef6\uff0cflatbuffer\u683c\u5f0f\uff0csim\u540e\u7f00\u6587\u4ef6\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 \u53ef\u9009\u53c2\u6570\uff1a --input_shapes : \u7f51\u7edc\u8f93\u5165Tensor\u7684shape\uff0c\u683c\u5f0f\u4e3aNHWC\uff0cdimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0cshape\u4e2a\u6570\u548cinputs \u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002\u82e5\u4e0d\u6307\u5b9a\u5219\u4ecesaved_model_dir\u4e2d\u83b7\u53d6\u3002 --tag_set : \u9700\u8981\u548csave model\u65f6\u6240\u6307\u5b9a\u7684tag\u5339\u914d\uff0c\u5982\u679c\u4e0d\u505a\u8bbe\u5b9a\uff0c\u5219\u9ed8\u8ba4\u4e3a\u2018serve\u2019\u3002 --signature_key : \u9700\u8981\u548csave model\u65f6\u6240\u6307\u5b9a\u7684signature\u5339\u914d\u3002\u5982\u679c\u4e0d\u505a\u8bbe\u5b9a\uff0c\u5219\u9ed8\u8ba4\u4e3a \u2018DEFAULT_SERVING_SIGNATURE_DEF_KEY\u2019","title":"2.1.2 tensorflow_savemodel \u6846\u67b6\u6307\u4ee4"},{"location":"module/User_Guide/IPU220/Convert.html#213-keras","text":"python3 ConvertTool.py keras -h usage : ConvertTool.py keras [-h] --model_file MODEL_FILE --input_config INPUT_CONFIG --output_file OUTPUT_FILE --input_shapes INPUT_SHAPES (optional) --custom_objects CUSTOM_OBJECTS (optional) optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of HDF5 file containing the tf.keras model. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth. Default : None. --custom_objects CUSTOM_OBJECTS Dict mapping names (strings) to custom classes or functions to be considered during model deserialization. Default : None. \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ConvertTool.py keras \\ --model_file ./TEST_h5/resnet50/resnet50.h5 \\ --input_config ./TEST_h5/resnet50/input_config.ini \\ --output_file ./TEST_h5/resnet50/resnet50_float.sim \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a --model_file : \u8f93\u5165\u7684\u6a21\u578b\u4e3akeras h5\u683c\u5f0f\u6587\u4ef6\u8def\u5f84\u3002 --output_file : \u8f93\u51fa\u7684\u6a21\u578b\u6587\u4ef6\uff0cflatbuffer\u683c\u5f0f\uff0csim\u540e\u7f00\u6587\u4ef6\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 \u53ef\u9009\u53c2\u6570\uff1a --input_shapes : \u7f51\u7edc\u8f93\u5165Tensor\u7684shape\uff0c\u683c\u5f0f\u4e3aNHWC\uff0cdimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0cshape\u4e2a\u6570\u548cinputs \u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002 --custom_objects : Dict mapping names (strings) to custom classes or functions to be considered during model deserialization (default None).","title":"2.1.3 keras\u6846\u67b6\u6307\u4ee4"},{"location":"module/User_Guide/IPU220/Convert.html#214-tflite","text":"python3 ConvertTool.py tflite -h usage : ConvertTool.py tflite [-h] --model_file MODEL_FILE --input_config INPUT_CONFIG --output_file OUTPUT_FILE optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of tflite file containing the tflite model. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ConvertTool.py tflite \\ --model_file ~/test/tensorflow_model/Debug_save_model_float.tflite \\ --input_config ~/test/tensorflow_model/input_config.ini \\ --output_file ~/test/tensorflow_model/save_model_float.sim \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a --model_file : \u8f93\u5165\u7684\u6a21\u578b\u4e3atflite\u683c\u5f0f\u6587\u4ef6\u8def\u5f84(\u5fc5\u987b\u4e3a\u975e\u91cf\u5316\u6a21\u578b)\u3002 --output_file : \u8f93\u51fa\u7684\u6a21\u578b\u6587\u4ef6\uff0cflatbuffer\u683c\u5f0f\uff0csim\u540e\u7f00\u6587\u4ef6\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002","title":"2.1.4 tflite\u6846\u67b6\u6307\u4ee4"},{"location":"module/User_Guide/IPU220/Convert.html#215-caffe","text":"python3 ConvertTool.py caffe -h usage : ConvertTool.py caffe [-h] --model_file MODEL_FILE --weight_file WEIGHT_FILE --input_config INPUT_CONFIG --output_file OUTPUT_FILE optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of tflite file containing the caffe model. --weight_file WEIGHT_FILE Full filepath of tflite file containing the caffe weight. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ConvertTool.py caffe \\ --model_file ~/SGS_Models/caffe/caffe_resnet50_conv/caffe_resnet50_conv.prototxt \\ --weight_file ~/SGS_Models/caffe/caffe_resnet50_conv/caffe_resnet50_conv.caffemodel \\ --input_config ~/SGS_Models/caffe/caffe_resnet50_conv/input_config.ini \\ --output_file ./resnet50_float.sim \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a --model_file : Caffe\u6a21\u578b\u6587\u4ef6\u7684\u8def\u5f84 --weight_file : Caffe\u6743\u91cd\u6587\u4ef6\u7684\u8def\u5f84 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput config\u7684\u914d\u7f6e\u4fe1\u606f\u3002 --output_file : \u8f6c\u6362\u6a21\u578b\u7684\u8f93\u51fa\u8def\u5f84\u3002","title":"2.1.5 caffe\u6846\u67b6\u6307\u4ee4"},{"location":"module/User_Guide/IPU220/Convert.html#216-onnx","text":"python3 Path_to_SGS_IPU_SDK/Scripts/ConvertTool onnx -h usage : ConvertTool.py onnx [-h] --model_file MODEL_FILE --input_shapes INPUT_SHAPES --input_config INPUT_CONFIG --output_file OUTPUT_FILE optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of tflite file containing the onnx model. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon-separated. For many models each shape takes the form N C H W (default None) --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ~/SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py onnx --model_file ~/SGS_Models/onnx/onnx_mobilenet_v2/onnx_mobilenet_v2.onnx \\ --input_shapes 1,3,224,224 \\ --input_config ~/SGS_Models/onnx/onnx_mobilenet_v2/input_config.ini \\ --output_file ./onnx_mobilenet_v2_float.sim \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a --model_file : Onnx\u6a21\u578b\u6587\u4ef6\u7684\u8def\u5f84 --input_shapes : Onnx \u6a21\u578b\u8f93\u5165shape\uff0c \u591a\u8f93\u5165\u7528\u5192\u53f7( : )\u5206\u9694 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput config\u7684\u914d\u7f6e\u4fe1\u606f\u3002 --output_file : \u8f6c\u6362\u6a21\u578b\u7684\u8f93\u51fa\u8def\u5f84\u3002 \u6ce8\u610f 1.\u5982\u679c\u6a21\u578b\u4e2d\u5e26\u6709\u540e\u5904\u7406\u7684\u7b97\u5b50\uff0c\u8bf7\u5148\u53bb\u9664\uff0c\u76ee\u524d\u53ea\u652f\u6301\u4e3b\u5e72\u7f51\u7edc\u7684\u8f6c\u6362\u3002 2.Convert Tool\u8f6c\u6362\u5de5\u5177\u8f6c\u6362\u5b8c\u6210\u540e\u4f1a\u751f\u6210\u4e24\u4e2a\u6587\u4ef6\uff0c\u4f8b\u5982 --output_file \u6307\u5b9a\u4e3a ./resnet50_float.sim\uff0c\u8f6c\u6362\u5b8c\u6210\u540e\u4f1a\u751f\u6210Debug_resnet50_float.sim\u548cresnet50_float.sim\u3002\u5176\u4e2d\uff0cresnet50_float.sim\u662f\u771f\u6b63\u8f6c\u6362\u597d\u7684\u6587\u4ef6\uff0cDebug_resnet50_float.sim\u662f\u7ecf\u8fc7\u8f6c\u6362\u540e\u7684\u4e2d\u95f4\u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u672a\u7ecf\u8fc7\u4f18\u5316\uff0c\u4e0e\u539f\u6846\u67b6\u6a21\u578b\u62e5\u6709\u76f8\u540c\u7684\u7f51\u7edc\u7ed3\u6784\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f5c\u4e3a\u8f6c\u6362\u540e\u8c03\u8bd5\u4f7f\u7528\uff0c\u4f46\u662f\u65e0\u6cd5\u5728IPU SDK\u4e2d\u8fd0\u884c\u3002","title":"2.1.6 Onnx\u6846\u67b6\u6307\u4ee4"},{"location":"module/User_Guide/IPU220/Convert.html#22-input-config","text":"\u5de5\u5177\u7684\u53c2\u6570 --input_config \u9700\u8981\u6307\u5b9ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u6587\u4ef6input_config.ini\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u7684\u4e3b\u8981\u529f\u80fd\u6709\uff1a \u2022 \u914d\u7f6e\u7f51\u7edc\u6a21\u578b\u56fe\u7247\u524d\u5904\u7406\u7684\u5f52\u4e00\u5316\u4fe1\u606f\uff1b \u2022 \u914d\u7f6e\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u8f93\u51fa\u7684\u91cf\u5316\u5904\u7406\u4fe1\u606f\uff1b \u2022 \u914d\u7f6e\u7f51\u7edc\u6a21\u578b\u4e2d\u5377\u79ef\u7684\u91cf\u5316\u4fe1\u606f\u3002 \u914d\u7f6einput_config.ini\u6587\u4ef6\u4e3b\u8981\u662f\u4e3a\u4e86\u80fd\u5c06\u7f51\u7edc\u6a21\u578b\u5feb\u901f\u9002\u914d\u5230SigmaStar\u82af\u7247\u4e2d\u4f7f\u7528\u3002\u5728\u7f51\u7edc\u6a21\u578b\u7684\u8bad\u7ec3\u4e2d\uff0c\u4e0d\u540c\u7684\u6846\u67b6\u548c\u8bad\u7ec3\u6570\u636e\u96c6\u9700\u8981\u7f51\u7edc\u4f7f\u7528\u4e0d\u540c\u7684\u56fe\u7247\u5f52\u4e00\u5316\u65b9\u6cd5\uff0c\u800c\u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0c\u4e3a\u4e86\u80fd\u591f\u8ba9\u7f51\u7edc\u6a21\u578b\u7684\u9884\u6d4b\u66f4\u52a0\u51c6\u786e\uff0c\u9700\u8981\u8fd8\u539f\u8bad\u7ec3\u6a21\u578b\u65f6\u7684\u56fe\u7247\u524d\u5904\u7406\u5f52\u4e00\u5316\u65b9\u6cd5\u3002 \u5c06RGB\u4e09\u4e2a\u901a\u9053\u7684\u5747\u503c\u548cstd_value\u8bbe\u7f6e\u597d\u540e\uff0c\u5728\u8f6c\u6362\u6a21\u578b\u65f6\u4f1a\u5199\u5165\u5230\u6a21\u578b\u5185\u90e8\uff0c\u8fd9\u6837\u5728\u786c\u4ef6\u4e0a\u5b9e\u9645\u4f7f\u7528\u65f6\uff0c\u4ec5\u9700\u8981\u5c06\u56fe\u7247resize\u5230\u7f51\u7edc\u6a21\u578b\u7684\u8f93\u5165\u7684\u5c3a\u5bf8\uff0c\u56fe\u7247\u5f52\u4e00\u5316\u7684\u5de5\u4f5c\u5728\u7f51\u7edc\u5185\u90e8\u5b8c\u6210\u3002 \u53e6\u5916\uff0c\u5b9e\u9645\u786c\u4ef6\u4e0a\u4f7f\u7528\u65f6\u56fe\u7247\u8f93\u5165\u683c\u5f0f\u4e0e\u8bad\u7ec3\u65f6\u4f7f\u7528\u7684RGB\u53ef\u80fd\u6709\u5f88\u5927\u533a\u522b\uff0c\u6b63\u786e\u914d\u7f6e\u8fd9\u4e9b\u9009\u9879\u80fd\u4f7f\u8f6c\u6362\u597d\u7684\u6a21\u578b\u5185\u62e5\u6709\u8fd9\u4e9b\u914d\u7f6e\u4fe1\u606f\uff0c\u80fd\u591f\u76f4\u63a5\u5728SigmaStar\u7684\u786c\u4ef6\u4e0a\u90e8\u7f72\u3002 [INPUT_CONFIG] ;Names of the input arrays, comma-separated.image input must be the first. inputs = 'data'; ;Memory formats of input arrays, comma-separated. ;One of RGB, BGR, RGBA, BGRA, YUV_NV12, RAWDATA_S16_NHWC ;Each entry in the list should match an entry in inputs arrays. training_input_formats = BGR; input_formats = BGR; ;Indicate the input data need qauntize or not. ;Each entry in the list should match an entry in inputs arrays. quantizations = TRUE; ;mean_values parameter for image models, ;Each entry in the list match RGB channel of\uff08RGB,BGR,RGBA,BGRA,YUV_NV12\uff09, channel order is R,G,B. mean = 127.5:127.5:127.5; ;std_value parameter for image models, std_value = 1.0; [OUTPUT_CONFIG] ;Names of the output arrays, comma-separated. outputs = 'prob'; ;Indicate the output data need deqauntize or not. ;Each entry in the list should match an entry in outputs arrays. dequantizations = TRUE; [CONV_CONFIG] ;input_format=ALL_INT16; tensor_arrays = 'conv1-1,conv2-1'; \u8be5\u6587\u4ef6\u4e3b\u8981\u5206\u4e3a\u4e09\u4e2a\u8bbe\u7f6e\u4fe1\u606f\uff1a [INPUT_CONFIG] [OUTPUT_CONFIG] [CONV_CONFIG] \u9488\u5bf9\u8fd9\u4e09\u4e2a\u8bbe\u7f6e\u4fe1\u606f\u5177\u4f53\u8bf4\u660e\uff1a \u6ce8\u610f String\u7c7b\u578b\u7684\u503c\uff0c\u5982tensor name\uff0c\u9700\u7528('')\u5c06\u5185\u5bb9\u5305\u542b\u8d77\u6765\uff0c\u4f8b\u5982outputs='detectionBoxes,detectionClasses,detectionScores,numDetections';","title":"2.2. input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e"},{"location":"module/User_Guide/IPU220/Convert.html#221-input_config","text":"inputs : \u7f51\u7edc\u8f93\u5165Tensor\u7684name\uff0c\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u8bf7\u7528\u9017\u53f7( , )\u5206\u9694\u3002\u6a21\u578b\u8f93\u5165Tensor\u987a\u5e8f\u4e0e inputs \u7684\u914d\u7f6e\u987a\u5e8f\u4e00\u81f4\u3002\u6240\u6709\u8f93\u5165name\u7684\u957f\u5ea6\u4e0d\u80fd\u8d85\u8fc71024\u4e2a\u5b57\u7b26\u3002 training_input_formats : \u7f51\u7edc\u8bad\u7ec3\u65f6\u7684\u56fe\u7247\u683c\u5f0f\uff0c\u6570\u91cf\u548c\u987a\u5e8f\u4e0einputs\u4e00\u4e00\u5bf9\u5e94\uff0c\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u3002\u8fd9\u4e9b\u683c\u5f0f\u5305\u62ecRGB\uff0cBGR\uff0cRAWDATA_S16_NHWC(\u82e5 training_input_formats \u8bbe\u7f6e\u4e3a RAWDATA_S16_NHWC ,\u5219 input_formats \u4e5f\u5fc5\u987b\u8bbe\u7f6e\u4e3a RAWDATA_S16_NHWC ) \u5176\u4e2d\u4e4b\u4e00\u3002training_input_formats\u53ef\u4ee5\u548cinput_formats \u4e0d\u4e00\u6837\u3002\u4f8b\u5982\u5728\u5728SigmaStar\u5f00\u53d1\u677f\u4e0a\uff0cinput_formats\u662fYUV_NV12\uff0c\u4f46\u662ftraining input formats \u662fRGB\u3002 input_formats : \u7f51\u7edc\u6a21\u578b\u5728SigmaStar\u82af\u7247\u4e0a\u8fd0\u884c\u7684\u56fe\u7247\u8f93\u5165\u683c\u5f0f\uff0c\u6570\u91cf\u548c\u987a\u5e8f\u4e0einputs\u4e00\u4e00\u5bf9\u5e94\uff0c\u9017\u53f7( , )\u5206\u9694\u3002 \u8fd9\u4e9b\u683c\u5f0f\u5305\u62ec\uff1a RGB BGR RGBA BGRA YUV_NV12 RAWDATA_F32_NHWC RAWDATA_S16_NHWC \u6ce8\u610f\uff1a * training_input_formats \u548c input_formats \u4e0d\u80fd\u914d\u7f6e\u4e3a\u5982\u4e0b\u60c5\u51b5\uff1a training_input_formats=RGB; input_formats=BGR; \u6216\u8005 training_input_formats=BGR; input_formats=RGB; * \u7070\u5ea6\u56fe\u7247\u8bf7\u6309\u5982\u4e0b\u65b9\u5f0f\u914d\u7f6e\uff1a training_input_formats=GRAY; input_formats=YUV_NV12; \u5177\u4f53\u8be6\u89c1 9.1 \u7070\u5ea6\u6a21\u578b\u8f6c\u6362\u8981\u70b9 * \u914d\u7f6e RAWDATA_F32_NHWC \u6216 RAWDATA_S16_NHWC \u65f6\uff0c mean \u548c std_value \u4e0d\u8981\u914d\u7f6e\uff0c\u5177\u4f53\u8be6\u89c1 9.2 RAWDATA_F32_NHWC\u6a21\u578b\u8f6c\u6362\u8981\u70b9 quantizations : \u7528\u6765\u6807\u8bc6\u6240\u6709\u8f93\u5165Tensor\u7684\u6570\u636e\u662f\u5426\u9700\u8981\u505a\u91cf\u5316\uff0cTRUE\u6216\u8005FALSE\uff0c\u9ed8\u8ba4\u503c\u4e3aTRUE,\u6570\u91cf\u7b49\u4e8einputs \u4e2a\u6570\u3002\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 mean : \u7f51\u7edc\u8bad\u7ec3\u9636\u6bb5\uff0c\u4e00\u822c\u4f1a\u5bf9\u56fe\u7247\u505a\u524d\u5904\u7406\uff0c\u5bf9\u4e8eRGB\u901a\u9053\u7684\u56fe\u7247\uff0c\u4f7f\u7528\u5982\u4e0b\u516c\u5f0f\u5bf9\u56fe\u7247\u8fdb\u884c\u9884\u5904\u7406\uff1a mean_red:mean_green:mean_blue \u5c31\u662f\u76f8\u5e94\u901a\u9053\u4e0a\u7684mean\u503c\u3002\u5982\u679c\u8fd9\u4e2a\u7f51\u7edc\u6ca1\u6709\u505a\u4efb\u4f55\u5f52\u4e00\u5316\u5904\u7406\uff0c\u8fd9\u4e2a\u503c\u8bbe\u4e3a0\u5373\u53ef\u3002\u6bcf\u4e2amean\u6570\u91cf\u7b49\u4e8einputs \u4e2a\u6570\u3002\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 std_value : \u5982\u4e0a\u516c\u5f0f\uff0c\u5982\u679c\u6ca1\u6709\u505a\u4efb\u4f55\u5f52\u4e00\u5316\u5904\u7406\uff0c\u8fd9\u4e2a\u503c\u8bbe\u4e3a1\u5373\u53ef\u3002\u5982\u679c\u6bcf\u4e2a\u901a\u9053\u90fd\u6709\u5bf9\u5e94\u7684std_value\u503c\uff0c\u4ee5\u82f1\u6587\u5192\u53f7( : )\u5206\u9694\uff0c\u987a\u5e8f\u4e3aRGB\u3002\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 input_width_alignment \uff1a\u7528\u6765\u6807\u8bc6\u6570\u636e\u4f5c\u4e3a\u7f51\u7edc\u8f93\u5165\u65f6Width\u65b9\u5411\u5bf9\u9f50\u7684\u6570\u91cf\uff0c\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 input_height_alignment \uff1a\u7528\u6765\u6807\u8bc6\u6570\u636e\u4f5c\u4e3a\u7f51\u7edc\u8f93\u5165\u65f6Height\u65b9\u5411\u5bf9\u9f50\u7684\u6570\u91cf\uff0c\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 \u6ce8\u610f \u5f53input_formats\u8bbe\u5b9a\u4e3aYUV_NV12\u65f6\uff0c input_width_alignment \u548c input_height_alignment \u9ed8\u8ba4\u503c\u4e3a2\uff0c\u5176\u4f59\u60c5\u51b5\u9ed8\u8ba4\u503c\u4e3a1\u3002 input_layouts : \u7528\u6765\u6807\u8bc6\u8f93\u5165Tensor\u7684\u6570\u636e\u6392\u5e03\u683c\u5f0f\uff0c NCHW \u6216\u8005 NHWC \uff0c\u6570\u91cf\u7b49\u4e8einputs\u4e2a\u6570\uff0c\u6a21\u578b\u8f93\u5165Tensor\u987a\u5e8f\u4e0e input_layouts \u7684\u914d\u7f6e\u987a\u5e8f\u4e00\u81f4\u3002\u5982\u679c\u4e0d\u8bbe\u7f6e\u8be5\u9879\uff0c\u9ed8\u8ba4\u5168\u90e8\u4e3a NHWC \u3002\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7\uff08,\uff09\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 NCHW \u8868\u793a\u5bf9\u5e94\u987a\u5e8f\u7684inputTensor\u82e5\u662f\u56db\u7ef4\u5219\u6309\u7167NCHW\u7684\u6570\u636e\u683c\u5f0f\u6392\u5e03\uff08\u4e0ecaffe/onnx\u539f\u6a21\u578b\u76f8\u540c\uff09\uff1b NHWC \u8868\u793a\u5bf9\u5e94\u987a\u5e8f\u7684inputTensor\u82e5\u662f\u56db\u7ef4\u5219\u6309\u7167NHWC\u7684\u683c\u5f0f\u6392\u5e03\uff08\u9ed8\u8ba4\u683c\u5f0f\uff09\u3002 \u6ce8\u610f \u5f53\u8be5\u8f93\u5165\u7684 input_layouts \u8bbe\u4e3a NCHW \u4e14\u662f\u56db\u7ef4Tensor\uff0c\u9700\u8981\u786e\u4fdd\u8be5\u8f93\u5165\u5bf9\u5e94\u7684\u524d\u5904\u7406\u811a\u672c\u8fd4\u56de\u6570\u636e\u4e5f\u6309\u7167NCHW\u6392\u5e03\uff0c\u4e14\u677f\u7aef\u8fd0\u884c\u79bb\u7ebf\u6a21\u578b\u65f6\u7684\u8f93\u5165\u6570\u636e\u6392\u5e03\u4e5f\u6309\u7167NCHW\u6392\u5e03\u3002 \u5f53input_formats\u8bbe\u5b9a\u4e3aYUV_NV12\u4e14\u8be5\u8f93\u5165 input_layouts \u8bbe\u4e3a NCHW \uff0c\u524d\u5904\u7406\u811a\u672c\u9700\u8981\u6309\u7167 training_input_formats \uff08BGR\u3001RGB\u3001GRAY\uff09\u8fd4\u56deNCHW\u6392\u5e03\u7684\u6570\u636e\uff0c\u800c\u5728\u677f\u7aef\u8fd0\u884c\u79bb\u7ebf\u6a21\u578b\u65f6\u7684\u8f93\u5165\u6570\u636e\u4e3a\u6b63\u5e38\u6392\u5e03\u7684YUV_NV12\u3002 \u5f53input_formats\u8bbe\u5b9a\u4e3aRGBA\u3001BGRA\u65f6\uff0c\u8be5\u8f93\u5165\u4e0d\u652f\u6301 input_layouts \u8bbe\u4e3a NCHW \u3002","title":"2.2.1 INPUT_CONFIG"},{"location":"module/User_Guide/IPU220/Convert.html#222-output_config","text":"outputs : \u7f51\u7edc\u8f93\u51faTensor\u7684name(\u53ef\u7528Netron\u5de5\u5177\u6253\u5f00\u6a21\u578b\u67e5\u770b)\uff0c\u5982\u679c\u6709\u591a\u4e2a\u8f93\u51faTensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u3002\u8f6c\u6362\u5e26\u540e\u5904\u7406\u7f51\u7edc\u65f6\uff0cBackbone\u7f51\u7edc\u7684outputs\u4e0e\u5b8c\u6574\u7f51\u7edcoutputs\u7684\u540d\u79f0\u4e0d\u540c\uff0c\u5176\u4f59\u8bbe\u7f6e\u5e94\u5b8c\u5168\u4e00\u81f4\u3002\u6a21\u578b\u8f93\u51faTensor\u987a\u5e8f\u4e0e outputs \u7684\u914d\u7f6e\u987a\u5e8f\u4e00\u81f4\u3002\u6240\u6709\u8f93\u51faname\u7684\u957f\u5ea6\u4e0d\u80fd\u8d85\u8fc71024\u4e2a\u5b57\u7b26\u3002 dequantizations : \u7528\u6765\u6807\u8bc6\u6240\u6709\u8f93\u51faTensor\u7684\u6570\u636e\u662f\u5426\u9700\u8981\u505a\u53cd\u91cf\u5316\uff0cTRUE\u6216\u8005FALSE\uff0c\u9ed8\u8ba4\u503c\u4e3aTRUE,\u6570\u91cf\u7b49\u4e8eoutputs\u3002\u5982\u679c\u6709\u591a\u4e2a\u8f93\u51faTensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002\u8be5\u9009\u9879\u4ec5\u5728\u677f\u4e0a\u8fd0\u884c\u65f6\u751f\u6548\u3002\u8be5\u9009\u9879\u8bbe\u4e3aTRUE\u65f6\uff0c\u4f1a\u5728\u8f6c\u6362\u5230Fixed\u6a21\u578b\u540e\u5728\u5bf9\u5e94\u7684\u8f93\u51fa\u589e\u52a0Fix2float\u7b97\u5b50\uff0c\u5b8c\u6210\u8f93\u51fa\u6570\u636e\u4e58scale\u8f6c\u6362\u6210float\u7684\u64cd\u4f5c\u3002 output_layouts : \u7528\u6765\u6807\u8bc6\u8f93\u51faTensor\u7684\u6570\u636e\u6392\u5e03\u683c\u5f0f\uff0c NCHW \u6216\u8005 NHWC \uff0c\u6570\u91cf\u7b49\u4e8eoutputs\u4e2a\u6570\uff0c\u6a21\u578b\u8f93\u51faTensor\u987a\u5e8f\u4e0e output_layouts \u7684\u914d\u7f6e\u987a\u5e8f\u4e00\u81f4\u3002\u5982\u679c\u4e0d\u8bbe\u7f6e\u8be5\u9879\uff0c\u9ed8\u8ba4\u5168\u90e8\u4e3a NHWC \u3002\u5982\u679c\u6709\u591a\u4e2a\u8f93\u51faTensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7\uff08,\uff09\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 NCHW \u8868\u793a\u5bf9\u5e94\u987a\u5e8f\u7684outputTensor\u82e5\u662f\u56db\u7ef4\u5219\u6309\u7167NCHW\u7684\u6570\u636e\u683c\u5f0f\u6392\u5e03\uff08\u4e0ecaffe/onnx\u539f\u6a21\u578b\u76f8\u540c\uff09\uff1b NHWC \u8868\u793a\u5bf9\u5e94\u987a\u5e8f\u7684outputTensor\u82e5\u662f\u56db\u7ef4\u5219\u6309\u7167NHWC\u7684\u683c\u5f0f\u6392\u5e03\uff08\u9ed8\u8ba4\u683c\u5f0f\uff09\u3002","title":"2.2.2 OUTPUT_CONFIG"},{"location":"module/User_Guide/IPU220/Convert.html#223-conv_config","text":"input_format : \u6307\u5b9a\u7f51\u7edc\u4e2d\u6240\u6709\u5377\u79ef\u7684\u91cf\u5316\u65b9\u5f0f\uff0c\u9ed8\u8ba4L5\uff0c\u53ef\u9009\u65b9\u6848ALL_UINT8\uff0cALL_INT16\uff0c CONV2D_INT16\uff0cDEPTHWISE_INT16\u3002 ALL_UINT8 : \u6307\u5b9a\u6240\u6709\u5377\u79ef\u6309\u7167UINT8\u91cf\u5316\u3002 ALL_INT16 : \u6307\u5b9a\u6240\u6709\u5377\u79ef\u6309\u7167INT16\u91cf\u5316\u3002 CONV2D_INT16 : \u53ea\u6307\u5b9a\u6240\u6709\u666e\u901a\u5377\u79ef\u6309\u7167INT16\u91cf\u5316\u3002 DEPTHWISE_INT16 : \u53ea\u6307\u5b9a\u6240\u6709Depthwise \u5377\u79ef\u6309\u7167INT16\u91cf\u5316\u3002 \u5728 ALL_UINT8 \u6a21\u5f0f \u4e0b\uff0c\u5377\u79ef\u8fd0\u884c\u6240\u5360\u5e26\u5bbd\u5c0f\uff0c\u8fd0\u884c\u901f\u5ea6\u5feb\uff1b\u5728 ALL_INT16 \u6a21\u5f0f \u4e0b\uff0c\u53ef\u4ee5\u6781\u5927\u7684\u63d0\u9ad8\u5377\u79ef\u7684\u7cbe\u5ea6\uff0c\u4f46\u662f\u8fd0\u884c\u7684\u901f\u5ea6\u4f1a\u6709\u5f71\u54cd\u3002 tensor_arrays : \u6307\u5b9a\u7f51\u7edc\u4e2d\u67d0\u4e9b\u5c42\u7684\u5377\u79ef\u91cf\u5316\u65b9\u5f0f\u3002\u6574\u4e2a\u7f51\u7edc\u5377\u79ef\u90fd\u91c7\u7528\u9ed8\u8ba4\u7684UINT8 \uff0c\u4f46\u662f\u67d0\u4e9b\u5377\u79ef\u5c42\u9700\u8981\u66f4\u9ad8\u7684\u7cbe\u5ea6\uff0c\u8fd9\u65f6\u76f4\u63a5\u586b\u5199\u90a3\u4e9b\u5377\u79ef\u5c42\u7684\u7b2c\u4e00\u4e2a\u8f93\u5165\u7684 input id name\u5373\u53ef\u3002\u591a\u5c42\u65f6\uff0cname\u4ee5\u9017\u53f7( , )\u5206\u9694\u3002 \u6ce8\u610f \u5377\u79ef\u7b2c\u4e00\u4e2a\u8f93\u5165\u7684input id\u540d\u5b57\u53ef\u901a\u8fc7netron\u5de5\u5177\u67e5\u770b\u3002\u6307\u5b9a\u91cf\u5316\u65f6\uff0c\u7f51\u7edc\u4e2d\u7684\u7b2c\u4e00\u5c42\u5377\u79ef\u4e0d\u751f\u6548\u3002","title":"2.2.3 CONV_CONFIG"},{"location":"module/User_Guide/IPU220/Convert.html#224-optimize_config","text":"skip_concatenation : \u7f51\u7edc\u4e2d\u7684Concatenation\u5c42\uff0c\u5982\u679c\u53ea\u9488\u5bf9\u6700\u540e\u4e00\u4e2a\u7ef4\u5ea6\u5408\u5e76\uff0c\u4f1a\u8d70\u8fdb\u8be5\u4f18\u5316\u4e2d\u3002Fixed\u6a21\u578b\u4f1a\u5c06Concatenation\u5c42\u8f6c\u6362\u4e3askip_concatenation\uff0cskip_concatenation\u5c42\u4f1a\u5927\u5e45\u51cf\u5c0f\u8fd0\u884c\u65f6\u95f4\u3002","title":"2.2.4 OPTIMIZE_CONFIG"},{"location":"module/User_Guide/IPU220/Convert.html#225","text":"training_input_formats input_formats \u677f\u4e0a\u8fd0\u884c\u65f6\u6570\u636e\u5bf9\u9f50\u65b9\u5f0f RGB/BGR RGB/BGR \u4e0d\u7528\u5bf9\u9f50 RGB/BGR RGBA/BGRA W = ALIGN_UP(W * 4, input_width_alignment ) / 4 input_width_alignment \u9ed8\u8ba4\u4e3a1 RGB/BGR/GRAY YUV_NV12 H = ALIGN_UP(H, input_height_alignment ) input_height_alignment \u9ed8\u8ba4\u4e3a2 W = ALIGN_UP(W, input_width_alignment ) input_width_alignment \u9ed8\u8ba4\u4e3a2 GRAY GRAY H = ALIGN_UP(H, input_height_alignment ) input_height_alignment \u9ed8\u8ba4\u4e3a1 W = ALIGN_UP(W, input_width_alignment ) input_width_alignment \u9ed8\u8ba4\u4e3a1 RAWDATA_F32_NHWC RAWDATA_F32_NHWC \u4e0d\u7528\u5bf9\u9f50 RAWDATA_S16_NHWC RAWDATA_S16_NHWC \u4e0d\u7528\u5bf9\u9f50 \u5982\u679c\u914d\u7f6e dequantizations \u4e3aTRUE\uff0c\u751f\u6210\u7684\u6a21\u578b\u5bf9\u5e94\u8f93\u51fa\u4f1a\u589e\u52a0Fix2Float\u7b97\u5b50\uff0c\u8f93\u51fa\u6570\u636e\u7c7b\u578b\u4e3afloat32\uff0c\u6570\u636e\u4e0e\u8f93\u51fashape\u4e00\u81f4\uff0c\u6ca1\u6709\u5bf9\u9f50\u8981\u6c42\u3002 \u5982\u679c\u914d\u7f6e dequantizations \u4e3aFALSE\uff0c\u5728\u677f\u7aef\u8fd0\u884c\u65f6\u8f93\u51fa\u6570\u636e\u7c7b\u578b\u4e3aint16\uff0c\u6570\u636e\u4e0e\u8f93\u51fashape\u4e00\u81f4\uff0c\u6ca1\u6709\u5bf9\u9f50\u8981\u6c42\u3002","title":"2.2.5 \u8f93\u5165\u8f93\u51fa\u914d\u7f6e\u603b\u7ed3"},{"location":"module/User_Guide/IPU220/Running_Offline_Network_Model_On_Development_Board.html","text":"\u5efa\u8bae\u5728\u5f00\u53d1\u677f\u4e0a\u8fd0\u884c\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u4e4b\u524d\uff0c\u4f7f\u7528Simulator\u5bf9\u6a21\u578b\u8fdb\u884c\u9a8c\u8bc1\u3002Simulator\u80fd\u591f\u5728PC\u7aef\u6a21\u62df\u677f\u4e0a\u8fd0\u884c\u73af\u5883\u3002 \u9996\u5148\u786e\u4fdd\u5f00\u53d1\u677f\u5df2\u7ecf\u70e7\u5f55\u597d\u6700\u65b0\u7684\u56fa\u4ef6\uff0c\u4f7f\u7528Demo\u4e2d\u7684dla_classify\u53ef\u5bf9\u5355\u5f20\u56fe\u7247\u63a8\u6f14\u4e00\u6b21\uff0c\u7ed3\u679c\u4e3a\u63a8\u6f14\u7ed3\u679c\u7684TOP5\u3002\u4e0b\u9762\u5206\u89e3dla_classify.cpp\u6587\u4ef6\uff0c\u9488\u5bf9\u4f7f\u7528MI_IPU API\u7684\u987a\u5e8f\u4e3e\u4f8b\u8bf4\u660e\u3002 dla_classify.cpp\u6587\u4ef6\u8def\u5f84\u4e3a\uff1a sdk/verify/mi_demo/source/dla/dla_classify/dla_classify.cpp 10.1. \u521b\u5efaIPU\u8bbe\u5907 \u00b6 MI_S32 IPUCreateDevice ( char * pFirmwarePath , MI_U32 u32VarBufSize ) { MI_S32 s32Ret = MI_SUCCESS ; MI_IPU_DevAttr_t stDevAttr ; stDevAttr . u32MaxVariableBufSize = u32VarBufSize ; stDevAttr . u32YUV420_W_Pitch_Alignment = 2 ; stDevAttr . u32YUV420_H_Pitch_Alignment = 2 ; stDevAttr . u32XRGB_W_Pitch_Alignment = 1 ; s32Ret = MI_IPU_CreateDevice ( & stDevAttr , NULL , pFirmwarePath , 0 ); return s32Ret ; } \u8f93\u5165\u53c2\u6570\uff1a pFirmwarePath\uff1a\u5728\u8be5\u6b3echip\u4e0a\u4e0d\u518d\u9700\u8981firmware\uff0c\u56e0\u6b64\u4f20NULL u32VarBufSize\uff1a\u6a21\u578b\u5185\u90e8Tensor\u4f7f\u7528\u7684memory\u7684\u6700\u5927\u5927\u5c0f u32VarBufSize\u83b7\u53d6\u65b9\u6cd5\u5982\u4e0b \uff1a \u65b9\u6cd5 1 : \u53ef\u4ee5\u901a\u8fc7 parse_net\u5de5\u5177\u83b7\u53d6 parse_net\u5de5\u5177\u8def\u5f84 \uff1a SGS_IPU_SDK / bin / parse_net \u4f7f\u7528\u65f6\u76f4\u63a5\u5728 parse_net\u547d\u4ee4\u540e\u52a0\u4e0a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8def\u5f84\u5373\u53ef \uff0c\u53ef\u53c2\u8003\u4ee5\u4e0b\u547d\u4ee4\uff1a . / parse_net xxx_fixed . sim | grep Variable \u8f93\u51fa\uff1a | |--> SubGraph [ 0 ] : Variable buffer 0xd2f00 @ 0x82f3b40 . \u5176\u4e2d 0xd2f00 \u5411 2 \u5bf9\u9f50\u540e\u4e3a u32VarBufSize\u5927\u5c0f \u3002 \u5728 C / C ++ \u4e2d\uff0c\u5411 2 \u5bf9\u9f50\u7684\u5b9a\u4e49\u4e3a\uff1a #define alignment_up(a, size) ((a + size - 1) & (~(size - 1))) \u6240\u4ee5 u32VarBufSize\u4e3a864000 \u3002 \u65b9\u6cd5 2 : \u4f7f\u7528 MI\u7684API\u83b7\u53d6 MI_IPU_OfflineModelStaticInfo_t OfflineModelInfo ; ret = MI_IPU_GetOfflineModeStaticInfo ( NULL , modelFilePath , & OfflineModelInfo ); if ( ret != MI_SUCCESS ) { std :: cerr << \"get model variable buffer size failed!\" << std :: endl ; return ; } u32VarBufSize = OfflineModelInfo . u32VariableBufferSize \u5982\u679c\u6709\u591a\u4e2a\u6a21\u578b\u9700\u8981\u8fd0\u884c\uff0c\u9009\u53d6\u6700\u5927\u7684 u32VarBufSize\u521b\u5efaIPU\u8bbe\u5907\u5373\u53ef \u3002 \u8f93\u51fa\u53c2\u6570\uff1aMI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b 10.2. \u521b\u5efaIPU\u901a\u9053 \u00b6 MI_S32 IPUCreateChannel ( MI_U32 * u32Channel , char * pModelImage ) { MI_S32 s32Ret ; MI_IPUChnAttr_t stChnAttr ; //create channel memset ( & stChnAttr , 0 , sizeof ( stChnAttr )); stChnAttr . u32InputBufDepth = 2 ; stChnAttr . u32OutputBufDepth = 2 ; return MI_IPU_CreateCHN ( u32Channel , & stChnAttr , NULL , pModelImage ); } MI_U32 u32Channel ; ret = IPUCreateChannel ( & u32ChannelID , \u201c . / mobilenet_v1_fixed . img \u201d ); \u8f93\u5165\u53c2\u6570\uff1a u32Channel\uff1a\u521b\u5efaIPU\u901a\u9053\u7684ID pModelImage\uff1a\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u79bb\u7ebf \u5982\u679c\u9700\u8981\u652f\u6301\u6279\u5904\u7406\u8f93\u5165\uff0c\u8bf7\u53c2\u8003 sdk/verify/mi_demo/source/dla/dla_simulator_nbatch/dla_simulator_nbatch.cpp MI_S32 IPUCreateChannel ( MI_U32 * u32Channel , char * pModelImage , int number ) { MI_SYS_GlobalPrivPoolConfig_t stGlobalPrivPoolConf ; MI_IPUChnAttr_t stChnAttr ; //create channel memset ( & stChnAttr , 0 , sizeof ( stChnAttr )); stChnAttr . u32InputBufDepth = 1 ; stChnAttr . u32OutputBufDepth = 1 ; stChnAttr . u32BatchMax = number ; return MI_IPU_CreateCHN ( u32Channel , & stChnAttr , NULL , pModelImage ); } \u8f93\u5165\u53c2\u6570\uff1a u32Channel\uff1a\u521b\u5efaIPU\u901a\u9053\u7684ID pModelImage\uff1a\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u79bb\u7ebf number\uff1a\u6279\u5904\u7406\u8f93\u5165batch\u6570 \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b 10.3. \u83b7\u53d6\u6a21\u578b\u8f93\u5165\u8f93\u51faTensor\u5c5e\u6027 \u00b6 MI_IPU_SubNet_InputOutputDesc_t desc ; MI_IPU_GetInOutTensorDesc ( u32ChannelID , & desc ); \u8f93\u5165\u53c2\u6570\uff1a u32ChnId\uff1aIPU\u901a\u9053\u7684ID pstDesc\uff1aIPU\u5b50\u7f51\u7edc\u8f93\u5165/\u8f93\u51fa\u63cf\u8ff0\u7ed3\u6784\u4f53 \u8f93\u51fa\u53c2\u6570\uff1aMI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b 10.4. \u83b7\u53d6\u8f93\u5165\u8f93\u51faTensor \u00b6 MI_IPU_TensorVector_t InputTensorVector ; MI_IPU_TensorVector_t OutputTensorVector ; MI_IPU_GetInputTensors ( u32ChannelID , & InputTensorVector ); MI_IPU_GetOutputTensors ( u32ChannelID , & OutputTensorVector ); \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID InputTensorVector\uff1a\u8f93\u5165IPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 OutputTensorVector\uff1a\u8f93\u51faIPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 \u5982\u679c\u9700\u8981\u652f\u6301\u6279\u5904\u7406\u8f93\u5165\uff0c\u8bf7\u53c2\u8003 sdk/verify/mi_demo/source/dla/dla_simulator_nbatch/dla_simulator_nbatch.cpp MI_IPU_BatchInvokeParam_t stInvokeParam ; memset ( & stInvokeParam , 0 , sizeof ( MI_IPU_BatchInvokeParam_t )); stInvokeParam . u32BatchN = number \uff1b MI_IPU_GetInputTensors2 ( u32ChannelID , & stInvokeParam ); MI_IPU_GetOutputTensors2 ( u32ChannelID , & stInvokeParam ); \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID stInvokeParam\uff1ainvoke\u53c2\u6570\u7ed3\u6784\u4f53\uff0c\u5305\u62ec\u6279\u5904\u7406\u8f93\u5165batch\u6570\uff0c\u4ee5\u53ca\u8f93\u5165\u8f93\u51fatensors\u7684\u6307\u9488 \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b 10.5. \u6a21\u578b\u6570\u636e\u8f93\u5165 \u00b6 10.5.1. \u62f7\u8d1d\u6570\u636e \u00b6 \u5c06\u6570\u636e\u62f7\u8d1d\u81f3\u6a21\u578b\u8f93\u5165Tensor\u7684\u865a\u62df\u5730\u5740\uff0c\u62f7\u8d1d\u5b8c\u6210\u540e\u8c03\u7528MI_SYS_FlushInvCache\uff1a MI_U8 * pdata = ( MI_U8 * ) InputTensorVector . astArrayTensors [ 0 ]. ptTensorData [ 0 ]; MI_U8 * pSrc = ( MI_U8 * ) Input_Data ; for ( int i = 0 ; i < imageSize ; i ++ ) { * ( pdata + i ) = * ( pSrc + i ); } MI_SYS_FlushInvCache ( pdata , imageSize ); \u6a21\u578b\u4e2dinput formats\u8bbe\u7f6e\u4e3a BGR \u6216\u8005 RGB \u65f6\uff0cstride\u4e0d\u8981\u505aalignment\uff0c\u505a\u4e86alignment\u53cd\u800c\u6709\u95ee\u9898\u3002 \u6a21\u578b\u4e2dinput formats\u8bbe\u7f6e\u4e3a BGRA \u6216\u8005 RGBA \uff08A channel\u5728\u9ad8\u5730\u5740\uff09\uff0c\u4e0d\u9700\u8981alignment\u3002 input_formats\u8bbe\u7f6e\u4e3a BGRA \uff0c\u5bf9\u5e94MI_SYS_PixelFormat_e\u4e3a E_MI_SYSPIXEL_FRAME_ARGB8888 \u3002 input_formats\u8bbe\u7f6e\u4e3a RGBA \uff0c\u5bf9\u5e94MI_SYS_PixelFormat_e\u4e3a E_MI_SYSPIXEL_FRAME_ABGR8888 \u3002 input formats\u8bbe\u7f6e\u4e3a YUV_NV12 \u6216\u8005 GRAY \u65f6\uff0calignment\u89c4\u5219\u662fstride = alignment_up(width, 2)\uff0cheight\u9700\u89812 alignment\u3002 input_formats\u8bbe\u7f6e\u4e3a YUV_NV12 \u6216\u8005 GRAY \u65f6\uff0c\u5bf9\u5e94MI_SYS_PixelFormat_e\u4e3a E_MI_SYSPIXEL_FRAME_YUV_SEMIPLANAR_420 \u3002 10.5.2.\u96f6\u62f7\u8d1d\u6570\u636e \u00b6 \u5982\u679c\u4f7f\u7528MI\u7684\u5176\u4ed6\u6a21\u5757\uff0c\u4e3a\u6a21\u578b\u8f93\u5165\u505a\u597d\u4e86\u6570\u636e\u51c6\u5907\uff0c\u53ef\u4ee5\u4e0d\u7528\u62f7\u8d1d\u6570\u636e\uff0c\u76f4\u63a5\u7ed9\u4f20\u9012\u5176\u4ed6MI\u6a21\u5757\u7684\u7269\u7406\u5730\u5740\uff08\u8be5\u8d77\u59cb\u7269\u7406\u5730\u5740\u5fc5\u987b\u8981\u662f64 bytes\u5bf9\u9f50\uff09\u3002 \u4ee5\u4e0b\u4ee5MI_SYS\u6a21\u5757\u793a\u4f8b\u6a21\u578b\u8f93\u5165\u96f6\u62f7\u8d1d\u6570\u636e\uff0c\u9700\u6ce8\u610f\uff1a \u521b\u5efaIPU\u901a\u9053\u65f6\uff0c\u8f93\u5165InputBufDepth\u8bbe\u4e3a\u96f6\uff0c\u4e0d\u518d\u4f7f\u7528MI_IPU_GetInputTensors\u5206\u914d\u8f93\u5165\u7a7a\u95f4 stChnAttr.u32InputBufDepth = 0; \u7531\u4e8e\u4e0d\u4f7f\u7528MI_IPU_GetInputTensors\uff0c\u9700\u624b\u52a8\u5c06\u7f51\u7edc\u63cf\u8ff0\u7684\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u4e2a\u6570\u8d4b\u7ed9 InputTensorVector.u32TensorCount\u3002 InputTensorVector.u32TensorCount = desc.u32InputTensorCount; \u4f7f\u7528MI_SYS\u7684API\u5206\u914d\u7a7a\u95f4: MI_S32 s32ret = 0 ; MI_PHY phyAddr = 0 ; void * pVirAddr = NULL ; s32ret = MI_SYS_MMA_Alloc ( NULL , BufSize , & phyAddr ); if ( s32ret != MI_SUCCESS ) { throw std :: runtime_error ( \"Alloc buffer failed!\" ); } s32ret = MI_SYS_Mmap ( phyAddr , BufSize , & pVirAddr , TRUE ); if ( s32ret != MI_SUCCESS ) { MI_SYS_MMA_Free ( phyAddr ); throw std :: runtime_error ( \"Mmap buffer failed!\" ); } \u4f20\u9012\u865a\u62df\u5730\u5740\u548c\u5bf9\u5e94\u7684\u8d77\u59cb\u7269\u7406\u5730\u5740\uff08\u8be5\u8d77\u59cb\u7269\u7406\u5730\u5740\u5fc5\u987b\u8981\u662f64 bytes\u5bf9\u9f50\uff09\u7ed9InputTensorVector InputTensorVector . astArrayTensors [ 0 ]. ptTensorData [ 0 ] = pVirAddr ; InputTensorVector . astArrayTensors [ 0 ]. phyTensorAddr [ 0 ] = phyAddr ; \u4e4b\u540e\u53ef\u4ee5\u8fdb\u884c\u6a21\u578b\u63a8\u6f14\u3002 \u4f7f\u7528\u96f6\u62f7\u8d1d\u6570\u636e\uff0c\u4e0d\u9700\u8981\u518d\u91ca\u653e\u8f93\u5165Tensor\uff0c\u5373\u4e0d\u518d\u8c03\u7528MI_IPU_PutInputTensors\u51fd\u6570\uff0c\u91ca\u653eBuffer\u8c03\u7528MI_SYS\u7684API\u5b8c\u6210\u3002 \u91ca\u653eMI_SYS\u7684Buffer MI_SYS_Munmap ( pVirAddr , BufSize ); MI_SYS_MMA_Free ( phyAddr ); 10.6. \u6a21\u578b\u63a8\u6f14 \u00b6 ret = MI_IPU_Invoke ( u32ChannelID , & InputTensorVector , & OutputTensorVector ); if ( ret != MI_SUCCESS ) { MI_IPU_DestroyCHN ( u32ChannelID ); MI_IPU_DestroyDevice (); std :: cerr << \"IPU invoke failed!!\" << std :: endl ; } \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID InputTensorVector\uff1a\u8f93\u5165IPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 \uff08\u6bcf\u4e2a\u8f93\u5165tensor\u7684\u8d77\u59cb\u7269\u7406\u5730\u5740\u5fc5\u987b\u8981\u662f64 bytes\u5bf9\u9f50\uff09 OutputTensorVector\uff1a\u8f93\u51faIPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 \uff08\u6bcf\u4e2a\u8f93\u51fatensor\u7684\u8d77\u59cb\u7269\u7406\u5730\u5740\u5fc5\u987b\u8981\u662f64 bytes\u5bf9\u9f50\uff09 \u5982\u679c\u9700\u8981\u652f\u6301\u6279\u5904\u7406\u8f93\u5165\uff0c\u8bf7\u53c2\u8003 sdk/verify/mi_demo/source/dla/dla_simulator_nbatch/dla_simulator_nbatch.cpp ret = MI_IPU_Invoke2 ( u32ChannelID , & stInvokeParam , & stRuntimeInfo ); if ( ret != MI_SUCCESS ) { MI_IPU_DestroyCHN ( u32ChannelID ); MI_IPU_DestroyDevice (); std :: cerr << \"IPU invoke failed! Error Code: \" << ret << std :: endl ; return ; } \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID stInvokeParam\uff1ainvoke\u53c2\u6570\u7ed3\u6784\u4f53\uff0c\u5305\u62ec\u6279\u5904\u7406batch\u6570\u3001\u8f93\u5165\u8f93\u51fatensor\u6307\u9488\u3001IPU core\u9009\u62e9\u3001 task\u4f18\u5148\u7ea7\u7b49 \uff08\u6bcf\u4e2a\u8f93\u5165/\u8f93\u51fatensor\u7684\u8d77\u59cb\u7269\u7406\u5730\u5740\u5fc5\u987b\u8981\u662f64 bytes\u5bf9\u9f50\uff09 stRuntimeInfo\uff1a\u6a21\u578b\u63a8\u6f14\u4fe1\u606f\u7ed3\u6784\u4f53\uff0c\u5305\u62ec\u63a8\u6f14\u65f6\u95f4\u4ee5\u53ca\u63a8\u6f14\u5e26\u5bbd\u3002 \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b 10.7. \u91ca\u653e\u8f93\u5165\u8f93\u51faTensor \u00b6 MI_IPU_PutInputTensors ( u32ChannelID , & InputTensorVector ); MI_IPU_PutOutputTensors ( u32ChannelID , & OutputTensorVector ); \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID InputTensorVector\uff1a\u8f93\u5165IPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 OutputTensorVector\uff1a\u8f93\u51faIPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 \u5982\u679c\u9700\u8981\u652f\u6301\u6279\u5904\u7406\u8f93\u5165\uff0c\u8bf7\u53c2\u8003 sdk/verify/mi_demo/source/dla/dla_simulator_nbatch/dla_simulator_nbatch.cpp MI_IPU_PutInputTensors2 ( u32ChannelID , & stInvokeParam ); MI_IPU_PutOutputTensors2 ( u32ChannelID , & stInvokeParam ); \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID stInvokeParam\uff1ainvoke\u53c2\u6570\u7ed3\u6784\u4f53\uff0c\u5305\u62ec\u6279\u5904\u7406\u8f93\u5165batch\u6570\uff0c\u4ee5\u53ca\u8f93\u5165\u8f93\u51fatensors\u7684\u6307\u9488 \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b 10.8. \u9500\u6bc1IPU\u901a\u9053 \u00b6 MI_IPU_DestroyCHN ( u32ChannelID ); \u8f93\u5165\u53c2\u6570\uff1a s32Channel\uff1a\u521b\u5efaIPU\u901a\u9053\u7684ID \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b 10.9. \u9500\u6bc1IPU\u8bbe\u5907 \u00b6 MI_IPU_DestroyDevice (); \u8f93\u5165\u53c2\u6570\uff1a \u7a7a \u8f93\u51fa\u53c2\u6570\uff1aMI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b 10.10. Py_dla\u63a5\u53e3\u4f7f\u7528 \u00b6 Py_dla\u662fPython\u5c01\u88c5\u540e\u7684MI_IPU\u63a5\u53e3\uff0c\u53ef\u4ee5\u5728\u5f00\u53d1\u677f\u4e0a\u5feb\u901f\u5904\u7406\u6a21\u578b\u8f93\u51fa\u6570\u636e\uff0c\u65b9\u4fbf\u5feb\u901f\u9a8c\u8bc1\u6a21\u578b\u7684\u51c6\u786e\u6027\u3002 \u5df2\u51c6\u5907\u597dARM\u7684Python3.8\u7684\u5e93\uff0c\u5b58\u653e\u5728 sdk/verify/mi_demo/source/py_dla/Python3.8.tar.bz2 \uff0c \u4f7f\u7528\u65f6\u8bf7\u5148\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u89e3\u538b\u5230\u53ef\u4ee5mount\u5230\u5f00\u53d1\u677f\u7684\u672c\u5730\u8def\u5f84\uff1a tar -jxvf Python3.8.tar.bz2 \u5728\u5f00\u53d1\u677f\u4e2d\u8bbe\u7f6ePython3.8\u7684\u8def\u5f84\uff1a export LD_LIBRARY_PATH = path/to/Python3.8/usr/lib/: $LD_LIBRARY_PATH export PATH = path/to/Python3.8/usr/bin: $PATH \u4ee5\u4e0b\u6587\u4ef6\u4e3aPy_dla\u63a5\u53e3\u6587\u4ef6\uff0c\u53ef\u4ee5\u4f7f\u7528python\u76f4\u63a5import\u4f7f\u7528\uff1a sdk/verify/mi_demo/source/py_dla/_misim.cpython-38-arm-linux-gnueabihf.so \u5c06\u8be5\u6587\u4ef6\u4e0e\u7f16\u5199python\u811a\u672c\u653e\u5728\u540c\u4e00\u8def\u5f84\u4e0b\uff0c\u5373\u53ef\u4f7f\u7528Py_dla\u3002\u4e0b\u9762\u8bf4\u660epython\u4e2d\u8c03\u7528 _misim.cpython-38-arm-linux-gnueabihf.so \u4ee5\u53caAPI\u4e3e\u4f8b\u4ecb\u7ecd\u3002 \u4f7f\u7528\u5982\u4e0b\u65b9\u5f0f\uff0c\u52a0\u8f7d _misim.cpython-38-arm-linux-gnueabihf.so \uff1a from _misim import MI_simulator from _misim import IPU_GetOfflineModeStaticInfo from _misim import IPU_CreateDevice API\u4e3e\u4f8b\u8bf4\u660e\uff1a IPU_GetOfflineModeStaticInfo\uff1a\u83b7\u53d6\u6a21\u578bvariable buffer size >>> model_path = 'mobilenet_v1_fixed.sim_sgsimg.img' >>> variable_buffer_size = IPU_GetOfflineModeStaticInfo ( model_path ) IPU_CreateDevice\uff1a\u521b\u5efaIPU\u8bbe\u5907\uff08\u5982\u679c\u6709\u591a\u4e2a\u6a21\u578b\u9700\u8981\u8fd0\u884c\uff0c\u9009\u53d6\u6700\u5927\u7684variable_buffer_size \u521b\u5efaIPU\u8bbe\u5907\uff09 >>> IPU_CreateDevice ( variable_buffer_size ) MI_simulator\uff1a\u521b\u5efa\u6a21\u578b\u5b9e\u4f8b >>> model = MI_simulator ( model_path ) \u83b7\u53d6\u6a21\u578b\u8f93\u5165\u4fe1\u606f >>> in_details = model . get_input_details () >>> print ( in_details ) [{ 'name' : 'input' , 'index' : 0 , 'dtype' : < class ' numpy . uint8 '>, ' shape ': array([ 1, 224, 224, 3])}] \u83b7\u53d6\u6a21\u578b\u8f93\u51fa\u4fe1\u606f >>> out_details = model . get_output_details () >>> print ( out_details ) [{ 'name' : 'MobilenetV2/Predictions/Reshape_1' , 'index' : 0 , 'dtype' : < class ' numpy . float32 '>, ' shape ': array([ 1, 1001])}] \u7ed9\u7b2c0\u4e2aindex\u8f93\u5165\u6570\u636e\uff08img_data\u4e3a\u4e0e\u8f93\u5165shape\u3001dtype\u4e00\u81f4\u7684numpy.ndarray\u6570\u636e model . set_input ( in_details [ 0 ][ 'index' ], img_data ) \u6a21\u578b\u524d\u5411\u63a8\u6f14 model . invoke () \u83b7\u53d6\u7b2c0\u4e2aindex\u7684\u8f93\u51fa\uff08\u8f93\u51fa\u4e3anumpy.ndarray\uff09\uff0c\u5efa\u8bae\u4f7f\u7528numpy\u7684copy()\u65b9\u6cd5 >>> output0 = model . get_output ( out_details [ 0 ][ 'index' ]) \u83b7\u53d6\u7b2c1\u4e2aindex\u7684\u8f93\u51fa\uff0c\u4f7f\u7528numpy\u7684copy()\u65b9\u6cd5\uff0c\u62f7\u8d1d\u5185\u5b58\u5230\u65b0\u7684\u5185\u5b58\u91cc >>> output1 = model . get_output ( out_details [ 1 ][ 'index' ]) . copy () 10.11. IPU Log \u6027\u80fd\u5206\u6790\u5de5\u5177 \u00b6 IPU Log\u6027\u80fd\u5206\u6790\u5de5\u5177\u4f4d\u7f6e\uff1a IPU_SDK_Release/Scripts/example/performance_timeline.py \uff0c\u5c06\u6a21\u578b\u8fd0\u884c\u65f6\u751f\u6210\u7684IPU Log \u4f20\u5165\u89e3\u6790\u811a\u672c\uff0c \u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u751f\u6210\u4e00\u4e2ajson\u683c\u5f0f\u6587\u4ef6\uff0c\u6253\u5f00google\u6d4f\u89c8\u5668\uff0c\u6572\u5165 chrome://tracing \uff0c\u5c06\u751f\u6210\u7684json\u6587\u4ef6\u62d6\u5165\u6d4f\u89c8\u5668\u5373\u53ef\u3002 10.11.1 \u5982\u4f55\u751f\u6210 IPU Log \u00b6 \u6253\u5f00 IPU_SDK_Release/cfg/IpuConfigS.ini \u6587\u4ef6\uff0c\u8bbe enable_performance_analyse=1 \uff0c\u91cd\u65b0\u8f6c\u6362\u539f\u59cb\u6a21\u578b\u5230\u79bb\u7ebf\u6a21\u578b\u3002 ; ipu_configS . ini [ CORE_CONFIG ] ; 0 : single core mode ; 1 : multi core mode ; other : no support work_mode = 1 [ DEBUG_CONFIG ] enable_performance_analyse = 1 \u5728\u5f00\u53d1\u677f\u4e0a\u8fd0\u884c\u5b8cOffline\u6a21\u578b\uff0c\u751f\u6210IPU Log\uff0clogdir\u4e3aIPU Log\u7684\u4fdd\u5b58\u6587\u4ef6\u5939\u3002 ./ prog_dla_dla_show_img_info - m ./ deploy_fixed . sim_sgsimg . im -- ipu_log logdir 10.11.2 \u5982\u4f55\u4f7f\u7528IPU log\u751f\u6210json \u6587\u4ef6 \u00b6 python3 ~/ IPU_SDK_Release / Scripts / example / performance_timeline . py \\ - c0 log_ctrl0 . bin \\ - c1 log_ctrl1 . bin \\ - cc log_corectrl0 . bin \\ - f 900 \\ - v 36 X \u53c2\u6570\u89e3\u91ca\u5982\u4e0b\uff1a -c0 , --core0 : core0 ipu log \u6587\u4ef6\u7684\u8def\u5f84 \uff08\u5355\u6838\u53ea\u9700 core0 ipu log\uff09 -c1 , --core1 : core1 ipu log \u6587\u4ef6\u8def\u5f84 -cc , --corectrl : corectrl ipu log \u6587\u4ef6\u8def\u5f84 -f , --frequency : ipu clk freq (\u9ed8\u8ba4\u4e3a800) -v , --ipu_version : ipu chip version (\u5982\uff1a36X) \u8fd0\u884c\u7ed3\u675f\u540e\uff0c\u4f1a\u5728\u8fd0\u884c\u76ee\u5f55\u4e0b\u751f\u6210log_ctrl0.json\u6587\u4ef6\uff0c\u5c06\u751f\u6210\u7684json\u6587\u4ef6\u62d6\u5165\u6d4f\u89c8\u5668 chrome://tracing \u5373\u53ef\u663e\u793a\u6bcf\u5c42\u7684\u6027\u80fd\u8017\u65f6\u5360\u6bd4\u3002 \u6ce8\u610f start\uff1a\u8be5\u5c42\u5f00\u59cb\u65f6\u95f4 wall duration\uff1a\u8be5\u5c42\u8017\u65f6 total_cycle\uff1a\u8be5\u5c42cycle\u6570\uff0c\u4e0e\u201cwall duration\u201d\u53ef\u4ee5\u6362\u7b97\uff0cwall duration = total_cycle/freq conv_cycle_percent:\u8be5\u5c42conv\u8fd0\u884c\u65f6\u95f4\u5360\u8be5\u5c42\u8fd0\u884c\u65f6\u95f4\u767e\u5206\u6bd4 vector_cycle_percent:\u8be5\u5c42vector\u8fd0\u884c\u65f6\u95f4\u5360\u8be5\u5c42\u8fd0\u884c\u65f6\u95f4\u767e\u5206\u6bd4 dma_load_cycle_percent:\u8be5\u5c42dma load\u8fd0\u884c\u65f6\u95f4\u5360\u8be5\u5c42\u8fd0\u884c\u65f6\u95f4\u767e\u5206\u6bd4 dma_store_cycle_percent:\u8be5\u5c42dma store\u8fd0\u884c\u65f6\u95f4\u5360\u8be5\u5c42\u8fd0\u884c\u65f6\u95f4\u767e\u5206\u6bd4 conv/vertor/dma_load/dma_store\u6307\u4ee4\u53ef\u4ee5\u5e76\u884c\u6267\u884c\uff0c\u6240\u4ee5\u767e\u5206\u6bd4\u76f8\u52a0\u4e0d\u662f100%","title":"Running Offline Network Model On Development Board"},{"location":"module/User_Guide/IPU220/Running_Offline_Network_Model_On_Development_Board.html#101-ipu","text":"MI_S32 IPUCreateDevice ( char * pFirmwarePath , MI_U32 u32VarBufSize ) { MI_S32 s32Ret = MI_SUCCESS ; MI_IPU_DevAttr_t stDevAttr ; stDevAttr . u32MaxVariableBufSize = u32VarBufSize ; stDevAttr . u32YUV420_W_Pitch_Alignment = 2 ; stDevAttr . u32YUV420_H_Pitch_Alignment = 2 ; stDevAttr . u32XRGB_W_Pitch_Alignment = 1 ; s32Ret = MI_IPU_CreateDevice ( & stDevAttr , NULL , pFirmwarePath , 0 ); return s32Ret ; } \u8f93\u5165\u53c2\u6570\uff1a pFirmwarePath\uff1a\u5728\u8be5\u6b3echip\u4e0a\u4e0d\u518d\u9700\u8981firmware\uff0c\u56e0\u6b64\u4f20NULL u32VarBufSize\uff1a\u6a21\u578b\u5185\u90e8Tensor\u4f7f\u7528\u7684memory\u7684\u6700\u5927\u5927\u5c0f u32VarBufSize\u83b7\u53d6\u65b9\u6cd5\u5982\u4e0b \uff1a \u65b9\u6cd5 1 : \u53ef\u4ee5\u901a\u8fc7 parse_net\u5de5\u5177\u83b7\u53d6 parse_net\u5de5\u5177\u8def\u5f84 \uff1a SGS_IPU_SDK / bin / parse_net \u4f7f\u7528\u65f6\u76f4\u63a5\u5728 parse_net\u547d\u4ee4\u540e\u52a0\u4e0a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8def\u5f84\u5373\u53ef \uff0c\u53ef\u53c2\u8003\u4ee5\u4e0b\u547d\u4ee4\uff1a . / parse_net xxx_fixed . sim | grep Variable \u8f93\u51fa\uff1a | |--> SubGraph [ 0 ] : Variable buffer 0xd2f00 @ 0x82f3b40 . \u5176\u4e2d 0xd2f00 \u5411 2 \u5bf9\u9f50\u540e\u4e3a u32VarBufSize\u5927\u5c0f \u3002 \u5728 C / C ++ \u4e2d\uff0c\u5411 2 \u5bf9\u9f50\u7684\u5b9a\u4e49\u4e3a\uff1a #define alignment_up(a, size) ((a + size - 1) & (~(size - 1))) \u6240\u4ee5 u32VarBufSize\u4e3a864000 \u3002 \u65b9\u6cd5 2 : \u4f7f\u7528 MI\u7684API\u83b7\u53d6 MI_IPU_OfflineModelStaticInfo_t OfflineModelInfo ; ret = MI_IPU_GetOfflineModeStaticInfo ( NULL , modelFilePath , & OfflineModelInfo ); if ( ret != MI_SUCCESS ) { std :: cerr << \"get model variable buffer size failed!\" << std :: endl ; return ; } u32VarBufSize = OfflineModelInfo . u32VariableBufferSize \u5982\u679c\u6709\u591a\u4e2a\u6a21\u578b\u9700\u8981\u8fd0\u884c\uff0c\u9009\u53d6\u6700\u5927\u7684 u32VarBufSize\u521b\u5efaIPU\u8bbe\u5907\u5373\u53ef \u3002 \u8f93\u51fa\u53c2\u6570\uff1aMI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b","title":"10.1. \u521b\u5efaIPU\u8bbe\u5907"},{"location":"module/User_Guide/IPU220/Running_Offline_Network_Model_On_Development_Board.html#102-ipu","text":"MI_S32 IPUCreateChannel ( MI_U32 * u32Channel , char * pModelImage ) { MI_S32 s32Ret ; MI_IPUChnAttr_t stChnAttr ; //create channel memset ( & stChnAttr , 0 , sizeof ( stChnAttr )); stChnAttr . u32InputBufDepth = 2 ; stChnAttr . u32OutputBufDepth = 2 ; return MI_IPU_CreateCHN ( u32Channel , & stChnAttr , NULL , pModelImage ); } MI_U32 u32Channel ; ret = IPUCreateChannel ( & u32ChannelID , \u201c . / mobilenet_v1_fixed . img \u201d ); \u8f93\u5165\u53c2\u6570\uff1a u32Channel\uff1a\u521b\u5efaIPU\u901a\u9053\u7684ID pModelImage\uff1a\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u79bb\u7ebf \u5982\u679c\u9700\u8981\u652f\u6301\u6279\u5904\u7406\u8f93\u5165\uff0c\u8bf7\u53c2\u8003 sdk/verify/mi_demo/source/dla/dla_simulator_nbatch/dla_simulator_nbatch.cpp MI_S32 IPUCreateChannel ( MI_U32 * u32Channel , char * pModelImage , int number ) { MI_SYS_GlobalPrivPoolConfig_t stGlobalPrivPoolConf ; MI_IPUChnAttr_t stChnAttr ; //create channel memset ( & stChnAttr , 0 , sizeof ( stChnAttr )); stChnAttr . u32InputBufDepth = 1 ; stChnAttr . u32OutputBufDepth = 1 ; stChnAttr . u32BatchMax = number ; return MI_IPU_CreateCHN ( u32Channel , & stChnAttr , NULL , pModelImage ); } \u8f93\u5165\u53c2\u6570\uff1a u32Channel\uff1a\u521b\u5efaIPU\u901a\u9053\u7684ID pModelImage\uff1a\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u79bb\u7ebf number\uff1a\u6279\u5904\u7406\u8f93\u5165batch\u6570 \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b","title":"10.2. \u521b\u5efaIPU\u901a\u9053"},{"location":"module/User_Guide/IPU220/Running_Offline_Network_Model_On_Development_Board.html#103-tensor","text":"MI_IPU_SubNet_InputOutputDesc_t desc ; MI_IPU_GetInOutTensorDesc ( u32ChannelID , & desc ); \u8f93\u5165\u53c2\u6570\uff1a u32ChnId\uff1aIPU\u901a\u9053\u7684ID pstDesc\uff1aIPU\u5b50\u7f51\u7edc\u8f93\u5165/\u8f93\u51fa\u63cf\u8ff0\u7ed3\u6784\u4f53 \u8f93\u51fa\u53c2\u6570\uff1aMI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b","title":"10.3. \u83b7\u53d6\u6a21\u578b\u8f93\u5165\u8f93\u51faTensor\u5c5e\u6027"},{"location":"module/User_Guide/IPU220/Running_Offline_Network_Model_On_Development_Board.html#104-tensor","text":"MI_IPU_TensorVector_t InputTensorVector ; MI_IPU_TensorVector_t OutputTensorVector ; MI_IPU_GetInputTensors ( u32ChannelID , & InputTensorVector ); MI_IPU_GetOutputTensors ( u32ChannelID , & OutputTensorVector ); \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID InputTensorVector\uff1a\u8f93\u5165IPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 OutputTensorVector\uff1a\u8f93\u51faIPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 \u5982\u679c\u9700\u8981\u652f\u6301\u6279\u5904\u7406\u8f93\u5165\uff0c\u8bf7\u53c2\u8003 sdk/verify/mi_demo/source/dla/dla_simulator_nbatch/dla_simulator_nbatch.cpp MI_IPU_BatchInvokeParam_t stInvokeParam ; memset ( & stInvokeParam , 0 , sizeof ( MI_IPU_BatchInvokeParam_t )); stInvokeParam . u32BatchN = number \uff1b MI_IPU_GetInputTensors2 ( u32ChannelID , & stInvokeParam ); MI_IPU_GetOutputTensors2 ( u32ChannelID , & stInvokeParam ); \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID stInvokeParam\uff1ainvoke\u53c2\u6570\u7ed3\u6784\u4f53\uff0c\u5305\u62ec\u6279\u5904\u7406\u8f93\u5165batch\u6570\uff0c\u4ee5\u53ca\u8f93\u5165\u8f93\u51fatensors\u7684\u6307\u9488 \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b","title":"10.4. \u83b7\u53d6\u8f93\u5165\u8f93\u51faTensor"},{"location":"module/User_Guide/IPU220/Running_Offline_Network_Model_On_Development_Board.html#105","text":"","title":"10.5. \u6a21\u578b\u6570\u636e\u8f93\u5165"},{"location":"module/User_Guide/IPU220/Running_Offline_Network_Model_On_Development_Board.html#1051","text":"\u5c06\u6570\u636e\u62f7\u8d1d\u81f3\u6a21\u578b\u8f93\u5165Tensor\u7684\u865a\u62df\u5730\u5740\uff0c\u62f7\u8d1d\u5b8c\u6210\u540e\u8c03\u7528MI_SYS_FlushInvCache\uff1a MI_U8 * pdata = ( MI_U8 * ) InputTensorVector . astArrayTensors [ 0 ]. ptTensorData [ 0 ]; MI_U8 * pSrc = ( MI_U8 * ) Input_Data ; for ( int i = 0 ; i < imageSize ; i ++ ) { * ( pdata + i ) = * ( pSrc + i ); } MI_SYS_FlushInvCache ( pdata , imageSize ); \u6a21\u578b\u4e2dinput formats\u8bbe\u7f6e\u4e3a BGR \u6216\u8005 RGB \u65f6\uff0cstride\u4e0d\u8981\u505aalignment\uff0c\u505a\u4e86alignment\u53cd\u800c\u6709\u95ee\u9898\u3002 \u6a21\u578b\u4e2dinput formats\u8bbe\u7f6e\u4e3a BGRA \u6216\u8005 RGBA \uff08A channel\u5728\u9ad8\u5730\u5740\uff09\uff0c\u4e0d\u9700\u8981alignment\u3002 input_formats\u8bbe\u7f6e\u4e3a BGRA \uff0c\u5bf9\u5e94MI_SYS_PixelFormat_e\u4e3a E_MI_SYSPIXEL_FRAME_ARGB8888 \u3002 input_formats\u8bbe\u7f6e\u4e3a RGBA \uff0c\u5bf9\u5e94MI_SYS_PixelFormat_e\u4e3a E_MI_SYSPIXEL_FRAME_ABGR8888 \u3002 input formats\u8bbe\u7f6e\u4e3a YUV_NV12 \u6216\u8005 GRAY \u65f6\uff0calignment\u89c4\u5219\u662fstride = alignment_up(width, 2)\uff0cheight\u9700\u89812 alignment\u3002 input_formats\u8bbe\u7f6e\u4e3a YUV_NV12 \u6216\u8005 GRAY \u65f6\uff0c\u5bf9\u5e94MI_SYS_PixelFormat_e\u4e3a E_MI_SYSPIXEL_FRAME_YUV_SEMIPLANAR_420 \u3002","title":"10.5.1. \u62f7\u8d1d\u6570\u636e"},{"location":"module/User_Guide/IPU220/Running_Offline_Network_Model_On_Development_Board.html#1052","text":"\u5982\u679c\u4f7f\u7528MI\u7684\u5176\u4ed6\u6a21\u5757\uff0c\u4e3a\u6a21\u578b\u8f93\u5165\u505a\u597d\u4e86\u6570\u636e\u51c6\u5907\uff0c\u53ef\u4ee5\u4e0d\u7528\u62f7\u8d1d\u6570\u636e\uff0c\u76f4\u63a5\u7ed9\u4f20\u9012\u5176\u4ed6MI\u6a21\u5757\u7684\u7269\u7406\u5730\u5740\uff08\u8be5\u8d77\u59cb\u7269\u7406\u5730\u5740\u5fc5\u987b\u8981\u662f64 bytes\u5bf9\u9f50\uff09\u3002 \u4ee5\u4e0b\u4ee5MI_SYS\u6a21\u5757\u793a\u4f8b\u6a21\u578b\u8f93\u5165\u96f6\u62f7\u8d1d\u6570\u636e\uff0c\u9700\u6ce8\u610f\uff1a \u521b\u5efaIPU\u901a\u9053\u65f6\uff0c\u8f93\u5165InputBufDepth\u8bbe\u4e3a\u96f6\uff0c\u4e0d\u518d\u4f7f\u7528MI_IPU_GetInputTensors\u5206\u914d\u8f93\u5165\u7a7a\u95f4 stChnAttr.u32InputBufDepth = 0; \u7531\u4e8e\u4e0d\u4f7f\u7528MI_IPU_GetInputTensors\uff0c\u9700\u624b\u52a8\u5c06\u7f51\u7edc\u63cf\u8ff0\u7684\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u4e2a\u6570\u8d4b\u7ed9 InputTensorVector.u32TensorCount\u3002 InputTensorVector.u32TensorCount = desc.u32InputTensorCount; \u4f7f\u7528MI_SYS\u7684API\u5206\u914d\u7a7a\u95f4: MI_S32 s32ret = 0 ; MI_PHY phyAddr = 0 ; void * pVirAddr = NULL ; s32ret = MI_SYS_MMA_Alloc ( NULL , BufSize , & phyAddr ); if ( s32ret != MI_SUCCESS ) { throw std :: runtime_error ( \"Alloc buffer failed!\" ); } s32ret = MI_SYS_Mmap ( phyAddr , BufSize , & pVirAddr , TRUE ); if ( s32ret != MI_SUCCESS ) { MI_SYS_MMA_Free ( phyAddr ); throw std :: runtime_error ( \"Mmap buffer failed!\" ); } \u4f20\u9012\u865a\u62df\u5730\u5740\u548c\u5bf9\u5e94\u7684\u8d77\u59cb\u7269\u7406\u5730\u5740\uff08\u8be5\u8d77\u59cb\u7269\u7406\u5730\u5740\u5fc5\u987b\u8981\u662f64 bytes\u5bf9\u9f50\uff09\u7ed9InputTensorVector InputTensorVector . astArrayTensors [ 0 ]. ptTensorData [ 0 ] = pVirAddr ; InputTensorVector . astArrayTensors [ 0 ]. phyTensorAddr [ 0 ] = phyAddr ; \u4e4b\u540e\u53ef\u4ee5\u8fdb\u884c\u6a21\u578b\u63a8\u6f14\u3002 \u4f7f\u7528\u96f6\u62f7\u8d1d\u6570\u636e\uff0c\u4e0d\u9700\u8981\u518d\u91ca\u653e\u8f93\u5165Tensor\uff0c\u5373\u4e0d\u518d\u8c03\u7528MI_IPU_PutInputTensors\u51fd\u6570\uff0c\u91ca\u653eBuffer\u8c03\u7528MI_SYS\u7684API\u5b8c\u6210\u3002 \u91ca\u653eMI_SYS\u7684Buffer MI_SYS_Munmap ( pVirAddr , BufSize ); MI_SYS_MMA_Free ( phyAddr );","title":"10.5.2.\u96f6\u62f7\u8d1d\u6570\u636e"},{"location":"module/User_Guide/IPU220/Running_Offline_Network_Model_On_Development_Board.html#106","text":"ret = MI_IPU_Invoke ( u32ChannelID , & InputTensorVector , & OutputTensorVector ); if ( ret != MI_SUCCESS ) { MI_IPU_DestroyCHN ( u32ChannelID ); MI_IPU_DestroyDevice (); std :: cerr << \"IPU invoke failed!!\" << std :: endl ; } \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID InputTensorVector\uff1a\u8f93\u5165IPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 \uff08\u6bcf\u4e2a\u8f93\u5165tensor\u7684\u8d77\u59cb\u7269\u7406\u5730\u5740\u5fc5\u987b\u8981\u662f64 bytes\u5bf9\u9f50\uff09 OutputTensorVector\uff1a\u8f93\u51faIPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 \uff08\u6bcf\u4e2a\u8f93\u51fatensor\u7684\u8d77\u59cb\u7269\u7406\u5730\u5740\u5fc5\u987b\u8981\u662f64 bytes\u5bf9\u9f50\uff09 \u5982\u679c\u9700\u8981\u652f\u6301\u6279\u5904\u7406\u8f93\u5165\uff0c\u8bf7\u53c2\u8003 sdk/verify/mi_demo/source/dla/dla_simulator_nbatch/dla_simulator_nbatch.cpp ret = MI_IPU_Invoke2 ( u32ChannelID , & stInvokeParam , & stRuntimeInfo ); if ( ret != MI_SUCCESS ) { MI_IPU_DestroyCHN ( u32ChannelID ); MI_IPU_DestroyDevice (); std :: cerr << \"IPU invoke failed! Error Code: \" << ret << std :: endl ; return ; } \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID stInvokeParam\uff1ainvoke\u53c2\u6570\u7ed3\u6784\u4f53\uff0c\u5305\u62ec\u6279\u5904\u7406batch\u6570\u3001\u8f93\u5165\u8f93\u51fatensor\u6307\u9488\u3001IPU core\u9009\u62e9\u3001 task\u4f18\u5148\u7ea7\u7b49 \uff08\u6bcf\u4e2a\u8f93\u5165/\u8f93\u51fatensor\u7684\u8d77\u59cb\u7269\u7406\u5730\u5740\u5fc5\u987b\u8981\u662f64 bytes\u5bf9\u9f50\uff09 stRuntimeInfo\uff1a\u6a21\u578b\u63a8\u6f14\u4fe1\u606f\u7ed3\u6784\u4f53\uff0c\u5305\u62ec\u63a8\u6f14\u65f6\u95f4\u4ee5\u53ca\u63a8\u6f14\u5e26\u5bbd\u3002 \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b","title":"10.6. \u6a21\u578b\u63a8\u6f14"},{"location":"module/User_Guide/IPU220/Running_Offline_Network_Model_On_Development_Board.html#107-tensor","text":"MI_IPU_PutInputTensors ( u32ChannelID , & InputTensorVector ); MI_IPU_PutOutputTensors ( u32ChannelID , & OutputTensorVector ); \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID InputTensorVector\uff1a\u8f93\u5165IPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 OutputTensorVector\uff1a\u8f93\u51faIPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 \u5982\u679c\u9700\u8981\u652f\u6301\u6279\u5904\u7406\u8f93\u5165\uff0c\u8bf7\u53c2\u8003 sdk/verify/mi_demo/source/dla/dla_simulator_nbatch/dla_simulator_nbatch.cpp MI_IPU_PutInputTensors2 ( u32ChannelID , & stInvokeParam ); MI_IPU_PutOutputTensors2 ( u32ChannelID , & stInvokeParam ); \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID stInvokeParam\uff1ainvoke\u53c2\u6570\u7ed3\u6784\u4f53\uff0c\u5305\u62ec\u6279\u5904\u7406\u8f93\u5165batch\u6570\uff0c\u4ee5\u53ca\u8f93\u5165\u8f93\u51fatensors\u7684\u6307\u9488 \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b","title":"10.7. \u91ca\u653e\u8f93\u5165\u8f93\u51faTensor"},{"location":"module/User_Guide/IPU220/Running_Offline_Network_Model_On_Development_Board.html#108-ipu","text":"MI_IPU_DestroyCHN ( u32ChannelID ); \u8f93\u5165\u53c2\u6570\uff1a s32Channel\uff1a\u521b\u5efaIPU\u901a\u9053\u7684ID \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b","title":"10.8. \u9500\u6bc1IPU\u901a\u9053"},{"location":"module/User_Guide/IPU220/Running_Offline_Network_Model_On_Development_Board.html#109-ipu","text":"MI_IPU_DestroyDevice (); \u8f93\u5165\u53c2\u6570\uff1a \u7a7a \u8f93\u51fa\u53c2\u6570\uff1aMI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API\u624b\u518c\u300b","title":"10.9. \u9500\u6bc1IPU\u8bbe\u5907"},{"location":"module/User_Guide/IPU220/Running_Offline_Network_Model_On_Development_Board.html#1010-py_dla","text":"Py_dla\u662fPython\u5c01\u88c5\u540e\u7684MI_IPU\u63a5\u53e3\uff0c\u53ef\u4ee5\u5728\u5f00\u53d1\u677f\u4e0a\u5feb\u901f\u5904\u7406\u6a21\u578b\u8f93\u51fa\u6570\u636e\uff0c\u65b9\u4fbf\u5feb\u901f\u9a8c\u8bc1\u6a21\u578b\u7684\u51c6\u786e\u6027\u3002 \u5df2\u51c6\u5907\u597dARM\u7684Python3.8\u7684\u5e93\uff0c\u5b58\u653e\u5728 sdk/verify/mi_demo/source/py_dla/Python3.8.tar.bz2 \uff0c \u4f7f\u7528\u65f6\u8bf7\u5148\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u89e3\u538b\u5230\u53ef\u4ee5mount\u5230\u5f00\u53d1\u677f\u7684\u672c\u5730\u8def\u5f84\uff1a tar -jxvf Python3.8.tar.bz2 \u5728\u5f00\u53d1\u677f\u4e2d\u8bbe\u7f6ePython3.8\u7684\u8def\u5f84\uff1a export LD_LIBRARY_PATH = path/to/Python3.8/usr/lib/: $LD_LIBRARY_PATH export PATH = path/to/Python3.8/usr/bin: $PATH \u4ee5\u4e0b\u6587\u4ef6\u4e3aPy_dla\u63a5\u53e3\u6587\u4ef6\uff0c\u53ef\u4ee5\u4f7f\u7528python\u76f4\u63a5import\u4f7f\u7528\uff1a sdk/verify/mi_demo/source/py_dla/_misim.cpython-38-arm-linux-gnueabihf.so \u5c06\u8be5\u6587\u4ef6\u4e0e\u7f16\u5199python\u811a\u672c\u653e\u5728\u540c\u4e00\u8def\u5f84\u4e0b\uff0c\u5373\u53ef\u4f7f\u7528Py_dla\u3002\u4e0b\u9762\u8bf4\u660epython\u4e2d\u8c03\u7528 _misim.cpython-38-arm-linux-gnueabihf.so \u4ee5\u53caAPI\u4e3e\u4f8b\u4ecb\u7ecd\u3002 \u4f7f\u7528\u5982\u4e0b\u65b9\u5f0f\uff0c\u52a0\u8f7d _misim.cpython-38-arm-linux-gnueabihf.so \uff1a from _misim import MI_simulator from _misim import IPU_GetOfflineModeStaticInfo from _misim import IPU_CreateDevice API\u4e3e\u4f8b\u8bf4\u660e\uff1a IPU_GetOfflineModeStaticInfo\uff1a\u83b7\u53d6\u6a21\u578bvariable buffer size >>> model_path = 'mobilenet_v1_fixed.sim_sgsimg.img' >>> variable_buffer_size = IPU_GetOfflineModeStaticInfo ( model_path ) IPU_CreateDevice\uff1a\u521b\u5efaIPU\u8bbe\u5907\uff08\u5982\u679c\u6709\u591a\u4e2a\u6a21\u578b\u9700\u8981\u8fd0\u884c\uff0c\u9009\u53d6\u6700\u5927\u7684variable_buffer_size \u521b\u5efaIPU\u8bbe\u5907\uff09 >>> IPU_CreateDevice ( variable_buffer_size ) MI_simulator\uff1a\u521b\u5efa\u6a21\u578b\u5b9e\u4f8b >>> model = MI_simulator ( model_path ) \u83b7\u53d6\u6a21\u578b\u8f93\u5165\u4fe1\u606f >>> in_details = model . get_input_details () >>> print ( in_details ) [{ 'name' : 'input' , 'index' : 0 , 'dtype' : < class ' numpy . uint8 '>, ' shape ': array([ 1, 224, 224, 3])}] \u83b7\u53d6\u6a21\u578b\u8f93\u51fa\u4fe1\u606f >>> out_details = model . get_output_details () >>> print ( out_details ) [{ 'name' : 'MobilenetV2/Predictions/Reshape_1' , 'index' : 0 , 'dtype' : < class ' numpy . float32 '>, ' shape ': array([ 1, 1001])}] \u7ed9\u7b2c0\u4e2aindex\u8f93\u5165\u6570\u636e\uff08img_data\u4e3a\u4e0e\u8f93\u5165shape\u3001dtype\u4e00\u81f4\u7684numpy.ndarray\u6570\u636e model . set_input ( in_details [ 0 ][ 'index' ], img_data ) \u6a21\u578b\u524d\u5411\u63a8\u6f14 model . invoke () \u83b7\u53d6\u7b2c0\u4e2aindex\u7684\u8f93\u51fa\uff08\u8f93\u51fa\u4e3anumpy.ndarray\uff09\uff0c\u5efa\u8bae\u4f7f\u7528numpy\u7684copy()\u65b9\u6cd5 >>> output0 = model . get_output ( out_details [ 0 ][ 'index' ]) \u83b7\u53d6\u7b2c1\u4e2aindex\u7684\u8f93\u51fa\uff0c\u4f7f\u7528numpy\u7684copy()\u65b9\u6cd5\uff0c\u62f7\u8d1d\u5185\u5b58\u5230\u65b0\u7684\u5185\u5b58\u91cc >>> output1 = model . get_output ( out_details [ 1 ][ 'index' ]) . copy ()","title":"10.10. Py_dla\u63a5\u53e3\u4f7f\u7528"},{"location":"module/User_Guide/IPU220/Running_Offline_Network_Model_On_Development_Board.html#1011-ipu-log","text":"IPU Log\u6027\u80fd\u5206\u6790\u5de5\u5177\u4f4d\u7f6e\uff1a IPU_SDK_Release/Scripts/example/performance_timeline.py \uff0c\u5c06\u6a21\u578b\u8fd0\u884c\u65f6\u751f\u6210\u7684IPU Log \u4f20\u5165\u89e3\u6790\u811a\u672c\uff0c \u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u751f\u6210\u4e00\u4e2ajson\u683c\u5f0f\u6587\u4ef6\uff0c\u6253\u5f00google\u6d4f\u89c8\u5668\uff0c\u6572\u5165 chrome://tracing \uff0c\u5c06\u751f\u6210\u7684json\u6587\u4ef6\u62d6\u5165\u6d4f\u89c8\u5668\u5373\u53ef\u3002","title":"10.11. IPU Log \u6027\u80fd\u5206\u6790\u5de5\u5177"},{"location":"module/User_Guide/IPU220/Running_Offline_Network_Model_On_Development_Board.html#10111-ipu-log","text":"\u6253\u5f00 IPU_SDK_Release/cfg/IpuConfigS.ini \u6587\u4ef6\uff0c\u8bbe enable_performance_analyse=1 \uff0c\u91cd\u65b0\u8f6c\u6362\u539f\u59cb\u6a21\u578b\u5230\u79bb\u7ebf\u6a21\u578b\u3002 ; ipu_configS . ini [ CORE_CONFIG ] ; 0 : single core mode ; 1 : multi core mode ; other : no support work_mode = 1 [ DEBUG_CONFIG ] enable_performance_analyse = 1 \u5728\u5f00\u53d1\u677f\u4e0a\u8fd0\u884c\u5b8cOffline\u6a21\u578b\uff0c\u751f\u6210IPU Log\uff0clogdir\u4e3aIPU Log\u7684\u4fdd\u5b58\u6587\u4ef6\u5939\u3002 ./ prog_dla_dla_show_img_info - m ./ deploy_fixed . sim_sgsimg . im -- ipu_log logdir","title":"10.11.1 \u5982\u4f55\u751f\u6210 IPU Log"},{"location":"module/User_Guide/IPU220/Running_Offline_Network_Model_On_Development_Board.html#10112-ipu-logjson","text":"python3 ~/ IPU_SDK_Release / Scripts / example / performance_timeline . py \\ - c0 log_ctrl0 . bin \\ - c1 log_ctrl1 . bin \\ - cc log_corectrl0 . bin \\ - f 900 \\ - v 36 X \u53c2\u6570\u89e3\u91ca\u5982\u4e0b\uff1a -c0 , --core0 : core0 ipu log \u6587\u4ef6\u7684\u8def\u5f84 \uff08\u5355\u6838\u53ea\u9700 core0 ipu log\uff09 -c1 , --core1 : core1 ipu log \u6587\u4ef6\u8def\u5f84 -cc , --corectrl : corectrl ipu log \u6587\u4ef6\u8def\u5f84 -f , --frequency : ipu clk freq (\u9ed8\u8ba4\u4e3a800) -v , --ipu_version : ipu chip version (\u5982\uff1a36X) \u8fd0\u884c\u7ed3\u675f\u540e\uff0c\u4f1a\u5728\u8fd0\u884c\u76ee\u5f55\u4e0b\u751f\u6210log_ctrl0.json\u6587\u4ef6\uff0c\u5c06\u751f\u6210\u7684json\u6587\u4ef6\u62d6\u5165\u6d4f\u89c8\u5668 chrome://tracing \u5373\u53ef\u663e\u793a\u6bcf\u5c42\u7684\u6027\u80fd\u8017\u65f6\u5360\u6bd4\u3002 \u6ce8\u610f start\uff1a\u8be5\u5c42\u5f00\u59cb\u65f6\u95f4 wall duration\uff1a\u8be5\u5c42\u8017\u65f6 total_cycle\uff1a\u8be5\u5c42cycle\u6570\uff0c\u4e0e\u201cwall duration\u201d\u53ef\u4ee5\u6362\u7b97\uff0cwall duration = total_cycle/freq conv_cycle_percent:\u8be5\u5c42conv\u8fd0\u884c\u65f6\u95f4\u5360\u8be5\u5c42\u8fd0\u884c\u65f6\u95f4\u767e\u5206\u6bd4 vector_cycle_percent:\u8be5\u5c42vector\u8fd0\u884c\u65f6\u95f4\u5360\u8be5\u5c42\u8fd0\u884c\u65f6\u95f4\u767e\u5206\u6bd4 dma_load_cycle_percent:\u8be5\u5c42dma load\u8fd0\u884c\u65f6\u95f4\u5360\u8be5\u5c42\u8fd0\u884c\u65f6\u95f4\u767e\u5206\u6bd4 dma_store_cycle_percent:\u8be5\u5c42dma store\u8fd0\u884c\u65f6\u95f4\u5360\u8be5\u5c42\u8fd0\u884c\u65f6\u95f4\u767e\u5206\u6bd4 conv/vertor/dma_load/dma_store\u6307\u4ee4\u53ef\u4ee5\u5e76\u884c\u6267\u884c\uff0c\u6240\u4ee5\u767e\u5206\u6bd4\u76f8\u52a0\u4e0d\u662f100%","title":"10.11.2 \u5982\u4f55\u4f7f\u7528IPU log\u751f\u6210json \u6587\u4ef6"},{"location":"module/User_Guide/IPU230/Accuracy_Debug_SOP.html","text":"1. IPU\u7cbe\u5ea6\u95ee\u9898Debug SOP \u00b6 \u5f53\u6a21\u578b\u7cbe\u5ea6\u4e0d\u7b26\u5408\u9884\u671f\u65f6\uff0c\u5728 SGS_IPU_SDK/doc/Debug_SOP/IPU\u7cbe\u5ea6\u95ee\u9898Debug SOP.pdf \u4e2d\uff0c\u7ed9\u51fa\u4e86\u51e0\u79cd\u5e38\u89c1\u7684\u7cbe\u5ea6\u95ee\u9898\u7684Debug\u601d\u8def\uff0c\u5177\u4f53\u5206\u4e3a\u4ee5\u4e0b\u4e09\u79cd\uff1a \u7cbe\u5ea6\u95ee\u9898 \u7cbe\u5ea6\u8bf4\u660e \u76ee\u5f55 \u2460\u539f\u59cb\u6846\u67b6\u6a21\u578b\u4e0eFLOAT.SIM\u6a21\u578b\u7cbe\u5ea6\u95ee\u9898 \u539f\u59cb\u7f51\u7edc\u6a21\u578b\u4e0e\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u7ed3\u679c\u5e94\u5b8c\u5168\u4e00\u81f4 1.\u539f\u59cb\u6846\u67b6\u6a21\u578b\u4e0eFLOAT.SIM\u6a21\u578b\u7cbe\u5ea6\u95ee\u9898 \u2461FLOAT.SIM\u6a21\u578b\u548cFIXED.SIM\u6a21\u578b\u7cbe\u5ea6\u95ee\u9898 \u6709\u4e00\u5b9a\u7684\u7cbe\u5ea6\u5dee\u522b 2.FLOAT.SIM\u6a21\u578b\u548cFIXED.SIM\u6a21\u578b\u7cbe\u5ea6\u95ee\u9898 \u2462\u677f\u7aef\u7cbe\u5ea6\u95ee\u9898 \u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u4e0e\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u7ed3\u679c\u5e94\u5b8c\u5168\u4e00\u81f4 3.\u677f\u7aef\u7cbe\u5ea6\u95ee\u9898","title":"\u9644\u5f55\u2163. IPU\u7cbe\u5ea6\u95ee\u9898Debug SOP"},{"location":"module/User_Guide/IPU230/Accuracy_Debug_SOP.html#1-ipudebug-sop","text":"\u5f53\u6a21\u578b\u7cbe\u5ea6\u4e0d\u7b26\u5408\u9884\u671f\u65f6\uff0c\u5728 SGS_IPU_SDK/doc/Debug_SOP/IPU\u7cbe\u5ea6\u95ee\u9898Debug SOP.pdf \u4e2d\uff0c\u7ed9\u51fa\u4e86\u51e0\u79cd\u5e38\u89c1\u7684\u7cbe\u5ea6\u95ee\u9898\u7684Debug\u601d\u8def\uff0c\u5177\u4f53\u5206\u4e3a\u4ee5\u4e0b\u4e09\u79cd\uff1a \u7cbe\u5ea6\u95ee\u9898 \u7cbe\u5ea6\u8bf4\u660e \u76ee\u5f55 \u2460\u539f\u59cb\u6846\u67b6\u6a21\u578b\u4e0eFLOAT.SIM\u6a21\u578b\u7cbe\u5ea6\u95ee\u9898 \u539f\u59cb\u7f51\u7edc\u6a21\u578b\u4e0e\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u7ed3\u679c\u5e94\u5b8c\u5168\u4e00\u81f4 1.\u539f\u59cb\u6846\u67b6\u6a21\u578b\u4e0eFLOAT.SIM\u6a21\u578b\u7cbe\u5ea6\u95ee\u9898 \u2461FLOAT.SIM\u6a21\u578b\u548cFIXED.SIM\u6a21\u578b\u7cbe\u5ea6\u95ee\u9898 \u6709\u4e00\u5b9a\u7684\u7cbe\u5ea6\u5dee\u522b 2.FLOAT.SIM\u6a21\u578b\u548cFIXED.SIM\u6a21\u578b\u7cbe\u5ea6\u95ee\u9898 \u2462\u677f\u7aef\u7cbe\u5ea6\u95ee\u9898 \u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u4e0e\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u7ed3\u679c\u5e94\u5b8c\u5168\u4e00\u81f4 3.\u677f\u7aef\u7cbe\u5ea6\u95ee\u9898","title":"1. IPU\u7cbe\u5ea6\u95ee\u9898Debug SOP"},{"location":"module/User_Guide/IPU230/Adding_A_New_Layer.html","text":"1. \u6982\u8ff0 \u00b6 \u672c\u8282\u4ec5\u9002\u7528\u4e8ecaffe \u6a21\u578b\u3002\u5bf9\u4e8esigmastar \u8fd8\u672a\u5b9e\u73b0\u7684layer\uff0c\u7528sigmastar \u63d0\u4f9b\u5e95\u5c42\u7b97\u5b50\u6765\u7ec4\u5408\u5b9e\u73b0\u3002\u5e95\u5c42\u7b97\u5b50\u4e0e tensorflow \u7684\u7b97\u5b50\u7c7b\u4f3c\uff0c\u652f\u6301\u7684\u7b97\u5b50\u53c2\u8003 DLA SDK\u652f\u6301\uff1aTensofFlow \u652f\u6301\u7b97\u5b50 \u652f\u6301\u7b97\u5b50\u8f6c\u6362\u6d41\u7a0b\u5982\u4e0b\u56fe CaffeConvert Tool (\u4ee3\u7801\u4f4d\u7f6e\uff1a SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py ) caffe \u6a21\u578b\u8f6c\u6362\u5de5\u5177\u501f\u9274\u4e86\u5c0f\u7c73\u5f00\u6e90\u6846\u67b6mace \u7684\u8bbe\u8ba1\uff0c\u8981\u6dfb\u52a0\u65b0\u7684layer\uff0c\u8bf7\u5148\u5230 Xiaomi MACE \u4e0b\u8f7d\u539f\u59cb\u4ee3\u7801\uff0c\u6309\u7167mace \u5b98\u65b9\u6587\u6863\u914d\u7f6e \u597d\u7f16\u8bd1\u73af\u5883\uff0c\u6216\u8005\u76f4\u63a5\u4f7f\u7528\u6211\u4eec\u63d0\u4f9b\u7684docker \u73af\u5883\u3002 \u4e0b\u9762\u4ee5 reorg layer \u4e3a\u4f8b\u5b50\uff0c\u8bb2\u89e3\u5982\u4f55\u6dfb\u52a0\u65b0\u7684layer\uff0c\u4e3b\u8981\u4fee\u6539\u4ee5\u4e0b\u51e0\u4e2a\u6587\u4ef6 2. Caffe proto \u6587\u4ef6\u4fee\u6539 \u00b6 2.1 \u4fee\u6539caffe proto \u00b6 Mace \u539f\u59cb\u4ee3\u7801\u4e0b\u8f7d\u540e\uff0c\u7528 SGS_IPU_SDK/Scripts/CaffeConvertTool/third_party/caffe/caffe.proto \u66ff\u6362\u6389mace \u5de5\u7a0b \u8def\u5f84\u4e0bmace/third_party/caffe \u4e0bcaffe.proto \u6587\u4ef6\u3002\u56e0\u4e3asigmastar \u5728mace \u57fa\u7840\u4e0a\u505a\u4e86\u4e8c\u6b21\u5f00\u53d1\uff0c\u6240\u4ee5sigmstar \u652f\u6301 \u7684caffe layer \u5df2\u7ecf\u8fdc\u8fdc\u591a\u4e8e\u539f\u751f\u7684mace \u652f\u6301\u6570\u91cf\u3002\u8981\u6dfb\u52a0\u65b0\u7684layer\uff0c\u8bf7\u4ee5sigmastar \u7684caffe proto \u6587\u4ef6\u4f5c\u4e3a\u57fa\u7840 \u6dfb\u52a0\u3002 optional ReorgParameter reorg_param = 157 ; } message ReorgParameter { optional uint32 stride = 1 ; optional bool reverse = 2 [ default = false ] ; } 2.2 \u7f16\u8bd1proto \u6587\u4ef6 \u00b6 \u5728mace \u5f00\u53d1\u73af\u5883\u4e2d cd pathToMace/ bazel build third_party/caffe/caffe_py \u5728bazel-genfiles \u4e0b\u751f\u6210caffe_pb2.py \u5c06\u4e0a\u9762\u4fee\u6539\u540e\u7684caffe.proto \u548c\u751f\u6210\u7684caffe_pb2.py \u66ff\u6362 SGS_IPU_SDK/Scripts/CaffeConvertTool/third_party/caffe \u540c \u540d\u6587\u4ef6\uff0c\u7136\u540e\u6309\u7167\u5982\u4e0b\u987a\u5e8f\u4fee\u6539\u4ee3\u7801 3. \u4fee\u6539caffe_converter.py \u00b6 \u6587\u4ef6\u8def\u5f84 SGS_IPU_SDK/Scripts/CaffeConvertTool/mace/python/tools/converter_tool/caffe_converter.py \u8be5\u6587\u4ef6\u7684\u4f5c\u7528\u662f\u628acaffe\u6a21\u578b\u8f6c\u6362\u4e3amace\u6a21\u578b\uff0c\u5e76\u4fdd\u5b58\u8be5layer\u7684\u53c2\u6570 Reorg ':self.convert_Reorg, ... ... def convert_Reorg ( self , caffe_op ): op = self . convert_general_op ( caffe_op ) op . type = \"Reorg\" param = caffe_op . layer . reorg_param stride_arg = op . arg . add () stride_arg . name = \"stride\" stride_arg . i = 1 #default is true if param . HasField ( 'stride' ): stride_arg . i = int ( param . stride ) 4. \u4fee\u6539shape_inference.py \u00b6 \u6587\u4ef6\u8def\u5f84 SGS_IPU_SDK/Scripts/CaffeConvertTool/mace/python/tools/converter_tool/shape_inference.py \u8be5\u6587\u4ef6\u7684\u4f5c\u7528\u662f\u8ba1\u7b97layer\u7684output shape Reorg ': self.infer_shape_Reorg, ... ... def infer_shape_Reorg ( self , op ): #only support stride is 2 output_shape = self . _output_shape_cache [ op . input [ 0 ]] input_shape = list ( self . _output_shape_cache [ op . input [ 0 ]]) input_n = input_shape [ 0 ] input_c = input_shape [ 1 ] input_h = input_shape [ 2 ] input_w = input_shape [ 3 ] output_shape = [ input_n , int ( input_c * 4 ), int ( input_h / 2 ), int ( input_w / 2 )] self . add_output_shape ( op , [ output_shape ]) 5. \u4fee\u6539SGSModel_transform.py \u00b6 \u5982\u4e0b\u56fe\u6240\u793a\uff0c\u6211\u4eec\u53d1\u73b0reorg\u5728NCHW\u7684\u6392\u5217\u987a\u5e8f\u4e0b\uff0c\u5b83\u5b9e\u9645\u4e0a\u662f\u5bf9\u6570\u636e\u505a\u4e86\u4e00\u4e2a\u91cd\u6392\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u6700\u540e\u62c6\u89e3\u51fa\u6765\u7684\u7b97\u5b50\u7ec4\u5408\u662f \u6309\u7167\u7b97\u5b50\u7ec4\u5408\u987a\u5e8f\uff0c\u7f16\u5199\u4ee3\u7801 \u6587\u4ef6\u8def\u5f84 SGS_IPU_SDK/Scripts/CaffeConvertTool/mace/python/tools/SGSModel_transform.py \u8be5\u6587\u4ef6\u4f5c\u7528\u662f\u589e\u52a0\u8be5layer \u7684\u62c6\u89e3\u51fd\u6570\u3002\u5373\u7528Sigmastar \u63d0\u4f9b\u7684\u57fa\u672c\u7b97\u5b50\u5b9e\u73b0\u8be5layer\u3002 Reorg ':self.split_Reorg, ... ... def split_Reorg ( self , op ): #only support strid is 2 [ n , c , h , w ] = op . output_shape [ 0 ] . dims [:] c = int ( c / 4 ) op_name = op . name xi = op . input [ 0 ] ... ... \u81f3\u6b64\uff0c\u65b0\u7684layer \u652f\u6301\u6dfb\u52a0\u5b8c\u6210 6. Layer\u62c6\u89e3\u6ce8\u610f\u4e8b\u9879\u4e0e\u6280\u5de7 \u00b6 6.1. Layer\u62c6\u89e3\u6ce8\u610f\u4e8b\u9879\u4e0e\u6280\u5de7 \u6570\u636e\u7ef4\u5ea6\u7684\u95ee\u9898 \u00b6 \u5728caffe\u7f51\u7edc\u4e2d\uff0c\u4f7f\u7528NCHW\u6570\u636e\u6392\u5217\u3002\u800csigmastar\u4f7f\u7528NHWC\u7684\u987a\u5e8f\u8fdb\u884c\u6570\u636e\u8ba1\u7b97\uff08\u4e0etensorflow\u7c7b\u4f3c\uff09\u3002\u6240\u4ee5\u5728\u6a21\u578b\u8f6c\u6362\u6210sim\u6a21\u578b\u7684\u65f6\u5019\uff0c\u4f1a\u5bf9\u6240\u67094\u7ef4\u5ea6\u7684shape\u548c\u6570\u636e\u505a\u4e00\u6b21\u8f6c\u6362\u3002\u5373NCHW\u8f6c\u5230NHWC \u53c2\u8003\u4ee3\u7801\uff1a SGS_IPU_SDK/Scripts/CaffeConvertTool/mace/python/tools/SGSModel_converter.py \u5bf9\u4e8etensor data\u7684\u8f6c\u6362 def _creatBuffer ( self ): ... ... if len ( ori_shape ) == 4 : #transpose data to NHWC six . print_ ( \"Reshape \" , tensor . name , \"to NHWC\" ) data = np . array ( ori_data ) data = data . reshape ( ori_shape ) data = data . transpose ( 0 , 2 , 3 , 1 ) \u5bf9\u4e8eshape\u7684\u8f6c\u6362 def _creatTensor ( self ): ... ... if len ( shape ) == 4 and data_format == mace_pb2 . DT_NCHW : Transformer . transpose_shape ( shape , [ 0 , 2 , 3 , 1 ]) tflite . Tensor . TensorStartShapeVector ( self . _builder , len ( shape )) \u56e0\u4e3ashape\u5728\u521b\u5efasim\u6a21\u578b\u7684\u65f6\u5019\u4f1a\u88ab\u5f3a\u884c\u6539\u53d8\uff0c\u6240\u4ee5\u62c6\u89e3\u7684\u65f6\u5019\u8981\u6ce8\u610f \uff081\uff09\u6709axis\u53c2\u6570\u7684\uff0c\u8981\u6ce8\u610f\u987a\u5e8f\u4ea4\u6362 \u6bd4\u5982`concat layer\uff0ccaffe model\u91cc\u9762\uff0c\u5b83\u8981\u5bf9C\u7eac\u5ea6\u505aconcat\uff0c\u5176axis\u4e3a1\u3002\u7f51\u7edc\u8f6c\u6362\u540e\uff0cC\u4e3a\u6362\u5230\u4e86\u6700\u4f4e\u7ef4\uff0c\u6240 \u4ee5\u8981\u4fee\u6539axis\u4e3a3\uff0c\u4ee3\u7801\u5982\u4e0b\u3002\u76f8\u4f3c\u7684\u8fd8\u6709split\u3001PRelu\u7b49 def split_Concat ( self , op ): ... ... if len ( output_shape [ 0 ] . dims ) == 4 : #nchw -> nhwc if arg [ i ] . i == 1 : arg [ i ] . i = 3 else if arg [ i ] . i == 2 : arg [ i ] . i = 1 else if arg [ i ] . i == 3 : arg [ i ] . i = 2 \uff082\uff09\u6307\u5b9a\u7b97\u5b50output_shape\u7684\u65f6\u5019\uff0c\u7279\u522b\u662f4\u7ef4\u7684\u8f93\u51fa\uff0c\u8981\u6ce8\u610f\u987a\u5e8f\u53d8\u5316\u5e26\u6765\u7684\u5f71\u54cd\u3002\u6bd4\u5982\u5e0c\u671btensor\u7684\u8f93\u51fa\u662f[A,B,C,D]\uff0c\u90a3\u4e48\u4ee3\u7801\u4e2d\u6211\u4eec\u5199\u7684\u6570\u503c\u4e3a[A,D,B,C]\u3002\u56e0\u4e3a[A,D,B,C]\u7ecf\u8fc7\u4e0a\u9762\u4ee3\u7801\u7684\u8f6c\u6362\uff0c\u5c31\u5f97\u5230\u4e86[A,B,C,D]\u8fd9\u4e2a\u987a\u5e8f \uff083\uff09\u5728NCHW \u6570\u636e\u6392\u5217\u4e0b\u6709\u5f88\u5f3a\u89c4\u5f8b\u7684layer\uff0c\u53ef\u4ee5\u5148\u8f6c\u5230NCHW \u4e0b\u64cd\u4f5c\u3002\u6bd4\u5982\u4e0a\u9762\u63d0\u5230\u7684reorg layer\u3002 \uff084\uff09\u7528sdk \u91cc\u9762\u63d0\u4f9b\u7684Netron \u5de5\u5177\u6253\u5f00\u8f6c\u6362\u540e\u7684sim \u6a21\u578b\uff0c\u65b9\u4fbf\u67e5\u770b\u5404\u79cd\u5c5e\u6027\u548cshape\u3002 6.2. \u5efa\u8bae\u62c6\u89e3\u6d41\u7a0b \u00b6 \u7efc\u4e0a\u6240\u8ff0\uff0c\u5728\u62c6\u89e3\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u5efa\u8bae\u6309\u7167\u5982\u4e0b\u6d41\u7a0b\u8fdb\u884c 6.3. \u6570\u636e\u5bf9\u6bd4\u53ca\u9a8c\u8bc1 \u00b6 \u524d\u671f\u53ef\u4ee5\u7528python \u521b\u5efatensorflow \u7b97\u5b50\u7684\u65b9\u6cd5\uff0c\u8fdb\u884c\u9a8c\u8bc1\u3002 \u5f53\u9a8c\u8bc1\u5b8c\u6210\uff0c\u518d\u4fee\u6539SGS_IPU_SDK \u7684\u76f8\u5173\u4ee3\u7801\uff0c\u53c2\u8003 Dump_Debug Tool \u7ae0\u8282\uff0cdump \u51fa\u6700\u540e\u7ed3\u679c\u4e0egolden \u6bd4\u5bf9\u3002","title":"\u9644\u5f55\u2160. \u5982\u4f55\u6dfb\u52a0\u65b0\u7684Layer"},{"location":"module/User_Guide/IPU230/Adding_A_New_Layer.html#1","text":"\u672c\u8282\u4ec5\u9002\u7528\u4e8ecaffe \u6a21\u578b\u3002\u5bf9\u4e8esigmastar \u8fd8\u672a\u5b9e\u73b0\u7684layer\uff0c\u7528sigmastar \u63d0\u4f9b\u5e95\u5c42\u7b97\u5b50\u6765\u7ec4\u5408\u5b9e\u73b0\u3002\u5e95\u5c42\u7b97\u5b50\u4e0e tensorflow \u7684\u7b97\u5b50\u7c7b\u4f3c\uff0c\u652f\u6301\u7684\u7b97\u5b50\u53c2\u8003 DLA SDK\u652f\u6301\uff1aTensofFlow \u652f\u6301\u7b97\u5b50 \u652f\u6301\u7b97\u5b50\u8f6c\u6362\u6d41\u7a0b\u5982\u4e0b\u56fe CaffeConvert Tool (\u4ee3\u7801\u4f4d\u7f6e\uff1a SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py ) caffe \u6a21\u578b\u8f6c\u6362\u5de5\u5177\u501f\u9274\u4e86\u5c0f\u7c73\u5f00\u6e90\u6846\u67b6mace \u7684\u8bbe\u8ba1\uff0c\u8981\u6dfb\u52a0\u65b0\u7684layer\uff0c\u8bf7\u5148\u5230 Xiaomi MACE \u4e0b\u8f7d\u539f\u59cb\u4ee3\u7801\uff0c\u6309\u7167mace \u5b98\u65b9\u6587\u6863\u914d\u7f6e \u597d\u7f16\u8bd1\u73af\u5883\uff0c\u6216\u8005\u76f4\u63a5\u4f7f\u7528\u6211\u4eec\u63d0\u4f9b\u7684docker \u73af\u5883\u3002 \u4e0b\u9762\u4ee5 reorg layer \u4e3a\u4f8b\u5b50\uff0c\u8bb2\u89e3\u5982\u4f55\u6dfb\u52a0\u65b0\u7684layer\uff0c\u4e3b\u8981\u4fee\u6539\u4ee5\u4e0b\u51e0\u4e2a\u6587\u4ef6","title":"1. \u6982\u8ff0"},{"location":"module/User_Guide/IPU230/Adding_A_New_Layer.html#2-caffe-proto","text":"","title":"2. Caffe proto \u6587\u4ef6\u4fee\u6539"},{"location":"module/User_Guide/IPU230/Adding_A_New_Layer.html#21-caffe-proto","text":"Mace \u539f\u59cb\u4ee3\u7801\u4e0b\u8f7d\u540e\uff0c\u7528 SGS_IPU_SDK/Scripts/CaffeConvertTool/third_party/caffe/caffe.proto \u66ff\u6362\u6389mace \u5de5\u7a0b \u8def\u5f84\u4e0bmace/third_party/caffe \u4e0bcaffe.proto \u6587\u4ef6\u3002\u56e0\u4e3asigmastar \u5728mace \u57fa\u7840\u4e0a\u505a\u4e86\u4e8c\u6b21\u5f00\u53d1\uff0c\u6240\u4ee5sigmstar \u652f\u6301 \u7684caffe layer \u5df2\u7ecf\u8fdc\u8fdc\u591a\u4e8e\u539f\u751f\u7684mace \u652f\u6301\u6570\u91cf\u3002\u8981\u6dfb\u52a0\u65b0\u7684layer\uff0c\u8bf7\u4ee5sigmastar \u7684caffe proto \u6587\u4ef6\u4f5c\u4e3a\u57fa\u7840 \u6dfb\u52a0\u3002 optional ReorgParameter reorg_param = 157 ; } message ReorgParameter { optional uint32 stride = 1 ; optional bool reverse = 2 [ default = false ] ; }","title":"2.1 \u4fee\u6539caffe proto"},{"location":"module/User_Guide/IPU230/Adding_A_New_Layer.html#22-proto","text":"\u5728mace \u5f00\u53d1\u73af\u5883\u4e2d cd pathToMace/ bazel build third_party/caffe/caffe_py \u5728bazel-genfiles \u4e0b\u751f\u6210caffe_pb2.py \u5c06\u4e0a\u9762\u4fee\u6539\u540e\u7684caffe.proto \u548c\u751f\u6210\u7684caffe_pb2.py \u66ff\u6362 SGS_IPU_SDK/Scripts/CaffeConvertTool/third_party/caffe \u540c \u540d\u6587\u4ef6\uff0c\u7136\u540e\u6309\u7167\u5982\u4e0b\u987a\u5e8f\u4fee\u6539\u4ee3\u7801","title":"2.2 \u7f16\u8bd1proto \u6587\u4ef6"},{"location":"module/User_Guide/IPU230/Adding_A_New_Layer.html#3-caffe_converterpy","text":"\u6587\u4ef6\u8def\u5f84 SGS_IPU_SDK/Scripts/CaffeConvertTool/mace/python/tools/converter_tool/caffe_converter.py \u8be5\u6587\u4ef6\u7684\u4f5c\u7528\u662f\u628acaffe\u6a21\u578b\u8f6c\u6362\u4e3amace\u6a21\u578b\uff0c\u5e76\u4fdd\u5b58\u8be5layer\u7684\u53c2\u6570 Reorg ':self.convert_Reorg, ... ... def convert_Reorg ( self , caffe_op ): op = self . convert_general_op ( caffe_op ) op . type = \"Reorg\" param = caffe_op . layer . reorg_param stride_arg = op . arg . add () stride_arg . name = \"stride\" stride_arg . i = 1 #default is true if param . HasField ( 'stride' ): stride_arg . i = int ( param . stride )","title":"3. \u4fee\u6539caffe_converter.py"},{"location":"module/User_Guide/IPU230/Adding_A_New_Layer.html#4-shape_inferencepy","text":"\u6587\u4ef6\u8def\u5f84 SGS_IPU_SDK/Scripts/CaffeConvertTool/mace/python/tools/converter_tool/shape_inference.py \u8be5\u6587\u4ef6\u7684\u4f5c\u7528\u662f\u8ba1\u7b97layer\u7684output shape Reorg ': self.infer_shape_Reorg, ... ... def infer_shape_Reorg ( self , op ): #only support stride is 2 output_shape = self . _output_shape_cache [ op . input [ 0 ]] input_shape = list ( self . _output_shape_cache [ op . input [ 0 ]]) input_n = input_shape [ 0 ] input_c = input_shape [ 1 ] input_h = input_shape [ 2 ] input_w = input_shape [ 3 ] output_shape = [ input_n , int ( input_c * 4 ), int ( input_h / 2 ), int ( input_w / 2 )] self . add_output_shape ( op , [ output_shape ])","title":"4. \u4fee\u6539shape_inference.py"},{"location":"module/User_Guide/IPU230/Adding_A_New_Layer.html#5-sgsmodel_transformpy","text":"\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u6211\u4eec\u53d1\u73b0reorg\u5728NCHW\u7684\u6392\u5217\u987a\u5e8f\u4e0b\uff0c\u5b83\u5b9e\u9645\u4e0a\u662f\u5bf9\u6570\u636e\u505a\u4e86\u4e00\u4e2a\u91cd\u6392\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u6700\u540e\u62c6\u89e3\u51fa\u6765\u7684\u7b97\u5b50\u7ec4\u5408\u662f \u6309\u7167\u7b97\u5b50\u7ec4\u5408\u987a\u5e8f\uff0c\u7f16\u5199\u4ee3\u7801 \u6587\u4ef6\u8def\u5f84 SGS_IPU_SDK/Scripts/CaffeConvertTool/mace/python/tools/SGSModel_transform.py \u8be5\u6587\u4ef6\u4f5c\u7528\u662f\u589e\u52a0\u8be5layer \u7684\u62c6\u89e3\u51fd\u6570\u3002\u5373\u7528Sigmastar \u63d0\u4f9b\u7684\u57fa\u672c\u7b97\u5b50\u5b9e\u73b0\u8be5layer\u3002 Reorg ':self.split_Reorg, ... ... def split_Reorg ( self , op ): #only support strid is 2 [ n , c , h , w ] = op . output_shape [ 0 ] . dims [:] c = int ( c / 4 ) op_name = op . name xi = op . input [ 0 ] ... ... \u81f3\u6b64\uff0c\u65b0\u7684layer \u652f\u6301\u6dfb\u52a0\u5b8c\u6210","title":"5. \u4fee\u6539SGSModel_transform.py"},{"location":"module/User_Guide/IPU230/Adding_A_New_Layer.html#6-layer","text":"","title":"6. Layer\u62c6\u89e3\u6ce8\u610f\u4e8b\u9879\u4e0e\u6280\u5de7"},{"location":"module/User_Guide/IPU230/Adding_A_New_Layer.html#61-layer","text":"\u5728caffe\u7f51\u7edc\u4e2d\uff0c\u4f7f\u7528NCHW\u6570\u636e\u6392\u5217\u3002\u800csigmastar\u4f7f\u7528NHWC\u7684\u987a\u5e8f\u8fdb\u884c\u6570\u636e\u8ba1\u7b97\uff08\u4e0etensorflow\u7c7b\u4f3c\uff09\u3002\u6240\u4ee5\u5728\u6a21\u578b\u8f6c\u6362\u6210sim\u6a21\u578b\u7684\u65f6\u5019\uff0c\u4f1a\u5bf9\u6240\u67094\u7ef4\u5ea6\u7684shape\u548c\u6570\u636e\u505a\u4e00\u6b21\u8f6c\u6362\u3002\u5373NCHW\u8f6c\u5230NHWC \u53c2\u8003\u4ee3\u7801\uff1a SGS_IPU_SDK/Scripts/CaffeConvertTool/mace/python/tools/SGSModel_converter.py \u5bf9\u4e8etensor data\u7684\u8f6c\u6362 def _creatBuffer ( self ): ... ... if len ( ori_shape ) == 4 : #transpose data to NHWC six . print_ ( \"Reshape \" , tensor . name , \"to NHWC\" ) data = np . array ( ori_data ) data = data . reshape ( ori_shape ) data = data . transpose ( 0 , 2 , 3 , 1 ) \u5bf9\u4e8eshape\u7684\u8f6c\u6362 def _creatTensor ( self ): ... ... if len ( shape ) == 4 and data_format == mace_pb2 . DT_NCHW : Transformer . transpose_shape ( shape , [ 0 , 2 , 3 , 1 ]) tflite . Tensor . TensorStartShapeVector ( self . _builder , len ( shape )) \u56e0\u4e3ashape\u5728\u521b\u5efasim\u6a21\u578b\u7684\u65f6\u5019\u4f1a\u88ab\u5f3a\u884c\u6539\u53d8\uff0c\u6240\u4ee5\u62c6\u89e3\u7684\u65f6\u5019\u8981\u6ce8\u610f \uff081\uff09\u6709axis\u53c2\u6570\u7684\uff0c\u8981\u6ce8\u610f\u987a\u5e8f\u4ea4\u6362 \u6bd4\u5982`concat layer\uff0ccaffe model\u91cc\u9762\uff0c\u5b83\u8981\u5bf9C\u7eac\u5ea6\u505aconcat\uff0c\u5176axis\u4e3a1\u3002\u7f51\u7edc\u8f6c\u6362\u540e\uff0cC\u4e3a\u6362\u5230\u4e86\u6700\u4f4e\u7ef4\uff0c\u6240 \u4ee5\u8981\u4fee\u6539axis\u4e3a3\uff0c\u4ee3\u7801\u5982\u4e0b\u3002\u76f8\u4f3c\u7684\u8fd8\u6709split\u3001PRelu\u7b49 def split_Concat ( self , op ): ... ... if len ( output_shape [ 0 ] . dims ) == 4 : #nchw -> nhwc if arg [ i ] . i == 1 : arg [ i ] . i = 3 else if arg [ i ] . i == 2 : arg [ i ] . i = 1 else if arg [ i ] . i == 3 : arg [ i ] . i = 2 \uff082\uff09\u6307\u5b9a\u7b97\u5b50output_shape\u7684\u65f6\u5019\uff0c\u7279\u522b\u662f4\u7ef4\u7684\u8f93\u51fa\uff0c\u8981\u6ce8\u610f\u987a\u5e8f\u53d8\u5316\u5e26\u6765\u7684\u5f71\u54cd\u3002\u6bd4\u5982\u5e0c\u671btensor\u7684\u8f93\u51fa\u662f[A,B,C,D]\uff0c\u90a3\u4e48\u4ee3\u7801\u4e2d\u6211\u4eec\u5199\u7684\u6570\u503c\u4e3a[A,D,B,C]\u3002\u56e0\u4e3a[A,D,B,C]\u7ecf\u8fc7\u4e0a\u9762\u4ee3\u7801\u7684\u8f6c\u6362\uff0c\u5c31\u5f97\u5230\u4e86[A,B,C,D]\u8fd9\u4e2a\u987a\u5e8f \uff083\uff09\u5728NCHW \u6570\u636e\u6392\u5217\u4e0b\u6709\u5f88\u5f3a\u89c4\u5f8b\u7684layer\uff0c\u53ef\u4ee5\u5148\u8f6c\u5230NCHW \u4e0b\u64cd\u4f5c\u3002\u6bd4\u5982\u4e0a\u9762\u63d0\u5230\u7684reorg layer\u3002 \uff084\uff09\u7528sdk \u91cc\u9762\u63d0\u4f9b\u7684Netron \u5de5\u5177\u6253\u5f00\u8f6c\u6362\u540e\u7684sim \u6a21\u578b\uff0c\u65b9\u4fbf\u67e5\u770b\u5404\u79cd\u5c5e\u6027\u548cshape\u3002","title":"6.1. Layer\u62c6\u89e3\u6ce8\u610f\u4e8b\u9879\u4e0e\u6280\u5de7 \u6570\u636e\u7ef4\u5ea6\u7684\u95ee\u9898"},{"location":"module/User_Guide/IPU230/Adding_A_New_Layer.html#62","text":"\u7efc\u4e0a\u6240\u8ff0\uff0c\u5728\u62c6\u89e3\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u5efa\u8bae\u6309\u7167\u5982\u4e0b\u6d41\u7a0b\u8fdb\u884c","title":"6.2. \u5efa\u8bae\u62c6\u89e3\u6d41\u7a0b"},{"location":"module/User_Guide/IPU230/Adding_A_New_Layer.html#63","text":"\u524d\u671f\u53ef\u4ee5\u7528python \u521b\u5efatensorflow \u7b97\u5b50\u7684\u65b9\u6cd5\uff0c\u8fdb\u884c\u9a8c\u8bc1\u3002 \u5f53\u9a8c\u8bc1\u5b8c\u6210\uff0c\u518d\u4fee\u6539SGS_IPU_SDK \u7684\u76f8\u5173\u4ee3\u7801\uff0c\u53c2\u8003 Dump_Debug Tool \u7ae0\u8282\uff0cdump \u51fa\u6700\u540e\u7ed3\u679c\u4e0egolden \u6bd4\u5bf9\u3002","title":"6.3. \u6570\u636e\u5bf9\u6bd4\u53ca\u9a8c\u8bc1"},{"location":"module/User_Guide/IPU230/Calibrate.html","text":"3.1. Calibrator\u7b80\u4ecb \u00b6 CalibratorTool \u8bf4\u660e \u5de5\u5177\u4f4d\u7f6e SGS_IPU_SDK/Scripts/calibrator/calibrator.py \u5de5\u5177\u4f5c\u7528 \u5c06SigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u4e3aSigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b \u4f7f\u7528\u987b\u77e5 \u2460 Calibrator\u5de5\u5177\u53ef\u4ee5\u652f\u6301\u591a\u6570\u6a21\u578b\u7684\u8f6c\u6362\uff0c\u5c11\u90e8\u5206\u6a21\u578b\u5982\u5206\u6bb5\u7f51\u7edcfaste-rcnn\u9700\u81ea\u884c\u5b9e\u73b0Calibrator \u2460 \u666e\u901a\u6a21\u578b\u8f6c\u6362 Calitor \u2461 Calibrator\u81ea\u5b9e\u73b0(faste-rcnn) calibrator_custom.calibrator \u2462 \u6a21\u578b\u53c2\u6570\u91cf\u8f83\u5c0fcalibrator\u5de5\u5177\u65e0\u6cd5\u8fbe\u5230\u6ee1\u610f\u7684\u7cbe\u5ea6\u65f6 torch_calibrator \u2463 \u6a21\u578b\u53c2\u6570\u91cf\u8f83\u5927\u671f\u5f85\u4f7f\u75284bit\u91cf\u5316\u51cf\u5c0f\u6a21\u578b\u5927\u5c0f torch_calibrator \u2461 \u6a21\u578b\u91cf\u5316\u7cbe\u5ea6\u987b\u77e5 \u2460 \u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u6210\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u9700\u898130\u5f20\u5de6\u53f3\u8bad\u7ec3\u56fe\u7247\u7528\u6765\u5206\u6790\u548c\u91cf\u5316\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u7684\u6570\u636e \u2461 \u7ed9\u5b9a\u5355\u5f20\u56fe\u7247\u6587\u4ef6\uff0c\u4f9d\u7136\u53ef\u4ee5\u8f6c\u6362\u4e3a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff0c\u4f46\u662f\u5176\u6a21\u578b\u7cbe\u5ea6\u53ef\u80fd\u4f1a\u53d7\u5230\u5f71\u54cd \u2462 \u8f6c\u6362\u7f51\u7edc\u65f6\u53ef\u4ee5\u5728input_config.ini\u6587\u4ef6\u4e2d\u9488\u5bf9\u5377\u79ef\u914d\u7f6e\u4e0d\u540c\u7684\u91cf\u5316\u4fe1\u606f\uff0c\u4ece\u800c\u83b7\u5f97\u7cbe\u5ea6\u548c\u901f\u5ea6\u7684\u5e73\u8861 CONV_CONFIG \u2462 \u4f7f\u7528calibrator\u5c06\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u4e3a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u65f6\uff0c\u4f1a\u5728\u8fd0\u884c\u76ee\u5f55\u4e0b\u4ea7\u751flog\u76ee\u5f55\uff0clog\u76ee\u5f55\u4e0b\u7684tensor_min_max.txt\u6587\u4ef6\u8bb0\u5f55\u4e86\u7f51\u7edc\u7684\u6bcf\u5c42\u8f93\u5165\u548c\u8f93\u51fa\u7684\u6700\u5927\u4e0e\u6700\u5c0f\u503c\uff0c\u5c06\u5728\u4e4b\u540e\u5206\u6790\u6570\u636e\u65f6\u6709\u7528\u3002log\u76ee\u5f55\u4e0b\u7684\u5185\u5bb9\u4f1a\u5728\u4e0b\u4e00\u6b21\u4f7f\u7528calibrator\u65f6\u5220\u9664\uff0c\u8bf7\u6ce8\u610f\u4fdd\u5b58\u3002 \u4f7f\u7528\u524d\u8bf7\u5148\u5728SGS_IPU_SDK \u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK source cfg_env.sh 3.2. Calibrator\u5de5\u5177\u4f7f\u7528\u8bf4\u660e \u00b6 3.2.1 Calibrator\u5de5\u5177\u4f7f\u7528\u793a\u4f8b \u00b6 \u8fdb\u5165\u5230\u8be5\u5de5\u5177\u76ee\u5f55\uff0c\u6267\u884c\uff1a python3 calibrator.py \\ -i ~/SGS_Models/resource/detection/coco2017_calibration_set32 \\ -m ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1_float.sim \\ -n ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1.py \\ --input_config ~/SGS_Models/tensorflow/ssd_mobilenet_v1/input_config.ini \\ --num_process 20 \u6216\u8005\u53ef\u4ee5\u4f7f\u7528\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\uff1a python3 calibrator.py \\ -i ~/SGS_Models/resource/detection/file.list \\ -m ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1_float.sim \\ -n ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1.py \\ --input_config ~/SGS_Models/tensorflow/ssd_mobilenet_v1/input_config.ini \\ --num_process 20 3.2.2 Calibrator\u5de5\u5177\u4f7f\u7528\u53c2\u6570\u8bf4\u660e \u00b6 (1) \u5fc5\u9009\u53c2\u6570 -i \u6216 --image : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u6240\u9700\u7684\u56fe\u7247\u6587\u4ef6\u8def\u5f84\u3002 \u4f7f\u7528\u987b\u77e5 \u652f\u6301\u4f7f\u7528\u5355\u5f20\u56fe\u7247\u8def\u5f84\u8fdb\u884c\u4f20\u53c2\uff0c\u4e5f\u652f\u6301\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\uff0c\u6216\u5b58\u50a8\u56fe\u7247\u8def\u5f84\u5217\u8868\u7684\u6587\u4ef6\u3002\u4f7f\u7528\u8def\u5f84\u5217\u8868\u5f62\u5f0f\u65f6\u53ef\u53c2\u8003\u5982\u4e0b\u65b9\u5f0f\uff1a \u7f51\u7edc\u6a21\u578b\u4e3a\u5355\u8f93\u5165\u65f6\uff1a -i ~/SGS_IPU_SDK/image_test/2007000364.jpg \u7f51\u7edc\u6a21\u578b\u4e3a\u591a\u8f93\u5165\u65f6\uff1a -i /SGS_IPU_SDK/image_test/2007000364.jpg, /SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp -m \u6216 --model \uff1a\u6307\u5b9achapter2\u4e2d\u8f6c\u6362\u51fa\u7684\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 --input_config \uff1a\u6307\u5b9ainput_config.ini\u6587\u4ef6\u8def\u5f84\u3002 \u4f7f\u7528\u987b\u77e5 \u8be5\u6587\u4ef6\u4e0e ConvertTool\u7ae0 \u4e2d\u8f6c\u6362\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6240\u7528\u6587\u4ef6\u4e3a\u540c\u4e00\u6587\u4ef6\uff0c\u5177\u4f53\u53ef\u53c2\u8003 input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e \u3002 -n \u6216 --preprocess : \u6307\u5b9a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4e0e\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\u76f8\u5173\u3002 \u4f7f\u7528\u987b\u77e5 \u591a\u8f93\u5165\u6a21\u578b\u7684\u524d\u5904\u7406\u53c2\u6570\u9700\u4f7f\u7528\u591a\u4e2a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u524d\u5904\u7406\u7684\u4e2a\u6570\u548c\u987a\u5e8f\u9700\u4e0e\u6a21\u578b\u8f93\u5165\u4e2a\u6570\u548c\u987a\u5e8f\u4fdd\u6301\u4e00\u81f4\u3002\u4f8b\u5982: -n preprocess1.py,preprocess2.py \u6216\u8005 --preprocess preprocess1.py,preprocess2.py \u4e3a\u4e86\u5728\u8f6c\u6362\u7f51\u7edc\u65f6\u5c3d\u53ef\u80fd\u51cf\u5c0f\u7cbe\u5ea6\u7684\u4e22\u5931\uff0c\u8bf7\u4f7f\u7528\u4e0e\u8bad\u7ec3\u76f8\u540c\u7684\u56fe\u7247\u524d\u5904\u7406\u65b9\u5f0f\uff0c\u6bcf\u79cd\u524d\u5904\u7406\u65b9\u5f0f\u9700\u72ec\u7acb\u7f16\u5199python\u6587\u4ef6\u3002 \u652f\u6301\u4f7f\u7528\u4ee5\u4e0b\u4e24\u79cd\u65b9\u5f0f\u6307\u5b9a\u524d\u5904\u7406\uff1a -n/--preprocess \u53c2\u6570\u4e3a\u7f16\u5199\u7684\u6587\u4ef6\u540d\u79f0\uff0c\u4e0d\u9700\u8981\u6307\u5b9a\u7f16\u5199\u6587\u4ef6\u7684\u8def\u5f84\uff1a\u8bf7\u5c06\u6587\u4ef6\u4fdd\u5b58\u5230 SGS_IPU_SDK/Scripts/calibrator/preprocess \u6587\u4ef6\u5939\u5185\uff0c\u5e76\u5728preprocess_method/ init .py \u6587\u4ef6\u4e2d\u589e\u52a0\u6587\u4ef6\u540d\u79f0\u3002 -n/--preprocess \u53c2\u6570\u4e3a\u524d\u5904\u7406Python\u7684\u6587\u4ef6\u8def\u5f84\u3002 \u524d\u5904\u7406\u6587\u4ef6\u65b9\u6cd5\u5e94\u6ce8\u610f\u4e0einput_config.ini\u4e2d\u7684[input_config]\u4fe1\u606f\u5339\u914d\uff0c\u8be6\u89c1 \u9644\u5f55 \u524d\u5904\u7406\u548c\u914d\u7f6e\u6587\u4ef6\u6ce8\u610f\u8981\u70b9 \u3002 \u53ef\u53c2\u8003\u4ee5caffe_resnet18\u7f51\u7edc\u4e3a\u4f8b\u7f16\u5199\u7684\u56fe\u7247\u524d\u5904\u7406\u6587\u4ef6\uff0c\u8be6\u89c1 \u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5 (2) \u53ef\u9009\u53c2\u6570 -o \u6216 --output : \u6307\u5b9a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u8def\u5f84\u3002 \u4f7f\u7528\u987b\u77e5 \u6307\u5b9a\u5230\u6587\u4ef6\u5939\uff0c\u5c06\u81ea\u52a8\u4ee5\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u524d\u7f00\u547d\u540d\uff0c\u540e\u63a5'fixed.sim'\uff1b \u6307\u5b9a\u5230\u5177\u4f53\u8def\u5f84\u548c\u6587\u4ef6\u540d\uff0c\u5c06\u4ee5\u6307\u5b9a\u8def\u5f84\u548c\u6587\u4ef6\u540d\u547d\u540d\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff1b \u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\uff0c\u5c06\u4ee5\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u50a8\u5b58\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u3002 --num_process : \u8fdb\u7a0b\u6570\uff0c\u540c\u65f6\u8fd0\u884c\u7684\u8fdb\u7a0b\u6570\u3002(\u4e0d\u52a0\u8be5\u53c2\u6570\u9ed8\u8ba4\u4e3a10\u4e2a\u8fdb\u7a0b)\u3002 --quant_level : \u9009\u62e9\u91cf\u5316\u7b49\u7ea7\u3002 \u4f7f\u7528\u987b\u77e5 \u53ef\u9009\u6a21\u5f0f\u6709\uff1a L1: \u91c7\u7528\u6700\u5927\u6700\u5c0f\u503c\u5feb\u901f\u5bf9\u6bd4\u6570\u636e\u91cf\u5316\uff0c\u901f\u5ea6\u8f83\u5feb\u3002 L2: \u91c7\u7528\u5feb\u901f\u5bf9\u6bd4\u6570\u636e\u91cf\u5316\u6743\u91cd\u6570\u636e\u3002 L3: \u5bf9\u7edf\u8ba1\u4fe1\u606f\u505a\u8fdb\u4e00\u6b65\u5206\u6790\uff0c\u8fd1\u4f3c\u62df\u5408\u539f\u6709\u6570\u636e\u5206\u5e03\u3002 L4: \u8fd1\u4f3c\u62df\u5408\u6743\u91cd\u6570\u636e\u5206\u5e03\uff0c\u5e76\u5efa\u8bae\u5347\u7ea7\u67d0\u4e9b\u5377\u79ef\u4e3a16bit\u91cf\u5316\u3002 L5: \u91c7\u7528\u9ad8\u7cbe\u5ea6\u6570\u636e\u5206\u6790\u65b9\u6cd5\uff0c\u6781\u5927\u9650\u5ea6\u62df\u5408\u539f\u6709\u6570\u636e\u5206\u5e03\uff0c\u5e76\u5efa\u8bae\u5347\u7ea7\u67d0\u4e9b\u5377\u79ef\u4e3a16bit\u91cf\u5316\u3002 \u9ed8\u8ba4L5\u91cf\u5316\u7b49\u7ea7\uff0c\u7b49\u7ea7\u8d8a\u9ad8\uff0c\u91cf\u5316\u7cbe\u5ea6\u8d8a\u9ad8\uff0c\u91cf\u5316\u901f\u5ea6\u4f1a\u76f8\u5e94\u53d8\u6162\u3002 \u9009\u62e9L2\u3001L3\u6216L4\u65f6\u4f1a\u6839\u636e\u7edf\u8ba1\u4fe1\u606f\u81ea\u52a8\u914d\u7f6e\u5377\u79ef\u7684\u91cf\u5316\u65b9\u5f0f\uff0c\u5982\u679c\u9700\u8981\u5f3a\u5236\u6307\u5b9a\uff0c\u6307\u5b9a\u65b9\u5f0f\u5728 Convert Tool: input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e-CONV_CONFIG \u4e2d\u6709\u8bf4\u660e(\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u5230\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u65f6\uff0c\u5377\u79ef\u91cf\u5316\u652f\u6301 UINT8 \u548c INT16 \u4e24\u79cd\u91cf\u5316\u65b9\u5f0f\u3002\u53ef\u5bf9\u67d0\u4e9b\u5377\u79ef\u5c42\u5355\u72ec\u8bbe\u7f6eINT16\u91cf\u5316\uff0c\u6216\u8005\u5bf9\u5168\u90e8\u5377\u79efINT16\u91cf\u5316\uff1b\u4e0d\u8bbe\u7f6e\u65f6\u9ed8\u8ba4\u4f7f\u7528calibrator\u7684\u63a8\u8350\u91cf\u5316\u65b9\u5f0f)\u3002 3.3. \u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5 \u00b6 \u4e0b\u9762\u4ee5caffe_resnet18\u7f51\u7edc\u4e3a\u4f8b\uff0c\u5bf9\u7f16\u5199\u56fe\u7247\u524d\u5904\u7406\u6587\u4ef6\u8fdb\u884c\u8bf4\u660e\uff1a (1) \u524d\u5904\u7406\u6587\u4ef6\u4f7f\u7528\u793a\u4f8b import cv2 import numpy as np def get_image ( img_path , resizeH = 224 , resizeW = 224 , resizeC = 3 , norm = True , meanB = 104.0 , meanG = 117.0 , meanR = 123.0 , std = 1.0 , rgb = False , nchw = False ): img = cv2 . imread ( img_path , flags =- 1 ) if img is None : raise FileNotFoundError ( 'No such image: {} ' . format ( img_path )) try : img_dim = img . shape [ 2 ] except IndexError : img_dim = 1 if img_dim == 4 : img = cv2 . cvtColor ( img , cv2 . COLOR_BGRA2BGR ) elif img_dim == 1 : img = cv2 . cvtColor ( img , cv2 . COLOR_GRAY2BGR ) img_float = img . astype ( 'float32' ) img_norm = cv2 . resize ( img_float , ( resizeW , resizeH ), interpolation = cv2 . INTER_LINEAR ) if norm and ( resizeC == 3 ): img_norm = ( img_norm - [ meanB , meanG , meanR ]) / std img_norm = img_norm . astype ( 'float32' ) elif norm and ( resizeC == 1 ): img_norm = ( img_norm - meanB ) / std img_norm = img_norm . astype ( 'float32' ) else : img_norm = np . round ( img_norm ) . astype ( 'uint8' ) if rgb : img_norm = cv2 . cvtColor ( img_norm , cv2 . COLOR_BGR2RGB ) if nchw : # NCHW img_norm = np . transpose ( img_norm , axes = ( 2 , 0 , 1 )) return np . expand_dims ( img_norm , 0 ) def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm ) \u4fdd\u5b58\u4e3a caffe_resnet18.py. \u4f7f\u7528\u987b\u77e5 \u5982\u679c\u60f3\u5728 -n/--preprocess \u53c2\u6570\u4e2d\u4f7f\u7528\u6587\u4ef6\u540d\u800c\u975e\u6587\u4ef6\u8def\u5f84\u7684\u65b9\u5f0f\uff0c\u9700\u8fdb\u884c\u5982\u4e0b\u64cd\u4f5c\uff1a \u5728SGS_IPU_SDK/Scripts/calibrator/preprocess_method/ init .py \u6587\u4ef6\u4e2d\u6dfb\u52a0\u521a\u521a\u7f16\u5199\u7684python\u6587\u4ef6: _all_ = [ 'caffe_mobilenet_v2' , 'caffe_resnet18' , 'caffe_resnet50_conv' , 'mobilenet_v1' ] \u5982\u679c\u4e0d\u5728SGS_IPU_SDK/Scripts/calibrator/preprocess_method/ init .py \u6587\u4ef6\u4e2d\u589e\u52a0\uff0c -n/--preprocess \u53c2\u6570\u9700\u4e3acaffe_resnet18.py\u6587\u4ef6\u8def\u5f84\uff0c\u800c\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528\u6587\u4ef6\u540d\u3002 (2) image_preprocess\u51fd\u6570\u8bf4\u660e\uff1a \u4f7f\u7528image_preprocess\u51fd\u6570\u8c03\u7528\uff0c\u6b64\u5904\u52a1\u5fc5\u6309\u7167\u8be5\u65b9\u6cd5\u4e66\u5199\u3002 def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm ) \u7f16\u5199\u56fe\u7247\u5904\u7406\u51fd\u6570\uff08\u51fd\u6570\u540d\u79f0\u4e0d\u9650\uff09\uff0c\u8fd4\u56denp.array \u683c\u5f0f\u7684\u56fe\u7247\u6570\u636e\uff0c\u51fd\u6570\u5fc5\u987b\u5305\u542b2\u4e2a\u53c2\u6570\uff1a \u56fe\u7247\u8def\u5f84 \u5f52\u4e00\u5316\u6807\u8bb0\uff08norm=True\uff09 \u5f52\u4e00\u5316\u6807\u8bb0\u662f\u4e3a\u4e86\u533a\u5206\u7f51\u7edc\u6a21\u578b\u662f\u5426\u662f\u6d6e\u70b9\u6a21\u578b, \u8d4b\u503c\u4e3aTrue\u5373\u53ef\uff0c\u540e\u7ee7\u8f6c\u6362\u4ee5\u53ca\u9a8c\u8bc1\u8fc7\u7a0b\u4e2d\u5747\u65e0\u9700\u8fdb\u884c\u4efb\u4f55\u4fee\u6539\u64cd\u4f5c\u3002 (\u56e0\u4e3a\u5728\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u9636\u6bb5\uff0c\u56fe\u7247\u7684\u5f52\u4e00\u5316\u9700\u8981\u5728\u9001\u8fdb\u7f51\u7edc\u524d\u5904\u7406\u597d\u3002\u4f46\u662f\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u548c\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u5df2\u7ecf\u5305\u542b\u4e86input_config.ini\u6587\u4ef6\u7684\u8bbe\u7f6e\u4fe1\u606f\uff0c\u80fd\u591f\u5c06\u56fe\u7247\u6570\u636e\u81ea\u884c\u505a\u5f52\u4e00\u5316\u5904\u7406\uff0c\u56e0\u6b64\u9001\u8fdb\u7f51\u7edc\u6a21\u578b\u7684\u6570\u636e\u4e0d\u9700\u8981\u505a\u5f52\u4e00\u5316\uff0c\u8fd9\u4e0e\u5728SigmaStar\u786c\u4ef6\u4e0a\u5904\u7406\u65b9\u5f0f\u76f8\u540c\u3002) (3) \u66f4\u8be6\u7ec6\u7684\u56fe\u7247\u524d\u5904\u7406\u51fd\u6570\u793a\u4f8b\uff0c\u8bf7\u53c2\u8003 \u9644\u5f55 \u524d\u5904\u7406\u548c\u914d\u7f6e\u6587\u4ef6\u6ce8\u610f\u8981\u70b9 \uff0c\u5c06\u63d0\u4f9b\u51e0\u4e0b\u51e0\u79cd\u8f93\u5165\u683c\u5f0f\u7684\u6a21\u578b\u524d\u5904\u7406\u793a\u4f8b\uff1a \u2460 training_input_formats\u548cinput_formats\u5747\u4e3aRGB\u6216\u8005\u5747\u4e3aBGR\u7684\u6a21\u578b\u524d\u5904\u7406 \u2461 training_input_formats\u4e3aGRAY\u548cinput_formats\u4e3aGRAY\u7684\u6a21\u578b\u524d\u5904\u7406 \u2462 training_input_formats\u4e3aRGB\u6216BGR\u6216GRAY\u548cinput_formats\u4e3aYUV_NV12\u7684\u6a21\u578b\u524d\u5904\u7406 \u2463 training_input_formats\u548cinput_formats\u5747\u4e3aRAWDATA_S16_NHWC\u6216\u8005\u5747\u4e3aRAWDATA_F32_NHWC\u7684\u6a21\u578b\u524d\u5904\u7406 3.4. calibrator_custom.calibrator\u7b80\u4ecb \u00b6 (1) calibrator_custom.calibrator\u662f\u57fa\u4e8ePython\u7684\u5feb\u901f\u91cf\u5316\u548c\u8f6c\u6362\u6a21\u578b\u7684\u6a21\u5757\u3002\u4f7f\u7528calibrator_custom.calibrator\u53ef\u4ee5\u66f4\u65b9\u4fbf\u7075\u6d3b\u7684\u5bf9\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u8fdb\u884c\u91cf\u5316\u548c\u8f6c\u6362\u3002 (2) \u76ee\u524d\u57fa\u4e8e\u7684docker\u73af\u5883\uff0c\u63d0\u4f9bPython3.7\u7684\u9884\u7f16\u8bd1\u7684Python\u6a21\u5757\u3002 (3) \u4f7f\u7528 calibrator_custom.calibrator \u65f6\uff0c\u9700\u8981\u7ed9\u5b9afloat.sim\u6a21\u578b\u7684\u8def\u5f84\u548c\u5bf9\u5e94\u7684input_config.ini\u7684\u8def\u5f84\uff0c\u7528\u4e8e\u521b\u5efacalibrator\u7684\u5b9e\u4f8b\u3002\u53c2\u6570\u7ed9\u5b9a\u9519\u8bef\uff0c\u5c06\u65e0\u6cd5\u6210\u529f\u521b\u5efacalibrator\u5b9e\u4f8b\uff0c\u5e76\u8fd4\u56deValueError\u3002\u4f7f\u7528\u65b9\u6cd5\u548c\u76f8\u5173API\u63a5\u53e3\u5982\u4e0b\uff1a import calibrator_custom model_path = './mobilenet_v2_float.sim' input_config_path = './input_config.ini' model = calibrator_custom . calibrator ( model_path , input_config_path ) \u5177\u4f53\u7684\u51fd\u6570\u65b9\u6cd5\u8bf7\u53c2\u8003 calibrator_custom.calibrator\u65b9\u6cd5 \u3002 (4) \u5bf9\u4e8e\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u540c\u65f6\u8f6c\u6362\u65f6\uff0c\u63d0\u4f9bcalibrator_custom.SIM_Calibrator\uff0ccalibrator_custom.SIM_Calibrator\u662f\u5df2\u7ecf\u5b9e\u73b0\u597d\u7684class\uff0c\u5f53\u4e2d\u53ea\u6709forward\u65b9\u6cd5\u672a\u5b9e\u73b0\uff0c\u4f7f\u7528\u65f6\u4ec5\u9700\u5b9e\u73b0\u8be5\u65b9\u6cd5\uff0c\u5373\u53ef\u8f6c\u6362\u5b8c\u6210\u3002\u8be6\u60c5\u8bf7\u53c2\u8003 calibrator_custom.SIM_Calibrator \u3002 Note \u81ea\u5b9e\u73b0calibrator\u7684demo\uff0c\u53ef\u53c2\u8003 \u7279\u6b8a\u6a21\u578b\u8f6c\u6362\u8981\u70b9 \u4e2d\u7684\u5206\u6bb5\u7f51\u7edc\u7ae0\u8282\u76f8\u5173\u8bf4\u660e\u3002 3.4.1 calibrator_custom.calibrator\u65b9\u6cd5 \u00b6 (1) get_input_details : \u8fd4\u56de\u7f51\u7edc\u6a21\u578b\u4fe1\u606f \u4f7f\u7528 get_input_details \u53ef\u4ee5\u5f97\u5230\u7f51\u7edc\u6a21\u578b\u8be6\u7ec6\u4fe1\u606f, \u4ee5list\u5f62\u5f0f\u8fd4\u56de\u7ed3\u679c\u3002 \u2460 \u83b7\u53d6\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u4fe1\u606flist input_details = model . get_input_details () >>> print ( input_details ) [{ 'index' : 0 , 'shape' : array ([ 1 , 513 , 513 , 3 ], dtype = int32 ), 'name' : 'sub_7' , 'dtype' : < class ' numpy . float32 '>}] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578b\u8f93\u5165\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a index : \u8f93\u5165Tensor\u5e8f\u53f7 name : \u8f93\u5165Tensor\u540d\u79f0 shape : \u8f93\u5165Tensor\u7684\u5f62\u72b6 dtype : \u8f93\u5165Tensor\u7684\u6570\u636e\u7c7b\u578b \u2461 \u83b7\u53d6\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u4fe1\u606flist output_details = model . get_output_details () >>> print ( output_details ) [{ 'index' : 0 , 'shape' : array ([ 1 , 257 , 257 , 30 ], dtype = int32 ), 'name' : 'MobilenetV2/Conv/Conv2D' , 'dtype' : < class ' numpy . float32 '>}] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578b\u8f93\u51fa\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a index : \u8f93\u51faTensor\u5e8f\u53f7 name : \u8f93\u51faTensor\u540d\u79f0 shape : \u8f93\u51faTensor\u7684\u5f62\u72b6 dtype : \u8f93\u51faTensor\u7684\u6570\u636e\u7c7b\u578b (2) set_input : \u8bbe\u7f6e\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u6570\u636e model . set_input ( 0 , img_data ) \u4f7f\u7528\u987b\u77e5 0\u4e3a\u8f93\u5165Tensor\u7684index; \u8f93\u5165\u6570\u636e\u53ef\u4ee5\u5728get_input_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230; img_data\u662f\u4e0emodel\u8f93\u5165shape\u548cdtype\u76f8\u540c\u7684numpy.ndarray\u683c\u5f0f\u6570\u636e\uff0c\u9519\u8bef\u7684shape\u6216dtype\uff0c\u5c06\u5bfc\u81f4set_input\u8fd4\u56deValueError; \u5982\u679c\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u53ef\u4ee5\u591a\u6b21\u8c03\u7528set_input\uff0c\u6839\u636eget_input_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230index\u8bbe\u7f6e\u5bf9\u5e94Tensor\u7684\u8f93\u5165\u6570\u636e\u3002 (3) invoke : \u6a21\u578b\u8fd0\u884c\u4e00\u6b21 model . invoke () \u4f7f\u7528\u987b\u77e5 \u8c03\u7528invoke\u524d\u8bf7\u5148\u4f7f\u7528set_input\u8bbe\u7f6e\u8f93\u5165\u6570\u636e\uff0c\u672a\u8c03\u7528set_input\u76f4\u63a5\u8c03\u7528invoke\u4f1a\u8fd4\u56deValueError\u3002 (4) get_output : \u83b7\u53d6\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u6570\u636e result = model . get_output ( 0 ) \u4f7f\u7528\u987b\u77e5 0\u4e3a\u8f93\u51faTensor\u7684index; \u8f93\u51fa\u6570\u636e\u53ef\u4ee5\u5728get_output_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230\uff0c\u8fd4\u56denumpy.ndarray\u683c\u5f0f\u8f93\u51fa\u6570\u636e\u3002 \u5982\u679c\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u51fa\uff0c\u53ef\u4ee5\u591a\u6b21\u8c03\u7528get_output\uff0c\u6839\u636eget_output_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230index\u83b7\u53d6\u5bf9\u5e94Tensor\u7684\u8f93\u51fa\u6570\u636e\u3002 (5) get_tensor_details : \u8fd4\u56de\u7f51\u7edc\u6a21\u578b\u6bcf\u4e2aTensor\u7684\u4fe1\u606f\uff08list\uff09 tensor_details = model . get_tensor_details () >>> print ( tensor_details ) [{ 'dtype' : 'FLOAT32' , 'name' : 'MobilenetV2/Conv/Conv2D' , 'qtype' : 'INT16' , 'shape' : array ([ 1 , 257 , 257 , 30 ], dtype = int32 )}, { 'dtype' : 'FLOAT32' , 'name' : 'MobilenetV2/Conv/Conv2D_bias' , 'qtype' : 'INT16' , 'shape' : array ([ 2 , 30 ], dtype = int32 )}, { 'dtype' : 'FLOAT32' , 'name' : 'MobilenetV2/Conv/weights/read' , 'qtype' : 'INT8' , 'shape' : array ([ 30 , 3 , 3 , 3 ], dtype = int32 )}, { 'dtype' : 'FLOAT32' , 'name' : 'sub_7' , 'qtype' : 'UINT8' , 'shape' : array ([ 1 , 513 , 513 , 3 ], dtype = int32 )}] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578bTensor\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a name : Tensor\u540d\u79f0 shape : Tensor\u7684\u5f62\u72b6 dtype : Tensor\u7684\u6570\u636e\u7c7b\u578b qtype : \u5b9a\u70b9\u6a21\u578b\u8be5Tensor\u53ef\u80fd\u7684\u6570\u636e\u7c7b\u578b\uff08quantization type\uff09 3.4.2 calibrator_custom.SIM_Calibrator \u00b6 (1) calibrator_custom.SIM_Calibrator\u7b80\u4ecb \u5bf9\u4e8e\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u540c\u65f6\u8f6c\u6362\u65f6\uff0c\u63d0\u4f9bcalibrator_custom.SIM_Calibrator\uff0c\u65b9\u4fbf\u8fdb\u884c\u7b80\u5355\u5b9a\u4e49\u540e\uff0c\u7edf\u4e00\u8f6c\u6362\u3002calibrator_custom.SIM_Calibrator\u662f\u5df2\u7ecf\u5b9e\u73b0\u597d\u7684class\uff0c\u5f53\u4e2d\u53ea\u6709forward\u65b9\u6cd5\u672a\u5b9e\u73b0\uff0c\u4f7f\u7528\u65f6\u4ec5\u9700\u5b9e\u73b0\u8be5\u65b9\u6cd5\uff0c\u5373\u53ef\u8f6c\u6362\u5b8c\u6210\u3002 (2) calibrator_custom.SIM_Calibrator\u4f7f\u7528\u65b9\u6cd5 \u4e0b\u9762\u4ee5 SGS_IPU_SDK/Scripts/examples/sim_calibrator.py \u4e3a\u4f8b\uff0c\u8bf4\u660ecalibrator_custom.SIM_Calibrator\u7684\u4f7f\u7528\u65b9\u6cd5\uff1a \u2460 \u5b9a\u4e49forward\u65b9\u6cd5\uff1a import calibrator_custom class Net ( calibrator_custom . SIM_Calibrator ): def __init__ ( self ): super () . __init__ () self . model = calibrator_custom . calibrator ( model_path , input_config ) def forward ( self , x ): out_details = self . model . get_output_details () self . model . set_input ( 0 , x ) self . model . invoke () result_list = [] for idx in range ( len ( out_details )): result = self . model . get_output ( idx ) result_list . append ( result ) return result_list \u4f7f\u7528\u987b\u77e5 forward\u7684\u53c2\u6570\u4e3a\u6a21\u578b\u8f93\u5165\uff0c\u5982\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u53ef\u589e\u52a0forward\u7684\u53c2\u6570\u3002 \u2461 \u521b\u5efacalibrator_custom.SIM_Calibrator\u7684\u5b9e\u4f8b: net = Net () \u2462 calibrator_custom.utils.image_preprocess_func\u4f7f\u7528\u9884\u5148\u5b9a\u4e49\u597d\u7684\u524d\u5904\u7406\u65b9\u6cd5\u83b7\u53d6img_gen\uff1a preprocess_func = calibrator_custom . utils . image_preprocess_func ( model_name ) def image_generator ( folder_path , preprocess_func ): images = [ os . path . join ( folder_path , img ) for img in os . listdir ( folder_path )] for image in images : img = preprocess_func ( image ) yield [ img ] img_gen = image_generator ( './images' , preprocess_func ) \u2463 \u8c03\u7528calibrator_custom.SIM_Calibrator\u7684convert\u65b9\u6cd5\uff1a net . convert ( img_gen , fix_model = [ out_model_path ]) \u4f7f\u7528\u987b\u77e5 convert\u65b9\u6cd5\u5fc5\u987b\u8f93\u5165\u4e24\u4e2a\u53c2\u6570\uff1a\u56fe\u7247\u751f\u6210\u5668\u3001fixed.sim\u6a21\u578b\u7684\u4fdd\u5b58\u8def\u5f84list\u3002 \u56fe\u7247\u751f\u6210\u5668(img_gen)\uff1a\u2462\u4e2d\u751f\u6210\uff0c\u4e3a\u65b9\u4fbf\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u8f6c\u6362\u6a21\u578b\uff0c\u901a\u8fc7\u751f\u6210\u5668\u65b9\u4fbf\u7ec4\u7ec7\u8f93\u5165\u56fe\u7247\u7684\u5e8f\u5217\u3002\u5982\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u751f\u6210\u5668\u5e94\u8be5\u6309\u7167\u5b9a\u4e49forward\u65f6\u7684\u8f93\u5165\u987a\u5e8f\uff0c\u8fd4\u56de\u6709\u591a\u4e2anumpy.ndarray\u7684list\u3002 fixed.sim\u6a21\u578b\u7684\u4fdd\u5b58\u8def\u5f84list: \u5982\u679c\u5728__init__\u4e2d\u5b9a\u4e49\u591a\u4e2a\u6a21\u578b\uff0cfixed\u6a21\u578b\u7684\u4fdd\u5b58\u8def\u5f84list\u5e94\u8be5\u6309\u7167__init__\u4e2d\u5b9a\u4e49\u6a21\u578b\u7684\u987a\u5e8f\uff0c\u4f9d\u6b21\u547d\u540d\u3002 convert\u65b9\u6cd5\u5176\u4ed6\u53ef\u9009\u53c2\u6570\uff1a num_process: \u8fdb\u7a0b\u6570\uff0c\u540c\u65f6\u8fd0\u884c\u7684CPU\u6570\u91cf quant_level: \u9009\u62e9\u91cf\u5316\u7b49\u7ea7\uff1a[L1, L2, L3, L4, L5]\uff0c\u9ed8\u8ba4L5\u91cf\u5316\u7b49\u7ea7\uff0c\u5177\u4f53\u542b\u4e49\u8be6\u89c1 Calibrator\u5de5\u5177\u4f7f\u7528\u53c2\u6570\u8bf4\u660e \u7684\u53ef\u9009\u53c2\u6570\u4f7f\u7528\u65b9\u6cd5\u3002 quant_param: \u91cf\u5316\u5bfc\u5165\u53c2\u6570\u3002\u5982\u679c\u5df2\u6709\u5bf9\u5e94\u6a21\u578b\u7684\u91cf\u5316\u53c2\u6570\uff0c\u53ef\u4ee5\u5c06\u91cf\u5316\u7684\u53c2\u6570\u5728\u6a21\u578b\u8f6c\u6362\u4e2d\u5bfc\u5165\u3002 3.4.3 calibrator_custom.calibrator\u5bfc\u5165\u91cf\u5316\u53c2\u6570\u89c4\u5219 \u00b6 3.4.3.1. \u7b97\u5b50\u91cf\u5316\u7b56\u7565\u548c\u65b9\u6cd5\u8bf4\u660e \u00b6 (1) Conv2D\u7684\u91cf\u5316\u65b9\u6cd5 \u2460 Conv2D\u7684\u91cf\u5316\u5206\u4e3aInputs\u3001Weights\u548cOutputs\uff0c\u76ee\u524d\u652f\u63018bit\uff0c16bit\u91cf\u5316\u3002 \u2461 \u5982\u679c\u4f7f\u75288bit\u91cf\u5316\uff0cConv2D\u7684\u8f93\u5165\u4e3aUINT8\uff08\u76f8\u5f53\u4e8eINT9\u7684\u8868\u8fbe\u80fd\u529b\uff09\uff0cWeights\u4e3aINT8\uff1b\u5982\u679c\u4f7f\u752816bit\u91cf\u5316\uff0cConv2D\u7684\u8f93\u5165\u548cWeights\u5747\u4e3aINT16\u3002 \u2462 Weights\u7684min\u548cmax\u503c\u7684\u4e2a\u6570\u7531kernel\u7684\u4e2a\u6570\u51b3\u5b9a\uff0c\u8f93\u5165\u548c\u8f93\u51fa\u7684min\u548cmax\u503c\u7684\u4e2a\u6570\u7531\u8f93\u5165\u8f93\u51fa\u7684C\u7ef4\u5ea6\u51b3\u5b9a\u3002 \u2463 \u6839\u636e\u7edf\u8ba1\u5f97\u5230\u7684Inputs\u3001Weights\u548cOutputs\u7684min\u548cmax\u503c\uff0c\u9996\u5148\u63d0\u524d\u5c06Weights\u91cf\u5316\u5230\u5b9a\u70b9\u6570\u636e\uff0c\u4fdd\u5b58\u5728fixed\u7684\u7f51\u7edc\u5185\u90e8\uff0c\u518d\u5728\u7f51\u7edc\u8fd0\u884c\u65f6\u52a8\u6001\u91cf\u5316\u8f93\u5165\u548c\u8f93\u51fa\u6570\u636e\u3002 (2) DepthwiseConv2D\u7684\u91cf\u5316\u65b9\u6cd5 \u2460 DepthwiseConv2D\u7684\u91cf\u5316\u5206\u4e3a\u8f93\u5165\u3001Weights\u548c\u8f93\u51fa\uff0c\u76ee\u524d\u652f\u63018bit\uff0c16bit\u91cf\u5316\u3002 \u2461 \u5982\u679c\u4f7f\u75288bit\u91cf\u5316\uff0cDepthwiseConv2D\u7684\u8f93\u5165\u4e3aUINT8\uff08\u76f8\u5f53\u4e8eINT9\u7684\u8868\u8fbe\u80fd\u529b\uff09\uff0cWeights\u4e3aINT8\uff1b\u5982\u679c\u4f7f\u752816bit\u91cf\u5316\uff0cDepthwiseConv2D\u7684\u8f93\u5165\u548cWeights\u5747\u4e3aINT16\u3002 \u2462 Weights\u3001\u8f93\u5165\u548c\u8f93\u51fa\u7684min\u548cmax\u503c\u7684\u4e2a\u6570\u5747\u7531\u5bf9\u5e94Tensor\u7684C\u7ef4\u5ea6\u51b3\u5b9a\u3002 \u2463 \u6839\u636e\u7edf\u8ba1\u5f97\u5230\u7684\u8f93\u5165\u3001Weights\u548c\u8f93\u51fa\u7684min\u548cmax\u503c\uff0c\u9996\u5148\u63d0\u524d\u5c06Weights\u91cf\u5316\u5230\u5b9a\u70b9\u6570\u636e\uff0c\u4fdd\u5b58\u5728fixed\u7684\u7f51\u7edc\u5185\u90e8\uff0c\u518d\u5728\u7f51\u7edc\u8fd0\u884c\u65f6\u52a8\u6001\u91cf\u5316\u8f93\u5165\u548c\u8f93\u51fa\u6570\u636e\u3002 (3) \u5176\u4ed6Op\u91cf\u5316\u65b9\u6cd5 \u2460 \u7f51\u7edc\u4e2d\u5176\u4ed6\u7b97\u5b50\u7684\u91cf\u5316min\u548cmax\u5747\u57fa\u4e8eC\u7ef4\u5ea6\u6570\u91cf\uff0c\u4ec5\u652f\u630116bit\u91cf\u5316\u3002 \u2461 \u8c03\u7528calibrator_custom.calibrator\u7684get_tensor_details\u65b9\u6cd5\u53ef\u4ee5\u4eceqtype\u4e2d\u5f97\u77e5\u8be5Tensor\u5728\u5b9a\u70b9\u6a21\u578b\u65f6\u7684data type\u3002 3.4.3.2. \u91cf\u5316\u53c2\u6570\u7684\u5185\u5bb9 \u00b6 \u57fa\u4e8e\u4e0a\u8ff0\u91cf\u5316\u7684\u7b56\u7565\u548c\u65b9\u6cd5\uff0c\u9700\u8981\u4e3aTensor\u63d0\u4f9b\u5982\u4e0b\u4fe1\u606f\uff1a 1. Tensor\u7684\u540d\u5b57\uff08name\uff09[str] 2. \u7b97\u5b50\u7c7b\u578b\u63d0\u4f9b\u5bf9\u5e94\u6570\u91cf\u7684min\uff0cmax\u3002[list] 3. \u91cf\u5316bit\u4f4d\u3002[int] 4. \u5e38\u91cfTensor\u6570\u636e\uff08data\uff09\uff08\u53ef\u9009\uff09[numpy.ndarray] \u4e0b\u8868\u5c55\u793a\u4e86\u5bf9\u5e94\u7684\u53c2\u6570\u65b9\u5f0f\uff0c\u6574\u4e2a\u53c2\u6570\u4e3alist\uff0c\u5176\u4e2d\u6bcf\u4e2aitem\u662f\u4e00\u4e2adict\uff0c\u5305\u542b\u4e0a\u8ff0\u4fe1\u606f\u3002 [ { \"name\" : \"FeatureExtractor/MobilenetV2/Conv2d_0/weights\" , \"min\" : [ - 4.555312 , - 2.876907 , - 1.234419 ], \"max\" : [ 7.364561 , 3.960804 , 6.0 ], \"bit\" : 8 }, { ... }, ... ] \u793a\u4f8bSGS_IPU_SDK/Scripts/examples/sim_calibrator.py\u4e2d\u5df2\u5b8c\u6210\u4e86\u53c2\u6570\u5bfc\u5165\uff0c\u53ef\u4ee5\u63d0\u4f9bjson\u548cpkl\u6587\u4ef6\u7684\u8bfb\u53d6\u548c\u5bfc\u5165\u3002 3.4.3.2.1 \u91cf\u5316\u6a21\u578b\u91cf\u5316\u53c2\u6570\u5bfc\u51fa\u5de5\u5177 \u00b6 \u91cf\u5316\u6a21\u578b\u91cf\u5316\u53c2\u6570\u5bfc\u51fa\u5de5\u5177\u4f4d\u7f6e SGS_IPU_SDK/Scripts/examples/save_quant_param.py \u4f7f\u7528\u793a\u4f8b\uff1a python3 save_quant_param.py \\ -m fixed.sim \\ --output_mode {JSON,Pickle} \u4f7f\u7528\u987b\u77e5 --output_mode \u53c2\u6570\u652f\u6301JSON\u6216Pickle\u683c\u5f0f\u91cf\u5316\u53c2\u6570\u6570\u636e\u7684\u5bfc\u51fa\u3002 3.4.3.3. \u5bfc\u5165\u91cf\u5316\u6570\u636e\u6d41\u7a0b \u00b6 \u4f7f\u7528\u987b\u77e5 \u2460 \u4e3a\u4e86\u517c\u5bb9\u539f\u6709\u91cf\u5316\u6d41\u7a0b\uff0c\u539f\u6709\u91cf\u5316\u6240\u91c7\u7528\u7684\u7b56\u7565\u4f9d\u7136\u8fdb\u884c\u3002 \u2461 \u83b7\u53d6Float\u6a21\u578btensor\u4fe1\u606f\uff1a\u539f\u59cb\u6a21\u578b\u5728\u8f6c\u6210SGS_Float\u6a21\u578b\u4ee5\u540e\uff0c\u4e00\u4e9b\u7b97\u5b50\u4f1a\u88ab\u5408\u5e76\u548c\u4f18\u5316\uff0c\u8ba1\u7b97\u56fe\u4e0e\u539f\u6846\u67b6\u7684\u6a21\u578b\u6709\u8f83\u5927\u5dee\u5f02\u3002\u6240\u63d0\u4f9b\u7684\u91cf\u5316\u6587\u4ef6\u5185\u5bb9\u9700\u57fa\u4e8e\u5df2\u8f6c\u6210\u7684SGS_Float\u6a21\u578b\u9488\u5bf9\u6027\u8c03\u6574\uff0c\u5982Tensor\u540d\u79f0\u7b49\u4fe1\u606f\u3002\u4e3a\u65b9\u4fbf\u4fee\u6539\u88ab\u5408\u5e76\u548c\u4f18\u5316\u7684\u5c42\uff0c\u53ef\u4ee5\u4f7f\u7528calibrator_custom.calibrator\u7684get_tensor_details\u65b9\u6cd5\u83b7\u53d6Tensor\u7684\u57fa\u672c\u4fe1\u606f\u3002\u53ef\u4ee5\u83b7\u5f97\u6bcf\u4e2aTensor\u7684name\uff0cshape\uff0cdtype\uff0cqtype\u4fe1\u606f\u3002 \u2462 \u83b7\u53d6Fixed\u6a21\u578btensor\u4fe1\u606f\uff1a\u8f6c\u6362\u597d\u7684fixed\u6a21\u578b\u53ef\u4ee5\u4f7f\u7528calibrator_custom.fixed_simulator(\u8bf7\u53c2\u8003 \u7279\u6b8a\u6a21\u578b\u8f6c\u6362\u8981\u70b9 )\u7684get_tensor_details\u65b9\u6cd5\u83b7\u53d6Tensor\u7684\u57fa\u672c\u4fe1\u606f\uff0c\u53ef\u4ee5\u83b7\u5f97\u6bcf\u4e2aTensor\u7684name\uff0cshape\uff0cmin\uff0cmax\uff0cquantization\uff0cdtype\u4fe1\u606f\u3002 \u2463 \u6839\u636e\u6a21\u578bTensor\u4fe1\u606f\uff0c\u66f4\u65b0\u539f\u59cb\u6a21\u578b\u7684\u91cf\u5316\u6587\u4ef6\u540e\uff0c\u5373\u53ef\u5bfc\u5165\u91cf\u5316\u6570\u636e\u6587\u4ef6\u3002 \u2464 \u89e3\u6790\u5b8c\u91cf\u5316\u6587\u4ef6\u540e\uff0c\u4f1a\u5339\u914d\u5df2\u6709\u91cf\u5316\u4fe1\u606f\u4e0e\u5bfc\u5165\u7684\u91cf\u5316\u4fe1\u606f\u3002\u4f18\u5148\u4f7f\u7528\u5bfc\u5165\u7684\u91cf\u5316\u4fe1\u606f\uff0c\u4f46\u4e0d\u6392\u9664\u5728\u5408\u5e76\u65f6\u7531\u4e8e\u5bfc\u5165\u4fe1\u606f\u7684\u4e0d\u5408\u7406\u800c\u653e\u5f03\u4f7f\u7528\u3002 3.5. torch_calibrator\u7b80\u4ecb \u00b6 (1) torch_calibrator\u5de5\u5177\u7684\u4f4d\u7f6e\u5728 SGS_IPU_SDK/Scripts/calibrator/torch_calibrator.py \u3002 (2) torch_calibrator\u662f\u57fa\u4e8ePytorch\u5f00\u53d1\u7684\u65b0\u4e00\u4ee3\u91cf\u5316\u5de5\u5177\uff0c\u4e0e\u65e7\u5de5\u5177\u94fe\u76f8\u6bd4\uff0c\u6709\u4ee5\u4e0b\u7279\u6027\uff1a - \u652f\u6301\u4f7f\u7528GPU\uff0c\u540c\u7b49\u7ea7\u7684\u7b97\u6cd5\u5728GPU\u73af\u5883\u4e0b\u91cf\u5316\u901f\u5ea6\u66f4\u5feb\uff08\u9700\u914d\u5408\u4f7f\u7528Nvidia\u00ae GPU Docker\uff09\uff1b - \u652f\u63014/8bit\u6df7\u5408\u91cf\u5316\u7b97\u6cd5\uff0c\u5bf9\u4e8e\u6709\u6761\u4ef6\u7684\u6a21\u578b\u57288bit\u91cf\u5316\u7684\u57fa\u7840\u4e0a\u7ee7\u7eed\u5411\u4e0b\u538b\u7f29\uff0c\u8fdb\u4e00\u6b65\u63d0\u9ad8\u8fd0\u884c\u6548\u7387\uff1b - \u652f\u6301\u66f4\u590d\u6742\u7684\u91cf\u5316\u6807\u5b9a\u7b97\u6cd5\uff0c\u91cf\u5316\u7cbe\u5ea6\u8fdb\u4e00\u6b65\u5f97\u5230\u63d0\u5347\uff0c\u5bf9\u5c0f\u6a21\u578b\uff08mobilenet\u7cfb\u5217\u3001shufflenet\u7cfb\u5217\u3001nanodet\u7cfb\u5217\u7b49\uff09\u63d0\u5347\u6548\u679c\u66f4\u4e3a\u660e\u663e\u3002 (3) torch_calibrator\u662f\u5bf93.1 calibrator\u5de5\u5177\u7684\u8865\u5145\u3002\u5f53\u6a21\u578b\u53c2\u6570\u91cf\u8f83\u5c0f\uff0c\u4f7f\u75283.1 calibrator\u5de5\u5177\u65e0\u6cd5\u8fbe\u5230\u6ee1\u610f\u7684\u7cbe\u5ea6\u65f6\uff1b\u6216\u8005\u6a21\u578b\u53c2\u6570\u91cf\u8f83\u5927\uff0c\u671f\u5f85\u4f7f\u75284bit\u91cf\u5316\u51cf\u5c0f\u6a21\u578b\u5927\u5c0f\uff0c\u53ef\u4ee5\u4f7f\u7528torch_calibrator\u5de5\u5177\u3002 3.5.1. torch_calibrator\u5de5\u5177\u4f7f\u7528\u8bf4\u660e \u00b6 (1) \u5de5\u5177\u4f7f\u7528\u793a\u4f8b python3 torch_calibrator.py \\ -i ilsvrc2012_calibration_set100 \\ -m caffe_mobilenet_v2_float.sim \\ --input_config input_config.ini \\ --quant_config quant_config.yaml \\ -n caffe_mobilenet_v2.py \\ -q Q2 (2) \u5de5\u5177\u4f7f\u7528\u53c2\u6570\u8bf4\u660e \u2460 \u5fc5\u9009\u53c2\u6570 -i , --image : \u6807\u5b9a\u6570\u636e\u96c6\u56fe\u50cf\u8def\u5f84\uff0c100\u5f20\u8bad\u7ec3\u56fe\u7247\u3002 -m , --model : \u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\u3002 --quant_config : \u91cf\u5316\u53c2\u6570(yaml\u683c\u5f0f)\u6587\u4ef6\u8def\u5f84\uff0c\u540e\u9762\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\u8be5\u6587\u4ef6\u7684\u914d\u7f6e\u65b9\u6cd5\u548c\u7528\u9014\u3002 -n , --preprocess : \u6a21\u578b\u9884\u5904\u7406\u6587\u4ef6\uff08py\u6587\u4ef6\uff09\u8def\u5f84\u3002 -q , --q_mode : \u91cf\u5316\u9009\u9879\uff0c\u540e\u9762\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\u3002 \u2461 \u53ef\u9009\u53c2\u6570 -o , --ouptut : \u6a21\u578b\u8f93\u51fa\u8def\u5f84\u3002\u6307\u5b9a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u4f4d\u7f6e\uff1a\u6307\u5b9a\u5230\u6587\u4ef6\u5939\uff0c\u5c06\u81ea\u52a8\u4ee5\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u524d\u7f00\u547d\u540d\uff0c\u540e\u63a5fixed.sim\uff1b\u6307\u5b9a\u5230\u5177\u4f53\u8def\u5f84\u548c\u6587\u4ef6\u540d\uff0c\u5c06\u4ee5\u6307\u5b9a\u8def\u5f84\u548c\u6587\u4ef6\u540d\u547d\u540d\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff1b\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\uff0c\u5c06\u4ee5\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u50a8\u5b58\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u3002 --cal_batchsize : \u6807\u5b9a\u6570\u636e\u96c6\u7684batchsize\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u7b49\u4e8e\u6570\u636e\u96c6\u4e2a\u6570\uff1b\u5982\u679c\u6807\u5b9a\u6570\u636e\u96c6\u5341\u5206\u5e9e\u5927\u6216\u6a21\u578b\u7ed3\u6784\u7279\u6b8a\u65e0\u6cd5\u5728batchsize != 1\u7684\u60c5\u51b5\u4e0b\u63a8\u7406\uff0c\u5219\u53ef\u4ee5\u8bbe\u7f6e\u8fd9\u4e2a\u53c2\u6570\u3002\u9ed8\u8ba4\u4e3a100\u3002 3.5.2. torch_calibrator\u91cf\u5316\u9009\u9879 \u00b6 \u91cf\u5316\u7b49\u7ea7 \u91cf\u5316\u7279\u8272\u8bf4\u660e \u91cf\u5316\u5b50\u9009\u9879 \u8be6\u7ec6\u8bf4\u660e Q1 \u4ec5\u505amin\u548cmax\u7684\u6807\u5b9a\uff0c\u4e0d\u4f1a\u4f18\u5316\u5377\u79ef\u53c2\u6570\uff0c\u901f\u5ea6\u6574\u4f53\u8f83\u5feb\uff0c\u9002\u7528\u4e8e\u6ca1\u6709GPU\u7684\u73af\u5883\uff0c\u5982\u679c\u6709GPU\u5219\u53ef\u4ee5\u52a0\u5feb\u6807\u5b9a\u901f\u5ea6\uff1b\u7cbe\u5ea6\u65b9\u9762\u6574\u4f53\u6301\u5e733.1 calibrator\u91cf\u5316\u7684\u7cbe\u5ea6\uff1b Q10 \u516816bit\u91cf\u5316\uff0c\u91cf\u5316\u7cbe\u5ea6\u4e0efloat32\u6a21\u578b\u57fa\u672c\u4e00\u81f4 Q1/Q11 \u51688bit\u5feb\u901f\u91cf\u5316\uff0c\u91cf\u5316\u7cbe\u5ea6\u4e0eL2\u6a21\u5f0f\u76f8\u5f53 Q12 \u81ea\u9002\u5e948bit\u548c16bit\u91cf\u5316\uff0c\u91cf\u5316\u7cbe\u5ea6\u4e0eL5\u6a21\u5f0f\u76f8\u5f53 Q13 4/8bit(8/16bit \u53ef\u6839\u636e\u914d\u7f6e\u6587\u4ef6\u66f4\u6539\uff0c\u9ed8\u8ba44/8bit)\u6df7\u5408\u91cf\u5316\uff0c\u5bf9\u4e8e\u6709\u8fdb\u4e00\u6b65\u538b\u7f29\u9700\u6c42\u7684\u6a21\u578b\u53ef\u4ee5\u9009\u7528\u6b64\u65b9\u5f0f\u3002 Q2 \u91cf\u5316\u7b49\u7ea7\u4f1a\u5bf9\u6a21\u578b\u8fdb\u884c\u9010\u5c42\u4f18\u5316\uff0c\u4f4ebit\u60c5\u51b5\u4e0b\u7cbe\u5ea6\u63d0\u5347\u660e\u663e\uff0c\u5728\u8f7b\u91cf\u7ea7\u6a21\u578b\u6548\u679c\u66f4\u4e3a\u663e\u8457\uff0c\u9002\u7528\u4e8e\u6709\u5355\u5757GPU\u7684\u73af\u5883\uff1b\u7cbe\u5ea6\u4e0a\u6574\u4f53\u4f18\u4e8eQ1 Q20 \u516816bit\u91cf\u5316\uff0c\u91cf\u5316\u7cbe\u5ea6\u4e0efloat32\u6a21\u578b\u57fa\u672c\u4e00\u81f4 Q21 \u51688bit\u91cf\u5316\uff0c\u5728\u4e00\u4e9b\u5c0f\u6a21\u578b\u4e0a\u80fd\u591f\u83b7\u5f97\u66f4\u597d\u7684\u6548\u679c Q2/Q22 \u81ea\u9002\u5e94\u9009\u62e9\u91cf\u5316\u65b9\u5f0f\uff0c\u662f\u76ee\u524d\u6548\u679c\u6700\u597d\u7684\u91cf\u5316\u65b9\u5f0f\uff0c\u751f\u6210\u7684\u5b9a\u70b9\u6a21\u578b\u4e3a\u51688bit\u91cf\u5316\u6216\u63a5\u8fd1\u51688\u76848/16\u6df7\u5408\u91cf\u5316\u3002 Q23 4/8bit\uff088/16bit \u53ef\u6839\u636e\u914d\u7f6e\u6587\u4ef6\u66f4\u6539\uff0c\u9ed8\u8ba44/8bit\uff09\u6df7\u5408\u91cf\u5316\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u538b\u7f29\u6a21\u578b\uff0c\u538b\u7f29\u7a0b\u5ea6\u548c\u7cbe\u5ea6\u5747\u4f18\u4e8eQ13 3.5.3. torch_calibrator\u91cf\u5316\u53c2\u6570(yaml\u683c\u5f0f)\u6587\u4ef6 \u00b6 (1) \u6587\u4ef6\u5185\u5bb9\u5c55\u793a QUANT_CONFIG : retrain_iter_num : 40 device : 'cuda:0' mixed_precisions : [ 4 , 8 ] use_preset_min_max_bit : 0 mp_rate : 0.6 PRESET_MIN_MAX_BIT : # preset tensor min/max and bit [ { name : \"126\" , min : null , max : null , bit : 8 }, { name : \"layer1.0.conv1.weight\" , min : null , max : null , bit : 8 } ] (2) \u6587\u4ef6\u5185\u5bb9\u8bf4\u660e retrain_iter_num\uff1a\u6bcf\u5c42\u91cd\u8bad\u7ec3\u8fed\u4ee3\u6b21\u6570 \u5982\u679c\u8be5\u9879\u4e0d\u5199\u5219\u9ed8\u8ba4\u4e3a40\uff0c\u90e8\u5206\u8f7b\u91cf\u7ea7\u6a21\u578b\u53ef\u80fd\u9700\u8981\u66f4\u591a\u7684\u8fed\u4ee3\u6b21\u6570\u3002 device\uff1a\u6307\u5b9aGPU/CPU \u5982\u679c\u4e0d\u7ed9\u5219\u4f1a\u81ea\u52a8\u5bfb\u627e\u7a7a\u95f2\u7684GPU\u3002\u82e5\u65e0GPU\u5219\u4f1a\u81ea\u52a8\u8c03\u7528CPU\u3002 \u82e5\u6307\u5b9acpu\u8fd0\u7b97\uff0c\u586b\u5199\u4e3a'cpu'\u5373\u53ef\u3002 use_preset_min_max_bit\uff1a\u662f\u5426\u4f7f\u7528\u624b\u5de5\u9884\u8bbe\u7684min/max/bit\u4fe1\u606f \u5982\u679c\u8be5\u9879\u4e3a1\uff0c\u5219\u4f1a\u4f7f\u7528\u4e0b\u65b9\u624b\u52a8\u8bbe\u7f6e\u7684\u4fe1\u606f\uff1b\u5982\u679c\u8be5\u9879\u4e3a0\u6216\u4e0d\u5199\uff0c\u5219\u4e0d\u4f1a\u4f7f\u7528\u4e0b\u65b9\u7684\u4fe1\u606f\u3002 mixed_precisions: \u6df7\u5408\u91cf\u5316\u6a21\u5f0f \u53ef\u9009[4, 8]\uff0c[8, 16]\u3002\u5982\u679c\u4e0d\u586b\uff0c\u9ed8\u8ba4\u662f[4, 8]\u3002\u4ec5\u5728Q13\u3001Q23\u7684\u6a21\u5f0f\u751f\u6548\u3002 mp_rate\uff1a\u6df7\u5408\u91cf\u5316\u6307\u5b9a\u7684\u538b\u7f29\u7387 \u5982\u672a\u6307\u5b9a\u6216\u4e0d\u5728[0.5, 1]\u7684\u8303\u56f4\u5185\uff0c\u5219\u4f1a\u81ea\u52a8\u63a8\u8350\u4e00\u4e2a\u538b\u7f29\u7387\u3002\u8be5\u53c2\u6570\u4f1a\u914d\u5408 mixed_precisions \uff0c\u751f\u62104/8bit\u62168/16bit\u7684\u6a21\u578b\u3002\u4ec5\u5728Q13\u3001Q23\u7684\u6a21\u5f0f\u4e0b\u751f\u6548\u3002 \u5982\u679c\u81ea\u52a8\u63a8\u8350\u7684\u538b\u7f29\u7387\u6ee1\u8db3\u7cbe\u5ea6\u8981\u6c42\uff0c\u53ef\u901a\u8fc7\u4ee50.05\u6b65\u957f\u4e0b\u8c03\u538b\u7f29\u7387\uff0c\u6ee1\u8db3\u7cbe\u5ea6\u8981\u6c42\u7684\u540c\u65f6\u63d0\u5347\u6a21\u578b\u6027\u80fd\u3002 \u5982\u679c\u81ea\u52a8\u63a8\u8350\u7684\u538b\u7f29\u7387\u4e0d\u6ee1\u8db3\u7cbe\u5ea6\u8981\u6c42\uff0c\u53ef\u901a\u8fc7\u4ee50.05\u6b65\u957f\u4e0a\u8c03\u538b\u7f29\u7387\uff0c\u63d0\u5347\u6a21\u578b\u91cf\u5316\u7cbe\u5ea6\u3002 PRESET_MIN_MAX_BIT\uff1a\u53ef\u4ee5\u9884\u8bbe\u67d0\u4e2aTensor\u7684min/max/bit\u4fe1\u606f \u8be6\u89c1 \u91cf\u5316\u7b56\u7565\u548c\u65b9\u6cd5 \uff0cTensor\u540d\u5b57\u4ee5float.sim\u6a21\u578b\u4e2d\u4e3a\u51c6\u3002\u9700\u8981\u5c06 use_preset_min_max_bit \u8bbe\u4e3a1\u3002","title":"3.  Calibrator"},{"location":"module/User_Guide/IPU230/Calibrate.html#31-calibrator","text":"CalibratorTool \u8bf4\u660e \u5de5\u5177\u4f4d\u7f6e SGS_IPU_SDK/Scripts/calibrator/calibrator.py \u5de5\u5177\u4f5c\u7528 \u5c06SigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u4e3aSigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b \u4f7f\u7528\u987b\u77e5 \u2460 Calibrator\u5de5\u5177\u53ef\u4ee5\u652f\u6301\u591a\u6570\u6a21\u578b\u7684\u8f6c\u6362\uff0c\u5c11\u90e8\u5206\u6a21\u578b\u5982\u5206\u6bb5\u7f51\u7edcfaste-rcnn\u9700\u81ea\u884c\u5b9e\u73b0Calibrator \u2460 \u666e\u901a\u6a21\u578b\u8f6c\u6362 Calitor \u2461 Calibrator\u81ea\u5b9e\u73b0(faste-rcnn) calibrator_custom.calibrator \u2462 \u6a21\u578b\u53c2\u6570\u91cf\u8f83\u5c0fcalibrator\u5de5\u5177\u65e0\u6cd5\u8fbe\u5230\u6ee1\u610f\u7684\u7cbe\u5ea6\u65f6 torch_calibrator \u2463 \u6a21\u578b\u53c2\u6570\u91cf\u8f83\u5927\u671f\u5f85\u4f7f\u75284bit\u91cf\u5316\u51cf\u5c0f\u6a21\u578b\u5927\u5c0f torch_calibrator \u2461 \u6a21\u578b\u91cf\u5316\u7cbe\u5ea6\u987b\u77e5 \u2460 \u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u6210\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u9700\u898130\u5f20\u5de6\u53f3\u8bad\u7ec3\u56fe\u7247\u7528\u6765\u5206\u6790\u548c\u91cf\u5316\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u7684\u6570\u636e \u2461 \u7ed9\u5b9a\u5355\u5f20\u56fe\u7247\u6587\u4ef6\uff0c\u4f9d\u7136\u53ef\u4ee5\u8f6c\u6362\u4e3a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff0c\u4f46\u662f\u5176\u6a21\u578b\u7cbe\u5ea6\u53ef\u80fd\u4f1a\u53d7\u5230\u5f71\u54cd \u2462 \u8f6c\u6362\u7f51\u7edc\u65f6\u53ef\u4ee5\u5728input_config.ini\u6587\u4ef6\u4e2d\u9488\u5bf9\u5377\u79ef\u914d\u7f6e\u4e0d\u540c\u7684\u91cf\u5316\u4fe1\u606f\uff0c\u4ece\u800c\u83b7\u5f97\u7cbe\u5ea6\u548c\u901f\u5ea6\u7684\u5e73\u8861 CONV_CONFIG \u2462 \u4f7f\u7528calibrator\u5c06\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u4e3a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u65f6\uff0c\u4f1a\u5728\u8fd0\u884c\u76ee\u5f55\u4e0b\u4ea7\u751flog\u76ee\u5f55\uff0clog\u76ee\u5f55\u4e0b\u7684tensor_min_max.txt\u6587\u4ef6\u8bb0\u5f55\u4e86\u7f51\u7edc\u7684\u6bcf\u5c42\u8f93\u5165\u548c\u8f93\u51fa\u7684\u6700\u5927\u4e0e\u6700\u5c0f\u503c\uff0c\u5c06\u5728\u4e4b\u540e\u5206\u6790\u6570\u636e\u65f6\u6709\u7528\u3002log\u76ee\u5f55\u4e0b\u7684\u5185\u5bb9\u4f1a\u5728\u4e0b\u4e00\u6b21\u4f7f\u7528calibrator\u65f6\u5220\u9664\uff0c\u8bf7\u6ce8\u610f\u4fdd\u5b58\u3002 \u4f7f\u7528\u524d\u8bf7\u5148\u5728SGS_IPU_SDK \u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK source cfg_env.sh","title":"3.1.   Calibrator\u7b80\u4ecb"},{"location":"module/User_Guide/IPU230/Calibrate.html#32-calibrator","text":"","title":"3.2.   Calibrator\u5de5\u5177\u4f7f\u7528\u8bf4\u660e"},{"location":"module/User_Guide/IPU230/Calibrate.html#321-calibrator","text":"\u8fdb\u5165\u5230\u8be5\u5de5\u5177\u76ee\u5f55\uff0c\u6267\u884c\uff1a python3 calibrator.py \\ -i ~/SGS_Models/resource/detection/coco2017_calibration_set32 \\ -m ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1_float.sim \\ -n ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1.py \\ --input_config ~/SGS_Models/tensorflow/ssd_mobilenet_v1/input_config.ini \\ --num_process 20 \u6216\u8005\u53ef\u4ee5\u4f7f\u7528\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\uff1a python3 calibrator.py \\ -i ~/SGS_Models/resource/detection/file.list \\ -m ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1_float.sim \\ -n ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1.py \\ --input_config ~/SGS_Models/tensorflow/ssd_mobilenet_v1/input_config.ini \\ --num_process 20","title":"3.2.1 Calibrator\u5de5\u5177\u4f7f\u7528\u793a\u4f8b"},{"location":"module/User_Guide/IPU230/Calibrate.html#322-calibrator","text":"(1) \u5fc5\u9009\u53c2\u6570 -i \u6216 --image : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u6240\u9700\u7684\u56fe\u7247\u6587\u4ef6\u8def\u5f84\u3002 \u4f7f\u7528\u987b\u77e5 \u652f\u6301\u4f7f\u7528\u5355\u5f20\u56fe\u7247\u8def\u5f84\u8fdb\u884c\u4f20\u53c2\uff0c\u4e5f\u652f\u6301\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\uff0c\u6216\u5b58\u50a8\u56fe\u7247\u8def\u5f84\u5217\u8868\u7684\u6587\u4ef6\u3002\u4f7f\u7528\u8def\u5f84\u5217\u8868\u5f62\u5f0f\u65f6\u53ef\u53c2\u8003\u5982\u4e0b\u65b9\u5f0f\uff1a \u7f51\u7edc\u6a21\u578b\u4e3a\u5355\u8f93\u5165\u65f6\uff1a -i ~/SGS_IPU_SDK/image_test/2007000364.jpg \u7f51\u7edc\u6a21\u578b\u4e3a\u591a\u8f93\u5165\u65f6\uff1a -i /SGS_IPU_SDK/image_test/2007000364.jpg, /SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp -m \u6216 --model \uff1a\u6307\u5b9achapter2\u4e2d\u8f6c\u6362\u51fa\u7684\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 --input_config \uff1a\u6307\u5b9ainput_config.ini\u6587\u4ef6\u8def\u5f84\u3002 \u4f7f\u7528\u987b\u77e5 \u8be5\u6587\u4ef6\u4e0e ConvertTool\u7ae0 \u4e2d\u8f6c\u6362\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6240\u7528\u6587\u4ef6\u4e3a\u540c\u4e00\u6587\u4ef6\uff0c\u5177\u4f53\u53ef\u53c2\u8003 input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e \u3002 -n \u6216 --preprocess : \u6307\u5b9a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4e0e\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\u76f8\u5173\u3002 \u4f7f\u7528\u987b\u77e5 \u591a\u8f93\u5165\u6a21\u578b\u7684\u524d\u5904\u7406\u53c2\u6570\u9700\u4f7f\u7528\u591a\u4e2a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u524d\u5904\u7406\u7684\u4e2a\u6570\u548c\u987a\u5e8f\u9700\u4e0e\u6a21\u578b\u8f93\u5165\u4e2a\u6570\u548c\u987a\u5e8f\u4fdd\u6301\u4e00\u81f4\u3002\u4f8b\u5982: -n preprocess1.py,preprocess2.py \u6216\u8005 --preprocess preprocess1.py,preprocess2.py \u4e3a\u4e86\u5728\u8f6c\u6362\u7f51\u7edc\u65f6\u5c3d\u53ef\u80fd\u51cf\u5c0f\u7cbe\u5ea6\u7684\u4e22\u5931\uff0c\u8bf7\u4f7f\u7528\u4e0e\u8bad\u7ec3\u76f8\u540c\u7684\u56fe\u7247\u524d\u5904\u7406\u65b9\u5f0f\uff0c\u6bcf\u79cd\u524d\u5904\u7406\u65b9\u5f0f\u9700\u72ec\u7acb\u7f16\u5199python\u6587\u4ef6\u3002 \u652f\u6301\u4f7f\u7528\u4ee5\u4e0b\u4e24\u79cd\u65b9\u5f0f\u6307\u5b9a\u524d\u5904\u7406\uff1a -n/--preprocess \u53c2\u6570\u4e3a\u7f16\u5199\u7684\u6587\u4ef6\u540d\u79f0\uff0c\u4e0d\u9700\u8981\u6307\u5b9a\u7f16\u5199\u6587\u4ef6\u7684\u8def\u5f84\uff1a\u8bf7\u5c06\u6587\u4ef6\u4fdd\u5b58\u5230 SGS_IPU_SDK/Scripts/calibrator/preprocess \u6587\u4ef6\u5939\u5185\uff0c\u5e76\u5728preprocess_method/ init .py \u6587\u4ef6\u4e2d\u589e\u52a0\u6587\u4ef6\u540d\u79f0\u3002 -n/--preprocess \u53c2\u6570\u4e3a\u524d\u5904\u7406Python\u7684\u6587\u4ef6\u8def\u5f84\u3002 \u524d\u5904\u7406\u6587\u4ef6\u65b9\u6cd5\u5e94\u6ce8\u610f\u4e0einput_config.ini\u4e2d\u7684[input_config]\u4fe1\u606f\u5339\u914d\uff0c\u8be6\u89c1 \u9644\u5f55 \u524d\u5904\u7406\u548c\u914d\u7f6e\u6587\u4ef6\u6ce8\u610f\u8981\u70b9 \u3002 \u53ef\u53c2\u8003\u4ee5caffe_resnet18\u7f51\u7edc\u4e3a\u4f8b\u7f16\u5199\u7684\u56fe\u7247\u524d\u5904\u7406\u6587\u4ef6\uff0c\u8be6\u89c1 \u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5 (2) \u53ef\u9009\u53c2\u6570 -o \u6216 --output : \u6307\u5b9a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u8def\u5f84\u3002 \u4f7f\u7528\u987b\u77e5 \u6307\u5b9a\u5230\u6587\u4ef6\u5939\uff0c\u5c06\u81ea\u52a8\u4ee5\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u524d\u7f00\u547d\u540d\uff0c\u540e\u63a5'fixed.sim'\uff1b \u6307\u5b9a\u5230\u5177\u4f53\u8def\u5f84\u548c\u6587\u4ef6\u540d\uff0c\u5c06\u4ee5\u6307\u5b9a\u8def\u5f84\u548c\u6587\u4ef6\u540d\u547d\u540d\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff1b \u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\uff0c\u5c06\u4ee5\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u50a8\u5b58\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u3002 --num_process : \u8fdb\u7a0b\u6570\uff0c\u540c\u65f6\u8fd0\u884c\u7684\u8fdb\u7a0b\u6570\u3002(\u4e0d\u52a0\u8be5\u53c2\u6570\u9ed8\u8ba4\u4e3a10\u4e2a\u8fdb\u7a0b)\u3002 --quant_level : \u9009\u62e9\u91cf\u5316\u7b49\u7ea7\u3002 \u4f7f\u7528\u987b\u77e5 \u53ef\u9009\u6a21\u5f0f\u6709\uff1a L1: \u91c7\u7528\u6700\u5927\u6700\u5c0f\u503c\u5feb\u901f\u5bf9\u6bd4\u6570\u636e\u91cf\u5316\uff0c\u901f\u5ea6\u8f83\u5feb\u3002 L2: \u91c7\u7528\u5feb\u901f\u5bf9\u6bd4\u6570\u636e\u91cf\u5316\u6743\u91cd\u6570\u636e\u3002 L3: \u5bf9\u7edf\u8ba1\u4fe1\u606f\u505a\u8fdb\u4e00\u6b65\u5206\u6790\uff0c\u8fd1\u4f3c\u62df\u5408\u539f\u6709\u6570\u636e\u5206\u5e03\u3002 L4: \u8fd1\u4f3c\u62df\u5408\u6743\u91cd\u6570\u636e\u5206\u5e03\uff0c\u5e76\u5efa\u8bae\u5347\u7ea7\u67d0\u4e9b\u5377\u79ef\u4e3a16bit\u91cf\u5316\u3002 L5: \u91c7\u7528\u9ad8\u7cbe\u5ea6\u6570\u636e\u5206\u6790\u65b9\u6cd5\uff0c\u6781\u5927\u9650\u5ea6\u62df\u5408\u539f\u6709\u6570\u636e\u5206\u5e03\uff0c\u5e76\u5efa\u8bae\u5347\u7ea7\u67d0\u4e9b\u5377\u79ef\u4e3a16bit\u91cf\u5316\u3002 \u9ed8\u8ba4L5\u91cf\u5316\u7b49\u7ea7\uff0c\u7b49\u7ea7\u8d8a\u9ad8\uff0c\u91cf\u5316\u7cbe\u5ea6\u8d8a\u9ad8\uff0c\u91cf\u5316\u901f\u5ea6\u4f1a\u76f8\u5e94\u53d8\u6162\u3002 \u9009\u62e9L2\u3001L3\u6216L4\u65f6\u4f1a\u6839\u636e\u7edf\u8ba1\u4fe1\u606f\u81ea\u52a8\u914d\u7f6e\u5377\u79ef\u7684\u91cf\u5316\u65b9\u5f0f\uff0c\u5982\u679c\u9700\u8981\u5f3a\u5236\u6307\u5b9a\uff0c\u6307\u5b9a\u65b9\u5f0f\u5728 Convert Tool: input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e-CONV_CONFIG \u4e2d\u6709\u8bf4\u660e(\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u5230\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u65f6\uff0c\u5377\u79ef\u91cf\u5316\u652f\u6301 UINT8 \u548c INT16 \u4e24\u79cd\u91cf\u5316\u65b9\u5f0f\u3002\u53ef\u5bf9\u67d0\u4e9b\u5377\u79ef\u5c42\u5355\u72ec\u8bbe\u7f6eINT16\u91cf\u5316\uff0c\u6216\u8005\u5bf9\u5168\u90e8\u5377\u79efINT16\u91cf\u5316\uff1b\u4e0d\u8bbe\u7f6e\u65f6\u9ed8\u8ba4\u4f7f\u7528calibrator\u7684\u63a8\u8350\u91cf\u5316\u65b9\u5f0f)\u3002","title":"3.2.2 Calibrator\u5de5\u5177\u4f7f\u7528\u53c2\u6570\u8bf4\u660e"},{"location":"module/User_Guide/IPU230/Calibrate.html#33","text":"\u4e0b\u9762\u4ee5caffe_resnet18\u7f51\u7edc\u4e3a\u4f8b\uff0c\u5bf9\u7f16\u5199\u56fe\u7247\u524d\u5904\u7406\u6587\u4ef6\u8fdb\u884c\u8bf4\u660e\uff1a (1) \u524d\u5904\u7406\u6587\u4ef6\u4f7f\u7528\u793a\u4f8b import cv2 import numpy as np def get_image ( img_path , resizeH = 224 , resizeW = 224 , resizeC = 3 , norm = True , meanB = 104.0 , meanG = 117.0 , meanR = 123.0 , std = 1.0 , rgb = False , nchw = False ): img = cv2 . imread ( img_path , flags =- 1 ) if img is None : raise FileNotFoundError ( 'No such image: {} ' . format ( img_path )) try : img_dim = img . shape [ 2 ] except IndexError : img_dim = 1 if img_dim == 4 : img = cv2 . cvtColor ( img , cv2 . COLOR_BGRA2BGR ) elif img_dim == 1 : img = cv2 . cvtColor ( img , cv2 . COLOR_GRAY2BGR ) img_float = img . astype ( 'float32' ) img_norm = cv2 . resize ( img_float , ( resizeW , resizeH ), interpolation = cv2 . INTER_LINEAR ) if norm and ( resizeC == 3 ): img_norm = ( img_norm - [ meanB , meanG , meanR ]) / std img_norm = img_norm . astype ( 'float32' ) elif norm and ( resizeC == 1 ): img_norm = ( img_norm - meanB ) / std img_norm = img_norm . astype ( 'float32' ) else : img_norm = np . round ( img_norm ) . astype ( 'uint8' ) if rgb : img_norm = cv2 . cvtColor ( img_norm , cv2 . COLOR_BGR2RGB ) if nchw : # NCHW img_norm = np . transpose ( img_norm , axes = ( 2 , 0 , 1 )) return np . expand_dims ( img_norm , 0 ) def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm ) \u4fdd\u5b58\u4e3a caffe_resnet18.py. \u4f7f\u7528\u987b\u77e5 \u5982\u679c\u60f3\u5728 -n/--preprocess \u53c2\u6570\u4e2d\u4f7f\u7528\u6587\u4ef6\u540d\u800c\u975e\u6587\u4ef6\u8def\u5f84\u7684\u65b9\u5f0f\uff0c\u9700\u8fdb\u884c\u5982\u4e0b\u64cd\u4f5c\uff1a \u5728SGS_IPU_SDK/Scripts/calibrator/preprocess_method/ init .py \u6587\u4ef6\u4e2d\u6dfb\u52a0\u521a\u521a\u7f16\u5199\u7684python\u6587\u4ef6: _all_ = [ 'caffe_mobilenet_v2' , 'caffe_resnet18' , 'caffe_resnet50_conv' , 'mobilenet_v1' ] \u5982\u679c\u4e0d\u5728SGS_IPU_SDK/Scripts/calibrator/preprocess_method/ init .py \u6587\u4ef6\u4e2d\u589e\u52a0\uff0c -n/--preprocess \u53c2\u6570\u9700\u4e3acaffe_resnet18.py\u6587\u4ef6\u8def\u5f84\uff0c\u800c\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528\u6587\u4ef6\u540d\u3002 (2) image_preprocess\u51fd\u6570\u8bf4\u660e\uff1a \u4f7f\u7528image_preprocess\u51fd\u6570\u8c03\u7528\uff0c\u6b64\u5904\u52a1\u5fc5\u6309\u7167\u8be5\u65b9\u6cd5\u4e66\u5199\u3002 def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm ) \u7f16\u5199\u56fe\u7247\u5904\u7406\u51fd\u6570\uff08\u51fd\u6570\u540d\u79f0\u4e0d\u9650\uff09\uff0c\u8fd4\u56denp.array \u683c\u5f0f\u7684\u56fe\u7247\u6570\u636e\uff0c\u51fd\u6570\u5fc5\u987b\u5305\u542b2\u4e2a\u53c2\u6570\uff1a \u56fe\u7247\u8def\u5f84 \u5f52\u4e00\u5316\u6807\u8bb0\uff08norm=True\uff09 \u5f52\u4e00\u5316\u6807\u8bb0\u662f\u4e3a\u4e86\u533a\u5206\u7f51\u7edc\u6a21\u578b\u662f\u5426\u662f\u6d6e\u70b9\u6a21\u578b, \u8d4b\u503c\u4e3aTrue\u5373\u53ef\uff0c\u540e\u7ee7\u8f6c\u6362\u4ee5\u53ca\u9a8c\u8bc1\u8fc7\u7a0b\u4e2d\u5747\u65e0\u9700\u8fdb\u884c\u4efb\u4f55\u4fee\u6539\u64cd\u4f5c\u3002 (\u56e0\u4e3a\u5728\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u9636\u6bb5\uff0c\u56fe\u7247\u7684\u5f52\u4e00\u5316\u9700\u8981\u5728\u9001\u8fdb\u7f51\u7edc\u524d\u5904\u7406\u597d\u3002\u4f46\u662f\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u548c\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u5df2\u7ecf\u5305\u542b\u4e86input_config.ini\u6587\u4ef6\u7684\u8bbe\u7f6e\u4fe1\u606f\uff0c\u80fd\u591f\u5c06\u56fe\u7247\u6570\u636e\u81ea\u884c\u505a\u5f52\u4e00\u5316\u5904\u7406\uff0c\u56e0\u6b64\u9001\u8fdb\u7f51\u7edc\u6a21\u578b\u7684\u6570\u636e\u4e0d\u9700\u8981\u505a\u5f52\u4e00\u5316\uff0c\u8fd9\u4e0e\u5728SigmaStar\u786c\u4ef6\u4e0a\u5904\u7406\u65b9\u5f0f\u76f8\u540c\u3002) (3) \u66f4\u8be6\u7ec6\u7684\u56fe\u7247\u524d\u5904\u7406\u51fd\u6570\u793a\u4f8b\uff0c\u8bf7\u53c2\u8003 \u9644\u5f55 \u524d\u5904\u7406\u548c\u914d\u7f6e\u6587\u4ef6\u6ce8\u610f\u8981\u70b9 \uff0c\u5c06\u63d0\u4f9b\u51e0\u4e0b\u51e0\u79cd\u8f93\u5165\u683c\u5f0f\u7684\u6a21\u578b\u524d\u5904\u7406\u793a\u4f8b\uff1a \u2460 training_input_formats\u548cinput_formats\u5747\u4e3aRGB\u6216\u8005\u5747\u4e3aBGR\u7684\u6a21\u578b\u524d\u5904\u7406 \u2461 training_input_formats\u4e3aGRAY\u548cinput_formats\u4e3aGRAY\u7684\u6a21\u578b\u524d\u5904\u7406 \u2462 training_input_formats\u4e3aRGB\u6216BGR\u6216GRAY\u548cinput_formats\u4e3aYUV_NV12\u7684\u6a21\u578b\u524d\u5904\u7406 \u2463 training_input_formats\u548cinput_formats\u5747\u4e3aRAWDATA_S16_NHWC\u6216\u8005\u5747\u4e3aRAWDATA_F32_NHWC\u7684\u6a21\u578b\u524d\u5904\u7406","title":"3.3. \u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5"},{"location":"module/User_Guide/IPU230/Calibrate.html#34-calibrator_customcalibrator","text":"(1) calibrator_custom.calibrator\u662f\u57fa\u4e8ePython\u7684\u5feb\u901f\u91cf\u5316\u548c\u8f6c\u6362\u6a21\u578b\u7684\u6a21\u5757\u3002\u4f7f\u7528calibrator_custom.calibrator\u53ef\u4ee5\u66f4\u65b9\u4fbf\u7075\u6d3b\u7684\u5bf9\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u8fdb\u884c\u91cf\u5316\u548c\u8f6c\u6362\u3002 (2) \u76ee\u524d\u57fa\u4e8e\u7684docker\u73af\u5883\uff0c\u63d0\u4f9bPython3.7\u7684\u9884\u7f16\u8bd1\u7684Python\u6a21\u5757\u3002 (3) \u4f7f\u7528 calibrator_custom.calibrator \u65f6\uff0c\u9700\u8981\u7ed9\u5b9afloat.sim\u6a21\u578b\u7684\u8def\u5f84\u548c\u5bf9\u5e94\u7684input_config.ini\u7684\u8def\u5f84\uff0c\u7528\u4e8e\u521b\u5efacalibrator\u7684\u5b9e\u4f8b\u3002\u53c2\u6570\u7ed9\u5b9a\u9519\u8bef\uff0c\u5c06\u65e0\u6cd5\u6210\u529f\u521b\u5efacalibrator\u5b9e\u4f8b\uff0c\u5e76\u8fd4\u56deValueError\u3002\u4f7f\u7528\u65b9\u6cd5\u548c\u76f8\u5173API\u63a5\u53e3\u5982\u4e0b\uff1a import calibrator_custom model_path = './mobilenet_v2_float.sim' input_config_path = './input_config.ini' model = calibrator_custom . calibrator ( model_path , input_config_path ) \u5177\u4f53\u7684\u51fd\u6570\u65b9\u6cd5\u8bf7\u53c2\u8003 calibrator_custom.calibrator\u65b9\u6cd5 \u3002 (4) \u5bf9\u4e8e\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u540c\u65f6\u8f6c\u6362\u65f6\uff0c\u63d0\u4f9bcalibrator_custom.SIM_Calibrator\uff0ccalibrator_custom.SIM_Calibrator\u662f\u5df2\u7ecf\u5b9e\u73b0\u597d\u7684class\uff0c\u5f53\u4e2d\u53ea\u6709forward\u65b9\u6cd5\u672a\u5b9e\u73b0\uff0c\u4f7f\u7528\u65f6\u4ec5\u9700\u5b9e\u73b0\u8be5\u65b9\u6cd5\uff0c\u5373\u53ef\u8f6c\u6362\u5b8c\u6210\u3002\u8be6\u60c5\u8bf7\u53c2\u8003 calibrator_custom.SIM_Calibrator \u3002 Note \u81ea\u5b9e\u73b0calibrator\u7684demo\uff0c\u53ef\u53c2\u8003 \u7279\u6b8a\u6a21\u578b\u8f6c\u6362\u8981\u70b9 \u4e2d\u7684\u5206\u6bb5\u7f51\u7edc\u7ae0\u8282\u76f8\u5173\u8bf4\u660e\u3002","title":"3.4.   calibrator_custom.calibrator\u7b80\u4ecb"},{"location":"module/User_Guide/IPU230/Calibrate.html#341-calibrator_customcalibrator","text":"(1) get_input_details : \u8fd4\u56de\u7f51\u7edc\u6a21\u578b\u4fe1\u606f \u4f7f\u7528 get_input_details \u53ef\u4ee5\u5f97\u5230\u7f51\u7edc\u6a21\u578b\u8be6\u7ec6\u4fe1\u606f, \u4ee5list\u5f62\u5f0f\u8fd4\u56de\u7ed3\u679c\u3002 \u2460 \u83b7\u53d6\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u4fe1\u606flist input_details = model . get_input_details () >>> print ( input_details ) [{ 'index' : 0 , 'shape' : array ([ 1 , 513 , 513 , 3 ], dtype = int32 ), 'name' : 'sub_7' , 'dtype' : < class ' numpy . float32 '>}] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578b\u8f93\u5165\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a index : \u8f93\u5165Tensor\u5e8f\u53f7 name : \u8f93\u5165Tensor\u540d\u79f0 shape : \u8f93\u5165Tensor\u7684\u5f62\u72b6 dtype : \u8f93\u5165Tensor\u7684\u6570\u636e\u7c7b\u578b \u2461 \u83b7\u53d6\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u4fe1\u606flist output_details = model . get_output_details () >>> print ( output_details ) [{ 'index' : 0 , 'shape' : array ([ 1 , 257 , 257 , 30 ], dtype = int32 ), 'name' : 'MobilenetV2/Conv/Conv2D' , 'dtype' : < class ' numpy . float32 '>}] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578b\u8f93\u51fa\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a index : \u8f93\u51faTensor\u5e8f\u53f7 name : \u8f93\u51faTensor\u540d\u79f0 shape : \u8f93\u51faTensor\u7684\u5f62\u72b6 dtype : \u8f93\u51faTensor\u7684\u6570\u636e\u7c7b\u578b (2) set_input : \u8bbe\u7f6e\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u6570\u636e model . set_input ( 0 , img_data ) \u4f7f\u7528\u987b\u77e5 0\u4e3a\u8f93\u5165Tensor\u7684index; \u8f93\u5165\u6570\u636e\u53ef\u4ee5\u5728get_input_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230; img_data\u662f\u4e0emodel\u8f93\u5165shape\u548cdtype\u76f8\u540c\u7684numpy.ndarray\u683c\u5f0f\u6570\u636e\uff0c\u9519\u8bef\u7684shape\u6216dtype\uff0c\u5c06\u5bfc\u81f4set_input\u8fd4\u56deValueError; \u5982\u679c\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u53ef\u4ee5\u591a\u6b21\u8c03\u7528set_input\uff0c\u6839\u636eget_input_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230index\u8bbe\u7f6e\u5bf9\u5e94Tensor\u7684\u8f93\u5165\u6570\u636e\u3002 (3) invoke : \u6a21\u578b\u8fd0\u884c\u4e00\u6b21 model . invoke () \u4f7f\u7528\u987b\u77e5 \u8c03\u7528invoke\u524d\u8bf7\u5148\u4f7f\u7528set_input\u8bbe\u7f6e\u8f93\u5165\u6570\u636e\uff0c\u672a\u8c03\u7528set_input\u76f4\u63a5\u8c03\u7528invoke\u4f1a\u8fd4\u56deValueError\u3002 (4) get_output : \u83b7\u53d6\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u6570\u636e result = model . get_output ( 0 ) \u4f7f\u7528\u987b\u77e5 0\u4e3a\u8f93\u51faTensor\u7684index; \u8f93\u51fa\u6570\u636e\u53ef\u4ee5\u5728get_output_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230\uff0c\u8fd4\u56denumpy.ndarray\u683c\u5f0f\u8f93\u51fa\u6570\u636e\u3002 \u5982\u679c\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u51fa\uff0c\u53ef\u4ee5\u591a\u6b21\u8c03\u7528get_output\uff0c\u6839\u636eget_output_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230index\u83b7\u53d6\u5bf9\u5e94Tensor\u7684\u8f93\u51fa\u6570\u636e\u3002 (5) get_tensor_details : \u8fd4\u56de\u7f51\u7edc\u6a21\u578b\u6bcf\u4e2aTensor\u7684\u4fe1\u606f\uff08list\uff09 tensor_details = model . get_tensor_details () >>> print ( tensor_details ) [{ 'dtype' : 'FLOAT32' , 'name' : 'MobilenetV2/Conv/Conv2D' , 'qtype' : 'INT16' , 'shape' : array ([ 1 , 257 , 257 , 30 ], dtype = int32 )}, { 'dtype' : 'FLOAT32' , 'name' : 'MobilenetV2/Conv/Conv2D_bias' , 'qtype' : 'INT16' , 'shape' : array ([ 2 , 30 ], dtype = int32 )}, { 'dtype' : 'FLOAT32' , 'name' : 'MobilenetV2/Conv/weights/read' , 'qtype' : 'INT8' , 'shape' : array ([ 30 , 3 , 3 , 3 ], dtype = int32 )}, { 'dtype' : 'FLOAT32' , 'name' : 'sub_7' , 'qtype' : 'UINT8' , 'shape' : array ([ 1 , 513 , 513 , 3 ], dtype = int32 )}] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578bTensor\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a name : Tensor\u540d\u79f0 shape : Tensor\u7684\u5f62\u72b6 dtype : Tensor\u7684\u6570\u636e\u7c7b\u578b qtype : \u5b9a\u70b9\u6a21\u578b\u8be5Tensor\u53ef\u80fd\u7684\u6570\u636e\u7c7b\u578b\uff08quantization type\uff09","title":"3.4.1 calibrator_custom.calibrator\u65b9\u6cd5"},{"location":"module/User_Guide/IPU230/Calibrate.html#342-calibrator_customsim_calibrator","text":"(1) calibrator_custom.SIM_Calibrator\u7b80\u4ecb \u5bf9\u4e8e\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u540c\u65f6\u8f6c\u6362\u65f6\uff0c\u63d0\u4f9bcalibrator_custom.SIM_Calibrator\uff0c\u65b9\u4fbf\u8fdb\u884c\u7b80\u5355\u5b9a\u4e49\u540e\uff0c\u7edf\u4e00\u8f6c\u6362\u3002calibrator_custom.SIM_Calibrator\u662f\u5df2\u7ecf\u5b9e\u73b0\u597d\u7684class\uff0c\u5f53\u4e2d\u53ea\u6709forward\u65b9\u6cd5\u672a\u5b9e\u73b0\uff0c\u4f7f\u7528\u65f6\u4ec5\u9700\u5b9e\u73b0\u8be5\u65b9\u6cd5\uff0c\u5373\u53ef\u8f6c\u6362\u5b8c\u6210\u3002 (2) calibrator_custom.SIM_Calibrator\u4f7f\u7528\u65b9\u6cd5 \u4e0b\u9762\u4ee5 SGS_IPU_SDK/Scripts/examples/sim_calibrator.py \u4e3a\u4f8b\uff0c\u8bf4\u660ecalibrator_custom.SIM_Calibrator\u7684\u4f7f\u7528\u65b9\u6cd5\uff1a \u2460 \u5b9a\u4e49forward\u65b9\u6cd5\uff1a import calibrator_custom class Net ( calibrator_custom . SIM_Calibrator ): def __init__ ( self ): super () . __init__ () self . model = calibrator_custom . calibrator ( model_path , input_config ) def forward ( self , x ): out_details = self . model . get_output_details () self . model . set_input ( 0 , x ) self . model . invoke () result_list = [] for idx in range ( len ( out_details )): result = self . model . get_output ( idx ) result_list . append ( result ) return result_list \u4f7f\u7528\u987b\u77e5 forward\u7684\u53c2\u6570\u4e3a\u6a21\u578b\u8f93\u5165\uff0c\u5982\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u53ef\u589e\u52a0forward\u7684\u53c2\u6570\u3002 \u2461 \u521b\u5efacalibrator_custom.SIM_Calibrator\u7684\u5b9e\u4f8b: net = Net () \u2462 calibrator_custom.utils.image_preprocess_func\u4f7f\u7528\u9884\u5148\u5b9a\u4e49\u597d\u7684\u524d\u5904\u7406\u65b9\u6cd5\u83b7\u53d6img_gen\uff1a preprocess_func = calibrator_custom . utils . image_preprocess_func ( model_name ) def image_generator ( folder_path , preprocess_func ): images = [ os . path . join ( folder_path , img ) for img in os . listdir ( folder_path )] for image in images : img = preprocess_func ( image ) yield [ img ] img_gen = image_generator ( './images' , preprocess_func ) \u2463 \u8c03\u7528calibrator_custom.SIM_Calibrator\u7684convert\u65b9\u6cd5\uff1a net . convert ( img_gen , fix_model = [ out_model_path ]) \u4f7f\u7528\u987b\u77e5 convert\u65b9\u6cd5\u5fc5\u987b\u8f93\u5165\u4e24\u4e2a\u53c2\u6570\uff1a\u56fe\u7247\u751f\u6210\u5668\u3001fixed.sim\u6a21\u578b\u7684\u4fdd\u5b58\u8def\u5f84list\u3002 \u56fe\u7247\u751f\u6210\u5668(img_gen)\uff1a\u2462\u4e2d\u751f\u6210\uff0c\u4e3a\u65b9\u4fbf\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u8f6c\u6362\u6a21\u578b\uff0c\u901a\u8fc7\u751f\u6210\u5668\u65b9\u4fbf\u7ec4\u7ec7\u8f93\u5165\u56fe\u7247\u7684\u5e8f\u5217\u3002\u5982\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u751f\u6210\u5668\u5e94\u8be5\u6309\u7167\u5b9a\u4e49forward\u65f6\u7684\u8f93\u5165\u987a\u5e8f\uff0c\u8fd4\u56de\u6709\u591a\u4e2anumpy.ndarray\u7684list\u3002 fixed.sim\u6a21\u578b\u7684\u4fdd\u5b58\u8def\u5f84list: \u5982\u679c\u5728__init__\u4e2d\u5b9a\u4e49\u591a\u4e2a\u6a21\u578b\uff0cfixed\u6a21\u578b\u7684\u4fdd\u5b58\u8def\u5f84list\u5e94\u8be5\u6309\u7167__init__\u4e2d\u5b9a\u4e49\u6a21\u578b\u7684\u987a\u5e8f\uff0c\u4f9d\u6b21\u547d\u540d\u3002 convert\u65b9\u6cd5\u5176\u4ed6\u53ef\u9009\u53c2\u6570\uff1a num_process: \u8fdb\u7a0b\u6570\uff0c\u540c\u65f6\u8fd0\u884c\u7684CPU\u6570\u91cf quant_level: \u9009\u62e9\u91cf\u5316\u7b49\u7ea7\uff1a[L1, L2, L3, L4, L5]\uff0c\u9ed8\u8ba4L5\u91cf\u5316\u7b49\u7ea7\uff0c\u5177\u4f53\u542b\u4e49\u8be6\u89c1 Calibrator\u5de5\u5177\u4f7f\u7528\u53c2\u6570\u8bf4\u660e \u7684\u53ef\u9009\u53c2\u6570\u4f7f\u7528\u65b9\u6cd5\u3002 quant_param: \u91cf\u5316\u5bfc\u5165\u53c2\u6570\u3002\u5982\u679c\u5df2\u6709\u5bf9\u5e94\u6a21\u578b\u7684\u91cf\u5316\u53c2\u6570\uff0c\u53ef\u4ee5\u5c06\u91cf\u5316\u7684\u53c2\u6570\u5728\u6a21\u578b\u8f6c\u6362\u4e2d\u5bfc\u5165\u3002","title":"3.4.2 calibrator_custom.SIM_Calibrator"},{"location":"module/User_Guide/IPU230/Calibrate.html#343-calibrator_customcalibrator","text":"","title":"3.4.3 calibrator_custom.calibrator\u5bfc\u5165\u91cf\u5316\u53c2\u6570\u89c4\u5219"},{"location":"module/User_Guide/IPU230/Calibrate.html#3431","text":"(1) Conv2D\u7684\u91cf\u5316\u65b9\u6cd5 \u2460 Conv2D\u7684\u91cf\u5316\u5206\u4e3aInputs\u3001Weights\u548cOutputs\uff0c\u76ee\u524d\u652f\u63018bit\uff0c16bit\u91cf\u5316\u3002 \u2461 \u5982\u679c\u4f7f\u75288bit\u91cf\u5316\uff0cConv2D\u7684\u8f93\u5165\u4e3aUINT8\uff08\u76f8\u5f53\u4e8eINT9\u7684\u8868\u8fbe\u80fd\u529b\uff09\uff0cWeights\u4e3aINT8\uff1b\u5982\u679c\u4f7f\u752816bit\u91cf\u5316\uff0cConv2D\u7684\u8f93\u5165\u548cWeights\u5747\u4e3aINT16\u3002 \u2462 Weights\u7684min\u548cmax\u503c\u7684\u4e2a\u6570\u7531kernel\u7684\u4e2a\u6570\u51b3\u5b9a\uff0c\u8f93\u5165\u548c\u8f93\u51fa\u7684min\u548cmax\u503c\u7684\u4e2a\u6570\u7531\u8f93\u5165\u8f93\u51fa\u7684C\u7ef4\u5ea6\u51b3\u5b9a\u3002 \u2463 \u6839\u636e\u7edf\u8ba1\u5f97\u5230\u7684Inputs\u3001Weights\u548cOutputs\u7684min\u548cmax\u503c\uff0c\u9996\u5148\u63d0\u524d\u5c06Weights\u91cf\u5316\u5230\u5b9a\u70b9\u6570\u636e\uff0c\u4fdd\u5b58\u5728fixed\u7684\u7f51\u7edc\u5185\u90e8\uff0c\u518d\u5728\u7f51\u7edc\u8fd0\u884c\u65f6\u52a8\u6001\u91cf\u5316\u8f93\u5165\u548c\u8f93\u51fa\u6570\u636e\u3002 (2) DepthwiseConv2D\u7684\u91cf\u5316\u65b9\u6cd5 \u2460 DepthwiseConv2D\u7684\u91cf\u5316\u5206\u4e3a\u8f93\u5165\u3001Weights\u548c\u8f93\u51fa\uff0c\u76ee\u524d\u652f\u63018bit\uff0c16bit\u91cf\u5316\u3002 \u2461 \u5982\u679c\u4f7f\u75288bit\u91cf\u5316\uff0cDepthwiseConv2D\u7684\u8f93\u5165\u4e3aUINT8\uff08\u76f8\u5f53\u4e8eINT9\u7684\u8868\u8fbe\u80fd\u529b\uff09\uff0cWeights\u4e3aINT8\uff1b\u5982\u679c\u4f7f\u752816bit\u91cf\u5316\uff0cDepthwiseConv2D\u7684\u8f93\u5165\u548cWeights\u5747\u4e3aINT16\u3002 \u2462 Weights\u3001\u8f93\u5165\u548c\u8f93\u51fa\u7684min\u548cmax\u503c\u7684\u4e2a\u6570\u5747\u7531\u5bf9\u5e94Tensor\u7684C\u7ef4\u5ea6\u51b3\u5b9a\u3002 \u2463 \u6839\u636e\u7edf\u8ba1\u5f97\u5230\u7684\u8f93\u5165\u3001Weights\u548c\u8f93\u51fa\u7684min\u548cmax\u503c\uff0c\u9996\u5148\u63d0\u524d\u5c06Weights\u91cf\u5316\u5230\u5b9a\u70b9\u6570\u636e\uff0c\u4fdd\u5b58\u5728fixed\u7684\u7f51\u7edc\u5185\u90e8\uff0c\u518d\u5728\u7f51\u7edc\u8fd0\u884c\u65f6\u52a8\u6001\u91cf\u5316\u8f93\u5165\u548c\u8f93\u51fa\u6570\u636e\u3002 (3) \u5176\u4ed6Op\u91cf\u5316\u65b9\u6cd5 \u2460 \u7f51\u7edc\u4e2d\u5176\u4ed6\u7b97\u5b50\u7684\u91cf\u5316min\u548cmax\u5747\u57fa\u4e8eC\u7ef4\u5ea6\u6570\u91cf\uff0c\u4ec5\u652f\u630116bit\u91cf\u5316\u3002 \u2461 \u8c03\u7528calibrator_custom.calibrator\u7684get_tensor_details\u65b9\u6cd5\u53ef\u4ee5\u4eceqtype\u4e2d\u5f97\u77e5\u8be5Tensor\u5728\u5b9a\u70b9\u6a21\u578b\u65f6\u7684data type\u3002","title":"3.4.3.1. \u7b97\u5b50\u91cf\u5316\u7b56\u7565\u548c\u65b9\u6cd5\u8bf4\u660e"},{"location":"module/User_Guide/IPU230/Calibrate.html#3432","text":"\u57fa\u4e8e\u4e0a\u8ff0\u91cf\u5316\u7684\u7b56\u7565\u548c\u65b9\u6cd5\uff0c\u9700\u8981\u4e3aTensor\u63d0\u4f9b\u5982\u4e0b\u4fe1\u606f\uff1a 1. Tensor\u7684\u540d\u5b57\uff08name\uff09[str] 2. \u7b97\u5b50\u7c7b\u578b\u63d0\u4f9b\u5bf9\u5e94\u6570\u91cf\u7684min\uff0cmax\u3002[list] 3. \u91cf\u5316bit\u4f4d\u3002[int] 4. \u5e38\u91cfTensor\u6570\u636e\uff08data\uff09\uff08\u53ef\u9009\uff09[numpy.ndarray] \u4e0b\u8868\u5c55\u793a\u4e86\u5bf9\u5e94\u7684\u53c2\u6570\u65b9\u5f0f\uff0c\u6574\u4e2a\u53c2\u6570\u4e3alist\uff0c\u5176\u4e2d\u6bcf\u4e2aitem\u662f\u4e00\u4e2adict\uff0c\u5305\u542b\u4e0a\u8ff0\u4fe1\u606f\u3002 [ { \"name\" : \"FeatureExtractor/MobilenetV2/Conv2d_0/weights\" , \"min\" : [ - 4.555312 , - 2.876907 , - 1.234419 ], \"max\" : [ 7.364561 , 3.960804 , 6.0 ], \"bit\" : 8 }, { ... }, ... ] \u793a\u4f8bSGS_IPU_SDK/Scripts/examples/sim_calibrator.py\u4e2d\u5df2\u5b8c\u6210\u4e86\u53c2\u6570\u5bfc\u5165\uff0c\u53ef\u4ee5\u63d0\u4f9bjson\u548cpkl\u6587\u4ef6\u7684\u8bfb\u53d6\u548c\u5bfc\u5165\u3002","title":"3.4.3.2. \u91cf\u5316\u53c2\u6570\u7684\u5185\u5bb9"},{"location":"module/User_Guide/IPU230/Calibrate.html#3433","text":"\u4f7f\u7528\u987b\u77e5 \u2460 \u4e3a\u4e86\u517c\u5bb9\u539f\u6709\u91cf\u5316\u6d41\u7a0b\uff0c\u539f\u6709\u91cf\u5316\u6240\u91c7\u7528\u7684\u7b56\u7565\u4f9d\u7136\u8fdb\u884c\u3002 \u2461 \u83b7\u53d6Float\u6a21\u578btensor\u4fe1\u606f\uff1a\u539f\u59cb\u6a21\u578b\u5728\u8f6c\u6210SGS_Float\u6a21\u578b\u4ee5\u540e\uff0c\u4e00\u4e9b\u7b97\u5b50\u4f1a\u88ab\u5408\u5e76\u548c\u4f18\u5316\uff0c\u8ba1\u7b97\u56fe\u4e0e\u539f\u6846\u67b6\u7684\u6a21\u578b\u6709\u8f83\u5927\u5dee\u5f02\u3002\u6240\u63d0\u4f9b\u7684\u91cf\u5316\u6587\u4ef6\u5185\u5bb9\u9700\u57fa\u4e8e\u5df2\u8f6c\u6210\u7684SGS_Float\u6a21\u578b\u9488\u5bf9\u6027\u8c03\u6574\uff0c\u5982Tensor\u540d\u79f0\u7b49\u4fe1\u606f\u3002\u4e3a\u65b9\u4fbf\u4fee\u6539\u88ab\u5408\u5e76\u548c\u4f18\u5316\u7684\u5c42\uff0c\u53ef\u4ee5\u4f7f\u7528calibrator_custom.calibrator\u7684get_tensor_details\u65b9\u6cd5\u83b7\u53d6Tensor\u7684\u57fa\u672c\u4fe1\u606f\u3002\u53ef\u4ee5\u83b7\u5f97\u6bcf\u4e2aTensor\u7684name\uff0cshape\uff0cdtype\uff0cqtype\u4fe1\u606f\u3002 \u2462 \u83b7\u53d6Fixed\u6a21\u578btensor\u4fe1\u606f\uff1a\u8f6c\u6362\u597d\u7684fixed\u6a21\u578b\u53ef\u4ee5\u4f7f\u7528calibrator_custom.fixed_simulator(\u8bf7\u53c2\u8003 \u7279\u6b8a\u6a21\u578b\u8f6c\u6362\u8981\u70b9 )\u7684get_tensor_details\u65b9\u6cd5\u83b7\u53d6Tensor\u7684\u57fa\u672c\u4fe1\u606f\uff0c\u53ef\u4ee5\u83b7\u5f97\u6bcf\u4e2aTensor\u7684name\uff0cshape\uff0cmin\uff0cmax\uff0cquantization\uff0cdtype\u4fe1\u606f\u3002 \u2463 \u6839\u636e\u6a21\u578bTensor\u4fe1\u606f\uff0c\u66f4\u65b0\u539f\u59cb\u6a21\u578b\u7684\u91cf\u5316\u6587\u4ef6\u540e\uff0c\u5373\u53ef\u5bfc\u5165\u91cf\u5316\u6570\u636e\u6587\u4ef6\u3002 \u2464 \u89e3\u6790\u5b8c\u91cf\u5316\u6587\u4ef6\u540e\uff0c\u4f1a\u5339\u914d\u5df2\u6709\u91cf\u5316\u4fe1\u606f\u4e0e\u5bfc\u5165\u7684\u91cf\u5316\u4fe1\u606f\u3002\u4f18\u5148\u4f7f\u7528\u5bfc\u5165\u7684\u91cf\u5316\u4fe1\u606f\uff0c\u4f46\u4e0d\u6392\u9664\u5728\u5408\u5e76\u65f6\u7531\u4e8e\u5bfc\u5165\u4fe1\u606f\u7684\u4e0d\u5408\u7406\u800c\u653e\u5f03\u4f7f\u7528\u3002","title":"3.4.3.3. \u5bfc\u5165\u91cf\u5316\u6570\u636e\u6d41\u7a0b"},{"location":"module/User_Guide/IPU230/Calibrate.html#35-torch_calibrator","text":"(1) torch_calibrator\u5de5\u5177\u7684\u4f4d\u7f6e\u5728 SGS_IPU_SDK/Scripts/calibrator/torch_calibrator.py \u3002 (2) torch_calibrator\u662f\u57fa\u4e8ePytorch\u5f00\u53d1\u7684\u65b0\u4e00\u4ee3\u91cf\u5316\u5de5\u5177\uff0c\u4e0e\u65e7\u5de5\u5177\u94fe\u76f8\u6bd4\uff0c\u6709\u4ee5\u4e0b\u7279\u6027\uff1a - \u652f\u6301\u4f7f\u7528GPU\uff0c\u540c\u7b49\u7ea7\u7684\u7b97\u6cd5\u5728GPU\u73af\u5883\u4e0b\u91cf\u5316\u901f\u5ea6\u66f4\u5feb\uff08\u9700\u914d\u5408\u4f7f\u7528Nvidia\u00ae GPU Docker\uff09\uff1b - \u652f\u63014/8bit\u6df7\u5408\u91cf\u5316\u7b97\u6cd5\uff0c\u5bf9\u4e8e\u6709\u6761\u4ef6\u7684\u6a21\u578b\u57288bit\u91cf\u5316\u7684\u57fa\u7840\u4e0a\u7ee7\u7eed\u5411\u4e0b\u538b\u7f29\uff0c\u8fdb\u4e00\u6b65\u63d0\u9ad8\u8fd0\u884c\u6548\u7387\uff1b - \u652f\u6301\u66f4\u590d\u6742\u7684\u91cf\u5316\u6807\u5b9a\u7b97\u6cd5\uff0c\u91cf\u5316\u7cbe\u5ea6\u8fdb\u4e00\u6b65\u5f97\u5230\u63d0\u5347\uff0c\u5bf9\u5c0f\u6a21\u578b\uff08mobilenet\u7cfb\u5217\u3001shufflenet\u7cfb\u5217\u3001nanodet\u7cfb\u5217\u7b49\uff09\u63d0\u5347\u6548\u679c\u66f4\u4e3a\u660e\u663e\u3002 (3) torch_calibrator\u662f\u5bf93.1 calibrator\u5de5\u5177\u7684\u8865\u5145\u3002\u5f53\u6a21\u578b\u53c2\u6570\u91cf\u8f83\u5c0f\uff0c\u4f7f\u75283.1 calibrator\u5de5\u5177\u65e0\u6cd5\u8fbe\u5230\u6ee1\u610f\u7684\u7cbe\u5ea6\u65f6\uff1b\u6216\u8005\u6a21\u578b\u53c2\u6570\u91cf\u8f83\u5927\uff0c\u671f\u5f85\u4f7f\u75284bit\u91cf\u5316\u51cf\u5c0f\u6a21\u578b\u5927\u5c0f\uff0c\u53ef\u4ee5\u4f7f\u7528torch_calibrator\u5de5\u5177\u3002","title":"3.5. torch_calibrator\u7b80\u4ecb"},{"location":"module/User_Guide/IPU230/Calibrate.html#351-torch_calibrator","text":"(1) \u5de5\u5177\u4f7f\u7528\u793a\u4f8b python3 torch_calibrator.py \\ -i ilsvrc2012_calibration_set100 \\ -m caffe_mobilenet_v2_float.sim \\ --input_config input_config.ini \\ --quant_config quant_config.yaml \\ -n caffe_mobilenet_v2.py \\ -q Q2 (2) \u5de5\u5177\u4f7f\u7528\u53c2\u6570\u8bf4\u660e \u2460 \u5fc5\u9009\u53c2\u6570 -i , --image : \u6807\u5b9a\u6570\u636e\u96c6\u56fe\u50cf\u8def\u5f84\uff0c100\u5f20\u8bad\u7ec3\u56fe\u7247\u3002 -m , --model : \u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\u3002 --quant_config : \u91cf\u5316\u53c2\u6570(yaml\u683c\u5f0f)\u6587\u4ef6\u8def\u5f84\uff0c\u540e\u9762\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\u8be5\u6587\u4ef6\u7684\u914d\u7f6e\u65b9\u6cd5\u548c\u7528\u9014\u3002 -n , --preprocess : \u6a21\u578b\u9884\u5904\u7406\u6587\u4ef6\uff08py\u6587\u4ef6\uff09\u8def\u5f84\u3002 -q , --q_mode : \u91cf\u5316\u9009\u9879\uff0c\u540e\u9762\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\u3002 \u2461 \u53ef\u9009\u53c2\u6570 -o , --ouptut : \u6a21\u578b\u8f93\u51fa\u8def\u5f84\u3002\u6307\u5b9a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u4f4d\u7f6e\uff1a\u6307\u5b9a\u5230\u6587\u4ef6\u5939\uff0c\u5c06\u81ea\u52a8\u4ee5\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u524d\u7f00\u547d\u540d\uff0c\u540e\u63a5fixed.sim\uff1b\u6307\u5b9a\u5230\u5177\u4f53\u8def\u5f84\u548c\u6587\u4ef6\u540d\uff0c\u5c06\u4ee5\u6307\u5b9a\u8def\u5f84\u548c\u6587\u4ef6\u540d\u547d\u540d\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff1b\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\uff0c\u5c06\u4ee5\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u50a8\u5b58\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u3002 --cal_batchsize : \u6807\u5b9a\u6570\u636e\u96c6\u7684batchsize\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u7b49\u4e8e\u6570\u636e\u96c6\u4e2a\u6570\uff1b\u5982\u679c\u6807\u5b9a\u6570\u636e\u96c6\u5341\u5206\u5e9e\u5927\u6216\u6a21\u578b\u7ed3\u6784\u7279\u6b8a\u65e0\u6cd5\u5728batchsize != 1\u7684\u60c5\u51b5\u4e0b\u63a8\u7406\uff0c\u5219\u53ef\u4ee5\u8bbe\u7f6e\u8fd9\u4e2a\u53c2\u6570\u3002\u9ed8\u8ba4\u4e3a100\u3002","title":"3.5.1. torch_calibrator\u5de5\u5177\u4f7f\u7528\u8bf4\u660e"},{"location":"module/User_Guide/IPU230/Calibrate.html#352-torch_calibrator","text":"\u91cf\u5316\u7b49\u7ea7 \u91cf\u5316\u7279\u8272\u8bf4\u660e \u91cf\u5316\u5b50\u9009\u9879 \u8be6\u7ec6\u8bf4\u660e Q1 \u4ec5\u505amin\u548cmax\u7684\u6807\u5b9a\uff0c\u4e0d\u4f1a\u4f18\u5316\u5377\u79ef\u53c2\u6570\uff0c\u901f\u5ea6\u6574\u4f53\u8f83\u5feb\uff0c\u9002\u7528\u4e8e\u6ca1\u6709GPU\u7684\u73af\u5883\uff0c\u5982\u679c\u6709GPU\u5219\u53ef\u4ee5\u52a0\u5feb\u6807\u5b9a\u901f\u5ea6\uff1b\u7cbe\u5ea6\u65b9\u9762\u6574\u4f53\u6301\u5e733.1 calibrator\u91cf\u5316\u7684\u7cbe\u5ea6\uff1b Q10 \u516816bit\u91cf\u5316\uff0c\u91cf\u5316\u7cbe\u5ea6\u4e0efloat32\u6a21\u578b\u57fa\u672c\u4e00\u81f4 Q1/Q11 \u51688bit\u5feb\u901f\u91cf\u5316\uff0c\u91cf\u5316\u7cbe\u5ea6\u4e0eL2\u6a21\u5f0f\u76f8\u5f53 Q12 \u81ea\u9002\u5e948bit\u548c16bit\u91cf\u5316\uff0c\u91cf\u5316\u7cbe\u5ea6\u4e0eL5\u6a21\u5f0f\u76f8\u5f53 Q13 4/8bit(8/16bit \u53ef\u6839\u636e\u914d\u7f6e\u6587\u4ef6\u66f4\u6539\uff0c\u9ed8\u8ba44/8bit)\u6df7\u5408\u91cf\u5316\uff0c\u5bf9\u4e8e\u6709\u8fdb\u4e00\u6b65\u538b\u7f29\u9700\u6c42\u7684\u6a21\u578b\u53ef\u4ee5\u9009\u7528\u6b64\u65b9\u5f0f\u3002 Q2 \u91cf\u5316\u7b49\u7ea7\u4f1a\u5bf9\u6a21\u578b\u8fdb\u884c\u9010\u5c42\u4f18\u5316\uff0c\u4f4ebit\u60c5\u51b5\u4e0b\u7cbe\u5ea6\u63d0\u5347\u660e\u663e\uff0c\u5728\u8f7b\u91cf\u7ea7\u6a21\u578b\u6548\u679c\u66f4\u4e3a\u663e\u8457\uff0c\u9002\u7528\u4e8e\u6709\u5355\u5757GPU\u7684\u73af\u5883\uff1b\u7cbe\u5ea6\u4e0a\u6574\u4f53\u4f18\u4e8eQ1 Q20 \u516816bit\u91cf\u5316\uff0c\u91cf\u5316\u7cbe\u5ea6\u4e0efloat32\u6a21\u578b\u57fa\u672c\u4e00\u81f4 Q21 \u51688bit\u91cf\u5316\uff0c\u5728\u4e00\u4e9b\u5c0f\u6a21\u578b\u4e0a\u80fd\u591f\u83b7\u5f97\u66f4\u597d\u7684\u6548\u679c Q2/Q22 \u81ea\u9002\u5e94\u9009\u62e9\u91cf\u5316\u65b9\u5f0f\uff0c\u662f\u76ee\u524d\u6548\u679c\u6700\u597d\u7684\u91cf\u5316\u65b9\u5f0f\uff0c\u751f\u6210\u7684\u5b9a\u70b9\u6a21\u578b\u4e3a\u51688bit\u91cf\u5316\u6216\u63a5\u8fd1\u51688\u76848/16\u6df7\u5408\u91cf\u5316\u3002 Q23 4/8bit\uff088/16bit \u53ef\u6839\u636e\u914d\u7f6e\u6587\u4ef6\u66f4\u6539\uff0c\u9ed8\u8ba44/8bit\uff09\u6df7\u5408\u91cf\u5316\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u538b\u7f29\u6a21\u578b\uff0c\u538b\u7f29\u7a0b\u5ea6\u548c\u7cbe\u5ea6\u5747\u4f18\u4e8eQ13","title":"3.5.2. torch_calibrator\u91cf\u5316\u9009\u9879"},{"location":"module/User_Guide/IPU230/Calibrate.html#353-torch_calibratoryaml","text":"(1) \u6587\u4ef6\u5185\u5bb9\u5c55\u793a QUANT_CONFIG : retrain_iter_num : 40 device : 'cuda:0' mixed_precisions : [ 4 , 8 ] use_preset_min_max_bit : 0 mp_rate : 0.6 PRESET_MIN_MAX_BIT : # preset tensor min/max and bit [ { name : \"126\" , min : null , max : null , bit : 8 }, { name : \"layer1.0.conv1.weight\" , min : null , max : null , bit : 8 } ] (2) \u6587\u4ef6\u5185\u5bb9\u8bf4\u660e retrain_iter_num\uff1a\u6bcf\u5c42\u91cd\u8bad\u7ec3\u8fed\u4ee3\u6b21\u6570 \u5982\u679c\u8be5\u9879\u4e0d\u5199\u5219\u9ed8\u8ba4\u4e3a40\uff0c\u90e8\u5206\u8f7b\u91cf\u7ea7\u6a21\u578b\u53ef\u80fd\u9700\u8981\u66f4\u591a\u7684\u8fed\u4ee3\u6b21\u6570\u3002 device\uff1a\u6307\u5b9aGPU/CPU \u5982\u679c\u4e0d\u7ed9\u5219\u4f1a\u81ea\u52a8\u5bfb\u627e\u7a7a\u95f2\u7684GPU\u3002\u82e5\u65e0GPU\u5219\u4f1a\u81ea\u52a8\u8c03\u7528CPU\u3002 \u82e5\u6307\u5b9acpu\u8fd0\u7b97\uff0c\u586b\u5199\u4e3a'cpu'\u5373\u53ef\u3002 use_preset_min_max_bit\uff1a\u662f\u5426\u4f7f\u7528\u624b\u5de5\u9884\u8bbe\u7684min/max/bit\u4fe1\u606f \u5982\u679c\u8be5\u9879\u4e3a1\uff0c\u5219\u4f1a\u4f7f\u7528\u4e0b\u65b9\u624b\u52a8\u8bbe\u7f6e\u7684\u4fe1\u606f\uff1b\u5982\u679c\u8be5\u9879\u4e3a0\u6216\u4e0d\u5199\uff0c\u5219\u4e0d\u4f1a\u4f7f\u7528\u4e0b\u65b9\u7684\u4fe1\u606f\u3002 mixed_precisions: \u6df7\u5408\u91cf\u5316\u6a21\u5f0f \u53ef\u9009[4, 8]\uff0c[8, 16]\u3002\u5982\u679c\u4e0d\u586b\uff0c\u9ed8\u8ba4\u662f[4, 8]\u3002\u4ec5\u5728Q13\u3001Q23\u7684\u6a21\u5f0f\u751f\u6548\u3002 mp_rate\uff1a\u6df7\u5408\u91cf\u5316\u6307\u5b9a\u7684\u538b\u7f29\u7387 \u5982\u672a\u6307\u5b9a\u6216\u4e0d\u5728[0.5, 1]\u7684\u8303\u56f4\u5185\uff0c\u5219\u4f1a\u81ea\u52a8\u63a8\u8350\u4e00\u4e2a\u538b\u7f29\u7387\u3002\u8be5\u53c2\u6570\u4f1a\u914d\u5408 mixed_precisions \uff0c\u751f\u62104/8bit\u62168/16bit\u7684\u6a21\u578b\u3002\u4ec5\u5728Q13\u3001Q23\u7684\u6a21\u5f0f\u4e0b\u751f\u6548\u3002 \u5982\u679c\u81ea\u52a8\u63a8\u8350\u7684\u538b\u7f29\u7387\u6ee1\u8db3\u7cbe\u5ea6\u8981\u6c42\uff0c\u53ef\u901a\u8fc7\u4ee50.05\u6b65\u957f\u4e0b\u8c03\u538b\u7f29\u7387\uff0c\u6ee1\u8db3\u7cbe\u5ea6\u8981\u6c42\u7684\u540c\u65f6\u63d0\u5347\u6a21\u578b\u6027\u80fd\u3002 \u5982\u679c\u81ea\u52a8\u63a8\u8350\u7684\u538b\u7f29\u7387\u4e0d\u6ee1\u8db3\u7cbe\u5ea6\u8981\u6c42\uff0c\u53ef\u901a\u8fc7\u4ee50.05\u6b65\u957f\u4e0a\u8c03\u538b\u7f29\u7387\uff0c\u63d0\u5347\u6a21\u578b\u91cf\u5316\u7cbe\u5ea6\u3002 PRESET_MIN_MAX_BIT\uff1a\u53ef\u4ee5\u9884\u8bbe\u67d0\u4e2aTensor\u7684min/max/bit\u4fe1\u606f \u8be6\u89c1 \u91cf\u5316\u7b56\u7565\u548c\u65b9\u6cd5 \uff0cTensor\u540d\u5b57\u4ee5float.sim\u6a21\u578b\u4e2d\u4e3a\u51c6\u3002\u9700\u8981\u5c06 use_preset_min_max_bit \u8bbe\u4e3a1\u3002","title":"3.5.3. torch_calibrator\u91cf\u5316\u53c2\u6570(yaml\u683c\u5f0f)\u6587\u4ef6"},{"location":"module/User_Guide/IPU230/Compile.html","text":"4.1 Compiler\u7b80\u4ecb \u00b6 CompilerTool \u8bf4\u660e \u5de5\u5177\u4f4d\u7f6e SGS_IPU_SDK/Scripts/calibrator/compiler.py \u5de5\u5177\u4f5c\u7528 \u5c06SigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u4e3aSigmaStar\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b \u4f7f\u7528\u987b\u77e5 \u2460 \u4f7f\u7528Simulator\u5de5\u5177\u8fd0\u884c\u591abatch\u79bb\u7ebf\u6a21\u578b SGS_IPU_SDK/Scripts/examples/multi_batch_simulator.py \u2461 \u4f7f\u7528MI_IPU\u7684API\u5728\u677f\u7aef\u8fd0\u884c\u591abatch\u79bb\u7ebf\u6a21\u578b alkaid/sdk/verify/mi_demo/source/dla/dla_classifyNBatch (3) \u5728SGS_IPU_SDK \u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK source cfg_env.sh 4.2 Compiler\u5de5\u5177\u4f7f\u7528\u8bf4\u660e \u00b6 4.2.1 Compiler\u5de5\u5177\u4f7f\u7528\u793a\u4f8b \u00b6 \u8fdb\u5165\u5230\u8be5\u5de5\u5177\u76ee\u5f55\uff0c\u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 compiler.py \\ -m ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_fixed.sim 4.2.2 Compiler\u5de5\u5177\u4f7f\u7528\u53c2\u6570\u8bf4\u660e \u00b6 (1) \u5fc5\u9009\u53c2\u6570 \u2460 -m , --model : Fixed\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a \u2460 -b , --batch \uff1a\u671f\u5f85\u8bbe\u5b9a\u7684Batch\u6570\uff0c\u9ed8\u8ba4\u4e3a1\u3002 \u2461 --batch_mode \uff1a\u591abatch\u6a21\u5f0f\u3002 \u4f7f\u7528\u987b\u77e5 \u53ef\u9009n_buf/one_buf\uff0c\u9ed8\u8ba4\u4e3an_buf\u6a21\u5f0f n_buf : \u6bcf\u4e2abatch\u7684\u8f93\u5165\u548c\u8f93\u51fa\u6570\u636e\u72ec\u7acbbuffer\u3002 \u9009\u62e9\u8be5\u6a21\u5f0f\u65f6\uff0c -b / --batch \u53c2\u6570\u4e3a\u671f\u5f85\u8bbe\u5b9a\u7684\u6700\u5927Batch\u6570\uff0cCompiler\u4f1a\u6839\u636e\u6700\u5927Batch\u6570\u4f18\u5316\uff0c\u751f\u6210\u7684\u79bb\u7ebf\u6a21\u578b\u53ef\u4f7f\u7528\u4efb\u610f\u5c0f\u4e8e\u6700\u5927Batch\u6570\u8fd0\u884c\u3002 one_buf : \u591a\u4e2abatch\u7684\u6570\u636e\u9700\u5728\u6700\u9ad8\u7ef4\u5ea6\u5806\u53e0\u540e\u4f7f\u7528\u4e00\u5757buffer\u3002 \u9009\u62e9\u8be5\u6a21\u5f0f\u65f6\uff0c -b / --batch \u53c2\u6570\u53ef\u6307\u5b9a\u591a\u79cd\u9700\u8981\u4f7f\u7528\u7684Batch\u6570\uff0c\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0c\u6700\u591a\u8bbe\u5b9a10\u4e2a\uff0c\u751f\u6210\u7684\u79bb\u7ebf\u6a21\u578b\u4ec5\u80fd\u4f7f\u7528\u6307\u5b9aBatch\u6570\u8fd0\u884c\u3002 \u2462 -c , --category : \u6a21\u578b\u7684\u7c7b\u522b\u3002 \u4f7f\u7528\u987b\u77e5 \u53ef\u9009Classification / Detection / Unknown\u3002 Classification : \u6a21\u578b\u67091\u4e2a\u8f93\u51fa\uff0c\u4f1a\u6839\u636e\u8f93\u51fa\u6392\u5e8f\u8f93\u51fa\u5206\u6570\u7531\u9ad8\u81f3\u4f4e\u7684\u524d5\u4e2a\u3002 Detection : \u6a21\u578b\u67094\u4e2a\u8f93\u51fa\uff0c\u4f1a\u6839\u636e\u8f93\u51fa\u8f6c\u6362\u4e3a\u8f93\u5165\u56fe\u7247\u7684bbox\u4f4d\u7f6e\u4ee5\u53ca\u7c7b\u522b\u3002\u53ea\u652f\u6301SigmaStar\u540e\u5904\u7406\u7b97\u5b50[SigmaStar\u540e\u5904\u7406\u6a21\u5757]\u3002\u5176\u4ed6\u540e\u5904\u7406\u8bf7\u4f7f\u7528Unknown\u3002 Unknown : \u6a21\u578b\u8f93\u51fa\u4e0d\u5c5e\u4e8e\u4e0a\u8ff0\u4e24\u79cd\u7c7b\u578b\uff0c\u4f1a\u8f93\u51fa\u5168\u90e8\u7684Tensor\u6570\u503c\u3002\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u5230\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u65f6\u9ed8\u8ba4\u4e3aUnknown\u3002 \u2463 -o , --output : \u6a21\u578b\u8f93\u51fa\u8def\u5f84\u3002 \u4f7f\u7528\u987b\u77e5 \u6307\u5b9a\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u6570\u636e\u4f4d\u7f6e\uff1a\u6307\u5b9a\u5230\u6587\u4ef6\u5939\uff0c\u5c06\u81ea\u52a8\u4ee5\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u524d\u7f00\u547d\u540d\uff0c\u540e\u63a5sgsimg.img\uff1b \u6307\u5b9a\u5230\u5177\u4f53\u8def\u5f84\u548c\u6587\u4ef6\u540d\uff0c\u5c06\u4ee5\u6307\u5b9a\u8def\u5f84\u548c\u6587\u4ef6\u540d\u547d\u540d\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\uff1b \u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\uff0c\u5c06\u4ee5\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u50a8\u5b58\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u3002 \u2464 --inplace_input_buf : RAWDATA_F32_NHWC \u662f\u5426\u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf. \u4f7f\u7528\u987b\u77e5 training_input_formats \u548c input_formats \u914d\u7f6e\u4e3a RAWDATA_F32_NHWC \u4e14\u4f7f\u7528 --batch_mode \u7684 one_buf \u6a21\u5f0f\u65f6\u624d\u53ef\u4ee5\u914d\u7f6e\u6b64\u53c2\u6570\u3002 \u53ef\u9009True/False\uff0c\u9ed8\u8ba4\u4e3aTrue\u3002 True : \u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf\u3002 False : \u4fdd\u7559\u539f\u59cb\u8f93\u5165buf\u3002","title":"4.  Compiler"},{"location":"module/User_Guide/IPU230/Compile.html#41-compiler","text":"CompilerTool \u8bf4\u660e \u5de5\u5177\u4f4d\u7f6e SGS_IPU_SDK/Scripts/calibrator/compiler.py \u5de5\u5177\u4f5c\u7528 \u5c06SigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u4e3aSigmaStar\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b \u4f7f\u7528\u987b\u77e5 \u2460 \u4f7f\u7528Simulator\u5de5\u5177\u8fd0\u884c\u591abatch\u79bb\u7ebf\u6a21\u578b SGS_IPU_SDK/Scripts/examples/multi_batch_simulator.py \u2461 \u4f7f\u7528MI_IPU\u7684API\u5728\u677f\u7aef\u8fd0\u884c\u591abatch\u79bb\u7ebf\u6a21\u578b alkaid/sdk/verify/mi_demo/source/dla/dla_classifyNBatch (3) \u5728SGS_IPU_SDK \u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK source cfg_env.sh","title":"4.1 Compiler\u7b80\u4ecb"},{"location":"module/User_Guide/IPU230/Compile.html#42-compiler","text":"","title":"4.2 Compiler\u5de5\u5177\u4f7f\u7528\u8bf4\u660e"},{"location":"module/User_Guide/IPU230/Compile.html#421-compiler","text":"\u8fdb\u5165\u5230\u8be5\u5de5\u5177\u76ee\u5f55\uff0c\u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 compiler.py \\ -m ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_fixed.sim","title":"4.2.1 Compiler\u5de5\u5177\u4f7f\u7528\u793a\u4f8b"},{"location":"module/User_Guide/IPU230/Compile.html#422-compiler","text":"(1) \u5fc5\u9009\u53c2\u6570 \u2460 -m , --model : Fixed\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a \u2460 -b , --batch \uff1a\u671f\u5f85\u8bbe\u5b9a\u7684Batch\u6570\uff0c\u9ed8\u8ba4\u4e3a1\u3002 \u2461 --batch_mode \uff1a\u591abatch\u6a21\u5f0f\u3002 \u4f7f\u7528\u987b\u77e5 \u53ef\u9009n_buf/one_buf\uff0c\u9ed8\u8ba4\u4e3an_buf\u6a21\u5f0f n_buf : \u6bcf\u4e2abatch\u7684\u8f93\u5165\u548c\u8f93\u51fa\u6570\u636e\u72ec\u7acbbuffer\u3002 \u9009\u62e9\u8be5\u6a21\u5f0f\u65f6\uff0c -b / --batch \u53c2\u6570\u4e3a\u671f\u5f85\u8bbe\u5b9a\u7684\u6700\u5927Batch\u6570\uff0cCompiler\u4f1a\u6839\u636e\u6700\u5927Batch\u6570\u4f18\u5316\uff0c\u751f\u6210\u7684\u79bb\u7ebf\u6a21\u578b\u53ef\u4f7f\u7528\u4efb\u610f\u5c0f\u4e8e\u6700\u5927Batch\u6570\u8fd0\u884c\u3002 one_buf : \u591a\u4e2abatch\u7684\u6570\u636e\u9700\u5728\u6700\u9ad8\u7ef4\u5ea6\u5806\u53e0\u540e\u4f7f\u7528\u4e00\u5757buffer\u3002 \u9009\u62e9\u8be5\u6a21\u5f0f\u65f6\uff0c -b / --batch \u53c2\u6570\u53ef\u6307\u5b9a\u591a\u79cd\u9700\u8981\u4f7f\u7528\u7684Batch\u6570\uff0c\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0c\u6700\u591a\u8bbe\u5b9a10\u4e2a\uff0c\u751f\u6210\u7684\u79bb\u7ebf\u6a21\u578b\u4ec5\u80fd\u4f7f\u7528\u6307\u5b9aBatch\u6570\u8fd0\u884c\u3002 \u2462 -c , --category : \u6a21\u578b\u7684\u7c7b\u522b\u3002 \u4f7f\u7528\u987b\u77e5 \u53ef\u9009Classification / Detection / Unknown\u3002 Classification : \u6a21\u578b\u67091\u4e2a\u8f93\u51fa\uff0c\u4f1a\u6839\u636e\u8f93\u51fa\u6392\u5e8f\u8f93\u51fa\u5206\u6570\u7531\u9ad8\u81f3\u4f4e\u7684\u524d5\u4e2a\u3002 Detection : \u6a21\u578b\u67094\u4e2a\u8f93\u51fa\uff0c\u4f1a\u6839\u636e\u8f93\u51fa\u8f6c\u6362\u4e3a\u8f93\u5165\u56fe\u7247\u7684bbox\u4f4d\u7f6e\u4ee5\u53ca\u7c7b\u522b\u3002\u53ea\u652f\u6301SigmaStar\u540e\u5904\u7406\u7b97\u5b50[SigmaStar\u540e\u5904\u7406\u6a21\u5757]\u3002\u5176\u4ed6\u540e\u5904\u7406\u8bf7\u4f7f\u7528Unknown\u3002 Unknown : \u6a21\u578b\u8f93\u51fa\u4e0d\u5c5e\u4e8e\u4e0a\u8ff0\u4e24\u79cd\u7c7b\u578b\uff0c\u4f1a\u8f93\u51fa\u5168\u90e8\u7684Tensor\u6570\u503c\u3002\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u5230\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u65f6\u9ed8\u8ba4\u4e3aUnknown\u3002 \u2463 -o , --output : \u6a21\u578b\u8f93\u51fa\u8def\u5f84\u3002 \u4f7f\u7528\u987b\u77e5 \u6307\u5b9a\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u6570\u636e\u4f4d\u7f6e\uff1a\u6307\u5b9a\u5230\u6587\u4ef6\u5939\uff0c\u5c06\u81ea\u52a8\u4ee5\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u524d\u7f00\u547d\u540d\uff0c\u540e\u63a5sgsimg.img\uff1b \u6307\u5b9a\u5230\u5177\u4f53\u8def\u5f84\u548c\u6587\u4ef6\u540d\uff0c\u5c06\u4ee5\u6307\u5b9a\u8def\u5f84\u548c\u6587\u4ef6\u540d\u547d\u540d\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\uff1b \u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\uff0c\u5c06\u4ee5\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u50a8\u5b58\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u3002 \u2464 --inplace_input_buf : RAWDATA_F32_NHWC \u662f\u5426\u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf. \u4f7f\u7528\u987b\u77e5 training_input_formats \u548c input_formats \u914d\u7f6e\u4e3a RAWDATA_F32_NHWC \u4e14\u4f7f\u7528 --batch_mode \u7684 one_buf \u6a21\u5f0f\u65f6\u624d\u53ef\u4ee5\u914d\u7f6e\u6b64\u53c2\u6570\u3002 \u53ef\u9009True/False\uff0c\u9ed8\u8ba4\u4e3aTrue\u3002 True : \u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf\u3002 False : \u4fdd\u7559\u539f\u59cb\u8f93\u5165buf\u3002","title":"4.2.2 Compiler\u5de5\u5177\u4f7f\u7528\u53c2\u6570\u8bf4\u660e"},{"location":"module/User_Guide/IPU230/Convert.html","text":"2.1. Convert Tool\u7b80\u4ecb \u00b6 ConvertTool \u8bf4\u660e \u5de5\u5177\u4f4d\u7f6e SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py \u5de5\u5177\u4f5c\u7528 \u5c06\u6a21\u578b\u8f6c\u6362\u4e3aSGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b \u4f7f\u7528\u987b\u77e5 \u2460 \u652f\u6301\u4ece tensorflow_graphdef \uff0c tensorflow_savemodel \uff0c keras \uff0c tflite \uff0c caffe \uff0c onnx \u516d\u79cd\u6846\u67b6\u6a21\u578b\u8f6c\u6362 \u4e0d\u540c\u6846\u67b6\u6a21\u578b\u8f6c\u6362\u4e3aSGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u7684\u4f7f\u7528\u65b9\u6cd5 \u2461 \u8f6c\u6362\u4e3aSGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b \u9700\u914d\u7f6einput config \u4fe1\u606f \u8be6\u89c1 input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e \u2462 \u8f6c\u6362\u5b8c\u6210\u540e\u4f1a\u751f\u6210\u4e24\u4e2a\u6587\u4ef6\uff0c\u4f8b\u5982 --output_file \u6307\u5b9a\u4e3a ./resnet50_float.sim\uff0c\u8f6c\u6362\u5b8c\u6210\u540e\u4f1a\u751f\u6210\uff1a \u2460 Debug_resnet50_float.sim Debug_resnet50_float.sim \u662f\u8f6c\u6362\u8fc7\u7a0b\u7684\u4e2d\u95f4\u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u672a\u7ecf\u8fc7\u4f18\u5316\uff0c\u4e0e\u539f\u6846\u67b6\u6a21\u578b\u62e5\u6709\u76f8\u540c\u7684\u7f51\u7edc\u7ed3\u6784\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f5c\u4e3a\u8f6c\u6362\u540e\u8c03\u8bd5\u4f7f\u7528\uff0c\u4f46\u662f\u65e0\u6cd5\u5728IPU SDK\u4e2d\u8fd0\u884c \u2461 resnet50_float.sim resnet50_float.sim \u662f\u771f\u6b63\u8f6c\u6362\u597d\u7684\u6587\u4ef6 \u4f7f\u7528\u524d\u5148\u5728SGS_IPU_SDK\u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK source cfg_env.sh 2.2. \u4e0d\u540c\u6846\u67b6\u6a21\u578b\u8f6c\u6362\u4e3aSGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u7684\u4f7f\u7528\u65b9\u6cd5 \u00b6 \u4e0b\u9762\u662fConvert Tool\u76ee\u524d\u652f\u6301\u7684platform information\uff1a python3 ConvertTool.py -h usage : ConvertTool.py [-h] {tensorflow_graphdef,tensorflow_savemodel,keras,tflite,caffe,onnx} ... Convert Tool positional arguments : {tensorflow_graphdef,tensorflow_savemodel,keras,tflite,caffe,onnx} platform info tensorflow_graphdef tensorflow graphdef commands tensorflow_savemodel tensorflow save_model commands keras keras commands tflite tflite commands caffe caffe commands onnx onnx commands optional arguments : -h, --help show this help message and exit \u4e0d\u540c\u5e73\u53f0\u6a21\u578b\u8f6c\u6362\u4e3aSGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u7684\u6240\u9700\u53c2\u6570\u4fe1\u606f\u7565\u6709\u4e0d\u540c\uff0c\u5982\u679c\u60f3\u8fdb\u4e00\u6b65\u4e86\u89e3\u5404\u4e2a\u5e73\u53f0\u8f6c\u6362\u6240\u9700\u8981\u7684\u53c2\u6570\u4fe1\u606f\uff0c\u53ef\u4ee5\u6267\u884c python3 ConvertTool.py {platform} \u2013h \u8fdb\u884c\u67e5\u770b\u3002 \u4e0b\u9762\u5c06\u7b80\u5355\u4ecb\u7ecd\u5404\u4e2a\u5e73\u53f0\u8f6c\u6362\u6240\u9700\u7684\u5177\u4f53\u4fe1\u606f\u548c\u67e5\u770b\u6307\u4ee4\uff1a 2.2.1 caffe\u6846\u67b6\u6307\u4ee4 \u00b6 1\u3001information\uff1a python3 ConvertTool.py caffe -h usage : ConvertTool.py caffe [-h] --model_file MODEL_FILE --weight_file WEIGHT_FILE --input_config INPUT_CONFIG --output_file OUTPUT_FILE optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of tflite file containing the caffe model. --weight_file WEIGHT_FILE Full filepath of tflite file containing the caffe weight. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. 2\u3001 \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a (1) \u5fc5\u9009\u53c2\u6570\uff1a --model_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684caffe\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 --weight_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684caffe\u6743\u91cd\u6587\u4ef6\u8def\u5f84\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput config\u7684\u914d\u7f6e\u4fe1\u606f\u3002 --output_file : \u8f6c\u6362\u6a21\u578b\u7684\u8f93\u51fa\u8def\u5f84\u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a \u65e0\u3002 3\u3001 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ConvertTool.py caffe \\ --model_file ~/SGS_Models/caffe/caffe_resnet50_conv/caffe_resnet50_conv.prototxt \\ --weight_file ~/SGS_Models/caffe/caffe_resnet50_conv/caffe_resnet50_conv.caffemodel \\ --input_config ~/SGS_Models/caffe/caffe_resnet50_conv/input_config.ini \\ --output_file ./resnet50_float.sim 2.2.2 Onnx\u6846\u67b6\u6307\u4ee4 \u00b6 1\u3001information\uff1a python3 Path_to_SGS_IPU_SDK/Scripts/ConvertTool onnx -h usage : ConvertTool.py onnx [-h] --model_file MODEL_FILE --input_shapes INPUT_SHAPES --input_config INPUT_CONFIG --output_file OUTPUT_FILE optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of tflite file containing the onnx model. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon-separated. For many models each shape takes the form N C H W (default None) --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. 2\u3001 \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a (1) \u5fc5\u9009\u53c2\u6570\uff1a --model_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684Onnx\u6a21\u578b\u6587\u4ef6\u7684\u8def\u5f84\u3002 --input_shapes : Onnx\u6a21\u578b\u8f93\u5165shape. dimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0cshape\u4e2a\u6570\u548cinputs \u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\u3002 \u8be5\u6587\u4ef6\u4e3ainput config\u7684\u914d\u7f6e\u4fe1\u606f\u3002 --output_file : \u8f6c\u6362\u6a21\u578b\u7684\u8f93\u51fa\u8def\u5f84\u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a \u65e0\u3002 3\u3001 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ~/SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py onnx --model_file ~/SGS_Models/onnx/onnx_mobilenet_v2/onnx_mobilenet_v2.onnx \\ --input_shapes 1,3,224,224 \\ --input_config ~/SGS_Models/onnx/onnx_mobilenet_v2/input_config.ini \\ --output_file ./onnx_mobilenet_v2_float.sim Note 1.\u5982\u679connx\u6a21\u578b\u4e2d\u5e26\u6709\u540e\u5904\u7406\u7684\u7b97\u5b50\uff0c\u8bf7\u5148\u53bb\u9664\uff0c\u76ee\u524d\u53ea\u652f\u6301\u4e3b\u5e72\u7f51\u7edc\u7684\u8f6c\u6362\u3002\u5982\u679c\u662f\u7531\u5176\u4ed6\u6846\u67b6\u751f\u6210\u7684onnx\u6a21\u578b\uff0c\u8bf7\u52a1\u5fc5\u6ce8\u610f\u5728\u8f6c\u6362\u6a21\u578b\u65f6\u5173\u95ed\u751f\u6210\u540e\u5904\u7406\u7684\u9009\u9879\u3002 2.2.3 tflite\u6846\u67b6\u6307\u4ee4 \u00b6 1\u3001information\uff1a python3 ConvertTool.py tflite -h usage : ConvertTool.py tflite [-h] --model_file MODEL_FILE --input_config INPUT_CONFIG --output_file OUTPUT_FILE optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of tflite file containing the tflite model. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. 2\u3001 \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a (1) \u5fc5\u9009\u53c2\u6570\uff1a --model_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 \u8f93\u5165\u7684\u6a21\u578b\u4e3atflite\u683c\u5f0f\u6587\u4ef6\u8def\u5f84(\u5fc5\u987b\u4e3a\u975e\u91cf\u5316\u6a21\u578b)\u3002 --output_file : \u6307\u5b9a\u8f93\u51fa\u7684\u6a21\u578b\u6587\u4ef6\u3002 flatbuffer\u683c\u5f0f\uff0csim\u540e\u7f00\u6587\u4ef6\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\u3002 \u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a \u65e0\u3002 3\u3001 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ConvertTool.py tflite \\ --model_file ~/test/tensorflow_model/Debug_save_model_float.tflite \\ --input_config ~/test/tensorflow_model/input_config.ini \\ --output_file ~/test/tensorflow_model/save_model_float.sim 2.2.4 tensorflow_savemodel \u6846\u67b6\u6307\u4ee4 \u00b6 1\u3001information\uff1a python3 ConvertTool.py tensorflow_savemodel -h usage : ConvertTool.py tensorflow_savemodel [-h] --saved_model_dir SAVED_MODEL_DIR --input_config INPUT_CONFIG --output_file OUTPUT_FILE --input_shapes INPUT_SHAPES (optional) --tag_set TAG_SET (optional) --signature_key SIGNATURE_KEY (optional) optional arguments : -h, --help show this help message and exit. --saved_model_dir SAVED_MODEL_DIR SavedModel directory to convert. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. --debug Run gdb in Debug mode. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth Default : None. --tag_set TAG_SET Set of tags identifying the MetaGraphDef within the SavedModel to analyze. All tags in the tag set must be present. Default : None. --signature_key SIGNATURE_KEY Key identifying SignatureDef containing inputs and outputs. Default : DEFAULT_SERVING_SIGNATURE_DEF_KEY 2\u3001 \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a (1) \u5fc5\u9009\u53c2\u6570\uff1a --saved_model_dir : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 \u8f93\u5165\u7684\u6a21\u578b\u4e3aTensorFlow saved_model.builder\u751f\u6210\u7684\u6587\u4ef6\u8def\u5f84\u3002 --output_file : \u6307\u5b9a\u8f93\u51fa\u7684\u6a21\u578b\u6587\u4ef6\u3002 flatbuffer\u683c\u5f0f\uff0c\u9700\u662fsim\u540e\u7f00\u6587\u4ef6\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\u3002 \u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a --input_shapes : \u7f51\u7edc\u8f93\u5165Tensor\u7684shape\u3002 \u683c\u5f0f\u4e3aNHWC\uff0cdimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0cshape\u4e2a\u6570\u548cinputs \u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002\u82e5\u4e0d\u6307\u5b9a\u5219\u4ecesaved_model_dir\u4e2d\u83b7\u53d6\u3002 --tag_set : \u9700\u8981\u548csave model\u65f6\u6240\u6307\u5b9a\u7684tag\u5339\u914d\u3002 \u5982\u679c\u4e0d\u505a\u8bbe\u5b9a\uff0c\u5219\u9ed8\u8ba4\u4e3a\u2018serve\u2019\u3002 --signature_key : \u9700\u8981\u548csave model\u65f6\u6240\u6307\u5b9a\u7684signature\u5339\u914d\u3002 \u5982\u679c\u4e0d\u505a\u8bbe\u5b9a\uff0c\u5219\u9ed8\u8ba4\u4e3a \u2018DEFAULT_SERVING_SIGNATURE_DEF_KEY\u2019 3\u3001 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ConvertTool.py tensorflow_savemodel \\ --saved_model_dir ~/test/tensorflow_model/save_model \\ --input_config ~/test/tensorflow_model/input_config.ini \\ --output_file ~/test/tensorflow_model/save_model_float.sim \\ --tag_set test_saved_model \\ --signature_key test_signature 2.2.5 tensorflow_graphdef \u6846\u67b6\u6307\u4ee4 \u00b6 1\u3001information\uff1a python3 ConvertTool.py tensorflow_graphdef -h usage : ConvertTool.py tensorflow_graphdef [-h] --graph_def_file GRAPH_DEF_FILE --input_config INPUT_CONFIG --output_file OUTPUT_FILE --input_shapes INPUT_SHAPES (optional) optional arguments : -h, --help show this help message and exit. --graph_def_file GRAPH_DEF_FILE Full filepath of file containing frozen GraphDef. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated.For many models each shape takes the form batch size, input array height, input array width, input array depth. Default : None 2\u3001 \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a (1) \u5fc5\u9009\u53c2\u6570\uff1a --graph_def_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684\u8f93\u5165\u6a21\u578b\u8def\u5f84\u3002 \u4e3aTensorFlow frozen\u7684graphdef\u7684pb\u683c\u5f0f\u6587\u4ef6\u8def\u5f84\u3002 --output_file : \u6307\u5b9a\u751f\u6210\u7684\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u540d\u3002 flatbuffer\u683c\u5f0f\uff0c\u9700\u4ee5sim\u540e\u7f00\u547d\u540d\u6587\u4ef6\u3002 --input_shapes : \u6307\u5b9a\u7f51\u7edc\u8f93\u5165Tensor\u7684shape\u3002 \u683c\u5f0f\u4e3aNHWC\uff0cdimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff1b\u9700\u6ce8\u610fshape\u4e2a\u6570\u548cinputs\u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\u3002 \u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a \u65e0\u3002 3\u3001 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ConvertTool.py tensorflow_graphdef \\ --graph_def_file ~/SGS_Models/tensorflow/resnet_v2_50/resnet_v2_50.pb \\ --output_file ./resnet_v2_float.sim \\ --input_shapes 1,299,299,3 \\ --input_config ~/SGS_Models/tensorflow/resnet_v2_50/input_config.ini 2.2.6 keras\u6846\u67b6\u6307\u4ee4 \u00b6 1\u3001information\uff1a python3 ConvertTool.py keras -h usage : ConvertTool.py keras [-h] --model_file MODEL_FILE --input_config INPUT_CONFIG --output_file OUTPUT_FILE --input_shapes INPUT_SHAPES (optional) --custom_objects CUSTOM_OBJECTS (optional) optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of HDF5 file containing the tf.keras model. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth. Default : None. --custom_objects CUSTOM_OBJECTS Dict mapping names (strings) to custom classes or functions to be considered during model deserialization. Default : None. 2\u3001 \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a (1) \u5fc5\u9009\u53c2\u6570\uff1a --model_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 \u8f93\u5165\u7684\u6a21\u578b\u4e3akeras h5\u683c\u5f0f\u6587\u4ef6\u8def\u5f84\u3002 --output_file : \u6307\u5b9a\u8f93\u51fa\u7684\u6a21\u578b\u6587\u4ef6\u3002 flatbuffer\u683c\u5f0f\uff0c\u9700\u662fsim\u540e\u7f00\u6587\u4ef6\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\u3002 \u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a --input_shapes : \u7f51\u7edc\u8f93\u5165Tensor\u7684shape\u3002 \u683c\u5f0f\u4e3aNHWC\uff0cdimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0cshape\u4e2a\u6570\u548cinputs \u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002 --custom_objects : Dict mapping names (strings) to custom classes or functions to be considered during model deserialization (default None). 3\u3001 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ConvertTool.py keras \\ --model_file ./TEST_h5/resnet50/resnet50.h5 \\ --input_config ./TEST_h5/resnet50/input_config.ini \\ --output_file ./TEST_h5/resnet50/resnet50_float.sim 2.3. input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e \u00b6 \u59822.2\u8282\u6240\u793a\uff0c\u5404\u5e73\u53f0\u6a21\u578b\u5728\u8f6c\u6362\u4e3aSGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u7684\u6307\u4ee4\u4e2d\u90fd\u9700\u4f7f\u7528\u5fc5\u9009\u53c2\u6570 --input_config \uff0c\u7528\u4e8e\u6307\u5b9ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u6587\u4ef6input_config.ini\u8def\u5f84\uff0c\u4e0b\u9762\u5c06\u5bf9\u8be5\u6587\u4ef6\u8fdb\u884c\u4ecb\u7ecd\uff1a (1) \u8be5\u6587\u4ef6\u7684\u4e3b\u8981\u529f\u80fd\u6709\uff1a \u2022 \u914d\u7f6e\u7f51\u7edc\u6a21\u578b\u56fe\u7247\u524d\u5904\u7406\u7684\u5f52\u4e00\u5316\u4fe1\u606f\uff1b \u2022 \u914d\u7f6e\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u8f93\u51fa\u7684\u91cf\u5316\u5904\u7406\u4fe1\u606f\uff1b \u2022 \u914d\u7f6e\u7f51\u7edc\u6a21\u578b\u4e2d\u5377\u79ef\u7684\u91cf\u5316\u4fe1\u606f\u3002 [\u8865\u5145\u8bf4\u660e] \u2460 \u914d\u7f6einput_config.ini\u6587\u4ef6\u4e3b\u8981\u662f\u4e3a\u4e86\u80fd\u5c06\u7f51\u7edc\u6a21\u578b\u5feb\u901f\u9002\u914d\u5230SigmaStar\u82af\u7247\u4e2d\u4f7f\u7528\u3002\u5728\u7f51\u7edc\u6a21\u578b\u7684\u8bad\u7ec3\u4e2d\uff0c\u4e0d\u540c\u7684\u6846\u67b6\u548c\u8bad\u7ec3\u6570\u636e\u96c6\u9700\u8981\u7f51\u7edc\u4f7f\u7528\u4e0d\u540c\u7684\u56fe\u7247\u5f52\u4e00\u5316\u65b9\u6cd5\uff0c\u800c\u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0c\u4e3a\u4e86\u80fd\u591f\u8ba9\u7f51\u7edc\u6a21\u578b\u7684\u9884\u6d4b\u66f4\u52a0\u51c6\u786e\uff0c\u9700\u8981\u8fd8\u539f\u8bad\u7ec3\u6a21\u578b\u65f6\u7684\u56fe\u7247\u524d\u5904\u7406\u5f52\u4e00\u5316\u65b9\u6cd5\u3002 \u2461 \u5c06RGB\u4e09\u4e2a\u901a\u9053\u7684\u5747\u503c\u548cstd_value\u8bbe\u7f6e\u597d\u540e\uff0c\u5728\u8f6c\u6362\u6a21\u578b\u65f6\u4f1a\u5199\u5165\u5230\u6a21\u578b\u5185\u90e8\uff0c\u8fd9\u6837\u5728\u786c\u4ef6\u4e0a\u5b9e\u9645\u4f7f\u7528\u65f6\uff0c\u4ec5\u9700\u8981\u5c06\u56fe\u7247resize\u5230\u7f51\u7edc\u6a21\u578b\u7684\u8f93\u5165\u7684\u5c3a\u5bf8\uff0c\u56fe\u7247\u5f52\u4e00\u5316\u7684\u5de5\u4f5c\u5728\u7f51\u7edc\u5185\u90e8\u5b8c\u6210\u3002 \u2462 \u5b9e\u9645\u786c\u4ef6\u4e0a\u4f7f\u7528\u65f6\u56fe\u7247\u8f93\u5165\u683c\u5f0f\u4e0e\u8bad\u7ec3\u65f6\u4f7f\u7528\u7684RGB\u53ef\u80fd\u6709\u5f88\u5927\u533a\u522b\uff0c\u6b63\u786e\u914d\u7f6e\u8fd9\u4e9b\u9009\u9879\u80fd\u4f7f\u8f6c\u6362\u597d\u7684\u6a21\u578b\u5185\u62e5\u6709\u8fd9\u4e9b\u914d\u7f6e\u4fe1\u606f\uff0c\u80fd\u591f\u76f4\u63a5\u5728SigmaStar\u7684\u786c\u4ef6\u4e0a\u90e8\u7f72\u3002 (2) \u8be5\u6587\u4ef6\u9700\u8bbe\u7f6e\u4fe1\u606f\u793a\u4f8b\uff1a [INPUT_CONFIG] ;Names of the input arrays, comma-separated.image input must be the first. inputs = 'data'; ;Memory formats of input arrays, comma-separated. ;One of RGB, BGR, RGBA, BGRA, YUV_NV12, RAWDATA_S16_NHWC ;Each entry in the list should match an entry in inputs arrays. training_input_formats = BGR; input_formats = BGR; ;Indicate the input data need qauntize or not. ;Each entry in the list should match an entry in inputs arrays. quantizations = TRUE; ;mean_values parameter for image models, ;Each entry in the list match RGB channel of\uff08RGB,BGR,RGBA,BGRA,YUV_NV12\uff09, channel order is R,G,B. mean = 127.5:127.5:127.5; ;std_value parameter for image models, std_value = 1.0; [OUTPUT_CONFIG] ;Names of the output arrays, comma-separated. outputs = 'prob'; ;Indicate the output data need deqauntize or not. ;Each entry in the list should match an entry in outputs arrays. dequantizations = TRUE; [CONV_CONFIG] ;input_format=ALL_INT16; tensor_arrays = 'conv1-1,conv2-1'; \u8be5\u6587\u4ef6\u4e3b\u8981\u5206\u4e3a\u4e09\u4e2a\u8bbe\u7f6e\u4fe1\u606f\uff1a [INPUT_CONFIG] // \u914d\u7f6e\u7f51\u7edc\u6a21\u578b\u56fe\u7247\u524d\u5904\u7406\u7684\u5f52\u4e00\u5316\u4fe1\u606f [OUTPUT_CONFIG] // \u914d\u7f6e\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u8f93\u51fa\u7684\u91cf\u5316\u5904\u7406\u4fe1\u606f [CONV_CONFIG] // \u914d\u7f6e\u7f51\u7edc\u6a21\u578b\u4e2d\u5377\u79ef\u7684\u91cf\u5316\u4fe1\u606f \u4e0b\u9762\u9488\u5bf9\u8fd9\u4e09\u4e2a\u8bbe\u7f6e\u4fe1\u606f\u5177\u4f53\u8bf4\u660e\uff1a 2.3.1 INPUT_CONFIG \u00b6 (1) inputs : \u7f51\u7edc\u8f93\u5165Tensor\u7684name\u3002 \u4f7f\u7528\u987b\u77e5 \u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u8bf7\u7528\u9017\u53f7( , )\u5206\u9694\u3002\u6a21\u578b\u8f93\u5165Tensor\u6570\u91cf\u548c\u987a\u5e8f\u4e0e inputs \u7684\u914d\u7f6e\u4e00\u81f4\u3002 \u6240\u6709\u8f93\u5165name\u7684\u957f\u5ea6\u4e0d\u80fd\u8d85\u8fc71024\u4e2a\u5b57\u7b26\u3002 String\u7c7b\u578b\u7684\u503c\uff0c\u5982tensor name\uff0c\u9700\u7528('')\u5c06\u5185\u5bb9\u5305\u542b\u8d77\u6765\uff0c\u4f8b\u5982inputs='detectionBoxes,detectionClasses,detectionScores,numDetections'; (2) training_input_formats : \u7f51\u7edc\u8bad\u7ec3\u65f6\u7684\u56fe\u7247\u683c\u5f0f\u3002 \u4f7f\u7528\u987b\u77e5 \u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u8bf7\u7528\u9017\u53f7( , )\u5206\u9694\u3002\u6a21\u578b\u8f93\u5165Tensor\u6570\u91cf\u548c\u987a\u5e8f\u4e0e inputs \u7684\u914d\u7f6e\u4e00\u81f4\u3002 \u53ef\u9009\u56fe\u7247\u683c\u5f0f\u5305\u62ec\uff1a RGB BGR RAWDATA_S16_NHWC RAWDATA_F32_NHWC GRAY (3) input_formats : \u7f51\u7edc\u6a21\u578b\u5728SigmaStar\u82af\u7247\u4e0a\u8fd0\u884c\u7684\u56fe\u7247\u8f93\u5165\u683c\u5f0f\u3002 \u4f7f\u7528\u987b\u77e5 \u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u8bf7\u7528\u9017\u53f7( , )\u5206\u9694\u3002\u6a21\u578b\u8f93\u5165Tensor\u6570\u91cf\u548c\u987a\u5e8f\u4e0e inputs \u7684\u914d\u7f6e\u4e00\u81f4\u3002 \u53ef\u9009\u56fe\u7247\u683c\u5f0f\u5305\u62ec\uff1a RGB BGR RGBA BGRA YUV_NV12 RAWDATA_F32_NHWC RAWDATA_S16_NHWC GRAY \u82e5 training_input_formats \u8bbe\u7f6e\u4e3a RAWDATA_S16_NHWC ,\u5219 input_formats \u4e5f\u5fc5\u987b\u8bbe\u7f6e\u4e3a RAWDATA_S16_NHWC \u3002 training_input_formats\u53ef\u4ee5\u548cinput_formats \u4e0d\u4e00\u6837\u3002\u4f8b\u5982\u5728\u5728SigmaStar\u5f00\u53d1\u677f\u4e0a\uff0cinput_formats\u662fYUV_NV12\uff0c\u4f46\u662ftraining input formats \u662fRGB\u3002 \u66f4\u8be6\u7ec6\u7684 training_input_formats \u548c input_formats \u5bf9\u5e94\u5173\u7cfb\u8bf7\u53c2\u8003 \u8f93\u5165\u8f93\u51fa\u914d\u7f6e\u603b\u7ed3 training_input_formats \u548c input_formats \u4e0d\u80fd\u914d\u7f6e\u4e3a\u5982\u4e0b\u60c5\u51b5\uff1a training_input_formats=RGB; input_formats=BGR;(\u9519\u8bef\u914d\u7f6e) training_input_formats=BGR; input_formats=RGB;(\u9519\u8bef\u914d\u7f6e) \u7070\u5ea6\u56fe\u7247\u8bf7\u6309\u5982\u4e0b\u65b9\u5f0f\u914d\u7f6e\uff1a training_input_formats=GRAY; input_formats=YUV_NV12; \u5177\u4f53\u8be6\u89c1 \u7070\u5ea6\u6a21\u578b\u8f6c\u6362\u8981\u70b9 \u914d\u7f6e RAWDATA_F32_NHWC \u6216 RAWDATA_S16_NHWC \u65f6\uff0c mean \u548c std_value \u4e0d\u8981\u914d\u7f6e\uff0c\u5177\u4f53\u8be6\u89c1 RAWDATA_F32_NHWC\u6a21\u578b\u8f6c\u6362\u8981\u70b9 (4) quantizations : \u7528\u6765\u6807\u8bc6\u6240\u6709\u8f93\u5165Tensor\u7684\u6570\u636e\u662f\u5426\u9700\u8981\u505a\u91cf\u5316\uff0cTRUE\u6216\u8005FALSE\uff0c\u9ed8\u8ba4\u503c\u4e3aTRUE\u3002 \u4f7f\u7528\u987b\u77e5 \u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u8bf7\u7528\u9017\u53f7( , )\u5206\u9694\u3002\u6a21\u578b\u8f93\u5165Tensor\u6570\u91cf\u548c\u987a\u5e8f\u4e0e inputs \u7684\u914d\u7f6e\u4e00\u81f4\u3002 (5) mean : \u7f51\u7edc\u8bad\u7ec3\u9636\u6bb5\u7528\u6765\u5bf9\u56fe\u7247\u8fdb\u884c\u524d\u5904\u7406\u3002 \u4f7f\u7528\u987b\u77e5 \u5bf9\u4e8eRGB\u901a\u9053\u7684\u56fe\u7247\uff0c\u4f7f\u7528\u516c\u5f0f (RGB - [mean_red, mean_green, mean_green])/std_value \u5bf9\u56fe\u7247\u8fdb\u884c\u9884\u5904\u7406\u3002 mean_red:mean_green:mean_blue \u5c31\u662f\u76f8\u5e94\u901a\u9053\u4e0a\u7684mean\u503c\u3002\u5982\u679c\u8fd9\u4e2a\u7f51\u7edc\u6ca1\u6709\u505a\u4efb\u4f55\u5f52\u4e00\u5316\u5904\u7406\uff0c\u8fd9\u4e2a\u503c\u8bbe\u4e3a0\u5373\u53ef\u3002 \u6bcf\u4e2amean\u6570\u91cf\u7b49\u4e8einputs \u4e2a\u6570\u3002\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 (6) std_value : \u7f51\u7edc\u8bad\u7ec3\u9636\u6bb5\u7528\u6765\u5bf9\u56fe\u7247\u8fdb\u884c\u524d\u5904\u7406\u3002 \u4f7f\u7528\u987b\u77e5 \u5bf9\u4e8eRGB\u901a\u9053\u7684\u56fe\u7247\uff0c\u4f7f\u7528\u516c\u5f0f (RGB - [mean_red, mean_green, mean_green])/std_value \u5bf9\u56fe\u7247\u8fdb\u884c\u9884\u5904\u7406\u3002 \u5982\u679c\u6ca1\u6709\u505a\u4efb\u4f55\u5f52\u4e00\u5316\u5904\u7406\uff0c\u8fd9\u4e2a\u503c\u8bbe\u4e3a1\u5373\u53ef\u3002 \u5982\u679c\u6bcf\u4e2a\u901a\u9053\u90fd\u6709\u5bf9\u5e94\u7684 std_value \u503c\uff0c\u4ee5\u82f1\u6587\u5192\u53f7( : )\u5206\u9694\uff0c\u987a\u5e8f\u4e3aRGB\u3002 \u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 (7) input_width_alignment \uff1a\u7528\u6765\u6807\u8bc6\u6570\u636e\u4f5c\u4e3a\u7f51\u7edc\u8f93\u5165\u65f6Width\u65b9\u5411\u5bf9\u9f50\u7684\u6570\u91cf\uff0c\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 (8) input_height_alignment \uff1a\u7528\u6765\u6807\u8bc6\u6570\u636e\u4f5c\u4e3a\u7f51\u7edc\u8f93\u5165\u65f6Height\u65b9\u5411\u5bf9\u9f50\u7684\u6570\u91cf\uff0c\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 \u4f7f\u7528\u987b\u77e5 \u5f53input_formats\u8bbe\u5b9a\u4e3aYUV_NV12\u65f6\uff0c input_width_alignment \u548c input_height_alignment \u9ed8\u8ba4\u503c\u4e3a2\uff0c\u5176\u4f59\u60c5\u51b5\u9ed8\u8ba4\u503c\u4e3a1\u3002 \u677f\u4e0a\u8fd0\u884c\u65f6\u6570\u636e\u5bf9\u9f50\u65b9\u5f0f\u8be6\u89c1 \u8f93\u5165\u8f93\u51fa\u914d\u7f6e\u603b\u7ed3 (9) input_layouts : \u7528\u6765\u6807\u8bc6\u8f93\u5165Tensor\u7684\u6570\u636e\u6392\u5e03\u683c\u5f0f\u3002 \u4f7f\u7528\u987b\u77e5 \u53ef\u9009\u6570\u636e\u6392\u5e03\u683c\u5f0f\u5305\u62ec\uff1a NCHW: NCHW \u8868\u793a\u5bf9\u5e94\u987a\u5e8f\u7684inputTensor\u82e5\u662f\u56db\u7ef4\u5219\u6309\u7167NCHW\u7684\u6570\u636e\u683c\u5f0f\u6392\u5e03\uff08\u4e0ecaffe/onnx\u539f\u6a21\u578b\u76f8\u540c\uff09 NHWC: NHWC \u8868\u793a\u5bf9\u5e94\u987a\u5e8f\u7684inputTensor\u82e5\u662f\u56db\u7ef4\u5219\u6309\u7167NHWC\u7684\u683c\u5f0f\u6392\u5e03\uff08\u9ed8\u8ba4\u683c\u5f0f\uff09\u3002 \u5982\u679c\u4e0d\u8bbe\u7f6e\u8be5\u9879\uff0c\u5c06\u9ed8\u8ba4\u6570\u636e\u6392\u5e03\u683c\u5f0f\u4e3a NHWC \u3002 \u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7\uff08,\uff09\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002\u6570\u91cf\u7b49\u4e8einputs\u4e2a\u6570\uff0c\u6a21\u578b\u8f93\u5165Tensor\u987a\u5e8f\u4e0e input_layouts \u7684\u914d\u7f6e\u987a\u5e8f\u4e00\u81f4\u3002 \u5f53\u8f93\u5165\u7684 input_layouts \u8bbe\u4e3a NCHW \u4e14\u662f\u56db\u7ef4Tensor\uff0c\u9700\u8981\u786e\u4fdd\u8be5\u8f93\u5165\u5bf9\u5e94\u7684\u524d\u5904\u7406\u811a\u672c\u8fd4\u56de\u6570\u636e\u4e5f\u6309\u7167NCHW\u6392\u5e03\uff0c\u4e14\u677f\u7aef\u8fd0\u884c\u79bb\u7ebf\u6a21\u578b\u65f6\u7684\u8f93\u5165\u6570\u636e\u6392\u5e03\u4e5f\u6309\u7167NCHW\u6392\u5e03\u3002 \u5f53input_formats\u8bbe\u5b9a\u4e3aYUV_NV12\u4e14\u8be5\u8f93\u5165 input_layouts \u8bbe\u4e3a NCHW \uff0c\u524d\u5904\u7406\u811a\u672c\u9700\u8981\u6309\u7167 training_input_formats \uff08BGR\u3001RGB\u3001GRAY\uff09\u8fd4\u56deNCHW\u6392\u5e03\u7684\u6570\u636e\uff0c\u800c\u5728\u677f\u7aef\u8fd0\u884c\u79bb\u7ebf\u6a21\u578b\u65f6\u7684\u8f93\u5165\u6570\u636e\u4e3a\u6b63\u5e38\u6392\u5e03\u7684YUV_NV12\u3002 \u5f53input_formats\u8bbe\u5b9a\u4e3aRGBA\u3001BGRA\u65f6\uff0c\u4e0d\u652f\u6301 input_layouts \u8bbe\u4e3a NCHW \u3002 2.3.2 OUTPUT_CONFIG \u00b6 (1) outputs : \u7f51\u7edc\u8f93\u51faTensor\u7684name(\u53ef\u7528Netron\u5de5\u5177\u6253\u5f00\u6a21\u578b\u67e5\u770b)\u3002 \u4f7f\u7528\u987b\u77e5 \u5982\u679c\u6709\u591a\u4e2a\u8f93\u51faTensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u3002 \u6a21\u578b\u8f93\u51faTensor\u987a\u5e8f\u4e0e outputs \u7684\u914d\u7f6e\u987a\u5e8f\u4e00\u81f4\u3002 \u6240\u6709\u8f93\u51faname\u7684\u957f\u5ea6\u4e0d\u80fd\u8d85\u8fc71024\u4e2a\u5b57\u7b26\u3002 String\u7c7b\u578b\u7684\u503c\uff0c\u5982tensor name\uff0c\u9700\u7528('')\u5c06\u5185\u5bb9\u5305\u542b\u8d77\u6765\uff0c\u4f8b\u5982outputs='detectionBoxes,detectionClasses,detectionScores,numDetections'; \u8f6c\u6362\u5e26\u540e\u5904\u7406\u7f51\u7edc\u65f6\uff0cBackbone\u7f51\u7edc\u7684outputs\u4e0e\u5b8c\u6574\u7f51\u7edcoutputs\u7684\u540d\u79f0\u4e0d\u540c\uff0c\u5176\u4f59\u8bbe\u7f6e\u5e94\u5b8c\u5168\u4e00\u81f4\u3002 (2) dequantizations : \u7528\u6765\u6807\u8bc6\u6240\u6709\u8f93\u51faTensor\u7684\u6570\u636e\u662f\u5426\u9700\u8981\u505a\u53cd\u91cf\u5316\uff0cTRUE\u6216\u8005FALSE\uff0c\u9ed8\u8ba4\u503c\u4e3aTRUE\u3002 \u4f7f\u7528\u987b\u77e5 \u6570\u91cf\u7b49\u4e8eoutputs\u3002\u5982\u679c\u6709\u591a\u4e2a\u8f93\u51faTensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 \u8be5\u9009\u9879\u4ec5\u5728\u677f\u4e0a\u8fd0\u884c\u65f6\u751f\u6548\u3002\u8be5\u9009\u9879\u8bbe\u4e3aTRUE\u65f6\uff0c\u4f1a\u5728\u8f6c\u6362\u5230Fixed\u6a21\u578b\u540e\u5728\u5bf9\u5e94\u7684\u8f93\u51fa\u589e\u52a0Fix2float\u7b97\u5b50\uff0c\u5b8c\u6210\u8f93\u51fa\u6570\u636e\u4e58scale\u8f6c\u6362\u6210float\u7684\u64cd\u4f5c\u3002 \u5982\u679c\u914d\u7f6e dequantizations \u4e3aTRUE\uff0c\u751f\u6210\u7684\u6a21\u578b\u5bf9\u5e94\u8f93\u51fa\u4f1a\u589e\u52a0Fix2Float\u7b97\u5b50\uff0c\u8f93\u51fa\u6570\u636e\u7c7b\u578b\u4e3afloat32\uff0c\u6570\u636e\u4e0e\u8f93\u51fashape\u4e00\u81f4\uff0c\u6ca1\u6709\u5bf9\u9f50\u8981\u6c42\u3002 \u5982\u679c\u914d\u7f6e dequantizations \u4e3aFALSE\uff0c\u5728\u677f\u7aef\u8fd0\u884c\u65f6\u8f93\u51fa\u6570\u636e\u7c7b\u578b\u4e3aint16\uff0c\u6570\u636e\u4e0e\u8f93\u51fashape\u4e00\u81f4\uff0c\u6ca1\u6709\u5bf9\u9f50\u8981\u6c42\u3002 (3) output_layouts : \u7528\u6765\u6807\u8bc6\u8f93\u51faTensor\u7684\u6570\u636e\u6392\u5e03\u683c\u5f0f\u3002 \u4f7f\u7528\u987b\u77e5 \u53ef\u9009\u6570\u636e\u6392\u5e03\u683c\u5f0f\u5305\u62ec\uff1a NCHW: NCHW \u8868\u793a\u5bf9\u5e94\u987a\u5e8f\u7684outputTensor\u82e5\u662f\u56db\u7ef4\u5219\u6309\u7167NCHW\u7684\u6570\u636e\u683c\u5f0f\u6392\u5e03\uff08\u4e0ecaffe/onnx\u539f\u6a21\u578b\u76f8\u540c\uff09 NHWC: NHWC \u8868\u793a\u5bf9\u5e94\u987a\u5e8f\u7684outputTensor\u82e5\u662f\u56db\u7ef4\u5219\u6309\u7167NHWC\u7684\u683c\u5f0f\u6392\u5e03\uff08\u9ed8\u8ba4\u683c\u5f0f\uff09\u3002 \u5982\u679c\u4e0d\u8bbe\u7f6e\u8be5\u9879\uff0c\u5c06\u9ed8\u8ba4\u6570\u636e\u6392\u5e03\u683c\u5f0f\u4e3a NHWC \u3002 \u5982\u679c\u6709\u591a\u4e2a\u8f93\u51faTensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7\uff08,\uff09\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002\u6570\u91cf\u7b49\u4e8eoutputs\u4e2a\u6570\uff0c\u6a21\u578b\u8f93\u51faTensor\u987a\u5e8f\u4e0e output_layouts \u7684\u914d\u7f6e\u987a\u5e8f\u4e00\u81f4\u3002 2.3.3 CONV_CONFIG \u00b6 (1) input_format : \u6307\u5b9a\u7f51\u7edc\u4e2d\u6240\u6709\u5377\u79ef\u7684\u91cf\u5316\u65b9\u5f0f\u3002 \u4f7f\u7528\u987b\u77e5 \u9ed8\u8ba4\u4f7f\u7528 CalibrateTool \u63a8\u8350\u7684\u91cf\u5316\u65b9\u5f0f\uff0c\u82e5\u4e0d\u60f3\u4f7f\u7528\u63a8\u8350\u65b9\u5f0f\uff0c\u53ef\u9009\u65b9\u6848ALL_UINT8\uff0cALL_INT16\uff0c CONV2D_INT16\uff0cDEPTHWISE_INT16\u3002\u914d\u7f6e\u540e\u5c06\u4f18\u5148\u4f7f\u7528\u5df2\u9009\u65b9\u6848\u4e0d\u518d\u8d70\u63a8\u8350\u91cf\u5316\u3002 ALL_UINT8 : \u6307\u5b9a\u6240\u6709\u5377\u79ef\u6309\u7167UINT8\u91cf\u5316\u3002 ALL_INT16 : \u6307\u5b9a\u6240\u6709\u5377\u79ef\u6309\u7167INT16\u91cf\u5316\u3002 CONV2D_INT16 : \u53ea\u6307\u5b9a\u6240\u6709\u666e\u901a\u5377\u79ef\u6309\u7167INT16\u91cf\u5316\u3002 DEPTHWISE_INT16 : \u53ea\u6307\u5b9a\u6240\u6709Depthwise \u5377\u79ef\u6309\u7167INT16\u91cf\u5316\u3002 \u5728 ALL_UINT8 \u6a21\u5f0f \u4e0b\uff0c\u5377\u79ef\u8fd0\u884c\u6240\u5360\u5e26\u5bbd\u5c0f\uff0c\u8fd0\u884c\u901f\u5ea6\u5feb\uff1b\u5728 ALL_INT16 \u6a21\u5f0f \u4e0b\uff0c\u53ef\u4ee5\u6781\u5927\u7684\u63d0\u9ad8\u5377\u79ef\u7684\u7cbe\u5ea6\uff0c\u4f46\u662f\u8fd0\u884c\u7684\u901f\u5ea6\u4f1a\u6709\u5f71\u54cd\u3002 (2) tensor_arrays : \u6307\u5b9a\u7f51\u7edc\u4e2d\u67d0\u4e9b\u5c42\u7684\u5377\u79ef\u91cf\u5316\u65b9\u5f0f\u3002 \u4f7f\u7528\u987b\u77e5 \u6574\u4e2a\u7f51\u7edc\u5377\u79ef\u90fd\u91c7\u7528\u9ed8\u8ba4\u7684UINT8 \uff0c\u4f46\u662f\u67d0\u4e9b\u5377\u79ef\u5c42\u9700\u8981\u66f4\u9ad8\u7684\u7cbe\u5ea6\uff0c\u8fd9\u65f6\u76f4\u63a5\u586b\u5199\u90a3\u4e9b\u5377\u79ef\u5c42\u7684\u7b2c\u4e00\u4e2a\u8f93\u5165\u7684 input id name\u5373\u53ef\u3002\u591a\u5c42\u65f6\uff0cname\u4ee5\u9017\u53f7( , )\u5206\u9694\u3002 \u5377\u79ef\u7b2c\u4e00\u4e2a\u8f93\u5165\u7684input id\u540d\u5b57\u53ef\u901a\u8fc7netron\u5de5\u5177\u67e5\u770b\u3002\u6307\u5b9a\u91cf\u5316\u65f6\uff0c\u7f51\u7edc\u4e2d\u7684\u7b2c\u4e00\u5c42\u5377\u79ef\u4e0d\u751f\u6548\u3002 2.3.4 \u8f93\u5165\u8f93\u51fa\u914d\u7f6e\u603b\u7ed3 \u00b6 training_input_formats input_formats \u677f\u4e0a\u8fd0\u884c\u65f6\u6570\u636e\u5bf9\u9f50\u65b9\u5f0f RGB/BGR RGB/BGR \u4e0d\u7528\u5bf9\u9f50 RGB/BGR RGBA/BGRA W = ALIGN_UP(W * 4, input_width_alignment ) / 4 input_width_alignment \u9ed8\u8ba4\u4e3a1 RGB/BGR/GRAY YUV_NV12 H = ALIGN_UP(H, input_height_alignment ) input_height_alignment \u9ed8\u8ba4\u4e3a2 W = ALIGN_UP(W, input_width_alignment ) input_width_alignment \u9ed8\u8ba4\u4e3a2 GRAY GRAY H = ALIGN_UP(H, input_height_alignment ) input_height_alignment \u9ed8\u8ba4\u4e3a1 W = ALIGN_UP(W, input_width_alignment ) input_width_alignment \u9ed8\u8ba4\u4e3a1 RAWDATA_F32_NHWC RAWDATA_F32_NHWC \u4e0d\u7528\u5bf9\u9f50 RAWDATA_S16_NHWC RAWDATA_S16_NHWC \u4e0d\u7528\u5bf9\u9f50","title":"2.  Convert Tool"},{"location":"module/User_Guide/IPU230/Convert.html#21-convert-tool","text":"ConvertTool \u8bf4\u660e \u5de5\u5177\u4f4d\u7f6e SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py \u5de5\u5177\u4f5c\u7528 \u5c06\u6a21\u578b\u8f6c\u6362\u4e3aSGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b \u4f7f\u7528\u987b\u77e5 \u2460 \u652f\u6301\u4ece tensorflow_graphdef \uff0c tensorflow_savemodel \uff0c keras \uff0c tflite \uff0c caffe \uff0c onnx \u516d\u79cd\u6846\u67b6\u6a21\u578b\u8f6c\u6362 \u4e0d\u540c\u6846\u67b6\u6a21\u578b\u8f6c\u6362\u4e3aSGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u7684\u4f7f\u7528\u65b9\u6cd5 \u2461 \u8f6c\u6362\u4e3aSGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b \u9700\u914d\u7f6einput config \u4fe1\u606f \u8be6\u89c1 input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e \u2462 \u8f6c\u6362\u5b8c\u6210\u540e\u4f1a\u751f\u6210\u4e24\u4e2a\u6587\u4ef6\uff0c\u4f8b\u5982 --output_file \u6307\u5b9a\u4e3a ./resnet50_float.sim\uff0c\u8f6c\u6362\u5b8c\u6210\u540e\u4f1a\u751f\u6210\uff1a \u2460 Debug_resnet50_float.sim Debug_resnet50_float.sim \u662f\u8f6c\u6362\u8fc7\u7a0b\u7684\u4e2d\u95f4\u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u672a\u7ecf\u8fc7\u4f18\u5316\uff0c\u4e0e\u539f\u6846\u67b6\u6a21\u578b\u62e5\u6709\u76f8\u540c\u7684\u7f51\u7edc\u7ed3\u6784\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f5c\u4e3a\u8f6c\u6362\u540e\u8c03\u8bd5\u4f7f\u7528\uff0c\u4f46\u662f\u65e0\u6cd5\u5728IPU SDK\u4e2d\u8fd0\u884c \u2461 resnet50_float.sim resnet50_float.sim \u662f\u771f\u6b63\u8f6c\u6362\u597d\u7684\u6587\u4ef6 \u4f7f\u7528\u524d\u5148\u5728SGS_IPU_SDK\u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK source cfg_env.sh","title":"2.1.   Convert Tool\u7b80\u4ecb"},{"location":"module/User_Guide/IPU230/Convert.html#22-sgs","text":"\u4e0b\u9762\u662fConvert Tool\u76ee\u524d\u652f\u6301\u7684platform information\uff1a python3 ConvertTool.py -h usage : ConvertTool.py [-h] {tensorflow_graphdef,tensorflow_savemodel,keras,tflite,caffe,onnx} ... Convert Tool positional arguments : {tensorflow_graphdef,tensorflow_savemodel,keras,tflite,caffe,onnx} platform info tensorflow_graphdef tensorflow graphdef commands tensorflow_savemodel tensorflow save_model commands keras keras commands tflite tflite commands caffe caffe commands onnx onnx commands optional arguments : -h, --help show this help message and exit \u4e0d\u540c\u5e73\u53f0\u6a21\u578b\u8f6c\u6362\u4e3aSGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u7684\u6240\u9700\u53c2\u6570\u4fe1\u606f\u7565\u6709\u4e0d\u540c\uff0c\u5982\u679c\u60f3\u8fdb\u4e00\u6b65\u4e86\u89e3\u5404\u4e2a\u5e73\u53f0\u8f6c\u6362\u6240\u9700\u8981\u7684\u53c2\u6570\u4fe1\u606f\uff0c\u53ef\u4ee5\u6267\u884c python3 ConvertTool.py {platform} \u2013h \u8fdb\u884c\u67e5\u770b\u3002 \u4e0b\u9762\u5c06\u7b80\u5355\u4ecb\u7ecd\u5404\u4e2a\u5e73\u53f0\u8f6c\u6362\u6240\u9700\u7684\u5177\u4f53\u4fe1\u606f\u548c\u67e5\u770b\u6307\u4ee4\uff1a","title":"2.2.   \u4e0d\u540c\u6846\u67b6\u6a21\u578b\u8f6c\u6362\u4e3aSGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u7684\u4f7f\u7528\u65b9\u6cd5"},{"location":"module/User_Guide/IPU230/Convert.html#221-caffe","text":"1\u3001information\uff1a python3 ConvertTool.py caffe -h usage : ConvertTool.py caffe [-h] --model_file MODEL_FILE --weight_file WEIGHT_FILE --input_config INPUT_CONFIG --output_file OUTPUT_FILE optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of tflite file containing the caffe model. --weight_file WEIGHT_FILE Full filepath of tflite file containing the caffe weight. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. 2\u3001 \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a (1) \u5fc5\u9009\u53c2\u6570\uff1a --model_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684caffe\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 --weight_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684caffe\u6743\u91cd\u6587\u4ef6\u8def\u5f84\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput config\u7684\u914d\u7f6e\u4fe1\u606f\u3002 --output_file : \u8f6c\u6362\u6a21\u578b\u7684\u8f93\u51fa\u8def\u5f84\u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a \u65e0\u3002 3\u3001 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ConvertTool.py caffe \\ --model_file ~/SGS_Models/caffe/caffe_resnet50_conv/caffe_resnet50_conv.prototxt \\ --weight_file ~/SGS_Models/caffe/caffe_resnet50_conv/caffe_resnet50_conv.caffemodel \\ --input_config ~/SGS_Models/caffe/caffe_resnet50_conv/input_config.ini \\ --output_file ./resnet50_float.sim","title":"2.2.1 caffe\u6846\u67b6\u6307\u4ee4"},{"location":"module/User_Guide/IPU230/Convert.html#222-onnx","text":"1\u3001information\uff1a python3 Path_to_SGS_IPU_SDK/Scripts/ConvertTool onnx -h usage : ConvertTool.py onnx [-h] --model_file MODEL_FILE --input_shapes INPUT_SHAPES --input_config INPUT_CONFIG --output_file OUTPUT_FILE optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of tflite file containing the onnx model. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon-separated. For many models each shape takes the form N C H W (default None) --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. 2\u3001 \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a (1) \u5fc5\u9009\u53c2\u6570\uff1a --model_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684Onnx\u6a21\u578b\u6587\u4ef6\u7684\u8def\u5f84\u3002 --input_shapes : Onnx\u6a21\u578b\u8f93\u5165shape. dimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0cshape\u4e2a\u6570\u548cinputs \u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\u3002 \u8be5\u6587\u4ef6\u4e3ainput config\u7684\u914d\u7f6e\u4fe1\u606f\u3002 --output_file : \u8f6c\u6362\u6a21\u578b\u7684\u8f93\u51fa\u8def\u5f84\u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a \u65e0\u3002 3\u3001 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ~/SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py onnx --model_file ~/SGS_Models/onnx/onnx_mobilenet_v2/onnx_mobilenet_v2.onnx \\ --input_shapes 1,3,224,224 \\ --input_config ~/SGS_Models/onnx/onnx_mobilenet_v2/input_config.ini \\ --output_file ./onnx_mobilenet_v2_float.sim Note 1.\u5982\u679connx\u6a21\u578b\u4e2d\u5e26\u6709\u540e\u5904\u7406\u7684\u7b97\u5b50\uff0c\u8bf7\u5148\u53bb\u9664\uff0c\u76ee\u524d\u53ea\u652f\u6301\u4e3b\u5e72\u7f51\u7edc\u7684\u8f6c\u6362\u3002\u5982\u679c\u662f\u7531\u5176\u4ed6\u6846\u67b6\u751f\u6210\u7684onnx\u6a21\u578b\uff0c\u8bf7\u52a1\u5fc5\u6ce8\u610f\u5728\u8f6c\u6362\u6a21\u578b\u65f6\u5173\u95ed\u751f\u6210\u540e\u5904\u7406\u7684\u9009\u9879\u3002","title":"2.2.2 Onnx\u6846\u67b6\u6307\u4ee4"},{"location":"module/User_Guide/IPU230/Convert.html#223-tflite","text":"1\u3001information\uff1a python3 ConvertTool.py tflite -h usage : ConvertTool.py tflite [-h] --model_file MODEL_FILE --input_config INPUT_CONFIG --output_file OUTPUT_FILE optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of tflite file containing the tflite model. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. 2\u3001 \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a (1) \u5fc5\u9009\u53c2\u6570\uff1a --model_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 \u8f93\u5165\u7684\u6a21\u578b\u4e3atflite\u683c\u5f0f\u6587\u4ef6\u8def\u5f84(\u5fc5\u987b\u4e3a\u975e\u91cf\u5316\u6a21\u578b)\u3002 --output_file : \u6307\u5b9a\u8f93\u51fa\u7684\u6a21\u578b\u6587\u4ef6\u3002 flatbuffer\u683c\u5f0f\uff0csim\u540e\u7f00\u6587\u4ef6\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\u3002 \u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a \u65e0\u3002 3\u3001 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ConvertTool.py tflite \\ --model_file ~/test/tensorflow_model/Debug_save_model_float.tflite \\ --input_config ~/test/tensorflow_model/input_config.ini \\ --output_file ~/test/tensorflow_model/save_model_float.sim","title":"2.2.3 tflite\u6846\u67b6\u6307\u4ee4"},{"location":"module/User_Guide/IPU230/Convert.html#224-tensorflow_savemodel","text":"1\u3001information\uff1a python3 ConvertTool.py tensorflow_savemodel -h usage : ConvertTool.py tensorflow_savemodel [-h] --saved_model_dir SAVED_MODEL_DIR --input_config INPUT_CONFIG --output_file OUTPUT_FILE --input_shapes INPUT_SHAPES (optional) --tag_set TAG_SET (optional) --signature_key SIGNATURE_KEY (optional) optional arguments : -h, --help show this help message and exit. --saved_model_dir SAVED_MODEL_DIR SavedModel directory to convert. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. --debug Run gdb in Debug mode. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth Default : None. --tag_set TAG_SET Set of tags identifying the MetaGraphDef within the SavedModel to analyze. All tags in the tag set must be present. Default : None. --signature_key SIGNATURE_KEY Key identifying SignatureDef containing inputs and outputs. Default : DEFAULT_SERVING_SIGNATURE_DEF_KEY 2\u3001 \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a (1) \u5fc5\u9009\u53c2\u6570\uff1a --saved_model_dir : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 \u8f93\u5165\u7684\u6a21\u578b\u4e3aTensorFlow saved_model.builder\u751f\u6210\u7684\u6587\u4ef6\u8def\u5f84\u3002 --output_file : \u6307\u5b9a\u8f93\u51fa\u7684\u6a21\u578b\u6587\u4ef6\u3002 flatbuffer\u683c\u5f0f\uff0c\u9700\u662fsim\u540e\u7f00\u6587\u4ef6\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\u3002 \u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a --input_shapes : \u7f51\u7edc\u8f93\u5165Tensor\u7684shape\u3002 \u683c\u5f0f\u4e3aNHWC\uff0cdimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0cshape\u4e2a\u6570\u548cinputs \u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002\u82e5\u4e0d\u6307\u5b9a\u5219\u4ecesaved_model_dir\u4e2d\u83b7\u53d6\u3002 --tag_set : \u9700\u8981\u548csave model\u65f6\u6240\u6307\u5b9a\u7684tag\u5339\u914d\u3002 \u5982\u679c\u4e0d\u505a\u8bbe\u5b9a\uff0c\u5219\u9ed8\u8ba4\u4e3a\u2018serve\u2019\u3002 --signature_key : \u9700\u8981\u548csave model\u65f6\u6240\u6307\u5b9a\u7684signature\u5339\u914d\u3002 \u5982\u679c\u4e0d\u505a\u8bbe\u5b9a\uff0c\u5219\u9ed8\u8ba4\u4e3a \u2018DEFAULT_SERVING_SIGNATURE_DEF_KEY\u2019 3\u3001 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ConvertTool.py tensorflow_savemodel \\ --saved_model_dir ~/test/tensorflow_model/save_model \\ --input_config ~/test/tensorflow_model/input_config.ini \\ --output_file ~/test/tensorflow_model/save_model_float.sim \\ --tag_set test_saved_model \\ --signature_key test_signature","title":"2.2.4 tensorflow_savemodel \u6846\u67b6\u6307\u4ee4"},{"location":"module/User_Guide/IPU230/Convert.html#225-tensorflow_graphdef","text":"1\u3001information\uff1a python3 ConvertTool.py tensorflow_graphdef -h usage : ConvertTool.py tensorflow_graphdef [-h] --graph_def_file GRAPH_DEF_FILE --input_config INPUT_CONFIG --output_file OUTPUT_FILE --input_shapes INPUT_SHAPES (optional) optional arguments : -h, --help show this help message and exit. --graph_def_file GRAPH_DEF_FILE Full filepath of file containing frozen GraphDef. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated.For many models each shape takes the form batch size, input array height, input array width, input array depth. Default : None 2\u3001 \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a (1) \u5fc5\u9009\u53c2\u6570\uff1a --graph_def_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684\u8f93\u5165\u6a21\u578b\u8def\u5f84\u3002 \u4e3aTensorFlow frozen\u7684graphdef\u7684pb\u683c\u5f0f\u6587\u4ef6\u8def\u5f84\u3002 --output_file : \u6307\u5b9a\u751f\u6210\u7684\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u540d\u3002 flatbuffer\u683c\u5f0f\uff0c\u9700\u4ee5sim\u540e\u7f00\u547d\u540d\u6587\u4ef6\u3002 --input_shapes : \u6307\u5b9a\u7f51\u7edc\u8f93\u5165Tensor\u7684shape\u3002 \u683c\u5f0f\u4e3aNHWC\uff0cdimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff1b\u9700\u6ce8\u610fshape\u4e2a\u6570\u548cinputs\u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\u3002 \u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a \u65e0\u3002 3\u3001 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ConvertTool.py tensorflow_graphdef \\ --graph_def_file ~/SGS_Models/tensorflow/resnet_v2_50/resnet_v2_50.pb \\ --output_file ./resnet_v2_float.sim \\ --input_shapes 1,299,299,3 \\ --input_config ~/SGS_Models/tensorflow/resnet_v2_50/input_config.ini","title":"2.2.5 tensorflow_graphdef \u6846\u67b6\u6307\u4ee4"},{"location":"module/User_Guide/IPU230/Convert.html#226-keras","text":"1\u3001information\uff1a python3 ConvertTool.py keras -h usage : ConvertTool.py keras [-h] --model_file MODEL_FILE --input_config INPUT_CONFIG --output_file OUTPUT_FILE --input_shapes INPUT_SHAPES (optional) --custom_objects CUSTOM_OBJECTS (optional) optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of HDF5 file containing the tf.keras model. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth. Default : None. --custom_objects CUSTOM_OBJECTS Dict mapping names (strings) to custom classes or functions to be considered during model deserialization. Default : None. 2\u3001 \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a (1) \u5fc5\u9009\u53c2\u6570\uff1a --model_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 \u8f93\u5165\u7684\u6a21\u578b\u4e3akeras h5\u683c\u5f0f\u6587\u4ef6\u8def\u5f84\u3002 --output_file : \u6307\u5b9a\u8f93\u51fa\u7684\u6a21\u578b\u6587\u4ef6\u3002 flatbuffer\u683c\u5f0f\uff0c\u9700\u662fsim\u540e\u7f00\u6587\u4ef6\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\u3002 \u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a --input_shapes : \u7f51\u7edc\u8f93\u5165Tensor\u7684shape\u3002 \u683c\u5f0f\u4e3aNHWC\uff0cdimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0cshape\u4e2a\u6570\u548cinputs \u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002 --custom_objects : Dict mapping names (strings) to custom classes or functions to be considered during model deserialization (default None). 3\u3001 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ConvertTool.py keras \\ --model_file ./TEST_h5/resnet50/resnet50.h5 \\ --input_config ./TEST_h5/resnet50/input_config.ini \\ --output_file ./TEST_h5/resnet50/resnet50_float.sim","title":"2.2.6 keras\u6846\u67b6\u6307\u4ee4"},{"location":"module/User_Guide/IPU230/Convert.html#23-input-config","text":"\u59822.2\u8282\u6240\u793a\uff0c\u5404\u5e73\u53f0\u6a21\u578b\u5728\u8f6c\u6362\u4e3aSGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u7684\u6307\u4ee4\u4e2d\u90fd\u9700\u4f7f\u7528\u5fc5\u9009\u53c2\u6570 --input_config \uff0c\u7528\u4e8e\u6307\u5b9ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u6587\u4ef6input_config.ini\u8def\u5f84\uff0c\u4e0b\u9762\u5c06\u5bf9\u8be5\u6587\u4ef6\u8fdb\u884c\u4ecb\u7ecd\uff1a (1) \u8be5\u6587\u4ef6\u7684\u4e3b\u8981\u529f\u80fd\u6709\uff1a \u2022 \u914d\u7f6e\u7f51\u7edc\u6a21\u578b\u56fe\u7247\u524d\u5904\u7406\u7684\u5f52\u4e00\u5316\u4fe1\u606f\uff1b \u2022 \u914d\u7f6e\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u8f93\u51fa\u7684\u91cf\u5316\u5904\u7406\u4fe1\u606f\uff1b \u2022 \u914d\u7f6e\u7f51\u7edc\u6a21\u578b\u4e2d\u5377\u79ef\u7684\u91cf\u5316\u4fe1\u606f\u3002 [\u8865\u5145\u8bf4\u660e] \u2460 \u914d\u7f6einput_config.ini\u6587\u4ef6\u4e3b\u8981\u662f\u4e3a\u4e86\u80fd\u5c06\u7f51\u7edc\u6a21\u578b\u5feb\u901f\u9002\u914d\u5230SigmaStar\u82af\u7247\u4e2d\u4f7f\u7528\u3002\u5728\u7f51\u7edc\u6a21\u578b\u7684\u8bad\u7ec3\u4e2d\uff0c\u4e0d\u540c\u7684\u6846\u67b6\u548c\u8bad\u7ec3\u6570\u636e\u96c6\u9700\u8981\u7f51\u7edc\u4f7f\u7528\u4e0d\u540c\u7684\u56fe\u7247\u5f52\u4e00\u5316\u65b9\u6cd5\uff0c\u800c\u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0c\u4e3a\u4e86\u80fd\u591f\u8ba9\u7f51\u7edc\u6a21\u578b\u7684\u9884\u6d4b\u66f4\u52a0\u51c6\u786e\uff0c\u9700\u8981\u8fd8\u539f\u8bad\u7ec3\u6a21\u578b\u65f6\u7684\u56fe\u7247\u524d\u5904\u7406\u5f52\u4e00\u5316\u65b9\u6cd5\u3002 \u2461 \u5c06RGB\u4e09\u4e2a\u901a\u9053\u7684\u5747\u503c\u548cstd_value\u8bbe\u7f6e\u597d\u540e\uff0c\u5728\u8f6c\u6362\u6a21\u578b\u65f6\u4f1a\u5199\u5165\u5230\u6a21\u578b\u5185\u90e8\uff0c\u8fd9\u6837\u5728\u786c\u4ef6\u4e0a\u5b9e\u9645\u4f7f\u7528\u65f6\uff0c\u4ec5\u9700\u8981\u5c06\u56fe\u7247resize\u5230\u7f51\u7edc\u6a21\u578b\u7684\u8f93\u5165\u7684\u5c3a\u5bf8\uff0c\u56fe\u7247\u5f52\u4e00\u5316\u7684\u5de5\u4f5c\u5728\u7f51\u7edc\u5185\u90e8\u5b8c\u6210\u3002 \u2462 \u5b9e\u9645\u786c\u4ef6\u4e0a\u4f7f\u7528\u65f6\u56fe\u7247\u8f93\u5165\u683c\u5f0f\u4e0e\u8bad\u7ec3\u65f6\u4f7f\u7528\u7684RGB\u53ef\u80fd\u6709\u5f88\u5927\u533a\u522b\uff0c\u6b63\u786e\u914d\u7f6e\u8fd9\u4e9b\u9009\u9879\u80fd\u4f7f\u8f6c\u6362\u597d\u7684\u6a21\u578b\u5185\u62e5\u6709\u8fd9\u4e9b\u914d\u7f6e\u4fe1\u606f\uff0c\u80fd\u591f\u76f4\u63a5\u5728SigmaStar\u7684\u786c\u4ef6\u4e0a\u90e8\u7f72\u3002 (2) \u8be5\u6587\u4ef6\u9700\u8bbe\u7f6e\u4fe1\u606f\u793a\u4f8b\uff1a [INPUT_CONFIG] ;Names of the input arrays, comma-separated.image input must be the first. inputs = 'data'; ;Memory formats of input arrays, comma-separated. ;One of RGB, BGR, RGBA, BGRA, YUV_NV12, RAWDATA_S16_NHWC ;Each entry in the list should match an entry in inputs arrays. training_input_formats = BGR; input_formats = BGR; ;Indicate the input data need qauntize or not. ;Each entry in the list should match an entry in inputs arrays. quantizations = TRUE; ;mean_values parameter for image models, ;Each entry in the list match RGB channel of\uff08RGB,BGR,RGBA,BGRA,YUV_NV12\uff09, channel order is R,G,B. mean = 127.5:127.5:127.5; ;std_value parameter for image models, std_value = 1.0; [OUTPUT_CONFIG] ;Names of the output arrays, comma-separated. outputs = 'prob'; ;Indicate the output data need deqauntize or not. ;Each entry in the list should match an entry in outputs arrays. dequantizations = TRUE; [CONV_CONFIG] ;input_format=ALL_INT16; tensor_arrays = 'conv1-1,conv2-1'; \u8be5\u6587\u4ef6\u4e3b\u8981\u5206\u4e3a\u4e09\u4e2a\u8bbe\u7f6e\u4fe1\u606f\uff1a [INPUT_CONFIG] // \u914d\u7f6e\u7f51\u7edc\u6a21\u578b\u56fe\u7247\u524d\u5904\u7406\u7684\u5f52\u4e00\u5316\u4fe1\u606f [OUTPUT_CONFIG] // \u914d\u7f6e\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u8f93\u51fa\u7684\u91cf\u5316\u5904\u7406\u4fe1\u606f [CONV_CONFIG] // \u914d\u7f6e\u7f51\u7edc\u6a21\u578b\u4e2d\u5377\u79ef\u7684\u91cf\u5316\u4fe1\u606f \u4e0b\u9762\u9488\u5bf9\u8fd9\u4e09\u4e2a\u8bbe\u7f6e\u4fe1\u606f\u5177\u4f53\u8bf4\u660e\uff1a","title":"2.3. input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e"},{"location":"module/User_Guide/IPU230/Convert.html#231-input_config","text":"(1) inputs : \u7f51\u7edc\u8f93\u5165Tensor\u7684name\u3002 \u4f7f\u7528\u987b\u77e5 \u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u8bf7\u7528\u9017\u53f7( , )\u5206\u9694\u3002\u6a21\u578b\u8f93\u5165Tensor\u6570\u91cf\u548c\u987a\u5e8f\u4e0e inputs \u7684\u914d\u7f6e\u4e00\u81f4\u3002 \u6240\u6709\u8f93\u5165name\u7684\u957f\u5ea6\u4e0d\u80fd\u8d85\u8fc71024\u4e2a\u5b57\u7b26\u3002 String\u7c7b\u578b\u7684\u503c\uff0c\u5982tensor name\uff0c\u9700\u7528('')\u5c06\u5185\u5bb9\u5305\u542b\u8d77\u6765\uff0c\u4f8b\u5982inputs='detectionBoxes,detectionClasses,detectionScores,numDetections'; (2) training_input_formats : \u7f51\u7edc\u8bad\u7ec3\u65f6\u7684\u56fe\u7247\u683c\u5f0f\u3002 \u4f7f\u7528\u987b\u77e5 \u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u8bf7\u7528\u9017\u53f7( , )\u5206\u9694\u3002\u6a21\u578b\u8f93\u5165Tensor\u6570\u91cf\u548c\u987a\u5e8f\u4e0e inputs \u7684\u914d\u7f6e\u4e00\u81f4\u3002 \u53ef\u9009\u56fe\u7247\u683c\u5f0f\u5305\u62ec\uff1a RGB BGR RAWDATA_S16_NHWC RAWDATA_F32_NHWC GRAY (3) input_formats : \u7f51\u7edc\u6a21\u578b\u5728SigmaStar\u82af\u7247\u4e0a\u8fd0\u884c\u7684\u56fe\u7247\u8f93\u5165\u683c\u5f0f\u3002 \u4f7f\u7528\u987b\u77e5 \u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u8bf7\u7528\u9017\u53f7( , )\u5206\u9694\u3002\u6a21\u578b\u8f93\u5165Tensor\u6570\u91cf\u548c\u987a\u5e8f\u4e0e inputs \u7684\u914d\u7f6e\u4e00\u81f4\u3002 \u53ef\u9009\u56fe\u7247\u683c\u5f0f\u5305\u62ec\uff1a RGB BGR RGBA BGRA YUV_NV12 RAWDATA_F32_NHWC RAWDATA_S16_NHWC GRAY \u82e5 training_input_formats \u8bbe\u7f6e\u4e3a RAWDATA_S16_NHWC ,\u5219 input_formats \u4e5f\u5fc5\u987b\u8bbe\u7f6e\u4e3a RAWDATA_S16_NHWC \u3002 training_input_formats\u53ef\u4ee5\u548cinput_formats \u4e0d\u4e00\u6837\u3002\u4f8b\u5982\u5728\u5728SigmaStar\u5f00\u53d1\u677f\u4e0a\uff0cinput_formats\u662fYUV_NV12\uff0c\u4f46\u662ftraining input formats \u662fRGB\u3002 \u66f4\u8be6\u7ec6\u7684 training_input_formats \u548c input_formats \u5bf9\u5e94\u5173\u7cfb\u8bf7\u53c2\u8003 \u8f93\u5165\u8f93\u51fa\u914d\u7f6e\u603b\u7ed3 training_input_formats \u548c input_formats \u4e0d\u80fd\u914d\u7f6e\u4e3a\u5982\u4e0b\u60c5\u51b5\uff1a training_input_formats=RGB; input_formats=BGR;(\u9519\u8bef\u914d\u7f6e) training_input_formats=BGR; input_formats=RGB;(\u9519\u8bef\u914d\u7f6e) \u7070\u5ea6\u56fe\u7247\u8bf7\u6309\u5982\u4e0b\u65b9\u5f0f\u914d\u7f6e\uff1a training_input_formats=GRAY; input_formats=YUV_NV12; \u5177\u4f53\u8be6\u89c1 \u7070\u5ea6\u6a21\u578b\u8f6c\u6362\u8981\u70b9 \u914d\u7f6e RAWDATA_F32_NHWC \u6216 RAWDATA_S16_NHWC \u65f6\uff0c mean \u548c std_value \u4e0d\u8981\u914d\u7f6e\uff0c\u5177\u4f53\u8be6\u89c1 RAWDATA_F32_NHWC\u6a21\u578b\u8f6c\u6362\u8981\u70b9 (4) quantizations : \u7528\u6765\u6807\u8bc6\u6240\u6709\u8f93\u5165Tensor\u7684\u6570\u636e\u662f\u5426\u9700\u8981\u505a\u91cf\u5316\uff0cTRUE\u6216\u8005FALSE\uff0c\u9ed8\u8ba4\u503c\u4e3aTRUE\u3002 \u4f7f\u7528\u987b\u77e5 \u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u8bf7\u7528\u9017\u53f7( , )\u5206\u9694\u3002\u6a21\u578b\u8f93\u5165Tensor\u6570\u91cf\u548c\u987a\u5e8f\u4e0e inputs \u7684\u914d\u7f6e\u4e00\u81f4\u3002 (5) mean : \u7f51\u7edc\u8bad\u7ec3\u9636\u6bb5\u7528\u6765\u5bf9\u56fe\u7247\u8fdb\u884c\u524d\u5904\u7406\u3002 \u4f7f\u7528\u987b\u77e5 \u5bf9\u4e8eRGB\u901a\u9053\u7684\u56fe\u7247\uff0c\u4f7f\u7528\u516c\u5f0f (RGB - [mean_red, mean_green, mean_green])/std_value \u5bf9\u56fe\u7247\u8fdb\u884c\u9884\u5904\u7406\u3002 mean_red:mean_green:mean_blue \u5c31\u662f\u76f8\u5e94\u901a\u9053\u4e0a\u7684mean\u503c\u3002\u5982\u679c\u8fd9\u4e2a\u7f51\u7edc\u6ca1\u6709\u505a\u4efb\u4f55\u5f52\u4e00\u5316\u5904\u7406\uff0c\u8fd9\u4e2a\u503c\u8bbe\u4e3a0\u5373\u53ef\u3002 \u6bcf\u4e2amean\u6570\u91cf\u7b49\u4e8einputs \u4e2a\u6570\u3002\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 (6) std_value : \u7f51\u7edc\u8bad\u7ec3\u9636\u6bb5\u7528\u6765\u5bf9\u56fe\u7247\u8fdb\u884c\u524d\u5904\u7406\u3002 \u4f7f\u7528\u987b\u77e5 \u5bf9\u4e8eRGB\u901a\u9053\u7684\u56fe\u7247\uff0c\u4f7f\u7528\u516c\u5f0f (RGB - [mean_red, mean_green, mean_green])/std_value \u5bf9\u56fe\u7247\u8fdb\u884c\u9884\u5904\u7406\u3002 \u5982\u679c\u6ca1\u6709\u505a\u4efb\u4f55\u5f52\u4e00\u5316\u5904\u7406\uff0c\u8fd9\u4e2a\u503c\u8bbe\u4e3a1\u5373\u53ef\u3002 \u5982\u679c\u6bcf\u4e2a\u901a\u9053\u90fd\u6709\u5bf9\u5e94\u7684 std_value \u503c\uff0c\u4ee5\u82f1\u6587\u5192\u53f7( : )\u5206\u9694\uff0c\u987a\u5e8f\u4e3aRGB\u3002 \u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 (7) input_width_alignment \uff1a\u7528\u6765\u6807\u8bc6\u6570\u636e\u4f5c\u4e3a\u7f51\u7edc\u8f93\u5165\u65f6Width\u65b9\u5411\u5bf9\u9f50\u7684\u6570\u91cf\uff0c\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 (8) input_height_alignment \uff1a\u7528\u6765\u6807\u8bc6\u6570\u636e\u4f5c\u4e3a\u7f51\u7edc\u8f93\u5165\u65f6Height\u65b9\u5411\u5bf9\u9f50\u7684\u6570\u91cf\uff0c\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 \u4f7f\u7528\u987b\u77e5 \u5f53input_formats\u8bbe\u5b9a\u4e3aYUV_NV12\u65f6\uff0c input_width_alignment \u548c input_height_alignment \u9ed8\u8ba4\u503c\u4e3a2\uff0c\u5176\u4f59\u60c5\u51b5\u9ed8\u8ba4\u503c\u4e3a1\u3002 \u677f\u4e0a\u8fd0\u884c\u65f6\u6570\u636e\u5bf9\u9f50\u65b9\u5f0f\u8be6\u89c1 \u8f93\u5165\u8f93\u51fa\u914d\u7f6e\u603b\u7ed3 (9) input_layouts : \u7528\u6765\u6807\u8bc6\u8f93\u5165Tensor\u7684\u6570\u636e\u6392\u5e03\u683c\u5f0f\u3002 \u4f7f\u7528\u987b\u77e5 \u53ef\u9009\u6570\u636e\u6392\u5e03\u683c\u5f0f\u5305\u62ec\uff1a NCHW: NCHW \u8868\u793a\u5bf9\u5e94\u987a\u5e8f\u7684inputTensor\u82e5\u662f\u56db\u7ef4\u5219\u6309\u7167NCHW\u7684\u6570\u636e\u683c\u5f0f\u6392\u5e03\uff08\u4e0ecaffe/onnx\u539f\u6a21\u578b\u76f8\u540c\uff09 NHWC: NHWC \u8868\u793a\u5bf9\u5e94\u987a\u5e8f\u7684inputTensor\u82e5\u662f\u56db\u7ef4\u5219\u6309\u7167NHWC\u7684\u683c\u5f0f\u6392\u5e03\uff08\u9ed8\u8ba4\u683c\u5f0f\uff09\u3002 \u5982\u679c\u4e0d\u8bbe\u7f6e\u8be5\u9879\uff0c\u5c06\u9ed8\u8ba4\u6570\u636e\u6392\u5e03\u683c\u5f0f\u4e3a NHWC \u3002 \u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7\uff08,\uff09\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002\u6570\u91cf\u7b49\u4e8einputs\u4e2a\u6570\uff0c\u6a21\u578b\u8f93\u5165Tensor\u987a\u5e8f\u4e0e input_layouts \u7684\u914d\u7f6e\u987a\u5e8f\u4e00\u81f4\u3002 \u5f53\u8f93\u5165\u7684 input_layouts \u8bbe\u4e3a NCHW \u4e14\u662f\u56db\u7ef4Tensor\uff0c\u9700\u8981\u786e\u4fdd\u8be5\u8f93\u5165\u5bf9\u5e94\u7684\u524d\u5904\u7406\u811a\u672c\u8fd4\u56de\u6570\u636e\u4e5f\u6309\u7167NCHW\u6392\u5e03\uff0c\u4e14\u677f\u7aef\u8fd0\u884c\u79bb\u7ebf\u6a21\u578b\u65f6\u7684\u8f93\u5165\u6570\u636e\u6392\u5e03\u4e5f\u6309\u7167NCHW\u6392\u5e03\u3002 \u5f53input_formats\u8bbe\u5b9a\u4e3aYUV_NV12\u4e14\u8be5\u8f93\u5165 input_layouts \u8bbe\u4e3a NCHW \uff0c\u524d\u5904\u7406\u811a\u672c\u9700\u8981\u6309\u7167 training_input_formats \uff08BGR\u3001RGB\u3001GRAY\uff09\u8fd4\u56deNCHW\u6392\u5e03\u7684\u6570\u636e\uff0c\u800c\u5728\u677f\u7aef\u8fd0\u884c\u79bb\u7ebf\u6a21\u578b\u65f6\u7684\u8f93\u5165\u6570\u636e\u4e3a\u6b63\u5e38\u6392\u5e03\u7684YUV_NV12\u3002 \u5f53input_formats\u8bbe\u5b9a\u4e3aRGBA\u3001BGRA\u65f6\uff0c\u4e0d\u652f\u6301 input_layouts \u8bbe\u4e3a NCHW \u3002","title":"2.3.1 INPUT_CONFIG"},{"location":"module/User_Guide/IPU230/Convert.html#232-output_config","text":"(1) outputs : \u7f51\u7edc\u8f93\u51faTensor\u7684name(\u53ef\u7528Netron\u5de5\u5177\u6253\u5f00\u6a21\u578b\u67e5\u770b)\u3002 \u4f7f\u7528\u987b\u77e5 \u5982\u679c\u6709\u591a\u4e2a\u8f93\u51faTensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u3002 \u6a21\u578b\u8f93\u51faTensor\u987a\u5e8f\u4e0e outputs \u7684\u914d\u7f6e\u987a\u5e8f\u4e00\u81f4\u3002 \u6240\u6709\u8f93\u51faname\u7684\u957f\u5ea6\u4e0d\u80fd\u8d85\u8fc71024\u4e2a\u5b57\u7b26\u3002 String\u7c7b\u578b\u7684\u503c\uff0c\u5982tensor name\uff0c\u9700\u7528('')\u5c06\u5185\u5bb9\u5305\u542b\u8d77\u6765\uff0c\u4f8b\u5982outputs='detectionBoxes,detectionClasses,detectionScores,numDetections'; \u8f6c\u6362\u5e26\u540e\u5904\u7406\u7f51\u7edc\u65f6\uff0cBackbone\u7f51\u7edc\u7684outputs\u4e0e\u5b8c\u6574\u7f51\u7edcoutputs\u7684\u540d\u79f0\u4e0d\u540c\uff0c\u5176\u4f59\u8bbe\u7f6e\u5e94\u5b8c\u5168\u4e00\u81f4\u3002 (2) dequantizations : \u7528\u6765\u6807\u8bc6\u6240\u6709\u8f93\u51faTensor\u7684\u6570\u636e\u662f\u5426\u9700\u8981\u505a\u53cd\u91cf\u5316\uff0cTRUE\u6216\u8005FALSE\uff0c\u9ed8\u8ba4\u503c\u4e3aTRUE\u3002 \u4f7f\u7528\u987b\u77e5 \u6570\u91cf\u7b49\u4e8eoutputs\u3002\u5982\u679c\u6709\u591a\u4e2a\u8f93\u51faTensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 \u8be5\u9009\u9879\u4ec5\u5728\u677f\u4e0a\u8fd0\u884c\u65f6\u751f\u6548\u3002\u8be5\u9009\u9879\u8bbe\u4e3aTRUE\u65f6\uff0c\u4f1a\u5728\u8f6c\u6362\u5230Fixed\u6a21\u578b\u540e\u5728\u5bf9\u5e94\u7684\u8f93\u51fa\u589e\u52a0Fix2float\u7b97\u5b50\uff0c\u5b8c\u6210\u8f93\u51fa\u6570\u636e\u4e58scale\u8f6c\u6362\u6210float\u7684\u64cd\u4f5c\u3002 \u5982\u679c\u914d\u7f6e dequantizations \u4e3aTRUE\uff0c\u751f\u6210\u7684\u6a21\u578b\u5bf9\u5e94\u8f93\u51fa\u4f1a\u589e\u52a0Fix2Float\u7b97\u5b50\uff0c\u8f93\u51fa\u6570\u636e\u7c7b\u578b\u4e3afloat32\uff0c\u6570\u636e\u4e0e\u8f93\u51fashape\u4e00\u81f4\uff0c\u6ca1\u6709\u5bf9\u9f50\u8981\u6c42\u3002 \u5982\u679c\u914d\u7f6e dequantizations \u4e3aFALSE\uff0c\u5728\u677f\u7aef\u8fd0\u884c\u65f6\u8f93\u51fa\u6570\u636e\u7c7b\u578b\u4e3aint16\uff0c\u6570\u636e\u4e0e\u8f93\u51fashape\u4e00\u81f4\uff0c\u6ca1\u6709\u5bf9\u9f50\u8981\u6c42\u3002 (3) output_layouts : \u7528\u6765\u6807\u8bc6\u8f93\u51faTensor\u7684\u6570\u636e\u6392\u5e03\u683c\u5f0f\u3002 \u4f7f\u7528\u987b\u77e5 \u53ef\u9009\u6570\u636e\u6392\u5e03\u683c\u5f0f\u5305\u62ec\uff1a NCHW: NCHW \u8868\u793a\u5bf9\u5e94\u987a\u5e8f\u7684outputTensor\u82e5\u662f\u56db\u7ef4\u5219\u6309\u7167NCHW\u7684\u6570\u636e\u683c\u5f0f\u6392\u5e03\uff08\u4e0ecaffe/onnx\u539f\u6a21\u578b\u76f8\u540c\uff09 NHWC: NHWC \u8868\u793a\u5bf9\u5e94\u987a\u5e8f\u7684outputTensor\u82e5\u662f\u56db\u7ef4\u5219\u6309\u7167NHWC\u7684\u683c\u5f0f\u6392\u5e03\uff08\u9ed8\u8ba4\u683c\u5f0f\uff09\u3002 \u5982\u679c\u4e0d\u8bbe\u7f6e\u8be5\u9879\uff0c\u5c06\u9ed8\u8ba4\u6570\u636e\u6392\u5e03\u683c\u5f0f\u4e3a NHWC \u3002 \u5982\u679c\u6709\u591a\u4e2a\u8f93\u51faTensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7\uff08,\uff09\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002\u6570\u91cf\u7b49\u4e8eoutputs\u4e2a\u6570\uff0c\u6a21\u578b\u8f93\u51faTensor\u987a\u5e8f\u4e0e output_layouts \u7684\u914d\u7f6e\u987a\u5e8f\u4e00\u81f4\u3002","title":"2.3.2 OUTPUT_CONFIG"},{"location":"module/User_Guide/IPU230/Convert.html#233-conv_config","text":"(1) input_format : \u6307\u5b9a\u7f51\u7edc\u4e2d\u6240\u6709\u5377\u79ef\u7684\u91cf\u5316\u65b9\u5f0f\u3002 \u4f7f\u7528\u987b\u77e5 \u9ed8\u8ba4\u4f7f\u7528 CalibrateTool \u63a8\u8350\u7684\u91cf\u5316\u65b9\u5f0f\uff0c\u82e5\u4e0d\u60f3\u4f7f\u7528\u63a8\u8350\u65b9\u5f0f\uff0c\u53ef\u9009\u65b9\u6848ALL_UINT8\uff0cALL_INT16\uff0c CONV2D_INT16\uff0cDEPTHWISE_INT16\u3002\u914d\u7f6e\u540e\u5c06\u4f18\u5148\u4f7f\u7528\u5df2\u9009\u65b9\u6848\u4e0d\u518d\u8d70\u63a8\u8350\u91cf\u5316\u3002 ALL_UINT8 : \u6307\u5b9a\u6240\u6709\u5377\u79ef\u6309\u7167UINT8\u91cf\u5316\u3002 ALL_INT16 : \u6307\u5b9a\u6240\u6709\u5377\u79ef\u6309\u7167INT16\u91cf\u5316\u3002 CONV2D_INT16 : \u53ea\u6307\u5b9a\u6240\u6709\u666e\u901a\u5377\u79ef\u6309\u7167INT16\u91cf\u5316\u3002 DEPTHWISE_INT16 : \u53ea\u6307\u5b9a\u6240\u6709Depthwise \u5377\u79ef\u6309\u7167INT16\u91cf\u5316\u3002 \u5728 ALL_UINT8 \u6a21\u5f0f \u4e0b\uff0c\u5377\u79ef\u8fd0\u884c\u6240\u5360\u5e26\u5bbd\u5c0f\uff0c\u8fd0\u884c\u901f\u5ea6\u5feb\uff1b\u5728 ALL_INT16 \u6a21\u5f0f \u4e0b\uff0c\u53ef\u4ee5\u6781\u5927\u7684\u63d0\u9ad8\u5377\u79ef\u7684\u7cbe\u5ea6\uff0c\u4f46\u662f\u8fd0\u884c\u7684\u901f\u5ea6\u4f1a\u6709\u5f71\u54cd\u3002 (2) tensor_arrays : \u6307\u5b9a\u7f51\u7edc\u4e2d\u67d0\u4e9b\u5c42\u7684\u5377\u79ef\u91cf\u5316\u65b9\u5f0f\u3002 \u4f7f\u7528\u987b\u77e5 \u6574\u4e2a\u7f51\u7edc\u5377\u79ef\u90fd\u91c7\u7528\u9ed8\u8ba4\u7684UINT8 \uff0c\u4f46\u662f\u67d0\u4e9b\u5377\u79ef\u5c42\u9700\u8981\u66f4\u9ad8\u7684\u7cbe\u5ea6\uff0c\u8fd9\u65f6\u76f4\u63a5\u586b\u5199\u90a3\u4e9b\u5377\u79ef\u5c42\u7684\u7b2c\u4e00\u4e2a\u8f93\u5165\u7684 input id name\u5373\u53ef\u3002\u591a\u5c42\u65f6\uff0cname\u4ee5\u9017\u53f7( , )\u5206\u9694\u3002 \u5377\u79ef\u7b2c\u4e00\u4e2a\u8f93\u5165\u7684input id\u540d\u5b57\u53ef\u901a\u8fc7netron\u5de5\u5177\u67e5\u770b\u3002\u6307\u5b9a\u91cf\u5316\u65f6\uff0c\u7f51\u7edc\u4e2d\u7684\u7b2c\u4e00\u5c42\u5377\u79ef\u4e0d\u751f\u6548\u3002","title":"2.3.3 CONV_CONFIG"},{"location":"module/User_Guide/IPU230/Convert.html#234","text":"training_input_formats input_formats \u677f\u4e0a\u8fd0\u884c\u65f6\u6570\u636e\u5bf9\u9f50\u65b9\u5f0f RGB/BGR RGB/BGR \u4e0d\u7528\u5bf9\u9f50 RGB/BGR RGBA/BGRA W = ALIGN_UP(W * 4, input_width_alignment ) / 4 input_width_alignment \u9ed8\u8ba4\u4e3a1 RGB/BGR/GRAY YUV_NV12 H = ALIGN_UP(H, input_height_alignment ) input_height_alignment \u9ed8\u8ba4\u4e3a2 W = ALIGN_UP(W, input_width_alignment ) input_width_alignment \u9ed8\u8ba4\u4e3a2 GRAY GRAY H = ALIGN_UP(H, input_height_alignment ) input_height_alignment \u9ed8\u8ba4\u4e3a1 W = ALIGN_UP(W, input_width_alignment ) input_width_alignment \u9ed8\u8ba4\u4e3a1 RAWDATA_F32_NHWC RAWDATA_F32_NHWC \u4e0d\u7528\u5bf9\u9f50 RAWDATA_S16_NHWC RAWDATA_S16_NHWC \u4e0d\u7528\u5bf9\u9f50","title":"2.3.4 \u8f93\u5165\u8f93\u51fa\u914d\u7f6e\u603b\u7ed3"},{"location":"module/User_Guide/IPU230/DLA_SDK_Auxiliary_Tool.html","text":"1. DLA SDK\u8f85\u52a9\u5de5\u5177\u4f7f\u7528\u8bf4\u660e \u00b6 \u5de5\u5177 \u5de5\u5177\u8def\u5f84 \u5de5\u5177\u4f5c\u7528 \u6ce8\u610f\u4e8b\u9879 Offline\u6a21\u578b\u4fe1\u606f\u67e5\u770b\u5de5\u5177 SGS_IPU_SDK/DumpDebug/show_img_info.py \u67e5\u770bOffline\u6a21\u578b\u4fe1\u606f IPU Log\u6027\u80fd\u5206\u6790\u5de5\u5177 SGS_IPU_SDK/Scripts/example/performance_timeline.py \u5206\u6790Offline\u6a21\u578b\u6027\u80fd \u9700\u914d\u5408 SGS_IPU_SDK/cfg/IpuConfigS.ini \u6587\u4ef6\u540e\u91cd\u65b0\u8f6c\u6362\u539f\u59cb\u6a21\u578b\u5230\u79bb\u7ebf\u6a21\u578b IPU\u7f51\u7edc\u6a21\u578b\u6570\u636e\u5bf9\u6bd4\u5206\u6790\u5de5\u5177 SGS_IPU_SDK/DumpDebug/auto_dump_debug.sh \u5bf9\u6bd4\u5206\u6790\u539f\u6a21\u578b/float/fix\u5404\u9636\u6bb5\u6a21\u578b\u6570\u636e \u9700\u914d\u5408 DumpDebugTool \u5de5\u5177\u4f7f\u7528 1.1 Offline\u6a21\u578b\u4fe1\u606f\u67e5\u770b\u5de5\u5177 \u00b6 Offline\u6a21\u578b\u4fe1\u606f\u67e5\u770b\u5de5\u5177\uff1aSGS_IPU_SDK/DumpDebug/show_img_info.py\u3002 (1) \u5de5\u5177\u4f7f\u7528\u547d\u4ee4 python3 show_img_info . py \\ - m deploy_fixed . sim_sgsimg . img \\ -- version (2) \u5fc5\u9009\u53c2\u6570 -m , --model : \u79bb\u7ebf\u6a21\u578b\u7684\u8def\u5f84 \u4f7f\u7528\u8be5\u53c2\u6570\u5c06\u663e\u793a\u5982\u4e0b\u4fe1\u606f\uff1a \u8bf4\u660e Offline IMG Version : \u6240\u7528\u6570\u636e\u96c6\u751f\u6210\u8be5\u79bb\u7ebf\u6a21\u578b\u65f6\u7528\u7684SDK\u7248\u672c\u4fe1\u606f\u3002 Offline Model Size : \u8be5\u79bb\u7ebf\u6a21\u578b\u7684\u5927\u5c0f\u3002 Offline Model Max Batch Numer : \u8be5\u79bb\u7ebf\u6a21\u578b\u7684\u6700\u5927batch\u6570\u3002( compiler \u5de5\u5177 -b,--batch \u53c2\u6570) Offline Model Suggested Batch : n_buf\u6a21\u578b\u5185\u53ef\u53c2\u8003\u7684batch\u6570\uff0c\u5b9e\u9645\u4f7f\u7528\u65f6\u53ef\u8bbe\u7f6e\u4e3a\u5c0f\u4e8e\u7b49\u4e8eMax Batch Numer\u7684\u4efb\u610fbatch\u6570\u3002(compiler compiler \u5de5\u5177 --batch_mode \u53c2\u6570) Offline Model Supported Batch \uff1aone_buf\u6a21\u578b\u5185\u53ef\u4f7f\u7528\u7684batch\u6570\uff0c\u53ea\u80fd\u5728\u8fd9\u4e9bbatch\u6570\u4e2d\u8fdb\u884c\u9009\u62e9\u3002( compiler \u5de5\u5177 --batch_mode \u53c2\u6570) Offline Model Variable Buffer Size : \u8be5\u79bb\u7ebf\u6a21\u578b\u7684Variable Buffer\u5927\u5c0f\u3002 Offline_Model : Input \uff1a name: \u6a21\u578b\u8f93\u5165Tensor\u540d\u79f0\u3002 index: \u6a21\u578b\u8f93\u5165Tensor\u7d22\u5f15\u3002 dtype: \u6a21\u578b\u8f93\u5165Tensor\u7684\u6570\u636e\u7c7b\u578b\uff0cuint8/allint16 layouts: \u6a21\u578b\u8f93\u5165Tensor\u7684\u6570\u636e\u6392\u5e03\uff0cNCHW/NHWC shape: \u6a21\u578b\u8f93\u5165Tensor\u7684shape\u4fe1\u606f\u3002 training_input_formats:\u7f51\u7edc\u8bad\u7ec3\u65f6\u7684\u56fe\u7247\u683c\u5f0f\u4fe1\u606f( input_config training_input_formats \u53c2\u6570) input_formats:\u7f51\u7edc\u6a21\u578b\u5728SigmaStar\u82af\u7247\u4e0a\u8fd0\u884c\u7684\u56fe\u7247\u8f93\u5165\u683c\u5f0f( input_config input_formats \u53c2\u6570) input_width_alignment:\u6570\u636e\u4f5c\u4e3a\u7f51\u7edc\u8f93\u5165\u65f6Width\u65b9\u5411\u5bf9\u9f50\u7684\u6570\u91cf( input_config input_width_alignment \u53c2\u6570) input_height_alignment:\u6570\u636e\u4f5c\u4e3a\u7f51\u7edc\u8f93\u5165\u65f6Height\u65b9\u5411\u5bf9\u9f50\u7684\u6570\u91cf( input_config input_height_alignment \u53c2\u6570) batch:\u8be5\u79bb\u7ebf\u6a21\u578b\u7684batch\u6570 batch_mode:\u6a21\u578b\u7684batch\u6a21\u5f0f\uff0cn_buf/one_buf Output \uff1a name:\u6a21\u578b\u8f93\u51faTensor\u540d\u79f0\u3002 index:\u6a21\u578b\u8f93\u51faTensor\u7d22\u5f15 dtype:\u6a21\u578b\u8f93\u51faTensor\u7684\u6570\u636e\u7c7b\u578b\uff0cuint8/allint16 shape:\u6a21\u578b\u8f93\u51faTensor\u7684shape\u4fe1\u606f\u3002 batch:\u8be5\u79bb\u7ebf\u6a21\u578b\u7684batch\u6570 batch_mode:\u6a21\u578b\u7684batch\u6a21\u5f0f\uff0cn_buf/one_buf (3) \u53ef\u9009\u53c2\u6570 --version : \u751f\u6210\u79bb\u7ebf\u6a21\u578b\u6240\u7528\u7684\u7684SDK\u7248\u672c\u4fe1\u606f\uff0c\u5373\u663e\u793a\u7ed3\u679c\u4e2d SDK_Version_Info: \u540e\u6253\u5370\u7684\u4fe1\u606f\u3002 1.2 IPU Log\u6027\u80fd\u5206\u6790\u5de5\u5177 \u00b6 IPU Log\u6027\u80fd\u5206\u6790\u5de5\u5177\u4f4d\u7f6e\uff1a SGS_IPU_SDK/Scripts/example/performance_timeline.py \uff0c\u5c06\u6a21\u578b\u8fd0\u884c\u65f6\u751f\u6210\u7684IPU Log \u4f20\u5165\u89e3\u6790\u811a\u672c\uff0c \u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u751f\u6210\u4e00\u4e2ajson\u683c\u5f0f\u6587\u4ef6\uff0c\u6253\u5f00google\u6d4f\u89c8\u5668\uff0c\u6572\u5165 chrome://tracing \uff0c\u5c06\u751f\u6210\u7684json\u6587\u4ef6\u62d6\u5165\u6d4f\u89c8\u5668\u5373\u53ef\u3002 1.2.1 \u5982\u4f55\u751f\u6210 IPU Log \u00b6 \u6253\u5f00 SGS_IPU_SDK/cfg/IpuConfigS.ini \u6587\u4ef6\uff0c\u8bbe enable_performance_analyse=1 \uff0c\u91cd\u65b0\u8f6c\u6362\u539f\u59cb\u6a21\u578b\u5230\u79bb\u7ebf\u6a21\u578b\u3002 ; ipu_configS . ini [ DEBUG_CONFIG ] enable_performance_analyse = 1 \u8fd0\u884coffline\u6a21\u578b\uff0c\u751f\u6210IPU Log\u3002 prog_dla_dla_show_img_info \\ - m deploy_fixed . sim_sgsimg . img \\ -- ipu_log logdir \u53c2\u6570\u89e3\u91ca\u5982\u4e0b\uff1a -m , --model : \u79bb\u7ebf\u6a21\u578b\u7684\u8def\u5f84 --ipu_log : \u751f\u6210ipu log\u7684\u4fdd\u5b58\u76ee\u5f55 1.2.2 \u5982\u4f55\u4f7f\u7528IPU log\u751f\u6210json \u6587\u4ef6 \u00b6 python3 ~/ SGS_IPU_SDK / Scripts / example / performance_timeline . py \\ - c0 log_ctrl0 . bin \\ - cc log_corectrl0 . bin \\ - f 900 \\ - v 36 X \u53c2\u6570\u89e3\u91ca\u5982\u4e0b\uff1a -c0 , --core0 : core0 ipu log \u6587\u4ef6\u7684\u8def\u5f84 -cc , --corectrl : corectrl ipu log \u6587\u4ef6\u8def\u5f84 \uff08\u53ef\u9009\uff09 -f , --frequency : ipu clk freq (\u9ed8\u8ba4\u4e3a800) -v , --ipu_version : ipu chip version (\u5982\uff1a36X) \u8fd0\u884c\u7ed3\u675f\u540e\uff0c\u4f1a\u5728\u8fd0\u884c\u76ee\u5f55\u4e0b\u751f\u6210log_ctrl0.json\u6587\u4ef6\uff0c \u5c06\u751f\u6210\u7684json\u6587\u4ef6\u62d6\u5165\u6d4f\u89c8\u5668 chrome://tracing \u5373\u53ef\u663e\u793a\u6bcf\u5c42\u7684\u6027\u80fd\u8017\u65f6\u5360\u6bd4 \uff0c\u5176\u4e2d\u5404\u6307\u6807\u672f\u8bed\u89e3\u91ca\u5982\u4e0b\uff1a \u6307\u6807\u672f\u8bed start\uff1a\u8be5\u5c42\u5f00\u59cb\u65f6\u95f4 wall duration\uff1a\u8be5\u5c42\u8017\u65f6 total_cycle\uff1a\u8be5\u5c42cycle\u6570\uff0c\u4e0e\u201cwall duration\u201d\u53ef\u4ee5\u6362\u7b97\uff0cwall duration = total_cycle/freq conv_cycle_percent:\u8be5\u5c42conv\u8fd0\u884c\u65f6\u95f4\u5360\u8be5\u5c42\u8fd0\u884c\u65f6\u95f4\u767e\u5206\u6bd4 vector_cycle_percent:\u8be5\u5c42vector\u8fd0\u884c\u65f6\u95f4\u5360\u8be5\u5c42\u8fd0\u884c\u65f6\u95f4\u767e\u5206\u6bd4 dma_load_cycle_percent:\u8be5\u5c42dma load\u8fd0\u884c\u65f6\u95f4\u5360\u8be5\u5c42\u8fd0\u884c\u65f6\u95f4\u767e\u5206\u6bd4 dma_store_cycle_percent:\u8be5\u5c42dma store\u8fd0\u884c\u65f6\u95f4\u5360\u8be5\u5c42\u8fd0\u884c\u65f6\u95f4\u767e\u5206\u6bd4 conv/vertor/dma_load/dma_store\u6307\u4ee4\u53ef\u4ee5\u5e76\u884c\u6267\u884c\uff0c\u6240\u4ee5\u767e\u5206\u6bd4\u76f8\u52a0\u4e0d\u662f100% 1.3 IPU\u7f51\u7edc\u6a21\u578b\u6570\u636e\u5bf9\u6bd4\u5206\u6790\u5de5\u5177 \u00b6 \u8be6\u60c5\u8bf7\u53c2\u8003\u624b\u518c DumpDebug Tool\u7ae0\u8282","title":"\u9644\u5f55\u2164. DLA SDK \u8f85\u52a9\u5de5\u5177"},{"location":"module/User_Guide/IPU230/DLA_SDK_Auxiliary_Tool.html#1-dla-sdk","text":"\u5de5\u5177 \u5de5\u5177\u8def\u5f84 \u5de5\u5177\u4f5c\u7528 \u6ce8\u610f\u4e8b\u9879 Offline\u6a21\u578b\u4fe1\u606f\u67e5\u770b\u5de5\u5177 SGS_IPU_SDK/DumpDebug/show_img_info.py \u67e5\u770bOffline\u6a21\u578b\u4fe1\u606f IPU Log\u6027\u80fd\u5206\u6790\u5de5\u5177 SGS_IPU_SDK/Scripts/example/performance_timeline.py \u5206\u6790Offline\u6a21\u578b\u6027\u80fd \u9700\u914d\u5408 SGS_IPU_SDK/cfg/IpuConfigS.ini \u6587\u4ef6\u540e\u91cd\u65b0\u8f6c\u6362\u539f\u59cb\u6a21\u578b\u5230\u79bb\u7ebf\u6a21\u578b IPU\u7f51\u7edc\u6a21\u578b\u6570\u636e\u5bf9\u6bd4\u5206\u6790\u5de5\u5177 SGS_IPU_SDK/DumpDebug/auto_dump_debug.sh \u5bf9\u6bd4\u5206\u6790\u539f\u6a21\u578b/float/fix\u5404\u9636\u6bb5\u6a21\u578b\u6570\u636e \u9700\u914d\u5408 DumpDebugTool \u5de5\u5177\u4f7f\u7528","title":"1. DLA SDK\u8f85\u52a9\u5de5\u5177\u4f7f\u7528\u8bf4\u660e"},{"location":"module/User_Guide/IPU230/DLA_SDK_Auxiliary_Tool.html#11-offline","text":"Offline\u6a21\u578b\u4fe1\u606f\u67e5\u770b\u5de5\u5177\uff1aSGS_IPU_SDK/DumpDebug/show_img_info.py\u3002 (1) \u5de5\u5177\u4f7f\u7528\u547d\u4ee4 python3 show_img_info . py \\ - m deploy_fixed . sim_sgsimg . img \\ -- version (2) \u5fc5\u9009\u53c2\u6570 -m , --model : \u79bb\u7ebf\u6a21\u578b\u7684\u8def\u5f84 \u4f7f\u7528\u8be5\u53c2\u6570\u5c06\u663e\u793a\u5982\u4e0b\u4fe1\u606f\uff1a \u8bf4\u660e Offline IMG Version : \u6240\u7528\u6570\u636e\u96c6\u751f\u6210\u8be5\u79bb\u7ebf\u6a21\u578b\u65f6\u7528\u7684SDK\u7248\u672c\u4fe1\u606f\u3002 Offline Model Size : \u8be5\u79bb\u7ebf\u6a21\u578b\u7684\u5927\u5c0f\u3002 Offline Model Max Batch Numer : \u8be5\u79bb\u7ebf\u6a21\u578b\u7684\u6700\u5927batch\u6570\u3002( compiler \u5de5\u5177 -b,--batch \u53c2\u6570) Offline Model Suggested Batch : n_buf\u6a21\u578b\u5185\u53ef\u53c2\u8003\u7684batch\u6570\uff0c\u5b9e\u9645\u4f7f\u7528\u65f6\u53ef\u8bbe\u7f6e\u4e3a\u5c0f\u4e8e\u7b49\u4e8eMax Batch Numer\u7684\u4efb\u610fbatch\u6570\u3002(compiler compiler \u5de5\u5177 --batch_mode \u53c2\u6570) Offline Model Supported Batch \uff1aone_buf\u6a21\u578b\u5185\u53ef\u4f7f\u7528\u7684batch\u6570\uff0c\u53ea\u80fd\u5728\u8fd9\u4e9bbatch\u6570\u4e2d\u8fdb\u884c\u9009\u62e9\u3002( compiler \u5de5\u5177 --batch_mode \u53c2\u6570) Offline Model Variable Buffer Size : \u8be5\u79bb\u7ebf\u6a21\u578b\u7684Variable Buffer\u5927\u5c0f\u3002 Offline_Model : Input \uff1a name: \u6a21\u578b\u8f93\u5165Tensor\u540d\u79f0\u3002 index: \u6a21\u578b\u8f93\u5165Tensor\u7d22\u5f15\u3002 dtype: \u6a21\u578b\u8f93\u5165Tensor\u7684\u6570\u636e\u7c7b\u578b\uff0cuint8/allint16 layouts: \u6a21\u578b\u8f93\u5165Tensor\u7684\u6570\u636e\u6392\u5e03\uff0cNCHW/NHWC shape: \u6a21\u578b\u8f93\u5165Tensor\u7684shape\u4fe1\u606f\u3002 training_input_formats:\u7f51\u7edc\u8bad\u7ec3\u65f6\u7684\u56fe\u7247\u683c\u5f0f\u4fe1\u606f( input_config training_input_formats \u53c2\u6570) input_formats:\u7f51\u7edc\u6a21\u578b\u5728SigmaStar\u82af\u7247\u4e0a\u8fd0\u884c\u7684\u56fe\u7247\u8f93\u5165\u683c\u5f0f( input_config input_formats \u53c2\u6570) input_width_alignment:\u6570\u636e\u4f5c\u4e3a\u7f51\u7edc\u8f93\u5165\u65f6Width\u65b9\u5411\u5bf9\u9f50\u7684\u6570\u91cf( input_config input_width_alignment \u53c2\u6570) input_height_alignment:\u6570\u636e\u4f5c\u4e3a\u7f51\u7edc\u8f93\u5165\u65f6Height\u65b9\u5411\u5bf9\u9f50\u7684\u6570\u91cf( input_config input_height_alignment \u53c2\u6570) batch:\u8be5\u79bb\u7ebf\u6a21\u578b\u7684batch\u6570 batch_mode:\u6a21\u578b\u7684batch\u6a21\u5f0f\uff0cn_buf/one_buf Output \uff1a name:\u6a21\u578b\u8f93\u51faTensor\u540d\u79f0\u3002 index:\u6a21\u578b\u8f93\u51faTensor\u7d22\u5f15 dtype:\u6a21\u578b\u8f93\u51faTensor\u7684\u6570\u636e\u7c7b\u578b\uff0cuint8/allint16 shape:\u6a21\u578b\u8f93\u51faTensor\u7684shape\u4fe1\u606f\u3002 batch:\u8be5\u79bb\u7ebf\u6a21\u578b\u7684batch\u6570 batch_mode:\u6a21\u578b\u7684batch\u6a21\u5f0f\uff0cn_buf/one_buf (3) \u53ef\u9009\u53c2\u6570 --version : \u751f\u6210\u79bb\u7ebf\u6a21\u578b\u6240\u7528\u7684\u7684SDK\u7248\u672c\u4fe1\u606f\uff0c\u5373\u663e\u793a\u7ed3\u679c\u4e2d SDK_Version_Info: \u540e\u6253\u5370\u7684\u4fe1\u606f\u3002","title":"1.1 Offline\u6a21\u578b\u4fe1\u606f\u67e5\u770b\u5de5\u5177"},{"location":"module/User_Guide/IPU230/DLA_SDK_Auxiliary_Tool.html#12-ipu-log","text":"IPU Log\u6027\u80fd\u5206\u6790\u5de5\u5177\u4f4d\u7f6e\uff1a SGS_IPU_SDK/Scripts/example/performance_timeline.py \uff0c\u5c06\u6a21\u578b\u8fd0\u884c\u65f6\u751f\u6210\u7684IPU Log \u4f20\u5165\u89e3\u6790\u811a\u672c\uff0c \u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u751f\u6210\u4e00\u4e2ajson\u683c\u5f0f\u6587\u4ef6\uff0c\u6253\u5f00google\u6d4f\u89c8\u5668\uff0c\u6572\u5165 chrome://tracing \uff0c\u5c06\u751f\u6210\u7684json\u6587\u4ef6\u62d6\u5165\u6d4f\u89c8\u5668\u5373\u53ef\u3002","title":"1.2 IPU Log\u6027\u80fd\u5206\u6790\u5de5\u5177"},{"location":"module/User_Guide/IPU230/DLA_SDK_Auxiliary_Tool.html#121-ipu-log","text":"\u6253\u5f00 SGS_IPU_SDK/cfg/IpuConfigS.ini \u6587\u4ef6\uff0c\u8bbe enable_performance_analyse=1 \uff0c\u91cd\u65b0\u8f6c\u6362\u539f\u59cb\u6a21\u578b\u5230\u79bb\u7ebf\u6a21\u578b\u3002 ; ipu_configS . ini [ DEBUG_CONFIG ] enable_performance_analyse = 1 \u8fd0\u884coffline\u6a21\u578b\uff0c\u751f\u6210IPU Log\u3002 prog_dla_dla_show_img_info \\ - m deploy_fixed . sim_sgsimg . img \\ -- ipu_log logdir \u53c2\u6570\u89e3\u91ca\u5982\u4e0b\uff1a -m , --model : \u79bb\u7ebf\u6a21\u578b\u7684\u8def\u5f84 --ipu_log : \u751f\u6210ipu log\u7684\u4fdd\u5b58\u76ee\u5f55","title":"1.2.1 \u5982\u4f55\u751f\u6210 IPU Log"},{"location":"module/User_Guide/IPU230/DLA_SDK_Auxiliary_Tool.html#122-ipu-logjson","text":"python3 ~/ SGS_IPU_SDK / Scripts / example / performance_timeline . py \\ - c0 log_ctrl0 . bin \\ - cc log_corectrl0 . bin \\ - f 900 \\ - v 36 X \u53c2\u6570\u89e3\u91ca\u5982\u4e0b\uff1a -c0 , --core0 : core0 ipu log \u6587\u4ef6\u7684\u8def\u5f84 -cc , --corectrl : corectrl ipu log \u6587\u4ef6\u8def\u5f84 \uff08\u53ef\u9009\uff09 -f , --frequency : ipu clk freq (\u9ed8\u8ba4\u4e3a800) -v , --ipu_version : ipu chip version (\u5982\uff1a36X) \u8fd0\u884c\u7ed3\u675f\u540e\uff0c\u4f1a\u5728\u8fd0\u884c\u76ee\u5f55\u4e0b\u751f\u6210log_ctrl0.json\u6587\u4ef6\uff0c \u5c06\u751f\u6210\u7684json\u6587\u4ef6\u62d6\u5165\u6d4f\u89c8\u5668 chrome://tracing \u5373\u53ef\u663e\u793a\u6bcf\u5c42\u7684\u6027\u80fd\u8017\u65f6\u5360\u6bd4 \uff0c\u5176\u4e2d\u5404\u6307\u6807\u672f\u8bed\u89e3\u91ca\u5982\u4e0b\uff1a \u6307\u6807\u672f\u8bed start\uff1a\u8be5\u5c42\u5f00\u59cb\u65f6\u95f4 wall duration\uff1a\u8be5\u5c42\u8017\u65f6 total_cycle\uff1a\u8be5\u5c42cycle\u6570\uff0c\u4e0e\u201cwall duration\u201d\u53ef\u4ee5\u6362\u7b97\uff0cwall duration = total_cycle/freq conv_cycle_percent:\u8be5\u5c42conv\u8fd0\u884c\u65f6\u95f4\u5360\u8be5\u5c42\u8fd0\u884c\u65f6\u95f4\u767e\u5206\u6bd4 vector_cycle_percent:\u8be5\u5c42vector\u8fd0\u884c\u65f6\u95f4\u5360\u8be5\u5c42\u8fd0\u884c\u65f6\u95f4\u767e\u5206\u6bd4 dma_load_cycle_percent:\u8be5\u5c42dma load\u8fd0\u884c\u65f6\u95f4\u5360\u8be5\u5c42\u8fd0\u884c\u65f6\u95f4\u767e\u5206\u6bd4 dma_store_cycle_percent:\u8be5\u5c42dma store\u8fd0\u884c\u65f6\u95f4\u5360\u8be5\u5c42\u8fd0\u884c\u65f6\u95f4\u767e\u5206\u6bd4 conv/vertor/dma_load/dma_store\u6307\u4ee4\u53ef\u4ee5\u5e76\u884c\u6267\u884c\uff0c\u6240\u4ee5\u767e\u5206\u6bd4\u76f8\u52a0\u4e0d\u662f100%","title":"1.2.2 \u5982\u4f55\u4f7f\u7528IPU log\u751f\u6210json \u6587\u4ef6"},{"location":"module/User_Guide/IPU230/DLA_SDK_Auxiliary_Tool.html#13-ipu","text":"\u8be6\u60c5\u8bf7\u53c2\u8003\u624b\u518c DumpDebug Tool\u7ae0\u8282","title":"1.3 IPU\u7f51\u7edc\u6a21\u578b\u6570\u636e\u5bf9\u6bd4\u5206\u6790\u5de5\u5177"},{"location":"module/User_Guide/IPU230/DLA_SDK_Support.html","text":"1. Caffe\u652f\u6301\u7b97\u5b50 \u00b6 \u7b97\u5b50 \u5907\u6ce8 ArgMax only support top 1 Axpy BatchNorm Concat \u6700\u59271024\u4e2atensor concat Convolution \u9650\u5236\u6761\u4ef6\uff1aAll tensor size < 2^31 \u82e5kernel size \u4e3a do*h*w*di \u5219h * w < 64 group\u4e3a1\u65f6\uff1a\u8f6c\u6362\u6210Depthwise Convolution; group\u4e3aC\u65f6\uff1a\u8f6c\u6362\u4e3aConvolution; group\u4e3a (1, C) \u65f6\uff1a\u62c6\u89e3\u6210GroupConv round(di/16)*round(do/16) < 512 * 1024 ConvolutionDepthwise \u539f\u751f\u652f\u6301Kernel_size\u4e3a3*3\uff0c6*6\uff0c9*9\uff0c\u5176\u4f59\u60c5\u51b5\u8f6c\u6362\u6210Convolution\u5904\u7406\u9650\u5236\u6761\u4ef6\uff1aPad\u8303\u56f4\uff1a[0, 1] CReLU \u8f93\u5165<=4\u7ef4 ContinuationIndicator Crop Deconvolution All tensor size < 2^31 \u82e5kernel size \u4e3a do*h*w*di\uff0ch * w < 64 round(di/16)*round(do/16) < 512 * 1024 Dropout Eltwise \u5176\u4e2dPROD\u548cSUM\uff0c\u5bf9\u4e8e\u8f93\u5165\u7684\u4e24\u4e2atensor,\u5f53\u4e3a4\u7ef4\u5411\u91cf\u65f6\uff0c\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6 1. NCHW \uff0cconst 2. NCHW \uff0cC\u7ef4\u5411\u91cf 3. NCHW \uff0cNCHW \u5f53\u4e3a5\u7ef4\u5411\u91cf\u65f6\uff0c\u6ee1\u8db3 1. NCDHW \uff0cconst 2. NCDHW \uff0cNCDHW Flatten InnerProduct \u82e5weight size do*di round(di/16)*round(do/16) < 512 * 1024 Permute Pooling \u82e5kernel size\u4e3ah*w 1.AVGPooling (1).FilterW <= 255\uff0cFilterH <= 255\uff0c (2).AvePooling_U8\uff1aFilterMax(FilterW*FilterH) = 6144\uff0c (3).AvePooling_S16\uff1aFilterMax(FilterW*FilterH) = 6144 2.MaxPooling: \u9700FilterW <= 255\uff0c\u4e14FilterMax(FilterW*FilterH) = 1507328 PriorBox Power \u4ec5\u652f\u6301\u6307\u6570\u4e3a\u6b63\u6574\u6570 Reshape Reverse ROIPooling ROIPooling\u7684rois\u8f93\u5165\u7ef4\u5ea6\u4e3a\uff08N\u00d75\uff09\uff0c\u5f53\u540e\u6bb5\u7f51\u7edc\u5168\u90e8\u662fInnerProduct\u65f6\uff0cN\u624d\u53ef\u4ee5\u8bbe\u7f6e\u5927\u4e8e1\uff0c\u5982\u679c\u540e\u6bb5\u7f51\u7edc\u4e2d\u6709\u5377\u79ef\u65f6\uff0cN\u4ec5\u53ef\u4ee5\u8bbe\u7f6e\u4e3a1\uff0c\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u9700\u8981\u5faa\u73af\u6267\u884cN\u6b21\u3002\u4f7f\u7528\u65b9\u6cd5\u548c\u9650\u5236\u8be6\u89c1\u4e0b\u65b9Please Note\u3002 ReLU \u8f93\u5165<=4\u7ef4 PRuLU \u8f93\u5165<=4\u7ef4 Sigmoid Slice Scale \u5bf9\u4e8e\u8f93\u5165\u7684\u4e24\u4e2atensor,shape\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6 1. 4\u7ef4\u5411\u91cf\uff0cNCHW 2. NCHW \uff0cconst 3. NCHW \uff0cC\u7ef4\u5411\u91cf 4. NCHW \uff0cNCHW \u5f53\u4e3a5\u7ef4\u5411\u91cf\u65f6\uff0c\u6ee1\u8db3 1. NCDHW \uff0cconst 2. NCDHW \uff0cNCDHW Softmax \u5982\u9700\u5bf9\u6307\u5b9a\u7ef4\u5ea6\u8fdb\u884c\u8fd0\u7b97\uff0c\u5c06\u8981\u8ba1\u7b97\u7684\u7ef4\u5ea6\u8f6c\u7f6e\u5230\u6700\u540e\u7684\u7ef4\u5ea6\uff08\u6700\u5185\u7ef4\u5ea6\uff09\uff0c\u6700\u5927\u652f\u630132*512=16384 Splite ShuffleChannel Tanh \u8f93\u5165<=4\u7ef4 Threshold \u53ea\u652f\u63014\u7ef4\u8f93\u5165 Tile Upsample Upsample\u7b97\u5b50\u5728caffe\u4e2d\u6ca1\u6709\uff0c\u53ef\u4ee5\u624b\u52a8\u5c06Deconvolution\u4fee\u6539\u6210Upsample \u53ea\u652f\u63014\u7ef4\u8f93\u5165 Only support same scale on H and W Reorg \u53ea\u652f\u6301stride = 2 LSTM \u652f\u6301\u5355\u5411\uff0c\u53cc\u5411 Please Note: Upsample\u7b97\u5b50\u5728prototxt\u4e2d\u8fd9\u6837\u63cf\u8ff0\uff1a layer { bottom : \"layer85-conv\" top : \"layer86-upsample\" name : \"layer86-upsample\" type : \"Upsample\" upsample_param { scale : 2 } } scale\u53c2\u6570\u4e0eDeconvolution\u7684Stride\u542b\u4e49\u76f8\u540c\u3002\u4f46\u9700\u6ce8\u610fUpsample\u76f8\u5f53\u4e8e\u6743\u91cd\u5168\u4e3a1\u7684Deconvolution\u7b97\u5b50\u3002 ROIPooling\u7b97\u5b50\u5728prototxt\u4e2d\u8fd9\u6837\u63cf\u8ff0\uff1a layer { name : \"roi_pool5\" type : \"ROIPooling\" bottom : \"conv5_3\" bottom : \"rois\" top : \"pool5\" roi_pooling_param { pooled_w : 7 pooled_h : 7 spatial_scale : 0.0625 } } Roi_pooling_param\u4ec5\u652f\u6301pooled_w\uff0cpooled_h\u548cspatial_scale\u3002Float\u6a21\u578b\u7684rois\u8f93\u5165\u4e3arpn\u5c42\u8f93\u51fa\u7684\u5750\u6807\uff0cFixed\u548cOffline\u6a21\u578b\u7684rois\u8f93\u5165\u4e3arpn\u5c42\u8f93\u51fa\u5750\u6807\u4e58spatial_scale\u503c\u540e\u518d\u91cf\u5316\u5230int16\u540e\u9001\u5165\u6a21\u578b\u3002 2. TensorFlow\u652f\u6301\u7b97\u5b50 \u00b6 \u7c7b\u522b \u7b97\u5b50 \u5907\u6ce8 Convolution Conv \u9650\u5236\u6761\u4ef6\uff1aKernel_size\uff1aH * W < 64 Convolution DepthwiseConv2dNative \u539f\u751f\u652f\u6301Kernel_size\u4e3a3*3\uff0c6*6\uff0c9*9\uff0c\u5176\u4f59\u60c5\u51b5\u8f6c\u6362\u6210Convolution\u5904\u7406 Convolution FullyConnected Pooling Max pooling Pooling Average Pooling Activation ReLU Activation PReLU Activation ReLU6 Activation LeakyReLU Activation Sigmoid Math Less Math Greater Math GreaterEqual Math Equal Math Add Math Sub Math Mul Math RealDiv \u4ec5\u652f\u6301\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u6570\u4e3a\u5e38\u91cfTensor Math Maximum Math Minimum Math Mean Math Max Math Sqrt Math Rsqrt Math Round Math Softmax \u5982\u9700\u5bf9\u6307\u5b9a\u7ef4\u5ea6\u8fdb\u884c\u8fd0\u7b97\uff0c\u5c06\u8981\u8ba1\u7b97\u7684\u7ef4\u5ea6\u8f6c\u7f6e\u5230\u6700\u540e\u7684\u7ef4\u5ea6\uff08\u6700\u5185\u7ef4\u5ea6\uff09 Math FusedBatchNorm Math Exp DMA Align DMA ConcatV2 DMA Fill DMA Gather DMA GatherV2 DMA Pack DMA Pad DMA SpaceToBatchND DMA BatchToSpaceND DMA Zeroslike DMA Split DMA Slice DMA Unpack DMA Tile DMA Reshape DMA Transpose DMA Resize_bilinear DMA Resize_NearestNeighbor DMA Batch_matmul Misc TopKV2 Misc shape 3. Onnx\u652f\u6301\u7b97\u5b50 \u00b6 \u7b97\u5b50 \u5907\u6ce8 Add \u5bf9\u4e8e\u8f93\u5165\u7684\u4e24\u4e2atensor,shape\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6 1. 4\u7ef4\u5411\u91cf\uff0cNCHW 2. NCHW \uff0cconst 3. NCHW \uff0cC\u7ef4\u5411\u91cf \u5f53\u4e3a5\u7ef4\u5411\u91cf\u65f6\uff0c\u6ee1\u8db3 1. NCDHW \uff0cconst 2. NCDHW \uff0cNCDHW Abs ArgMax ArgMin AveragePool \u82e5kernel size\u4e3ah*w\uff0c\u9700\u6ee1\u8db3 1.FilterW <= 255\uff0cFilterH <= 255\uff0c 2.AvePooling_U8\uff1aFilterMax(FilterW*FilterH) = 6144\uff0c 3.AvePooling_S16\uff1aFilterMax(FilterW*FilterH) = 6144 BatchNormalization Cast Constant Concat \u6700\u59271024\u4e2atensor concat Convolution All tensor size < 2^31 \u82e5kernel size \u4e3a co*h*w*ci \u5219h * w < 64 round(ci/16)*round(co/16) < 512 * 1024 \u652f\u6301autoPad\u7684SAME_UPPER\u5c5e\u6027;\u9650\u5236\u6761\u4ef6\uff1aPads\u8303\u56f4\uff1a[0, 7] Convolution3D All tensor size < 2^31 \u82e5kernel size \u4e3a co*h*w*d*ci \u5219h * w < 64\uff0cd\u7ef4\u65e0\u9650\u5236 round(ci/16)*round(co/16) < 512 * 1024 \u652f\u6301autoPad\u7684SAME_UPPER\u5c5e\u6027;\u9650\u5236\u6761\u4ef6\uff1aPads\u8303\u56f4\uff1a[0, 7] ConvTranspose All tensor size < 2^32 \u82e5kernel size \u4e3a co*h*w*ci\uff0ch * w < 64 round(ci/16)*round(co/16) < 512 * 1024 Clip Div \u5bf9\u4e8e\u8f93\u5165\u7684\u4e24\u4e2atensor,shape\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6 1. 4\u7ef4\u5411\u91cf\uff0cNCHW 2. NCHW \uff0cconst 3. NCHW \uff0cC\u7ef4\u5411\u91cf \u5f53\u4e3a5\u7ef4\u5411\u91cf\u65f6\uff0c\u6ee1\u8db3 1. NCDHW \uff0cconst 2. NCDHW \uff0cNCDHW Dropout DepthToSpace \u53ea\u652f\u63014\u7ef4\u8f93\u5165 Expand Exp Equal ERF Flatten HardSigmoid Identity InstanceNormalization Gather \u53ea\u652f\u6301indices\u4e3aint32\u7684\u5e38\u6570 Gemm \u8f93\u5165<=4\u7ef4\uff0c\u82e5weight size do*di round(di/16)*round(do/16) < 512 * 1024 GlobalAveragePool \u82e5kernel size\u4e3ah*w\uff0c\u9700\u6ee1\u8db3 1.FilterW <= 255\uff0cFilterH <= 255\uff0c 2.AvePooling_U8\uff1aFilterMax(FilterW*FilterH) = 12288\uff0c 3.AvePooling_S16\uff1aFilterMax(FilterW*FilterH) = 12288 GlobalMaxPool \u82e5kernel size\u4e3ah*w\uff0c\u9700FilterW <= 255\uff0c\u4e14FilterMax(FilterW*FilterH) = 6029312 GreaterOrEqual LogSoftmax LeakyReLU \u8f93\u5165<=4\u7ef4 LSTM \u6fc0\u6d3b\u51fd\u6570\u56fa\u5b9a\uff0c\u4e0d\u80fd\u914d\u7f6e\u3002\u53c2\u89c1\u7528\u6237\u624b\u518c\u7279\u6b8a\u7f51\u7edc\u8f6c\u6362LSTM\u7ae0\u8282,\u652f\u6301\u5355\u5411LSTM\u548c\u53cc\u5411LSTM Matmul \u8f93\u5165<=4\u7ef4\uff0c\u82e5weight size do*di round(di/16)*round(do/16) < 512 * 1024 Mul \u5bf9\u4e8e\u8f93\u5165\u7684\u4e24\u4e2atensor,shape\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6 1. 4\u7ef4\u5411\u91cf\uff0cNCHW 2. NCHW \uff0cconst 3. NCHW \uff0cC\u7ef4\u5411\u91cf \u5f53\u4e3a5\u7ef4\u5411\u91cf\u65f6\uff0c\u6ee1\u8db3 1. NCDHW \uff0cconst 2. NCDHW \uff0cNCDHW Min MaxPool \u82e5kernel size\u4e3ah*w\uff0c\u9700FilterW <= 255\uff0c\u4e14FilterMax(FilterW*FilterH) = 1507328 Max Not Pad \u652f\u6301\uff0conly support constant Pow Reshape PReLU \u8f93\u5165<=4\u7ef4 ReduceSum \u8f93\u5165<=4\u7ef4 ReduceMean \u8f93\u5165<=4\u7ef4 ReduceMax \u8f93\u5165<=4\u7ef4\uff0c\u4ec5\u652f\u6301\u540c\u65f6\u5bf9\u4e00\u4e2aaxis\u8fdb\u884c\u8ba1\u7b97 ReduceMin \u8f93\u5165<=4\u7ef4 Resize \u5f53'model'\u4e3anearest \u4e0a\u91c7\u6837\u65f6\uff0c'coordinate_transformation_mode'\u4e3a'asymmetric', 'nearest_mode'only support round_prefer_floor(Default) and floor coordinate_transformation_mode'\u4e3a'align_corners', 'nearest_mode'only support round_prefer_floor(Default) and round_prefer_ceil. \u4e0b\u91c7\u6837 'coordinate_transformation_mode'\u4e3a'asymmetric', 'nearest_mode' is not support floor ReLU \u53ea\u652f\u63014\u7ef4\u8f93\u5165 ReduceL2 Tanh Sigmoid Slice SoftMax \u5982\u9700\u5bf9\u6307\u5b9a\u7ef4\u5ea6\u8fdb\u884c\u8fd0\u7b97\uff0c\u5c06\u8981\u8ba1\u7b97\u7684\u7ef4\u5ea6\u8f6c\u7f6e\u5230\u6700\u540e\u7684\u7ef4\u5ea6\uff08\u6700\u5185\u7ef4\u5ea6\uff09 Split SpaceToDepth Squeeze Sub \u5bf9\u4e8e\u8f93\u5165\u7684\u4e24\u4e2atensor,shape\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6 1. 4\u7ef4\u5411\u91cf\uff0cNCHW 2. NCHW \uff0cconst 3. NCHW \uff0cC\u7ef4\u5411\u91cf \u5f53\u4e3a5\u7ef4\u5411\u91cf\u65f6\uff0c\u6ee1\u8db3 1. NCDHW \uff0cconst 2. NCDHW \uff0cNCDHW ScatterND Softplus Sqrt Transpose Tile UnSqueeze Upsample \u53ea\u652f\u63014\u7ef4\u8f93\u5165Only support same scale on H and W Pool3D\u2014GloabalAveragePooling Pool3D\u2014MaxPooling 4. SigmaStar IPU SDK\u5bf9\u6a21\u578b\u7684\u9650\u5236 \u00b6 \u5bf9\u4e8e\u6307\u5b9a\u7ef4\u5ea6\u7684Softmax\uff0c\u6211\u4eec\u53ea\u652f\u6301\u5bf9\u6700\u5185\u7ef4\u5ea6\u7684\u64cd\u4f5c\uff08\u591a\u4f59\u591a\u7ef4Tensor\u7684Softmax\u8fd0\u7b97\uff0c\u6211\u4eec\u53ea\u652f\u6301Softmax\u5236\u5b9a\u5728\u6700\u5185\u7ef4\u5ea6\u505a\uff09\u3002 \u9664\u7b2c\u4e00\u5c42Conv\u5916\uff0c\u5176\u4ed6\u5c42\u7684Conv DI\u7ef4\u5ea6\uff08\u5373NHWC \u4e2dC\u8fd9\u4e2a\u7ef4\u5ea6\uff09\u8d8a\u5927\u6548\u7387\u4f1a\u8d8a\u9ad8\uff0c\u6700\u5927\u652f\u63f42048\u3002 Math\u7c7b\u7b97\u5b50\uff08\u5305\u62ecAdd\u3001Sub\u3001Mul\u3001Div\u7b49\u5143\u7d20\u64cd\u4f5c\u7684\u7b97\u5b50\uff09\uff0c\u5982\u679c\u53f3\u64cd\u4f5c\u6570\u662fscaler\uff08\u5355\u4e2a\u6570\u5b57\uff09 \u6216\u8005 1 \u7ef4\u5411\u91cf\uff08HW\u7ef4\u5ea6\u6570\u636e\u76f8\u540c\uff0cC\u7ef4\u5ea6\u4e0d\u540c\uff09\uff0c\u6548\u7387\u4f1a\u66f4\u9ad8\u3002 \u7f51\u7edc\u7ed3\u6784\u4e2d\u5c3d\u91cf\u51cf\u5c11\u4e00\u4e2a\u7b97\u5b50\u7684\u8f93\u51fa\u88ab\u591a\u4e2a\u7b97\u5b50\u4f5c\u4e3a\u8f93\u5165\u7684\u60c5\u51b5\uff0c\u5982ResNet\u7684\u6b8b\u5dee\u7ed3\u6784\uff0cGoogLeNet\u7684Inception\u6a21\u5757\u7b49\u3002\u53ef\u53c2\u8003 \u6784\u5efaBW\u53cb\u597d\u578b\u6a21\u578b 5. \u6a21\u578b\u6027\u80fd\u4f18\u5316\u89c4\u5219 \u00b6 \uff081\uff09\u5bf9\u4e8e\u5377\u79ef\u7684\u6027\u80fd\u4f18\u5316 kernel size 3x3 \u6700\u597d\uff0c\u7279\u522b\u5bf9\u4e8e\u9996\u5c42\u3002 kernel size 1x1 \u7684\u65f6\u5019\uff0cinput tensor \u6700\u5185\u7ef4\u5ea6shape\u503c\u5bf9\u9f50\u523016 \u6700\u597d\u3002 \uff082\uff09\u5bf9\u4e8eDMA\u7b97\u5b50 concatenation\u7b97\u5b50\u6bd4pack\u7b97\u5b50\u6027\u80fd\u66f4\u597d\u3002 split\u6bd4slice\u7b97\u5b50\u6027\u80fd\u66f4\u597d\u3002 \u5c3d\u91cf\u51cf\u5c11\u5728\u6700\u5185\u7ef4\u4e0a\u505atranspose\u3002 \u5355\u53e3elementwise \u7b97\u5b50\u7684const \u64cd\u4f5c\u6570\u6700\u597d\u662f\u53f3\u64cd\u4f5c\u6570\uff0c\u5373input[1]\u3002 \uff083\uff09\u7efc\u5408\u90e8\u5206 Tensor\u7684\u7ef4\u5ea6\u4e3a4\u6700\u597d\u3002 Tensor\u6700\u5185\u7ef4\u7684shape\u503c\u5bf9\u9f50\u523032\u6700\u597d\u3002 Softmax\u6700\u597d\u53ea\u5bf9\u6700\u5185\u7ef4\u5ea6\u64cd\u4f5c\u3002 ReduceMax\u3001ReduceMin\u3001ReduceSum\u6700\u597d\u574d\u584c\u7684\u7eac\u5ea6\u662f\u76f8\u90bb\u7684\u3002 \uff084\uff09\u5408\u5e76\u89c4\u5219 Pad + Conv2D/DepthwiseConv\uff0cpad\u4f1a\u88ab\u5408\u5e76\u5230\u5377\u79ef\u4e2d\uff0cpad\u51e0\u4e4e\u4e0d\u5360\u7528\u65f6\u95f4\u3002 Conv2D/DepthwiseConv + \u5355\u53e3Mul + \u5355\u53e3Add\uff0cMul\u548cAdd\u7b97\u5b50\u4f1a\u548c\u5377\u79ef\u4e00\u8d77\u8fd0\u7b97\u3002\u6211\u4eec\u4f1a\u628aBatchNorm\u8f6c\u6362\u6210Mul+Add,\u6240\u4ee5Conv2D/DepthwiseConv + BatchNorm\u53ef\u4ee5\u5408\u5e76\u3002 Pad + avgPooling \u53ef\u4ee5\u5408\u5e76\u3002 \u8fde\u7eed\u7684transpose\u4f1a\u81ea\u52a8\u5408\u5e76\u4e3a\u4e00\u4e2a\u3002 \u6240\u6709reshape\u7b97\u5b50\u90fd\u4f1a\u88ab\u8df3\u8fc7\u3002 \u8fde\u7eed\u7684\u5355\u53e3\u7684\u76f8\u540celementwise\u7b97\u5b50\u4f1a\u5408\u5e76\u3002 \u5355\u72ec\u7684\u5355\u53e3mul\u548c\u5355\u53e3add\uff0c\u4f1a\u53d8\u6210MultAdd\u5355\u4e00\u7684\u7b97\u5b50\u3002 \u6ce8\u610f\uff1a\u8fd9\u91cc\u5355\u53e3\u610f\u601d\u4e3a\u4e00\u4e2a\u6570\u636e\u662fconstant\u7684\u60c5\u51b5 \uff085\uff09\u6784\u5efaBW\u53cb\u597d\u7684AI\u6a21\u578b BW\u53cb\u597d\u7684AI\u6a21\u578b\u6307\u6a21\u578b\u6570\u636e\u5c3d\u53ef\u80fd\u4e0d\u5360\u7528\u7cfb\u7edf\u603b\u7ebfBW\u8d44\u6e90\uff0cBW\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b: BW = Input BW + Output BW + Const BW + Variable BW \u5176\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7\u51cf\u5c11variable bw\u6765\u63d0\u5347\u6a21\u578b\u6027\u80fd,variable bw\u5c06\u53d7\u4ee5\u4e0b\u4e24\u70b9\u5f71\u54cd\uff1a (1) tensor\u6570\u636e\u91cf\u592a\u5927 (2) tensor\u7684\u751f\u547d\u5468\u671f\u592a\u957f \u793a\u4f8b\u4e00\uff1aBW\u53cb\u597d\u578b \u793a\u4f8b\u4e8c\uff1atensor\u7684\u751f\u547d\u5468\u671f\u592a\u957f \u793a\u4f8b\u4e09\uff1atensor\u6570\u636e\u91cf\u592a\u5927 \u4e0a\u56fe\u5c55\u793a\u4e86\u4e09\u79cd\u5e38\u89c1\u7684\u6a21\u578b\u7ed3\u6784\u56fe\uff0c\u5176\u4e2d\u56fe\u4e00\u6240\u793a\u7684\u7ed3\u6784\u7b26\u5408\u6a21\u578b\u4f18\u5316\u89c4\u5219\uff0c\u56fe\u4e8c\u3001\u56fe\u4e09\u6240\u793a\u7684\u7ed3\u6784\u5c06\u5f71\u54cd\u6a21\u578b\u6027\u80fd\u3002\u6784\u5efa\u6a21\u578b\u65f6\u8bf7\u5c3d\u53ef\u80fd\u51cf\u5c11\u56fe\u4e8c\u3001\u56fe\u4e09\u7ed3\u6784\u7684\u4f7f\u7528\u3002","title":"\u9605\u524d\u987b\u77e5\u2160. IPU SDK \u652f\u6301"},{"location":"module/User_Guide/IPU230/DLA_SDK_Support.html#1-caffe","text":"\u7b97\u5b50 \u5907\u6ce8 ArgMax only support top 1 Axpy BatchNorm Concat \u6700\u59271024\u4e2atensor concat Convolution \u9650\u5236\u6761\u4ef6\uff1aAll tensor size < 2^31 \u82e5kernel size \u4e3a do*h*w*di \u5219h * w < 64 group\u4e3a1\u65f6\uff1a\u8f6c\u6362\u6210Depthwise Convolution; group\u4e3aC\u65f6\uff1a\u8f6c\u6362\u4e3aConvolution; group\u4e3a (1, C) \u65f6\uff1a\u62c6\u89e3\u6210GroupConv round(di/16)*round(do/16) < 512 * 1024 ConvolutionDepthwise \u539f\u751f\u652f\u6301Kernel_size\u4e3a3*3\uff0c6*6\uff0c9*9\uff0c\u5176\u4f59\u60c5\u51b5\u8f6c\u6362\u6210Convolution\u5904\u7406\u9650\u5236\u6761\u4ef6\uff1aPad\u8303\u56f4\uff1a[0, 1] CReLU \u8f93\u5165<=4\u7ef4 ContinuationIndicator Crop Deconvolution All tensor size < 2^31 \u82e5kernel size \u4e3a do*h*w*di\uff0ch * w < 64 round(di/16)*round(do/16) < 512 * 1024 Dropout Eltwise \u5176\u4e2dPROD\u548cSUM\uff0c\u5bf9\u4e8e\u8f93\u5165\u7684\u4e24\u4e2atensor,\u5f53\u4e3a4\u7ef4\u5411\u91cf\u65f6\uff0c\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6 1. NCHW \uff0cconst 2. NCHW \uff0cC\u7ef4\u5411\u91cf 3. NCHW \uff0cNCHW \u5f53\u4e3a5\u7ef4\u5411\u91cf\u65f6\uff0c\u6ee1\u8db3 1. NCDHW \uff0cconst 2. NCDHW \uff0cNCDHW Flatten InnerProduct \u82e5weight size do*di round(di/16)*round(do/16) < 512 * 1024 Permute Pooling \u82e5kernel size\u4e3ah*w 1.AVGPooling (1).FilterW <= 255\uff0cFilterH <= 255\uff0c (2).AvePooling_U8\uff1aFilterMax(FilterW*FilterH) = 6144\uff0c (3).AvePooling_S16\uff1aFilterMax(FilterW*FilterH) = 6144 2.MaxPooling: \u9700FilterW <= 255\uff0c\u4e14FilterMax(FilterW*FilterH) = 1507328 PriorBox Power \u4ec5\u652f\u6301\u6307\u6570\u4e3a\u6b63\u6574\u6570 Reshape Reverse ROIPooling ROIPooling\u7684rois\u8f93\u5165\u7ef4\u5ea6\u4e3a\uff08N\u00d75\uff09\uff0c\u5f53\u540e\u6bb5\u7f51\u7edc\u5168\u90e8\u662fInnerProduct\u65f6\uff0cN\u624d\u53ef\u4ee5\u8bbe\u7f6e\u5927\u4e8e1\uff0c\u5982\u679c\u540e\u6bb5\u7f51\u7edc\u4e2d\u6709\u5377\u79ef\u65f6\uff0cN\u4ec5\u53ef\u4ee5\u8bbe\u7f6e\u4e3a1\uff0c\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u9700\u8981\u5faa\u73af\u6267\u884cN\u6b21\u3002\u4f7f\u7528\u65b9\u6cd5\u548c\u9650\u5236\u8be6\u89c1\u4e0b\u65b9Please Note\u3002 ReLU \u8f93\u5165<=4\u7ef4 PRuLU \u8f93\u5165<=4\u7ef4 Sigmoid Slice Scale \u5bf9\u4e8e\u8f93\u5165\u7684\u4e24\u4e2atensor,shape\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6 1. 4\u7ef4\u5411\u91cf\uff0cNCHW 2. NCHW \uff0cconst 3. NCHW \uff0cC\u7ef4\u5411\u91cf 4. NCHW \uff0cNCHW \u5f53\u4e3a5\u7ef4\u5411\u91cf\u65f6\uff0c\u6ee1\u8db3 1. NCDHW \uff0cconst 2. NCDHW \uff0cNCDHW Softmax \u5982\u9700\u5bf9\u6307\u5b9a\u7ef4\u5ea6\u8fdb\u884c\u8fd0\u7b97\uff0c\u5c06\u8981\u8ba1\u7b97\u7684\u7ef4\u5ea6\u8f6c\u7f6e\u5230\u6700\u540e\u7684\u7ef4\u5ea6\uff08\u6700\u5185\u7ef4\u5ea6\uff09\uff0c\u6700\u5927\u652f\u630132*512=16384 Splite ShuffleChannel Tanh \u8f93\u5165<=4\u7ef4 Threshold \u53ea\u652f\u63014\u7ef4\u8f93\u5165 Tile Upsample Upsample\u7b97\u5b50\u5728caffe\u4e2d\u6ca1\u6709\uff0c\u53ef\u4ee5\u624b\u52a8\u5c06Deconvolution\u4fee\u6539\u6210Upsample \u53ea\u652f\u63014\u7ef4\u8f93\u5165 Only support same scale on H and W Reorg \u53ea\u652f\u6301stride = 2 LSTM \u652f\u6301\u5355\u5411\uff0c\u53cc\u5411 Please Note: Upsample\u7b97\u5b50\u5728prototxt\u4e2d\u8fd9\u6837\u63cf\u8ff0\uff1a layer { bottom : \"layer85-conv\" top : \"layer86-upsample\" name : \"layer86-upsample\" type : \"Upsample\" upsample_param { scale : 2 } } scale\u53c2\u6570\u4e0eDeconvolution\u7684Stride\u542b\u4e49\u76f8\u540c\u3002\u4f46\u9700\u6ce8\u610fUpsample\u76f8\u5f53\u4e8e\u6743\u91cd\u5168\u4e3a1\u7684Deconvolution\u7b97\u5b50\u3002 ROIPooling\u7b97\u5b50\u5728prototxt\u4e2d\u8fd9\u6837\u63cf\u8ff0\uff1a layer { name : \"roi_pool5\" type : \"ROIPooling\" bottom : \"conv5_3\" bottom : \"rois\" top : \"pool5\" roi_pooling_param { pooled_w : 7 pooled_h : 7 spatial_scale : 0.0625 } } Roi_pooling_param\u4ec5\u652f\u6301pooled_w\uff0cpooled_h\u548cspatial_scale\u3002Float\u6a21\u578b\u7684rois\u8f93\u5165\u4e3arpn\u5c42\u8f93\u51fa\u7684\u5750\u6807\uff0cFixed\u548cOffline\u6a21\u578b\u7684rois\u8f93\u5165\u4e3arpn\u5c42\u8f93\u51fa\u5750\u6807\u4e58spatial_scale\u503c\u540e\u518d\u91cf\u5316\u5230int16\u540e\u9001\u5165\u6a21\u578b\u3002","title":"1. Caffe\u652f\u6301\u7b97\u5b50"},{"location":"module/User_Guide/IPU230/DLA_SDK_Support.html#2-tensorflow","text":"\u7c7b\u522b \u7b97\u5b50 \u5907\u6ce8 Convolution Conv \u9650\u5236\u6761\u4ef6\uff1aKernel_size\uff1aH * W < 64 Convolution DepthwiseConv2dNative \u539f\u751f\u652f\u6301Kernel_size\u4e3a3*3\uff0c6*6\uff0c9*9\uff0c\u5176\u4f59\u60c5\u51b5\u8f6c\u6362\u6210Convolution\u5904\u7406 Convolution FullyConnected Pooling Max pooling Pooling Average Pooling Activation ReLU Activation PReLU Activation ReLU6 Activation LeakyReLU Activation Sigmoid Math Less Math Greater Math GreaterEqual Math Equal Math Add Math Sub Math Mul Math RealDiv \u4ec5\u652f\u6301\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u6570\u4e3a\u5e38\u91cfTensor Math Maximum Math Minimum Math Mean Math Max Math Sqrt Math Rsqrt Math Round Math Softmax \u5982\u9700\u5bf9\u6307\u5b9a\u7ef4\u5ea6\u8fdb\u884c\u8fd0\u7b97\uff0c\u5c06\u8981\u8ba1\u7b97\u7684\u7ef4\u5ea6\u8f6c\u7f6e\u5230\u6700\u540e\u7684\u7ef4\u5ea6\uff08\u6700\u5185\u7ef4\u5ea6\uff09 Math FusedBatchNorm Math Exp DMA Align DMA ConcatV2 DMA Fill DMA Gather DMA GatherV2 DMA Pack DMA Pad DMA SpaceToBatchND DMA BatchToSpaceND DMA Zeroslike DMA Split DMA Slice DMA Unpack DMA Tile DMA Reshape DMA Transpose DMA Resize_bilinear DMA Resize_NearestNeighbor DMA Batch_matmul Misc TopKV2 Misc shape","title":"2. TensorFlow\u652f\u6301\u7b97\u5b50"},{"location":"module/User_Guide/IPU230/DLA_SDK_Support.html#3-onnx","text":"\u7b97\u5b50 \u5907\u6ce8 Add \u5bf9\u4e8e\u8f93\u5165\u7684\u4e24\u4e2atensor,shape\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6 1. 4\u7ef4\u5411\u91cf\uff0cNCHW 2. NCHW \uff0cconst 3. NCHW \uff0cC\u7ef4\u5411\u91cf \u5f53\u4e3a5\u7ef4\u5411\u91cf\u65f6\uff0c\u6ee1\u8db3 1. NCDHW \uff0cconst 2. NCDHW \uff0cNCDHW Abs ArgMax ArgMin AveragePool \u82e5kernel size\u4e3ah*w\uff0c\u9700\u6ee1\u8db3 1.FilterW <= 255\uff0cFilterH <= 255\uff0c 2.AvePooling_U8\uff1aFilterMax(FilterW*FilterH) = 6144\uff0c 3.AvePooling_S16\uff1aFilterMax(FilterW*FilterH) = 6144 BatchNormalization Cast Constant Concat \u6700\u59271024\u4e2atensor concat Convolution All tensor size < 2^31 \u82e5kernel size \u4e3a co*h*w*ci \u5219h * w < 64 round(ci/16)*round(co/16) < 512 * 1024 \u652f\u6301autoPad\u7684SAME_UPPER\u5c5e\u6027;\u9650\u5236\u6761\u4ef6\uff1aPads\u8303\u56f4\uff1a[0, 7] Convolution3D All tensor size < 2^31 \u82e5kernel size \u4e3a co*h*w*d*ci \u5219h * w < 64\uff0cd\u7ef4\u65e0\u9650\u5236 round(ci/16)*round(co/16) < 512 * 1024 \u652f\u6301autoPad\u7684SAME_UPPER\u5c5e\u6027;\u9650\u5236\u6761\u4ef6\uff1aPads\u8303\u56f4\uff1a[0, 7] ConvTranspose All tensor size < 2^32 \u82e5kernel size \u4e3a co*h*w*ci\uff0ch * w < 64 round(ci/16)*round(co/16) < 512 * 1024 Clip Div \u5bf9\u4e8e\u8f93\u5165\u7684\u4e24\u4e2atensor,shape\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6 1. 4\u7ef4\u5411\u91cf\uff0cNCHW 2. NCHW \uff0cconst 3. NCHW \uff0cC\u7ef4\u5411\u91cf \u5f53\u4e3a5\u7ef4\u5411\u91cf\u65f6\uff0c\u6ee1\u8db3 1. NCDHW \uff0cconst 2. NCDHW \uff0cNCDHW Dropout DepthToSpace \u53ea\u652f\u63014\u7ef4\u8f93\u5165 Expand Exp Equal ERF Flatten HardSigmoid Identity InstanceNormalization Gather \u53ea\u652f\u6301indices\u4e3aint32\u7684\u5e38\u6570 Gemm \u8f93\u5165<=4\u7ef4\uff0c\u82e5weight size do*di round(di/16)*round(do/16) < 512 * 1024 GlobalAveragePool \u82e5kernel size\u4e3ah*w\uff0c\u9700\u6ee1\u8db3 1.FilterW <= 255\uff0cFilterH <= 255\uff0c 2.AvePooling_U8\uff1aFilterMax(FilterW*FilterH) = 12288\uff0c 3.AvePooling_S16\uff1aFilterMax(FilterW*FilterH) = 12288 GlobalMaxPool \u82e5kernel size\u4e3ah*w\uff0c\u9700FilterW <= 255\uff0c\u4e14FilterMax(FilterW*FilterH) = 6029312 GreaterOrEqual LogSoftmax LeakyReLU \u8f93\u5165<=4\u7ef4 LSTM \u6fc0\u6d3b\u51fd\u6570\u56fa\u5b9a\uff0c\u4e0d\u80fd\u914d\u7f6e\u3002\u53c2\u89c1\u7528\u6237\u624b\u518c\u7279\u6b8a\u7f51\u7edc\u8f6c\u6362LSTM\u7ae0\u8282,\u652f\u6301\u5355\u5411LSTM\u548c\u53cc\u5411LSTM Matmul \u8f93\u5165<=4\u7ef4\uff0c\u82e5weight size do*di round(di/16)*round(do/16) < 512 * 1024 Mul \u5bf9\u4e8e\u8f93\u5165\u7684\u4e24\u4e2atensor,shape\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6 1. 4\u7ef4\u5411\u91cf\uff0cNCHW 2. NCHW \uff0cconst 3. NCHW \uff0cC\u7ef4\u5411\u91cf \u5f53\u4e3a5\u7ef4\u5411\u91cf\u65f6\uff0c\u6ee1\u8db3 1. NCDHW \uff0cconst 2. NCDHW \uff0cNCDHW Min MaxPool \u82e5kernel size\u4e3ah*w\uff0c\u9700FilterW <= 255\uff0c\u4e14FilterMax(FilterW*FilterH) = 1507328 Max Not Pad \u652f\u6301\uff0conly support constant Pow Reshape PReLU \u8f93\u5165<=4\u7ef4 ReduceSum \u8f93\u5165<=4\u7ef4 ReduceMean \u8f93\u5165<=4\u7ef4 ReduceMax \u8f93\u5165<=4\u7ef4\uff0c\u4ec5\u652f\u6301\u540c\u65f6\u5bf9\u4e00\u4e2aaxis\u8fdb\u884c\u8ba1\u7b97 ReduceMin \u8f93\u5165<=4\u7ef4 Resize \u5f53'model'\u4e3anearest \u4e0a\u91c7\u6837\u65f6\uff0c'coordinate_transformation_mode'\u4e3a'asymmetric', 'nearest_mode'only support round_prefer_floor(Default) and floor coordinate_transformation_mode'\u4e3a'align_corners', 'nearest_mode'only support round_prefer_floor(Default) and round_prefer_ceil. \u4e0b\u91c7\u6837 'coordinate_transformation_mode'\u4e3a'asymmetric', 'nearest_mode' is not support floor ReLU \u53ea\u652f\u63014\u7ef4\u8f93\u5165 ReduceL2 Tanh Sigmoid Slice SoftMax \u5982\u9700\u5bf9\u6307\u5b9a\u7ef4\u5ea6\u8fdb\u884c\u8fd0\u7b97\uff0c\u5c06\u8981\u8ba1\u7b97\u7684\u7ef4\u5ea6\u8f6c\u7f6e\u5230\u6700\u540e\u7684\u7ef4\u5ea6\uff08\u6700\u5185\u7ef4\u5ea6\uff09 Split SpaceToDepth Squeeze Sub \u5bf9\u4e8e\u8f93\u5165\u7684\u4e24\u4e2atensor,shape\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6 1. 4\u7ef4\u5411\u91cf\uff0cNCHW 2. NCHW \uff0cconst 3. NCHW \uff0cC\u7ef4\u5411\u91cf \u5f53\u4e3a5\u7ef4\u5411\u91cf\u65f6\uff0c\u6ee1\u8db3 1. NCDHW \uff0cconst 2. NCDHW \uff0cNCDHW ScatterND Softplus Sqrt Transpose Tile UnSqueeze Upsample \u53ea\u652f\u63014\u7ef4\u8f93\u5165Only support same scale on H and W Pool3D\u2014GloabalAveragePooling Pool3D\u2014MaxPooling","title":"3. Onnx\u652f\u6301\u7b97\u5b50"},{"location":"module/User_Guide/IPU230/DLA_SDK_Support.html#4-sigmastar-ipu-sdk","text":"\u5bf9\u4e8e\u6307\u5b9a\u7ef4\u5ea6\u7684Softmax\uff0c\u6211\u4eec\u53ea\u652f\u6301\u5bf9\u6700\u5185\u7ef4\u5ea6\u7684\u64cd\u4f5c\uff08\u591a\u4f59\u591a\u7ef4Tensor\u7684Softmax\u8fd0\u7b97\uff0c\u6211\u4eec\u53ea\u652f\u6301Softmax\u5236\u5b9a\u5728\u6700\u5185\u7ef4\u5ea6\u505a\uff09\u3002 \u9664\u7b2c\u4e00\u5c42Conv\u5916\uff0c\u5176\u4ed6\u5c42\u7684Conv DI\u7ef4\u5ea6\uff08\u5373NHWC \u4e2dC\u8fd9\u4e2a\u7ef4\u5ea6\uff09\u8d8a\u5927\u6548\u7387\u4f1a\u8d8a\u9ad8\uff0c\u6700\u5927\u652f\u63f42048\u3002 Math\u7c7b\u7b97\u5b50\uff08\u5305\u62ecAdd\u3001Sub\u3001Mul\u3001Div\u7b49\u5143\u7d20\u64cd\u4f5c\u7684\u7b97\u5b50\uff09\uff0c\u5982\u679c\u53f3\u64cd\u4f5c\u6570\u662fscaler\uff08\u5355\u4e2a\u6570\u5b57\uff09 \u6216\u8005 1 \u7ef4\u5411\u91cf\uff08HW\u7ef4\u5ea6\u6570\u636e\u76f8\u540c\uff0cC\u7ef4\u5ea6\u4e0d\u540c\uff09\uff0c\u6548\u7387\u4f1a\u66f4\u9ad8\u3002 \u7f51\u7edc\u7ed3\u6784\u4e2d\u5c3d\u91cf\u51cf\u5c11\u4e00\u4e2a\u7b97\u5b50\u7684\u8f93\u51fa\u88ab\u591a\u4e2a\u7b97\u5b50\u4f5c\u4e3a\u8f93\u5165\u7684\u60c5\u51b5\uff0c\u5982ResNet\u7684\u6b8b\u5dee\u7ed3\u6784\uff0cGoogLeNet\u7684Inception\u6a21\u5757\u7b49\u3002\u53ef\u53c2\u8003 \u6784\u5efaBW\u53cb\u597d\u578b\u6a21\u578b","title":"4. SigmaStar IPU SDK\u5bf9\u6a21\u578b\u7684\u9650\u5236"},{"location":"module/User_Guide/IPU230/DLA_SDK_Support.html#5","text":"\uff081\uff09\u5bf9\u4e8e\u5377\u79ef\u7684\u6027\u80fd\u4f18\u5316 kernel size 3x3 \u6700\u597d\uff0c\u7279\u522b\u5bf9\u4e8e\u9996\u5c42\u3002 kernel size 1x1 \u7684\u65f6\u5019\uff0cinput tensor \u6700\u5185\u7ef4\u5ea6shape\u503c\u5bf9\u9f50\u523016 \u6700\u597d\u3002 \uff082\uff09\u5bf9\u4e8eDMA\u7b97\u5b50 concatenation\u7b97\u5b50\u6bd4pack\u7b97\u5b50\u6027\u80fd\u66f4\u597d\u3002 split\u6bd4slice\u7b97\u5b50\u6027\u80fd\u66f4\u597d\u3002 \u5c3d\u91cf\u51cf\u5c11\u5728\u6700\u5185\u7ef4\u4e0a\u505atranspose\u3002 \u5355\u53e3elementwise \u7b97\u5b50\u7684const \u64cd\u4f5c\u6570\u6700\u597d\u662f\u53f3\u64cd\u4f5c\u6570\uff0c\u5373input[1]\u3002 \uff083\uff09\u7efc\u5408\u90e8\u5206 Tensor\u7684\u7ef4\u5ea6\u4e3a4\u6700\u597d\u3002 Tensor\u6700\u5185\u7ef4\u7684shape\u503c\u5bf9\u9f50\u523032\u6700\u597d\u3002 Softmax\u6700\u597d\u53ea\u5bf9\u6700\u5185\u7ef4\u5ea6\u64cd\u4f5c\u3002 ReduceMax\u3001ReduceMin\u3001ReduceSum\u6700\u597d\u574d\u584c\u7684\u7eac\u5ea6\u662f\u76f8\u90bb\u7684\u3002 \uff084\uff09\u5408\u5e76\u89c4\u5219 Pad + Conv2D/DepthwiseConv\uff0cpad\u4f1a\u88ab\u5408\u5e76\u5230\u5377\u79ef\u4e2d\uff0cpad\u51e0\u4e4e\u4e0d\u5360\u7528\u65f6\u95f4\u3002 Conv2D/DepthwiseConv + \u5355\u53e3Mul + \u5355\u53e3Add\uff0cMul\u548cAdd\u7b97\u5b50\u4f1a\u548c\u5377\u79ef\u4e00\u8d77\u8fd0\u7b97\u3002\u6211\u4eec\u4f1a\u628aBatchNorm\u8f6c\u6362\u6210Mul+Add,\u6240\u4ee5Conv2D/DepthwiseConv + BatchNorm\u53ef\u4ee5\u5408\u5e76\u3002 Pad + avgPooling \u53ef\u4ee5\u5408\u5e76\u3002 \u8fde\u7eed\u7684transpose\u4f1a\u81ea\u52a8\u5408\u5e76\u4e3a\u4e00\u4e2a\u3002 \u6240\u6709reshape\u7b97\u5b50\u90fd\u4f1a\u88ab\u8df3\u8fc7\u3002 \u8fde\u7eed\u7684\u5355\u53e3\u7684\u76f8\u540celementwise\u7b97\u5b50\u4f1a\u5408\u5e76\u3002 \u5355\u72ec\u7684\u5355\u53e3mul\u548c\u5355\u53e3add\uff0c\u4f1a\u53d8\u6210MultAdd\u5355\u4e00\u7684\u7b97\u5b50\u3002 \u6ce8\u610f\uff1a\u8fd9\u91cc\u5355\u53e3\u610f\u601d\u4e3a\u4e00\u4e2a\u6570\u636e\u662fconstant\u7684\u60c5\u51b5 \uff085\uff09\u6784\u5efaBW\u53cb\u597d\u7684AI\u6a21\u578b BW\u53cb\u597d\u7684AI\u6a21\u578b\u6307\u6a21\u578b\u6570\u636e\u5c3d\u53ef\u80fd\u4e0d\u5360\u7528\u7cfb\u7edf\u603b\u7ebfBW\u8d44\u6e90\uff0cBW\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b: BW = Input BW + Output BW + Const BW + Variable BW \u5176\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7\u51cf\u5c11variable bw\u6765\u63d0\u5347\u6a21\u578b\u6027\u80fd,variable bw\u5c06\u53d7\u4ee5\u4e0b\u4e24\u70b9\u5f71\u54cd\uff1a (1) tensor\u6570\u636e\u91cf\u592a\u5927 (2) tensor\u7684\u751f\u547d\u5468\u671f\u592a\u957f \u793a\u4f8b\u4e00\uff1aBW\u53cb\u597d\u578b \u793a\u4f8b\u4e8c\uff1atensor\u7684\u751f\u547d\u5468\u671f\u592a\u957f \u793a\u4f8b\u4e09\uff1atensor\u6570\u636e\u91cf\u592a\u5927 \u4e0a\u56fe\u5c55\u793a\u4e86\u4e09\u79cd\u5e38\u89c1\u7684\u6a21\u578b\u7ed3\u6784\u56fe\uff0c\u5176\u4e2d\u56fe\u4e00\u6240\u793a\u7684\u7ed3\u6784\u7b26\u5408\u6a21\u578b\u4f18\u5316\u89c4\u5219\uff0c\u56fe\u4e8c\u3001\u56fe\u4e09\u6240\u793a\u7684\u7ed3\u6784\u5c06\u5f71\u54cd\u6a21\u578b\u6027\u80fd\u3002\u6784\u5efa\u6a21\u578b\u65f6\u8bf7\u5c3d\u53ef\u80fd\u51cf\u5c11\u56fe\u4e8c\u3001\u56fe\u4e09\u7ed3\u6784\u7684\u4f7f\u7528\u3002","title":"5. \u6a21\u578b\u6027\u80fd\u4f18\u5316\u89c4\u5219"},{"location":"module/User_Guide/IPU230/Directory_Navigation.html","text":"1. \u7ae0\u8282\u603b\u7ed3 \u00b6 \u529f\u80fd \u6307\u5357 \u76ee\u5f55 \u7f51\u7edc\u8f6c\u6362 \u8f6c\u6362\u4e3aSGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b 2.1 Convert Tool\u7b80\u4ecb 2.2 \u4e0d\u540c\u6846\u67b6\u6a21\u578b\u8f6c\u6362\u4e3aSGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u7684\u4f7f\u7528\u65b9\u6cd5 2.2.1 caffe\u6846\u67b6\u6307\u4ee4 2.2.2 Onnx\u6846\u67b6\u6307\u4ee4 2.2.3 tflite\u6846\u67b6\u6307\u4ee4 2.2.4 tensorflow_savemodel \u6846\u67b6\u6307\u4ee4 2.2.5 tensorflow_graphdef \u6846\u67b6\u6307\u4ee4 2.2.6 keras\u6846\u67b6\u6307\u4ee4 2.3. input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e 2.3.1 INPUT_CONFIG 2.3.2 OUTPUT_CONFIG 2.3.3 CONV_CONFIG 2.3.4 \u8f93\u5165\u8f93\u51fa\u914d\u7f6e\u603b\u7ed3 \u8f6c\u6362\u4e3aSGS\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b 3.1. Calibrator\u7b80\u4ecb 3.2. Calibrator\u5de5\u5177\u4f7f\u7528\u8bf4\u660e 3.2.1 Calibrator\u5de5\u5177\u4f7f\u7528\u793a\u4f8b 3.2.2 Calibrator\u5de5\u5177\u4f7f\u7528\u53c2\u6570\u8bf4\u660e 3.3. \u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5 3.4. calibrator_custom.calibrator\u7b80\u4ecb 3.4.1 calibrator_custom.calibrator\u65b9\u6cd5 3.4.2 calibrator_custom.SIM_Calibrator 3.4.3 calibrator_custom.calibrator\u5bfc\u5165\u91cf\u5316\u53c2\u6570\u89c4\u5219 3.5. torch_calibrator\u7b80\u4ecb 3.5.1. torch_calibrator\u5de5\u5177\u4f7f\u7528\u8bf4\u660e 3.5.2. torch_calibrator\u91cf\u5316\u9009\u9879 3.5.3. torch_calibrator\u91cf\u5316\u53c2\u6570(yaml\u683c\u5f0f)\u6587\u4ef6 \u8f6c\u6362\u4e3aSGS\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b 4.1 Compiler\u7b80\u4ecb 4.2 Compiler\u5de5\u5177\u4f7f\u7528\u8bf4\u660e 4.2.1 Compiler\u5de5\u5177\u4f7f\u7528\u793a\u4f8b 4.2.2 Compiler\u5de5\u5177\u4f7f\u7528\u53c2\u6570\u8bf4\u660e \u677f\u7aef\u8fd0\u884c\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b \u4e00\u952e\u751f\u6210SGS\u79bb\u7ebf\u6a21\u578b \u7f51\u7edc\u63a8\u6f14 SigmaStar\u6d6e\u70b9/\u5b9a\u70b9/\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u9a8c\u8bc1 5.1. Simulator\u7b80\u4ecb 5.2 Simulator\u5de5\u5177\u4f7f\u7528\u8bf4\u660e 5.2.1 Simulator\u5de5\u5177\u4f7f\u7528\u793a\u4f8b 5.2.2 Simulator\u5de5\u5177\u4f7f\u7528\u53c2\u6570\u8bf4\u660e SigmaStar\u6d6e\u70b9/\u5b9a\u70b9/\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u6570\u636e\u89e3\u6790 6.1. DumpDebug Tool\u7b80\u4ecb 6.2. DumpDebug Tool\u5de5\u5177\u4f7f\u7528\u8bf4\u660e 6.2.1 DumpDebug Tool\u5de5\u5177\u5982\u4f55\u89e3\u6790\u7f51\u7edc\u6a21\u578b\u6570\u636e 6.2.2 \u4f7f\u7528auto_dump_debug.sh\u811a\u672c\u5206\u6790\u6570\u636e IPU\u7cbe\u5ea6\u95ee\u9898Debug SOP \u7279\u6b8a\u7f51\u7edc\u8f6c\u6362 \u6dfb\u52a0\u65b0\u7684layer \u7279\u6b8a\u6a21\u578b\u8f6c\u6362\u8981\u70b9 \u7070\u5ea6\u6a21\u578b RAWDATA_F32_NHWC\u4e0eRAWDATA_S16_NHWC\u8f93\u5165\u7684\u6a21\u578b \u5206\u6bb5\u7f51\u7edc \u591a\u8f93\u5165\u7f51\u7edc \u8f85\u52a9\u67e5\u770b\u5de5\u5177 DLA SDK \u8f85\u52a9\u5de5\u5177 Offline\u6a21\u578b\u4fe1\u606f\u67e5\u770b\u5de5\u5177 IPU Log\u6027\u80fd\u5206\u6790\u5de5\u5177 IPU\u7f51\u7edc\u6a21\u578b\u6570\u636e\u5bf9\u6bd4\u5206\u6790\u5de5\u5177","title":"\u9605\u524d\u987b\u77e5\u2161. \u624b\u518c\u76ee\u5f55\u603b\u89c8"},{"location":"module/User_Guide/IPU230/Directory_Navigation.html#1","text":"\u529f\u80fd \u6307\u5357 \u76ee\u5f55 \u7f51\u7edc\u8f6c\u6362 \u8f6c\u6362\u4e3aSGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b 2.1 Convert Tool\u7b80\u4ecb 2.2 \u4e0d\u540c\u6846\u67b6\u6a21\u578b\u8f6c\u6362\u4e3aSGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u7684\u4f7f\u7528\u65b9\u6cd5 2.2.1 caffe\u6846\u67b6\u6307\u4ee4 2.2.2 Onnx\u6846\u67b6\u6307\u4ee4 2.2.3 tflite\u6846\u67b6\u6307\u4ee4 2.2.4 tensorflow_savemodel \u6846\u67b6\u6307\u4ee4 2.2.5 tensorflow_graphdef \u6846\u67b6\u6307\u4ee4 2.2.6 keras\u6846\u67b6\u6307\u4ee4 2.3. input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e 2.3.1 INPUT_CONFIG 2.3.2 OUTPUT_CONFIG 2.3.3 CONV_CONFIG 2.3.4 \u8f93\u5165\u8f93\u51fa\u914d\u7f6e\u603b\u7ed3 \u8f6c\u6362\u4e3aSGS\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b 3.1. Calibrator\u7b80\u4ecb 3.2. Calibrator\u5de5\u5177\u4f7f\u7528\u8bf4\u660e 3.2.1 Calibrator\u5de5\u5177\u4f7f\u7528\u793a\u4f8b 3.2.2 Calibrator\u5de5\u5177\u4f7f\u7528\u53c2\u6570\u8bf4\u660e 3.3. \u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5 3.4. calibrator_custom.calibrator\u7b80\u4ecb 3.4.1 calibrator_custom.calibrator\u65b9\u6cd5 3.4.2 calibrator_custom.SIM_Calibrator 3.4.3 calibrator_custom.calibrator\u5bfc\u5165\u91cf\u5316\u53c2\u6570\u89c4\u5219 3.5. torch_calibrator\u7b80\u4ecb 3.5.1. torch_calibrator\u5de5\u5177\u4f7f\u7528\u8bf4\u660e 3.5.2. torch_calibrator\u91cf\u5316\u9009\u9879 3.5.3. torch_calibrator\u91cf\u5316\u53c2\u6570(yaml\u683c\u5f0f)\u6587\u4ef6 \u8f6c\u6362\u4e3aSGS\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b 4.1 Compiler\u7b80\u4ecb 4.2 Compiler\u5de5\u5177\u4f7f\u7528\u8bf4\u660e 4.2.1 Compiler\u5de5\u5177\u4f7f\u7528\u793a\u4f8b 4.2.2 Compiler\u5de5\u5177\u4f7f\u7528\u53c2\u6570\u8bf4\u660e \u677f\u7aef\u8fd0\u884c\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b \u4e00\u952e\u751f\u6210SGS\u79bb\u7ebf\u6a21\u578b \u7f51\u7edc\u63a8\u6f14 SigmaStar\u6d6e\u70b9/\u5b9a\u70b9/\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u9a8c\u8bc1 5.1. Simulator\u7b80\u4ecb 5.2 Simulator\u5de5\u5177\u4f7f\u7528\u8bf4\u660e 5.2.1 Simulator\u5de5\u5177\u4f7f\u7528\u793a\u4f8b 5.2.2 Simulator\u5de5\u5177\u4f7f\u7528\u53c2\u6570\u8bf4\u660e SigmaStar\u6d6e\u70b9/\u5b9a\u70b9/\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u6570\u636e\u89e3\u6790 6.1. DumpDebug Tool\u7b80\u4ecb 6.2. DumpDebug Tool\u5de5\u5177\u4f7f\u7528\u8bf4\u660e 6.2.1 DumpDebug Tool\u5de5\u5177\u5982\u4f55\u89e3\u6790\u7f51\u7edc\u6a21\u578b\u6570\u636e 6.2.2 \u4f7f\u7528auto_dump_debug.sh\u811a\u672c\u5206\u6790\u6570\u636e IPU\u7cbe\u5ea6\u95ee\u9898Debug SOP \u7279\u6b8a\u7f51\u7edc\u8f6c\u6362 \u6dfb\u52a0\u65b0\u7684layer \u7279\u6b8a\u6a21\u578b\u8f6c\u6362\u8981\u70b9 \u7070\u5ea6\u6a21\u578b RAWDATA_F32_NHWC\u4e0eRAWDATA_S16_NHWC\u8f93\u5165\u7684\u6a21\u578b \u5206\u6bb5\u7f51\u7edc \u591a\u8f93\u5165\u7f51\u7edc \u8f85\u52a9\u67e5\u770b\u5de5\u5177 DLA SDK \u8f85\u52a9\u5de5\u5177 Offline\u6a21\u578b\u4fe1\u606f\u67e5\u770b\u5de5\u5177 IPU Log\u6027\u80fd\u5206\u6790\u5de5\u5177 IPU\u7f51\u7edc\u6a21\u578b\u6570\u636e\u5bf9\u6bd4\u5206\u6790\u5de5\u5177","title":"1. \u7ae0\u8282\u603b\u7ed3"},{"location":"module/User_Guide/IPU230/DumpDebug_Tool.html","text":"6.1. DumpDebug Tool\u7b80\u4ecb \u00b6 DumpDebugTool \u8bf4\u660e \u5de5\u5177\u4f4d\u7f6e SGS_IPU_SDK/DumpDebug/ \u5de5\u5177\u4f5c\u7528 \u63d0\u4f9b\u6a21\u578b\u91cf\u5316\u540e\u7cbe\u5ea6\u4e0b\u964d\u95ee\u9898\u7684\u6392\u67e5\u65b9\u6cd5 \u89e3\u6790\u7f51\u7edc\u6a21\u578b\u6570\u636e \u5bf9\u6bd4\u4e0d\u540c\u9636\u6bb5\u7684\u7f51\u7edc\u6a21\u578b\u6570\u636e \u4f7f\u7528\u987b\u77e5 \u2460 SigmaStar DLA SDK\u5728\u8f6c\u6362\u7f51\u7edc\u65f6\u7684\u6570\u636e\u4e00\u81f4\u6027\u8bf4\u660e\uff1a \u539f\u59cb\u6a21\u578b\u8f6c\u5316\u4e3aSigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\uff1a Caffe\u3001Onnx\u3001TensorFlow\u7684\u7f51\u7edc\u6a21\u578b\u4e0eSigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u7684\u7ed3\u679c\u5b8c\u5168\u4e00\u81f4; SigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u5316\u4e3aSigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff1a \u6709\u7cbe\u5ea6\u5dee\u522b\u7684\u53ea\u6709\u5728SigmaStar\u6d6e\u70b9\u6a21\u578b\u8f6c\u6362\u4e3aSigmaStar\u5b9a\u70b9\u8fd9\u4e2a\u9636\u6bb5; SigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u5316\u4e3aSigmaStar\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\uff1a SigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u4e0eSigmaStar\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u7684\u7ed3\u679c\u5b8c\u5168\u4e00\u81f4; \u2461 \u53d1\u73b0SigmaStar\u5b9a\u70b9\u7f51\u7edc\u7684\u7ed3\u679c\u4e0e\u539f\u6709\u6d6e\u70b9\u7684\u7ed3\u679c\u76f8\u5dee\u8f83\u591a\u65f6\uff0c\u4f7f\u7528DumpDebug Tool\u53ef\u4ee5\u68c0\u67e5\u8f6c\u6362\u540e\u5b9a\u70b9\u7f51\u7edc\u7684\u9519\u8bef\u3002 \u5bf9\u6bd4\u5206\u6790SigmaStar\u6d6e\u70b9\u4e0e\u5b9a\u70b9\u6a21\u578b \u2462 DumpDebug Tool\u4e5f\u53ef\u7528\u4e8e\u76f4\u63a5dump\u539f\u6a21\u578bCaffe/Onnx\u7684\u6bcf\u4e00\u5c42\u6570\u636e\uff0c\u4ee5\u4fbf\u4e0eSigmaStar\u6a21\u578b\u8fdb\u884c\u5bf9\u6bd4\u3002 \u5bf9\u6bd4\u5206\u6790SigmaStar\uff08\u6d6e\u70b9/\u5b9a\u70b9\uff09\u6a21\u578b\u4e0e\u539f\u6a21\u578b\uff08Caffe/Onnx\uff09 6.2. DumpDebug Tool\u5de5\u5177\u4f7f\u7528\u8bf4\u660e \u00b6 6.2.1 DumpDebug Tool\u5de5\u5177\u5982\u4f55\u89e3\u6790\u7f51\u7edc\u6a21\u578b\u6570\u636e \u00b6 6.2.1.1 Dump\u89e3\u6790SigmaStar\u6d6e\u70b9\u6216\u5b9a\u70b9\u6a21\u578b \u00b6 setp1: \u5728 SGS_IPU_SDK/cfg \u6587\u4ef6\u5939\u4e2d\u627e\u5230DebugConfig.txt\u6587\u4ef6\uff0c\u590d\u5236\u5230\u5f53\u524d\u8fd0\u884c\u8def\u5f84\u4e0b. step2: \u6253\u5f00DebugConfig.txt\uff0c\u4fee\u6539\u6587\u4ef6\u5185\u5bb9\uff1a dumpTensor eliminateGarbage dequantFixed #dumpasstring #disableDomainFuseOps path = \u4f7f\u7528\u987b\u77e5 DebugConfig.txt\u5404\u53c2\u6570\u4f5c\u7528: dumpTensor : Dump\u7f51\u7edc\u6a21\u578b\u5404\u5c42\u6570\u636e\u603b\u5f00\u5173\u3002 eliminateGarbage : Dump\u7f51\u7edc\u6a21\u578b\u6570\u636e\u65f6\u53bb\u9664\u65e0\u7528\u6570\u636e\uff08\u5efa\u8bae\u5f00\u542f\uff09\u3002 dequantFixed : \u9488\u5bf9\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff0c\u5c06\u6574\u5f62\u6570\u636e\u8f6c\u6362\u4e3a\u6d6e\u70b9\u6570\u636e\uff08\u5efa\u8bae\u5f00\u542f\uff09\u3002 dumpasstring : Dump\u7f51\u7edc\u6a21\u578b\u6570\u636e\u4e3a\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u5173\u95ed\u9009\u9879\u4e3a\u4e8c\u8fdb\u5236\u6587\u4ef6\u7c7b\u578b\u3002\uff08\u5982\u679c\u9700\u8981[6.2.2 \u4f7f\u7528auto_dump_debug.sh\u811a\u672c\u5206\u6790\u6570\u636e]\u529f\u80fd\uff0c\u52a1\u5fc5\u5173\u95ed\u6b64\u9009\u9879\uff09\u3002 disableDomainFuseOps : \u8f6c\u6362\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u65f6\uff0c\u53d6\u6d88\u7f51\u7edc\u5c42\u878d\u5408\uff08\u5efa\u8bae\u5173\u95ed\uff09\u3002 path= : \u6307\u5b9a\u751f\u6210\u6863\u6848\u7684\u8f93\u51fa\u5168\u8def\u5f84\uff08path= \u540e\u9762\u786e\u4fdd\u586b\u5199\u7c7b\u4f3c /home/user \u7684\u7edd\u5bf9\u8def\u5f84\u3002\u5982\u679cpath= \u540e\u9762\u6ca1\u6709\u5185\u5bb9\u6216\u6839\u672c\u6ca1\u6709 path= \u7684\u8bdd\uff0c\u5219\u4f1a\u9ed8\u8ba4\u8f93\u51fa\u5230 $HOME \u4f4d\u7f6e\u3002\u53e6\u5916\uff0c\u7edd\u5bf9\u8def\u5f84\u6216 /home/user \u4e0d\u8d85\u8fc7122\u5b57\u8282\uff09\u3002 step3: \u8fd0\u884csimulator\u5bf9\u5355\u5f20\u56fe\u7247\u63a8\u6f14\u3002 \u4f7f\u7528\u987b\u77e5 simulator\u5de5\u5177\u4f7f\u7528\u8be6\u89c1 simulator step4: \u63a8\u6f14\u5b8c\u6210\u540e\uff0c\u4f1a\u5728DebugConfig.txt\u6587\u4ef6\u4e2d path= \u53c2\u6570\u6307\u5b9a\u7684\u76ee\u5f55\u4e0b\u751f\u6210sigma_outtensor_dump.bin\u6587\u4ef6\uff0c\u7528\u4e8e\u4fdd\u5b58Dump\u51fa\u7684\u7f51\u7edc\u6a21\u578b\u4e2d\u5404\u5c42\u6570\u636e\u3002 \u4f7f\u7528\u987b\u77e5 Dump\u5b8c\u6210\u540e,\u7ed3\u679c\u5c06\u4fdd\u5b58\u5728sigma_outtensor_dump.bin\u6587\u4ef6\u4e2d\uff0c\u82e5\u9700\u91cd\u547d\u540d\uff0c\u8bf7\u52ff\u4fee\u6539\u6587\u4ef6\u540e\u7f00 .bin\u3002 \u65b0\u7684Dump\u4f1a\u590d\u5199sigma_outtensor_dump.bin\u6587\u4ef6\uff0c\u82e5\u91cd\u65b0\u8fd0\u884c\uff0c\u8bf7\u6ce8\u610f\u4fdd\u5b58\u3002 DebugConfig.txt\u6587\u4ef6\u4e2ddisableDomainFuseOps \u9009\u9879\u8bf4\u660e\uff1a \u4f5c\u7528\u4e8e\u8f6c\u6362\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u9636\u6bb5\uff0c\u5efa\u8bae\u5173\u95ed\u3002 \u4f7f\u7528\u65f6\uff0c\u9ed8\u8ba4\u5173\u95ed\u8be5\u9009\u9879\uff0c\u5373calibrator\u5c06\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u6210\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u65f6\u5c06\u8fdb\u884c\u7f51\u7edc\u878d\u5408\uff0c\u5982\u679c\u6253\u5f00\u8be5\u9009\u9879\uff0c\u5219\u5c06\u53d6\u6d88\u7f51\u7edc\u878d\u5408\u529f\u80fd\u3002 \u5173\u95ed\u8be5\u9009\u9879\u65f6\uff0c\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u548c\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u80fd\u591f\u5728\u8f6c\u6362\u65f6\u4f18\u5316\u7f51\u7edc\u6a21\u578b\u7684\u7b97\u5b50\uff0c\u52a0\u901f\u6a21\u578b\u7684\u8fd0\u884c\uff0c\u4f46\u662f\u4e5f\u4f1a\u5f71\u54cd\u7f51\u7edc\u7684\u5c42\u7ea7\u7ed3\u6784\uff0c\u4f7f\u5f97\u90e8\u5206\u7b97\u5b50\u7684\u8f93\u51fa\u4e0d\u4f1a\u88abDump\u5230sigma_outtersor_dump.bin\u6587\u4ef6\u4e2d\u3002 \u5982\u679c\u9700\u8981\u7f51\u7edc\u6a21\u578b\u7684\u6bcf\u4e00\u5c42\u6570\u636e\uff0c\u53ef\u4ee5\u6253\u5f00disableDomainFuseOps\u9009\u9879\uff0c\u91cd\u65b0\u8fd0\u884ccalibrator\u8f6c\u6362\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff0c\u6b64\u65f6\u8f6c\u51fa\u7684\u6a21\u578b\u6ca1\u6709\u878d\u5408\u4f18\u5316\uff0c\u53ef\u4ee5\u8f93\u51fa\u6bcf\u5c42\u7684\u6570\u636e\u3002 \u5bf9\u6bd4\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u548c\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff0c\u4f7f\u7528simulator\u4e2d\u53c2\u6570 -t/--type \u548c -m/--model \u6307\u5b9a\u4e0d\u540c\u9636\u6bb5\u7684\u6a21\u578b\uff0c\u5373\u53efDump\u51fa\u4e0d\u540c\u9636\u6bb5\u7684\u7f51\u7edc\u6a21\u578b\u6570\u636e\u3002\u8be6\u89c1 simulator \u3002 \u79bb\u7ebf\u6a21\u578b\u4e0d\u652f\u6301Dump Debug,\u79bb\u7ebf\u6a21\u578b\u7f51\u7edc\u7684\u5c42\u7ea7\u7ed3\u6784Domain\u5df2\u7ecf\u878d\u5408\uff0c\u4e0d\u80fdDump\u7f51\u7edc\u6a21\u578b\u4e2d\u5404\u5c42\u7684\u6570\u636e\u3002 \u4f7f\u7528calibrator\u5c06\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u4e3a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u65f6\uff0c\u4f1a\u5728SGS_IPU_SDK\u6839\u76ee\u5f55\u4e0b\u4ea7\u751ftensor_min_max.txt \u6587\u4ef6\uff0c\u6b64\u6587\u4ef6\u8bb0\u5f55\u4e86\u7f51\u7edc\u7684\u6bcf\u5c42\u8f93\u5165\u548c\u8f93\u51fa\u7684\u6700\u5927\u4e0e\u6700\u5c0f\u503c\uff0c\u5c06\u5728\u4e4b\u540e\u5206\u6790Dump\u6570\u636e\u65f6\u6709\u7528\u3002 6.2.1.2 Dump\u89e3\u6790Caffe\u539f\u6a21\u578b \u00b6 (1) \u5de5\u5177\u7684\u4f4d\u7f6e\u5728 SGS_IPU_SDK/DumpDebug/code/caffe_dump_data.py \u3002 (2) caffe_dump_data.py\u811a\u672c\u9700\u8981\u4f7f\u7528 python2 \u8fd0\u884c\uff08Caffe\u4ec5\u652f\u6301python2\uff09\uff0c\u7528\u4e8e\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u6216\u8005\u4e8c\u8fdb\u5236\u5f62\u5f0fdump\u51faCaffe\u539f\u6a21\u578b\u6bcf\u4e00\u5c42\u7684\u6570\u636e\u3002 (3) \u4f7f\u7528\u793a\u4f8b\uff1a step1: caffe_dump_data.py\u4e2d\u4fee\u6539Caffe\u7684\u8fd0\u884c\u8def\u5f84\uff0c\u6bd4\u5982\uff1a caffe_root = '/home/your_caffe_root' sys.path.insert ( 0 ,caffe_root+ '/python' ) step2: \u8fd0\u884c\u811a\u672c\uff1a python2 caffe_dump_data.py \\ --model_file caffe_mobilenet_v2.prototxt \\ --weight_file caffe_mobilenet_v2.caffemodel \\ --i ./img.bmp \\ --dump_bin True \\ -n ./caffe_mobilenet_v2.py (4) \u4f7f\u7528\u53c2\u6570\u8bf4\u660e\uff1a \u2460 \u5fc5\u9009\u53c2\u6570\u8bf4\u660e\uff1a --model_file : Caffe\u539f\u6a21\u578bprototxt\u6587\u4ef6\u8def\u5f84\u3002 --weight_file : Caffe\u539f\u6a21\u578bcaffemodel\u6587\u4ef6\u8def\u5f84\u3002 -i , --image : \u56fe\u7247\u6587\u4ef6\u6216\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\u6216 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u3002 --dump_bin : \u662f\u5426\u4ee5\u4e8c\u8fdb\u5236\u5f62\u5f0fdump\u6bcf\u4e00\u5c42\u7ed3\u679c\u3002 dump_bin\u53ef\u9009 True / False True: Dump\u7ed3\u679c\u4ee5\u4e8c\u8fdb\u5236\u5f62\u5f0f\u4fdd\u5b58\u4e8e\u5f53\u524d\u8fd0\u884c\u76ee\u5f55\u4e0b,\u5c06\u81ea\u52a8\u521b\u5efa\u6587\u4ef6\u5939dumpData, \u5185\u5b58\u6709caffe_NHWC_outtensor_dump.bin\u7ed3\u679c\u6587\u4ef6 ./dumpData/caffe_NHWC_outtensor_dump.bin\uff084\u7ef4tensor\u6392\u5e03\u683c\u5f0f\u4e3aNHWC\uff0c\u4e0eSigmaStar\u6a21\u578b\u76f8\u540c\uff09 False: Dump\u7ed3\u679c\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u4fdd\u5b58\u4e8e\u5f53\u524d\u8fd0\u884c\u76ee\u5f55\u4e0b\uff0c\u5c06\u81ea\u52a8\u521b\u5efa\u6587\u4ef6\u5939dumpData\uff0c\u5185\u5b58\u6709caffe_NHWC_outtensor_dump.txt\u7ed3\u679c\u6587\u4ef6\u53caNHWC\u548cNCHW\u6587\u4ef6\u5939 ./dumpData/caffe_NHWC_outtensor_dump.txt\uff084\u7ef4tensor\u6392\u5e03\u683c\u5f0f\u4e3aNHWC\uff0c\u4e0eSigmaStar\u6a21\u578b\u76f8\u540c\uff09 ./dumpData/NHWC\uff08\u6bcf\u5c42\u8f93\u51fa\u5355\u72ec\u751f\u6210\u6587\u4ef6\uff0c4\u7ef4tensor\u6392\u5e03\u683c\u5f0f\u4e3aNHWC\uff0c\u4e0eSigmaStar\u6a21\u578b\u76f8\u540c\uff09 ./dumpData/NCHW\uff08\u6bcf\u5c42\u8f93\u51fa\u5355\u72ec\u751f\u6210\u6587\u4ef6\uff0c4\u7ef4tensor\u6392\u5e03\u683c\u5f0f\u4e3aNCHW\uff0c\u4e0e\u539f\u6a21\u578b\u6392\u5e03\u76f8\u540c\uff09 \u5982\u679c\u9700\u8981[6.2.2 \u4f7f\u7528auto_dump_debug.sh\u811a\u672c\u5206\u6790\u6570\u636e]\u529f\u80fd\uff0c\u52a1\u5fc5\u4f7f\u7528 True\u3002 -n , --preprocess : \u524d\u5904\u7406\u65b9\u6cd5\uff0c\u8bf7\u76f4\u63a5\u7ed9\u5b9a\u524d\u5904\u7406python\u6587\u4ef6\u8def\u5f84\u3002\u9700\u8981\u786e\u4fdd\u524d\u5904\u7406python\u6587\u4ef6\u4e2d\u5305\u542b get_image \u51fd\u6570\uff0c\u5e76\u4e14\u8be5\u51fd\u6570\u5e26\u6709 nchw \u53c2\u6570\u7528\u6765\u5904\u7406\u539f\u6a21\u578b4\u7ef4\u8f93\u5165\u7684\u6392\u5e03\u4e3aNCHW\uff08caffe_dump_data.py\u4f1a\u76f4\u63a5\u8c03\u7528get_image\u51fd\u6570\u6765\u751f\u6210\u6a21\u578binput\u6570\u636e\uff0c\u5e76\u4e14\u5f3a\u5236nchw=True\uff09\u3002 \u524d\u5904\u7406\u811a\u672c\u51fd\u6570\u793a\u4f8b\uff1a def get_image ( img_path, resizeH = 224 , resizeW = 224 , resizeC = 3 , norm = True, meanB = 104 , meanG = 117 , meanR = 123 , std = 58 .82, rgb = False, nchw = False ) : ... ... if nchw: # NCHW img_norm = np.transpose ( img_norm.reshape ( resizeH, resizeW, -1 ) , axes =( 2 , 0 , 1 )) return np.expand_dims ( img_norm, 0 ) Please Note: \u82e5\u6a21\u578b\u4e3a \u591a\u8f93\u5165 \u65f6\uff0c -n,--preprocess \u53c2\u6570\u7528\u6cd5\u9700\u8981\u591a\u4e2a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4f8b\u5982 -n preprocess1.py,preprocess2.py \u6216\u8005 --preprocess preprocess1.py,preprocess2.py \u82e5\u6a21\u578b\u4e3a \u591a\u8f93\u5165 \u65f6\uff0c -i/--image \u53c2\u6570\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\u3002 6.2.1.3 Dump\u89e3\u6790Onnx\u539f\u6a21\u578b \u00b6 (1) \u5de5\u5177\u7684\u4f4d\u7f6e\u5728 SGS_IPU_SDK/DumpDebug/code/onnx_dump_data.py \u3002 (2) onnx_dump_data.py\u811a\u672c\u9700\u8981\u4f7f\u7528 python3 \u8fd0\u884c\uff08\u4e0eIPU SDK\u73af\u5883\u76f8\u540c\uff09\uff0c\u7528\u4e8e\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u6216\u8005\u4e8c\u8fdb\u5236\u5f62\u5f0fdump\u51faOnnx\u539f\u6a21\u578b\u6bcf\u4e00\u5c42\u7684\u6570\u636e\u3002 (3) \u4f7f\u7528\u793a\u4f8b\uff1a python3 onnx_dump_data.py \\ --model_file onnx_mobilenet_v2.onnx \\ --image ./img.bmp \\ --dump_bin True \\ -n onnx_mobilenet_v2.py (4) \u4f7f\u7528\u53c2\u6570\u8bf4\u660e\uff1a \u2460 \u5fc5\u9009\u53c2\u6570\u8bf4\u660e\uff1a --model_file : Onnx\u539f\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 -i , --image : \u56fe\u7247\u6587\u4ef6\u6216\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\u6216 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u3002 --dump_bin : \u662f\u5426\u4ee5\u4e8c\u8fdb\u5236\u5f62\u5f0fdump\u6bcf\u4e00\u5c42\u7ed3\u679c\u3002 dump_bin\u53ef\u9009 True / False True: Dump\u7ed3\u679c\u4ee5\u4e8c\u8fdb\u5236\u5f62\u5f0f\u4fdd\u5b58\u4e8e\u5f53\u524d\u8fd0\u884c\u76ee\u5f55\u4e0b,\u5c06\u81ea\u52a8\u521b\u5efa\u6587\u4ef6\u5939dumpData, \u5185\u5b58\u6709caffe_NHWC_outtensor_dump.bin\u7ed3\u679c\u6587\u4ef6 ./dumpData/caffe_NHWC_outtensor_dump.bin\uff084\u7ef4tensor\u6392\u5e03\u683c\u5f0f\u4e3aNHWC\uff0c\u4e0eSigmaStar\u6a21\u578b\u76f8\u540c\uff09 False: Dump\u7ed3\u679c\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u4fdd\u5b58\u4e8e\u5f53\u524d\u8fd0\u884c\u76ee\u5f55\u4e0b\uff0c\u5c06\u81ea\u52a8\u521b\u5efa\u6587\u4ef6\u5939dumpData\uff0c\u5185\u5b58\u6709caffe_NHWC_outtensor_dump.txt\u7ed3\u679c\u6587\u4ef6\u53caNHWC\u548cNCHW\u6587\u4ef6\u5939 ./dumpData/caffe_NHWC_outtensor_dump.txt\uff084\u7ef4tensor\u6392\u5e03\u683c\u5f0f\u4e3aNHWC\uff0c\u4e0eSigmaStar\u6a21\u578b\u76f8\u540c\uff09 ./dumpData/NHWC\uff08\u6bcf\u5c42\u8f93\u51fa\u5355\u72ec\u751f\u6210\u6587\u4ef6\uff0c4\u7ef4tensor\u6392\u5e03\u683c\u5f0f\u4e3aNHWC\uff0c\u4e0eSigmaStar\u6a21\u578b\u76f8\u540c\uff09 ./dumpData/NCHW\uff08\u6bcf\u5c42\u8f93\u51fa\u5355\u72ec\u751f\u6210\u6587\u4ef6\uff0c4\u7ef4tensor\u6392\u5e03\u683c\u5f0f\u4e3aNCHW\uff0c\u4e0e\u539f\u6a21\u578b\u6392\u5e03\u76f8\u540c\uff09 \u5982\u679c\u9700\u8981[6.2.2 \u4f7f\u7528auto_dump_debug.sh\u811a\u672c\u5206\u6790\u6570\u636e]\u529f\u80fd\uff0c\u52a1\u5fc5\u4f7f\u7528 True\u3002 -n , --preprocess : \u524d\u5904\u7406\u65b9\u6cd5\uff0c\u8bf7\u76f4\u63a5\u7ed9\u5b9a\u524d\u5904\u7406python\u6587\u4ef6\u8def\u5f84\u3002\u9700\u8981\u786e\u4fdd\u524d\u5904\u7406python\u6587\u4ef6\u4e2d\u5305\u542b get_image \u51fd\u6570\uff0c\u5e76\u4e14\u8be5\u51fd\u6570\u5e26\u6709 nchw \u53c2\u6570\u7528\u6765\u5904\u7406\u539f\u6a21\u578b4\u7ef4\u8f93\u5165\u7684\u6392\u5e03\u4e3aNCHW\uff08onnx_dump_data.py\u4f1a\u76f4\u63a5\u8c03\u7528get_image\u51fd\u6570\u6765\u751f\u6210\u6a21\u578binput\u6570\u636e\uff0c\u5e76\u4e14\u5f3a\u5236nchw=True\uff09\u3002 \u524d\u5904\u7406\u811a\u672c\u51fd\u6570\u793a\u4f8b\uff1a def get_image ( img_path, resizeH = 224 , resizeW = 224 , resizeC = 3 , norm = True, meanB = 104 , meanG = 117 , meanR = 123 , std = 58 .82, rgb = False, nchw = False ) : ... ... if nchw: # NCHW img_norm = np.transpose ( img_norm.reshape ( resizeH, resizeW, -1 ) , axes =( 2 , 0 , 1 )) return np.expand_dims ( img_norm, 0 ) Please Note: \u82e5\u6a21\u578b\u4e3a \u591a\u8f93\u5165 \u65f6\uff0c -n,--preprocess \u53c2\u6570\u7528\u6cd5\u9700\u8981\u591a\u4e2a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4f8b\u5982 -n preprocess1.py,preprocess2.py \u6216\u8005 --preprocess preprocess1.py,preprocess2.py \u82e5\u6a21\u578b\u4e3a \u591a\u8f93\u5165 \u65f6\uff0c -i/--image \u53c2\u6570\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\u3002 6.2.2 \u4f7f\u7528auto_dump_debug.sh\u811a\u672c\u5206\u6790\u6570\u636e \u00b6 \u5de5\u5177\u7684\u4f4d\u7f6e\u5728 SGS_IPU_SDK/DumpDebug/auto_dump_debug.sh \u3002 6.2.2.1 \u5bf9\u6bd4\u5206\u6790SigmaStar\u6d6e\u70b9\u4e0e\u5b9a\u70b9\u6a21\u578b \u00b6 (1) auto_dump_debug.sh\u811a\u672c\u80fd\u591f\u5bf9\u6bd4\u6837\u672c bin\uff08sample\uff09\u548c\u57fa\u51c6 bin\uff08benchmark\uff09\u7684\u76f8\u540coutput tensor\u5c42\u7684COS\u3001MSE\u548cRMSE\uff0c\u9700\u4f7f\u7528 6.2.1.1 \u4e2dDump\u51fa\u7684\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u548c\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u7684bin\u6587\u4ef6\u3002 (2) \u4f7f\u7528\u793a\u4f8b\uff1a ./auto_dump_debug.sh \\ /home/user/SGS_IPU_SDK \\ /home/user/sample.bin \\ /home/user/benchmark.bin (3) \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a Param1 : SGS_IPU_SDK \u7684\u8def\u5f84\uff0c\u5982\u679c\u5728\u5f53\u524d\u4f4d\u7f6e\uff0c\u53ea\u9700\u4f20\u76ee\u5f55\u5939\u540d\u3002 Param2 : \u9700\u8981\u5bf9\u6bd4\u7684\u5df2\u7ecf dump\u51fa\u6765\u7684sample bin\u8def\u5f84\uff0c\u6b64\u5904\u5e94\u4e3a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578bDump\u51fa\u7684bin\u6587\u4ef6\u8def\u5f84\u3002 Param3 : \u4f5c\u4e3a\u53c2\u8003\u7684\u5df2\u7ecf dump\u51fa\u6765\u7684 benchmark bin\u8def\u5f84\uff0c\u6b64\u5904\u5e94\u4e3a\u6d6e\u70b9\u7f51\u7edc\u6a21\u578bDump\u51fa\u7684bin\u6587\u4ef6\u8def\u5f84\u3002 (4) \u5206\u6790\u7ed3\u679c\u5c55\u793a \u4f7f\u7528\u987b\u77e5 auto_dump_debug.sh\u811a\u672c\u5bf9\u6bd4\u7ed3\u679c\u5c06\u53d7DebugConfig.txt\u4e2ddisableDomainFuseOps\u5f71\u54cd\u3002 \u2460 \u672a\u5f00\u542fdisableDomainFuseOps\u9009\u9879\u65f6\uff0c\u5b8c\u6210\u5206\u6790\u540e\u663e\u793a\u5982\u4e0b\uff1a\uff08\u90e8\u5206\uff09 3.conv1_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000046 COS:0.999898 RMSE:0.014310 4.pool1.xx.output0 OP_TYPE:MAX_POOL_2D MSE:0.000057 COS:0.999931 RMSE:0.011018 7.res2a_branch1_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000076 COS:0.999886 RMSE:0.015652 11.res2a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000027 COS:0.999652 RMSE:0.023612 16.res2a_xx.xx.output0 OP_TYPE:RELU MSE:0.000177 COS:0.999644 RMSE:0.025049 20.res2b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000069 COS:0.999242 RMSE:0.039121 25.res2b_xx.xx.output0 OP_TYPE:RELU MSE:0.000430 COS:0.999452 RMSE:0.030551 28.res3a_branch1_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000165 COS:0.998975 RMSE:0.041644 32.res3a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000139 COS:0.998842 RMSE:0.048416 37.res3a_xx.xx.output0 OP_TYPE:RELU MSE:0.000297 COS:0.999069 RMSE:0.041043 41.res3b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000070 COS:0.998836 RMSE:0.051215 46.res3b_xx.xx.output0 OP_TYPE:RELU MSE:0.000366 COS:0.999035 RMSE:0.042863 49.res4a_branch1_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000026 COS:0.999282 RMSE:0.035575 53.res4a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000108 COS:0.998950 RMSE:0.047213 58.res4a_xx.xx.output0 OP_TYPE:RELU MSE:0.000149 COS:0.999174 RMSE:0.040582 62.res4b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000030 COS:0.999020 RMSE:0.046630 67.res4b_xx.xx.output0 OP_TYPE:RELU MSE:0.000168 COS:0.999073 RMSE:0.041229 70.res5a_branch1_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000305 COS:0.999276 RMSE:0.033715 74.res5a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000032 COS:0.998723 RMSE:0.053469 79.res5a_xx.xx.output0 OP_TYPE:RELU MSE:0.000507 COS:0.998762 RMSE:0.050663 83.res5b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000027 COS:0.998182 RMSE:0.064201 88.res5b_xx.xx.output0 OP_TYPE:RELU MSE:0.006022 COS:0.998665 RMSE:0.056931 89.pool5.xx.output0 OP_TYPE:AVG_POOL_2D MSE:0.004321 COS:0.998488 RMSE:0.079694 90.fc1000_reshape#1_output#183.output0 OP_TYPE:ReshapeAliasMSE:0.004321 COS:0.998488 RMSE:0.079694 91.fc1000#185.xx.output0 OP_TYPE:CONV_2D MSE:0.014197 COS:0.998901 RMSE:0.051447 92.fc1000.xx.output0 OP_TYPE:ReshapeAliasMSE:0.014197 COS:0.998901 RMSE:0.051447 93.prob.xx.output0 OP_TYPE:Fix2Float MSE:0.000000 COS:1.000000 RMSE:0.000152 \u2461 \u5f00\u542fdisableDomainFuseOps\u9009\u9879\u65f6\uff0c\u5b8c\u6210\u5206\u6790\u540e\u663e\u793a\u5982\u4e0b\uff1a\uff08\u90e8\u5206\uff09 0.conv1.xx.output0 OP_TYPE:CONV_2D MSE:2.397930 COS:0.999887 RMSE:0.019312 1.conv1_xx.xx.output0 OP_TYPE:MUL MSE:0.000037 COS:0.999850 RMSE:0.020800 2.conv1_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000037 COS:0.999936 RMSE:0.010667 3.conv1_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000052 COS:0.999885 RMSE:0.015123 4.pool1.xx.output0 OP_TYPE:MAX_POOL_2D MSE:0.000063 COS:0.999924 RMSE:0.011603 5.res2a_branch1.xx.output0 OP_TYPE:CONV_2D MSE:0.000096 COS:0.999952 RMSE:0.009368 6.res2a_branch1_xx.xx.output0 OP_TYPE:MUL MSE:0.000080 COS:0.999956 RMSE:0.009144 7.res2a_branch1_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000080 COS:0.999880 RMSE:0.016141 8.res2a_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.000349 COS:0.999951 RMSE:0.009727 9.res2a_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000049 COS:0.999956 RMSE:0.009349 10.res2a_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000049 COS:0.999886 RMSE:0.016510 11.res2a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000028 COS:0.999641 RMSE:0.024211 12.res2a_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000100 COS:0.999821 RMSE:0.018379 13.res2a_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.000118 COS:0.999832 RMSE:0.017982 14.res2a_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000118 COS:0.999670 RMSE:0.024984 15.res2a.xx.output0 OP_TYPE:ADD MSE:0.000241 COS:0.999771 RMSE:0.021801 16.res2a_xx.xx.output0 OP_TYPE:RELU MSE:0.000182 COS:0.999634 RMSE:0.025262 17.res2b_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.000525 COS:0.999709 RMSE:0.023127 18.res2b_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000193 COS:0.999746 RMSE:0.022434 19.res2b_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000193 COS:0.999474 RMSE:0.032121 20.res2b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000071 COS:0.999219 RMSE:0.039747 21.res2b_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000157 COS:0.999549 RMSE:0.030371 22.res2b_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.000272 COS:0.999587 RMSE:0.029537 23.res2b_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000272 COS:0.999151 RMSE:0.040304 24.res2b.xx.output0 OP_TYPE:ADD MSE:0.000534 COS:0.999425 RMSE:0.031402 25.res2b_xx.xx.output0 OP_TYPE:RELU MSE:0.000448 COS:0.999429 RMSE:0.031203 26.res3a_branch1.xx.output0 OP_TYPE:CONV_2D MSE:0.000267 COS:0.999320 RMSE:0.034101 27.res3a_branch1_xx.xx.output0 OP_TYPE:MUL MSE:0.000169 COS:0.999345 RMSE:0.034331 28.res3a_branch1_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000169 COS:0.998949 RMSE:0.042434 29.res3a_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.001885 COS:0.999472 RMSE:0.030785 30.res3a_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000427 COS:0.999486 RMSE:0.030586 31.res3a_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000427 COS:0.998909 RMSE:0.045188 32.res3a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000147 COS:0.998773 RMSE:0.049700 33.res3a_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000331 COS:0.999425 RMSE:0.034038 34.res3a_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.000368 COS:0.999411 RMSE:0.034275 35.res3a_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000368 COS:0.998931 RMSE:0.044919 36.res3a.xx.output0 OP_TYPE:ADD MSE:0.000585 COS:0.999040 RMSE:0.042398 37.res3a_xx.xx.output0 OP_TYPE:RELU MSE:0.000301 COS:0.999058 RMSE:0.041479 38.res3b_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.000811 COS:0.999530 RMSE:0.029739 39.res3b_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000288 COS:0.999580 RMSE:0.028879 40.res3b_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000288 COS:0.999383 RMSE:0.033874 41.res3b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000073 COS:0.998787 RMSE:0.052493 42.res3b_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000136 COS:0.999469 RMSE:0.033442 43.res3b_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.000314 COS:0.999489 RMSE:0.033050 44.res3b_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000314 COS:0.999308 RMSE:0.036079 45.res3b.xx.output0 OP_TYPE:ADD MSE:0.000659 COS:0.998989 RMSE:0.042628 46.res3b_xx.xx.output0 OP_TYPE:RELU MSE:0.000375 COS:0.999011 RMSE:0.043575 47.res4a_branch1.xx.output0 OP_TYPE:CONV_2D MSE:0.000098 COS:0.999264 RMSE:0.037842 48.res4a_branch1_xx.xx.output0 OP_TYPE:MUL MSE:0.000027 COS:0.999298 RMSE:0.037615 49.res4a_branch1_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000027 COS:0.999253 RMSE:0.036302 50.res4a_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.001011 COS:0.999543 RMSE:0.028507 51.res4a_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000300 COS:0.999544 RMSE:0.028563 52.res4a_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000300 COS:0.999147 RMSE:0.040221 53.res4a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000107 COS:0.998961 RMSE:0.047238 54.res4a_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000335 COS:0.999464 RMSE:0.032660 55.res4a_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.000255 COS:0.999453 RMSE:0.032788 56.res4a_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000255 COS:0.999234 RMSE:0.038888 57.res4a.xx.output0 OP_TYPE:ADD MSE:0.000312 COS:0.999298 RMSE:0.036873 58.res4a_xx.xx.output0 OP_TYPE:RELU MSE:0.000146 COS:0.999191 RMSE:0.040181 59.res4b_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.000369 COS:0.999748 RMSE:0.021992 60.res4b_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000156 COS:0.999772 RMSE:0.021527 61.res4b_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000156 COS:0.999625 RMSE:0.026857 62.res4b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000028 COS:0.999073 RMSE:0.045494 63.res4b_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000048 COS:0.999748 RMSE:0.022612 64.res4b_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.000191 COS:0.999751 RMSE:0.022354 65.res4b_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000191 COS:0.999678 RMSE:0.024581 66.res4b.xx.output0 OP_TYPE:ADD MSE:0.000337 COS:0.999448 RMSE:0.032108 67.res4b_xx.xx.output0 OP_TYPE:RELU MSE:0.000160 COS:0.999113 RMSE:0.040588 68.res5a_branch1.xx.output0 OP_TYPE:CONV_2D MSE:0.000072 COS:0.999179 RMSE:0.038052 69.res5a_branch1_xx.xx.output0 OP_TYPE:MUL MSE:0.000290 COS:0.999179 RMSE:0.038130 70.res5a_branch1_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000290 COS:0.999311 RMSE:0.032880 71.res5a_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.000355 COS:0.999758 RMSE:0.020371 72.res5a_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000133 COS:0.999750 RMSE:0.020561 73.res5a_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000133 COS:0.999613 RMSE:0.026392 74.res5a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000028 COS:0.998859 RMSE:0.051003 75.res5a_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000063 COS:0.999512 RMSE:0.031809 76.res5a_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.001009 COS:0.999480 RMSE:0.032233 77.res5a_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.001009 COS:0.999257 RMSE:0.039436 78.res5a.xx.output0 OP_TYPE:ADD MSE:0.001413 COS:0.999379 RMSE:0.034297 79.res5a_xx.xx.output0 OP_TYPE:RELU MSE:0.000457 COS:0.998876 RMSE:0.048274 80.res5b_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.001387 COS:0.999842 RMSE:0.015781 81.res5b_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000239 COS:0.999839 RMSE:0.015798 82.res5b_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000239 COS:0.999639 RMSE:0.026762 83.res5b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000023 COS:0.998458 RMSE:0.058598 84.res5b_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000041 COS:0.999061 RMSE:0.041137 85.res5b_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.007750 COS:0.999058 RMSE:0.041188 86.res5b_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.007751 COS:0.998732 RMSE:0.052601 87.res5b.xx.output0 OP_TYPE:ADD MSE:0.008533 COS:0.998792 RMSE:0.052043 88.res5b_xx.xx.output0 OP_TYPE:RELU MSE:0.004860 COS:0.998924 RMSE:0.051718 89.pool5.xx.output0 OP_TYPE:AVG_POOL_2D MSE:0.004061 COS:0.998601 RMSE:0.078395 90.fc1000_reshape#1_output#183.output0 OP_TYPE:ReshapeAliasMSE:0.004061 COS:0.998601 RMSE:0.078395 91.fc1000#185.xx.output0 OP_TYPE:CONV_2D MSE:0.013363 COS:0.998935 RMSE:0.050327 92.fc1000.xx.output0 OP_TYPE:ReshapeAliasMSE:0.013363 COS:0.998935 RMSE:0.050327 93.prob.xx.output0 OP_TYPE:SOFTMAX MSE:0.000000 COS:1.000000 RMSE:0.000152 6.2.2.2 \u5bf9\u6bd4\u5206\u6790SigmaStar\uff08\u6d6e\u70b9/\u5b9a\u70b9\uff09\u6a21\u578b\u4e0e\u539f\u6a21\u578b\uff08Caffe/Onnx\uff09 \u00b6 (1) auto_dump_debug.sh\u811a\u672c\u540c\u6837\u80fd\u591f\u5bf9\u6bd4SigmaStar\uff08\u6d6e\u70b9/\u5b9a\u70b9\uff09\u6a21\u578b\u4e0e\u539f\u6a21\u578b\uff08Caffe/Onnx\uff09\u76f8\u540coutput tensor\u5c42\u7684COS\u3001MSE\u548cRMSE\u3002\u6253\u5370\u683c\u5f0f\u4e0e 6.2.2.1 \u76f8\u540c\u3002 (2) \u4f7f\u7528\u793a\u4f8b\uff1a \u2460 \u4e0eCaffe\u539f\u6a21\u578b\u5bf9\u6bd4\uff1a ./auto_dump_debug.sh \\ /home/user/SGS_IPU_SDK \\ /home/user/sigma_outtensor_dump.bin \\ /home/user/caffe_NHWC_outtensor_dump.bin \u2461 \u4e0eOnnx\u539f\u6a21\u578b\u5bf9\u6bd4\uff1a ./auto_dump_debug.sh \\ /home/user/SGS_IPU_SDK \\ /home/user/sigma_outtensor_dump.bin \\ /home/user/onnx_NHWC_outtensor_dump.bin (3) \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a Param1 : SGS_IPU_SDK \u7684\u8def\u5f84\uff0c\u5982\u679c\u5728\u5f53\u524d\u4f4d\u7f6e\uff0c\u53ea\u9700\u4f20\u76ee\u5f55\u5939\u540d\u3002 Param2 : \u9700\u8981\u5bf9\u6bd4\u7684\u5df2\u7ecf dump\u51fa\u6765\u7684sample bin\u8def\u5f84\uff0c\u6b64\u5904\u5e94\u4e3aSigmaStar\u7f51\u7edc\u6a21\u578b\uff08\u6d6e\u70b9/\u5b9a\u70b9\uff09Dump\u51fa\u7684bin\u6587\u4ef6\u8def\u5f84\u3002 Param3 : \u4f5c\u4e3a\u53c2\u8003\u7684\u5df2\u7ecf dump\u51fa\u6765\u7684 benchmark bin\u8def\u5f84\uff0c\u6b64\u5904\u5e94\u4e3a\u539f\u6a21\u578b\uff08Caffe/Onnx\uff09Dump\u51fa\u7684bin\u6587\u4ef6\u8def\u5f84\u3002 \u4f7f\u7528\u987b\u77e5 \u5c06 6.2.1.1 \u4e2dDump\u51fa\u7684\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6216\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u7684bin\u6587\u4ef6\u4f5c\u4e3a\u6837\u672c bin\uff08sample\uff09\uff0c\u4f20\u5165Param2\uff0c\u4e0d\u5f97\u4f20\u5165Param3\u3002 \u5c06 6.2.1.2 \u6216 6.2.1.3 \u4e2dDump\u51fa\u7684\u539f\u6a21\u578bbin\u6587\u4ef6\u4f5c\u4e3a\u57fa\u51c6 bin\uff08benchmark\uff09\uff0c\u4f20\u5165Param3\uff0c\u4e0d\u5f97\u4f20\u5165Param2\u3002 6.3. SegmentFault\u9519\u8bef\u5904\u7406 \u00b6 \u5f53\u8fd0\u884c\u65f6\u53d1\u751fSegmentFault\u9519\u8bef\u65f6\uff0c\u7a0b\u5e8f\u4e2d\u65ad\u8fd0\u884c\uff0c\u6b64\u65f6\u5b9a\u4f4d\u7a0b\u5e8f\u53d1\u751f\u9519\u8bef\u4f4d\u7f6e\u81f3\u5173\u91cd\u8981\u3002\u8bf7\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\uff0c\u534f\u52a9\u63d0\u4f9b\u76f8\u5173\u4fe1\u606f\u3002 (1) \u4fee\u6539\u751f\u6210core\u6587\u4ef6\u8def\u5f84\u4e3a\u5f53\u524d\u76ee\u5f55\uff0c\u5e76\u8bbe\u7f6ecore\u6587\u4ef6\u5927\u5c0f\u65e0\u4e0a\u9650\uff1a echo core > /proc/sys/kernel/core_pattern ulimit -c unlimited (2) \u91cd\u65b0\u8fd0\u884c\u521a\u521a\u53d1\u751f\u9519\u8bef\u7684\u8f6c\u6362\u7f51\u7edc\u547d\u4ee4\u3002 (3) \u751f\u6210core\u6587\u4ef6\u540e\uff0c\u8fd0\u884c\u5982\u4e0b\u547d\u4ee4\uff0c\u4f1a\u6253\u5370\u7a0b\u5e8f\u76f8\u5173\u4fe1\u606f\uff1a ~/SGS_IPU_SDK/DumpDebug/show_address.sh /path/to/SGS_IPU_SDK/bin/XXX /path/to/core show_address.sh\u811a\u672c\u9700\u8981\u4e24\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u6267\u884c\u547d\u4ee4\u7684bin\u7684\u8def\u5f84\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3acore\u7684\u8def\u5f84\u3002 \u5c4f\u5e55\u4f1a\u6253\u5370\u5185\u5b58\u6620\u5c04\u4fe1\u606f\u4ee5\u53ca\u7a0b\u5e8f\u51fd\u6570\u5806\u6808\u5730\u5740\uff0c\u8bf7\u53cd\u9988\u6b64\u4fe1\u606f\u3002 6.4. \u76f8\u5173\u95ee\u9898\u6c47\u603b \u00b6 DumpDebug Tool\u63d0\u4f9b\u4e86\u6a21\u578b\u91cf\u5316\u540e\u7cbe\u5ea6\u4e0b\u964d\u95ee\u9898\u7684\u6392\u67e5\u65b9\u6cd5\uff0c\u53ef\u7528\u4e8e\u9488\u5bf9\u5b9e\u9645\u95ee\u9898\u53c2\u8003\u3002 \u4f7f\u7528calibrator\u65f6\uff0c --quant_level \u9009\u62e9L2\u3001L3\u3001L4\u6216L5\u65f6\u4f1a\u6839\u636e\u7edf\u8ba1\u4fe1\u606f\u81ea\u52a8\u914d\u7f6e\u5377\u79ef\u7684\u91cf\u5316\u65b9\u5f0f\uff0c\u5982\u679ccalibrator\u672a\u80fd\u5c06\u4ee5\u4e0b\u60c5\u51b5\u7684\u5377\u79ef\u4fee\u6539\u6210\u201dINT16\u201d\u5377\u79ef\u6a21\u5f0f\uff0c\u8bf7\u5728input config\u4e2d\u901a\u8fc7\u914d\u7f6eCONV_CONFIG\u7684tensor_arrays\u65b9\u5f0f\u624b\u52a8\u5f00\u542f\u3002 \u4f7f\u7528auto_dump_debug.sh\u811a\u672c\u5206\u6790\u6570\u636e \u529f\u80fd\u5bf9\u6bd4\u6570\u636e\u540e\uff0c\u5982\u679cRMSE\u503c\u8f83\u5927\uff08\u4e00\u822c\u8ba4\u4e3a\u5927\u4e8e0.5\uff09\uff0c\u53ef\u5c06\u8be5\u5c42\u524d\u7684\u5377\u79ef\u8f93\u5165\u5c42\u5f00\u542f INT16 \u5377\u79ef\u6a21\u5f0f\u3002 \u4fee\u6539input_config.ini\u6587\u4ef6\u540e\u9700\u8981\u91cd\u65b0\u4ece\u539f\u59cb\u6846\u67b6\u8bad\u7ec3\u7684\u6a21\u578b\u8f6c\u6362 \u3002","title":"6.  DumpDebug Tool"},{"location":"module/User_Guide/IPU230/DumpDebug_Tool.html#61-dumpdebug-tool","text":"DumpDebugTool \u8bf4\u660e \u5de5\u5177\u4f4d\u7f6e SGS_IPU_SDK/DumpDebug/ \u5de5\u5177\u4f5c\u7528 \u63d0\u4f9b\u6a21\u578b\u91cf\u5316\u540e\u7cbe\u5ea6\u4e0b\u964d\u95ee\u9898\u7684\u6392\u67e5\u65b9\u6cd5 \u89e3\u6790\u7f51\u7edc\u6a21\u578b\u6570\u636e \u5bf9\u6bd4\u4e0d\u540c\u9636\u6bb5\u7684\u7f51\u7edc\u6a21\u578b\u6570\u636e \u4f7f\u7528\u987b\u77e5 \u2460 SigmaStar DLA SDK\u5728\u8f6c\u6362\u7f51\u7edc\u65f6\u7684\u6570\u636e\u4e00\u81f4\u6027\u8bf4\u660e\uff1a \u539f\u59cb\u6a21\u578b\u8f6c\u5316\u4e3aSigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\uff1a Caffe\u3001Onnx\u3001TensorFlow\u7684\u7f51\u7edc\u6a21\u578b\u4e0eSigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u7684\u7ed3\u679c\u5b8c\u5168\u4e00\u81f4; SigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u5316\u4e3aSigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff1a \u6709\u7cbe\u5ea6\u5dee\u522b\u7684\u53ea\u6709\u5728SigmaStar\u6d6e\u70b9\u6a21\u578b\u8f6c\u6362\u4e3aSigmaStar\u5b9a\u70b9\u8fd9\u4e2a\u9636\u6bb5; SigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u5316\u4e3aSigmaStar\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\uff1a SigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u4e0eSigmaStar\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u7684\u7ed3\u679c\u5b8c\u5168\u4e00\u81f4; \u2461 \u53d1\u73b0SigmaStar\u5b9a\u70b9\u7f51\u7edc\u7684\u7ed3\u679c\u4e0e\u539f\u6709\u6d6e\u70b9\u7684\u7ed3\u679c\u76f8\u5dee\u8f83\u591a\u65f6\uff0c\u4f7f\u7528DumpDebug Tool\u53ef\u4ee5\u68c0\u67e5\u8f6c\u6362\u540e\u5b9a\u70b9\u7f51\u7edc\u7684\u9519\u8bef\u3002 \u5bf9\u6bd4\u5206\u6790SigmaStar\u6d6e\u70b9\u4e0e\u5b9a\u70b9\u6a21\u578b \u2462 DumpDebug Tool\u4e5f\u53ef\u7528\u4e8e\u76f4\u63a5dump\u539f\u6a21\u578bCaffe/Onnx\u7684\u6bcf\u4e00\u5c42\u6570\u636e\uff0c\u4ee5\u4fbf\u4e0eSigmaStar\u6a21\u578b\u8fdb\u884c\u5bf9\u6bd4\u3002 \u5bf9\u6bd4\u5206\u6790SigmaStar\uff08\u6d6e\u70b9/\u5b9a\u70b9\uff09\u6a21\u578b\u4e0e\u539f\u6a21\u578b\uff08Caffe/Onnx\uff09","title":"6.1. DumpDebug Tool\u7b80\u4ecb"},{"location":"module/User_Guide/IPU230/DumpDebug_Tool.html#62-dumpdebug-tool","text":"","title":"6.2. DumpDebug Tool\u5de5\u5177\u4f7f\u7528\u8bf4\u660e"},{"location":"module/User_Guide/IPU230/DumpDebug_Tool.html#621-dumpdebug-tool","text":"","title":"6.2.1 DumpDebug Tool\u5de5\u5177\u5982\u4f55\u89e3\u6790\u7f51\u7edc\u6a21\u578b\u6570\u636e"},{"location":"module/User_Guide/IPU230/DumpDebug_Tool.html#6211-dumpsigmastar","text":"setp1: \u5728 SGS_IPU_SDK/cfg \u6587\u4ef6\u5939\u4e2d\u627e\u5230DebugConfig.txt\u6587\u4ef6\uff0c\u590d\u5236\u5230\u5f53\u524d\u8fd0\u884c\u8def\u5f84\u4e0b. step2: \u6253\u5f00DebugConfig.txt\uff0c\u4fee\u6539\u6587\u4ef6\u5185\u5bb9\uff1a dumpTensor eliminateGarbage dequantFixed #dumpasstring #disableDomainFuseOps path = \u4f7f\u7528\u987b\u77e5 DebugConfig.txt\u5404\u53c2\u6570\u4f5c\u7528: dumpTensor : Dump\u7f51\u7edc\u6a21\u578b\u5404\u5c42\u6570\u636e\u603b\u5f00\u5173\u3002 eliminateGarbage : Dump\u7f51\u7edc\u6a21\u578b\u6570\u636e\u65f6\u53bb\u9664\u65e0\u7528\u6570\u636e\uff08\u5efa\u8bae\u5f00\u542f\uff09\u3002 dequantFixed : \u9488\u5bf9\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff0c\u5c06\u6574\u5f62\u6570\u636e\u8f6c\u6362\u4e3a\u6d6e\u70b9\u6570\u636e\uff08\u5efa\u8bae\u5f00\u542f\uff09\u3002 dumpasstring : Dump\u7f51\u7edc\u6a21\u578b\u6570\u636e\u4e3a\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u5173\u95ed\u9009\u9879\u4e3a\u4e8c\u8fdb\u5236\u6587\u4ef6\u7c7b\u578b\u3002\uff08\u5982\u679c\u9700\u8981[6.2.2 \u4f7f\u7528auto_dump_debug.sh\u811a\u672c\u5206\u6790\u6570\u636e]\u529f\u80fd\uff0c\u52a1\u5fc5\u5173\u95ed\u6b64\u9009\u9879\uff09\u3002 disableDomainFuseOps : \u8f6c\u6362\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u65f6\uff0c\u53d6\u6d88\u7f51\u7edc\u5c42\u878d\u5408\uff08\u5efa\u8bae\u5173\u95ed\uff09\u3002 path= : \u6307\u5b9a\u751f\u6210\u6863\u6848\u7684\u8f93\u51fa\u5168\u8def\u5f84\uff08path= \u540e\u9762\u786e\u4fdd\u586b\u5199\u7c7b\u4f3c /home/user \u7684\u7edd\u5bf9\u8def\u5f84\u3002\u5982\u679cpath= \u540e\u9762\u6ca1\u6709\u5185\u5bb9\u6216\u6839\u672c\u6ca1\u6709 path= \u7684\u8bdd\uff0c\u5219\u4f1a\u9ed8\u8ba4\u8f93\u51fa\u5230 $HOME \u4f4d\u7f6e\u3002\u53e6\u5916\uff0c\u7edd\u5bf9\u8def\u5f84\u6216 /home/user \u4e0d\u8d85\u8fc7122\u5b57\u8282\uff09\u3002 step3: \u8fd0\u884csimulator\u5bf9\u5355\u5f20\u56fe\u7247\u63a8\u6f14\u3002 \u4f7f\u7528\u987b\u77e5 simulator\u5de5\u5177\u4f7f\u7528\u8be6\u89c1 simulator step4: \u63a8\u6f14\u5b8c\u6210\u540e\uff0c\u4f1a\u5728DebugConfig.txt\u6587\u4ef6\u4e2d path= \u53c2\u6570\u6307\u5b9a\u7684\u76ee\u5f55\u4e0b\u751f\u6210sigma_outtensor_dump.bin\u6587\u4ef6\uff0c\u7528\u4e8e\u4fdd\u5b58Dump\u51fa\u7684\u7f51\u7edc\u6a21\u578b\u4e2d\u5404\u5c42\u6570\u636e\u3002 \u4f7f\u7528\u987b\u77e5 Dump\u5b8c\u6210\u540e,\u7ed3\u679c\u5c06\u4fdd\u5b58\u5728sigma_outtensor_dump.bin\u6587\u4ef6\u4e2d\uff0c\u82e5\u9700\u91cd\u547d\u540d\uff0c\u8bf7\u52ff\u4fee\u6539\u6587\u4ef6\u540e\u7f00 .bin\u3002 \u65b0\u7684Dump\u4f1a\u590d\u5199sigma_outtensor_dump.bin\u6587\u4ef6\uff0c\u82e5\u91cd\u65b0\u8fd0\u884c\uff0c\u8bf7\u6ce8\u610f\u4fdd\u5b58\u3002 DebugConfig.txt\u6587\u4ef6\u4e2ddisableDomainFuseOps \u9009\u9879\u8bf4\u660e\uff1a \u4f5c\u7528\u4e8e\u8f6c\u6362\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u9636\u6bb5\uff0c\u5efa\u8bae\u5173\u95ed\u3002 \u4f7f\u7528\u65f6\uff0c\u9ed8\u8ba4\u5173\u95ed\u8be5\u9009\u9879\uff0c\u5373calibrator\u5c06\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u6210\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u65f6\u5c06\u8fdb\u884c\u7f51\u7edc\u878d\u5408\uff0c\u5982\u679c\u6253\u5f00\u8be5\u9009\u9879\uff0c\u5219\u5c06\u53d6\u6d88\u7f51\u7edc\u878d\u5408\u529f\u80fd\u3002 \u5173\u95ed\u8be5\u9009\u9879\u65f6\uff0c\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u548c\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u80fd\u591f\u5728\u8f6c\u6362\u65f6\u4f18\u5316\u7f51\u7edc\u6a21\u578b\u7684\u7b97\u5b50\uff0c\u52a0\u901f\u6a21\u578b\u7684\u8fd0\u884c\uff0c\u4f46\u662f\u4e5f\u4f1a\u5f71\u54cd\u7f51\u7edc\u7684\u5c42\u7ea7\u7ed3\u6784\uff0c\u4f7f\u5f97\u90e8\u5206\u7b97\u5b50\u7684\u8f93\u51fa\u4e0d\u4f1a\u88abDump\u5230sigma_outtersor_dump.bin\u6587\u4ef6\u4e2d\u3002 \u5982\u679c\u9700\u8981\u7f51\u7edc\u6a21\u578b\u7684\u6bcf\u4e00\u5c42\u6570\u636e\uff0c\u53ef\u4ee5\u6253\u5f00disableDomainFuseOps\u9009\u9879\uff0c\u91cd\u65b0\u8fd0\u884ccalibrator\u8f6c\u6362\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff0c\u6b64\u65f6\u8f6c\u51fa\u7684\u6a21\u578b\u6ca1\u6709\u878d\u5408\u4f18\u5316\uff0c\u53ef\u4ee5\u8f93\u51fa\u6bcf\u5c42\u7684\u6570\u636e\u3002 \u5bf9\u6bd4\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u548c\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff0c\u4f7f\u7528simulator\u4e2d\u53c2\u6570 -t/--type \u548c -m/--model \u6307\u5b9a\u4e0d\u540c\u9636\u6bb5\u7684\u6a21\u578b\uff0c\u5373\u53efDump\u51fa\u4e0d\u540c\u9636\u6bb5\u7684\u7f51\u7edc\u6a21\u578b\u6570\u636e\u3002\u8be6\u89c1 simulator \u3002 \u79bb\u7ebf\u6a21\u578b\u4e0d\u652f\u6301Dump Debug,\u79bb\u7ebf\u6a21\u578b\u7f51\u7edc\u7684\u5c42\u7ea7\u7ed3\u6784Domain\u5df2\u7ecf\u878d\u5408\uff0c\u4e0d\u80fdDump\u7f51\u7edc\u6a21\u578b\u4e2d\u5404\u5c42\u7684\u6570\u636e\u3002 \u4f7f\u7528calibrator\u5c06\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u4e3a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u65f6\uff0c\u4f1a\u5728SGS_IPU_SDK\u6839\u76ee\u5f55\u4e0b\u4ea7\u751ftensor_min_max.txt \u6587\u4ef6\uff0c\u6b64\u6587\u4ef6\u8bb0\u5f55\u4e86\u7f51\u7edc\u7684\u6bcf\u5c42\u8f93\u5165\u548c\u8f93\u51fa\u7684\u6700\u5927\u4e0e\u6700\u5c0f\u503c\uff0c\u5c06\u5728\u4e4b\u540e\u5206\u6790Dump\u6570\u636e\u65f6\u6709\u7528\u3002","title":"6.2.1.1 Dump\u89e3\u6790SigmaStar\u6d6e\u70b9\u6216\u5b9a\u70b9\u6a21\u578b"},{"location":"module/User_Guide/IPU230/DumpDebug_Tool.html#6212-dumpcaffe","text":"(1) \u5de5\u5177\u7684\u4f4d\u7f6e\u5728 SGS_IPU_SDK/DumpDebug/code/caffe_dump_data.py \u3002 (2) caffe_dump_data.py\u811a\u672c\u9700\u8981\u4f7f\u7528 python2 \u8fd0\u884c\uff08Caffe\u4ec5\u652f\u6301python2\uff09\uff0c\u7528\u4e8e\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u6216\u8005\u4e8c\u8fdb\u5236\u5f62\u5f0fdump\u51faCaffe\u539f\u6a21\u578b\u6bcf\u4e00\u5c42\u7684\u6570\u636e\u3002 (3) \u4f7f\u7528\u793a\u4f8b\uff1a step1: caffe_dump_data.py\u4e2d\u4fee\u6539Caffe\u7684\u8fd0\u884c\u8def\u5f84\uff0c\u6bd4\u5982\uff1a caffe_root = '/home/your_caffe_root' sys.path.insert ( 0 ,caffe_root+ '/python' ) step2: \u8fd0\u884c\u811a\u672c\uff1a python2 caffe_dump_data.py \\ --model_file caffe_mobilenet_v2.prototxt \\ --weight_file caffe_mobilenet_v2.caffemodel \\ --i ./img.bmp \\ --dump_bin True \\ -n ./caffe_mobilenet_v2.py (4) \u4f7f\u7528\u53c2\u6570\u8bf4\u660e\uff1a \u2460 \u5fc5\u9009\u53c2\u6570\u8bf4\u660e\uff1a --model_file : Caffe\u539f\u6a21\u578bprototxt\u6587\u4ef6\u8def\u5f84\u3002 --weight_file : Caffe\u539f\u6a21\u578bcaffemodel\u6587\u4ef6\u8def\u5f84\u3002 -i , --image : \u56fe\u7247\u6587\u4ef6\u6216\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\u6216 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u3002 --dump_bin : \u662f\u5426\u4ee5\u4e8c\u8fdb\u5236\u5f62\u5f0fdump\u6bcf\u4e00\u5c42\u7ed3\u679c\u3002 dump_bin\u53ef\u9009 True / False True: Dump\u7ed3\u679c\u4ee5\u4e8c\u8fdb\u5236\u5f62\u5f0f\u4fdd\u5b58\u4e8e\u5f53\u524d\u8fd0\u884c\u76ee\u5f55\u4e0b,\u5c06\u81ea\u52a8\u521b\u5efa\u6587\u4ef6\u5939dumpData, \u5185\u5b58\u6709caffe_NHWC_outtensor_dump.bin\u7ed3\u679c\u6587\u4ef6 ./dumpData/caffe_NHWC_outtensor_dump.bin\uff084\u7ef4tensor\u6392\u5e03\u683c\u5f0f\u4e3aNHWC\uff0c\u4e0eSigmaStar\u6a21\u578b\u76f8\u540c\uff09 False: Dump\u7ed3\u679c\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u4fdd\u5b58\u4e8e\u5f53\u524d\u8fd0\u884c\u76ee\u5f55\u4e0b\uff0c\u5c06\u81ea\u52a8\u521b\u5efa\u6587\u4ef6\u5939dumpData\uff0c\u5185\u5b58\u6709caffe_NHWC_outtensor_dump.txt\u7ed3\u679c\u6587\u4ef6\u53caNHWC\u548cNCHW\u6587\u4ef6\u5939 ./dumpData/caffe_NHWC_outtensor_dump.txt\uff084\u7ef4tensor\u6392\u5e03\u683c\u5f0f\u4e3aNHWC\uff0c\u4e0eSigmaStar\u6a21\u578b\u76f8\u540c\uff09 ./dumpData/NHWC\uff08\u6bcf\u5c42\u8f93\u51fa\u5355\u72ec\u751f\u6210\u6587\u4ef6\uff0c4\u7ef4tensor\u6392\u5e03\u683c\u5f0f\u4e3aNHWC\uff0c\u4e0eSigmaStar\u6a21\u578b\u76f8\u540c\uff09 ./dumpData/NCHW\uff08\u6bcf\u5c42\u8f93\u51fa\u5355\u72ec\u751f\u6210\u6587\u4ef6\uff0c4\u7ef4tensor\u6392\u5e03\u683c\u5f0f\u4e3aNCHW\uff0c\u4e0e\u539f\u6a21\u578b\u6392\u5e03\u76f8\u540c\uff09 \u5982\u679c\u9700\u8981[6.2.2 \u4f7f\u7528auto_dump_debug.sh\u811a\u672c\u5206\u6790\u6570\u636e]\u529f\u80fd\uff0c\u52a1\u5fc5\u4f7f\u7528 True\u3002 -n , --preprocess : \u524d\u5904\u7406\u65b9\u6cd5\uff0c\u8bf7\u76f4\u63a5\u7ed9\u5b9a\u524d\u5904\u7406python\u6587\u4ef6\u8def\u5f84\u3002\u9700\u8981\u786e\u4fdd\u524d\u5904\u7406python\u6587\u4ef6\u4e2d\u5305\u542b get_image \u51fd\u6570\uff0c\u5e76\u4e14\u8be5\u51fd\u6570\u5e26\u6709 nchw \u53c2\u6570\u7528\u6765\u5904\u7406\u539f\u6a21\u578b4\u7ef4\u8f93\u5165\u7684\u6392\u5e03\u4e3aNCHW\uff08caffe_dump_data.py\u4f1a\u76f4\u63a5\u8c03\u7528get_image\u51fd\u6570\u6765\u751f\u6210\u6a21\u578binput\u6570\u636e\uff0c\u5e76\u4e14\u5f3a\u5236nchw=True\uff09\u3002 \u524d\u5904\u7406\u811a\u672c\u51fd\u6570\u793a\u4f8b\uff1a def get_image ( img_path, resizeH = 224 , resizeW = 224 , resizeC = 3 , norm = True, meanB = 104 , meanG = 117 , meanR = 123 , std = 58 .82, rgb = False, nchw = False ) : ... ... if nchw: # NCHW img_norm = np.transpose ( img_norm.reshape ( resizeH, resizeW, -1 ) , axes =( 2 , 0 , 1 )) return np.expand_dims ( img_norm, 0 ) Please Note: \u82e5\u6a21\u578b\u4e3a \u591a\u8f93\u5165 \u65f6\uff0c -n,--preprocess \u53c2\u6570\u7528\u6cd5\u9700\u8981\u591a\u4e2a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4f8b\u5982 -n preprocess1.py,preprocess2.py \u6216\u8005 --preprocess preprocess1.py,preprocess2.py \u82e5\u6a21\u578b\u4e3a \u591a\u8f93\u5165 \u65f6\uff0c -i/--image \u53c2\u6570\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\u3002","title":"6.2.1.2 Dump\u89e3\u6790Caffe\u539f\u6a21\u578b"},{"location":"module/User_Guide/IPU230/DumpDebug_Tool.html#6213-dumponnx","text":"(1) \u5de5\u5177\u7684\u4f4d\u7f6e\u5728 SGS_IPU_SDK/DumpDebug/code/onnx_dump_data.py \u3002 (2) onnx_dump_data.py\u811a\u672c\u9700\u8981\u4f7f\u7528 python3 \u8fd0\u884c\uff08\u4e0eIPU SDK\u73af\u5883\u76f8\u540c\uff09\uff0c\u7528\u4e8e\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u6216\u8005\u4e8c\u8fdb\u5236\u5f62\u5f0fdump\u51faOnnx\u539f\u6a21\u578b\u6bcf\u4e00\u5c42\u7684\u6570\u636e\u3002 (3) \u4f7f\u7528\u793a\u4f8b\uff1a python3 onnx_dump_data.py \\ --model_file onnx_mobilenet_v2.onnx \\ --image ./img.bmp \\ --dump_bin True \\ -n onnx_mobilenet_v2.py (4) \u4f7f\u7528\u53c2\u6570\u8bf4\u660e\uff1a \u2460 \u5fc5\u9009\u53c2\u6570\u8bf4\u660e\uff1a --model_file : Onnx\u539f\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 -i , --image : \u56fe\u7247\u6587\u4ef6\u6216\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\u6216 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u3002 --dump_bin : \u662f\u5426\u4ee5\u4e8c\u8fdb\u5236\u5f62\u5f0fdump\u6bcf\u4e00\u5c42\u7ed3\u679c\u3002 dump_bin\u53ef\u9009 True / False True: Dump\u7ed3\u679c\u4ee5\u4e8c\u8fdb\u5236\u5f62\u5f0f\u4fdd\u5b58\u4e8e\u5f53\u524d\u8fd0\u884c\u76ee\u5f55\u4e0b,\u5c06\u81ea\u52a8\u521b\u5efa\u6587\u4ef6\u5939dumpData, \u5185\u5b58\u6709caffe_NHWC_outtensor_dump.bin\u7ed3\u679c\u6587\u4ef6 ./dumpData/caffe_NHWC_outtensor_dump.bin\uff084\u7ef4tensor\u6392\u5e03\u683c\u5f0f\u4e3aNHWC\uff0c\u4e0eSigmaStar\u6a21\u578b\u76f8\u540c\uff09 False: Dump\u7ed3\u679c\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u4fdd\u5b58\u4e8e\u5f53\u524d\u8fd0\u884c\u76ee\u5f55\u4e0b\uff0c\u5c06\u81ea\u52a8\u521b\u5efa\u6587\u4ef6\u5939dumpData\uff0c\u5185\u5b58\u6709caffe_NHWC_outtensor_dump.txt\u7ed3\u679c\u6587\u4ef6\u53caNHWC\u548cNCHW\u6587\u4ef6\u5939 ./dumpData/caffe_NHWC_outtensor_dump.txt\uff084\u7ef4tensor\u6392\u5e03\u683c\u5f0f\u4e3aNHWC\uff0c\u4e0eSigmaStar\u6a21\u578b\u76f8\u540c\uff09 ./dumpData/NHWC\uff08\u6bcf\u5c42\u8f93\u51fa\u5355\u72ec\u751f\u6210\u6587\u4ef6\uff0c4\u7ef4tensor\u6392\u5e03\u683c\u5f0f\u4e3aNHWC\uff0c\u4e0eSigmaStar\u6a21\u578b\u76f8\u540c\uff09 ./dumpData/NCHW\uff08\u6bcf\u5c42\u8f93\u51fa\u5355\u72ec\u751f\u6210\u6587\u4ef6\uff0c4\u7ef4tensor\u6392\u5e03\u683c\u5f0f\u4e3aNCHW\uff0c\u4e0e\u539f\u6a21\u578b\u6392\u5e03\u76f8\u540c\uff09 \u5982\u679c\u9700\u8981[6.2.2 \u4f7f\u7528auto_dump_debug.sh\u811a\u672c\u5206\u6790\u6570\u636e]\u529f\u80fd\uff0c\u52a1\u5fc5\u4f7f\u7528 True\u3002 -n , --preprocess : \u524d\u5904\u7406\u65b9\u6cd5\uff0c\u8bf7\u76f4\u63a5\u7ed9\u5b9a\u524d\u5904\u7406python\u6587\u4ef6\u8def\u5f84\u3002\u9700\u8981\u786e\u4fdd\u524d\u5904\u7406python\u6587\u4ef6\u4e2d\u5305\u542b get_image \u51fd\u6570\uff0c\u5e76\u4e14\u8be5\u51fd\u6570\u5e26\u6709 nchw \u53c2\u6570\u7528\u6765\u5904\u7406\u539f\u6a21\u578b4\u7ef4\u8f93\u5165\u7684\u6392\u5e03\u4e3aNCHW\uff08onnx_dump_data.py\u4f1a\u76f4\u63a5\u8c03\u7528get_image\u51fd\u6570\u6765\u751f\u6210\u6a21\u578binput\u6570\u636e\uff0c\u5e76\u4e14\u5f3a\u5236nchw=True\uff09\u3002 \u524d\u5904\u7406\u811a\u672c\u51fd\u6570\u793a\u4f8b\uff1a def get_image ( img_path, resizeH = 224 , resizeW = 224 , resizeC = 3 , norm = True, meanB = 104 , meanG = 117 , meanR = 123 , std = 58 .82, rgb = False, nchw = False ) : ... ... if nchw: # NCHW img_norm = np.transpose ( img_norm.reshape ( resizeH, resizeW, -1 ) , axes =( 2 , 0 , 1 )) return np.expand_dims ( img_norm, 0 ) Please Note: \u82e5\u6a21\u578b\u4e3a \u591a\u8f93\u5165 \u65f6\uff0c -n,--preprocess \u53c2\u6570\u7528\u6cd5\u9700\u8981\u591a\u4e2a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4f8b\u5982 -n preprocess1.py,preprocess2.py \u6216\u8005 --preprocess preprocess1.py,preprocess2.py \u82e5\u6a21\u578b\u4e3a \u591a\u8f93\u5165 \u65f6\uff0c -i/--image \u53c2\u6570\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\u3002","title":"6.2.1.3 Dump\u89e3\u6790Onnx\u539f\u6a21\u578b"},{"location":"module/User_Guide/IPU230/DumpDebug_Tool.html#622-auto_dump_debugsh","text":"\u5de5\u5177\u7684\u4f4d\u7f6e\u5728 SGS_IPU_SDK/DumpDebug/auto_dump_debug.sh \u3002","title":"6.2.2 \u4f7f\u7528auto_dump_debug.sh\u811a\u672c\u5206\u6790\u6570\u636e"},{"location":"module/User_Guide/IPU230/DumpDebug_Tool.html#6221-sigmastar","text":"(1) auto_dump_debug.sh\u811a\u672c\u80fd\u591f\u5bf9\u6bd4\u6837\u672c bin\uff08sample\uff09\u548c\u57fa\u51c6 bin\uff08benchmark\uff09\u7684\u76f8\u540coutput tensor\u5c42\u7684COS\u3001MSE\u548cRMSE\uff0c\u9700\u4f7f\u7528 6.2.1.1 \u4e2dDump\u51fa\u7684\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u548c\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u7684bin\u6587\u4ef6\u3002 (2) \u4f7f\u7528\u793a\u4f8b\uff1a ./auto_dump_debug.sh \\ /home/user/SGS_IPU_SDK \\ /home/user/sample.bin \\ /home/user/benchmark.bin (3) \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a Param1 : SGS_IPU_SDK \u7684\u8def\u5f84\uff0c\u5982\u679c\u5728\u5f53\u524d\u4f4d\u7f6e\uff0c\u53ea\u9700\u4f20\u76ee\u5f55\u5939\u540d\u3002 Param2 : \u9700\u8981\u5bf9\u6bd4\u7684\u5df2\u7ecf dump\u51fa\u6765\u7684sample bin\u8def\u5f84\uff0c\u6b64\u5904\u5e94\u4e3a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578bDump\u51fa\u7684bin\u6587\u4ef6\u8def\u5f84\u3002 Param3 : \u4f5c\u4e3a\u53c2\u8003\u7684\u5df2\u7ecf dump\u51fa\u6765\u7684 benchmark bin\u8def\u5f84\uff0c\u6b64\u5904\u5e94\u4e3a\u6d6e\u70b9\u7f51\u7edc\u6a21\u578bDump\u51fa\u7684bin\u6587\u4ef6\u8def\u5f84\u3002 (4) \u5206\u6790\u7ed3\u679c\u5c55\u793a \u4f7f\u7528\u987b\u77e5 auto_dump_debug.sh\u811a\u672c\u5bf9\u6bd4\u7ed3\u679c\u5c06\u53d7DebugConfig.txt\u4e2ddisableDomainFuseOps\u5f71\u54cd\u3002 \u2460 \u672a\u5f00\u542fdisableDomainFuseOps\u9009\u9879\u65f6\uff0c\u5b8c\u6210\u5206\u6790\u540e\u663e\u793a\u5982\u4e0b\uff1a\uff08\u90e8\u5206\uff09 3.conv1_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000046 COS:0.999898 RMSE:0.014310 4.pool1.xx.output0 OP_TYPE:MAX_POOL_2D MSE:0.000057 COS:0.999931 RMSE:0.011018 7.res2a_branch1_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000076 COS:0.999886 RMSE:0.015652 11.res2a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000027 COS:0.999652 RMSE:0.023612 16.res2a_xx.xx.output0 OP_TYPE:RELU MSE:0.000177 COS:0.999644 RMSE:0.025049 20.res2b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000069 COS:0.999242 RMSE:0.039121 25.res2b_xx.xx.output0 OP_TYPE:RELU MSE:0.000430 COS:0.999452 RMSE:0.030551 28.res3a_branch1_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000165 COS:0.998975 RMSE:0.041644 32.res3a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000139 COS:0.998842 RMSE:0.048416 37.res3a_xx.xx.output0 OP_TYPE:RELU MSE:0.000297 COS:0.999069 RMSE:0.041043 41.res3b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000070 COS:0.998836 RMSE:0.051215 46.res3b_xx.xx.output0 OP_TYPE:RELU MSE:0.000366 COS:0.999035 RMSE:0.042863 49.res4a_branch1_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000026 COS:0.999282 RMSE:0.035575 53.res4a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000108 COS:0.998950 RMSE:0.047213 58.res4a_xx.xx.output0 OP_TYPE:RELU MSE:0.000149 COS:0.999174 RMSE:0.040582 62.res4b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000030 COS:0.999020 RMSE:0.046630 67.res4b_xx.xx.output0 OP_TYPE:RELU MSE:0.000168 COS:0.999073 RMSE:0.041229 70.res5a_branch1_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000305 COS:0.999276 RMSE:0.033715 74.res5a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000032 COS:0.998723 RMSE:0.053469 79.res5a_xx.xx.output0 OP_TYPE:RELU MSE:0.000507 COS:0.998762 RMSE:0.050663 83.res5b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000027 COS:0.998182 RMSE:0.064201 88.res5b_xx.xx.output0 OP_TYPE:RELU MSE:0.006022 COS:0.998665 RMSE:0.056931 89.pool5.xx.output0 OP_TYPE:AVG_POOL_2D MSE:0.004321 COS:0.998488 RMSE:0.079694 90.fc1000_reshape#1_output#183.output0 OP_TYPE:ReshapeAliasMSE:0.004321 COS:0.998488 RMSE:0.079694 91.fc1000#185.xx.output0 OP_TYPE:CONV_2D MSE:0.014197 COS:0.998901 RMSE:0.051447 92.fc1000.xx.output0 OP_TYPE:ReshapeAliasMSE:0.014197 COS:0.998901 RMSE:0.051447 93.prob.xx.output0 OP_TYPE:Fix2Float MSE:0.000000 COS:1.000000 RMSE:0.000152 \u2461 \u5f00\u542fdisableDomainFuseOps\u9009\u9879\u65f6\uff0c\u5b8c\u6210\u5206\u6790\u540e\u663e\u793a\u5982\u4e0b\uff1a\uff08\u90e8\u5206\uff09 0.conv1.xx.output0 OP_TYPE:CONV_2D MSE:2.397930 COS:0.999887 RMSE:0.019312 1.conv1_xx.xx.output0 OP_TYPE:MUL MSE:0.000037 COS:0.999850 RMSE:0.020800 2.conv1_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000037 COS:0.999936 RMSE:0.010667 3.conv1_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000052 COS:0.999885 RMSE:0.015123 4.pool1.xx.output0 OP_TYPE:MAX_POOL_2D MSE:0.000063 COS:0.999924 RMSE:0.011603 5.res2a_branch1.xx.output0 OP_TYPE:CONV_2D MSE:0.000096 COS:0.999952 RMSE:0.009368 6.res2a_branch1_xx.xx.output0 OP_TYPE:MUL MSE:0.000080 COS:0.999956 RMSE:0.009144 7.res2a_branch1_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000080 COS:0.999880 RMSE:0.016141 8.res2a_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.000349 COS:0.999951 RMSE:0.009727 9.res2a_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000049 COS:0.999956 RMSE:0.009349 10.res2a_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000049 COS:0.999886 RMSE:0.016510 11.res2a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000028 COS:0.999641 RMSE:0.024211 12.res2a_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000100 COS:0.999821 RMSE:0.018379 13.res2a_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.000118 COS:0.999832 RMSE:0.017982 14.res2a_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000118 COS:0.999670 RMSE:0.024984 15.res2a.xx.output0 OP_TYPE:ADD MSE:0.000241 COS:0.999771 RMSE:0.021801 16.res2a_xx.xx.output0 OP_TYPE:RELU MSE:0.000182 COS:0.999634 RMSE:0.025262 17.res2b_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.000525 COS:0.999709 RMSE:0.023127 18.res2b_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000193 COS:0.999746 RMSE:0.022434 19.res2b_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000193 COS:0.999474 RMSE:0.032121 20.res2b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000071 COS:0.999219 RMSE:0.039747 21.res2b_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000157 COS:0.999549 RMSE:0.030371 22.res2b_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.000272 COS:0.999587 RMSE:0.029537 23.res2b_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000272 COS:0.999151 RMSE:0.040304 24.res2b.xx.output0 OP_TYPE:ADD MSE:0.000534 COS:0.999425 RMSE:0.031402 25.res2b_xx.xx.output0 OP_TYPE:RELU MSE:0.000448 COS:0.999429 RMSE:0.031203 26.res3a_branch1.xx.output0 OP_TYPE:CONV_2D MSE:0.000267 COS:0.999320 RMSE:0.034101 27.res3a_branch1_xx.xx.output0 OP_TYPE:MUL MSE:0.000169 COS:0.999345 RMSE:0.034331 28.res3a_branch1_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000169 COS:0.998949 RMSE:0.042434 29.res3a_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.001885 COS:0.999472 RMSE:0.030785 30.res3a_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000427 COS:0.999486 RMSE:0.030586 31.res3a_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000427 COS:0.998909 RMSE:0.045188 32.res3a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000147 COS:0.998773 RMSE:0.049700 33.res3a_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000331 COS:0.999425 RMSE:0.034038 34.res3a_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.000368 COS:0.999411 RMSE:0.034275 35.res3a_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000368 COS:0.998931 RMSE:0.044919 36.res3a.xx.output0 OP_TYPE:ADD MSE:0.000585 COS:0.999040 RMSE:0.042398 37.res3a_xx.xx.output0 OP_TYPE:RELU MSE:0.000301 COS:0.999058 RMSE:0.041479 38.res3b_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.000811 COS:0.999530 RMSE:0.029739 39.res3b_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000288 COS:0.999580 RMSE:0.028879 40.res3b_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000288 COS:0.999383 RMSE:0.033874 41.res3b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000073 COS:0.998787 RMSE:0.052493 42.res3b_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000136 COS:0.999469 RMSE:0.033442 43.res3b_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.000314 COS:0.999489 RMSE:0.033050 44.res3b_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000314 COS:0.999308 RMSE:0.036079 45.res3b.xx.output0 OP_TYPE:ADD MSE:0.000659 COS:0.998989 RMSE:0.042628 46.res3b_xx.xx.output0 OP_TYPE:RELU MSE:0.000375 COS:0.999011 RMSE:0.043575 47.res4a_branch1.xx.output0 OP_TYPE:CONV_2D MSE:0.000098 COS:0.999264 RMSE:0.037842 48.res4a_branch1_xx.xx.output0 OP_TYPE:MUL MSE:0.000027 COS:0.999298 RMSE:0.037615 49.res4a_branch1_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000027 COS:0.999253 RMSE:0.036302 50.res4a_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.001011 COS:0.999543 RMSE:0.028507 51.res4a_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000300 COS:0.999544 RMSE:0.028563 52.res4a_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000300 COS:0.999147 RMSE:0.040221 53.res4a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000107 COS:0.998961 RMSE:0.047238 54.res4a_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000335 COS:0.999464 RMSE:0.032660 55.res4a_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.000255 COS:0.999453 RMSE:0.032788 56.res4a_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000255 COS:0.999234 RMSE:0.038888 57.res4a.xx.output0 OP_TYPE:ADD MSE:0.000312 COS:0.999298 RMSE:0.036873 58.res4a_xx.xx.output0 OP_TYPE:RELU MSE:0.000146 COS:0.999191 RMSE:0.040181 59.res4b_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.000369 COS:0.999748 RMSE:0.021992 60.res4b_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000156 COS:0.999772 RMSE:0.021527 61.res4b_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000156 COS:0.999625 RMSE:0.026857 62.res4b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000028 COS:0.999073 RMSE:0.045494 63.res4b_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000048 COS:0.999748 RMSE:0.022612 64.res4b_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.000191 COS:0.999751 RMSE:0.022354 65.res4b_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000191 COS:0.999678 RMSE:0.024581 66.res4b.xx.output0 OP_TYPE:ADD MSE:0.000337 COS:0.999448 RMSE:0.032108 67.res4b_xx.xx.output0 OP_TYPE:RELU MSE:0.000160 COS:0.999113 RMSE:0.040588 68.res5a_branch1.xx.output0 OP_TYPE:CONV_2D MSE:0.000072 COS:0.999179 RMSE:0.038052 69.res5a_branch1_xx.xx.output0 OP_TYPE:MUL MSE:0.000290 COS:0.999179 RMSE:0.038130 70.res5a_branch1_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000290 COS:0.999311 RMSE:0.032880 71.res5a_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.000355 COS:0.999758 RMSE:0.020371 72.res5a_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000133 COS:0.999750 RMSE:0.020561 73.res5a_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000133 COS:0.999613 RMSE:0.026392 74.res5a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000028 COS:0.998859 RMSE:0.051003 75.res5a_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000063 COS:0.999512 RMSE:0.031809 76.res5a_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.001009 COS:0.999480 RMSE:0.032233 77.res5a_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.001009 COS:0.999257 RMSE:0.039436 78.res5a.xx.output0 OP_TYPE:ADD MSE:0.001413 COS:0.999379 RMSE:0.034297 79.res5a_xx.xx.output0 OP_TYPE:RELU MSE:0.000457 COS:0.998876 RMSE:0.048274 80.res5b_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.001387 COS:0.999842 RMSE:0.015781 81.res5b_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000239 COS:0.999839 RMSE:0.015798 82.res5b_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000239 COS:0.999639 RMSE:0.026762 83.res5b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000023 COS:0.998458 RMSE:0.058598 84.res5b_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000041 COS:0.999061 RMSE:0.041137 85.res5b_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.007750 COS:0.999058 RMSE:0.041188 86.res5b_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.007751 COS:0.998732 RMSE:0.052601 87.res5b.xx.output0 OP_TYPE:ADD MSE:0.008533 COS:0.998792 RMSE:0.052043 88.res5b_xx.xx.output0 OP_TYPE:RELU MSE:0.004860 COS:0.998924 RMSE:0.051718 89.pool5.xx.output0 OP_TYPE:AVG_POOL_2D MSE:0.004061 COS:0.998601 RMSE:0.078395 90.fc1000_reshape#1_output#183.output0 OP_TYPE:ReshapeAliasMSE:0.004061 COS:0.998601 RMSE:0.078395 91.fc1000#185.xx.output0 OP_TYPE:CONV_2D MSE:0.013363 COS:0.998935 RMSE:0.050327 92.fc1000.xx.output0 OP_TYPE:ReshapeAliasMSE:0.013363 COS:0.998935 RMSE:0.050327 93.prob.xx.output0 OP_TYPE:SOFTMAX MSE:0.000000 COS:1.000000 RMSE:0.000152","title":"6.2.2.1 \u5bf9\u6bd4\u5206\u6790SigmaStar\u6d6e\u70b9\u4e0e\u5b9a\u70b9\u6a21\u578b"},{"location":"module/User_Guide/IPU230/DumpDebug_Tool.html#6222-sigmastarcaffeonnx","text":"(1) auto_dump_debug.sh\u811a\u672c\u540c\u6837\u80fd\u591f\u5bf9\u6bd4SigmaStar\uff08\u6d6e\u70b9/\u5b9a\u70b9\uff09\u6a21\u578b\u4e0e\u539f\u6a21\u578b\uff08Caffe/Onnx\uff09\u76f8\u540coutput tensor\u5c42\u7684COS\u3001MSE\u548cRMSE\u3002\u6253\u5370\u683c\u5f0f\u4e0e 6.2.2.1 \u76f8\u540c\u3002 (2) \u4f7f\u7528\u793a\u4f8b\uff1a \u2460 \u4e0eCaffe\u539f\u6a21\u578b\u5bf9\u6bd4\uff1a ./auto_dump_debug.sh \\ /home/user/SGS_IPU_SDK \\ /home/user/sigma_outtensor_dump.bin \\ /home/user/caffe_NHWC_outtensor_dump.bin \u2461 \u4e0eOnnx\u539f\u6a21\u578b\u5bf9\u6bd4\uff1a ./auto_dump_debug.sh \\ /home/user/SGS_IPU_SDK \\ /home/user/sigma_outtensor_dump.bin \\ /home/user/onnx_NHWC_outtensor_dump.bin (3) \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a Param1 : SGS_IPU_SDK \u7684\u8def\u5f84\uff0c\u5982\u679c\u5728\u5f53\u524d\u4f4d\u7f6e\uff0c\u53ea\u9700\u4f20\u76ee\u5f55\u5939\u540d\u3002 Param2 : \u9700\u8981\u5bf9\u6bd4\u7684\u5df2\u7ecf dump\u51fa\u6765\u7684sample bin\u8def\u5f84\uff0c\u6b64\u5904\u5e94\u4e3aSigmaStar\u7f51\u7edc\u6a21\u578b\uff08\u6d6e\u70b9/\u5b9a\u70b9\uff09Dump\u51fa\u7684bin\u6587\u4ef6\u8def\u5f84\u3002 Param3 : \u4f5c\u4e3a\u53c2\u8003\u7684\u5df2\u7ecf dump\u51fa\u6765\u7684 benchmark bin\u8def\u5f84\uff0c\u6b64\u5904\u5e94\u4e3a\u539f\u6a21\u578b\uff08Caffe/Onnx\uff09Dump\u51fa\u7684bin\u6587\u4ef6\u8def\u5f84\u3002 \u4f7f\u7528\u987b\u77e5 \u5c06 6.2.1.1 \u4e2dDump\u51fa\u7684\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6216\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u7684bin\u6587\u4ef6\u4f5c\u4e3a\u6837\u672c bin\uff08sample\uff09\uff0c\u4f20\u5165Param2\uff0c\u4e0d\u5f97\u4f20\u5165Param3\u3002 \u5c06 6.2.1.2 \u6216 6.2.1.3 \u4e2dDump\u51fa\u7684\u539f\u6a21\u578bbin\u6587\u4ef6\u4f5c\u4e3a\u57fa\u51c6 bin\uff08benchmark\uff09\uff0c\u4f20\u5165Param3\uff0c\u4e0d\u5f97\u4f20\u5165Param2\u3002","title":"6.2.2.2 \u5bf9\u6bd4\u5206\u6790SigmaStar\uff08\u6d6e\u70b9/\u5b9a\u70b9\uff09\u6a21\u578b\u4e0e\u539f\u6a21\u578b\uff08Caffe/Onnx\uff09"},{"location":"module/User_Guide/IPU230/DumpDebug_Tool.html#63-segmentfault","text":"\u5f53\u8fd0\u884c\u65f6\u53d1\u751fSegmentFault\u9519\u8bef\u65f6\uff0c\u7a0b\u5e8f\u4e2d\u65ad\u8fd0\u884c\uff0c\u6b64\u65f6\u5b9a\u4f4d\u7a0b\u5e8f\u53d1\u751f\u9519\u8bef\u4f4d\u7f6e\u81f3\u5173\u91cd\u8981\u3002\u8bf7\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\uff0c\u534f\u52a9\u63d0\u4f9b\u76f8\u5173\u4fe1\u606f\u3002 (1) \u4fee\u6539\u751f\u6210core\u6587\u4ef6\u8def\u5f84\u4e3a\u5f53\u524d\u76ee\u5f55\uff0c\u5e76\u8bbe\u7f6ecore\u6587\u4ef6\u5927\u5c0f\u65e0\u4e0a\u9650\uff1a echo core > /proc/sys/kernel/core_pattern ulimit -c unlimited (2) \u91cd\u65b0\u8fd0\u884c\u521a\u521a\u53d1\u751f\u9519\u8bef\u7684\u8f6c\u6362\u7f51\u7edc\u547d\u4ee4\u3002 (3) \u751f\u6210core\u6587\u4ef6\u540e\uff0c\u8fd0\u884c\u5982\u4e0b\u547d\u4ee4\uff0c\u4f1a\u6253\u5370\u7a0b\u5e8f\u76f8\u5173\u4fe1\u606f\uff1a ~/SGS_IPU_SDK/DumpDebug/show_address.sh /path/to/SGS_IPU_SDK/bin/XXX /path/to/core show_address.sh\u811a\u672c\u9700\u8981\u4e24\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u6267\u884c\u547d\u4ee4\u7684bin\u7684\u8def\u5f84\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3acore\u7684\u8def\u5f84\u3002 \u5c4f\u5e55\u4f1a\u6253\u5370\u5185\u5b58\u6620\u5c04\u4fe1\u606f\u4ee5\u53ca\u7a0b\u5e8f\u51fd\u6570\u5806\u6808\u5730\u5740\uff0c\u8bf7\u53cd\u9988\u6b64\u4fe1\u606f\u3002","title":"6.3. SegmentFault\u9519\u8bef\u5904\u7406"},{"location":"module/User_Guide/IPU230/DumpDebug_Tool.html#64","text":"DumpDebug Tool\u63d0\u4f9b\u4e86\u6a21\u578b\u91cf\u5316\u540e\u7cbe\u5ea6\u4e0b\u964d\u95ee\u9898\u7684\u6392\u67e5\u65b9\u6cd5\uff0c\u53ef\u7528\u4e8e\u9488\u5bf9\u5b9e\u9645\u95ee\u9898\u53c2\u8003\u3002 \u4f7f\u7528calibrator\u65f6\uff0c --quant_level \u9009\u62e9L2\u3001L3\u3001L4\u6216L5\u65f6\u4f1a\u6839\u636e\u7edf\u8ba1\u4fe1\u606f\u81ea\u52a8\u914d\u7f6e\u5377\u79ef\u7684\u91cf\u5316\u65b9\u5f0f\uff0c\u5982\u679ccalibrator\u672a\u80fd\u5c06\u4ee5\u4e0b\u60c5\u51b5\u7684\u5377\u79ef\u4fee\u6539\u6210\u201dINT16\u201d\u5377\u79ef\u6a21\u5f0f\uff0c\u8bf7\u5728input config\u4e2d\u901a\u8fc7\u914d\u7f6eCONV_CONFIG\u7684tensor_arrays\u65b9\u5f0f\u624b\u52a8\u5f00\u542f\u3002 \u4f7f\u7528auto_dump_debug.sh\u811a\u672c\u5206\u6790\u6570\u636e \u529f\u80fd\u5bf9\u6bd4\u6570\u636e\u540e\uff0c\u5982\u679cRMSE\u503c\u8f83\u5927\uff08\u4e00\u822c\u8ba4\u4e3a\u5927\u4e8e0.5\uff09\uff0c\u53ef\u5c06\u8be5\u5c42\u524d\u7684\u5377\u79ef\u8f93\u5165\u5c42\u5f00\u542f INT16 \u5377\u79ef\u6a21\u5f0f\u3002 \u4fee\u6539input_config.ini\u6587\u4ef6\u540e\u9700\u8981\u91cd\u65b0\u4ece\u539f\u59cb\u6846\u67b6\u8bad\u7ec3\u7684\u6a21\u578b\u8f6c\u6362 \u3002","title":"6.4. \u76f8\u5173\u95ee\u9898\u6c47\u603b"},{"location":"module/User_Guide/IPU230/OneClick_Generation.html","text":"8.1. SGS_Converter\u7b80\u4ecb \u00b6 SGS_Converter \u8bf4\u660e \u5de5\u5177\u4f4d\u7f6e SGS_IPU_SDK/Scripts/ConvertTool/SGS_converter.py \u5de5\u5177\u4f5c\u7528 \u5c06\u6a21\u578b\u4e00\u952e\u8f6c\u6362\u4e3aSGS\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b \u4f7f\u7528\u987b\u77e5 \u2460 \u652f\u6301\u4ece tensorflow_graphdef \uff0c tensorflow_savemodel \uff0c keras \uff0c tflite \uff0c caffe \uff0c onnx \u516d\u79cd\u6846\u67b6\u6a21\u578b\u8f6c\u6362 \u4e0d\u540c\u6846\u67b6\u6a21\u578b\u4e00\u952e\u8f6c\u6362\u7684\u4f7f\u7528\u65b9\u6cd5 \u2461 \u9700\u914d\u7f6einput config \u4fe1\u606f \u8be6\u89c1 input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e \u4f7f\u7528\u524d\u5148\u5728SGS_IPU_SDK\u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK source cfg_env.sh 8.2. \u4e0d\u540c\u6846\u67b6\u6a21\u578b\u4e00\u952e\u8f6c\u6362\u4e3aSGS\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u7684\u4f7f\u7528\u65b9\u6cd5 \u00b6 \u4e0b\u9762\u662fSGS_Converter\u76ee\u524d\u652f\u6301\u7684platform information\uff1a python3 SGS_converter.py -h usage : SGS_converter.py [-h] {tensorflow_graphdef,tensorflow_savemodel,keras,tflite,caffe,onnx,debug} ... Convert Tool positional arguments : {tensorflow_graphdef,tensorflow_savemodel,keras,tflite,caffe,onnx,debug} platform info tensorflow_graphdef tensorflow graphdef commands tensorflow_savemodel tensorflow save_model commands keras keras commands tflite tflite commands caffe caffe commands onnx onnx commands debug debug commands optional arguments : -h, --help show this help message and exit \u4e0d\u540c\u5e73\u53f0\u6a21\u578b\u8f6c\u6362\u4e3aSGS\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u7684\u6240\u9700\u53c2\u6570\u4fe1\u606f\u7565\u6709\u4e0d\u540c\uff0c\u5982\u679c\u60f3\u8fdb\u4e00\u6b65\u4e86\u89e3\u5404\u4e2a\u5e73\u53f0\u8f6c\u6362\u6240\u9700\u8981\u7684\u53c2\u6570\u4fe1\u606f\uff0c\u53ef\u4ee5\u6267\u884c python3 SGS_converter.py {platform} \u2013h \u8fdb\u884c\u67e5\u770b\u3002 \u4e0b\u9762\u5c06\u7b80\u5355\u4ecb\u7ecd\u5404\u4e2a\u5e73\u53f0\u8f6c\u6362\u6240\u9700\u7684\u5177\u4f53\u4fe1\u606f\u548c\u67e5\u770b\u6307\u4ee4\uff1a 8.2.1 caffe \u6846\u67b6\u6307\u4ee4 \u00b6 1\u3001information\uff1a python3 SGS_converter.py caffe -h usage : SGS_converter.py caffe [-h] --model_file MODEL_FILE --weight_file WEIGHT_FILE --input_config INPUT_CONFIG -i IMAGE_FILE -n PREPROCESS [--input_shapes INPUT_SHAPES] [--output_file OUTPUT_FILE] [--export_models] optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE SavedModel directory to convert --weight_file WEIGHT_FILE Full filepath of tflite file containing the caffe -n PREPROCESS, --preprocess PREPROCESS Name of model to select image preprocess method --input_config INPUT_CONFIG Input config path. -i IMAGE_FILE, --image_file IMAGE_FILE Image / Directory containing images path / Image_list for multi_input model. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth. (default None) --output_file OUTPUT_FILE Full filepath of out Model path. --export_models export models of debug/float/cmodel_float/fix 2\u3001 \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a (1) \u5fc5\u9009\u53c2\u6570\uff1a --model_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684caffe\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 --weight_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684caffe\u6743\u91cd\u6587\u4ef6\u8def\u5f84\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\u3002 \u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 -i : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u6240\u9700\u7684\u56fe\u7247\u6587\u4ef6\u8def\u5f84\u3002 \u4f7f\u7528\u987b\u77e5 \u652f\u6301\u4f7f\u7528\u5355\u5f20\u56fe\u7247\u8def\u5f84\u8fdb\u884c\u4f20\u53c2\uff0c\u4e5f\u652f\u6301\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\uff0c\u6216\u5b58\u50a8\u56fe\u7247\u8def\u5f84\u5217\u8868\u7684\u6587\u4ef6\u3002\u4f7f\u7528\u8def\u5f84\u5217\u8868\u5f62\u5f0f\u65f6\u53ef\u53c2\u8003\u5982\u4e0b\u65b9\u5f0f\uff1a \u7f51\u7edc\u6a21\u578b\u4e3a\u5355\u8f93\u5165\u65f6\uff1a -i ~/SGS_IPU_SDK/image_test/2007000364.jpg \u7f51\u7edc\u6a21\u578b\u4e3a\u591a\u8f93\u5165\u65f6\uff1a -i /SGS_IPU_SDK/image_test/2007000364.jpg, /SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp -n : \u6307\u5b9a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4e0e\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\u76f8\u5173\u3002 \u8be6\u89c1 Calibrator:\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5 \u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a --export_models : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u65f6\u4fdd\u5b58\u5404\u4e2a\u9636\u6bb5\u7684\u6587\u4ef6\uff0c\u4e0d\u4f7f\u7528\u8be5\u53c2\u6570\u5219\u53ea\u751f\u6210\u79bb\u7ebf\u7f51\u7edc\u6587\u4ef6\u3002 \u4f7f\u7528\u987b\u77e5 \u4f7f\u7528 --export_models \u53c2\u6570\u5fc5\u987b\u540c\u65f6\u4f7f\u7528--output_file\u53c2\u6570 --output_file : \u6307\u5b9a\u751f\u6210\u7684SGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b,\u8be5\u53c2\u6570\u5fc5\u987b\u4e0e --export_models \u4e00\u8d77\u4f7f\u7528\u3002 --inplace_input_buf : RAWDATA_F32_NHWC \u662f\u5426\u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf. \u4f7f\u7528\u987b\u77e5 training_input_formats \u548c input_formats \u914d\u7f6e\u4e3a RAWDATA_F32_NHWC \u4e14\u4f7f\u7528 --batch_mode \u7684 one_buf \u6a21\u5f0f\u65f6\u624d\u53ef\u4ee5\u914d\u7f6e\u6b64\u53c2\u6570\u3002 \u53ef\u9009True/False\uff0c\u9ed8\u8ba4\u4e3aTrue\u3002 True : \u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf\u3002 False : \u4fdd\u7559\u539f\u59cb\u8f93\u5165buf\u3002 3\u3001 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 SGS_converter.py caffe \\ --model_file caffe_resnet50_conv.prototxt \\ --weight_file caffe_resnet50_conv.caffemodel \\ --input_config input_config.ini \\ -i file.list -n preprocess.py --export_models --output_file resnet50_float.sim 8.2.2 onnx \u6846\u67b6\u6307\u4ee4 \u00b6 1\u3001information\uff1a python3 SGS_converter.py onnx -h usage : SGS_converter.py onnx [-h] --model_file MODEL_FILE --input_config INPUT_CONFIG -i IMAGE_FILE -n PREPROCESS [--input_shapes INPUT_SHAPES] [--output_file OUTPUT_FILE] [--export_models] optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE SavedModel directory to convert -n PREPROCESS, --preprocess PREPROCESS Name of model to select image preprocess method --input_config INPUT_CONFIG Input config path. -i IMAGE_FILE, --image_file IMAGE_FILE Image / Directory containing images path / Image_list for multi_input model. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth. (default None) --output_file OUTPUT_FILE Full filepath of out Model path. --export_models export models of debug/float/cmodel_float/fix 2\u3001 \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a (1) \u5fc5\u9009\u53c2\u6570\uff1a --model_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684caffe\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 --input_shapes : Onnx\u6a21\u578b\u8f93\u5165shape. dimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0cshape\u4e2a\u6570\u548cinputs \u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\u3002 \u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 -i : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u6240\u9700\u7684\u56fe\u7247\u6587\u4ef6\u8def\u5f84\u3002 \u4f7f\u7528\u987b\u77e5 \u652f\u6301\u4f7f\u7528\u5355\u5f20\u56fe\u7247\u8def\u5f84\u8fdb\u884c\u4f20\u53c2\uff0c\u4e5f\u652f\u6301\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\uff0c\u6216\u5b58\u50a8\u56fe\u7247\u8def\u5f84\u5217\u8868\u7684\u6587\u4ef6\u3002\u4f7f\u7528\u8def\u5f84\u5217\u8868\u5f62\u5f0f\u65f6\u53ef\u53c2\u8003\u5982\u4e0b\u65b9\u5f0f\uff1a \u7f51\u7edc\u6a21\u578b\u4e3a\u5355\u8f93\u5165\u65f6\uff1a -i ~/SGS_IPU_SDK/image_test/2007000364.jpg \u7f51\u7edc\u6a21\u578b\u4e3a\u591a\u8f93\u5165\u65f6\uff1a -i /SGS_IPU_SDK/image_test/2007000364.jpg, /SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp -n : \u6307\u5b9a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4e0e\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\u76f8\u5173\u3002 \u8be6\u89c1 Calibrator:\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5 \u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a --export_models : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u65f6\u4fdd\u5b58\u5404\u4e2a\u9636\u6bb5\u7684\u6587\u4ef6\uff0c\u4e0d\u4f7f\u7528\u8be5\u53c2\u6570\u5219\u53ea\u751f\u6210\u79bb\u7ebf\u7f51\u7edc\u6587\u4ef6\u3002 \u4f7f\u7528\u987b\u77e5 \u4f7f\u7528 --export_models \u53c2\u6570\u5fc5\u987b\u540c\u65f6\u4f7f\u7528--output_file\u53c2\u6570 --output_file : \u6307\u5b9a\u751f\u6210\u7684SGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b,\u8be5\u53c2\u6570\u5fc5\u987b\u4e0e --export_models \u4e00\u8d77\u4f7f\u7528\u3002 --inplace_input_buf : RAWDATA_F32_NHWC \u662f\u5426\u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf. \u4f7f\u7528\u987b\u77e5 training_input_formats \u548c input_formats \u914d\u7f6e\u4e3a RAWDATA_F32_NHWC \u4e14\u4f7f\u7528 --batch_mode \u7684 one_buf \u6a21\u5f0f\u65f6\u624d\u53ef\u4ee5\u914d\u7f6e\u6b64\u53c2\u6570\u3002 \u53ef\u9009True/False\uff0c\u9ed8\u8ba4\u4e3aTrue\u3002 True : \u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf\u3002 False : \u4fdd\u7559\u539f\u59cb\u8f93\u5165buf\u3002 3\u3001 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ~/SGS_IPU_SDK/Scripts/ConvertTool/SGS_converter.py onnx --model_file ~/SGS_Models/onnx/onnx_mobilenet_v2/onnx_mobilenet_v2.onnx \\ --input_shapes 1,3,224,224 \\ --input_config ~/SGS_Models/onnx/onnx_mobilenet_v2/input_config.ini \\ -i file.list -n preprocess.py --export_models --output_file onnx_mobilenet_v2_float.sim Note 1.\u5982\u679connx\u6a21\u578b\u4e2d\u5e26\u6709\u540e\u5904\u7406\u7684\u7b97\u5b50\uff0c\u8bf7\u5148\u53bb\u9664\uff0c\u76ee\u524d\u53ea\u652f\u6301\u4e3b\u5e72\u7f51\u7edc\u7684\u8f6c\u6362\u3002\u5982\u679c\u662f\u7531\u5176\u4ed6\u6846\u67b6\u751f\u6210\u7684onnx\u6a21\u578b\uff0c\u8bf7\u52a1\u5fc5\u6ce8\u610f\u5728\u8f6c\u6362\u6a21\u578b\u65f6\u5173\u95ed\u751f\u6210\u540e\u5904\u7406\u7684\u9009\u9879\u3002 8.2.3 tflite \u6846\u67b6\u6307\u4ee4 \u00b6 1\u3001information\uff1a python3 SGS_converter.py tflite -h usage : SGS_converter.py tflite [-h] --model_file MODEL_FILE --input_config INPUT_CONFIG -i IMAGE_FILE -n PREPROCESS [--input_shapes INPUT_SHAPES] [--output_file OUTPUT_FILE] [--export_models] optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE SavedModel directory to convert -n PREPROCESS, --preprocess PREPROCESS Name of model to select image preprocess method --input_config INPUT_CONFIG Input config path. -i IMAGE_FILE, --image_file IMAGE_FILE Image / Directory containing images path / Image_list for multi_input model. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth. (default None) --output_file OUTPUT_FILE Full filepath of out Model path. --export_models export models of debug/float/cmodel_float/fix 2\u3001 \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a (1) \u5fc5\u9009\u53c2\u6570\uff1a --model_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 \u8f93\u5165\u7684\u6a21\u578b\u4e3atflite\u683c\u5f0f\u6587\u4ef6\u8def\u5f84(\u5fc5\u987b\u4e3a\u975e\u91cf\u5316\u6a21\u578b)\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\u3002 \u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 -i : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u6240\u9700\u7684\u56fe\u7247\u6587\u4ef6\u8def\u5f84\u3002 \u4f7f\u7528\u987b\u77e5 \u652f\u6301\u4f7f\u7528\u5355\u5f20\u56fe\u7247\u8def\u5f84\u8fdb\u884c\u4f20\u53c2\uff0c\u4e5f\u652f\u6301\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\uff0c\u6216\u5b58\u50a8\u56fe\u7247\u8def\u5f84\u5217\u8868\u7684\u6587\u4ef6\u3002\u4f7f\u7528\u8def\u5f84\u5217\u8868\u5f62\u5f0f\u65f6\u53ef\u53c2\u8003\u5982\u4e0b\u65b9\u5f0f\uff1a \u7f51\u7edc\u6a21\u578b\u4e3a\u5355\u8f93\u5165\u65f6\uff1a -i ~/SGS_IPU_SDK/image_test/2007000364.jpg \u7f51\u7edc\u6a21\u578b\u4e3a\u591a\u8f93\u5165\u65f6\uff1a -i /SGS_IPU_SDK/image_test/2007000364.jpg, /SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp -n : \u6307\u5b9a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4e0e\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\u76f8\u5173\u3002 \u8be6\u89c1 Calibrator:\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5 \u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a --export_models : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u65f6\u4fdd\u5b58\u5404\u4e2a\u9636\u6bb5\u7684\u6587\u4ef6\uff0c\u4e0d\u4f7f\u7528\u8be5\u53c2\u6570\u5219\u53ea\u751f\u6210\u79bb\u7ebf\u7f51\u7edc\u6587\u4ef6\u3002 \u4f7f\u7528\u987b\u77e5 \u4f7f\u7528 --export_models \u53c2\u6570\u5fc5\u987b\u540c\u65f6\u4f7f\u7528--output_file\u53c2\u6570 --output_file : \u6307\u5b9a\u751f\u6210\u7684SGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b,\u8be5\u53c2\u6570\u5fc5\u987b\u4e0e --export_models \u4e00\u8d77\u4f7f\u7528\u3002 --inplace_input_buf : RAWDATA_F32_NHWC \u662f\u5426\u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf. \u4f7f\u7528\u987b\u77e5 training_input_formats \u548c input_formats \u914d\u7f6e\u4e3a RAWDATA_F32_NHWC \u4e14\u4f7f\u7528 --batch_mode \u7684 one_buf \u6a21\u5f0f\u65f6\u624d\u53ef\u4ee5\u914d\u7f6e\u6b64\u53c2\u6570\u3002 \u53ef\u9009True/False\uff0c\u9ed8\u8ba4\u4e3aTrue\u3002 True : \u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf\u3002 False : \u4fdd\u7559\u539f\u59cb\u8f93\u5165buf\u3002 3\u3001 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 SGS_converter.py tflite \\ --model_file Debug_save_model_float.tflite \\ --input_config input_config.ini \\ -i file.list -n preprocess.py 8.2.4 tensorflow_graphdef \u6846\u67b6\u6307\u4ee4 \u00b6 1\u3001information\uff1a python3 SGS_converter.py tensorflow_graphdef -h usage : SGS_converter.py tensorflow_graphdef [-h] --model_file MODEL_FILE --input_config INPUT_CONFIG -i IMAGE_FILE -n PREPROCESS [--input_shapes INPUT_SHAPES] [--output_file OUTPUT_FILE] [--export_models] optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of file containing frozen GraphDef --input_config INPUT_CONFIG Input config path. -i IMAGE_FILE, --image_file IMAGE_FILE Image / Directory containing images path / Image_list for multi_input model. -n PREPROCESS, --preprocess PREPROCESS Name of model to select image preprocess method --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth. (default None) --output_file OUTPUT_FILE Full filepath of out Model path. --export_models export models of debug/float/cmodel_float/fix 2\u3001 \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a (1) \u5fc5\u9009\u53c2\u6570\uff1a --model_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684\u8f93\u5165\u6a21\u578b\u8def\u5f84\u3002 \u4e3aTensorFlow frozen\u7684graphdef\u7684pb\u683c\u5f0f\u6587\u4ef6\u8def\u5f84\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\u3002 \u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 --input_shapes : \u6307\u5b9a\u7f51\u7edc\u8f93\u5165Tensor\u7684shape\u3002 \u683c\u5f0f\u4e3aNHWC\uff0cdimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff1b\u9700\u6ce8\u610fshape\u4e2a\u6570\u548cinputs\u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002 -i : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u6240\u9700\u7684\u56fe\u7247\u6587\u4ef6\u8def\u5f84\u3002 \u4f7f\u7528\u987b\u77e5 \u652f\u6301\u4f7f\u7528\u5355\u5f20\u56fe\u7247\u8def\u5f84\u8fdb\u884c\u4f20\u53c2\uff0c\u4e5f\u652f\u6301\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\uff0c\u6216\u5b58\u50a8\u56fe\u7247\u8def\u5f84\u5217\u8868\u7684\u6587\u4ef6\u3002\u4f7f\u7528\u8def\u5f84\u5217\u8868\u5f62\u5f0f\u65f6\u53ef\u53c2\u8003\u5982\u4e0b\u65b9\u5f0f\uff1a \u7f51\u7edc\u6a21\u578b\u4e3a\u5355\u8f93\u5165\u65f6\uff1a -i ~/SGS_IPU_SDK/image_test/2007000364.jpg \u7f51\u7edc\u6a21\u578b\u4e3a\u591a\u8f93\u5165\u65f6\uff1a -i /SGS_IPU_SDK/image_test/2007000364.jpg, /SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp -n : \u6307\u5b9a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4e0e\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\u76f8\u5173\u3002 \u8be6\u89c1 Calibrator:\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5 \u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a --export_models : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u65f6\u4fdd\u5b58\u5404\u4e2a\u9636\u6bb5\u7684\u6587\u4ef6\uff0c\u4e0d\u4f7f\u7528\u8be5\u53c2\u6570\u5219\u53ea\u751f\u6210\u79bb\u7ebf\u7f51\u7edc\u6587\u4ef6\u3002 \u4f7f\u7528\u987b\u77e5 \u4f7f\u7528 --export_models \u53c2\u6570\u5fc5\u987b\u540c\u65f6\u4f7f\u7528--output_file\u53c2\u6570 --output_file : \u6307\u5b9a\u751f\u6210\u7684SGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b,\u8be5\u53c2\u6570\u5fc5\u987b\u4e0e --export_models \u4e00\u8d77\u4f7f\u7528\u3002 --inplace_input_buf : RAWDATA_F32_NHWC \u662f\u5426\u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf. \u4f7f\u7528\u987b\u77e5 training_input_formats \u548c input_formats \u914d\u7f6e\u4e3a RAWDATA_F32_NHWC \u4e14\u4f7f\u7528 --batch_mode \u7684 one_buf \u6a21\u5f0f\u65f6\u624d\u53ef\u4ee5\u914d\u7f6e\u6b64\u53c2\u6570\u3002 \u53ef\u9009True/False\uff0c\u9ed8\u8ba4\u4e3aTrue\u3002 True : \u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf\u3002 False : \u4fdd\u7559\u539f\u59cb\u8f93\u5165buf\u3002 3\u3001 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 SGS_converter.py tensorflow_graphdef \\ --model_file yolo_v3_7/yolo_v3_7.pb \\ --input_config input_config.ini \\ --input_shapes 1,299,299,3 \\ -i file.list -n yolo_v3_7.py 8.2.5 tensorflow_savemodel \u6846\u67b6\u6307\u4ee4 \u00b6 1\u3001information\uff1a python3 SGS_converter.py tensorflow_savemodel -h usage : SGS_converter.py tensorflow_savemodel [-h] --model_file MODEL_FILE --input_config INPUT_CONFIG -i IMAGE_FILE -n PREPROCESS [--input_shapes INPUT_SHAPES] [--output_file OUTPUT_FILE] [--export_models] optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE SavedModel directory to convert -n PREPROCESS, --preprocess PREPROCESS Name of model to select image preprocess method --input_config INPUT_CONFIG Input config path. -i IMAGE_FILE, --image_file IMAGE_FILE Image / Directory containing images path / Image_list for multi_input model. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth. (default None) --output_file OUTPUT_FILE Full filepath of out Model path. --export_models export models of debug/float/cmodel_float/fix 2\u3001 \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a (1) \u5fc5\u9009\u53c2\u6570\uff1a --model_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 \u8f93\u5165\u7684\u6a21\u578b\u4e3aTensorFlow saved_model.builder\u751f\u6210\u7684\u6587\u4ef6\u8def\u5f84\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\u3002 \u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 -i : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u6240\u9700\u7684\u56fe\u7247\u6587\u4ef6\u8def\u5f84\u3002 \u4f7f\u7528\u987b\u77e5 \u652f\u6301\u4f7f\u7528\u5355\u5f20\u56fe\u7247\u8def\u5f84\u8fdb\u884c\u4f20\u53c2\uff0c\u4e5f\u652f\u6301\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\uff0c\u6216\u5b58\u50a8\u56fe\u7247\u8def\u5f84\u5217\u8868\u7684\u6587\u4ef6\u3002\u4f7f\u7528\u8def\u5f84\u5217\u8868\u5f62\u5f0f\u65f6\u53ef\u53c2\u8003\u5982\u4e0b\u65b9\u5f0f\uff1a \u7f51\u7edc\u6a21\u578b\u4e3a\u5355\u8f93\u5165\u65f6\uff1a -i ~/SGS_IPU_SDK/image_test/2007000364.jpg \u7f51\u7edc\u6a21\u578b\u4e3a\u591a\u8f93\u5165\u65f6\uff1a -i /SGS_IPU_SDK/image_test/2007000364.jpg, /SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp -n : \u6307\u5b9a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4e0e\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\u76f8\u5173\u3002 \u8be6\u89c1 Calibrator:\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5 \u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a --export_models : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u65f6\u4fdd\u5b58\u5404\u4e2a\u9636\u6bb5\u7684\u6587\u4ef6\uff0c\u4e0d\u4f7f\u7528\u8be5\u53c2\u6570\u5219\u53ea\u751f\u6210\u79bb\u7ebf\u7f51\u7edc\u6587\u4ef6\u3002 \u4f7f\u7528\u987b\u77e5 \u4f7f\u7528 --export_models \u53c2\u6570\u5fc5\u987b\u540c\u65f6\u4f7f\u7528--output_file\u53c2\u6570 --output_file : \u6307\u5b9a\u751f\u6210\u7684SGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b,\u8be5\u53c2\u6570\u5fc5\u987b\u4e0e --export_models \u4e00\u8d77\u4f7f\u7528\u3002 --input_shapes : \u7f51\u7edc\u8f93\u5165Tensor\u7684shape\u3002 \u683c\u5f0f\u4e3aNHWC\uff0cdimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0cshape\u4e2a\u6570\u548cinputs \u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002\u82e5\u4e0d\u6307\u5b9a\u5219\u4ecesaved_model_dir\u4e2d\u83b7\u53d6\u3002 --tag_set : \u9700\u8981\u548csave model\u65f6\u6240\u6307\u5b9a\u7684tag\u5339\u914d\u3002 \u5982\u679c\u4e0d\u505a\u8bbe\u5b9a\uff0c\u5219\u9ed8\u8ba4\u4e3a\u2018serve\u2019\u3002 --signature_key : \u9700\u8981\u548csave model\u65f6\u6240\u6307\u5b9a\u7684signature\u5339\u914d\u3002 \u5982\u679c\u4e0d\u505a\u8bbe\u5b9a\uff0c\u5219\u9ed8\u8ba4\u4e3a \u2018DEFAULT_SERVING_SIGNATURE_DEF_KEY\u2019 --inplace_input_buf : RAWDATA_F32_NHWC \u662f\u5426\u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf. \u4f7f\u7528\u987b\u77e5 training_input_formats \u548c input_formats \u914d\u7f6e\u4e3a RAWDATA_F32_NHWC \u4e14\u4f7f\u7528 --batch_mode \u7684 one_buf \u6a21\u5f0f\u65f6\u624d\u53ef\u4ee5\u914d\u7f6e\u6b64\u53c2\u6570\u3002 \u53ef\u9009True/False\uff0c\u9ed8\u8ba4\u4e3aTrue\u3002 True : \u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf\u3002 False : \u4fdd\u7559\u539f\u59cb\u8f93\u5165buf\u3002 3\u3001 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 SGS_converter.py tensorflow_savemodel \\ --model_file ~/test/tensorflow_model/save_model \\ --input_config input_config.ini \\ -i file.list -n preprocess.py 8.2.6 keras \u6846\u67b6\u6307\u4ee4 \u00b6 1\u3001information\uff1a python3 SGS_converter.py keras -h usage : SGS_converter.py keras [-h] --model_file MODEL_FILE --input_config INPUT_CONFIG -i IMAGE_FILE -n PREPROCESS [--input_shapes INPUT_SHAPES] [--output_file OUTPUT_FILE] [--export_models] optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE SavedModel directory to convert -n PREPROCESS, --preprocess PREPROCESS Name of model to select image preprocess method --input_config INPUT_CONFIG Input config path. -i IMAGE_FILE, --image_file IMAGE_FILE Image / Directory containing images path / Image_list for multi_input model. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth. (default None) --output_file OUTPUT_FILE Full filepath of out Model path. --export_models export models of debug/float/cmodel_float/fix 2\u3001 \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a (1) \u5fc5\u9009\u53c2\u6570\uff1a --model_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 \u8f93\u5165\u7684\u6a21\u578b\u4e3akeras h5\u683c\u5f0f\u6587\u4ef6\u8def\u5f84\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\u3002 \u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 -i : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u6240\u9700\u7684\u56fe\u7247\u6587\u4ef6\u8def\u5f84\u3002 \u4f7f\u7528\u987b\u77e5 \u652f\u6301\u4f7f\u7528\u5355\u5f20\u56fe\u7247\u8def\u5f84\u8fdb\u884c\u4f20\u53c2\uff0c\u4e5f\u652f\u6301\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\uff0c\u6216\u5b58\u50a8\u56fe\u7247\u8def\u5f84\u5217\u8868\u7684\u6587\u4ef6\u3002\u4f7f\u7528\u8def\u5f84\u5217\u8868\u5f62\u5f0f\u65f6\u53ef\u53c2\u8003\u5982\u4e0b\u65b9\u5f0f\uff1a \u7f51\u7edc\u6a21\u578b\u4e3a\u5355\u8f93\u5165\u65f6\uff1a -i ~/SGS_IPU_SDK/image_test/2007000364.jpg \u7f51\u7edc\u6a21\u578b\u4e3a\u591a\u8f93\u5165\u65f6\uff1a -i /SGS_IPU_SDK/image_test/2007000364.jpg, /SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp -n : \u6307\u5b9a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4e0e\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\u76f8\u5173\u3002 \u8be6\u89c1 Calibrator:\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5 \u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a --export_models : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u65f6\u4fdd\u5b58\u5404\u4e2a\u9636\u6bb5\u7684\u6587\u4ef6\uff0c\u4e0d\u4f7f\u7528\u8be5\u53c2\u6570\u5219\u53ea\u751f\u6210\u79bb\u7ebf\u7f51\u7edc\u6587\u4ef6\u3002 \u4f7f\u7528\u987b\u77e5 \u4f7f\u7528 --export_models \u53c2\u6570\u5fc5\u987b\u540c\u65f6\u4f7f\u7528--output_file\u53c2\u6570 --output_file : \u6307\u5b9a\u751f\u6210\u7684SGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b,\u8be5\u53c2\u6570\u5fc5\u987b\u4e0e --export_models \u4e00\u8d77\u4f7f\u7528\u3002 --custom_objects : Dict mapping names (strings) to custom classes or functions to be considered during model deserialization (default None). --inplace_input_buf : RAWDATA_F32_NHWC \u662f\u5426\u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf. \u4f7f\u7528\u987b\u77e5 training_input_formats \u548c input_formats \u914d\u7f6e\u4e3a RAWDATA_F32_NHWC \u4e14\u4f7f\u7528 --batch_mode \u7684 one_buf \u6a21\u5f0f\u65f6\u624d\u53ef\u4ee5\u914d\u7f6e\u6b64\u53c2\u6570\u3002 \u53ef\u9009True/False\uff0c\u9ed8\u8ba4\u4e3aTrue\u3002 True : \u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf\u3002 False : \u4fdd\u7559\u539f\u59cb\u8f93\u5165buf\u3002 3\u3001 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 SGS_converter.py keras \\ --model_file resnet50.h5 \\ --input_config input_config.ini \\ -i file.list -n resnet50.py 8.3. \u8f6c\u6362\u5e26\u6709\u7279\u6b8a\u8bbe\u5b9a\u7684\u6a21\u578b \u00b6 \u4f7f\u7528Convert\u3001Calibrator\u3001Compiler\u5de5\u5177\u751f\u6210SGS\u5404\u9636\u6bb5\u7f51\u7edc\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e\u8f6c\u6362\u6307\u4ee4\u53c2\u6570\u7684\u65b9\u5f0f\u6307\u5b9a\u6a21\u578b\u7684\u8f6c\u6362\u6a21\u5f0f\u3002\u5982\u679c\u9700\u8981\u4f7f\u7528\u4e00\u952e\u8f6c\u6362\u5de5\u5177\u5b9e\u73b0\u4e0a\u8ff0\u5de5\u5177\u7684\u540c\u7b49\u529f\u80fd\uff0c\u53ef\u4ee5\u901a\u8fc7 (1)\u5728input_config.ini\u4e2d\u914d\u7f6e\u6307\u5b9a\u53c2\u6570\uff08\u5bf9input_config.ini\u914d\u7f6e\u4fe1\u606f\u7684\u8be6\u7ec6\u8bf4\u660e\u5df2\u5728 Convert Tool:input_config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e \u4e2d\u7ed9\u51fa\uff09 (2)\u5728\u8f6c\u6362\u6307\u4ee4\u4e2d\u914d\u7f6e\u6307\u5b9a\u53c2\u6570 \u4e24\u79cd\u65b9\u5f0f\u5b9e\u73b0\uff0c\u5b9e\u73b0\u5404\u529f\u80fd\u6240\u5bf9\u5e94\u7684\u65b9\u6cd5\u5982\u4e0b\u6240\u793a\uff1a (1) \u529f\u80fd\uff1a\u6307\u5b9a\u540c\u65f6\u8fd0\u884c\u7684\u8fdb\u7a0b\u6570 \u8be5\u529f\u80fd\u5bf9\u5e94 Calibrator \u4e2d\u7684\u53ef\u9009\u53c2\u6570 --num_process \u6240\u5b9e\u73b0\u7684\u529f\u80fd\uff1b \u4e00\u952e\u8f6c\u6362\u6a21\u578b\u65f6\uff0c\u901a\u8fc7\u5728 input_config.ini \u7684[INPUT_CONFIG]\u4e2d\u914d\u7f6e num_process \u6307\u5b9a\u8fdb\u7a0b\u6570\u5b9e\u73b0\uff1a [ INPUT_CONFIG ] ; Amount of processes run at same time . num_process = 10 ; \u4f7f\u7528\u987b\u77e5 \u5982\u679c\u65e0\u8fdb\u7a0b\u6570\u8981\u6c42\uff0c\u5219\u65e0\u9700\u5728input_config.ini\u4e2d\u914d\u7f6e\u8be5\u53c2\u6570\uff0c\u5e76\u5c06\u4f7f\u7528\u9ed8\u8ba4\u503c10\u8fdb\u884c\u6a21\u578b\u8f6c\u6362\u3002 (2) \u529f\u80fd\uff1a\u9009\u62e9\u91cf\u5316\u7b49\u7ea7 \u8be5\u529f\u80fd\u5bf9\u5e94 Calibrator \u4e2d\u7684\u53ef\u9009\u53c2\u6570 --quant_level \u6240\u5b9e\u73b0\u7684\u529f\u80fd\uff1b \u4e00\u952e\u8f6c\u6362\u6a21\u578b\u65f6\uff0c\u901a\u8fc7\u5728 input_config.ini \u7684[INPUT_CONFIG]\u4e2d\u914d\u7f6e --quant_level \u6307\u5b9a\u91cf\u5316\u7b49\u7ea7\u5b9e\u73b0\uff1a [ INPUT_CONFIG ] ; choices = [ 'L1' , 'L2' , 'L3' , 'L4' , 'L5' ], ; Indicate Quantilization level . The higher the level , the slower the speed and the higher the accuracy . quant_level = L5 ; \u4f7f\u7528\u987b\u77e5 \u5982\u679c\u65e0\u91cf\u5316\u8981\u6c42\uff0c\u5219\u65e0\u9700\u5728input_config.ini\u4e2d\u914d\u7f6e\u8be5\u53c2\u6570\uff0c\u5c06\u4f7f\u7528\u9ed8\u8ba4\u503cL5\u8fdb\u884c\u6a21\u578b\u8f6c\u6362\u3002 (3) \u529f\u80fd\uff1a\u9009\u62e9\u91cf\u5316\u5de5\u5177 \u8be5\u529f\u80fd\u5bf9\u5e94 Calibrator \u4e2d\u7684 torch_calibrator\u5de5\u5177 \u6240\u5b9e\u73b0\u7684\u529f\u80fd\uff1b\u5982\u9700\u9009\u62e9\u91cf\u5316\u5de5\u5177\uff0c\u8bf7\u4f7f\u7528\u5206\u9636\u6bb5\u8f6c\u6362\u6a21\u578b\u7684\u65b9\u5f0f\u8fdb\u884c\u6a21\u578b\u8f6c\u6362\u3002 (4) \u529f\u80fd\uff1a\u9009\u62e9Batch\u6570 \u8be5\u529f\u80fd\u5bf9\u5e94 Compiler \u4e2d\u7684\u53ef\u9009\u53c2\u6570 -b, --batch \u548c --batch_mode \u6240\u5b9e\u73b0\u7684\u529f\u80fd\uff1b \u4e00\u952e\u8f6c\u6362\u6a21\u578b\u65f6\uff0c\u901a\u8fc7\u5728 input_config.ini \u7684[INPUT_CONFIG]\u4e2d\u914d\u7f6e batch \u6307\u5b9aBatch\u6570,\u914d\u7f6e batchmode \u6307\u5b9a\u591abatch\u6a21\u5f0f\u5b9e\u73b0\uff1a [ INPUT_CONFIG ] ; Expected max batch size in normal batch mode , or specific batches , comma - separated for multi - batches batch = 1 ; ; choices = [ 'n_buf' , 'one_buf' ] batchmode = one_buf ; \u4f7f\u7528\u987b\u77e5 \u5982\u679c\u65e0\u9700\u6c42\uff0c\u5219\u65e0\u9700\u5728input_config.ini\u4e2d\u914d\u7f6e\u76f8\u5173\u53c2\u6570\uff0c\u5c06\u4f7f\u7528\u9ed8\u8ba4\u503c(batch=1,batchmode=one_buf)\u8fdb\u884c\u6a21\u578b\u8f6c\u6362\u3002 (5) \u529f\u80fd\uff1a\u9009\u62e9\u6a21\u578b\u7684\u7c7b\u522b \u8be5\u529f\u80fd\u5bf9\u5e94 Compiler \u4e2d\u7684\u53ef\u9009\u53c2\u6570 -c, --category \u6240\u5b9e\u73b0\u7684\u529f\u80fd\uff1b \u4e00\u952e\u8f6c\u6362\u6a21\u578b\u65f6\u65e0\u9700\u5bf9\u8be5\u53c2\u6570\u8fdb\u884c\u914d\u7f6e\u3002 (6) \u529f\u80fd\uff1a RAWDATA_F32_NHWC \u662f\u5426\u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf. \u8be5\u529f\u80fd\u5bf9\u5e94 Compiler \u4e2d\u7684\u53ef\u9009\u53c2\u6570 --inplace_input_buf \u6240\u5b9e\u73b0\u7684\u529f\u80fd\uff1b \u4e00\u952e\u8f6c\u6362\u6a21\u578b\u65f6\uff0c\u901a\u8fc7\u5728 \u8f6c\u6362\u547d\u4ee4 \u4e2d\u914d\u7f6e\u53c2\u6570 --inplace_input_buf \u5b9e\u73b0.","title":"8.  \u4e00\u952e\u751f\u6210\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b"},{"location":"module/User_Guide/IPU230/OneClick_Generation.html#81-sgs_converter","text":"SGS_Converter \u8bf4\u660e \u5de5\u5177\u4f4d\u7f6e SGS_IPU_SDK/Scripts/ConvertTool/SGS_converter.py \u5de5\u5177\u4f5c\u7528 \u5c06\u6a21\u578b\u4e00\u952e\u8f6c\u6362\u4e3aSGS\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b \u4f7f\u7528\u987b\u77e5 \u2460 \u652f\u6301\u4ece tensorflow_graphdef \uff0c tensorflow_savemodel \uff0c keras \uff0c tflite \uff0c caffe \uff0c onnx \u516d\u79cd\u6846\u67b6\u6a21\u578b\u8f6c\u6362 \u4e0d\u540c\u6846\u67b6\u6a21\u578b\u4e00\u952e\u8f6c\u6362\u7684\u4f7f\u7528\u65b9\u6cd5 \u2461 \u9700\u914d\u7f6einput config \u4fe1\u606f \u8be6\u89c1 input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e \u4f7f\u7528\u524d\u5148\u5728SGS_IPU_SDK\u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK source cfg_env.sh","title":"8.1.   SGS_Converter\u7b80\u4ecb"},{"location":"module/User_Guide/IPU230/OneClick_Generation.html#82-sgs","text":"\u4e0b\u9762\u662fSGS_Converter\u76ee\u524d\u652f\u6301\u7684platform information\uff1a python3 SGS_converter.py -h usage : SGS_converter.py [-h] {tensorflow_graphdef,tensorflow_savemodel,keras,tflite,caffe,onnx,debug} ... Convert Tool positional arguments : {tensorflow_graphdef,tensorflow_savemodel,keras,tflite,caffe,onnx,debug} platform info tensorflow_graphdef tensorflow graphdef commands tensorflow_savemodel tensorflow save_model commands keras keras commands tflite tflite commands caffe caffe commands onnx onnx commands debug debug commands optional arguments : -h, --help show this help message and exit \u4e0d\u540c\u5e73\u53f0\u6a21\u578b\u8f6c\u6362\u4e3aSGS\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u7684\u6240\u9700\u53c2\u6570\u4fe1\u606f\u7565\u6709\u4e0d\u540c\uff0c\u5982\u679c\u60f3\u8fdb\u4e00\u6b65\u4e86\u89e3\u5404\u4e2a\u5e73\u53f0\u8f6c\u6362\u6240\u9700\u8981\u7684\u53c2\u6570\u4fe1\u606f\uff0c\u53ef\u4ee5\u6267\u884c python3 SGS_converter.py {platform} \u2013h \u8fdb\u884c\u67e5\u770b\u3002 \u4e0b\u9762\u5c06\u7b80\u5355\u4ecb\u7ecd\u5404\u4e2a\u5e73\u53f0\u8f6c\u6362\u6240\u9700\u7684\u5177\u4f53\u4fe1\u606f\u548c\u67e5\u770b\u6307\u4ee4\uff1a","title":"8.2.   \u4e0d\u540c\u6846\u67b6\u6a21\u578b\u4e00\u952e\u8f6c\u6362\u4e3aSGS\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u7684\u4f7f\u7528\u65b9\u6cd5"},{"location":"module/User_Guide/IPU230/OneClick_Generation.html#821-caffe","text":"1\u3001information\uff1a python3 SGS_converter.py caffe -h usage : SGS_converter.py caffe [-h] --model_file MODEL_FILE --weight_file WEIGHT_FILE --input_config INPUT_CONFIG -i IMAGE_FILE -n PREPROCESS [--input_shapes INPUT_SHAPES] [--output_file OUTPUT_FILE] [--export_models] optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE SavedModel directory to convert --weight_file WEIGHT_FILE Full filepath of tflite file containing the caffe -n PREPROCESS, --preprocess PREPROCESS Name of model to select image preprocess method --input_config INPUT_CONFIG Input config path. -i IMAGE_FILE, --image_file IMAGE_FILE Image / Directory containing images path / Image_list for multi_input model. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth. (default None) --output_file OUTPUT_FILE Full filepath of out Model path. --export_models export models of debug/float/cmodel_float/fix 2\u3001 \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a (1) \u5fc5\u9009\u53c2\u6570\uff1a --model_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684caffe\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 --weight_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684caffe\u6743\u91cd\u6587\u4ef6\u8def\u5f84\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\u3002 \u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 -i : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u6240\u9700\u7684\u56fe\u7247\u6587\u4ef6\u8def\u5f84\u3002 \u4f7f\u7528\u987b\u77e5 \u652f\u6301\u4f7f\u7528\u5355\u5f20\u56fe\u7247\u8def\u5f84\u8fdb\u884c\u4f20\u53c2\uff0c\u4e5f\u652f\u6301\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\uff0c\u6216\u5b58\u50a8\u56fe\u7247\u8def\u5f84\u5217\u8868\u7684\u6587\u4ef6\u3002\u4f7f\u7528\u8def\u5f84\u5217\u8868\u5f62\u5f0f\u65f6\u53ef\u53c2\u8003\u5982\u4e0b\u65b9\u5f0f\uff1a \u7f51\u7edc\u6a21\u578b\u4e3a\u5355\u8f93\u5165\u65f6\uff1a -i ~/SGS_IPU_SDK/image_test/2007000364.jpg \u7f51\u7edc\u6a21\u578b\u4e3a\u591a\u8f93\u5165\u65f6\uff1a -i /SGS_IPU_SDK/image_test/2007000364.jpg, /SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp -n : \u6307\u5b9a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4e0e\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\u76f8\u5173\u3002 \u8be6\u89c1 Calibrator:\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5 \u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a --export_models : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u65f6\u4fdd\u5b58\u5404\u4e2a\u9636\u6bb5\u7684\u6587\u4ef6\uff0c\u4e0d\u4f7f\u7528\u8be5\u53c2\u6570\u5219\u53ea\u751f\u6210\u79bb\u7ebf\u7f51\u7edc\u6587\u4ef6\u3002 \u4f7f\u7528\u987b\u77e5 \u4f7f\u7528 --export_models \u53c2\u6570\u5fc5\u987b\u540c\u65f6\u4f7f\u7528--output_file\u53c2\u6570 --output_file : \u6307\u5b9a\u751f\u6210\u7684SGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b,\u8be5\u53c2\u6570\u5fc5\u987b\u4e0e --export_models \u4e00\u8d77\u4f7f\u7528\u3002 --inplace_input_buf : RAWDATA_F32_NHWC \u662f\u5426\u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf. \u4f7f\u7528\u987b\u77e5 training_input_formats \u548c input_formats \u914d\u7f6e\u4e3a RAWDATA_F32_NHWC \u4e14\u4f7f\u7528 --batch_mode \u7684 one_buf \u6a21\u5f0f\u65f6\u624d\u53ef\u4ee5\u914d\u7f6e\u6b64\u53c2\u6570\u3002 \u53ef\u9009True/False\uff0c\u9ed8\u8ba4\u4e3aTrue\u3002 True : \u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf\u3002 False : \u4fdd\u7559\u539f\u59cb\u8f93\u5165buf\u3002 3\u3001 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 SGS_converter.py caffe \\ --model_file caffe_resnet50_conv.prototxt \\ --weight_file caffe_resnet50_conv.caffemodel \\ --input_config input_config.ini \\ -i file.list -n preprocess.py --export_models --output_file resnet50_float.sim","title":"8.2.1 caffe \u6846\u67b6\u6307\u4ee4"},{"location":"module/User_Guide/IPU230/OneClick_Generation.html#822-onnx","text":"1\u3001information\uff1a python3 SGS_converter.py onnx -h usage : SGS_converter.py onnx [-h] --model_file MODEL_FILE --input_config INPUT_CONFIG -i IMAGE_FILE -n PREPROCESS [--input_shapes INPUT_SHAPES] [--output_file OUTPUT_FILE] [--export_models] optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE SavedModel directory to convert -n PREPROCESS, --preprocess PREPROCESS Name of model to select image preprocess method --input_config INPUT_CONFIG Input config path. -i IMAGE_FILE, --image_file IMAGE_FILE Image / Directory containing images path / Image_list for multi_input model. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth. (default None) --output_file OUTPUT_FILE Full filepath of out Model path. --export_models export models of debug/float/cmodel_float/fix 2\u3001 \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a (1) \u5fc5\u9009\u53c2\u6570\uff1a --model_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684caffe\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 --input_shapes : Onnx\u6a21\u578b\u8f93\u5165shape. dimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0cshape\u4e2a\u6570\u548cinputs \u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\u3002 \u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 -i : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u6240\u9700\u7684\u56fe\u7247\u6587\u4ef6\u8def\u5f84\u3002 \u4f7f\u7528\u987b\u77e5 \u652f\u6301\u4f7f\u7528\u5355\u5f20\u56fe\u7247\u8def\u5f84\u8fdb\u884c\u4f20\u53c2\uff0c\u4e5f\u652f\u6301\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\uff0c\u6216\u5b58\u50a8\u56fe\u7247\u8def\u5f84\u5217\u8868\u7684\u6587\u4ef6\u3002\u4f7f\u7528\u8def\u5f84\u5217\u8868\u5f62\u5f0f\u65f6\u53ef\u53c2\u8003\u5982\u4e0b\u65b9\u5f0f\uff1a \u7f51\u7edc\u6a21\u578b\u4e3a\u5355\u8f93\u5165\u65f6\uff1a -i ~/SGS_IPU_SDK/image_test/2007000364.jpg \u7f51\u7edc\u6a21\u578b\u4e3a\u591a\u8f93\u5165\u65f6\uff1a -i /SGS_IPU_SDK/image_test/2007000364.jpg, /SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp -n : \u6307\u5b9a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4e0e\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\u76f8\u5173\u3002 \u8be6\u89c1 Calibrator:\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5 \u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a --export_models : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u65f6\u4fdd\u5b58\u5404\u4e2a\u9636\u6bb5\u7684\u6587\u4ef6\uff0c\u4e0d\u4f7f\u7528\u8be5\u53c2\u6570\u5219\u53ea\u751f\u6210\u79bb\u7ebf\u7f51\u7edc\u6587\u4ef6\u3002 \u4f7f\u7528\u987b\u77e5 \u4f7f\u7528 --export_models \u53c2\u6570\u5fc5\u987b\u540c\u65f6\u4f7f\u7528--output_file\u53c2\u6570 --output_file : \u6307\u5b9a\u751f\u6210\u7684SGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b,\u8be5\u53c2\u6570\u5fc5\u987b\u4e0e --export_models \u4e00\u8d77\u4f7f\u7528\u3002 --inplace_input_buf : RAWDATA_F32_NHWC \u662f\u5426\u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf. \u4f7f\u7528\u987b\u77e5 training_input_formats \u548c input_formats \u914d\u7f6e\u4e3a RAWDATA_F32_NHWC \u4e14\u4f7f\u7528 --batch_mode \u7684 one_buf \u6a21\u5f0f\u65f6\u624d\u53ef\u4ee5\u914d\u7f6e\u6b64\u53c2\u6570\u3002 \u53ef\u9009True/False\uff0c\u9ed8\u8ba4\u4e3aTrue\u3002 True : \u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf\u3002 False : \u4fdd\u7559\u539f\u59cb\u8f93\u5165buf\u3002 3\u3001 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ~/SGS_IPU_SDK/Scripts/ConvertTool/SGS_converter.py onnx --model_file ~/SGS_Models/onnx/onnx_mobilenet_v2/onnx_mobilenet_v2.onnx \\ --input_shapes 1,3,224,224 \\ --input_config ~/SGS_Models/onnx/onnx_mobilenet_v2/input_config.ini \\ -i file.list -n preprocess.py --export_models --output_file onnx_mobilenet_v2_float.sim Note 1.\u5982\u679connx\u6a21\u578b\u4e2d\u5e26\u6709\u540e\u5904\u7406\u7684\u7b97\u5b50\uff0c\u8bf7\u5148\u53bb\u9664\uff0c\u76ee\u524d\u53ea\u652f\u6301\u4e3b\u5e72\u7f51\u7edc\u7684\u8f6c\u6362\u3002\u5982\u679c\u662f\u7531\u5176\u4ed6\u6846\u67b6\u751f\u6210\u7684onnx\u6a21\u578b\uff0c\u8bf7\u52a1\u5fc5\u6ce8\u610f\u5728\u8f6c\u6362\u6a21\u578b\u65f6\u5173\u95ed\u751f\u6210\u540e\u5904\u7406\u7684\u9009\u9879\u3002","title":"8.2.2 onnx \u6846\u67b6\u6307\u4ee4"},{"location":"module/User_Guide/IPU230/OneClick_Generation.html#823-tflite","text":"1\u3001information\uff1a python3 SGS_converter.py tflite -h usage : SGS_converter.py tflite [-h] --model_file MODEL_FILE --input_config INPUT_CONFIG -i IMAGE_FILE -n PREPROCESS [--input_shapes INPUT_SHAPES] [--output_file OUTPUT_FILE] [--export_models] optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE SavedModel directory to convert -n PREPROCESS, --preprocess PREPROCESS Name of model to select image preprocess method --input_config INPUT_CONFIG Input config path. -i IMAGE_FILE, --image_file IMAGE_FILE Image / Directory containing images path / Image_list for multi_input model. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth. (default None) --output_file OUTPUT_FILE Full filepath of out Model path. --export_models export models of debug/float/cmodel_float/fix 2\u3001 \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a (1) \u5fc5\u9009\u53c2\u6570\uff1a --model_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 \u8f93\u5165\u7684\u6a21\u578b\u4e3atflite\u683c\u5f0f\u6587\u4ef6\u8def\u5f84(\u5fc5\u987b\u4e3a\u975e\u91cf\u5316\u6a21\u578b)\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\u3002 \u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 -i : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u6240\u9700\u7684\u56fe\u7247\u6587\u4ef6\u8def\u5f84\u3002 \u4f7f\u7528\u987b\u77e5 \u652f\u6301\u4f7f\u7528\u5355\u5f20\u56fe\u7247\u8def\u5f84\u8fdb\u884c\u4f20\u53c2\uff0c\u4e5f\u652f\u6301\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\uff0c\u6216\u5b58\u50a8\u56fe\u7247\u8def\u5f84\u5217\u8868\u7684\u6587\u4ef6\u3002\u4f7f\u7528\u8def\u5f84\u5217\u8868\u5f62\u5f0f\u65f6\u53ef\u53c2\u8003\u5982\u4e0b\u65b9\u5f0f\uff1a \u7f51\u7edc\u6a21\u578b\u4e3a\u5355\u8f93\u5165\u65f6\uff1a -i ~/SGS_IPU_SDK/image_test/2007000364.jpg \u7f51\u7edc\u6a21\u578b\u4e3a\u591a\u8f93\u5165\u65f6\uff1a -i /SGS_IPU_SDK/image_test/2007000364.jpg, /SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp -n : \u6307\u5b9a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4e0e\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\u76f8\u5173\u3002 \u8be6\u89c1 Calibrator:\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5 \u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a --export_models : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u65f6\u4fdd\u5b58\u5404\u4e2a\u9636\u6bb5\u7684\u6587\u4ef6\uff0c\u4e0d\u4f7f\u7528\u8be5\u53c2\u6570\u5219\u53ea\u751f\u6210\u79bb\u7ebf\u7f51\u7edc\u6587\u4ef6\u3002 \u4f7f\u7528\u987b\u77e5 \u4f7f\u7528 --export_models \u53c2\u6570\u5fc5\u987b\u540c\u65f6\u4f7f\u7528--output_file\u53c2\u6570 --output_file : \u6307\u5b9a\u751f\u6210\u7684SGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b,\u8be5\u53c2\u6570\u5fc5\u987b\u4e0e --export_models \u4e00\u8d77\u4f7f\u7528\u3002 --inplace_input_buf : RAWDATA_F32_NHWC \u662f\u5426\u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf. \u4f7f\u7528\u987b\u77e5 training_input_formats \u548c input_formats \u914d\u7f6e\u4e3a RAWDATA_F32_NHWC \u4e14\u4f7f\u7528 --batch_mode \u7684 one_buf \u6a21\u5f0f\u65f6\u624d\u53ef\u4ee5\u914d\u7f6e\u6b64\u53c2\u6570\u3002 \u53ef\u9009True/False\uff0c\u9ed8\u8ba4\u4e3aTrue\u3002 True : \u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf\u3002 False : \u4fdd\u7559\u539f\u59cb\u8f93\u5165buf\u3002 3\u3001 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 SGS_converter.py tflite \\ --model_file Debug_save_model_float.tflite \\ --input_config input_config.ini \\ -i file.list -n preprocess.py","title":"8.2.3 tflite \u6846\u67b6\u6307\u4ee4"},{"location":"module/User_Guide/IPU230/OneClick_Generation.html#824-tensorflow_graphdef","text":"1\u3001information\uff1a python3 SGS_converter.py tensorflow_graphdef -h usage : SGS_converter.py tensorflow_graphdef [-h] --model_file MODEL_FILE --input_config INPUT_CONFIG -i IMAGE_FILE -n PREPROCESS [--input_shapes INPUT_SHAPES] [--output_file OUTPUT_FILE] [--export_models] optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of file containing frozen GraphDef --input_config INPUT_CONFIG Input config path. -i IMAGE_FILE, --image_file IMAGE_FILE Image / Directory containing images path / Image_list for multi_input model. -n PREPROCESS, --preprocess PREPROCESS Name of model to select image preprocess method --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth. (default None) --output_file OUTPUT_FILE Full filepath of out Model path. --export_models export models of debug/float/cmodel_float/fix 2\u3001 \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a (1) \u5fc5\u9009\u53c2\u6570\uff1a --model_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684\u8f93\u5165\u6a21\u578b\u8def\u5f84\u3002 \u4e3aTensorFlow frozen\u7684graphdef\u7684pb\u683c\u5f0f\u6587\u4ef6\u8def\u5f84\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\u3002 \u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 --input_shapes : \u6307\u5b9a\u7f51\u7edc\u8f93\u5165Tensor\u7684shape\u3002 \u683c\u5f0f\u4e3aNHWC\uff0cdimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff1b\u9700\u6ce8\u610fshape\u4e2a\u6570\u548cinputs\u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002 -i : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u6240\u9700\u7684\u56fe\u7247\u6587\u4ef6\u8def\u5f84\u3002 \u4f7f\u7528\u987b\u77e5 \u652f\u6301\u4f7f\u7528\u5355\u5f20\u56fe\u7247\u8def\u5f84\u8fdb\u884c\u4f20\u53c2\uff0c\u4e5f\u652f\u6301\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\uff0c\u6216\u5b58\u50a8\u56fe\u7247\u8def\u5f84\u5217\u8868\u7684\u6587\u4ef6\u3002\u4f7f\u7528\u8def\u5f84\u5217\u8868\u5f62\u5f0f\u65f6\u53ef\u53c2\u8003\u5982\u4e0b\u65b9\u5f0f\uff1a \u7f51\u7edc\u6a21\u578b\u4e3a\u5355\u8f93\u5165\u65f6\uff1a -i ~/SGS_IPU_SDK/image_test/2007000364.jpg \u7f51\u7edc\u6a21\u578b\u4e3a\u591a\u8f93\u5165\u65f6\uff1a -i /SGS_IPU_SDK/image_test/2007000364.jpg, /SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp -n : \u6307\u5b9a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4e0e\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\u76f8\u5173\u3002 \u8be6\u89c1 Calibrator:\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5 \u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a --export_models : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u65f6\u4fdd\u5b58\u5404\u4e2a\u9636\u6bb5\u7684\u6587\u4ef6\uff0c\u4e0d\u4f7f\u7528\u8be5\u53c2\u6570\u5219\u53ea\u751f\u6210\u79bb\u7ebf\u7f51\u7edc\u6587\u4ef6\u3002 \u4f7f\u7528\u987b\u77e5 \u4f7f\u7528 --export_models \u53c2\u6570\u5fc5\u987b\u540c\u65f6\u4f7f\u7528--output_file\u53c2\u6570 --output_file : \u6307\u5b9a\u751f\u6210\u7684SGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b,\u8be5\u53c2\u6570\u5fc5\u987b\u4e0e --export_models \u4e00\u8d77\u4f7f\u7528\u3002 --inplace_input_buf : RAWDATA_F32_NHWC \u662f\u5426\u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf. \u4f7f\u7528\u987b\u77e5 training_input_formats \u548c input_formats \u914d\u7f6e\u4e3a RAWDATA_F32_NHWC \u4e14\u4f7f\u7528 --batch_mode \u7684 one_buf \u6a21\u5f0f\u65f6\u624d\u53ef\u4ee5\u914d\u7f6e\u6b64\u53c2\u6570\u3002 \u53ef\u9009True/False\uff0c\u9ed8\u8ba4\u4e3aTrue\u3002 True : \u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf\u3002 False : \u4fdd\u7559\u539f\u59cb\u8f93\u5165buf\u3002 3\u3001 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 SGS_converter.py tensorflow_graphdef \\ --model_file yolo_v3_7/yolo_v3_7.pb \\ --input_config input_config.ini \\ --input_shapes 1,299,299,3 \\ -i file.list -n yolo_v3_7.py","title":"8.2.4 tensorflow_graphdef \u6846\u67b6\u6307\u4ee4"},{"location":"module/User_Guide/IPU230/OneClick_Generation.html#825-tensorflow_savemodel","text":"1\u3001information\uff1a python3 SGS_converter.py tensorflow_savemodel -h usage : SGS_converter.py tensorflow_savemodel [-h] --model_file MODEL_FILE --input_config INPUT_CONFIG -i IMAGE_FILE -n PREPROCESS [--input_shapes INPUT_SHAPES] [--output_file OUTPUT_FILE] [--export_models] optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE SavedModel directory to convert -n PREPROCESS, --preprocess PREPROCESS Name of model to select image preprocess method --input_config INPUT_CONFIG Input config path. -i IMAGE_FILE, --image_file IMAGE_FILE Image / Directory containing images path / Image_list for multi_input model. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth. (default None) --output_file OUTPUT_FILE Full filepath of out Model path. --export_models export models of debug/float/cmodel_float/fix 2\u3001 \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a (1) \u5fc5\u9009\u53c2\u6570\uff1a --model_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 \u8f93\u5165\u7684\u6a21\u578b\u4e3aTensorFlow saved_model.builder\u751f\u6210\u7684\u6587\u4ef6\u8def\u5f84\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\u3002 \u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 -i : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u6240\u9700\u7684\u56fe\u7247\u6587\u4ef6\u8def\u5f84\u3002 \u4f7f\u7528\u987b\u77e5 \u652f\u6301\u4f7f\u7528\u5355\u5f20\u56fe\u7247\u8def\u5f84\u8fdb\u884c\u4f20\u53c2\uff0c\u4e5f\u652f\u6301\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\uff0c\u6216\u5b58\u50a8\u56fe\u7247\u8def\u5f84\u5217\u8868\u7684\u6587\u4ef6\u3002\u4f7f\u7528\u8def\u5f84\u5217\u8868\u5f62\u5f0f\u65f6\u53ef\u53c2\u8003\u5982\u4e0b\u65b9\u5f0f\uff1a \u7f51\u7edc\u6a21\u578b\u4e3a\u5355\u8f93\u5165\u65f6\uff1a -i ~/SGS_IPU_SDK/image_test/2007000364.jpg \u7f51\u7edc\u6a21\u578b\u4e3a\u591a\u8f93\u5165\u65f6\uff1a -i /SGS_IPU_SDK/image_test/2007000364.jpg, /SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp -n : \u6307\u5b9a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4e0e\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\u76f8\u5173\u3002 \u8be6\u89c1 Calibrator:\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5 \u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a --export_models : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u65f6\u4fdd\u5b58\u5404\u4e2a\u9636\u6bb5\u7684\u6587\u4ef6\uff0c\u4e0d\u4f7f\u7528\u8be5\u53c2\u6570\u5219\u53ea\u751f\u6210\u79bb\u7ebf\u7f51\u7edc\u6587\u4ef6\u3002 \u4f7f\u7528\u987b\u77e5 \u4f7f\u7528 --export_models \u53c2\u6570\u5fc5\u987b\u540c\u65f6\u4f7f\u7528--output_file\u53c2\u6570 --output_file : \u6307\u5b9a\u751f\u6210\u7684SGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b,\u8be5\u53c2\u6570\u5fc5\u987b\u4e0e --export_models \u4e00\u8d77\u4f7f\u7528\u3002 --input_shapes : \u7f51\u7edc\u8f93\u5165Tensor\u7684shape\u3002 \u683c\u5f0f\u4e3aNHWC\uff0cdimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0cshape\u4e2a\u6570\u548cinputs \u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002\u82e5\u4e0d\u6307\u5b9a\u5219\u4ecesaved_model_dir\u4e2d\u83b7\u53d6\u3002 --tag_set : \u9700\u8981\u548csave model\u65f6\u6240\u6307\u5b9a\u7684tag\u5339\u914d\u3002 \u5982\u679c\u4e0d\u505a\u8bbe\u5b9a\uff0c\u5219\u9ed8\u8ba4\u4e3a\u2018serve\u2019\u3002 --signature_key : \u9700\u8981\u548csave model\u65f6\u6240\u6307\u5b9a\u7684signature\u5339\u914d\u3002 \u5982\u679c\u4e0d\u505a\u8bbe\u5b9a\uff0c\u5219\u9ed8\u8ba4\u4e3a \u2018DEFAULT_SERVING_SIGNATURE_DEF_KEY\u2019 --inplace_input_buf : RAWDATA_F32_NHWC \u662f\u5426\u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf. \u4f7f\u7528\u987b\u77e5 training_input_formats \u548c input_formats \u914d\u7f6e\u4e3a RAWDATA_F32_NHWC \u4e14\u4f7f\u7528 --batch_mode \u7684 one_buf \u6a21\u5f0f\u65f6\u624d\u53ef\u4ee5\u914d\u7f6e\u6b64\u53c2\u6570\u3002 \u53ef\u9009True/False\uff0c\u9ed8\u8ba4\u4e3aTrue\u3002 True : \u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf\u3002 False : \u4fdd\u7559\u539f\u59cb\u8f93\u5165buf\u3002 3\u3001 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 SGS_converter.py tensorflow_savemodel \\ --model_file ~/test/tensorflow_model/save_model \\ --input_config input_config.ini \\ -i file.list -n preprocess.py","title":"8.2.5 tensorflow_savemodel \u6846\u67b6\u6307\u4ee4"},{"location":"module/User_Guide/IPU230/OneClick_Generation.html#826-keras","text":"1\u3001information\uff1a python3 SGS_converter.py keras -h usage : SGS_converter.py keras [-h] --model_file MODEL_FILE --input_config INPUT_CONFIG -i IMAGE_FILE -n PREPROCESS [--input_shapes INPUT_SHAPES] [--output_file OUTPUT_FILE] [--export_models] optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE SavedModel directory to convert -n PREPROCESS, --preprocess PREPROCESS Name of model to select image preprocess method --input_config INPUT_CONFIG Input config path. -i IMAGE_FILE, --image_file IMAGE_FILE Image / Directory containing images path / Image_list for multi_input model. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth. (default None) --output_file OUTPUT_FILE Full filepath of out Model path. --export_models export models of debug/float/cmodel_float/fix 2\u3001 \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a (1) \u5fc5\u9009\u53c2\u6570\uff1a --model_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 \u8f93\u5165\u7684\u6a21\u578b\u4e3akeras h5\u683c\u5f0f\u6587\u4ef6\u8def\u5f84\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\u3002 \u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 -i : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u6240\u9700\u7684\u56fe\u7247\u6587\u4ef6\u8def\u5f84\u3002 \u4f7f\u7528\u987b\u77e5 \u652f\u6301\u4f7f\u7528\u5355\u5f20\u56fe\u7247\u8def\u5f84\u8fdb\u884c\u4f20\u53c2\uff0c\u4e5f\u652f\u6301\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\uff0c\u6216\u5b58\u50a8\u56fe\u7247\u8def\u5f84\u5217\u8868\u7684\u6587\u4ef6\u3002\u4f7f\u7528\u8def\u5f84\u5217\u8868\u5f62\u5f0f\u65f6\u53ef\u53c2\u8003\u5982\u4e0b\u65b9\u5f0f\uff1a \u7f51\u7edc\u6a21\u578b\u4e3a\u5355\u8f93\u5165\u65f6\uff1a -i ~/SGS_IPU_SDK/image_test/2007000364.jpg \u7f51\u7edc\u6a21\u578b\u4e3a\u591a\u8f93\u5165\u65f6\uff1a -i /SGS_IPU_SDK/image_test/2007000364.jpg, /SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp -n : \u6307\u5b9a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4e0e\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\u76f8\u5173\u3002 \u8be6\u89c1 Calibrator:\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5 \u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a --export_models : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u65f6\u4fdd\u5b58\u5404\u4e2a\u9636\u6bb5\u7684\u6587\u4ef6\uff0c\u4e0d\u4f7f\u7528\u8be5\u53c2\u6570\u5219\u53ea\u751f\u6210\u79bb\u7ebf\u7f51\u7edc\u6587\u4ef6\u3002 \u4f7f\u7528\u987b\u77e5 \u4f7f\u7528 --export_models \u53c2\u6570\u5fc5\u987b\u540c\u65f6\u4f7f\u7528--output_file\u53c2\u6570 --output_file : \u6307\u5b9a\u751f\u6210\u7684SGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b,\u8be5\u53c2\u6570\u5fc5\u987b\u4e0e --export_models \u4e00\u8d77\u4f7f\u7528\u3002 --custom_objects : Dict mapping names (strings) to custom classes or functions to be considered during model deserialization (default None). --inplace_input_buf : RAWDATA_F32_NHWC \u662f\u5426\u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf. \u4f7f\u7528\u987b\u77e5 training_input_formats \u548c input_formats \u914d\u7f6e\u4e3a RAWDATA_F32_NHWC \u4e14\u4f7f\u7528 --batch_mode \u7684 one_buf \u6a21\u5f0f\u65f6\u624d\u53ef\u4ee5\u914d\u7f6e\u6b64\u53c2\u6570\u3002 \u53ef\u9009True/False\uff0c\u9ed8\u8ba4\u4e3aTrue\u3002 True : \u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf\u3002 False : \u4fdd\u7559\u539f\u59cb\u8f93\u5165buf\u3002 3\u3001 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 SGS_converter.py keras \\ --model_file resnet50.h5 \\ --input_config input_config.ini \\ -i file.list -n resnet50.py","title":"8.2.6 keras \u6846\u67b6\u6307\u4ee4"},{"location":"module/User_Guide/IPU230/OneClick_Generation.html#83","text":"\u4f7f\u7528Convert\u3001Calibrator\u3001Compiler\u5de5\u5177\u751f\u6210SGS\u5404\u9636\u6bb5\u7f51\u7edc\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e\u8f6c\u6362\u6307\u4ee4\u53c2\u6570\u7684\u65b9\u5f0f\u6307\u5b9a\u6a21\u578b\u7684\u8f6c\u6362\u6a21\u5f0f\u3002\u5982\u679c\u9700\u8981\u4f7f\u7528\u4e00\u952e\u8f6c\u6362\u5de5\u5177\u5b9e\u73b0\u4e0a\u8ff0\u5de5\u5177\u7684\u540c\u7b49\u529f\u80fd\uff0c\u53ef\u4ee5\u901a\u8fc7 (1)\u5728input_config.ini\u4e2d\u914d\u7f6e\u6307\u5b9a\u53c2\u6570\uff08\u5bf9input_config.ini\u914d\u7f6e\u4fe1\u606f\u7684\u8be6\u7ec6\u8bf4\u660e\u5df2\u5728 Convert Tool:input_config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e \u4e2d\u7ed9\u51fa\uff09 (2)\u5728\u8f6c\u6362\u6307\u4ee4\u4e2d\u914d\u7f6e\u6307\u5b9a\u53c2\u6570 \u4e24\u79cd\u65b9\u5f0f\u5b9e\u73b0\uff0c\u5b9e\u73b0\u5404\u529f\u80fd\u6240\u5bf9\u5e94\u7684\u65b9\u6cd5\u5982\u4e0b\u6240\u793a\uff1a (1) \u529f\u80fd\uff1a\u6307\u5b9a\u540c\u65f6\u8fd0\u884c\u7684\u8fdb\u7a0b\u6570 \u8be5\u529f\u80fd\u5bf9\u5e94 Calibrator \u4e2d\u7684\u53ef\u9009\u53c2\u6570 --num_process \u6240\u5b9e\u73b0\u7684\u529f\u80fd\uff1b \u4e00\u952e\u8f6c\u6362\u6a21\u578b\u65f6\uff0c\u901a\u8fc7\u5728 input_config.ini \u7684[INPUT_CONFIG]\u4e2d\u914d\u7f6e num_process \u6307\u5b9a\u8fdb\u7a0b\u6570\u5b9e\u73b0\uff1a [ INPUT_CONFIG ] ; Amount of processes run at same time . num_process = 10 ; \u4f7f\u7528\u987b\u77e5 \u5982\u679c\u65e0\u8fdb\u7a0b\u6570\u8981\u6c42\uff0c\u5219\u65e0\u9700\u5728input_config.ini\u4e2d\u914d\u7f6e\u8be5\u53c2\u6570\uff0c\u5e76\u5c06\u4f7f\u7528\u9ed8\u8ba4\u503c10\u8fdb\u884c\u6a21\u578b\u8f6c\u6362\u3002 (2) \u529f\u80fd\uff1a\u9009\u62e9\u91cf\u5316\u7b49\u7ea7 \u8be5\u529f\u80fd\u5bf9\u5e94 Calibrator \u4e2d\u7684\u53ef\u9009\u53c2\u6570 --quant_level \u6240\u5b9e\u73b0\u7684\u529f\u80fd\uff1b \u4e00\u952e\u8f6c\u6362\u6a21\u578b\u65f6\uff0c\u901a\u8fc7\u5728 input_config.ini \u7684[INPUT_CONFIG]\u4e2d\u914d\u7f6e --quant_level \u6307\u5b9a\u91cf\u5316\u7b49\u7ea7\u5b9e\u73b0\uff1a [ INPUT_CONFIG ] ; choices = [ 'L1' , 'L2' , 'L3' , 'L4' , 'L5' ], ; Indicate Quantilization level . The higher the level , the slower the speed and the higher the accuracy . quant_level = L5 ; \u4f7f\u7528\u987b\u77e5 \u5982\u679c\u65e0\u91cf\u5316\u8981\u6c42\uff0c\u5219\u65e0\u9700\u5728input_config.ini\u4e2d\u914d\u7f6e\u8be5\u53c2\u6570\uff0c\u5c06\u4f7f\u7528\u9ed8\u8ba4\u503cL5\u8fdb\u884c\u6a21\u578b\u8f6c\u6362\u3002 (3) \u529f\u80fd\uff1a\u9009\u62e9\u91cf\u5316\u5de5\u5177 \u8be5\u529f\u80fd\u5bf9\u5e94 Calibrator \u4e2d\u7684 torch_calibrator\u5de5\u5177 \u6240\u5b9e\u73b0\u7684\u529f\u80fd\uff1b\u5982\u9700\u9009\u62e9\u91cf\u5316\u5de5\u5177\uff0c\u8bf7\u4f7f\u7528\u5206\u9636\u6bb5\u8f6c\u6362\u6a21\u578b\u7684\u65b9\u5f0f\u8fdb\u884c\u6a21\u578b\u8f6c\u6362\u3002 (4) \u529f\u80fd\uff1a\u9009\u62e9Batch\u6570 \u8be5\u529f\u80fd\u5bf9\u5e94 Compiler \u4e2d\u7684\u53ef\u9009\u53c2\u6570 -b, --batch \u548c --batch_mode \u6240\u5b9e\u73b0\u7684\u529f\u80fd\uff1b \u4e00\u952e\u8f6c\u6362\u6a21\u578b\u65f6\uff0c\u901a\u8fc7\u5728 input_config.ini \u7684[INPUT_CONFIG]\u4e2d\u914d\u7f6e batch \u6307\u5b9aBatch\u6570,\u914d\u7f6e batchmode \u6307\u5b9a\u591abatch\u6a21\u5f0f\u5b9e\u73b0\uff1a [ INPUT_CONFIG ] ; Expected max batch size in normal batch mode , or specific batches , comma - separated for multi - batches batch = 1 ; ; choices = [ 'n_buf' , 'one_buf' ] batchmode = one_buf ; \u4f7f\u7528\u987b\u77e5 \u5982\u679c\u65e0\u9700\u6c42\uff0c\u5219\u65e0\u9700\u5728input_config.ini\u4e2d\u914d\u7f6e\u76f8\u5173\u53c2\u6570\uff0c\u5c06\u4f7f\u7528\u9ed8\u8ba4\u503c(batch=1,batchmode=one_buf)\u8fdb\u884c\u6a21\u578b\u8f6c\u6362\u3002 (5) \u529f\u80fd\uff1a\u9009\u62e9\u6a21\u578b\u7684\u7c7b\u522b \u8be5\u529f\u80fd\u5bf9\u5e94 Compiler \u4e2d\u7684\u53ef\u9009\u53c2\u6570 -c, --category \u6240\u5b9e\u73b0\u7684\u529f\u80fd\uff1b \u4e00\u952e\u8f6c\u6362\u6a21\u578b\u65f6\u65e0\u9700\u5bf9\u8be5\u53c2\u6570\u8fdb\u884c\u914d\u7f6e\u3002 (6) \u529f\u80fd\uff1a RAWDATA_F32_NHWC \u662f\u5426\u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf. \u8be5\u529f\u80fd\u5bf9\u5e94 Compiler \u4e2d\u7684\u53ef\u9009\u53c2\u6570 --inplace_input_buf \u6240\u5b9e\u73b0\u7684\u529f\u80fd\uff1b \u4e00\u952e\u8f6c\u6362\u6a21\u578b\u65f6\uff0c\u901a\u8fc7\u5728 \u8f6c\u6362\u547d\u4ee4 \u4e2d\u914d\u7f6e\u53c2\u6570 --inplace_input_buf \u5b9e\u73b0.","title":"8.3. \u8f6c\u6362\u5e26\u6709\u7279\u6b8a\u8bbe\u5b9a\u7684\u6a21\u578b"},{"location":"module/User_Guide/IPU230/Preprocess.py_and_Input_Config.ini_Support.html","text":"\u6839\u636einput_config.ini\u6587\u4ef6\u4e2dtraining_input_formats \u548c input_formats\u8bbe\u7f6e\u7684\u4e0d\u540c\uff0c\u4e0b\u9762\u4e3e\u4f8b\u524d\u5904\u7406\u6587\u4ef6\u7684\u5199\u6cd5: \u524d\u5904\u7406 training_input_formats\u548cinput_formats\u5747\u4e3aRGB\u6216\u8005\u5747\u4e3aBGR training_input_formats\u548cinput_formats\u5747\u4e3aRGB\u6216\u8005\u5747\u4e3aBGR training_input_formats\u4e3aRGB\u6216BGR\u6216GRAY\u548cinput_formats\u4e3aYUV_NV12 training_input_formats\u548cinput_formats\u5747\u4e3aRAWDATA_S16_NHWC\u6216\u8005\u5747\u4e3aRAWDATA_F32_NHWC input_config.ini\u914d\u7f6e\u8981\u70b9 \u8bf7\u53c2\u8003 Convert: \u8f93\u5165\u8f93\u51fa\u914d\u7f6e\u603b\u7ed3 1.1. training_input_formats\u548cinput_formats\u5747\u4e3aRGB\u6216\u8005\u5747\u4e3aBGR \u00b6 (1) input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e training_input_formats input_formats \u677f\u4e0a\u8fd0\u884c\u65f6\u6570\u636e\u5bf9\u9f50\u65b9\u5f0f RGB/BGR RGB/BGR \u4e0d\u7528\u5bf9\u9f50 RGB/BGR RGBA/BGRA \u4e0d\u7528\u5bf9\u9f50 (2) \u524d\u5904\u7406\u811a\u672c\u793a\u4f8b import cv2 import numpy as np def get_image ( img_path , resizeH = 224 , resizeW = 224 , norm = True , meanB = 103.53 , meanG = 116.28 , meanR = 123.68 , std = 57.375 , rgb = False , nchw = False ): img = cv2 . imread ( img_path ) if img is None : raise FileNotFoundError ( 'No such image: {} ' . format ( img_path )) img_norm = cv2 . resize ( img , ( resizeW , resizeH ), interpolation = cv2 . INTER_LINEAR ) if norm : img_norm = ( img_norm - [ meanB , meanG , meanR ]) / std img_norm = img_norm . astype ( 'float32' ) else : img_norm = np . round ( img_norm ) . astype ( 'uint8' ) if rgb : img_norm = cv2 . cvtColor ( img_norm , cv2 . COLOR_BGR2RGB ) if nchw : img_norm = np . transpose ( img_norm , axes = ( 2 , 0 , 1 )) return np . expand_dims ( img_norm , 0 ) def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm ) Note \u793a\u4f8b\u4e2d\u6bcf\u4e2achannel\u4e0a\u6709\u76f8\u540c\u7684std\u503c\uff0c\u6545\u53c2\u6570\u53ea\u7ed9\u4e86\u4e00\u4e2a\u503c\uff0c\u5982\u679c\u5728\u6bcf\u4e2achannel\u4e0a\u6709\u4e0d\u540c\u7684std\u503c\uff0c\u9700\u8981\u5728\u5bf9\u5e94channel\u4e0a\u9664\u4ee5std\uff0c\u53c2\u6570\u5e94\u7ed9 std= [57.375, 57.12, 58.395]\u3002 input_config.ini\u6587\u4ef6\u4e2dmean\u6bcf\u4e2a\u901a\u9053\u5bf9\u5e94\u7684std_value\u503c\uff0c\u4ee5\u82f1\u6587\u5192\u53f7( : )\u5206\u9694\uff0c\u987a\u5e8f\u4e3aRGB\u3002 1.2. training_input_formats\u4e3aGRAY\u548cinput_formats\u4e3aGRAY \u00b6 (1) input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e training_input_formats input_formats \u677f\u4e0a\u8fd0\u884c\u65f6\u6570\u636e\u5bf9\u9f50\u65b9\u5f0f GRAY GRAY H = ALIGN_UP(H, yuv420_v_pitch_alignment ) input_height_alignment\u9ed8\u8ba4\u4e3a1 W = ALIGN_UP(W, yuv420_h_pitch_alignment ) input_width_alignment\u9ed8\u8ba4\u4e3a1 (2) \u524d\u5904\u7406\u811a\u672c\u793a\u4f8b import cv2 import numpy as np def get_image ( img_path , resizeH = 28 , resizeW = 28 , norm = True , meanR = 33.318 , std = 1.0 , rgb = False , nchw = False ): img = cv2 . imread ( img_path , flags =- 1 ) if img is None : raise FileNotFoundError ( 'No such image: {} ' . format ( img_path )) try : img_dim = img . shape [ 2 ] except IndexError : img_dim = 1 if img_dim == 3 : img = cv2 . cvtColor ( img , cv2 . COLOR_BGR2GRAY ) elif img_dim == 4 : img = cv2 . cvtColor ( img , cv2 . COLOR_BGRA2GRAY ) img_norm = cv2 . resize ( img , ( resizeW , resizeH ), interpolation = cv2 . INTER_LINEAR ) if norm : img_norm = ( img_norm - meanR ) / std img_norm = np . expand_dims ( img_norm , axis = 2 ) img_norm = img_norm . astype ( 'float32' ) else : img_norm = np . expand_dims ( img_norm , axis = 2 ) img_norm = np . round ( img_norm ) . astype ( 'uint8' ) if rgb : img_norm = cv2 . cvtColor ( img_norm , cv2 . COLOR_BGR2RGB ) if nchw : # NCHW img_norm = np . transpose ( img_norm , axes = ( 2 , 0 , 1 )) return np . expand_dims ( img_norm , 0 ) def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm ) Note \u7070\u5ea6\u6a21\u578b\uff0c\u6307\u8f93\u5165\u662f\u5355\u901a\u9053\u56fe\u7247\u7684\u6a21\u578b\uff0c\u5373\u8f93\u5165C\u7ef4\u5ea6\u4e0a\u4e3a1\u7684\u6a21\u578b\u3002 1.3. training_input_formats\u4e3aRGB\u6216BGR\u6216GRAY\u548cinput_formats\u4e3aYUV_NV12 \u00b6 (1) input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e training_input_formats input_formats \u677f\u4e0a\u8fd0\u884c\u65f6\u6570\u636e\u5bf9\u9f50\u65b9\u5f0f RGB/BGR/GRAY YUV_NV12 H = ALIGN_UP(H, yuv420_v_pitch_alignment ) input_height_alignment\u9ed8\u8ba4\u4e3a2 W = ALIGN_UP(W, yuv420_h_pitch_alignment ) input_width_alignment\u9ed8\u8ba4\u4e3a2 (2) \u524d\u5904\u7406\u811a\u672c\u793a\u4f8b import cv2 import numpy as np def get_image ( img_path , resizeH = 224 , resizeW = 224 , norm = True , meanB = 127.5 , meanG = 127.5 , meanR = 127.5 , std = 128.0 , rgb = False , nchw = False ): img = cv2 . imread ( img_path ) if img is None : raise FileNotFoundError ( 'No such image: {} ' . format ( img_path )) img_norm = cv2 . resize ( img , ( resizeW , resizeH ), interpolation = cv2 . INTER_LINEAR ) if norm : img_norm = ( img_norm - [ meanB , meanG , meanR ]) / std img_norm = img_norm . astype ( 'float32' ) else : img_norm = np . round ( img_norm ) . astype ( 'uint8' ) if rgb : img_norm = cv2 . cvtColor ( img_norm , cv2 . COLOR_BGR2RGB ) if nchw : img_norm = np . transpose ( img_norm , axes = ( 2 , 0 , 1 )) return np . expand_dims ( img_norm , 0 ) def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm ) 1.4. training_input_formats\u548cinput_formats\u5747\u4e3aRAWDATA_S16_NHWC\u6216\u8005\u5747\u4e3aRAWDATA_F32_NHWC \u00b6 1.4.1. training_input_formats\u548cinput_formats\u5747\u4e3aRAWDATA_S16_NHWC \u00b6 (1) input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e training_input_formats input_formats \u677f\u4e0a\u8fd0\u884c\u65f6\u6570\u636e\u5bf9\u9f50\u65b9\u5f0f RAWDATA_S16_NHWC RAWDATA_S16_NHWC \u4e0d\u7528\u5bf9\u9f50 (2) \u524d\u5904\u7406\u811a\u672c\u793a\u4f8b import cv2 import numpy as np def get_image ( img_path , resizeH = 224 , resizeW = 224 , norm = True , rgb = False , nchw = False ): img = cv2 . imread ( img_path ) if img is None : raise FileNotFoundError ( 'No such image: {} ' . format ( img_path )) img_norm = cv2 . resize ( img , ( resizeW , resizeH ), interpolation = cv2 . INTER_LINEAR ) img_norm = img_norm . astype ( 'float32' ) if rgb : img_norm = cv2 . cvtColor ( img_norm , cv2 . COLOR_BGR2RGB ) if nchw : img_norm = np . transpose ( img_norm , axes = ( 2 , 0 , 1 )) return np . expand_dims ( img_norm , 0 ) def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm ) Note \u8bf7\u4e0d\u8981\u8bbe\u7f6einput_config.ini\u4e2d\u7684mean_red\u3001mean_green\u3001mean_blue\u548cstd_value\u53c2\u6570\u503c\uff0c\u56e0\u4e3a\u4e0d\u9700\u8981\u524d\u5904\u7406\u4e2d\u7684\u5f52\u4e00\u5316\u64cd\u4f5c\u3002 \u7f16\u5199\u56fe\u7247\u5904\u7406\u51fd\u6570\u65f6(\u5982\u793a\u4f8b\u4e2d\u7684def get_image(\u2026\u2026))\uff0c\u7531\u4e8e\u8be5\u51fd\u6570\u5fc5\u987b\u5305\u542b\u5f52\u4e00\u5316\u6807\u8bb0(norm),\u6545\u53ea\u9700\u6784\u9020\u51fd\u6570\u65f6\u58f0\u660enorm=True\u5373\u53ef\uff0c\u51fd\u6570\u4e2d\u65e0\u9700\u5b9e\u73b0norm\u4e3aTrue\u6216false\u7684\u64cd\u4f5c\u3002 \u4f7f\u7528simulator\u5de5\u5177\u65f6\uff0c\u4f1a\u8bfb\u5165\u539f\u6d6e\u70b9\u6570\u636e\uff0c\u8fdb\u884c\u53cd\u91cf\u5316\u548c\u5bf9\u9f50\u6392\u5217\u540e\u8f93\u5165\u7ed9\u5b9a\u70b9\u6a21\u578b\u3002 \u5728\u677f\u4e0a\u8fd0\u884cRAWDATA_S16_NHWC\u7684\u7f51\u7edc\u65f6\uff0c\u4e0d\u9700\u8981\u8f93\u5165\u6570\u636e\u7684\u5b9a\u70b9\u5316\u548c\u5bf9\u9f50\u6392\u5217\u8fc7\u7a0b\u3002 1.4.2. training_input_formats\u548cinput_formats\u5747\u4e3aRAWDATA_F32_NHWC \u00b6 (1) input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e training_input_formats input_formats \u677f\u4e0a\u8fd0\u884c\u65f6\u6570\u636e\u5bf9\u9f50\u65b9\u5f0f RAWDATA_F32_NHWC RAWDATA_F32_NHWC \u4e0d\u7528\u5bf9\u9f50 (2) \u524d\u5904\u7406\u811a\u672c\u793a\u4f8b import cv2 import numpy as np def get_image ( img_path , resizeH = 224 , resizeW = 224 , norm = True , rgb = False , nchw = False ): img = cv2 . imread ( img_path ) if img is None : raise FileNotFoundError ( 'No such image: {} ' . format ( img_path )) img_norm = cv2 . resize ( img , ( resizeW , resizeH ), interpolation = cv2 . INTER_LINEAR ) img_norm = img_norm . astype ( 'float32' ) if rgb : img_norm = cv2 . cvtColor ( img_norm , cv2 . COLOR_BGR2RGB ) if nchw : img_norm = np . transpose ( img_norm , axes = ( 2 , 0 , 1 )) return np . expand_dims ( img_norm , 0 ) def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm ) Note \u8bf7\u4e0d\u8981\u8bbe\u7f6einput_config.ini\u4e2d\u7684mean_red\u3001mean_green\u3001mean_blue\u548cstd_value\u53c2\u6570\u503c\uff0c\u56e0\u4e3a\u4e0d\u9700\u8981\u524d\u5904\u7406\u4e2d\u7684\u5f52\u4e00\u5316\u64cd\u4f5c\u3002 \u7f16\u5199\u56fe\u7247\u5904\u7406\u51fd\u6570\u65f6(\u5982\u793a\u4f8b\u4e2d\u7684def get_image(\u2026\u2026))\uff0c\u7531\u4e8e\u8be5\u51fd\u6570\u5fc5\u987b\u5305\u542b\u5f52\u4e00\u5316\u6807\u8bb0(norm),\u6545\u53ea\u9700\u6784\u9020\u51fd\u6570\u65f6\u58f0\u660enorm=True\u5373\u53ef\uff0c\u51fd\u6570\u4e2d\u65e0\u9700\u5b9e\u73b0norm\u4e3aTrue\u6216false\u7684\u64cd\u4f5c\u3002 \u4f7f\u7528simulator\u5de5\u5177\u65f6\uff0csimulator.py\u4f1a\u8bfb\u5165\u539f\u6d6e\u70b9\u6570\u636e\uff0c\u7531\u6a21\u578b\u5185\u90e8\u7684align\u7b97\u5b50\u81ea\u52a8\u5bf9\u9f50\u6570\u636e\uff0c\u4e0d\u9700\u8981\u4eba\u4e3a\u64cd\u4f5c\u3002 \u5728\u677f\u4e0a\u8fd0\u884cRAWDATA_F32_NHWC\u7684\u7f51\u7edc\u65f6\uff0c\u4e0d\u9700\u8981\u8f93\u5165\u6570\u636e\u7684\u5b9a\u70b9\u5316\u548c\u5bf9\u9f50\u6392\u5217\u8fc7\u7a0b\u3002 \u7279\u6b8a\u6a21\u578b\u8f6c\u6362\u8981\u70b9\uff1aRAWDATA_F32_NHWC\u6a21\u578b\u8f6c\u6362\u8981\u70b9","title":"\u9644\u5f55\u2162. \u524d\u5904\u7406\u548c\u914d\u7f6e\u6587\u4ef6\u6ce8\u610f\u8981\u70b9"},{"location":"module/User_Guide/IPU230/Preprocess.py_and_Input_Config.ini_Support.html#11-training_input_formatsinput_formatsrgbbgr","text":"(1) input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e training_input_formats input_formats \u677f\u4e0a\u8fd0\u884c\u65f6\u6570\u636e\u5bf9\u9f50\u65b9\u5f0f RGB/BGR RGB/BGR \u4e0d\u7528\u5bf9\u9f50 RGB/BGR RGBA/BGRA \u4e0d\u7528\u5bf9\u9f50 (2) \u524d\u5904\u7406\u811a\u672c\u793a\u4f8b import cv2 import numpy as np def get_image ( img_path , resizeH = 224 , resizeW = 224 , norm = True , meanB = 103.53 , meanG = 116.28 , meanR = 123.68 , std = 57.375 , rgb = False , nchw = False ): img = cv2 . imread ( img_path ) if img is None : raise FileNotFoundError ( 'No such image: {} ' . format ( img_path )) img_norm = cv2 . resize ( img , ( resizeW , resizeH ), interpolation = cv2 . INTER_LINEAR ) if norm : img_norm = ( img_norm - [ meanB , meanG , meanR ]) / std img_norm = img_norm . astype ( 'float32' ) else : img_norm = np . round ( img_norm ) . astype ( 'uint8' ) if rgb : img_norm = cv2 . cvtColor ( img_norm , cv2 . COLOR_BGR2RGB ) if nchw : img_norm = np . transpose ( img_norm , axes = ( 2 , 0 , 1 )) return np . expand_dims ( img_norm , 0 ) def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm ) Note \u793a\u4f8b\u4e2d\u6bcf\u4e2achannel\u4e0a\u6709\u76f8\u540c\u7684std\u503c\uff0c\u6545\u53c2\u6570\u53ea\u7ed9\u4e86\u4e00\u4e2a\u503c\uff0c\u5982\u679c\u5728\u6bcf\u4e2achannel\u4e0a\u6709\u4e0d\u540c\u7684std\u503c\uff0c\u9700\u8981\u5728\u5bf9\u5e94channel\u4e0a\u9664\u4ee5std\uff0c\u53c2\u6570\u5e94\u7ed9 std= [57.375, 57.12, 58.395]\u3002 input_config.ini\u6587\u4ef6\u4e2dmean\u6bcf\u4e2a\u901a\u9053\u5bf9\u5e94\u7684std_value\u503c\uff0c\u4ee5\u82f1\u6587\u5192\u53f7( : )\u5206\u9694\uff0c\u987a\u5e8f\u4e3aRGB\u3002","title":"1.1. training_input_formats\u548cinput_formats\u5747\u4e3aRGB\u6216\u8005\u5747\u4e3aBGR"},{"location":"module/User_Guide/IPU230/Preprocess.py_and_Input_Config.ini_Support.html#12-training_input_formatsgrayinput_formatsgray","text":"(1) input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e training_input_formats input_formats \u677f\u4e0a\u8fd0\u884c\u65f6\u6570\u636e\u5bf9\u9f50\u65b9\u5f0f GRAY GRAY H = ALIGN_UP(H, yuv420_v_pitch_alignment ) input_height_alignment\u9ed8\u8ba4\u4e3a1 W = ALIGN_UP(W, yuv420_h_pitch_alignment ) input_width_alignment\u9ed8\u8ba4\u4e3a1 (2) \u524d\u5904\u7406\u811a\u672c\u793a\u4f8b import cv2 import numpy as np def get_image ( img_path , resizeH = 28 , resizeW = 28 , norm = True , meanR = 33.318 , std = 1.0 , rgb = False , nchw = False ): img = cv2 . imread ( img_path , flags =- 1 ) if img is None : raise FileNotFoundError ( 'No such image: {} ' . format ( img_path )) try : img_dim = img . shape [ 2 ] except IndexError : img_dim = 1 if img_dim == 3 : img = cv2 . cvtColor ( img , cv2 . COLOR_BGR2GRAY ) elif img_dim == 4 : img = cv2 . cvtColor ( img , cv2 . COLOR_BGRA2GRAY ) img_norm = cv2 . resize ( img , ( resizeW , resizeH ), interpolation = cv2 . INTER_LINEAR ) if norm : img_norm = ( img_norm - meanR ) / std img_norm = np . expand_dims ( img_norm , axis = 2 ) img_norm = img_norm . astype ( 'float32' ) else : img_norm = np . expand_dims ( img_norm , axis = 2 ) img_norm = np . round ( img_norm ) . astype ( 'uint8' ) if rgb : img_norm = cv2 . cvtColor ( img_norm , cv2 . COLOR_BGR2RGB ) if nchw : # NCHW img_norm = np . transpose ( img_norm , axes = ( 2 , 0 , 1 )) return np . expand_dims ( img_norm , 0 ) def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm ) Note \u7070\u5ea6\u6a21\u578b\uff0c\u6307\u8f93\u5165\u662f\u5355\u901a\u9053\u56fe\u7247\u7684\u6a21\u578b\uff0c\u5373\u8f93\u5165C\u7ef4\u5ea6\u4e0a\u4e3a1\u7684\u6a21\u578b\u3002","title":"1.2. training_input_formats\u4e3aGRAY\u548cinput_formats\u4e3aGRAY"},{"location":"module/User_Guide/IPU230/Preprocess.py_and_Input_Config.ini_Support.html#13-training_input_formatsrgbbgrgrayinput_formatsyuv_nv12","text":"(1) input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e training_input_formats input_formats \u677f\u4e0a\u8fd0\u884c\u65f6\u6570\u636e\u5bf9\u9f50\u65b9\u5f0f RGB/BGR/GRAY YUV_NV12 H = ALIGN_UP(H, yuv420_v_pitch_alignment ) input_height_alignment\u9ed8\u8ba4\u4e3a2 W = ALIGN_UP(W, yuv420_h_pitch_alignment ) input_width_alignment\u9ed8\u8ba4\u4e3a2 (2) \u524d\u5904\u7406\u811a\u672c\u793a\u4f8b import cv2 import numpy as np def get_image ( img_path , resizeH = 224 , resizeW = 224 , norm = True , meanB = 127.5 , meanG = 127.5 , meanR = 127.5 , std = 128.0 , rgb = False , nchw = False ): img = cv2 . imread ( img_path ) if img is None : raise FileNotFoundError ( 'No such image: {} ' . format ( img_path )) img_norm = cv2 . resize ( img , ( resizeW , resizeH ), interpolation = cv2 . INTER_LINEAR ) if norm : img_norm = ( img_norm - [ meanB , meanG , meanR ]) / std img_norm = img_norm . astype ( 'float32' ) else : img_norm = np . round ( img_norm ) . astype ( 'uint8' ) if rgb : img_norm = cv2 . cvtColor ( img_norm , cv2 . COLOR_BGR2RGB ) if nchw : img_norm = np . transpose ( img_norm , axes = ( 2 , 0 , 1 )) return np . expand_dims ( img_norm , 0 ) def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm )","title":"1.3. training_input_formats\u4e3aRGB\u6216BGR\u6216GRAY\u548cinput_formats\u4e3aYUV_NV12"},{"location":"module/User_Guide/IPU230/Preprocess.py_and_Input_Config.ini_Support.html#14-training_input_formatsinput_formatsrawdata_s16_nhwcrawdata_f32_nhwc","text":"","title":"1.4. training_input_formats\u548cinput_formats\u5747\u4e3aRAWDATA_S16_NHWC\u6216\u8005\u5747\u4e3aRAWDATA_F32_NHWC"},{"location":"module/User_Guide/IPU230/Preprocess.py_and_Input_Config.ini_Support.html#141-training_input_formatsinput_formatsrawdata_s16_nhwc","text":"(1) input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e training_input_formats input_formats \u677f\u4e0a\u8fd0\u884c\u65f6\u6570\u636e\u5bf9\u9f50\u65b9\u5f0f RAWDATA_S16_NHWC RAWDATA_S16_NHWC \u4e0d\u7528\u5bf9\u9f50 (2) \u524d\u5904\u7406\u811a\u672c\u793a\u4f8b import cv2 import numpy as np def get_image ( img_path , resizeH = 224 , resizeW = 224 , norm = True , rgb = False , nchw = False ): img = cv2 . imread ( img_path ) if img is None : raise FileNotFoundError ( 'No such image: {} ' . format ( img_path )) img_norm = cv2 . resize ( img , ( resizeW , resizeH ), interpolation = cv2 . INTER_LINEAR ) img_norm = img_norm . astype ( 'float32' ) if rgb : img_norm = cv2 . cvtColor ( img_norm , cv2 . COLOR_BGR2RGB ) if nchw : img_norm = np . transpose ( img_norm , axes = ( 2 , 0 , 1 )) return np . expand_dims ( img_norm , 0 ) def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm ) Note \u8bf7\u4e0d\u8981\u8bbe\u7f6einput_config.ini\u4e2d\u7684mean_red\u3001mean_green\u3001mean_blue\u548cstd_value\u53c2\u6570\u503c\uff0c\u56e0\u4e3a\u4e0d\u9700\u8981\u524d\u5904\u7406\u4e2d\u7684\u5f52\u4e00\u5316\u64cd\u4f5c\u3002 \u7f16\u5199\u56fe\u7247\u5904\u7406\u51fd\u6570\u65f6(\u5982\u793a\u4f8b\u4e2d\u7684def get_image(\u2026\u2026))\uff0c\u7531\u4e8e\u8be5\u51fd\u6570\u5fc5\u987b\u5305\u542b\u5f52\u4e00\u5316\u6807\u8bb0(norm),\u6545\u53ea\u9700\u6784\u9020\u51fd\u6570\u65f6\u58f0\u660enorm=True\u5373\u53ef\uff0c\u51fd\u6570\u4e2d\u65e0\u9700\u5b9e\u73b0norm\u4e3aTrue\u6216false\u7684\u64cd\u4f5c\u3002 \u4f7f\u7528simulator\u5de5\u5177\u65f6\uff0c\u4f1a\u8bfb\u5165\u539f\u6d6e\u70b9\u6570\u636e\uff0c\u8fdb\u884c\u53cd\u91cf\u5316\u548c\u5bf9\u9f50\u6392\u5217\u540e\u8f93\u5165\u7ed9\u5b9a\u70b9\u6a21\u578b\u3002 \u5728\u677f\u4e0a\u8fd0\u884cRAWDATA_S16_NHWC\u7684\u7f51\u7edc\u65f6\uff0c\u4e0d\u9700\u8981\u8f93\u5165\u6570\u636e\u7684\u5b9a\u70b9\u5316\u548c\u5bf9\u9f50\u6392\u5217\u8fc7\u7a0b\u3002","title":"1.4.1. training_input_formats\u548cinput_formats\u5747\u4e3aRAWDATA_S16_NHWC"},{"location":"module/User_Guide/IPU230/Preprocess.py_and_Input_Config.ini_Support.html#142-training_input_formatsinput_formatsrawdata_f32_nhwc","text":"(1) input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e training_input_formats input_formats \u677f\u4e0a\u8fd0\u884c\u65f6\u6570\u636e\u5bf9\u9f50\u65b9\u5f0f RAWDATA_F32_NHWC RAWDATA_F32_NHWC \u4e0d\u7528\u5bf9\u9f50 (2) \u524d\u5904\u7406\u811a\u672c\u793a\u4f8b import cv2 import numpy as np def get_image ( img_path , resizeH = 224 , resizeW = 224 , norm = True , rgb = False , nchw = False ): img = cv2 . imread ( img_path ) if img is None : raise FileNotFoundError ( 'No such image: {} ' . format ( img_path )) img_norm = cv2 . resize ( img , ( resizeW , resizeH ), interpolation = cv2 . INTER_LINEAR ) img_norm = img_norm . astype ( 'float32' ) if rgb : img_norm = cv2 . cvtColor ( img_norm , cv2 . COLOR_BGR2RGB ) if nchw : img_norm = np . transpose ( img_norm , axes = ( 2 , 0 , 1 )) return np . expand_dims ( img_norm , 0 ) def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm ) Note \u8bf7\u4e0d\u8981\u8bbe\u7f6einput_config.ini\u4e2d\u7684mean_red\u3001mean_green\u3001mean_blue\u548cstd_value\u53c2\u6570\u503c\uff0c\u56e0\u4e3a\u4e0d\u9700\u8981\u524d\u5904\u7406\u4e2d\u7684\u5f52\u4e00\u5316\u64cd\u4f5c\u3002 \u7f16\u5199\u56fe\u7247\u5904\u7406\u51fd\u6570\u65f6(\u5982\u793a\u4f8b\u4e2d\u7684def get_image(\u2026\u2026))\uff0c\u7531\u4e8e\u8be5\u51fd\u6570\u5fc5\u987b\u5305\u542b\u5f52\u4e00\u5316\u6807\u8bb0(norm),\u6545\u53ea\u9700\u6784\u9020\u51fd\u6570\u65f6\u58f0\u660enorm=True\u5373\u53ef\uff0c\u51fd\u6570\u4e2d\u65e0\u9700\u5b9e\u73b0norm\u4e3aTrue\u6216false\u7684\u64cd\u4f5c\u3002 \u4f7f\u7528simulator\u5de5\u5177\u65f6\uff0csimulator.py\u4f1a\u8bfb\u5165\u539f\u6d6e\u70b9\u6570\u636e\uff0c\u7531\u6a21\u578b\u5185\u90e8\u7684align\u7b97\u5b50\u81ea\u52a8\u5bf9\u9f50\u6570\u636e\uff0c\u4e0d\u9700\u8981\u4eba\u4e3a\u64cd\u4f5c\u3002 \u5728\u677f\u4e0a\u8fd0\u884cRAWDATA_F32_NHWC\u7684\u7f51\u7edc\u65f6\uff0c\u4e0d\u9700\u8981\u8f93\u5165\u6570\u636e\u7684\u5b9a\u70b9\u5316\u548c\u5bf9\u9f50\u6392\u5217\u8fc7\u7a0b\u3002 \u7279\u6b8a\u6a21\u578b\u8f6c\u6362\u8981\u70b9\uff1aRAWDATA_F32_NHWC\u6a21\u578b\u8f6c\u6362\u8981\u70b9","title":"1.4.2. training_input_formats\u548cinput_formats\u5747\u4e3aRAWDATA_F32_NHWC"},{"location":"module/User_Guide/IPU230/Running_Offline_Network_Model_On_Development_Board.html","text":"\u672c\u7ae0\u5c06\u901a\u8fc7dla_simulator.cpp\u6587\u4ef6\uff0c\u9488\u5bf9\u4f7f\u7528MI_IPU API\u7684\u987a\u5e8f\u4e3e\u4f8b\u8bf4\u660e\u3002 \u8bf4\u660e \u6ce8\u610f\u4e8b\u9879 \u5efa\u8bae\u5728\u5f00\u53d1\u677f\u4e0a\u8fd0\u884c\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u4e4b\u524d\uff0c\u4f7f\u7528Simulator\u5bf9\u6a21\u578b\u8fdb\u884c\u9a8c\u8bc1\u3002Simulator\u80fd\u591f\u5728PC\u7aef\u6a21\u62df\u677f\u4e0a\u8fd0\u884c\u73af\u5883\u3002 \u9996\u5148\u786e\u4fdd\u5f00\u53d1\u677f\u5df2\u7ecf\u70e7\u5f55\u597d\u6700\u65b0\u7684\u56fa\u4ef6\uff0c\u4f7f\u7528mi_demo\u4e2d\u7684dla_simulator\u53ef\u5bf9\u5355\u5f20\u56fe\u7247\u63a8\u6f14\u4e00\u6b21\uff0c\u7ed3\u679c\u4e3a\u63a8\u6f14\u7ed3\u679c\u7684TOP5\u3002 7.1. \u521b\u5efaIPU\u8bbe\u5907 \u00b6 MI_S32 IPUCreateDevice ( char * pFirmwarePath , MI_U32 u32VarBufSize ) { MI_S32 s32Ret = MI_SUCCESS ; MI_IPU_DevAttr_t stDevAttr ; stDevAttr . u32MaxVariableBufSize = u32VarBufSize ; s32Ret = MI_IPU_CreateDevice ( & stDevAttr , NULL , pFirmwarePath , 0 ); return s32Ret ; } (1) \u53c2\u6570\u8bf4\u660e \u2460 \u8f93\u5165\u53c2\u6570\uff1a pFirmwarePath\uff1a\u5728\u8be5\u6b3echip\u4e0a\u4e0d\u518d\u9700\u8981firmware\uff0c\u56e0\u6b64\u4f20NULL u32VarBufSize\uff1a\u6a21\u578b\u5185\u90e8Tensor\u4f7f\u7528\u7684memory\u7684\u6700\u5927\u5927\u5c0f \u5176\u4e2d\uff0cu32VarBufSize\u83b7\u53d6\u65b9\u6cd5\u5982\u4e0b\uff1a \u65b9\u6cd5 1 : \u53ef\u4ee5\u901a\u8fc7 parse_net\u5de5\u5177\u83b7\u53d6 parse_net\u5de5\u5177\u8def\u5f84 \uff1a SGS_IPU_SDK / bin / parse_net \u4f7f\u7528\u65f6\u76f4\u63a5\u5728 parse_net\u547d\u4ee4\u540e\u52a0\u4e0a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8def\u5f84\u5373\u53ef \uff0c\u53ef\u53c2\u8003\u4ee5\u4e0b\u547d\u4ee4\uff1a . / parse_net xxx_fixed . sim | grep Variable \u8f93\u51fa\uff1a | |--> SubGraph [ 0 ] : Variable buffer 0xd2f00 @ 0x82f3b40 . \u5176\u4e2d 0xd2f00 \u5411 2 \u5bf9\u9f50\u540e\u4e3a u32VarBufSize\u5927\u5c0f \u3002 \u5728 C / C ++ \u4e2d\uff0c\u5411 2 \u5bf9\u9f50\u7684\u5b9a\u4e49\u4e3a\uff1a #define alignment_up(a, size) ((a + size - 1) & (~(size - 1))) \u6240\u4ee5 u32VarBufSize\u4e3a864000 \u3002 \u65b9\u6cd5 2 : \u4f7f\u7528 MI\u7684API\u83b7\u53d6 MI_IPU_OfflineModelStaticInfo_t OfflineModelInfo ; ret = MI_IPU_GetOfflineModeStaticInfo ( NULL , modelFilePath , & OfflineModelInfo ); if ( ret != MI_SUCCESS ) { std :: cerr << \"get model variable buffer size failed!\" << std :: endl ; return ; } u32VarBufSize = OfflineModelInfo . u32VariableBufferSize \u5982\u679c\u6709\u591a\u4e2a\u6a21\u578b\u9700\u8981\u8fd0\u884c\uff0c\u9009\u53d6\u6700\u5927\u7684 u32VarBufSize\u521b\u5efaIPU\u8bbe\u5907\u5373\u53ef \u3002 \u2461 \u8f93\u51fa\u53c2\u6570\uff1aMI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API_V3.DOC\u300b 7.2. \u521b\u5efaIPU\u901a\u9053 \u00b6 MI_S32 IPUCreateChannel ( MI_U32 * u32Channel , char * pModelImage ) { MI_S32 s32Ret ; MI_IPUChnAttr_t stChnAttr ; //create channel memset ( & stChnAttr , 0 , sizeof ( stChnAttr )); stChnAttr . u32InputBufDepth = 2 ; stChnAttr . u32OutputBufDepth = 2 ; return MI_IPU_CreateCHN ( u32Channel , & stChnAttr , NULL , pModelImage ); } MI_U32 u32Channel ; ret = IPUCreateChannel ( & u32ChannelID , \u201c . / mobilenet_v1_fixed . img \u201d ); (1) \u53c2\u6570\u8bf4\u660e \u2460 \u8f93\u5165\u53c2\u6570\uff1a u32Channel\uff1a\u521b\u5efaIPU\u901a\u9053\u7684ID pModelImage\uff1a\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u79bb\u7ebf \u5982\u679c\u9700\u8981\u652f\u6301\u6279\u5904\u7406\u8f93\u5165\uff0c\u8bf7\u53c2\u8003 dla_simulator_nbatch.cpp \uff0c\u793a\u4f8b\u5982\u4e0b\uff1a MI_S32 IPUCreateChannel ( MI_U32 * u32Channel , char * pModelImage , int number ) { MI_SYS_GlobalPrivPoolConfig_t stGlobalPrivPoolConf ; MI_IPUChnAttr_t stChnAttr ; //create channel memset ( & stChnAttr , 0 , sizeof ( stChnAttr )); stChnAttr . u32InputBufDepth = 1 ; stChnAttr . u32OutputBufDepth = 1 ; stChnAttr . u32BatchMax = number ; return MI_IPU_CreateCHN ( u32Channel , & stChnAttr , NULL , pModelImage ); } \u8f93\u5165\u53c2\u6570\uff1a u32Channel\uff1a\u521b\u5efaIPU\u901a\u9053\u7684ID pModelImage\uff1a\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u79bb\u7ebf number\uff1a\u6279\u5904\u7406\u8f93\u5165batch\u6570 \u2461 \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API_V3.DOC\u300b 7.3. \u83b7\u53d6\u6a21\u578b\u8f93\u5165\u8f93\u51faTensor\u5c5e\u6027 \u00b6 MI_IPU_SubNet_InputOutputDesc_t desc ; MI_IPU_GetInOutTensorDesc ( u32ChannelID , & desc ); (1) \u53c2\u6570\u8bf4\u660e \u2460 \u8f93\u5165\u53c2\u6570\uff1a u32ChnId\uff1aIPU\u901a\u9053\u7684ID pstDesc\uff1aIPU\u5b50\u7f51\u7edc\u8f93\u5165/\u8f93\u51fa\u63cf\u8ff0\u7ed3\u6784\u4f53 \u2461 \u8f93\u51fa\u53c2\u6570\uff1aMI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API_V3.DOC\u300b 7.4. \u83b7\u53d6\u8f93\u5165\u8f93\u51faTensor \u00b6 MI_IPU_TensorVector_t InputTensorVector ; MI_IPU_TensorVector_t OutputTensorVector ; MI_IPU_GetInputTensors ( u32ChannelID , & InputTensorVector ); MI_IPU_GetOutputTensors ( u32ChannelID , & OutputTensorVector ); (1) \u53c2\u6570\u8bf4\u660e \u2460 \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID InputTensorVector\uff1a\u8f93\u5165IPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 OutputTensorVector\uff1a\u8f93\u51faIPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 \u5982\u679c\u9700\u8981\u652f\u6301\u6279\u5904\u7406\u8f93\u5165\uff0c\u8bf7\u53c2\u8003 dla_simulator_nbatch.cpp \uff0c\u793a\u4f8b\u5982\u4e0b\uff1a MI_IPU_BatchInvokeParam_t stInvokeParam ; memset ( & stInvokeParam , 0 , sizeof ( MI_IPU_BatchInvokeParam_t )); stInvokeParam . u32BatchN = number \uff1b MI_IPU_GetInputTensors2 ( u32ChannelID , & stInvokeParam ); MI_IPU_GetOutputTensors2 ( u32ChannelID , & stInvokeParam ); \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID stInvokeParam\uff1ainvoke\u53c2\u6570\u7ed3\u6784\u4f53\uff0c\u5305\u62ec\u6279\u5904\u7406\u8f93\u5165batch\u6570\uff0c\u4ee5\u53ca\u8f93\u5165\u8f93\u51fatensors\u7684\u6307\u9488 \u2461 \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API_V3.DOC\u300b 7.5. \u6a21\u578b\u6570\u636e\u8f93\u5165 \u00b6 7.5.1. \u62f7\u8d1d\u6570\u636e \u00b6 \u5c06\u6570\u636e\u62f7\u8d1d\u81f3\u6a21\u578b\u8f93\u5165Tensor\u7684\u865a\u62df\u5730\u5740\uff0c\u62f7\u8d1d\u5b8c\u6210\u540e\u8c03\u7528MI_SYS_FlushInvCache\uff1a MI_U8 * pdata = ( MI_U8 * ) InputTensorVector . astArrayTensors [ 0 ]. ptTensorData [ 0 ]; MI_U8 * pSrc = ( MI_U8 * ) Input_Data ; for ( int i = 0 ; i < imageSize ; i ++ ) { * ( pdata + i ) = * ( pSrc + i ); } MI_SYS_FlushInvCache ( pdata , imageSize ); \u6a21\u578b\u4e2dinput formats\u8bbe\u7f6e\u4e3a BGR \u6216\u8005 RGB \u65f6\uff0cstride\u4e0d\u8981\u505aalignment\uff0c\u505a\u4e86alignment\u53cd\u800c\u6709\u95ee\u9898\u3002 \u6a21\u578b\u4e2dinput formats\u8bbe\u7f6e\u4e3a BGRA \u6216\u8005 RGBA \uff08A channel\u5728\u9ad8\u5730\u5740\uff09\uff0c\u4e0d\u9700\u8981alignment\u3002 input_formats\u8bbe\u7f6e\u4e3a BGRA \uff0c\u5bf9\u5e94MI_SYS_PixelFormat_e\u4e3a E_MI_SYSPIXEL_FRAME_ARGB8888 \u3002 input_formats\u8bbe\u7f6e\u4e3a RGBA \uff0c\u5bf9\u5e94MI_SYS_PixelFormat_e\u4e3a E_MI_SYSPIXEL_FRAME_ABGR8888 \u3002 input formats\u8bbe\u7f6e\u4e3a YUV_NV12 \u6216\u8005 GRAY \u65f6\uff0calignment\u89c4\u5219\u662fstride = alignment_up(width, 2)\uff0cheight\u9700\u89812 alignment\u3002 input_formats\u8bbe\u7f6e\u4e3a YUV_NV12 \u6216\u8005 GRAY \u65f6\uff0c\u5bf9\u5e94MI_SYS_PixelFormat_e\u4e3a E_MI_SYSPIXEL_FRAME_YUV_SEMIPLANAR_420 \u3002 7.5.2.\u96f6\u62f7\u8d1d\u6570\u636e \u00b6 \u5982\u679c\u4f7f\u7528MI\u7684\u5176\u4ed6\u6a21\u5757\uff0c\u4e3a\u6a21\u578b\u8f93\u5165\u505a\u597d\u4e86\u6570\u636e\u51c6\u5907\uff0c\u53ef\u4ee5\u4e0d\u7528\u62f7\u8d1d\u6570\u636e\uff0c\u76f4\u63a5\u7ed9\u4f20\u9012\u5176\u4ed6MI\u6a21\u5757\u7684\u7269\u7406\u5730\u5740\uff08\u8be5\u8d77\u59cb\u7269\u7406\u5730\u5740\u5fc5\u987b\u8981\u662f64 bytes\u5bf9\u9f50\uff09\u3002 \u4ee5\u4e0b\u4ee5MI_SYS\u6a21\u5757\u793a\u4f8b\u6a21\u578b\u8f93\u5165\u96f6\u62f7\u8d1d\u6570\u636e\uff0c\u9700\u6ce8\u610f\uff1a \u521b\u5efaIPU\u901a\u9053\u65f6\uff0c\u8f93\u5165InputBufDepth\u8bbe\u4e3a\u96f6\uff0c\u4e0d\u518d\u4f7f\u7528MI_IPU_GetInputTensors\u5206\u914d\u8f93\u5165\u7a7a\u95f4 stChnAttr.u32InputBufDepth = 0; \u7531\u4e8e\u4e0d\u4f7f\u7528MI_IPU_GetInputTensors\uff0c\u9700\u624b\u52a8\u5c06\u7f51\u7edc\u63cf\u8ff0\u7684\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u4e2a\u6570\u8d4b\u7ed9 InputTensorVector.u32TensorCount\u3002 InputTensorVector.u32TensorCount = desc.u32InputTensorCount; \u4f7f\u7528MI_SYS\u7684API\u5206\u914d\u7a7a\u95f4: MI_S32 s32ret = 0 ; MI_PHY phyAddr = 0 ; void * pVirAddr = NULL ; s32ret = MI_SYS_MMA_Alloc ( NULL , BufSize , & phyAddr ); if ( s32ret != MI_SUCCESS ) { throw std :: runtime_error ( \"Alloc buffer failed!\" ); } s32ret = MI_SYS_Mmap ( phyAddr , BufSize , & pVirAddr , TRUE ); if ( s32ret != MI_SUCCESS ) { MI_SYS_MMA_Free ( phyAddr ); throw std :: runtime_error ( \"Mmap buffer failed!\" ); } \u4f20\u9012\u865a\u62df\u5730\u5740\u548c\u5bf9\u5e94\u7684\u8d77\u59cb\u7269\u7406\u5730\u5740\uff08\u8be5\u8d77\u59cb\u7269\u7406\u5730\u5740\u5fc5\u987b\u8981\u662f64 bytes\u5bf9\u9f50\uff09\u7ed9InputTensorVector InputTensorVector . astArrayTensors [ 0 ]. ptTensorData [ 0 ] = pVirAddr ; InputTensorVector . astArrayTensors [ 0 ]. phyTensorAddr [ 0 ] = phyAddr ; \u4e4b\u540e\u53ef\u4ee5\u8fdb\u884c\u6a21\u578b\u63a8\u6f14\u3002 \u4f7f\u7528\u96f6\u62f7\u8d1d\u6570\u636e\uff0c\u4e0d\u9700\u8981\u518d\u91ca\u653e\u8f93\u5165Tensor\uff0c\u5373\u4e0d\u518d\u8c03\u7528MI_IPU_PutInputTensors\u51fd\u6570\uff0c\u91ca\u653eBuffer\u8c03\u7528MI_SYS\u7684API\u5b8c\u6210\u3002 \u91ca\u653eMI_SYS\u7684Buffer MI_SYS_Munmap ( pVirAddr , BufSize ); MI_SYS_MMA_Free ( phyAddr ); 7.6. \u6a21\u578b\u63a8\u6f14 \u00b6 ret = MI_IPU_Invoke ( u32ChannelID , & InputTensorVector , & OutputTensorVector ); if ( ret != MI_SUCCESS ) { MI_IPU_DestroyCHN ( u32ChannelID ); MI_IPU_DestroyDevice (); std :: cerr << \"IPU invoke failed!!\" << std :: endl ; } (1) \u53c2\u6570\u8bf4\u660e \u2460 \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID InputTensorVector\uff1a\u8f93\u5165IPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 \uff08\u6bcf\u4e2a\u8f93\u5165tensor\u7684\u8d77\u59cb\u7269\u7406\u5730\u5740\u5fc5\u987b\u8981\u662f64 bytes\u5bf9\u9f50\uff09 OutputTensorVector\uff1a\u8f93\u51faIPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 \uff08\u6bcf\u4e2a\u8f93\u51fatensor\u7684\u8d77\u59cb\u7269\u7406\u5730\u5740\u5fc5\u987b\u8981\u662f64 bytes\u5bf9\u9f50\uff09 \u5982\u679c\u9700\u8981\u652f\u6301\u6279\u5904\u7406\u8f93\u5165\uff0c\u8bf7\u53c2\u8003 dla_simulator_nbatch.cpp ret = MI_IPU_Invoke2 ( u32ChannelID , & stInvokeParam , & stRuntimeInfo ); if ( ret != MI_SUCCESS ) { MI_IPU_DestroyCHN ( u32ChannelID ); MI_IPU_DestroyDevice (); std :: cerr << \"IPU invoke failed! Error Code: \" << ret << std :: endl ; return ; } \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID stInvokeParam\uff1ainvoke\u53c2\u6570\u7ed3\u6784\u4f53\uff0c\u5305\u62ec\u6279\u5904\u7406batch\u6570\u3001\u8f93\u5165\u8f93\u51fatensor\u6307\u9488\u3001IPU core\u9009\u62e9\u3001 task\u4f18\u5148\u7ea7\u7b49 \uff08\u6bcf\u4e2a\u8f93\u5165/\u8f93\u51fatensor\u7684\u8d77\u59cb\u7269\u7406\u5730\u5740\u5fc5\u987b\u8981\u662f64 bytes\u5bf9\u9f50\uff09 stRuntimeInfo\uff1a\u6a21\u578b\u63a8\u6f14\u4fe1\u606f\u7ed3\u6784\u4f53\uff0c\u5305\u62ec\u63a8\u6f14\u65f6\u95f4\u4ee5\u53ca\u63a8\u6f14\u5e26\u5bbd\u3002 \u2461 \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API_V3.DOC\u300b 7.7. \u91ca\u653e\u8f93\u5165\u8f93\u51faTensor \u00b6 MI_IPU_PutInputTensors ( u32ChannelID , & InputTensorVector ); MI_IPU_PutOutputTensors ( u32ChannelID , & OutputTensorVector ); (1) \u53c2\u6570\u8bf4\u660e \u2460 \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID InputTensorVector\uff1a\u8f93\u5165IPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 OutputTensorVector\uff1a\u8f93\u51faIPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 \u5982\u679c\u9700\u8981\u652f\u6301\u6279\u5904\u7406\u8f93\u5165\uff0c\u8bf7\u53c2\u8003 dla_simulator_nbatch.cpp MI_IPU_PutInputTensors2 ( u32ChannelID , & stInvokeParam ); MI_IPU_PutOutputTensors2 ( u32ChannelID , & stInvokeParam ); \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID stInvokeParam\uff1ainvoke\u53c2\u6570\u7ed3\u6784\u4f53\uff0c\u5305\u62ec\u6279\u5904\u7406\u8f93\u5165batch\u6570\uff0c\u4ee5\u53ca\u8f93\u5165\u8f93\u51fatensors\u7684\u6307\u9488 \u2461 \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API_V3.DOC\u300b 7.8. \u9500\u6bc1IPU\u901a\u9053 \u00b6 MI_IPU_DestroyCHN ( u32ChannelID ); (1) \u53c2\u6570\u8bf4\u660e \u2460 \u8f93\u5165\u53c2\u6570\uff1a s32Channel\uff1a\u521b\u5efaIPU\u901a\u9053\u7684ID \u2461 \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API_V3.DOC\u300b 7.9. \u9500\u6bc1IPU\u8bbe\u5907 \u00b6 MI_IPU_DestroyDevice (); (1) \u53c2\u6570\u8bf4\u660e \u2460 \u8f93\u5165\u53c2\u6570\uff1a \u7a7a \u2461 \u8f93\u51fa\u53c2\u6570\uff1aMI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API_V3.DOC\u300b","title":"7.  \u5728\u5f00\u53d1\u677f\u4e0a\u8fd0\u884c\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b"},{"location":"module/User_Guide/IPU230/Running_Offline_Network_Model_On_Development_Board.html#71-ipu","text":"MI_S32 IPUCreateDevice ( char * pFirmwarePath , MI_U32 u32VarBufSize ) { MI_S32 s32Ret = MI_SUCCESS ; MI_IPU_DevAttr_t stDevAttr ; stDevAttr . u32MaxVariableBufSize = u32VarBufSize ; s32Ret = MI_IPU_CreateDevice ( & stDevAttr , NULL , pFirmwarePath , 0 ); return s32Ret ; } (1) \u53c2\u6570\u8bf4\u660e \u2460 \u8f93\u5165\u53c2\u6570\uff1a pFirmwarePath\uff1a\u5728\u8be5\u6b3echip\u4e0a\u4e0d\u518d\u9700\u8981firmware\uff0c\u56e0\u6b64\u4f20NULL u32VarBufSize\uff1a\u6a21\u578b\u5185\u90e8Tensor\u4f7f\u7528\u7684memory\u7684\u6700\u5927\u5927\u5c0f \u5176\u4e2d\uff0cu32VarBufSize\u83b7\u53d6\u65b9\u6cd5\u5982\u4e0b\uff1a \u65b9\u6cd5 1 : \u53ef\u4ee5\u901a\u8fc7 parse_net\u5de5\u5177\u83b7\u53d6 parse_net\u5de5\u5177\u8def\u5f84 \uff1a SGS_IPU_SDK / bin / parse_net \u4f7f\u7528\u65f6\u76f4\u63a5\u5728 parse_net\u547d\u4ee4\u540e\u52a0\u4e0a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8def\u5f84\u5373\u53ef \uff0c\u53ef\u53c2\u8003\u4ee5\u4e0b\u547d\u4ee4\uff1a . / parse_net xxx_fixed . sim | grep Variable \u8f93\u51fa\uff1a | |--> SubGraph [ 0 ] : Variable buffer 0xd2f00 @ 0x82f3b40 . \u5176\u4e2d 0xd2f00 \u5411 2 \u5bf9\u9f50\u540e\u4e3a u32VarBufSize\u5927\u5c0f \u3002 \u5728 C / C ++ \u4e2d\uff0c\u5411 2 \u5bf9\u9f50\u7684\u5b9a\u4e49\u4e3a\uff1a #define alignment_up(a, size) ((a + size - 1) & (~(size - 1))) \u6240\u4ee5 u32VarBufSize\u4e3a864000 \u3002 \u65b9\u6cd5 2 : \u4f7f\u7528 MI\u7684API\u83b7\u53d6 MI_IPU_OfflineModelStaticInfo_t OfflineModelInfo ; ret = MI_IPU_GetOfflineModeStaticInfo ( NULL , modelFilePath , & OfflineModelInfo ); if ( ret != MI_SUCCESS ) { std :: cerr << \"get model variable buffer size failed!\" << std :: endl ; return ; } u32VarBufSize = OfflineModelInfo . u32VariableBufferSize \u5982\u679c\u6709\u591a\u4e2a\u6a21\u578b\u9700\u8981\u8fd0\u884c\uff0c\u9009\u53d6\u6700\u5927\u7684 u32VarBufSize\u521b\u5efaIPU\u8bbe\u5907\u5373\u53ef \u3002 \u2461 \u8f93\u51fa\u53c2\u6570\uff1aMI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API_V3.DOC\u300b","title":"7.1. \u521b\u5efaIPU\u8bbe\u5907"},{"location":"module/User_Guide/IPU230/Running_Offline_Network_Model_On_Development_Board.html#72-ipu","text":"MI_S32 IPUCreateChannel ( MI_U32 * u32Channel , char * pModelImage ) { MI_S32 s32Ret ; MI_IPUChnAttr_t stChnAttr ; //create channel memset ( & stChnAttr , 0 , sizeof ( stChnAttr )); stChnAttr . u32InputBufDepth = 2 ; stChnAttr . u32OutputBufDepth = 2 ; return MI_IPU_CreateCHN ( u32Channel , & stChnAttr , NULL , pModelImage ); } MI_U32 u32Channel ; ret = IPUCreateChannel ( & u32ChannelID , \u201c . / mobilenet_v1_fixed . img \u201d ); (1) \u53c2\u6570\u8bf4\u660e \u2460 \u8f93\u5165\u53c2\u6570\uff1a u32Channel\uff1a\u521b\u5efaIPU\u901a\u9053\u7684ID pModelImage\uff1a\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u79bb\u7ebf \u5982\u679c\u9700\u8981\u652f\u6301\u6279\u5904\u7406\u8f93\u5165\uff0c\u8bf7\u53c2\u8003 dla_simulator_nbatch.cpp \uff0c\u793a\u4f8b\u5982\u4e0b\uff1a MI_S32 IPUCreateChannel ( MI_U32 * u32Channel , char * pModelImage , int number ) { MI_SYS_GlobalPrivPoolConfig_t stGlobalPrivPoolConf ; MI_IPUChnAttr_t stChnAttr ; //create channel memset ( & stChnAttr , 0 , sizeof ( stChnAttr )); stChnAttr . u32InputBufDepth = 1 ; stChnAttr . u32OutputBufDepth = 1 ; stChnAttr . u32BatchMax = number ; return MI_IPU_CreateCHN ( u32Channel , & stChnAttr , NULL , pModelImage ); } \u8f93\u5165\u53c2\u6570\uff1a u32Channel\uff1a\u521b\u5efaIPU\u901a\u9053\u7684ID pModelImage\uff1a\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u79bb\u7ebf number\uff1a\u6279\u5904\u7406\u8f93\u5165batch\u6570 \u2461 \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API_V3.DOC\u300b","title":"7.2. \u521b\u5efaIPU\u901a\u9053"},{"location":"module/User_Guide/IPU230/Running_Offline_Network_Model_On_Development_Board.html#73-tensor","text":"MI_IPU_SubNet_InputOutputDesc_t desc ; MI_IPU_GetInOutTensorDesc ( u32ChannelID , & desc ); (1) \u53c2\u6570\u8bf4\u660e \u2460 \u8f93\u5165\u53c2\u6570\uff1a u32ChnId\uff1aIPU\u901a\u9053\u7684ID pstDesc\uff1aIPU\u5b50\u7f51\u7edc\u8f93\u5165/\u8f93\u51fa\u63cf\u8ff0\u7ed3\u6784\u4f53 \u2461 \u8f93\u51fa\u53c2\u6570\uff1aMI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API_V3.DOC\u300b","title":"7.3. \u83b7\u53d6\u6a21\u578b\u8f93\u5165\u8f93\u51faTensor\u5c5e\u6027"},{"location":"module/User_Guide/IPU230/Running_Offline_Network_Model_On_Development_Board.html#74-tensor","text":"MI_IPU_TensorVector_t InputTensorVector ; MI_IPU_TensorVector_t OutputTensorVector ; MI_IPU_GetInputTensors ( u32ChannelID , & InputTensorVector ); MI_IPU_GetOutputTensors ( u32ChannelID , & OutputTensorVector ); (1) \u53c2\u6570\u8bf4\u660e \u2460 \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID InputTensorVector\uff1a\u8f93\u5165IPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 OutputTensorVector\uff1a\u8f93\u51faIPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 \u5982\u679c\u9700\u8981\u652f\u6301\u6279\u5904\u7406\u8f93\u5165\uff0c\u8bf7\u53c2\u8003 dla_simulator_nbatch.cpp \uff0c\u793a\u4f8b\u5982\u4e0b\uff1a MI_IPU_BatchInvokeParam_t stInvokeParam ; memset ( & stInvokeParam , 0 , sizeof ( MI_IPU_BatchInvokeParam_t )); stInvokeParam . u32BatchN = number \uff1b MI_IPU_GetInputTensors2 ( u32ChannelID , & stInvokeParam ); MI_IPU_GetOutputTensors2 ( u32ChannelID , & stInvokeParam ); \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID stInvokeParam\uff1ainvoke\u53c2\u6570\u7ed3\u6784\u4f53\uff0c\u5305\u62ec\u6279\u5904\u7406\u8f93\u5165batch\u6570\uff0c\u4ee5\u53ca\u8f93\u5165\u8f93\u51fatensors\u7684\u6307\u9488 \u2461 \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API_V3.DOC\u300b","title":"7.4. \u83b7\u53d6\u8f93\u5165\u8f93\u51faTensor"},{"location":"module/User_Guide/IPU230/Running_Offline_Network_Model_On_Development_Board.html#75","text":"","title":"7.5. \u6a21\u578b\u6570\u636e\u8f93\u5165"},{"location":"module/User_Guide/IPU230/Running_Offline_Network_Model_On_Development_Board.html#751","text":"\u5c06\u6570\u636e\u62f7\u8d1d\u81f3\u6a21\u578b\u8f93\u5165Tensor\u7684\u865a\u62df\u5730\u5740\uff0c\u62f7\u8d1d\u5b8c\u6210\u540e\u8c03\u7528MI_SYS_FlushInvCache\uff1a MI_U8 * pdata = ( MI_U8 * ) InputTensorVector . astArrayTensors [ 0 ]. ptTensorData [ 0 ]; MI_U8 * pSrc = ( MI_U8 * ) Input_Data ; for ( int i = 0 ; i < imageSize ; i ++ ) { * ( pdata + i ) = * ( pSrc + i ); } MI_SYS_FlushInvCache ( pdata , imageSize ); \u6a21\u578b\u4e2dinput formats\u8bbe\u7f6e\u4e3a BGR \u6216\u8005 RGB \u65f6\uff0cstride\u4e0d\u8981\u505aalignment\uff0c\u505a\u4e86alignment\u53cd\u800c\u6709\u95ee\u9898\u3002 \u6a21\u578b\u4e2dinput formats\u8bbe\u7f6e\u4e3a BGRA \u6216\u8005 RGBA \uff08A channel\u5728\u9ad8\u5730\u5740\uff09\uff0c\u4e0d\u9700\u8981alignment\u3002 input_formats\u8bbe\u7f6e\u4e3a BGRA \uff0c\u5bf9\u5e94MI_SYS_PixelFormat_e\u4e3a E_MI_SYSPIXEL_FRAME_ARGB8888 \u3002 input_formats\u8bbe\u7f6e\u4e3a RGBA \uff0c\u5bf9\u5e94MI_SYS_PixelFormat_e\u4e3a E_MI_SYSPIXEL_FRAME_ABGR8888 \u3002 input formats\u8bbe\u7f6e\u4e3a YUV_NV12 \u6216\u8005 GRAY \u65f6\uff0calignment\u89c4\u5219\u662fstride = alignment_up(width, 2)\uff0cheight\u9700\u89812 alignment\u3002 input_formats\u8bbe\u7f6e\u4e3a YUV_NV12 \u6216\u8005 GRAY \u65f6\uff0c\u5bf9\u5e94MI_SYS_PixelFormat_e\u4e3a E_MI_SYSPIXEL_FRAME_YUV_SEMIPLANAR_420 \u3002","title":"7.5.1. \u62f7\u8d1d\u6570\u636e"},{"location":"module/User_Guide/IPU230/Running_Offline_Network_Model_On_Development_Board.html#752","text":"\u5982\u679c\u4f7f\u7528MI\u7684\u5176\u4ed6\u6a21\u5757\uff0c\u4e3a\u6a21\u578b\u8f93\u5165\u505a\u597d\u4e86\u6570\u636e\u51c6\u5907\uff0c\u53ef\u4ee5\u4e0d\u7528\u62f7\u8d1d\u6570\u636e\uff0c\u76f4\u63a5\u7ed9\u4f20\u9012\u5176\u4ed6MI\u6a21\u5757\u7684\u7269\u7406\u5730\u5740\uff08\u8be5\u8d77\u59cb\u7269\u7406\u5730\u5740\u5fc5\u987b\u8981\u662f64 bytes\u5bf9\u9f50\uff09\u3002 \u4ee5\u4e0b\u4ee5MI_SYS\u6a21\u5757\u793a\u4f8b\u6a21\u578b\u8f93\u5165\u96f6\u62f7\u8d1d\u6570\u636e\uff0c\u9700\u6ce8\u610f\uff1a \u521b\u5efaIPU\u901a\u9053\u65f6\uff0c\u8f93\u5165InputBufDepth\u8bbe\u4e3a\u96f6\uff0c\u4e0d\u518d\u4f7f\u7528MI_IPU_GetInputTensors\u5206\u914d\u8f93\u5165\u7a7a\u95f4 stChnAttr.u32InputBufDepth = 0; \u7531\u4e8e\u4e0d\u4f7f\u7528MI_IPU_GetInputTensors\uff0c\u9700\u624b\u52a8\u5c06\u7f51\u7edc\u63cf\u8ff0\u7684\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u4e2a\u6570\u8d4b\u7ed9 InputTensorVector.u32TensorCount\u3002 InputTensorVector.u32TensorCount = desc.u32InputTensorCount; \u4f7f\u7528MI_SYS\u7684API\u5206\u914d\u7a7a\u95f4: MI_S32 s32ret = 0 ; MI_PHY phyAddr = 0 ; void * pVirAddr = NULL ; s32ret = MI_SYS_MMA_Alloc ( NULL , BufSize , & phyAddr ); if ( s32ret != MI_SUCCESS ) { throw std :: runtime_error ( \"Alloc buffer failed!\" ); } s32ret = MI_SYS_Mmap ( phyAddr , BufSize , & pVirAddr , TRUE ); if ( s32ret != MI_SUCCESS ) { MI_SYS_MMA_Free ( phyAddr ); throw std :: runtime_error ( \"Mmap buffer failed!\" ); } \u4f20\u9012\u865a\u62df\u5730\u5740\u548c\u5bf9\u5e94\u7684\u8d77\u59cb\u7269\u7406\u5730\u5740\uff08\u8be5\u8d77\u59cb\u7269\u7406\u5730\u5740\u5fc5\u987b\u8981\u662f64 bytes\u5bf9\u9f50\uff09\u7ed9InputTensorVector InputTensorVector . astArrayTensors [ 0 ]. ptTensorData [ 0 ] = pVirAddr ; InputTensorVector . astArrayTensors [ 0 ]. phyTensorAddr [ 0 ] = phyAddr ; \u4e4b\u540e\u53ef\u4ee5\u8fdb\u884c\u6a21\u578b\u63a8\u6f14\u3002 \u4f7f\u7528\u96f6\u62f7\u8d1d\u6570\u636e\uff0c\u4e0d\u9700\u8981\u518d\u91ca\u653e\u8f93\u5165Tensor\uff0c\u5373\u4e0d\u518d\u8c03\u7528MI_IPU_PutInputTensors\u51fd\u6570\uff0c\u91ca\u653eBuffer\u8c03\u7528MI_SYS\u7684API\u5b8c\u6210\u3002 \u91ca\u653eMI_SYS\u7684Buffer MI_SYS_Munmap ( pVirAddr , BufSize ); MI_SYS_MMA_Free ( phyAddr );","title":"7.5.2.\u96f6\u62f7\u8d1d\u6570\u636e"},{"location":"module/User_Guide/IPU230/Running_Offline_Network_Model_On_Development_Board.html#76","text":"ret = MI_IPU_Invoke ( u32ChannelID , & InputTensorVector , & OutputTensorVector ); if ( ret != MI_SUCCESS ) { MI_IPU_DestroyCHN ( u32ChannelID ); MI_IPU_DestroyDevice (); std :: cerr << \"IPU invoke failed!!\" << std :: endl ; } (1) \u53c2\u6570\u8bf4\u660e \u2460 \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID InputTensorVector\uff1a\u8f93\u5165IPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 \uff08\u6bcf\u4e2a\u8f93\u5165tensor\u7684\u8d77\u59cb\u7269\u7406\u5730\u5740\u5fc5\u987b\u8981\u662f64 bytes\u5bf9\u9f50\uff09 OutputTensorVector\uff1a\u8f93\u51faIPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 \uff08\u6bcf\u4e2a\u8f93\u51fatensor\u7684\u8d77\u59cb\u7269\u7406\u5730\u5740\u5fc5\u987b\u8981\u662f64 bytes\u5bf9\u9f50\uff09 \u5982\u679c\u9700\u8981\u652f\u6301\u6279\u5904\u7406\u8f93\u5165\uff0c\u8bf7\u53c2\u8003 dla_simulator_nbatch.cpp ret = MI_IPU_Invoke2 ( u32ChannelID , & stInvokeParam , & stRuntimeInfo ); if ( ret != MI_SUCCESS ) { MI_IPU_DestroyCHN ( u32ChannelID ); MI_IPU_DestroyDevice (); std :: cerr << \"IPU invoke failed! Error Code: \" << ret << std :: endl ; return ; } \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID stInvokeParam\uff1ainvoke\u53c2\u6570\u7ed3\u6784\u4f53\uff0c\u5305\u62ec\u6279\u5904\u7406batch\u6570\u3001\u8f93\u5165\u8f93\u51fatensor\u6307\u9488\u3001IPU core\u9009\u62e9\u3001 task\u4f18\u5148\u7ea7\u7b49 \uff08\u6bcf\u4e2a\u8f93\u5165/\u8f93\u51fatensor\u7684\u8d77\u59cb\u7269\u7406\u5730\u5740\u5fc5\u987b\u8981\u662f64 bytes\u5bf9\u9f50\uff09 stRuntimeInfo\uff1a\u6a21\u578b\u63a8\u6f14\u4fe1\u606f\u7ed3\u6784\u4f53\uff0c\u5305\u62ec\u63a8\u6f14\u65f6\u95f4\u4ee5\u53ca\u63a8\u6f14\u5e26\u5bbd\u3002 \u2461 \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API_V3.DOC\u300b","title":"7.6. \u6a21\u578b\u63a8\u6f14"},{"location":"module/User_Guide/IPU230/Running_Offline_Network_Model_On_Development_Board.html#77-tensor","text":"MI_IPU_PutInputTensors ( u32ChannelID , & InputTensorVector ); MI_IPU_PutOutputTensors ( u32ChannelID , & OutputTensorVector ); (1) \u53c2\u6570\u8bf4\u660e \u2460 \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID InputTensorVector\uff1a\u8f93\u5165IPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 OutputTensorVector\uff1a\u8f93\u51faIPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 \u5982\u679c\u9700\u8981\u652f\u6301\u6279\u5904\u7406\u8f93\u5165\uff0c\u8bf7\u53c2\u8003 dla_simulator_nbatch.cpp MI_IPU_PutInputTensors2 ( u32ChannelID , & stInvokeParam ); MI_IPU_PutOutputTensors2 ( u32ChannelID , & stInvokeParam ); \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID stInvokeParam\uff1ainvoke\u53c2\u6570\u7ed3\u6784\u4f53\uff0c\u5305\u62ec\u6279\u5904\u7406\u8f93\u5165batch\u6570\uff0c\u4ee5\u53ca\u8f93\u5165\u8f93\u51fatensors\u7684\u6307\u9488 \u2461 \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API_V3.DOC\u300b","title":"7.7. \u91ca\u653e\u8f93\u5165\u8f93\u51faTensor"},{"location":"module/User_Guide/IPU230/Running_Offline_Network_Model_On_Development_Board.html#78-ipu","text":"MI_IPU_DestroyCHN ( u32ChannelID ); (1) \u53c2\u6570\u8bf4\u660e \u2460 \u8f93\u5165\u53c2\u6570\uff1a s32Channel\uff1a\u521b\u5efaIPU\u901a\u9053\u7684ID \u2461 \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API_V3.DOC\u300b","title":"7.8. \u9500\u6bc1IPU\u901a\u9053"},{"location":"module/User_Guide/IPU230/Running_Offline_Network_Model_On_Development_Board.html#79-ipu","text":"MI_IPU_DestroyDevice (); (1) \u53c2\u6570\u8bf4\u660e \u2460 \u8f93\u5165\u53c2\u6570\uff1a \u7a7a \u2461 \u8f93\u51fa\u53c2\u6570\uff1aMI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API_V3.DOC\u300b","title":"7.9. \u9500\u6bc1IPU\u8bbe\u5907"},{"location":"module/User_Guide/IPU230/Simulate.html","text":"5.1. Simulator\u7b80\u4ecb \u00b6 SimulatorTool \u8bf4\u660e \u5de5\u5177\u4f4d\u7f6e SGS_IPU_SDK/Scripts/calibrator/simulator.py \u5de5\u5177\u4f5c\u7528 \u5bf9SigmaStar\u6d6e\u70b9/\u5b9a\u70b9/\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u9a8c\u8bc1 \u4f7f\u7528\u987b\u77e5 \u2460 \u652f\u6301\u5bf9\u5206\u7c7b\u7f51\u7edc\u6570\u636e\u96c6\u9a8c\u8bc1 ILSVRC \u2461 \u652f\u6301\u5bf9\u68c0\u6d4b\u7f51\u7edc\u6570\u636e\u96c6\u9a8c\u8bc1\uff08\u652f\u6301COCO\u6570\u636e\u96c6\uff09 COCO2017 \u2462 \u652f\u6301\u5bf9\u5355\u5f20\u56fe\u7247\u9884\u6d4b image \u2463 \u652f\u6301\u7ed8\u5236\u5355\u5f20\u56fe\u7247\u76ee\u6807\u68c0\u6d4b\u7ed3\u679c \u2461 simulator\u5de5\u5177\u6bcf\u6b21\u8fd0\u884c\u7ed3\u675f\u540e\u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u521b\u5efalog\u76ee\u5f55\uff0clog\u76ee\u5f55\u4e0b\u7684output\u6587\u4ef6\u5939\uff0c\u5b58\u653e\u6a21\u578b\u63a8\u6f14\u7684\u7ed3\u679c\u3002 \u5728SGS_IPU_SDK \u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK source cfg_env.sh 5.2 Simulator\u5de5\u5177\u4f7f\u7528\u8bf4\u660e \u00b6 5.2.1 Simulator\u5de5\u5177\u4f7f\u7528\u793a\u4f8b \u00b6 \u8fdb\u5165\u5230\u8be5\u5de5\u5177\u76ee\u5f55\uff0c\u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a (1) \u6d4b\u8bd5ILSVRC\u6570\u636e\u96c6\uff0c\u5e76\u8fd4\u56de\u6a21\u578b\u7cbe\u5ea6\u7ed3\u679c\uff1a python3 simulator.py \\ -i ~/SGS_Models/resource/classify/ilsvrc2012_val_set100/ \\ -m ~/SGS_Models/tensorflow/mobilenet_v2/mobilenet_v2_float.sim \\ -l ~/SGS_Models/resource/classify/tensorflow_labels.txt \\ -c Classification \\ -t Float \\ -n mobilenet_v2 \\ --num_process 20 \u6216\u8005\u53ef\u4ee5\u4f7f\u7528\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\uff1a python3 simulator.py \\ -i ~/SGS_Models/resource/classify/ilsvrc2012_val_set100/file.list \\ -m ~/SGS_Models/tensorflow/mobilenet_v2/mobilenet_v2_float.sim \\ -l ~/SGS_Models/resource/classify/tensorflow_labels.txt \\ -c Classification \\ -t Float \\ -n mobilenet_v2 \\ --num_process 20 (2) \u6d4b\u8bd5COCO2017\u6570\u636e\u96c6\uff0c\u5e76\u8fd4\u56de\u6a21\u578b\u68c0\u6d4b\u7ed3\u679c\uff1a python3 simulator.py \\ -i ~/SGS_Models/resource/detection/coco2017_val_set100 \\ -m ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1_float.sim \\ -l ~/SGS_Models/resource/detection/coco2017_val_set100.json \\ -c Detection \\ -t Float \\ -n ssd_mobilenet_v1 \\ --num_process 10 \u6216\u8005\u53ef\u4ee5\u4f7f\u7528\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\uff1a python3 simulator.py \\ -i ~/SGS_Models/resource/detection/coco2017_val_set100/file.list \\ -m ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1_float.sim \\ -l ~/SGS_Models/resource/detection/coco2017_val_set100.json \\ -c Detection \\ -t Float \\ -n ssd_mobilenet_v1 \\ --num_process 10 (3) \u6d4b\u8bd5\u5355\u5f20\u56fe\u7247\uff0c\u5e76\u5c06\u68c0\u6d4b\u7ed3\u679c\u7ed8\u5236\u5728\u56fe\u7247\u4e0a\uff0c\u4fdd\u5b58\u5230 ./results/ \u6587\u4ef6\u5939\u4e0b\uff1a python3 simulator.py \\ -i ~/SGS_Models/resource/detection/coco2017_val_set100/000000567877.jpg \\ -m ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1_float.sim \\ -c Detection \\ -t Float \\ -n ssd_mobilenet_v1 \\ --draw_result ./results 5.2.2 Simulator\u5de5\u5177\u4f7f\u7528\u53c2\u6570\u8bf4\u660e \u00b6 (1) \u5fc5\u9009\u53c2\u6570 \u2460 -i , --image : \u56fe\u7247\u6587\u4ef6 / \u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84 / \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u3002 \u4f7f\u7528\u987b\u77e5 \u4e0d\u52a0\u53ef\u9009\u53c2\u6570 -n/--preprocess \u65f6\uff0c -i/--image \u4e0d\u80fd\u7ed9\u56fe\u7247\u6216\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\u3002 -i/--image \u53c2\u6570\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\u65f6\uff1a \u7f51\u7edc\u6a21\u578b\u4e3a\u5355\u8f93\u5165\u65f6\uff1a~/SGS_IPU_SDK/image_test/2007000364.jpg \u7f51\u7edc\u6a21\u578b\u4e3a\u591a\u8f93\u5165\u65f6\uff1a /SGS_IPU_SDK/image_test/2007000364.jpg, /SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp \u5f53 -i/--image \u7684\u53c2\u6570\u4e3a\u5355\u5f20\u56fe\u7247\u7684\u8def\u5f84\u65f6\uff0csimulator\u53ea\u5bf9\u8be5\u56fe\u7247\u63a8\u6f14\uff1b \u5f53 -i/--image \u7684\u53c2\u6570\u4e3a\u56fe\u7247\u6587\u4ef6\u5939\u7684\u8def\u5f84\u65f6\uff0csimulator\u4f1a\u5bf9\u6587\u4ef6\u5939\u5185\u7684\u56fe\u7247\u5168\u90e8\u63a8\u6f14\uff0c\u6b64\u65f6\u589e\u52a0\u53ef\u9009\u53c2\u6570--num_process\uff08\u53c2\u6570 > 1\uff09\uff0c\u53ef\u4ee5\u5f00\u542f\u591a\u8fdb\u7a0b\u63a8\u6f14\u3002 \u2461 -m , --model : \u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 \u2462 -c , --category : \u6a21\u578b\u7684\u7c7b\u522b\uff0c\u4e3b\u8981\u6709Classification / Detection / Unknown\u3002 \u4f7f\u7528\u987b\u77e5 Classification : \u6a21\u578b\u67091\u4e2a\u8f93\u51fa\uff0c\u4f1a\u6839\u636e\u8f93\u51fa\u6392\u5e8f\u8f93\u51fa\u5206\u6570\u7531\u9ad8\u81f3\u4f4e\u7684\u524d5\u4e2a\u3002 Detection : \u6a21\u578b\u67094\u4e2a\u8f93\u51fa\uff0c\u4f1a\u6839\u636e\u8f93\u51fa\u8f6c\u6362\u4e3a\u8f93\u5165\u56fe\u7247\u7684bbox\u4f4d\u7f6e\u4ee5\u53ca\u7c7b\u522b\u3002\u53ea\u652f\u6301SigmaStar\u540e\u5904\u7406\u7b97\u5b50 [SigmaStar\u540e\u5904\u7406\u6a21\u5757]\u3002\u5176\u4ed6\u540e\u5904\u7406\u8bf7\u4f7f\u7528Unknown\u3002 Unknown : \u6a21\u578b\u8f93\u51fa\u4e0d\u5c5e\u4e8e\u4e0a\u8ff0\u4e24\u79cd\u7c7b\u578b\uff0c\u4f1a\u8f93\u51fa\u5168\u90e8\u7684Tensor\u6570\u503c\u3002 -c/--category \u7684\u53c2\u6570\u9009\u62e9Unknown\u65f6\uff0c\u5f53input_config.ini\u4e2d[OUTPUT_CONFIG]\u7684dequantizations\u4e3a'TRUE'\u65f6\uff0c\u4f1a\u5728\u8f6c\u6362Fixed\u6a21\u578b\u65f6\u5728\u589e\u52a0Fix2float\u7b97\u5b50\uff0c\u8be5\u7b97\u5b50\u4f1a\u8f6c\u6362\u5b9a\u70b9\u6570\u636e\u5230\u6d6e\u70b9\u6570\u636e\uff0c\u5b9a\u70b9\u548c\u79bb\u7ebf\u6a21\u578b\u7684\u8f93\u51faTensor\u7ef4\u5ea6\u4e0e\u6a21\u578b\u7ef4\u5ea6\u76f8\u540c \u2463 -t , --type : \u6a21\u578b\u7684\u6570\u636e\u7c7b\u578b\u3002 \u4f7f\u7528\u987b\u77e5 Float : \u6d6e\u70b9\u6a21\u578b\u3002 Fixed : \u5b9a\u70b9\u5728\u7ebf\u6a21\u578b\u3002 Offline : \u5b9a\u70b9\u79bb\u7ebf\u6a21\u578b\u3002 (2) \u53ef\u9009\u53c2\u6570 \u2460 -l , --label : \u6570\u636e\u96c6\u7684\u6807\u7b7e\u6587\u4ef6\u8def\u5f84 / \u56fe\u7247\u6587\u5b57\u63cf\u8ff0\u7684\u6807\u7b7e\u3002 \u4f7f\u7528\u987b\u77e5 \u5f53 -l/--label \u7684\u53c2\u6570\u4e3a\u6570\u636e\u96c6\u6807\u7b7e\u6587\u4ef6\u8def\u5f84\u65f6\u5fc5\u987b\u4f7f\u7528\u53ef\u9009\u53c2\u6570--num_process\uff0c\u6570\u636e\u96c6\u9a8c\u8bc1\u652f\u6301ImageNet\uff08Top1\u3001Top5\uff09\u3001COCO\u76ee\u6807\u68c0\u6d4b(mmAP)\uff1b \u5f53 -l/--label \u53c2\u6570\u4e3a\u56fe\u7247\u6587\u5b57\u63cf\u8ff0\u6807\u7b7e\u65f6\uff0c\u4e0d\u80fd\u4f7f\u7528\u9009\u9879--num_process\u3002 \u2461 -n , --preprocess : \u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u8be6\u89c1 Calibrator:\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5 \u3002 \u4f7f\u7528\u987b\u77e5 \u4e0d\u52a0 -n/--preprocess \u53c2\u6570\u65f6\uff0c -i/--image \u4e0d\u80fd\u7ed9\u56fe\u7247\u6216\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\u3002\u4e0d\u52a0\u8be5\u53c2\u6570\uff0c\u56fe\u7247\u53c2\u6570\u9700\u8981\u7ed9\u539f\u59cb\u6570\u636e\uff0c\u53ef\u91c7\u7528 --save_input \u4fdd\u5b58\u56fe\u7247\u6570\u636e\u540e\uff0c\u6839\u636e\u8be5\u683c\u5f0f\u5236\u5b9a\u5176\u4ed6\u7684\u539f\u59cb\u6570\u636e\u3002 \u4e5f\u53ef\u4ee5\u5b8c\u6210\u524d\u5904\u7406\u6587\u4ef6\u914d\u7f6e\u540e\uff0c\u7ed9\u5b9a\u524d\u5904\u7406\u6587\u4ef6\u8def\u5f84\u3002 \u82e5\u6a21\u578b\u4e3a \u591a\u8f93\u5165 \u65f6\uff0c -n,--preprocess \u53c2\u6570\u7528\u6cd5\u9700\u8981\u591a\u4e2a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4f8b\u5982 -n preprocess1.py,preprocess2.py \u6216\u8005 --preprocess preprocess1.py,preprocess2.py \u2462 --tool : sgs_simulator\u6587\u4ef6\u8def\u5f84\u3002 \u4f7f\u7528\u987b\u77e5 simulator\u5de5\u5177\u4f1a\u5bfb\u627e\u7cfb\u7edf\u53d8\u91cf\u4ece\u800c\u83b7\u5f97\u5bf9\u5e94\u9636\u6bb5\u4efb\u52a1\u6240\u9700\u5de5\u5177\u8def\u5f84\uff0c\u56e0\u6b64\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u53c2\u6570-t/--tool\u4e0d\u7528\u6307\u5b9a\u76f8\u5173\u5de5\u5177\u7684\u4f4d\u7f6e\u3002 \u2463 --skip_garbage : Fixed\u548cOffline\u6a21\u578b\u8f93\u51fa\u7ed3\u679c\u8df3\u8fc7\u65e0\u7528\u6570\u636e\u3002 \u2464 --dump_rawdata : \u4fdd\u5b58Fixed\u548cOffline\u6a21\u578b\u8f93\u5165\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u6587\u4ef6\u540d\u4e3a\u56fe\u7247\u540d + .bin\uff0c\u4fdd\u5b58\u5728\u5f53\u524d\u8def\u5f84\u3002 \u2465 --num_process : \u8fdb\u7a0b\u6570\uff0c\u540c\u65f6\u8fd0\u884c\u7684\u8fdb\u7a0b\u6570\u3002 \u4f7f\u7528\u987b\u77e5 \u4e0d\u52a0\u8be5\u53c2\u6570\u9ed8\u8ba4\u4e3a\u5355\u7ebf\u7a0b\u3002 \u9a8c\u8bc1\u6570\u636e\u96c6\u5fc5\u987b\u52a0\u6b64\u53c2\u6570\u4e14\u8fdb\u7a0b\u6570 > 1\u3002 \u2466 --draw_result : \u7ed8\u5236\u76ee\u6807\u68c0\u6d4b\u7f51\u7edc\u9009\u6846\u7ed3\u679c\u3002 \u4f7f\u7528\u987b\u77e5 \u53c2\u6570\u4e3a\u7ed3\u679c\u4fdd\u5b58\u6587\u4ef6\u5939\u8def\u5f84\uff08\u6587\u4ef6\u5939\u4e0d\u5b58\u5728\u4f1a\u81ea\u52a8\u521b\u5efa\uff09\u548c\u753b\u6846\u7684\u9608\u503c\uff0c\u4f7f\u7528\u9017\u53f7( , )\u5206\u9694\u4fdd\u5b58\u8def\u5f84\u4e0e\u9608\u503c\u3002 \u8f93\u5165\u9608\u503c\u753b\u51fa\u5927\u4e8e\u9608\u503c\u7684\u68c0\u6d4b\u7ed3\u679c\uff0c\u4e0d\u8f93\u5165\u9608\u503c\u5219\u753b\u51fa\u5168\u90e8\u68c0\u6d4b\u7ed3\u679c\u3002 \u2467 --continue_run : \u63a5\u7740\u4e0a\u6b21\u6570\u636e\u96c6\u5269\u4e0b\u7684\u90e8\u5206\u8fd0\u884c\u3002 \u2468 --save_input : \u4fdd\u5b58simulator \u524d\u5904\u7406\u540e\u7684\u6587\u4ef6\uff0c\u9ed8\u8ba4\u4e0d\u4fdd\u5b58\u3002\u6587\u4ef6\u4e3a\u6587\u672c\u6587\u4ef6\uff0c\u4f1a\u5728\u8fd0\u884c\u8def\u5f84\u4e0b\u521b\u5efa\u6587\u4ef6\u5939tmp_image\uff0c\u6587\u4ef6\u4fdd\u5b58\u5728 ./tmp_image/imagename \u56fe\u7247\u540d\u3002 5.2. calibrator_custom.simulator\u7b80\u4ecb \u00b6 (1) calibrator_custom.simulator\u662f\u57fa\u4e8ePython\u7684\u5feb\u901f\u91cf\u5316\u548c\u8f6c\u6362\u6a21\u578b\u7684\u6a21\u5757\u3002 (2) \u7528calibrator_custom.simulator\u53ef\u4ee5\u66f4\u65b9\u4fbf\u7075\u6d3b\u7684\u5bf9\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u8fdb\u884c\u91cf\u5316\u548c\u8f6c\u6362\u3002 (3) calibrator_custom.simulator\u5305\u542b3\u79cd\uff0c\u7528\u4e8e\u89e3\u6790\u4e0d\u540c\u9636\u6bb5\u7684\u6a21\u578b\u3002 \u2460 calibrator_custom.float_simulator \u7528\u4e8e\u89e3\u6790float\u6a21\u578b \u2461 calibrator_custom.fixed_simulator \u7528\u4e8e\u89e3\u6790fixed\u6a21\u578b \u2462 calibrator_custom.offline_simulator \u7528\u4e8e\u89e3\u6790offline\u6a21\u578b 5.3 calibrator_custom.simulator\u5de5\u5177\u4f7f\u7528\u8bf4\u660e \u00b6 5.3.1 calibrator_custom.simulator\u4f7f\u7528\u793a\u4f8b \u00b6 \u4e0b\u9762\u57fa\u4e8ecalibrator_custom.float_simulator\uff0c\u8bf4\u660e\u4f7f\u7528\u65b9\u6cd5\u548c\u76f8\u5173API\u63a5\u53e3\uff1a import calibrator_custom model_path = './mobilenet_v2_float.sim' model = calibrator_custom . float_simulator ( model_path ) \u4f7f\u7528\u987b\u77e5 \u4f7f\u7528calibrator_custom.float_simulator\u65f6\uff0c\u9700\u8981\u7ed9\u5b9afloat.sim\u6a21\u578b\u7684\u8def\u5f84\uff0c\u7528\u4e8e\u521b\u5efafloat_simulator\u7684\u5b9e\u4f8b\u3002\u53c2\u6570\u7ed9\u5b9a\u9519\u8bef\uff0c\u5c06\u65e0\u6cd5\u6210\u529f\u521b\u5efafloat_simulator\u5b9e\u4f8b\uff0c\u5e76\u8fd4\u56deValueError\u3002 5.3.2 calibrator_custom.simulator\u65b9\u6cd5 \u00b6 (1) get_input_details : \u8fd4\u56de\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u4fe1\u606f\uff0c\u4ee5list\u5f62\u5f0f\u8fd4\u56de\u3002 \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578b\u8f93\u5165\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a index : \u8f93\u5165Tensor\u5e8f\u53f7 name : \u8f93\u5165Tensor\u540d\u79f0 shape : \u8f93\u5165Tensor\u7684\u5f62\u72b6 dtype : \u8f93\u5165Tensor\u7684\u6570\u636e\u7c7b\u578b input_formats : \u7f51\u7edc\u6a21\u578b\u5b9e\u9645\u8fd0\u884c\u65f6\u7684\u56fe\u7247\u8f93\u5165\u683c\u5f0f training_input_formats : \u7f51\u7edc\u6a21\u578b\u8bad\u7ec3\u662f\u7684\u56fe\u7247\u8f93\u5165\u683c\u5f0f \u2460 Float\u6a21\u578b\u8fd4\u56de\u5982\u4e0b\uff1a input_details = model . get_input_details () print ( input_details ) [ { 'name' : 'sub_7' , 'shape' : array ([ 1 , 513 , 513 , 3 ], dtype = int32 ), 'dtype' : < class ' numpy . float32 '>, 'index' : 0 } ] \u2461 Fixed\u548cOffline\u6a21\u578b\u8fd4\u56de\u5982\u4e0b\uff1a >>> input_details = model . get_input_details () >>> print ( input_details ) [ { 'index' : 0 , 'shape' : array ([ 1 , 513 , 513 , 3 ]), 'dtype' : < class ' numpy . uint8 '>, 'name' : 'sub_7' , 'input_formats' : 'RGB' , 'training_input_formats' : 'RGB' } ] (2) get_output_detail : \u8fd4\u56de\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u4fe1\u606f\uff0c\u4ee5list\u5f62\u5f0f\u8fd4\u56de\u3002 \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578b\u8f93\u5165\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a index : \u8f93\u51faTensor\u5e8f\u53f7 name : \u8f93\u51faTensor\u540d\u79f0 shape : \u8f93\u51faTensor\u7684\u5f62\u72b6 dtype : \u8f93\u51faTensor\u7684\u6570\u636e\u7c7b\u578b input_formats : \u7f51\u7edc\u6a21\u578b\u5b9e\u9645\u8fd0\u884c\u65f6\u7684\u56fe\u7247\u8f93\u51fa\u683c\u5f0f training_input_formats : \u7f51\u7edc\u6a21\u578b\u8bad\u7ec3\u662f\u7684\u56fe\u7247\u8f93\u51fa\u683c\u5f0f quantization : \u8f93\u51faTensor\u7684scale\u548czero_point\uff08\u9700\u5c06\u6a21\u578b\u8f93\u51faTensor\u4e58scale\u5f97\u5230\u6d6e\u70b9\u6570\uff09\u3002 \u5982\u679cinput_config.ini\u914d\u7f6e dequantizations \u4e3aTRUE\uff0c\u751f\u6210\u7684\u6a21\u578b\u5bf9\u5e94\u8f93\u51fa\u4f1a\u589e\u52a0Fix2Float\u7b97\u5b50\uff0c\u8f93\u51fa\u6570\u636e\u7c7b\u578b\u4e3afloat32\uff0cget_output_details\u4e0d\u518d\u8fd4\u56de quantization \u3002 \u2460 Float\u6a21\u578b\u8fd4\u56de\u5982\u4e0b\uff1a >>> output_details = model . get_output_details () >>> print ( output_details ) [ { 'name' : 'MobilenetV2/Conv/Conv2D' , 'shape' : array ([ 1 , 257 , 257 , 30 ], dtype = int32 ), 'dtype' : < class ' numpy . float32 '>, 'index' : 0 } ] \u2461 Fixed\u548cOffline\u6a21\u578b\u8fd4\u56de\u5982\u4e0b\uff1a >>> output_details = model . get_output_details () >>> print ( output_details ) [ { 'index' : 0 , 'shape' : array ([ 1 , 257 , 257 , 30 ]), 'name' : 'MobilenetV2/Conv/Conv2D' , 'dtype' : < class ' numpy . int16 '>, 'quantization' : ( 0.00013832777040079236 , 0 ) } ] (3) set_input : \u8bbe\u7f6e\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u6570\u636e >>> model . set_input ( 0 , img_data ) \u4f7f\u7528\u987b\u77e5 0\u4e3a\u8f93\u5165Tensor\u7684index\uff1b \u8f93\u5165\u6570\u636e\u53ef\u4ee5\u5728get_input_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230\uff1b img_data\u662f\u4e0emodel\u8f93\u5165shape\u548cdtype\u76f8\u540c\u7684numpy.ndarray\u683c\u5f0f\u6570\u636e\uff0c\u9519\u8bef\u7684shape\u6216dtype\uff0c\u5c06\u5bfc\u81f4set_input\u8fd4\u56deValueError\uff1b \u5982\u679c\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u53ef\u4ee5\u591a\u6b21\u8c03\u7528set_input\uff0c\u6839\u636eget_input_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230index\u8bbe\u7f6e\u5bf9\u5e94Tensor\u7684\u8f93\u5165\u6570\u636e\u3002 (4) invoke : \u6a21\u578b\u8fd0\u884c\u4e00\u6b21 >>> model . invoke () \u4f7f\u7528\u987b\u77e5 \u8c03\u7528invoke\u524d\u8bf7\u5148\u4f7f\u7528set_input\u8bbe\u7f6e\u8f93\u5165\u6570\u636e\uff0c\u672a\u8c03\u7528set_input\u76f4\u63a5\u8c03\u7528invoke\u4f1a\u8fd4\u56deValueError\u3002 (5) get_output : \u83b7\u53d6\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u6570\u636e >>> result = model . get_output ( 0 ) \u4f7f\u7528\u987b\u77e5 0\u4e3a\u8f93\u51faTensor\u7684index; \u8f93\u51fa\u6570\u636e\u53ef\u4ee5\u5728get_output_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230\uff0c\u8fd4\u56denumpy.ndarray\u683c\u5f0f\u8f93\u51fa\u6570\u636e\u3002 \u5982\u679c\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u51fa\uff0c\u53ef\u4ee5\u591a\u6b21\u8c03\u7528get_output\uff0c\u6839\u636eget_output_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230index\u83b7\u53d6\u5bf9\u5e94Tensor\u7684\u8f93\u51fa\u6570\u636e\u3002 \u5047\u8bbe\u6a21\u578b\u8f93\u51fa\u7684shape\u4e3a[1, 257, 257, 30],Float\u6a21\u578b\u67e5\u770b\u7ed3\u679c\u7684shape: >>> print ( result . shape ) ( 1 , 257 , 257 , 30 ) (6) get_tensor_details : \u8fd4\u56de\u7f51\u7edc\u6a21\u578b\u6bcf\u4e2aTensor\u7684\u4fe1\u606f\uff08list\uff09 \u2460 Float\u6a21\u578b\u8fd4\u56de\u5982\u4e0b\uff1a \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578bTensor\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a name : Tensor\u540d\u79f0 shape : Tensor\u7684\u5f62\u72b6 dtype : Tensor\u7684\u6570\u636e\u7c7b\u578b qtype : \u5b9a\u70b9\u6a21\u578b\u8be5Tensor\u53ef\u80fd\u7684\u6570\u636e\u7c7b\u578b\uff08quantization type\uff09 >>> tensor_details = model . get_tensor_details () >>> print ( tensor_details ) [ { 'name' : 'MobilenetV2/Conv/Conv2D' , 'shape' : array ([ 1 , 257 , 257 , 30 ], dtype = int32 ), 'dtype' : 'FLOAT32' , 'qtype' : 'INT16' }, { 'name' : 'MobilenetV2/Conv/Conv2D_bias' , 'shape' : array ( [ 2 , 30 ], dtype = int32 ), 'dtype' : 'FLOAT32' , 'qtype' : 'INT16' }, { 'name' : 'MobilenetV2/Conv/weights/read' , 'shape' : array ( [ 30 , 3 , 3 , 3 ], dtype = int32 ), 'dtype' : 'FLOAT32' , 'qtype' : 'INT8' }, { 'name' : 'sub_7' , 'shape' : array ([ 1 , 513 , 513 , 3 ], dtype = int32 ), 'dtype' : 'FLOAT32' , 'qtype' : 'UINT8' } ] \u2461 Fixed\u548cOffline\u6a21\u578b\u5982\u679cinput_config.ini\u4e2d[OUTPUT_CONFIG]\u7684dequantizations\u914d\u7f6e\u4e3aFALSE\u65f6\u8fd4\u56de\u5982\u4e0b\uff1a \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578bTensor\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a name : Tensor\u540d\u79f0 shape : Tensor\u7684\u5f62\u72b6 dtype : Tensor\u7684\u6570\u636e\u7c7b\u578b quantization : Tensor\u7684scale\u548czero_point min : Tensor\u7684\u6700\u5c0f\u503c max : Tensor\u7684\u6700\u5927\u503c >>> tensor_details = model . get_tensor_details () >>> print ( tensor_details ) [ { 'shape' : array ([ 1 , 257 , 257 , 30 ]), 'quantization' : [( 0.00013832777040079236 , 0 )], 'min' : [ - 4.230099201202393 ], 'max' : [ 4.532586097717285 ], 'name' : 'MobilenetV2/Conv/Conv2D' , 'dtype' : 'INT16' }, { 'shape' : array ([ 2 , 30 ]), 'quantization' : [], 'min' : [ 0.0 ], 'max ' : [ 1.0 ], 'name' : 'MobilenetV2/Conv/Conv2D_bias' , 'dtype' : 'INT16' }, { 'shape' : array ([ 30 , 3 , 3 , 3 ]), 'quantization' : [( 0.004813921172171831 , 0 )], 'min' : [ - 0.5498989820480347 ], 'max' : [ 0.6113680005073547 ], 'name' : 'MobilenetV2/Conv/weights/read' , 'dtype' : 'INT8' }, { 'shape' : array ([ 1 , 513 , 513 , 3 ]), 'quantization' : [( 0.007843137718737125 , 128 )], 'min' : [ - 1 . 0 ], 'max' : [ 1.0 ], 'name' : 'sub_7' , 'dtype' : 'UINT8' } ] \u4f7f\u7528\u987b\u77e5 \u914d\u7f6einput_config.ini\u4e2d[OUTPUT_CONFIG]\u7684dequantizations\u4e3aTRUE\u65f6\uff0c\u4f1a\u5728\u8f6c\u6362Fixed\u6a21\u578b\u65f6\u5728\u589e\u52a0Fix2float\u7b97\u5b50\uff0c\u8be5\u7b97\u5b50\u4f1a\u8f6c\u6362\u5b9a\u70b9\u6570\u636e\u5230\u6d6e\u70b9\u6570\u636e\uff0c\u56e0\u6b64model.get_tensor_details()\u5c06\u4e0d\u518d\u6709'quantization'\u4fe1\u606f\u3002 5.3.3 calibrator_custom.SIM_Simulator \u00b6 (1) calibrator_custom.SIM_Simulator\u7b80\u4ecb \u5bf9\u4e8e\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u540c\u65f6\u8f6c\u6362\u65f6\uff0c\u63d0\u4f9bcalibrator_custom.SIM_Simulator\uff0c\u65b9\u4fbf\u8fdb\u884c\u7b80\u5355\u5b9a\u4e49\u540e\uff0c\u7edf\u4e00\u8fd0\u884c\u3002calibrator_custom.SIM_Simulator\u662f\u5df2\u7ecf\u5b9e\u73b0\u597d\u7684class\uff0c\u5f53\u4e2d\u53ea\u6709forward\u65b9\u6cd5\u672a\u5b9e\u73b0\uff0c\u4f7f\u7528\u65f6\u4ec5\u9700\u5b9e\u73b0\u8be5\u65b9\u6cd5\uff0c\u5373\u53ef\u8f6c\u6362\u5b8c\u6210\u3002 (2) calibrator_custom.SIM_Simulator\u4f7f\u7528\u65b9\u6cd5 \u4e0b\u9762\u4ee5 SGS_IPU_SDK/Scripts/examples/sim_simulator.py \u4e3a\u4f8b\uff0c\u8bf4\u660ecalibrator_custom.SIM_Simulator\u7684\u4f7f\u7528\u65b9\u6cd5\uff1a \u2460 \u5b9a\u4e49forward\u65b9\u6cd5\uff1a import calibrator_custom class Net ( calibrator_custom . SIM_Simulator ): def __init__ ( self ): super () . __init__ () self . model = calibrator_custom . fixed_simulator ( model_path ) def forward ( self , x ): out_details = self . model . get_output_details () self . model . set_input ( 0 , x ) self . model . invoke () result_list = [] for idx in range ( len ( out_details )): result = self . model . get_output ( idx ) # for Fixed and Offline model if out_details [ idx ][ 'dtype' ] == np . int16 : scale , _ = out_details [ idx ][ 'quantization' ] result = np . dot ( result , scale ) result_list . append ( result ) return result_list \u4f7f\u7528\u987b\u77e5 forward\u7684\u53c2\u6570\u4e3a\u6a21\u578b\u8f93\u5165\uff0c\u5982\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u53ef\u589e\u52a0forward\u7684\u53c2\u6570\u3002 \u2461 \u521b\u5efacalibrator_custom.SIM_Simulator\u7684\u5b9e\u4f8b net = Net () \u2462 \u8c03\u7528calibrator_custom.SIM_Simulator\u5b9e\u4f8b\u7684\u65b9\u6cd5 result = net ( img_gen , num_process = 4 ) \u4f7f\u7528\u987b\u77e5 \u8c03\u7528calibrator_custom.SIM_Simulator\u5b9e\u4f8b\uff0c\u9700\u8981\u7ed9\u5b9a\u8f93\u5165\u56fe\u7247\u7684numpy.ndarray\u6216\u8005\u56fe\u7247\u751f\u6210\u5668\u3002 \u5f53num_process\u5927\u4e8e1\u65f6\uff0cimg_gen\u5fc5\u987b\u4e3a\u56fe\u7247\u751f\u6210\u5668\u3002 \u56fe\u7247\u751f\u6210\u5668(img_gen): \u4e3a\u65b9\u4fbf\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u8f6c\u6362\u6a21\u578b\uff0c\u901a\u8fc7\u751f\u6210\u5668\u65b9\u4fbf\u7ec4\u7ec7\u8f93\u5165\u56fe\u7247\u7684\u5e8f\u5217\u3002\u5982\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u751f\u6210\u5668\u5e94\u8be5\u6309\u7167\u5b9a\u4e49forward\u65f6\u7684\u8f93\u5165\u987a\u5e8f\uff0c\u8fd4\u56de\u6709\u591a\u4e2anumpy.ndarray\u7684list\u3002 calibrator_custom.utils.image_preprocess_func\u4f7f\u7528\u9884\u5148\u5b9a\u4e49\u597d\u7684\u524d\u5904\u7406\u65b9\u6cd5,\u83b7\u53d6img_gen\u3002 preprocess_func = calibrator_custom . utils . image_preprocess_func ( model_name ) def image_generator ( folder_path , preprocess_func , norm ): images = [ os . path . join ( folder_path , img ) for img in os . listdir ( folder_path )] for image in images : img = preprocess_func ( image , norm ) yield [ img ] img_gen = image_generator ( './images' , preprocess_func , False )","title":"5.  Simulator"},{"location":"module/User_Guide/IPU230/Simulate.html#51-simulator","text":"SimulatorTool \u8bf4\u660e \u5de5\u5177\u4f4d\u7f6e SGS_IPU_SDK/Scripts/calibrator/simulator.py \u5de5\u5177\u4f5c\u7528 \u5bf9SigmaStar\u6d6e\u70b9/\u5b9a\u70b9/\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u9a8c\u8bc1 \u4f7f\u7528\u987b\u77e5 \u2460 \u652f\u6301\u5bf9\u5206\u7c7b\u7f51\u7edc\u6570\u636e\u96c6\u9a8c\u8bc1 ILSVRC \u2461 \u652f\u6301\u5bf9\u68c0\u6d4b\u7f51\u7edc\u6570\u636e\u96c6\u9a8c\u8bc1\uff08\u652f\u6301COCO\u6570\u636e\u96c6\uff09 COCO2017 \u2462 \u652f\u6301\u5bf9\u5355\u5f20\u56fe\u7247\u9884\u6d4b image \u2463 \u652f\u6301\u7ed8\u5236\u5355\u5f20\u56fe\u7247\u76ee\u6807\u68c0\u6d4b\u7ed3\u679c \u2461 simulator\u5de5\u5177\u6bcf\u6b21\u8fd0\u884c\u7ed3\u675f\u540e\u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u521b\u5efalog\u76ee\u5f55\uff0clog\u76ee\u5f55\u4e0b\u7684output\u6587\u4ef6\u5939\uff0c\u5b58\u653e\u6a21\u578b\u63a8\u6f14\u7684\u7ed3\u679c\u3002 \u5728SGS_IPU_SDK \u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK source cfg_env.sh","title":"5.1. Simulator\u7b80\u4ecb"},{"location":"module/User_Guide/IPU230/Simulate.html#52-simulator","text":"","title":"5.2 Simulator\u5de5\u5177\u4f7f\u7528\u8bf4\u660e"},{"location":"module/User_Guide/IPU230/Simulate.html#521-simulator","text":"\u8fdb\u5165\u5230\u8be5\u5de5\u5177\u76ee\u5f55\uff0c\u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a (1) \u6d4b\u8bd5ILSVRC\u6570\u636e\u96c6\uff0c\u5e76\u8fd4\u56de\u6a21\u578b\u7cbe\u5ea6\u7ed3\u679c\uff1a python3 simulator.py \\ -i ~/SGS_Models/resource/classify/ilsvrc2012_val_set100/ \\ -m ~/SGS_Models/tensorflow/mobilenet_v2/mobilenet_v2_float.sim \\ -l ~/SGS_Models/resource/classify/tensorflow_labels.txt \\ -c Classification \\ -t Float \\ -n mobilenet_v2 \\ --num_process 20 \u6216\u8005\u53ef\u4ee5\u4f7f\u7528\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\uff1a python3 simulator.py \\ -i ~/SGS_Models/resource/classify/ilsvrc2012_val_set100/file.list \\ -m ~/SGS_Models/tensorflow/mobilenet_v2/mobilenet_v2_float.sim \\ -l ~/SGS_Models/resource/classify/tensorflow_labels.txt \\ -c Classification \\ -t Float \\ -n mobilenet_v2 \\ --num_process 20 (2) \u6d4b\u8bd5COCO2017\u6570\u636e\u96c6\uff0c\u5e76\u8fd4\u56de\u6a21\u578b\u68c0\u6d4b\u7ed3\u679c\uff1a python3 simulator.py \\ -i ~/SGS_Models/resource/detection/coco2017_val_set100 \\ -m ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1_float.sim \\ -l ~/SGS_Models/resource/detection/coco2017_val_set100.json \\ -c Detection \\ -t Float \\ -n ssd_mobilenet_v1 \\ --num_process 10 \u6216\u8005\u53ef\u4ee5\u4f7f\u7528\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\uff1a python3 simulator.py \\ -i ~/SGS_Models/resource/detection/coco2017_val_set100/file.list \\ -m ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1_float.sim \\ -l ~/SGS_Models/resource/detection/coco2017_val_set100.json \\ -c Detection \\ -t Float \\ -n ssd_mobilenet_v1 \\ --num_process 10 (3) \u6d4b\u8bd5\u5355\u5f20\u56fe\u7247\uff0c\u5e76\u5c06\u68c0\u6d4b\u7ed3\u679c\u7ed8\u5236\u5728\u56fe\u7247\u4e0a\uff0c\u4fdd\u5b58\u5230 ./results/ \u6587\u4ef6\u5939\u4e0b\uff1a python3 simulator.py \\ -i ~/SGS_Models/resource/detection/coco2017_val_set100/000000567877.jpg \\ -m ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1_float.sim \\ -c Detection \\ -t Float \\ -n ssd_mobilenet_v1 \\ --draw_result ./results","title":"5.2.1 Simulator\u5de5\u5177\u4f7f\u7528\u793a\u4f8b"},{"location":"module/User_Guide/IPU230/Simulate.html#522-simulator","text":"(1) \u5fc5\u9009\u53c2\u6570 \u2460 -i , --image : \u56fe\u7247\u6587\u4ef6 / \u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84 / \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u3002 \u4f7f\u7528\u987b\u77e5 \u4e0d\u52a0\u53ef\u9009\u53c2\u6570 -n/--preprocess \u65f6\uff0c -i/--image \u4e0d\u80fd\u7ed9\u56fe\u7247\u6216\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\u3002 -i/--image \u53c2\u6570\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\u65f6\uff1a \u7f51\u7edc\u6a21\u578b\u4e3a\u5355\u8f93\u5165\u65f6\uff1a~/SGS_IPU_SDK/image_test/2007000364.jpg \u7f51\u7edc\u6a21\u578b\u4e3a\u591a\u8f93\u5165\u65f6\uff1a /SGS_IPU_SDK/image_test/2007000364.jpg, /SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp \u5f53 -i/--image \u7684\u53c2\u6570\u4e3a\u5355\u5f20\u56fe\u7247\u7684\u8def\u5f84\u65f6\uff0csimulator\u53ea\u5bf9\u8be5\u56fe\u7247\u63a8\u6f14\uff1b \u5f53 -i/--image \u7684\u53c2\u6570\u4e3a\u56fe\u7247\u6587\u4ef6\u5939\u7684\u8def\u5f84\u65f6\uff0csimulator\u4f1a\u5bf9\u6587\u4ef6\u5939\u5185\u7684\u56fe\u7247\u5168\u90e8\u63a8\u6f14\uff0c\u6b64\u65f6\u589e\u52a0\u53ef\u9009\u53c2\u6570--num_process\uff08\u53c2\u6570 > 1\uff09\uff0c\u53ef\u4ee5\u5f00\u542f\u591a\u8fdb\u7a0b\u63a8\u6f14\u3002 \u2461 -m , --model : \u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 \u2462 -c , --category : \u6a21\u578b\u7684\u7c7b\u522b\uff0c\u4e3b\u8981\u6709Classification / Detection / Unknown\u3002 \u4f7f\u7528\u987b\u77e5 Classification : \u6a21\u578b\u67091\u4e2a\u8f93\u51fa\uff0c\u4f1a\u6839\u636e\u8f93\u51fa\u6392\u5e8f\u8f93\u51fa\u5206\u6570\u7531\u9ad8\u81f3\u4f4e\u7684\u524d5\u4e2a\u3002 Detection : \u6a21\u578b\u67094\u4e2a\u8f93\u51fa\uff0c\u4f1a\u6839\u636e\u8f93\u51fa\u8f6c\u6362\u4e3a\u8f93\u5165\u56fe\u7247\u7684bbox\u4f4d\u7f6e\u4ee5\u53ca\u7c7b\u522b\u3002\u53ea\u652f\u6301SigmaStar\u540e\u5904\u7406\u7b97\u5b50 [SigmaStar\u540e\u5904\u7406\u6a21\u5757]\u3002\u5176\u4ed6\u540e\u5904\u7406\u8bf7\u4f7f\u7528Unknown\u3002 Unknown : \u6a21\u578b\u8f93\u51fa\u4e0d\u5c5e\u4e8e\u4e0a\u8ff0\u4e24\u79cd\u7c7b\u578b\uff0c\u4f1a\u8f93\u51fa\u5168\u90e8\u7684Tensor\u6570\u503c\u3002 -c/--category \u7684\u53c2\u6570\u9009\u62e9Unknown\u65f6\uff0c\u5f53input_config.ini\u4e2d[OUTPUT_CONFIG]\u7684dequantizations\u4e3a'TRUE'\u65f6\uff0c\u4f1a\u5728\u8f6c\u6362Fixed\u6a21\u578b\u65f6\u5728\u589e\u52a0Fix2float\u7b97\u5b50\uff0c\u8be5\u7b97\u5b50\u4f1a\u8f6c\u6362\u5b9a\u70b9\u6570\u636e\u5230\u6d6e\u70b9\u6570\u636e\uff0c\u5b9a\u70b9\u548c\u79bb\u7ebf\u6a21\u578b\u7684\u8f93\u51faTensor\u7ef4\u5ea6\u4e0e\u6a21\u578b\u7ef4\u5ea6\u76f8\u540c \u2463 -t , --type : \u6a21\u578b\u7684\u6570\u636e\u7c7b\u578b\u3002 \u4f7f\u7528\u987b\u77e5 Float : \u6d6e\u70b9\u6a21\u578b\u3002 Fixed : \u5b9a\u70b9\u5728\u7ebf\u6a21\u578b\u3002 Offline : \u5b9a\u70b9\u79bb\u7ebf\u6a21\u578b\u3002 (2) \u53ef\u9009\u53c2\u6570 \u2460 -l , --label : \u6570\u636e\u96c6\u7684\u6807\u7b7e\u6587\u4ef6\u8def\u5f84 / \u56fe\u7247\u6587\u5b57\u63cf\u8ff0\u7684\u6807\u7b7e\u3002 \u4f7f\u7528\u987b\u77e5 \u5f53 -l/--label \u7684\u53c2\u6570\u4e3a\u6570\u636e\u96c6\u6807\u7b7e\u6587\u4ef6\u8def\u5f84\u65f6\u5fc5\u987b\u4f7f\u7528\u53ef\u9009\u53c2\u6570--num_process\uff0c\u6570\u636e\u96c6\u9a8c\u8bc1\u652f\u6301ImageNet\uff08Top1\u3001Top5\uff09\u3001COCO\u76ee\u6807\u68c0\u6d4b(mmAP)\uff1b \u5f53 -l/--label \u53c2\u6570\u4e3a\u56fe\u7247\u6587\u5b57\u63cf\u8ff0\u6807\u7b7e\u65f6\uff0c\u4e0d\u80fd\u4f7f\u7528\u9009\u9879--num_process\u3002 \u2461 -n , --preprocess : \u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u8be6\u89c1 Calibrator:\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5 \u3002 \u4f7f\u7528\u987b\u77e5 \u4e0d\u52a0 -n/--preprocess \u53c2\u6570\u65f6\uff0c -i/--image \u4e0d\u80fd\u7ed9\u56fe\u7247\u6216\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\u3002\u4e0d\u52a0\u8be5\u53c2\u6570\uff0c\u56fe\u7247\u53c2\u6570\u9700\u8981\u7ed9\u539f\u59cb\u6570\u636e\uff0c\u53ef\u91c7\u7528 --save_input \u4fdd\u5b58\u56fe\u7247\u6570\u636e\u540e\uff0c\u6839\u636e\u8be5\u683c\u5f0f\u5236\u5b9a\u5176\u4ed6\u7684\u539f\u59cb\u6570\u636e\u3002 \u4e5f\u53ef\u4ee5\u5b8c\u6210\u524d\u5904\u7406\u6587\u4ef6\u914d\u7f6e\u540e\uff0c\u7ed9\u5b9a\u524d\u5904\u7406\u6587\u4ef6\u8def\u5f84\u3002 \u82e5\u6a21\u578b\u4e3a \u591a\u8f93\u5165 \u65f6\uff0c -n,--preprocess \u53c2\u6570\u7528\u6cd5\u9700\u8981\u591a\u4e2a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4f8b\u5982 -n preprocess1.py,preprocess2.py \u6216\u8005 --preprocess preprocess1.py,preprocess2.py \u2462 --tool : sgs_simulator\u6587\u4ef6\u8def\u5f84\u3002 \u4f7f\u7528\u987b\u77e5 simulator\u5de5\u5177\u4f1a\u5bfb\u627e\u7cfb\u7edf\u53d8\u91cf\u4ece\u800c\u83b7\u5f97\u5bf9\u5e94\u9636\u6bb5\u4efb\u52a1\u6240\u9700\u5de5\u5177\u8def\u5f84\uff0c\u56e0\u6b64\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u53c2\u6570-t/--tool\u4e0d\u7528\u6307\u5b9a\u76f8\u5173\u5de5\u5177\u7684\u4f4d\u7f6e\u3002 \u2463 --skip_garbage : Fixed\u548cOffline\u6a21\u578b\u8f93\u51fa\u7ed3\u679c\u8df3\u8fc7\u65e0\u7528\u6570\u636e\u3002 \u2464 --dump_rawdata : \u4fdd\u5b58Fixed\u548cOffline\u6a21\u578b\u8f93\u5165\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u6587\u4ef6\u540d\u4e3a\u56fe\u7247\u540d + .bin\uff0c\u4fdd\u5b58\u5728\u5f53\u524d\u8def\u5f84\u3002 \u2465 --num_process : \u8fdb\u7a0b\u6570\uff0c\u540c\u65f6\u8fd0\u884c\u7684\u8fdb\u7a0b\u6570\u3002 \u4f7f\u7528\u987b\u77e5 \u4e0d\u52a0\u8be5\u53c2\u6570\u9ed8\u8ba4\u4e3a\u5355\u7ebf\u7a0b\u3002 \u9a8c\u8bc1\u6570\u636e\u96c6\u5fc5\u987b\u52a0\u6b64\u53c2\u6570\u4e14\u8fdb\u7a0b\u6570 > 1\u3002 \u2466 --draw_result : \u7ed8\u5236\u76ee\u6807\u68c0\u6d4b\u7f51\u7edc\u9009\u6846\u7ed3\u679c\u3002 \u4f7f\u7528\u987b\u77e5 \u53c2\u6570\u4e3a\u7ed3\u679c\u4fdd\u5b58\u6587\u4ef6\u5939\u8def\u5f84\uff08\u6587\u4ef6\u5939\u4e0d\u5b58\u5728\u4f1a\u81ea\u52a8\u521b\u5efa\uff09\u548c\u753b\u6846\u7684\u9608\u503c\uff0c\u4f7f\u7528\u9017\u53f7( , )\u5206\u9694\u4fdd\u5b58\u8def\u5f84\u4e0e\u9608\u503c\u3002 \u8f93\u5165\u9608\u503c\u753b\u51fa\u5927\u4e8e\u9608\u503c\u7684\u68c0\u6d4b\u7ed3\u679c\uff0c\u4e0d\u8f93\u5165\u9608\u503c\u5219\u753b\u51fa\u5168\u90e8\u68c0\u6d4b\u7ed3\u679c\u3002 \u2467 --continue_run : \u63a5\u7740\u4e0a\u6b21\u6570\u636e\u96c6\u5269\u4e0b\u7684\u90e8\u5206\u8fd0\u884c\u3002 \u2468 --save_input : \u4fdd\u5b58simulator \u524d\u5904\u7406\u540e\u7684\u6587\u4ef6\uff0c\u9ed8\u8ba4\u4e0d\u4fdd\u5b58\u3002\u6587\u4ef6\u4e3a\u6587\u672c\u6587\u4ef6\uff0c\u4f1a\u5728\u8fd0\u884c\u8def\u5f84\u4e0b\u521b\u5efa\u6587\u4ef6\u5939tmp_image\uff0c\u6587\u4ef6\u4fdd\u5b58\u5728 ./tmp_image/imagename \u56fe\u7247\u540d\u3002","title":"5.2.2   Simulator\u5de5\u5177\u4f7f\u7528\u53c2\u6570\u8bf4\u660e"},{"location":"module/User_Guide/IPU230/Simulate.html#52-calibrator_customsimulator","text":"(1) calibrator_custom.simulator\u662f\u57fa\u4e8ePython\u7684\u5feb\u901f\u91cf\u5316\u548c\u8f6c\u6362\u6a21\u578b\u7684\u6a21\u5757\u3002 (2) \u7528calibrator_custom.simulator\u53ef\u4ee5\u66f4\u65b9\u4fbf\u7075\u6d3b\u7684\u5bf9\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u8fdb\u884c\u91cf\u5316\u548c\u8f6c\u6362\u3002 (3) calibrator_custom.simulator\u5305\u542b3\u79cd\uff0c\u7528\u4e8e\u89e3\u6790\u4e0d\u540c\u9636\u6bb5\u7684\u6a21\u578b\u3002 \u2460 calibrator_custom.float_simulator \u7528\u4e8e\u89e3\u6790float\u6a21\u578b \u2461 calibrator_custom.fixed_simulator \u7528\u4e8e\u89e3\u6790fixed\u6a21\u578b \u2462 calibrator_custom.offline_simulator \u7528\u4e8e\u89e3\u6790offline\u6a21\u578b","title":"5.2. calibrator_custom.simulator\u7b80\u4ecb"},{"location":"module/User_Guide/IPU230/Simulate.html#53-calibrator_customsimulator","text":"","title":"5.3 calibrator_custom.simulator\u5de5\u5177\u4f7f\u7528\u8bf4\u660e"},{"location":"module/User_Guide/IPU230/Simulate.html#531-calibrator_customsimulator","text":"\u4e0b\u9762\u57fa\u4e8ecalibrator_custom.float_simulator\uff0c\u8bf4\u660e\u4f7f\u7528\u65b9\u6cd5\u548c\u76f8\u5173API\u63a5\u53e3\uff1a import calibrator_custom model_path = './mobilenet_v2_float.sim' model = calibrator_custom . float_simulator ( model_path ) \u4f7f\u7528\u987b\u77e5 \u4f7f\u7528calibrator_custom.float_simulator\u65f6\uff0c\u9700\u8981\u7ed9\u5b9afloat.sim\u6a21\u578b\u7684\u8def\u5f84\uff0c\u7528\u4e8e\u521b\u5efafloat_simulator\u7684\u5b9e\u4f8b\u3002\u53c2\u6570\u7ed9\u5b9a\u9519\u8bef\uff0c\u5c06\u65e0\u6cd5\u6210\u529f\u521b\u5efafloat_simulator\u5b9e\u4f8b\uff0c\u5e76\u8fd4\u56deValueError\u3002","title":"5.3.1 calibrator_custom.simulator\u4f7f\u7528\u793a\u4f8b"},{"location":"module/User_Guide/IPU230/Simulate.html#532-calibrator_customsimulator","text":"(1) get_input_details : \u8fd4\u56de\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u4fe1\u606f\uff0c\u4ee5list\u5f62\u5f0f\u8fd4\u56de\u3002 \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578b\u8f93\u5165\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a index : \u8f93\u5165Tensor\u5e8f\u53f7 name : \u8f93\u5165Tensor\u540d\u79f0 shape : \u8f93\u5165Tensor\u7684\u5f62\u72b6 dtype : \u8f93\u5165Tensor\u7684\u6570\u636e\u7c7b\u578b input_formats : \u7f51\u7edc\u6a21\u578b\u5b9e\u9645\u8fd0\u884c\u65f6\u7684\u56fe\u7247\u8f93\u5165\u683c\u5f0f training_input_formats : \u7f51\u7edc\u6a21\u578b\u8bad\u7ec3\u662f\u7684\u56fe\u7247\u8f93\u5165\u683c\u5f0f \u2460 Float\u6a21\u578b\u8fd4\u56de\u5982\u4e0b\uff1a input_details = model . get_input_details () print ( input_details ) [ { 'name' : 'sub_7' , 'shape' : array ([ 1 , 513 , 513 , 3 ], dtype = int32 ), 'dtype' : < class ' numpy . float32 '>, 'index' : 0 } ] \u2461 Fixed\u548cOffline\u6a21\u578b\u8fd4\u56de\u5982\u4e0b\uff1a >>> input_details = model . get_input_details () >>> print ( input_details ) [ { 'index' : 0 , 'shape' : array ([ 1 , 513 , 513 , 3 ]), 'dtype' : < class ' numpy . uint8 '>, 'name' : 'sub_7' , 'input_formats' : 'RGB' , 'training_input_formats' : 'RGB' } ] (2) get_output_detail : \u8fd4\u56de\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u4fe1\u606f\uff0c\u4ee5list\u5f62\u5f0f\u8fd4\u56de\u3002 \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578b\u8f93\u5165\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a index : \u8f93\u51faTensor\u5e8f\u53f7 name : \u8f93\u51faTensor\u540d\u79f0 shape : \u8f93\u51faTensor\u7684\u5f62\u72b6 dtype : \u8f93\u51faTensor\u7684\u6570\u636e\u7c7b\u578b input_formats : \u7f51\u7edc\u6a21\u578b\u5b9e\u9645\u8fd0\u884c\u65f6\u7684\u56fe\u7247\u8f93\u51fa\u683c\u5f0f training_input_formats : \u7f51\u7edc\u6a21\u578b\u8bad\u7ec3\u662f\u7684\u56fe\u7247\u8f93\u51fa\u683c\u5f0f quantization : \u8f93\u51faTensor\u7684scale\u548czero_point\uff08\u9700\u5c06\u6a21\u578b\u8f93\u51faTensor\u4e58scale\u5f97\u5230\u6d6e\u70b9\u6570\uff09\u3002 \u5982\u679cinput_config.ini\u914d\u7f6e dequantizations \u4e3aTRUE\uff0c\u751f\u6210\u7684\u6a21\u578b\u5bf9\u5e94\u8f93\u51fa\u4f1a\u589e\u52a0Fix2Float\u7b97\u5b50\uff0c\u8f93\u51fa\u6570\u636e\u7c7b\u578b\u4e3afloat32\uff0cget_output_details\u4e0d\u518d\u8fd4\u56de quantization \u3002 \u2460 Float\u6a21\u578b\u8fd4\u56de\u5982\u4e0b\uff1a >>> output_details = model . get_output_details () >>> print ( output_details ) [ { 'name' : 'MobilenetV2/Conv/Conv2D' , 'shape' : array ([ 1 , 257 , 257 , 30 ], dtype = int32 ), 'dtype' : < class ' numpy . float32 '>, 'index' : 0 } ] \u2461 Fixed\u548cOffline\u6a21\u578b\u8fd4\u56de\u5982\u4e0b\uff1a >>> output_details = model . get_output_details () >>> print ( output_details ) [ { 'index' : 0 , 'shape' : array ([ 1 , 257 , 257 , 30 ]), 'name' : 'MobilenetV2/Conv/Conv2D' , 'dtype' : < class ' numpy . int16 '>, 'quantization' : ( 0.00013832777040079236 , 0 ) } ] (3) set_input : \u8bbe\u7f6e\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u6570\u636e >>> model . set_input ( 0 , img_data ) \u4f7f\u7528\u987b\u77e5 0\u4e3a\u8f93\u5165Tensor\u7684index\uff1b \u8f93\u5165\u6570\u636e\u53ef\u4ee5\u5728get_input_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230\uff1b img_data\u662f\u4e0emodel\u8f93\u5165shape\u548cdtype\u76f8\u540c\u7684numpy.ndarray\u683c\u5f0f\u6570\u636e\uff0c\u9519\u8bef\u7684shape\u6216dtype\uff0c\u5c06\u5bfc\u81f4set_input\u8fd4\u56deValueError\uff1b \u5982\u679c\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u53ef\u4ee5\u591a\u6b21\u8c03\u7528set_input\uff0c\u6839\u636eget_input_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230index\u8bbe\u7f6e\u5bf9\u5e94Tensor\u7684\u8f93\u5165\u6570\u636e\u3002 (4) invoke : \u6a21\u578b\u8fd0\u884c\u4e00\u6b21 >>> model . invoke () \u4f7f\u7528\u987b\u77e5 \u8c03\u7528invoke\u524d\u8bf7\u5148\u4f7f\u7528set_input\u8bbe\u7f6e\u8f93\u5165\u6570\u636e\uff0c\u672a\u8c03\u7528set_input\u76f4\u63a5\u8c03\u7528invoke\u4f1a\u8fd4\u56deValueError\u3002 (5) get_output : \u83b7\u53d6\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u6570\u636e >>> result = model . get_output ( 0 ) \u4f7f\u7528\u987b\u77e5 0\u4e3a\u8f93\u51faTensor\u7684index; \u8f93\u51fa\u6570\u636e\u53ef\u4ee5\u5728get_output_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230\uff0c\u8fd4\u56denumpy.ndarray\u683c\u5f0f\u8f93\u51fa\u6570\u636e\u3002 \u5982\u679c\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u51fa\uff0c\u53ef\u4ee5\u591a\u6b21\u8c03\u7528get_output\uff0c\u6839\u636eget_output_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230index\u83b7\u53d6\u5bf9\u5e94Tensor\u7684\u8f93\u51fa\u6570\u636e\u3002 \u5047\u8bbe\u6a21\u578b\u8f93\u51fa\u7684shape\u4e3a[1, 257, 257, 30],Float\u6a21\u578b\u67e5\u770b\u7ed3\u679c\u7684shape: >>> print ( result . shape ) ( 1 , 257 , 257 , 30 ) (6) get_tensor_details : \u8fd4\u56de\u7f51\u7edc\u6a21\u578b\u6bcf\u4e2aTensor\u7684\u4fe1\u606f\uff08list\uff09 \u2460 Float\u6a21\u578b\u8fd4\u56de\u5982\u4e0b\uff1a \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578bTensor\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a name : Tensor\u540d\u79f0 shape : Tensor\u7684\u5f62\u72b6 dtype : Tensor\u7684\u6570\u636e\u7c7b\u578b qtype : \u5b9a\u70b9\u6a21\u578b\u8be5Tensor\u53ef\u80fd\u7684\u6570\u636e\u7c7b\u578b\uff08quantization type\uff09 >>> tensor_details = model . get_tensor_details () >>> print ( tensor_details ) [ { 'name' : 'MobilenetV2/Conv/Conv2D' , 'shape' : array ([ 1 , 257 , 257 , 30 ], dtype = int32 ), 'dtype' : 'FLOAT32' , 'qtype' : 'INT16' }, { 'name' : 'MobilenetV2/Conv/Conv2D_bias' , 'shape' : array ( [ 2 , 30 ], dtype = int32 ), 'dtype' : 'FLOAT32' , 'qtype' : 'INT16' }, { 'name' : 'MobilenetV2/Conv/weights/read' , 'shape' : array ( [ 30 , 3 , 3 , 3 ], dtype = int32 ), 'dtype' : 'FLOAT32' , 'qtype' : 'INT8' }, { 'name' : 'sub_7' , 'shape' : array ([ 1 , 513 , 513 , 3 ], dtype = int32 ), 'dtype' : 'FLOAT32' , 'qtype' : 'UINT8' } ] \u2461 Fixed\u548cOffline\u6a21\u578b\u5982\u679cinput_config.ini\u4e2d[OUTPUT_CONFIG]\u7684dequantizations\u914d\u7f6e\u4e3aFALSE\u65f6\u8fd4\u56de\u5982\u4e0b\uff1a \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578bTensor\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a name : Tensor\u540d\u79f0 shape : Tensor\u7684\u5f62\u72b6 dtype : Tensor\u7684\u6570\u636e\u7c7b\u578b quantization : Tensor\u7684scale\u548czero_point min : Tensor\u7684\u6700\u5c0f\u503c max : Tensor\u7684\u6700\u5927\u503c >>> tensor_details = model . get_tensor_details () >>> print ( tensor_details ) [ { 'shape' : array ([ 1 , 257 , 257 , 30 ]), 'quantization' : [( 0.00013832777040079236 , 0 )], 'min' : [ - 4.230099201202393 ], 'max' : [ 4.532586097717285 ], 'name' : 'MobilenetV2/Conv/Conv2D' , 'dtype' : 'INT16' }, { 'shape' : array ([ 2 , 30 ]), 'quantization' : [], 'min' : [ 0.0 ], 'max ' : [ 1.0 ], 'name' : 'MobilenetV2/Conv/Conv2D_bias' , 'dtype' : 'INT16' }, { 'shape' : array ([ 30 , 3 , 3 , 3 ]), 'quantization' : [( 0.004813921172171831 , 0 )], 'min' : [ - 0.5498989820480347 ], 'max' : [ 0.6113680005073547 ], 'name' : 'MobilenetV2/Conv/weights/read' , 'dtype' : 'INT8' }, { 'shape' : array ([ 1 , 513 , 513 , 3 ]), 'quantization' : [( 0.007843137718737125 , 128 )], 'min' : [ - 1 . 0 ], 'max' : [ 1.0 ], 'name' : 'sub_7' , 'dtype' : 'UINT8' } ] \u4f7f\u7528\u987b\u77e5 \u914d\u7f6einput_config.ini\u4e2d[OUTPUT_CONFIG]\u7684dequantizations\u4e3aTRUE\u65f6\uff0c\u4f1a\u5728\u8f6c\u6362Fixed\u6a21\u578b\u65f6\u5728\u589e\u52a0Fix2float\u7b97\u5b50\uff0c\u8be5\u7b97\u5b50\u4f1a\u8f6c\u6362\u5b9a\u70b9\u6570\u636e\u5230\u6d6e\u70b9\u6570\u636e\uff0c\u56e0\u6b64model.get_tensor_details()\u5c06\u4e0d\u518d\u6709'quantization'\u4fe1\u606f\u3002","title":"5.3.2   calibrator_custom.simulator\u65b9\u6cd5"},{"location":"module/User_Guide/IPU230/Simulate.html#533-calibrator_customsim_simulator","text":"(1) calibrator_custom.SIM_Simulator\u7b80\u4ecb \u5bf9\u4e8e\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u540c\u65f6\u8f6c\u6362\u65f6\uff0c\u63d0\u4f9bcalibrator_custom.SIM_Simulator\uff0c\u65b9\u4fbf\u8fdb\u884c\u7b80\u5355\u5b9a\u4e49\u540e\uff0c\u7edf\u4e00\u8fd0\u884c\u3002calibrator_custom.SIM_Simulator\u662f\u5df2\u7ecf\u5b9e\u73b0\u597d\u7684class\uff0c\u5f53\u4e2d\u53ea\u6709forward\u65b9\u6cd5\u672a\u5b9e\u73b0\uff0c\u4f7f\u7528\u65f6\u4ec5\u9700\u5b9e\u73b0\u8be5\u65b9\u6cd5\uff0c\u5373\u53ef\u8f6c\u6362\u5b8c\u6210\u3002 (2) calibrator_custom.SIM_Simulator\u4f7f\u7528\u65b9\u6cd5 \u4e0b\u9762\u4ee5 SGS_IPU_SDK/Scripts/examples/sim_simulator.py \u4e3a\u4f8b\uff0c\u8bf4\u660ecalibrator_custom.SIM_Simulator\u7684\u4f7f\u7528\u65b9\u6cd5\uff1a \u2460 \u5b9a\u4e49forward\u65b9\u6cd5\uff1a import calibrator_custom class Net ( calibrator_custom . SIM_Simulator ): def __init__ ( self ): super () . __init__ () self . model = calibrator_custom . fixed_simulator ( model_path ) def forward ( self , x ): out_details = self . model . get_output_details () self . model . set_input ( 0 , x ) self . model . invoke () result_list = [] for idx in range ( len ( out_details )): result = self . model . get_output ( idx ) # for Fixed and Offline model if out_details [ idx ][ 'dtype' ] == np . int16 : scale , _ = out_details [ idx ][ 'quantization' ] result = np . dot ( result , scale ) result_list . append ( result ) return result_list \u4f7f\u7528\u987b\u77e5 forward\u7684\u53c2\u6570\u4e3a\u6a21\u578b\u8f93\u5165\uff0c\u5982\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u53ef\u589e\u52a0forward\u7684\u53c2\u6570\u3002 \u2461 \u521b\u5efacalibrator_custom.SIM_Simulator\u7684\u5b9e\u4f8b net = Net () \u2462 \u8c03\u7528calibrator_custom.SIM_Simulator\u5b9e\u4f8b\u7684\u65b9\u6cd5 result = net ( img_gen , num_process = 4 ) \u4f7f\u7528\u987b\u77e5 \u8c03\u7528calibrator_custom.SIM_Simulator\u5b9e\u4f8b\uff0c\u9700\u8981\u7ed9\u5b9a\u8f93\u5165\u56fe\u7247\u7684numpy.ndarray\u6216\u8005\u56fe\u7247\u751f\u6210\u5668\u3002 \u5f53num_process\u5927\u4e8e1\u65f6\uff0cimg_gen\u5fc5\u987b\u4e3a\u56fe\u7247\u751f\u6210\u5668\u3002 \u56fe\u7247\u751f\u6210\u5668(img_gen): \u4e3a\u65b9\u4fbf\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u8f6c\u6362\u6a21\u578b\uff0c\u901a\u8fc7\u751f\u6210\u5668\u65b9\u4fbf\u7ec4\u7ec7\u8f93\u5165\u56fe\u7247\u7684\u5e8f\u5217\u3002\u5982\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u751f\u6210\u5668\u5e94\u8be5\u6309\u7167\u5b9a\u4e49forward\u65f6\u7684\u8f93\u5165\u987a\u5e8f\uff0c\u8fd4\u56de\u6709\u591a\u4e2anumpy.ndarray\u7684list\u3002 calibrator_custom.utils.image_preprocess_func\u4f7f\u7528\u9884\u5148\u5b9a\u4e49\u597d\u7684\u524d\u5904\u7406\u65b9\u6cd5,\u83b7\u53d6img_gen\u3002 preprocess_func = calibrator_custom . utils . image_preprocess_func ( model_name ) def image_generator ( folder_path , preprocess_func , norm ): images = [ os . path . join ( folder_path , img ) for img in os . listdir ( folder_path )] for image in images : img = preprocess_func ( image , norm ) yield [ img ] img_gen = image_generator ( './images' , preprocess_func , False )","title":"5.3.3   calibrator_custom.SIM_Simulator"},{"location":"module/User_Guide/IPU230/Special_Model_Conversion.html","text":"\u7279\u6b8a\u6a21\u578b \u7070\u5ea6\u6a21\u578b \u8f93\u5165\u662f\u5355\u901a\u9053\u56fe\u7247\u7684\u6a21\u578b\uff0c\u5373\u8f93\u5165C\u7ef4\u5ea6\u4e0a\u4e3a1\u7684\u6a21\u578b \u975e\u56fe\u7247\u6570\u636e\u8f93\u5165\u7684\u7f51\u7edc\u6a21\u578b input_config.ini\u4e2d\u4f7f\u7528RAWDATA_F32_NHWC\u6216RAWDATA_S16_NHWC\u914d\u7f6e\u7684\u6a21\u578b \u5206\u6bb5\u6a21\u578b \u7f51\u7edc\u4e2d\u6709\u4e0d\u652f\u6301\u7684Layer\uff0c\u53ef\u5c06\u5b8c\u6574\u7f51\u7edc\u5206\u6bb5\u6267\u884c\uff0c\u5982FasterRCNN \u591a\u8f93\u5165\u6a21\u578b 1. \u7070\u5ea6\u6a21\u578b \u00b6 \u7070\u5ea6\u6a21\u578b\uff0c\u6307\u8f93\u5165\u662f\u5355\u901a\u9053\u56fe\u7247\u7684\u6a21\u578b\uff0c\u5373\u8f93\u5165C\u7ef4\u5ea6\u4e0a\u4e3a1\u7684\u6a21\u578b\u3002 \u7070\u5ea6\u6a21\u578b\u7684\u7f51\u7edc\u8f6c\u6362\uff1a\u9700\u6ce8\u610finput_config\u914d\u7f6e \u7070\u5ea6\u6a21\u578b\u7684\u7f51\u7edc\u9a8c\u8bc1: \u9700\u6ce8\u610f\u524d\u5904\u7406 1.1. \u7070\u5ea6\u6a21\u578binput_config\u914d\u7f6e\u4fe1\u606f\u8981\u70b9 \u00b6 \u8f6c\u6362\u7070\u5ea6\u6a21\u578b\u65f6\u9700\u6ce8\u610finput_config\u914d\u7f6e\u4fe1\u606f\u4e2d\u5982\u4e0b\u8981\u70b9\uff1a(input_config.ini\u6587\u4ef6\u8be6\u7ec6\u8bf4\u660e\u8bf7\u53c2\u8003 Convert: input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e ) Note input_config.ini\u6587\u4ef6\u4e2d training_input_formats \u4e3aGRAY\uff0c input_formats \u53ef\u4ee5\u4e3aGRAY,\u4e5f\u53ef\u4ee5\u4e3aYUV_NV12\u3002 input_formats \u4e3aGRAY\u65f6\uff1a [INPUT_CONFIG] ...... training_input_formats = GRAY; input_formats = GRAY; ...... \u5b9e\u9645\u7ed9Fixed\u6216Offline\u6a21\u578b\u7684\u6570\u636e\u4e3a\u7070\u5ea6\u56fe\u7247\uff0c\u6b64\u65f6\u5bf9\u5e94\u7684 input_width_alignment \u548c input_height_alignment \u9ed8\u8ba4\u4e3a1\uff0c\u5982\u4e0d\u8bbe\u5b9a input_width_alignment \u548c input_height_alignment \uff0c\u5b9e\u9645\u8f93\u5165\u4e0e\u6a21\u578b\u8f93\u5165\u5f62\u72b6\u76f8\u540c\u3002 input_formats \u4e3aYUV_NV12\u65f6\uff1a [INPUT_CONFIG] ...... training_input_formats = GRAY; input_formats = YUV_NV12; ...... \u5b9e\u9645\u7ed9Fixed\u6216Offline\u6a21\u578b\u7684\u6570\u636e\u4e3aYUV_NV12\u6570\u636e\uff0c\u6b64\u65f6\u5bf9\u5e94\u7684 input_width_alignment \u548c input_height_alignment \u9ed8\u8ba4\u4e3a2\u3002 input_config.ini\u6587\u4ef6\u4e2d\u4ec5\u9700\u8bbe\u7f6e\u5355\u901a\u9053\u7684mean\u503c [INPUT_CONFIG] ...... mean = 33.318; std_value = 1.0; 1.2. \u7070\u5ea6\u56fe\u7247\u8f93\u5165\u6a21\u578b\u524d\u5904\u7406\u65b9\u6cd5 \u00b6 \u7070\u5ea6\u56fe\u7247\u8f93\u5165\u7684\u524d\u5904\u7406\u65b9\u6cd5\u4e0e Calibrator: \u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5 \u8981\u6c42\u76f8\u540c\uff0c\u524d\u5904\u7406\u65b9\u6cd5\u793a\u4f8b\u8bf7\u53c2\u8003 \u524d\u5904\u7406\u548c\u914d\u7f6e\u6587\u4ef6\u6ce8\u610f\u8981\u70b9 Note \u7070\u5ea6\u56fe\u7247\u8f93\u5165\u6a21\u578b\u5728PC\u4e0a\u8fd0\u884c\u4e0e\u5f00\u53d1\u677f\u6839\u636e input_formats \u7684\u914d\u7f6e\u53ef\u4ee5\u652f\u6301GRAY\u6216YUV_NV12\u56fe\u7247\u8f93\u5165\u6570\u636e\u3002 2. RAWDATA_F32_NHWC\u4e0eRAWDATA_S16_NHWC\u8f93\u5165\u7684\u6a21\u578b \u00b6 RAWDATA_F32_NHWC \u4e0e RAWDATA_S16_NHWC \u53ef\u4ee5\u7528\u4e8e\u5206\u6bb5\u7f51\u7edc\u7684\u540e\u7aef\u7f51\u7edc\u6a21\u578b\u8f93\u5165\uff0c\u6216\u8005\u975e\u56fe\u7247\u6570\u636e\u8f93\u5165\u7684\u7f51\u7edc\u6a21\u578b\u3002 \u975e\u56fe\u7247\u8f93\u5165\u7684\u7f51\u7edc\u8f6c\u6362\uff1a\u9700\u6ce8\u610finput_config\u914d\u7f6e \u975e\u56fe\u7247\u8f93\u5165\u7684\u6a21\u578b\u7f51\u7edc\u9a8c\u8bc1: \u9700\u6ce8\u610f\u524d\u5904\u7406 2.1. \u975e\u56fe\u7247\u8f93\u5165\u6a21\u578binput_config\u914d\u7f6e\u4fe1\u606f\u8981\u70b9 \u00b6 (1) RAWDATA_F32_NHWC \u6a21\u578b \u8f6c\u6362\u975e\u56fe\u7247\u8f93\u5165\u6a21\u578b\u65f6\u9700\u6ce8\u610finput_config\u914d\u7f6e\u4fe1\u606f\u4e2d\u5982\u4e0b\u8981\u70b9\uff1a(input_config.ini\u6587\u4ef6\u8be6\u7ec6\u8bf4\u660e\u8bf7\u53c2\u8003 Convert: input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e ) Note input_formats \u548c training_input_formats \u90fd\u586b\u5199 RAWDATA_S16_NHWC \uff0c quantizations \u914d\u7f6e\u4e3a TRUE \u3002 input_config.ini\u4e2d mean \u548c std_value \u4e0d\u8981\u586b\u5199\u3002 \u6a21\u578b\u5728\u4f7f\u7528calibrator.py\u5de5\u5177\u8f6c\u6362\u4e3a\u5b9a\u70b9\u7f51\u7edc\u65f6\u4f7f\u7528\u6d6e\u70b9\u6570\u636e\uff0c\u56e0\u6b64\u8f6c\u6362\u65b9\u6cd5\u4e0e\u6b63\u5e38\u7f51\u7edc\u76f8\u540c\u3002\u53ef\u4ee5\u53c2\u8003 Calibrator \u7684\u4f7f\u7528\u65b9\u6cd5\u3002 (2) RAWDATA_S16_NHWC \u6a21\u578b \u8f6c\u6362\u975e\u56fe\u7247\u8f93\u5165\u6a21\u578b\u65f6\u9700\u6ce8\u610finput_config\u914d\u7f6e\u4fe1\u606f\u4e2d\u5982\u4e0b\u8981\u70b9\uff1a(input_config.ini\u6587\u4ef6\u8be6\u7ec6\u8bf4\u660e\u8bf7\u53c2\u8003 Convert: input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e ) Note input_formats \u548c training_input_formats \u90fd\u586b\u5199 RAWDATA_F32_NHWC \uff0c quantizations \u914d\u7f6e\u4e3a TRUE \u3002 input_config.ini\u4e2d mean \u548c std_value \u4e0d\u8981\u586b\u5199\u3002 \u6a21\u578b\u5728\u4f7f\u7528calibrator.py\u5de5\u5177\u8f6c\u6362\u4e3a\u5b9a\u70b9\u7f51\u7edc\u65f6\u4f7f\u7528\u6d6e\u70b9\u6570\u636e\uff0c\u56e0\u6b64\u8f6c\u6362\u65b9\u6cd5\u4e0e\u6b63\u5e38\u7f51\u7edc\u76f8\u540c\u3002\u53ef\u4ee5\u53c2\u8003 Calibrator \u7684\u4f7f\u7528\u65b9\u6cd5\u3002 \u4f7f\u7528\u8be5\u79cd\u65b9\u5f0f\u8f93\u5165\u65f6\uff0c\u7531\u4e8e\u786c\u4ef6\u7684\u9650\u5236\u6761\u4ef6\uff0c\u6240\u4ee5\u9700\u8981\u63d0\u524d\u6392\u5217\u597d\u6570\u636e\u540e\u624d\u80fd\u8fdb\u884c\u8ba1\u7b97\u3002 2.2 RAWDATA_F32_NHWC\u6a21\u578b\u63a8\u6f14 \u00b6 (1) \u6a21\u578b\u524d\u5904\u7406\u65b9\u6cd5 \u8bf7\u53c2\u8003 \u524d\u5904\u7406\u548c\u914d\u7f6e\u6587\u4ef6\u6ce8\u610f\u8981\u70b9\uff1atraining_input_formats\u548cinput_formats\u5747\u4e3aRAWDATA_S16_NHWC\u6216\u8005\u5747\u4e3aRAWDATA_F32_NHWC (2) \u677f\u4e0a\u8fd0\u884c\u6ce8\u610f\u4e8b\u9879 \u5728\u677f\u4e0a\u8fd0\u884c RAWDATA_F32_NHWC \u7684\u7f51\u7edc\u65f6\uff0c\u53ef\u4ee5\u53c2\u8003\u5982\u4e0b\u4ee3\u7801\uff1a void FillInputData ( MI_FLOAT * pfData , MI_IPU_TensorVector_t & InputTensorVector , MI_IPU_SubNet_InputOutputDesc_t & desc ) { const MI_U32 H = desc . astMI_InputTensorDescs [ 0 ]. u32TensorShape [ 1 ]; const MI_U32 W = desc . astMI_InputTensorDescs [ 0 ]. u32TensorShape [ 2 ]; const MI_U32 C = desc . astMI_InputTensorDescs [ 0 ]. u32TensorShape [ 3 ]; MI_FLOAT * pTensorData = ( MI_FLOAT * ) InputTensorVector . astArrayTensors [ 0 ]. ptTensorData [ 0 ]; if ( desc . astMI_InputTensorDescs [ 0 ]. eElmFormat == MI_IPU_FORMAT_FP32 ) { memcpy ( pTensorData , pfData , H * W * C * sizeof ( MI_FLOAT )); } } \u5176\u4e2d\uff0c FillInputData\u51fd\u6570\u7684\u8f93\u5165\u5206\u522b\u662f\u6d6e\u70b9\u8f93\u5165\u6570\u636e\u7684\u6570\u7ec4 MI_IPU\u8f93\u5165Tensor\u7ed3\u6784\u4f53\u548cMI_IPU\u7f51\u7edc\u63cf\u8ff0\u7ed3\u6784\u4f53 \u53ea\u6709\u4f7f\u7528 RAWDATA_F32_NHWC \u914d\u7f6e\u7684\u7f51\u7edc\u5728\u677f\u4e0amemcpy\u5b8c\u6570\u636e\u540e\u4e0d\u8981\u8c03\u7528MI_SYS_FlushInvCache\u3002 \u8865\u5145\u8bf4\u660e \u5982\u9700\u4f7f\u7528calibrator_custom.fixed_simulator\uff0c\u9700\u81ea\u884c\u5b9e\u73b0\u5b9a\u70b9\u5316\uff1a \u4f7f\u7528calibrator_custom.fixed_simulator\u65f6\uff0c\u8f93\u5165\u6570\u636e\u7c7b\u578b\u4e3afloat32\u3002 >>> import calibrator_custom >>> model = calibrator_custom . fixed_simulator ( './mobilenet_v2_fixed.sim' ) >>> input_details = model . get_input_details () >>> print ( input_details ) [{ 'shape' : array ([ 1 , 513 , 513 , 3 ]), 'name' : 'sub_7' , 'dtype' : < class ' numpy . float32 '>, ' index ': 0}] calibrator_custom.fixed_simulator\u4e2d\u68c0\u67e5\u4e86\u6a21\u578b\u7684\u8f93\u5165\u683c\u5f0f\uff0c\u8ba1\u7b97\u51fa\u9700\u8981\u8f93\u5165\u7684shape\u4fe1\u606f\u3002 \u5df2\u4f7f\u7528float\u7f51\u7edc\u7684\u524d\u5904\u7406\u5904\u7406\u5b8c\u56fe\u7247\uff0c\u8fd4\u56denumpy.ndarray\u683c\u5f0f\u7684\u53d8\u91cfimg >>> print ( img . shape ) ( 1 , 513 , 513 , 3 ) >>> print ( img . dtype ) float32 \u8f93\u5165\u6a21\u578b\u6570\u636e >>> model . set_input ( input_details [ 0 ][ 'index' ], img ) 2.3. RAWDATA_S16_NHWC\u6a21\u578b\u63a8\u6f14 \u00b6 (1) \u6a21\u578b\u524d\u5904\u7406\u65b9\u6cd5 \u8bf7\u53c2\u8003 \u524d\u5904\u7406\u548c\u914d\u7f6e\u6587\u4ef6\u6ce8\u610f\u8981\u70b9\uff1atraining_input_formats\u548cinput_formats\u5747\u4e3aRAWDATA_S16_NHWC\u6216\u8005\u5747\u4e3aRAWDATA_F32_NHWC simulator.py\u4f1a\u8bfb\u5165\u539f\u6d6e\u70b9\u6570\u636e\uff0c\u8fdb\u884c\u53cd\u91cf\u5316\u540e\u8f93\u5165\u7ed9\u5b9a\u70b9\u6a21\u578b\u3002 (2) \u677f\u4e0a\u8fd0\u884c\u6ce8\u610f\u4e8b\u9879 \u5728\u677f\u4e0a\u8fd0\u884c RAWDATA_S16_NHWC \u7684\u7f51\u7edc\u65f6\uff0c\u4e5f\u9700\u8981\u5b8c\u6210\u8f93\u5165\u6570\u636e\u7684\u5b9a\u70b9\u5316\u8fc7\u7a0b\uff0c\u53ef\u4ee5\u53c2\u8003\u5982\u4e0b\u4ee3\u7801\uff0cFillInputData\u51fd\u6570\u7684\u8f93\u5165\u5206\u522b\u662f\u6d6e\u70b9\u8f93\u5165\u6570\u636e\u7684\u6570\u7ec4\uff0cMI_IPU\u8f93\u5165Tensor\u7ed3\u6784\u4f53\u548cMI_IPU\u7f51\u7edc\u63cf\u8ff0\u7ed3\u6784\u4f53\u3002 #define CLIP3(x, min, max) ((x) < (min) ? (min) : ((x) > (max) ? (max) : (x))) void FillInputData ( MI_FLOAT * pfData , MI_IPU_TensorVector_t & InputTensorVector , MI_IPU_SubNet_InputOutputDesc_t & desc ) { const MI_U32 H = desc . astMI_InputTensorDescs [ 0 ]. u32TensorShape [ 1 ]; const MI_U32 W = desc . astMI_InputTensorDescs [ 0 ]. u32TensorShape [ 2 ]; const MI_U32 C = desc . astMI_InputTensorDescs [ 0 ]. u32TensorShape [ 3 ]; const MI_FLOAT Scale = desc . astMI_InputTensorDescs [ 0 ]. fScalar ; const MI_S64 ZeroPoint = desc . astMI_InputTensorDescs [ 0 ]. s64ZeroPoint ; MI_S16 * pData = ( MI_S16 * ) InputTensorVector . astArrayTensors [ 0 ]. ptTensorData [ 0 ]; for ( MI_U32 i = 0 ; i < H * W * C ; i ++ ) { * ( pData + i ) = ( MI_S16 ) CLIP3 ( pfData [ i ] / Scale + ZeroPoint , -32768 , 32767 ); } MI_SYS_FlushInvCache ( pData , desc . astMI_InputTensorDescs [ 0 ]. s32AlignedBufSize ); } \u5176\u4e2d\uff0c FillInputData\u51fd\u6570\u7684\u8f93\u5165\u5206\u522b\u662f\u6d6e\u70b9\u8f93\u5165\u6570\u636e\u7684\u6570\u7ec4 MI_IPU\u8f93\u5165Tensor\u7ed3\u6784\u4f53\u548cMI_IPU\u7f51\u7edc\u63cf\u8ff0\u7ed3\u6784\u4f53 \u8865\u5145\u8bf4\u660e \u5982\u9700\u4f7f\u7528calibrator_custom.fixed_simulator\uff0c\u9700\u81ea\u884c\u5b9e\u73b0\u5b9a\u70b9\u5316\uff1a \u4f7f\u7528calibrator_custom.fixed_simulator\u65f6\uff0c\u8f93\u5165\u6570\u636e\u7c7b\u578b\u4e3aint16\u3002 >>> import calibrator_custom >>> model = calibrator_custom . fixed_simulator ( './mobilenet_v2_s16_fixed.sim' ) >>> input_details = model . get_input_details () >>> print ( input_details ) [{ 'input_formats' : 'RAWDATA_S16_NHWC' , 'training_input_formats' : 'RAWDATA_S16_NHWC' , 'shape' : array ([ 1 , 513 , 513 , 3 ]), 'name' : 'sub_7' , 'dtype' : < class ' numpy . int16 '>, ' index ': 0, ' quantization ': (3.0518509447574615e-05, 0)}] calibrator_custom.fixed_simulator\u4e2d\u68c0\u67e5\u4e86\u6a21\u578b\u7684\u8f93\u5165\u683c\u5f0f\uff0c\u8ba1\u7b97\u51fa\u9700\u8981\u8f93\u5165\u7684shape\u4fe1\u606f\u3002 \u5df2\u4f7f\u7528float\u7f51\u7edc\u7684\u524d\u5904\u7406\u5904\u7406\u5b8c\u56fe\u7247\uff0c\u8fd4\u56denumpy.ndarray\u683c\u5f0f\u7684\u53d8\u91cfimg >>> print ( img . shape ) ( 1 , 513 , 513 , 3 ) \u5b9a\u70b9\u5316img\u7684\u6570\u636e\uff0c\u5e76\u8f6c\u6362\u6570\u636e\u7c7b\u578b >>> ins , zp = input_details [ 0 ][ 'quantization' ] >>> img = ( img / ins + zp ) . astype ( input_details [ 0 ][ 'dtype' ]) >>> print ( img . dtype ) int16 \u8f93\u5165\u6a21\u578b\u6570\u636e >>> model . set_input ( input_details [ 0 ][ 'index' ], img ) 3. \u5206\u6bb5\u7f51\u7edc\u8f6c\u6362\u8981\u70b9 \u00b6 \u7f51\u7edc\u4e2d\u6709\u4e0d\u652f\u6301\u7684Layer\uff0c\u53ef\u5c06\u5b8c\u6574\u7f51\u7edc\u5206\u6bb5\u6267\u884c\uff1a \u524d\u4e00\u6bb5\u7f51\u7edc\u8fd0\u884c\u5b8c\u6210\u540e\u5c06\u7ed3\u679c\u8f93\u5165\u7ed9\u81ea\u5b9a\u4e49\u5b9e\u73b0\u5c42\uff0c \u518d\u5c06\u81ea\u5b9a\u4e49\u5c42\u7684\u8f93\u51fa\u7ed3\u679c\u4f5c\u4e3a\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u8fd0\u884c\u3002 \u4ee5Faster_RCNN\u7f51\u7edc\u4e3a\u4f8b: Faster_RCNN\u7f51\u7edc\u4e2d\u7684Proposal Layer\u662f\u4e0d\u652f\u6301\u7684\uff0c\u9700\u8981\u5c06\u7f51\u7edc\u4ece\u8be5\u5c42\u5206\u6210\u4e24\u6bb5\u3002 3.1 \u7f51\u7edc\u5207\u5206 \u00b6 \u7f51\u7edc\u5207\u5206\u793a\u610f\u56fe: (1) \u56fe\u4e2d\u7684Python Layer\u662fProposal Layer\uff0c\u901a\u8fc7\u4fee\u6539prototxt\u6587\u4ef6\uff0c\u5c06\u7f51\u7edc\u4eceProposal Layer\u5904\u62c6\u6210\u4e24\u6bb5\u3002 (2) \u7b2c\u4e00\u6bb5\u7f51\u7edc\u5c06\u67093\u4e2a\u8f93\u51fa\uff0c > \u5176\u4e2drpn_cls_prob_reshape\u548crpn_bbox_pred\u4e24\u4e2a\u8f93\u51fa\u7ed3\u679c\u5c06\u4f5c\u4e3aProposal Layer\u7684\u8f93\u5165\uff0c > conv5_3\u548cProposal Layer\u7684\u8f93\u51fa\u5c06\u4f5c\u4e3a\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u3002 (3) \u7b2c\u4e00\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u662f\u56fe\u7247\u6570\u636e\uff0cinput_config.ini\u548c\u524d\u5904\u7406\u6587\u4ef6\u5206\u522b\u6309\u7167 Convert:input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e \u548c Calibrator:\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5 \u5904\u7406\u3002 (4) \u7b2c\u4e8c\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u4e0d\u662f\u56fe\u7247\u6570\u636e\uff0c\u53ef\u4ee5\u5bf9\u4e24\u4e2a\u8f93\u5165\u540c\u65f6\u91c7\u7528RAWDATA_S16_NHWC\u7684\u683c\u5f0f\u914d\u7f6e\u3002\u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u901a\u8fc7ConvertTool.py\u5206\u522b\u5c06\u4e24\u4e2a\u7f51\u7edc\u8f6c\u6362\u6210float.sim\u6a21\u578b\u6587\u4ef6\u3002 \u5177\u4f53\u914d\u7f6e\u6587\u4ef6\u548c\u8f6c\u6362\u547d\u4ee4 \u7b2c\u4e00\u6bb5\u7f51\u7edc\uff1a python3 ~/SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py caffe \\ --model_file test_stageone.prototxt \\ --weight_file VGG16_faster_rcnn_final.caffemodel \\ --input_arrays data \\ --output_arrays rpn_cls_prob_reshape,rpn_bbox_pred,conv5_3 \\ --input_config input_config.ini \\ --output_file faster_rcnn_main_float.sim [INPUT_CONFIG] inputs = data; input_formats = BGR; quantizations = TRUE; mean = 122.7717:115.9465:102.9801; std_value = 1; [OUTPUT_CONFIG] outputs = rpn_cls_prob_reshape,rpn_bbox_pred,conv5_3; dequantizations = TRUE,TRUE,FALSE; \u8bbe\u5b9aconv5_3 \u8fd9\u4e2a\u8f93\u51fa\u7684dequantizations \u4e3aFALSE\uff0c\u7531\u4e8e\u8be5\u8f93\u51fa\u76f4\u63a5\u8f93\u5165\u7b2c\u4e8c\u6bb5\u7f51\u7edc\uff0c\u6240\u4ee5\u5728\u677f\u7aef\u8fd0\u884c\u65f6\u4e0d\u9700\u8981 \u8f6c\u6362\u6210float\uff0c\u53ef\u4ee5\u76f4\u63a5\u5c06\u8be5\u8f93\u51fa\u9001\u8fdb\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u3002 \u7b2c\u4e8c\u6bb5\u7f51\u7edc\uff1a ROIPooling\u7684rois\u8f93\u5165\u7ef4\u5ea6\u4e3a\uff08N\u00d75\uff09\uff0c\u5f53\u540e\u6bb5\u7f51\u7edc\u5168\u90e8\u662fInnerProduct\u65f6\uff0cN\u624d\u53ef\u4ee5\u8bbe\u7f6e\u4e3a300\uff08\u5982\u4e0a\u56fe\u6240\u793a\uff09\uff0c\u5982\u679c\u540e\u6bb5\u7f51\u7edc\u4e2d\u6709\u5377\u79ef\u65f6\uff0cN\u4ec5\u53ef\u4ee5\u8bbe\u7f6e\u4e3a1\uff0c\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u9700\u8981\u5faa\u73af\u6267\u884cN\u6b21\u3002 python3 ~/SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py caffe \\ --model_file second_stage.prototxt \\ --weight_file VGG16_faster_rcnn_final.caffemodel \\ --input_arrays conv5_3,rois \\ --output_arrays cls_prob,bbox_pred \\ --input_config input_config_stage2.ini \\ --output_file faster_rcnn_stage2_float.sim [INPUT_CONFIG] inputs = conv5_3,rois input_formats = RAWDATA_F32_NHWC,RAWDATA_F32_NHWC; quantizations = TRUE,TRUE; [OUTPUT_CONFIG] outputs = cls_prob,bbox_pred; dequantizations = TRUE,TRUE; 3.2 \u8f6c\u6362\u7f51\u7edc \u00b6 \u8def\u5f84 SGS_IPU_SDK/Scripts/examples/caffe_faster_rcnn/faster_rcnn_calibrator.py \u4e0b\u6709Faster_RCNN\u7f51\u7edc\u8f6c\u6362\u5de5\u5177demo\uff0c\u76f4\u63a5\u8fd0\u884c\u5373\u53ef\u5c06\u4e24\u6bb5\u7f51\u7edc\u76f4\u63a5\u8f6c\u6362\u6210fixed\u6a21\u578b\u3002 (1) \u6307\u4ee4 python3 ~/SGS_IPU_SDK/Scripts/examples/caffe_faster_rcnn/faster_rcnn_calibrator.py \\ -i ~/SGS_Models/resource/detection/voc_calibration_set32/ \\ -m0 faster_rcnn_main_float.sim \\ -m1 faster_rcnn_stage2_float.sim \\ --input_config0 input_config.ini \\ --input_config1 input_config_stage2.ini (2) \u8f6c\u6362\u5206\u6bb5\u7f51\u7edc \u9996\u5148\u5b9a\u4e49\u7f51\u7edc\u7684\u4e24\u6bb5\u7f51\u7edc\uff0c\u518d\u7ec4\u7ec7\u4e24\u6bb5\u7f51\u7edc\u7684\u8fd0\u884c\u65b9\u5f0f\uff0c\u5b9a\u4e49\u5728forward\u65b9\u6cd5\u91cc\uff1a class Net ( calibrator_custom . SIM_Calibrator ): def __init__ ( self , main_model_path , main_input_config , second_model_path , second_input_config ): super () . __init__ () self . main_model = calibrator_custom . calibrator ( main_model_path , main_input_config ) self . second_model = calibrator_custom . calibrator ( second_model_path , second_input_config ) self . rpn = rpn . ProposalLayer () def forward ( self , x ): out_details = self . main_model . get_output_details () input_data , im_scale = fill_inputImg2main ( x ) self . main_model . set_input ( 0 , input_data ) self . main_model . invoke () result_list = [] for idx , _ in enumerate ( out_details ): result = self . main_model . get_output ( idx ) result_list . append ( result ) im_info = np . array ([ x . shape [ 0 ], x . shape [ 1 ], im_scale ]) . reshape ( 1 , 3 ) bottom = [ result_list [ 0 ], result_list [ 1 ], im_info ] roi = self . rpn . forward ( bottom ) out2_details = self . second_model . get_output_details () self . second_model . set_input ( 0 , result_list [ 2 ]) self . second_model . set_input ( 1 , roi ) self . second_model . invoke () second_result = [] for idx , _ in enumerate ( out2_details ): result = self . second_model . get_output ( idx ) second_result . append ( result ) return second_result * Faster_RCNN\u7f51\u7edc\u4e2d\uff0c\u4f7f\u7528\u4e86\u81ea\u5b9a\u4e49\u7684rpn\u5c42\uff0c\u56e0\u6b64\u5c06\u7b2c\u4e00\u6bb5\u7f51\u7edc\u7684\u7b2c1\u4e2a\u548c\u7b2c2\u4e2a\u8f93\u51fa\u4ee5\u53ca\u56fe\u7247\u4fe1\u606f\u4f5c\u4e3arpn\u5c42\u7684\u8f93\u5165\uff0c\u7b2c\u4e00\u6bb5\u7f51\u7edc\u7684\u7b2c3\u4e2a\u8f93\u51fa\u548crpn\u5c42\u7684\u8f93\u51faroi\u4f5c\u4e3a\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u3002 \u6700\u540e\u8c03\u7528Net\u7684convert\u65b9\u6cd5\uff0c\u540c\u65f6\u751f\u6210\u4e24\u6bb5\u7f51\u7edc\u7684fixed\u6a21\u578b\u3002 net = Net () net . convert ( img_gen , num_process = num_subsets , fix_model = [ out_main_model , out_second_model ]) 3.3 \u63a8\u6f14\u7f51\u7edc \u00b6 \u8def\u5f84 SGS_IPU_SDK/Scripts/examples/caffe_faster_rcnn/faster_rcnn_simulator.py \u4e0b\u6709Faster_RCNN\u7f51\u7edc\u8fd0\u884c\u5de5\u5177demo\u3002 (1) \u6307\u4ee4 python3 ~/SGS_IPU_SDK/Scripts/examples/caffe_faster_rcnn/faster_rcnn_simulator.py \\ -i ~/SGS_Models/resource/detection/004545.jpg \\ -m0 faster_rcnn_main_float.sim \\ -m1 faster_rcnn_stage2_float.sim \\ -t Float (2) \u8fd0\u884c\u4e24\u6bb5\u6a21\u578b\u7684\u65b9\u6cd5\u4e0e\u8f6c\u6362\u7f51\u7edc\u65f6\u7c7b\u4f3c\u3002 class Net ( calibrator_custom . SIM_Simulator ): def __init__ ( self , main_model_path , second_model_path , phase ): super () . __init__ () if phase == 'Float' : self . main_model = calibrator_custom . float_simulator ( main_model_path ) self . second_model = calibrator_custom . float_simulator ( second_model_path ) self . norm = True elif phase == 'Fixed' : self . main_model = calibrator_custom . fixed_simulator ( main_model_path ) self . second_model = calibrator_custom . fixed_simulator ( second_model_path ) self . norm = False else : self . main_model = calibrator_custom . offline_simulator ( main_model_path ) self . second_model = calibrator_custom . offline_simulator ( second_model_path ) self . norm = False self . rpn = rpn . ProposalLayer () def forward ( self , x ): # Run main model out_details = self . main_model . get_output_details () input_data , im_scale = fill_inputImg2main ( x , norm = norm ) self . main_model . set_input ( 0 , input_data ) self . main_model . invoke () def forward ( self , x ): out_details = self . main_model . get_output_details () input_data , im_scale = fill_inputImg2main ( x ) self . main_model . set_input ( 0 , input_data ) self . main_model . invoke () result_list = [] for idx , _ in enumerate ( out_details ): result = self . main_model . get_output ( idx ) result_list . append ( result ) im_info = np . array ([ x . shape [ 0 ], x . shape [ 1 ], im_scale ]) . reshape ( 1 , 3 ) bottom = [ result_list [ 0 ], result_list [ 1 ], im_info ] roi = self . rpn . forward ( bottom ) out2_details = self . second_model . get_output_details () self . second_model . set_input ( 0 , result_list [ 2 ]) if self . norm : self . second_model . set_input ( 1 , roi ) else : self . second_model . set_input ( 1 , roi ) self . second_model . invoke () second_result = [] for idx , _ in enumerate ( out2_details ): result = self . second_model . get_output ( idx ) second_result . append ( result ) return second_result \u8fd0\u884c\u7f51\u7edc\u65f6\u5148\u521b\u5efaNet\u7684\u5b9e\u4f8b\uff0c\u7136\u540e\u8c03\u7528\u81ea\u8eab\u7684\u65b9\u6cd5\u5c31\u53ef\u4ee5\u8fd0\u884c\u3002\u5177\u4f53\u53c2\u8003 Calibrator:calibrator_custom.SIM_Simulator \u3002 net = Net () results = net ( img_gen , num_process = num_subsets ) 4. \u591a\u8f93\u5165\u7f51\u7edc\u8f6c\u6362\u8981\u70b9 \u00b6 4.1 \u6784\u5efa\u591a\u8f93\u5165\u7f51\u7edc \u00b6 \u4f7f\u7528Tensorflow1.14.0\u6784\u5efa\u4e00\u4e2a\u53cc\u8f93\u5165\u7f51\u7edc\uff0c\u8be5\u7f51\u7edc\u7528\u6765\u505a\u77e9\u9635\u4e58\u6cd5\uff0c\u8ba1\u7b97\u4e24\u4e2a\u5411\u91cf\u7684\u5185\u79ef\u3002 import tensorflow as tf import numpy as np SHAPE_DIMS = 256 input_np0 = np . random . rand ( 1 , SHAPE_DIMS ) . astype ( np . float32 ) input_np1 = np . random . rand ( 1 , SHAPE_DIMS ) . astype ( np . float32 ) input_0 = tf . placeholder ( dtype = tf . float32 , shape = ( 1 , SHAPE_DIMS ), name = 'input0' ) input_1 = tf . placeholder ( dtype = tf . float32 , shape = ( 1 , SHAPE_DIMS ), name = 'input1' ) out = tf . matmul ( input_0 , tf . reshape ( input_1 , ( SHAPE_DIMS , 1 )), name = 'output' ) with tf . Session () as sess : results = sess . run ( out , feed_dict = { input_0 : input_np0 , input_1 : input_np1 }) # Convert .pb output_graph_def = tf . graph_util . convert_variables_to_constants ( sess , sess . graph_def , [ 'output' ] ) with tf . gfile . GFile ( 'matmul.pb' , 'wb' ) as f : f . write ( output_graph_def . SerializeToString ()) print ( 'matmul.pb Saved!' ) # convert to .tflite tflite_model = tf . lite . TFLiteConverter . from_frozen_graph ( 'matmul.pb' , [ 'input0' , 'input1' ], [ 'output' ] ) tflite_model = tflite_model . convert () with open ( 'matmul.tflite' , 'wb' ) as f : f . write ( tflite_model ) print ( 'matmul.tflite Saved!' ) \u8fd0\u884c\u8be5\u811a\u672c\uff0c\u5c31\u80fd\u751f\u6210matmul.tflite\u6a21\u578b\u6587\u4ef6\u4e86\u3002 4.2 \u8f6c\u6362\u591a\u8f93\u5165\u7f51\u7edc \u00b6 \u4e0b\u9762\u5c06matmul.tflte\u8f6c\u6362\u6210\u53ef\u4ee5\u5728\u677f\u4e0a\u8fd0\u884c\u7684\u6a21\u578b\u6587\u4ef6\u3002 matmul.tflite\u6a21\u578b\u4e0d\u662f\u56fe\u7247\u8f93\u5165\uff0c\u56e0\u6b64\u914d\u7f6einput_config.ini\u6587\u4ef6\u8bf7\u53c2\u8003 RAWDATA_F32_NHWC\u4e0eRAWDATA_S16_NHWC\u8f93\u5165\u7684\u6a21\u578b \u3002 \u914d\u7f6einput_config.ini\u811a\u672c [INPUT_CONFIG] inputs = input0,input1; input_formats = RAWDATA_F32_NHWC,RAWDATA_F32_NHWC; quantization = TRUE,TRUE; [OUTPUT_CONFIG] outputs = output; dequantization = TRUE; \u8bf7\u5148\u5728SGS_IPU_SDK\u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK source cfg_env.sh \u7136\u540e\u4f7f\u7528ConvertTool\u5de5\u5177\u8f6c\u6362matmul.tflite\uff1a python3 ~/SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py tflite \\ --model_file /path/to/matmul.tflite \\ --input_config /path/to/input_config.ini \\ --output_file /path/to/matmul_float.sim \u591a\u8f93\u5165\u7f51\u7edc\u7684calibrator\u8fc7\u7a0b\u9700\u8981\u4f7f\u7528calibrator_custom\u6a21\u5757\uff0c\u53ef\u4ee5\u53c2\u8003 Calibrator:calibrator_custom \u3002\u4e0d\u540c\u7684\u662f\u8f93\u5165\u7684\u751f\u6210\u5668\u9700\u8981\u914d\u7f6e\u6210\u53cc\u8f93\u5165\u3002\u5c06\u5982\u4e0b\u793a\u4f8b\u6587\u4ef6\u4fdd\u5b58\u4e3amatmul_calibrator.py\u3002 # -*- coding: utf-8 -*- import calibrator_custom import os import sys import numpy as np import argparse from calibrator_custom import utils class Net ( calibrator_custom . SIM_Calibrator ): def __init__ ( self , model_path , input_config ): super () . __init__ () self . model = calibrator_custom . calibrator ( model_path , input_config ) def forward ( self , x , y ): out_details = self . model . get_output_details () self . model . set_input ( 0 , x ) self . model . set_input ( 1 , y ) self . model . invoke () result_list = [] for idx in range ( len ( out_details )): result = self . model . get_output ( idx ) result_list . append ( result ) return result_list def arg_parse (): parser = argparse . ArgumentParser ( description = 'Calibrator Tool' ) parser . add_argument ( '-m' , '--model' , type = str , required = True , help = 'Model path.' ) parser . add_argument ( '--input_config' , type = str , required = True , help = 'Input config path.' ) parser . add_argument ( '--quant_level' , type = str , default = 'L5' , choices = [ 'L1' , 'L2' , 'L3' , 'L4' , 'L5' ], help = 'Indicate Quantilization level. The higher the level, \\ the slower the speed and the higher the accuracy.' ) parser . add_argument ( '--num_process' , default = 10 , type = int , help = 'Amount of processes run at same time.' ) parser . add_argument ( '-o' , '--output' , default = None , type = str , help = 'Output path for fixed model.' ) return parser . parse_args () def data_gen (): calibrator_data = np . random . rand ( 100 , 1 , 256 ) . astype ( np . float32 ) bench_data = np . random . rand ( 100 , 1 , 256 ) . astype ( np . float32 ) for i , j in zip ( calibrator_data , bench_data ): yield [ i , j ] def main (): args = arg_parse () model_path = args . model input_config = args . input_config quant_level = args . quant_level num_subsets = args . num_process output = args . output if not os . path . exists ( model_path ): raise FileNotFoundError ( 'No such {} model' . format ( model_path )) if not os . path . exists ( input_config ): raise FileNotFoundError ( 'input_config.ini file not found.' ) net = Net ( model_path , input_config ) print ( net ) # random generate data # must change real data when using img_gen = data_gen () print ( ' \\033 [31m[WARNING] random generate data, \\ must change real data when using! \\033 [0m' , file = sys . stderr ) out_model = utils . get_out_model_name ( model_path , output ) net . convert ( img_gen , num_process = num_subsets , quant_level = quant_level , fix_model = [ out_model ]) if __name__ == '__main__' : main () \u4f7f\u7528\u7f16\u5199\u7684matmul_calibrator.py\u8f6c\u6362matmul_float.sim\uff0c\u751f\u6210matmul_fixed.sim\u3002 python3 matmul_calibrator.py \\ -m /path/to/matmul_float.sim \\ --input_config /path/to/input_config.ini \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u91cf\u5316\u8be5\u6a21\u578b\u7684\u8f93\u5165\u6570\u636e\u4e00\u5b9a\u8981\u6362\u6210\u771f\u5b9e\u6570\u636e\uff0c\u4e0d\u7136\u7edf\u8ba1\u751f\u6210\u7684fixed\u6a21\u578b\u7cbe\u5ea6\u4f1a\u51fa\u9519\u3002\u5982\u679c\u5355\u72ec\u91cf\u5316\u8be5\u6a21\u578b\u6bd4\u8f83\u56f0\u96be\uff0c\u6bd4\u5982\u5b83\u662f\u63a5\u5728\u67d0\u4e2a\u7f51\u7edc\u540e\u9762\u8fd0\u884c\u7684\uff0c\u53ef\u4ee5\u53c2\u8003 \u591a\u8f93\u5165\u7f51\u7edc\u8f6c\u6362\u8981\u70b9 \uff0c\u6309\u7167\u591a\u6bb5\u7f51\u7edc\u5904\u7406\uff0c\u5728calibrator_custom.SIM_Calibrator\u7c7b\u91cc\u5b9a\u4e49\u591a\u4e2a\u6a21\u578b\uff0c\u53ef\u4ee5\u76f4\u63a5\u751f\u6210\u51fa\u591a\u4e2afixed\u7f51\u7edc\u3002 \u6700\u540e\u4f7f\u7528compiler.py\u8f6c\u6362matmul_fixed.sim\uff0c\u751f\u6210matmul_fixed.sim_sgsimg.img\u3002 4.3 \u5728PC\u4e0a\u63a8\u6f14\u591a\u8f93\u5165\u7f51\u7edc \u00b6 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd0\u884cFloat\u7684\u7f51\u7edc\u65f6\uff0c\u8f93\u5165\u6570\u636e\u7684type\u9700\u8981\u4e3afloat32\uff0c\u8f93\u5165\u6570\u636e\u7684shape\u4e0e\u6a21\u578b\u8f93\u5165shape\u76f8\u540c\u3002\u4f46\u662f\u7531\u4e8ematmul\u7684Fixed\u548cOffline\u6a21\u578b\u662fRAWDATA_S16_NHWC\u8f93\u5165\uff0c\u8f93\u5165\u6570\u636e\u9700\u8981\u5148\u53cd\u91cf\u5316\u5230int16\u624d\u80fd\u8f93\u5165\u5230\u6a21\u578b\u3002\u6240\u4ee5\u5b9a\u4e49calibrator_custom.SIM_Simulator\u7684forward\u51fd\u6570\u65f6\u9700\u8981\u6ce8\u610f\u8be5\u6a21\u578b\u7684\u7279\u6b8a\u6027\uff1a class Net ( calibrator_custom . SIM_Simulator ): def __init__ ( self , model_path , phase ): super () . __init__ () if phase == 'Float' : self . model = calibrator_custom . float_simulator ( model_path ) elif phase == 'Fixed' : self . model = calibrator_custom . fixed_simulator ( model_path ) else : self . model = calibrator_custom . offline_simulator ( model_path ) def forward ( self , x , y ): out_details = self . model . get_output_details () self . model . set_input ( 0 , x ) self . model . set_input ( 1 , y ) self . model . invoke () result_list = [] for idx , _ in enumerate ( out_details ): result = self . model . get_output ( idx ) result_list . append ( result ) return result_list 4.4 \u5728\u677f\u4e0a\u63a8\u6f14\u591a\u8f93\u5165\u7f51\u7edc \u00b6 \u7531\u4e8ematmul_fixed.sim_sgsimg.img\u7f51\u7edc\u8f93\u5165\u662f RAWDATA_F32_NHWC \uff0c\u53ef\u4ee5\u53c2\u8003 FillInputData\u51fd\u6570 \uff0c\u4e0e\u5728PC\u4e0a\u76f8\u540c\uff0c\u9700\u8981\u5c06\u8f93\u5165\u6570\u636e\u5904\u7406\u540e\u518d\u9001\u5165\u6a21\u578b\u3002 \u591a\u8f93\u5165\u6a21\u578b\u53ea\u9700\u5728FillInputData\u51fd\u6570\u4e2d\u589e\u52a0\u5bf9\u6a21\u578b\u7684\u7b2c\u4e8c\u4e2a\u8f93\u5165\u704c\u5165\u6570\u636e\uff1a // input0 MI_FLOAT * pData0 = ( MI_FLOAT * ) InputTensorVector . astArrayTensors [ 0 ]. ptTensorData [ 0 ]; // input1 MI_FLOAT * pData1 = ( MI_FLOAT * ) InputTensorVector . astArrayTensors [ 1 ]. ptTensorData [ 0 ];","title":"\u9644\u5f55\u2161. \u7279\u6b8a\u6a21\u578b\u8f6c\u6362\u8981\u70b9"},{"location":"module/User_Guide/IPU230/Special_Model_Conversion.html#1","text":"\u7070\u5ea6\u6a21\u578b\uff0c\u6307\u8f93\u5165\u662f\u5355\u901a\u9053\u56fe\u7247\u7684\u6a21\u578b\uff0c\u5373\u8f93\u5165C\u7ef4\u5ea6\u4e0a\u4e3a1\u7684\u6a21\u578b\u3002 \u7070\u5ea6\u6a21\u578b\u7684\u7f51\u7edc\u8f6c\u6362\uff1a\u9700\u6ce8\u610finput_config\u914d\u7f6e \u7070\u5ea6\u6a21\u578b\u7684\u7f51\u7edc\u9a8c\u8bc1: \u9700\u6ce8\u610f\u524d\u5904\u7406","title":"1. \u7070\u5ea6\u6a21\u578b"},{"location":"module/User_Guide/IPU230/Special_Model_Conversion.html#11-input_config","text":"\u8f6c\u6362\u7070\u5ea6\u6a21\u578b\u65f6\u9700\u6ce8\u610finput_config\u914d\u7f6e\u4fe1\u606f\u4e2d\u5982\u4e0b\u8981\u70b9\uff1a(input_config.ini\u6587\u4ef6\u8be6\u7ec6\u8bf4\u660e\u8bf7\u53c2\u8003 Convert: input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e ) Note input_config.ini\u6587\u4ef6\u4e2d training_input_formats \u4e3aGRAY\uff0c input_formats \u53ef\u4ee5\u4e3aGRAY,\u4e5f\u53ef\u4ee5\u4e3aYUV_NV12\u3002 input_formats \u4e3aGRAY\u65f6\uff1a [INPUT_CONFIG] ...... training_input_formats = GRAY; input_formats = GRAY; ...... \u5b9e\u9645\u7ed9Fixed\u6216Offline\u6a21\u578b\u7684\u6570\u636e\u4e3a\u7070\u5ea6\u56fe\u7247\uff0c\u6b64\u65f6\u5bf9\u5e94\u7684 input_width_alignment \u548c input_height_alignment \u9ed8\u8ba4\u4e3a1\uff0c\u5982\u4e0d\u8bbe\u5b9a input_width_alignment \u548c input_height_alignment \uff0c\u5b9e\u9645\u8f93\u5165\u4e0e\u6a21\u578b\u8f93\u5165\u5f62\u72b6\u76f8\u540c\u3002 input_formats \u4e3aYUV_NV12\u65f6\uff1a [INPUT_CONFIG] ...... training_input_formats = GRAY; input_formats = YUV_NV12; ...... \u5b9e\u9645\u7ed9Fixed\u6216Offline\u6a21\u578b\u7684\u6570\u636e\u4e3aYUV_NV12\u6570\u636e\uff0c\u6b64\u65f6\u5bf9\u5e94\u7684 input_width_alignment \u548c input_height_alignment \u9ed8\u8ba4\u4e3a2\u3002 input_config.ini\u6587\u4ef6\u4e2d\u4ec5\u9700\u8bbe\u7f6e\u5355\u901a\u9053\u7684mean\u503c [INPUT_CONFIG] ...... mean = 33.318; std_value = 1.0;","title":"1.1. \u7070\u5ea6\u6a21\u578binput_config\u914d\u7f6e\u4fe1\u606f\u8981\u70b9"},{"location":"module/User_Guide/IPU230/Special_Model_Conversion.html#12","text":"\u7070\u5ea6\u56fe\u7247\u8f93\u5165\u7684\u524d\u5904\u7406\u65b9\u6cd5\u4e0e Calibrator: \u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5 \u8981\u6c42\u76f8\u540c\uff0c\u524d\u5904\u7406\u65b9\u6cd5\u793a\u4f8b\u8bf7\u53c2\u8003 \u524d\u5904\u7406\u548c\u914d\u7f6e\u6587\u4ef6\u6ce8\u610f\u8981\u70b9 Note \u7070\u5ea6\u56fe\u7247\u8f93\u5165\u6a21\u578b\u5728PC\u4e0a\u8fd0\u884c\u4e0e\u5f00\u53d1\u677f\u6839\u636e input_formats \u7684\u914d\u7f6e\u53ef\u4ee5\u652f\u6301GRAY\u6216YUV_NV12\u56fe\u7247\u8f93\u5165\u6570\u636e\u3002","title":"1.2. \u7070\u5ea6\u56fe\u7247\u8f93\u5165\u6a21\u578b\u524d\u5904\u7406\u65b9\u6cd5"},{"location":"module/User_Guide/IPU230/Special_Model_Conversion.html#2-rawdata_f32_nhwcrawdata_s16_nhwc","text":"RAWDATA_F32_NHWC \u4e0e RAWDATA_S16_NHWC \u53ef\u4ee5\u7528\u4e8e\u5206\u6bb5\u7f51\u7edc\u7684\u540e\u7aef\u7f51\u7edc\u6a21\u578b\u8f93\u5165\uff0c\u6216\u8005\u975e\u56fe\u7247\u6570\u636e\u8f93\u5165\u7684\u7f51\u7edc\u6a21\u578b\u3002 \u975e\u56fe\u7247\u8f93\u5165\u7684\u7f51\u7edc\u8f6c\u6362\uff1a\u9700\u6ce8\u610finput_config\u914d\u7f6e \u975e\u56fe\u7247\u8f93\u5165\u7684\u6a21\u578b\u7f51\u7edc\u9a8c\u8bc1: \u9700\u6ce8\u610f\u524d\u5904\u7406","title":"2. RAWDATA_F32_NHWC\u4e0eRAWDATA_S16_NHWC\u8f93\u5165\u7684\u6a21\u578b"},{"location":"module/User_Guide/IPU230/Special_Model_Conversion.html#21-input_config","text":"(1) RAWDATA_F32_NHWC \u6a21\u578b \u8f6c\u6362\u975e\u56fe\u7247\u8f93\u5165\u6a21\u578b\u65f6\u9700\u6ce8\u610finput_config\u914d\u7f6e\u4fe1\u606f\u4e2d\u5982\u4e0b\u8981\u70b9\uff1a(input_config.ini\u6587\u4ef6\u8be6\u7ec6\u8bf4\u660e\u8bf7\u53c2\u8003 Convert: input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e ) Note input_formats \u548c training_input_formats \u90fd\u586b\u5199 RAWDATA_S16_NHWC \uff0c quantizations \u914d\u7f6e\u4e3a TRUE \u3002 input_config.ini\u4e2d mean \u548c std_value \u4e0d\u8981\u586b\u5199\u3002 \u6a21\u578b\u5728\u4f7f\u7528calibrator.py\u5de5\u5177\u8f6c\u6362\u4e3a\u5b9a\u70b9\u7f51\u7edc\u65f6\u4f7f\u7528\u6d6e\u70b9\u6570\u636e\uff0c\u56e0\u6b64\u8f6c\u6362\u65b9\u6cd5\u4e0e\u6b63\u5e38\u7f51\u7edc\u76f8\u540c\u3002\u53ef\u4ee5\u53c2\u8003 Calibrator \u7684\u4f7f\u7528\u65b9\u6cd5\u3002 (2) RAWDATA_S16_NHWC \u6a21\u578b \u8f6c\u6362\u975e\u56fe\u7247\u8f93\u5165\u6a21\u578b\u65f6\u9700\u6ce8\u610finput_config\u914d\u7f6e\u4fe1\u606f\u4e2d\u5982\u4e0b\u8981\u70b9\uff1a(input_config.ini\u6587\u4ef6\u8be6\u7ec6\u8bf4\u660e\u8bf7\u53c2\u8003 Convert: input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e ) Note input_formats \u548c training_input_formats \u90fd\u586b\u5199 RAWDATA_F32_NHWC \uff0c quantizations \u914d\u7f6e\u4e3a TRUE \u3002 input_config.ini\u4e2d mean \u548c std_value \u4e0d\u8981\u586b\u5199\u3002 \u6a21\u578b\u5728\u4f7f\u7528calibrator.py\u5de5\u5177\u8f6c\u6362\u4e3a\u5b9a\u70b9\u7f51\u7edc\u65f6\u4f7f\u7528\u6d6e\u70b9\u6570\u636e\uff0c\u56e0\u6b64\u8f6c\u6362\u65b9\u6cd5\u4e0e\u6b63\u5e38\u7f51\u7edc\u76f8\u540c\u3002\u53ef\u4ee5\u53c2\u8003 Calibrator \u7684\u4f7f\u7528\u65b9\u6cd5\u3002 \u4f7f\u7528\u8be5\u79cd\u65b9\u5f0f\u8f93\u5165\u65f6\uff0c\u7531\u4e8e\u786c\u4ef6\u7684\u9650\u5236\u6761\u4ef6\uff0c\u6240\u4ee5\u9700\u8981\u63d0\u524d\u6392\u5217\u597d\u6570\u636e\u540e\u624d\u80fd\u8fdb\u884c\u8ba1\u7b97\u3002","title":"2.1. \u975e\u56fe\u7247\u8f93\u5165\u6a21\u578binput_config\u914d\u7f6e\u4fe1\u606f\u8981\u70b9"},{"location":"module/User_Guide/IPU230/Special_Model_Conversion.html#22-rawdata_f32_nhwc","text":"(1) \u6a21\u578b\u524d\u5904\u7406\u65b9\u6cd5 \u8bf7\u53c2\u8003 \u524d\u5904\u7406\u548c\u914d\u7f6e\u6587\u4ef6\u6ce8\u610f\u8981\u70b9\uff1atraining_input_formats\u548cinput_formats\u5747\u4e3aRAWDATA_S16_NHWC\u6216\u8005\u5747\u4e3aRAWDATA_F32_NHWC (2) \u677f\u4e0a\u8fd0\u884c\u6ce8\u610f\u4e8b\u9879 \u5728\u677f\u4e0a\u8fd0\u884c RAWDATA_F32_NHWC \u7684\u7f51\u7edc\u65f6\uff0c\u53ef\u4ee5\u53c2\u8003\u5982\u4e0b\u4ee3\u7801\uff1a void FillInputData ( MI_FLOAT * pfData , MI_IPU_TensorVector_t & InputTensorVector , MI_IPU_SubNet_InputOutputDesc_t & desc ) { const MI_U32 H = desc . astMI_InputTensorDescs [ 0 ]. u32TensorShape [ 1 ]; const MI_U32 W = desc . astMI_InputTensorDescs [ 0 ]. u32TensorShape [ 2 ]; const MI_U32 C = desc . astMI_InputTensorDescs [ 0 ]. u32TensorShape [ 3 ]; MI_FLOAT * pTensorData = ( MI_FLOAT * ) InputTensorVector . astArrayTensors [ 0 ]. ptTensorData [ 0 ]; if ( desc . astMI_InputTensorDescs [ 0 ]. eElmFormat == MI_IPU_FORMAT_FP32 ) { memcpy ( pTensorData , pfData , H * W * C * sizeof ( MI_FLOAT )); } } \u5176\u4e2d\uff0c FillInputData\u51fd\u6570\u7684\u8f93\u5165\u5206\u522b\u662f\u6d6e\u70b9\u8f93\u5165\u6570\u636e\u7684\u6570\u7ec4 MI_IPU\u8f93\u5165Tensor\u7ed3\u6784\u4f53\u548cMI_IPU\u7f51\u7edc\u63cf\u8ff0\u7ed3\u6784\u4f53 \u53ea\u6709\u4f7f\u7528 RAWDATA_F32_NHWC \u914d\u7f6e\u7684\u7f51\u7edc\u5728\u677f\u4e0amemcpy\u5b8c\u6570\u636e\u540e\u4e0d\u8981\u8c03\u7528MI_SYS_FlushInvCache\u3002 \u8865\u5145\u8bf4\u660e \u5982\u9700\u4f7f\u7528calibrator_custom.fixed_simulator\uff0c\u9700\u81ea\u884c\u5b9e\u73b0\u5b9a\u70b9\u5316\uff1a \u4f7f\u7528calibrator_custom.fixed_simulator\u65f6\uff0c\u8f93\u5165\u6570\u636e\u7c7b\u578b\u4e3afloat32\u3002 >>> import calibrator_custom >>> model = calibrator_custom . fixed_simulator ( './mobilenet_v2_fixed.sim' ) >>> input_details = model . get_input_details () >>> print ( input_details ) [{ 'shape' : array ([ 1 , 513 , 513 , 3 ]), 'name' : 'sub_7' , 'dtype' : < class ' numpy . float32 '>, ' index ': 0}] calibrator_custom.fixed_simulator\u4e2d\u68c0\u67e5\u4e86\u6a21\u578b\u7684\u8f93\u5165\u683c\u5f0f\uff0c\u8ba1\u7b97\u51fa\u9700\u8981\u8f93\u5165\u7684shape\u4fe1\u606f\u3002 \u5df2\u4f7f\u7528float\u7f51\u7edc\u7684\u524d\u5904\u7406\u5904\u7406\u5b8c\u56fe\u7247\uff0c\u8fd4\u56denumpy.ndarray\u683c\u5f0f\u7684\u53d8\u91cfimg >>> print ( img . shape ) ( 1 , 513 , 513 , 3 ) >>> print ( img . dtype ) float32 \u8f93\u5165\u6a21\u578b\u6570\u636e >>> model . set_input ( input_details [ 0 ][ 'index' ], img )","title":"2.2 RAWDATA_F32_NHWC\u6a21\u578b\u63a8\u6f14"},{"location":"module/User_Guide/IPU230/Special_Model_Conversion.html#23-rawdata_s16_nhwc","text":"(1) \u6a21\u578b\u524d\u5904\u7406\u65b9\u6cd5 \u8bf7\u53c2\u8003 \u524d\u5904\u7406\u548c\u914d\u7f6e\u6587\u4ef6\u6ce8\u610f\u8981\u70b9\uff1atraining_input_formats\u548cinput_formats\u5747\u4e3aRAWDATA_S16_NHWC\u6216\u8005\u5747\u4e3aRAWDATA_F32_NHWC simulator.py\u4f1a\u8bfb\u5165\u539f\u6d6e\u70b9\u6570\u636e\uff0c\u8fdb\u884c\u53cd\u91cf\u5316\u540e\u8f93\u5165\u7ed9\u5b9a\u70b9\u6a21\u578b\u3002 (2) \u677f\u4e0a\u8fd0\u884c\u6ce8\u610f\u4e8b\u9879 \u5728\u677f\u4e0a\u8fd0\u884c RAWDATA_S16_NHWC \u7684\u7f51\u7edc\u65f6\uff0c\u4e5f\u9700\u8981\u5b8c\u6210\u8f93\u5165\u6570\u636e\u7684\u5b9a\u70b9\u5316\u8fc7\u7a0b\uff0c\u53ef\u4ee5\u53c2\u8003\u5982\u4e0b\u4ee3\u7801\uff0cFillInputData\u51fd\u6570\u7684\u8f93\u5165\u5206\u522b\u662f\u6d6e\u70b9\u8f93\u5165\u6570\u636e\u7684\u6570\u7ec4\uff0cMI_IPU\u8f93\u5165Tensor\u7ed3\u6784\u4f53\u548cMI_IPU\u7f51\u7edc\u63cf\u8ff0\u7ed3\u6784\u4f53\u3002 #define CLIP3(x, min, max) ((x) < (min) ? (min) : ((x) > (max) ? (max) : (x))) void FillInputData ( MI_FLOAT * pfData , MI_IPU_TensorVector_t & InputTensorVector , MI_IPU_SubNet_InputOutputDesc_t & desc ) { const MI_U32 H = desc . astMI_InputTensorDescs [ 0 ]. u32TensorShape [ 1 ]; const MI_U32 W = desc . astMI_InputTensorDescs [ 0 ]. u32TensorShape [ 2 ]; const MI_U32 C = desc . astMI_InputTensorDescs [ 0 ]. u32TensorShape [ 3 ]; const MI_FLOAT Scale = desc . astMI_InputTensorDescs [ 0 ]. fScalar ; const MI_S64 ZeroPoint = desc . astMI_InputTensorDescs [ 0 ]. s64ZeroPoint ; MI_S16 * pData = ( MI_S16 * ) InputTensorVector . astArrayTensors [ 0 ]. ptTensorData [ 0 ]; for ( MI_U32 i = 0 ; i < H * W * C ; i ++ ) { * ( pData + i ) = ( MI_S16 ) CLIP3 ( pfData [ i ] / Scale + ZeroPoint , -32768 , 32767 ); } MI_SYS_FlushInvCache ( pData , desc . astMI_InputTensorDescs [ 0 ]. s32AlignedBufSize ); } \u5176\u4e2d\uff0c FillInputData\u51fd\u6570\u7684\u8f93\u5165\u5206\u522b\u662f\u6d6e\u70b9\u8f93\u5165\u6570\u636e\u7684\u6570\u7ec4 MI_IPU\u8f93\u5165Tensor\u7ed3\u6784\u4f53\u548cMI_IPU\u7f51\u7edc\u63cf\u8ff0\u7ed3\u6784\u4f53 \u8865\u5145\u8bf4\u660e \u5982\u9700\u4f7f\u7528calibrator_custom.fixed_simulator\uff0c\u9700\u81ea\u884c\u5b9e\u73b0\u5b9a\u70b9\u5316\uff1a \u4f7f\u7528calibrator_custom.fixed_simulator\u65f6\uff0c\u8f93\u5165\u6570\u636e\u7c7b\u578b\u4e3aint16\u3002 >>> import calibrator_custom >>> model = calibrator_custom . fixed_simulator ( './mobilenet_v2_s16_fixed.sim' ) >>> input_details = model . get_input_details () >>> print ( input_details ) [{ 'input_formats' : 'RAWDATA_S16_NHWC' , 'training_input_formats' : 'RAWDATA_S16_NHWC' , 'shape' : array ([ 1 , 513 , 513 , 3 ]), 'name' : 'sub_7' , 'dtype' : < class ' numpy . int16 '>, ' index ': 0, ' quantization ': (3.0518509447574615e-05, 0)}] calibrator_custom.fixed_simulator\u4e2d\u68c0\u67e5\u4e86\u6a21\u578b\u7684\u8f93\u5165\u683c\u5f0f\uff0c\u8ba1\u7b97\u51fa\u9700\u8981\u8f93\u5165\u7684shape\u4fe1\u606f\u3002 \u5df2\u4f7f\u7528float\u7f51\u7edc\u7684\u524d\u5904\u7406\u5904\u7406\u5b8c\u56fe\u7247\uff0c\u8fd4\u56denumpy.ndarray\u683c\u5f0f\u7684\u53d8\u91cfimg >>> print ( img . shape ) ( 1 , 513 , 513 , 3 ) \u5b9a\u70b9\u5316img\u7684\u6570\u636e\uff0c\u5e76\u8f6c\u6362\u6570\u636e\u7c7b\u578b >>> ins , zp = input_details [ 0 ][ 'quantization' ] >>> img = ( img / ins + zp ) . astype ( input_details [ 0 ][ 'dtype' ]) >>> print ( img . dtype ) int16 \u8f93\u5165\u6a21\u578b\u6570\u636e >>> model . set_input ( input_details [ 0 ][ 'index' ], img )","title":"2.3. RAWDATA_S16_NHWC\u6a21\u578b\u63a8\u6f14"},{"location":"module/User_Guide/IPU230/Special_Model_Conversion.html#3","text":"\u7f51\u7edc\u4e2d\u6709\u4e0d\u652f\u6301\u7684Layer\uff0c\u53ef\u5c06\u5b8c\u6574\u7f51\u7edc\u5206\u6bb5\u6267\u884c\uff1a \u524d\u4e00\u6bb5\u7f51\u7edc\u8fd0\u884c\u5b8c\u6210\u540e\u5c06\u7ed3\u679c\u8f93\u5165\u7ed9\u81ea\u5b9a\u4e49\u5b9e\u73b0\u5c42\uff0c \u518d\u5c06\u81ea\u5b9a\u4e49\u5c42\u7684\u8f93\u51fa\u7ed3\u679c\u4f5c\u4e3a\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u8fd0\u884c\u3002 \u4ee5Faster_RCNN\u7f51\u7edc\u4e3a\u4f8b: Faster_RCNN\u7f51\u7edc\u4e2d\u7684Proposal Layer\u662f\u4e0d\u652f\u6301\u7684\uff0c\u9700\u8981\u5c06\u7f51\u7edc\u4ece\u8be5\u5c42\u5206\u6210\u4e24\u6bb5\u3002","title":"3. \u5206\u6bb5\u7f51\u7edc\u8f6c\u6362\u8981\u70b9"},{"location":"module/User_Guide/IPU230/Special_Model_Conversion.html#31","text":"\u7f51\u7edc\u5207\u5206\u793a\u610f\u56fe: (1) \u56fe\u4e2d\u7684Python Layer\u662fProposal Layer\uff0c\u901a\u8fc7\u4fee\u6539prototxt\u6587\u4ef6\uff0c\u5c06\u7f51\u7edc\u4eceProposal Layer\u5904\u62c6\u6210\u4e24\u6bb5\u3002 (2) \u7b2c\u4e00\u6bb5\u7f51\u7edc\u5c06\u67093\u4e2a\u8f93\u51fa\uff0c > \u5176\u4e2drpn_cls_prob_reshape\u548crpn_bbox_pred\u4e24\u4e2a\u8f93\u51fa\u7ed3\u679c\u5c06\u4f5c\u4e3aProposal Layer\u7684\u8f93\u5165\uff0c > conv5_3\u548cProposal Layer\u7684\u8f93\u51fa\u5c06\u4f5c\u4e3a\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u3002 (3) \u7b2c\u4e00\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u662f\u56fe\u7247\u6570\u636e\uff0cinput_config.ini\u548c\u524d\u5904\u7406\u6587\u4ef6\u5206\u522b\u6309\u7167 Convert:input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e \u548c Calibrator:\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5 \u5904\u7406\u3002 (4) \u7b2c\u4e8c\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u4e0d\u662f\u56fe\u7247\u6570\u636e\uff0c\u53ef\u4ee5\u5bf9\u4e24\u4e2a\u8f93\u5165\u540c\u65f6\u91c7\u7528RAWDATA_S16_NHWC\u7684\u683c\u5f0f\u914d\u7f6e\u3002\u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u901a\u8fc7ConvertTool.py\u5206\u522b\u5c06\u4e24\u4e2a\u7f51\u7edc\u8f6c\u6362\u6210float.sim\u6a21\u578b\u6587\u4ef6\u3002 \u5177\u4f53\u914d\u7f6e\u6587\u4ef6\u548c\u8f6c\u6362\u547d\u4ee4 \u7b2c\u4e00\u6bb5\u7f51\u7edc\uff1a python3 ~/SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py caffe \\ --model_file test_stageone.prototxt \\ --weight_file VGG16_faster_rcnn_final.caffemodel \\ --input_arrays data \\ --output_arrays rpn_cls_prob_reshape,rpn_bbox_pred,conv5_3 \\ --input_config input_config.ini \\ --output_file faster_rcnn_main_float.sim [INPUT_CONFIG] inputs = data; input_formats = BGR; quantizations = TRUE; mean = 122.7717:115.9465:102.9801; std_value = 1; [OUTPUT_CONFIG] outputs = rpn_cls_prob_reshape,rpn_bbox_pred,conv5_3; dequantizations = TRUE,TRUE,FALSE; \u8bbe\u5b9aconv5_3 \u8fd9\u4e2a\u8f93\u51fa\u7684dequantizations \u4e3aFALSE\uff0c\u7531\u4e8e\u8be5\u8f93\u51fa\u76f4\u63a5\u8f93\u5165\u7b2c\u4e8c\u6bb5\u7f51\u7edc\uff0c\u6240\u4ee5\u5728\u677f\u7aef\u8fd0\u884c\u65f6\u4e0d\u9700\u8981 \u8f6c\u6362\u6210float\uff0c\u53ef\u4ee5\u76f4\u63a5\u5c06\u8be5\u8f93\u51fa\u9001\u8fdb\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u3002 \u7b2c\u4e8c\u6bb5\u7f51\u7edc\uff1a ROIPooling\u7684rois\u8f93\u5165\u7ef4\u5ea6\u4e3a\uff08N\u00d75\uff09\uff0c\u5f53\u540e\u6bb5\u7f51\u7edc\u5168\u90e8\u662fInnerProduct\u65f6\uff0cN\u624d\u53ef\u4ee5\u8bbe\u7f6e\u4e3a300\uff08\u5982\u4e0a\u56fe\u6240\u793a\uff09\uff0c\u5982\u679c\u540e\u6bb5\u7f51\u7edc\u4e2d\u6709\u5377\u79ef\u65f6\uff0cN\u4ec5\u53ef\u4ee5\u8bbe\u7f6e\u4e3a1\uff0c\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u9700\u8981\u5faa\u73af\u6267\u884cN\u6b21\u3002 python3 ~/SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py caffe \\ --model_file second_stage.prototxt \\ --weight_file VGG16_faster_rcnn_final.caffemodel \\ --input_arrays conv5_3,rois \\ --output_arrays cls_prob,bbox_pred \\ --input_config input_config_stage2.ini \\ --output_file faster_rcnn_stage2_float.sim [INPUT_CONFIG] inputs = conv5_3,rois input_formats = RAWDATA_F32_NHWC,RAWDATA_F32_NHWC; quantizations = TRUE,TRUE; [OUTPUT_CONFIG] outputs = cls_prob,bbox_pred; dequantizations = TRUE,TRUE;","title":"3.1 \u7f51\u7edc\u5207\u5206"},{"location":"module/User_Guide/IPU230/Special_Model_Conversion.html#32","text":"\u8def\u5f84 SGS_IPU_SDK/Scripts/examples/caffe_faster_rcnn/faster_rcnn_calibrator.py \u4e0b\u6709Faster_RCNN\u7f51\u7edc\u8f6c\u6362\u5de5\u5177demo\uff0c\u76f4\u63a5\u8fd0\u884c\u5373\u53ef\u5c06\u4e24\u6bb5\u7f51\u7edc\u76f4\u63a5\u8f6c\u6362\u6210fixed\u6a21\u578b\u3002 (1) \u6307\u4ee4 python3 ~/SGS_IPU_SDK/Scripts/examples/caffe_faster_rcnn/faster_rcnn_calibrator.py \\ -i ~/SGS_Models/resource/detection/voc_calibration_set32/ \\ -m0 faster_rcnn_main_float.sim \\ -m1 faster_rcnn_stage2_float.sim \\ --input_config0 input_config.ini \\ --input_config1 input_config_stage2.ini (2) \u8f6c\u6362\u5206\u6bb5\u7f51\u7edc \u9996\u5148\u5b9a\u4e49\u7f51\u7edc\u7684\u4e24\u6bb5\u7f51\u7edc\uff0c\u518d\u7ec4\u7ec7\u4e24\u6bb5\u7f51\u7edc\u7684\u8fd0\u884c\u65b9\u5f0f\uff0c\u5b9a\u4e49\u5728forward\u65b9\u6cd5\u91cc\uff1a class Net ( calibrator_custom . SIM_Calibrator ): def __init__ ( self , main_model_path , main_input_config , second_model_path , second_input_config ): super () . __init__ () self . main_model = calibrator_custom . calibrator ( main_model_path , main_input_config ) self . second_model = calibrator_custom . calibrator ( second_model_path , second_input_config ) self . rpn = rpn . ProposalLayer () def forward ( self , x ): out_details = self . main_model . get_output_details () input_data , im_scale = fill_inputImg2main ( x ) self . main_model . set_input ( 0 , input_data ) self . main_model . invoke () result_list = [] for idx , _ in enumerate ( out_details ): result = self . main_model . get_output ( idx ) result_list . append ( result ) im_info = np . array ([ x . shape [ 0 ], x . shape [ 1 ], im_scale ]) . reshape ( 1 , 3 ) bottom = [ result_list [ 0 ], result_list [ 1 ], im_info ] roi = self . rpn . forward ( bottom ) out2_details = self . second_model . get_output_details () self . second_model . set_input ( 0 , result_list [ 2 ]) self . second_model . set_input ( 1 , roi ) self . second_model . invoke () second_result = [] for idx , _ in enumerate ( out2_details ): result = self . second_model . get_output ( idx ) second_result . append ( result ) return second_result * Faster_RCNN\u7f51\u7edc\u4e2d\uff0c\u4f7f\u7528\u4e86\u81ea\u5b9a\u4e49\u7684rpn\u5c42\uff0c\u56e0\u6b64\u5c06\u7b2c\u4e00\u6bb5\u7f51\u7edc\u7684\u7b2c1\u4e2a\u548c\u7b2c2\u4e2a\u8f93\u51fa\u4ee5\u53ca\u56fe\u7247\u4fe1\u606f\u4f5c\u4e3arpn\u5c42\u7684\u8f93\u5165\uff0c\u7b2c\u4e00\u6bb5\u7f51\u7edc\u7684\u7b2c3\u4e2a\u8f93\u51fa\u548crpn\u5c42\u7684\u8f93\u51faroi\u4f5c\u4e3a\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u3002 \u6700\u540e\u8c03\u7528Net\u7684convert\u65b9\u6cd5\uff0c\u540c\u65f6\u751f\u6210\u4e24\u6bb5\u7f51\u7edc\u7684fixed\u6a21\u578b\u3002 net = Net () net . convert ( img_gen , num_process = num_subsets , fix_model = [ out_main_model , out_second_model ])","title":"3.2 \u8f6c\u6362\u7f51\u7edc"},{"location":"module/User_Guide/IPU230/Special_Model_Conversion.html#33","text":"\u8def\u5f84 SGS_IPU_SDK/Scripts/examples/caffe_faster_rcnn/faster_rcnn_simulator.py \u4e0b\u6709Faster_RCNN\u7f51\u7edc\u8fd0\u884c\u5de5\u5177demo\u3002 (1) \u6307\u4ee4 python3 ~/SGS_IPU_SDK/Scripts/examples/caffe_faster_rcnn/faster_rcnn_simulator.py \\ -i ~/SGS_Models/resource/detection/004545.jpg \\ -m0 faster_rcnn_main_float.sim \\ -m1 faster_rcnn_stage2_float.sim \\ -t Float (2) \u8fd0\u884c\u4e24\u6bb5\u6a21\u578b\u7684\u65b9\u6cd5\u4e0e\u8f6c\u6362\u7f51\u7edc\u65f6\u7c7b\u4f3c\u3002 class Net ( calibrator_custom . SIM_Simulator ): def __init__ ( self , main_model_path , second_model_path , phase ): super () . __init__ () if phase == 'Float' : self . main_model = calibrator_custom . float_simulator ( main_model_path ) self . second_model = calibrator_custom . float_simulator ( second_model_path ) self . norm = True elif phase == 'Fixed' : self . main_model = calibrator_custom . fixed_simulator ( main_model_path ) self . second_model = calibrator_custom . fixed_simulator ( second_model_path ) self . norm = False else : self . main_model = calibrator_custom . offline_simulator ( main_model_path ) self . second_model = calibrator_custom . offline_simulator ( second_model_path ) self . norm = False self . rpn = rpn . ProposalLayer () def forward ( self , x ): # Run main model out_details = self . main_model . get_output_details () input_data , im_scale = fill_inputImg2main ( x , norm = norm ) self . main_model . set_input ( 0 , input_data ) self . main_model . invoke () def forward ( self , x ): out_details = self . main_model . get_output_details () input_data , im_scale = fill_inputImg2main ( x ) self . main_model . set_input ( 0 , input_data ) self . main_model . invoke () result_list = [] for idx , _ in enumerate ( out_details ): result = self . main_model . get_output ( idx ) result_list . append ( result ) im_info = np . array ([ x . shape [ 0 ], x . shape [ 1 ], im_scale ]) . reshape ( 1 , 3 ) bottom = [ result_list [ 0 ], result_list [ 1 ], im_info ] roi = self . rpn . forward ( bottom ) out2_details = self . second_model . get_output_details () self . second_model . set_input ( 0 , result_list [ 2 ]) if self . norm : self . second_model . set_input ( 1 , roi ) else : self . second_model . set_input ( 1 , roi ) self . second_model . invoke () second_result = [] for idx , _ in enumerate ( out2_details ): result = self . second_model . get_output ( idx ) second_result . append ( result ) return second_result \u8fd0\u884c\u7f51\u7edc\u65f6\u5148\u521b\u5efaNet\u7684\u5b9e\u4f8b\uff0c\u7136\u540e\u8c03\u7528\u81ea\u8eab\u7684\u65b9\u6cd5\u5c31\u53ef\u4ee5\u8fd0\u884c\u3002\u5177\u4f53\u53c2\u8003 Calibrator:calibrator_custom.SIM_Simulator \u3002 net = Net () results = net ( img_gen , num_process = num_subsets )","title":"3.3 \u63a8\u6f14\u7f51\u7edc"},{"location":"module/User_Guide/IPU230/Special_Model_Conversion.html#4","text":"","title":"4.   \u591a\u8f93\u5165\u7f51\u7edc\u8f6c\u6362\u8981\u70b9"},{"location":"module/User_Guide/IPU230/Special_Model_Conversion.html#41","text":"\u4f7f\u7528Tensorflow1.14.0\u6784\u5efa\u4e00\u4e2a\u53cc\u8f93\u5165\u7f51\u7edc\uff0c\u8be5\u7f51\u7edc\u7528\u6765\u505a\u77e9\u9635\u4e58\u6cd5\uff0c\u8ba1\u7b97\u4e24\u4e2a\u5411\u91cf\u7684\u5185\u79ef\u3002 import tensorflow as tf import numpy as np SHAPE_DIMS = 256 input_np0 = np . random . rand ( 1 , SHAPE_DIMS ) . astype ( np . float32 ) input_np1 = np . random . rand ( 1 , SHAPE_DIMS ) . astype ( np . float32 ) input_0 = tf . placeholder ( dtype = tf . float32 , shape = ( 1 , SHAPE_DIMS ), name = 'input0' ) input_1 = tf . placeholder ( dtype = tf . float32 , shape = ( 1 , SHAPE_DIMS ), name = 'input1' ) out = tf . matmul ( input_0 , tf . reshape ( input_1 , ( SHAPE_DIMS , 1 )), name = 'output' ) with tf . Session () as sess : results = sess . run ( out , feed_dict = { input_0 : input_np0 , input_1 : input_np1 }) # Convert .pb output_graph_def = tf . graph_util . convert_variables_to_constants ( sess , sess . graph_def , [ 'output' ] ) with tf . gfile . GFile ( 'matmul.pb' , 'wb' ) as f : f . write ( output_graph_def . SerializeToString ()) print ( 'matmul.pb Saved!' ) # convert to .tflite tflite_model = tf . lite . TFLiteConverter . from_frozen_graph ( 'matmul.pb' , [ 'input0' , 'input1' ], [ 'output' ] ) tflite_model = tflite_model . convert () with open ( 'matmul.tflite' , 'wb' ) as f : f . write ( tflite_model ) print ( 'matmul.tflite Saved!' ) \u8fd0\u884c\u8be5\u811a\u672c\uff0c\u5c31\u80fd\u751f\u6210matmul.tflite\u6a21\u578b\u6587\u4ef6\u4e86\u3002","title":"4.1 \u6784\u5efa\u591a\u8f93\u5165\u7f51\u7edc"},{"location":"module/User_Guide/IPU230/Special_Model_Conversion.html#42","text":"\u4e0b\u9762\u5c06matmul.tflte\u8f6c\u6362\u6210\u53ef\u4ee5\u5728\u677f\u4e0a\u8fd0\u884c\u7684\u6a21\u578b\u6587\u4ef6\u3002 matmul.tflite\u6a21\u578b\u4e0d\u662f\u56fe\u7247\u8f93\u5165\uff0c\u56e0\u6b64\u914d\u7f6einput_config.ini\u6587\u4ef6\u8bf7\u53c2\u8003 RAWDATA_F32_NHWC\u4e0eRAWDATA_S16_NHWC\u8f93\u5165\u7684\u6a21\u578b \u3002 \u914d\u7f6einput_config.ini\u811a\u672c [INPUT_CONFIG] inputs = input0,input1; input_formats = RAWDATA_F32_NHWC,RAWDATA_F32_NHWC; quantization = TRUE,TRUE; [OUTPUT_CONFIG] outputs = output; dequantization = TRUE; \u8bf7\u5148\u5728SGS_IPU_SDK\u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK source cfg_env.sh \u7136\u540e\u4f7f\u7528ConvertTool\u5de5\u5177\u8f6c\u6362matmul.tflite\uff1a python3 ~/SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py tflite \\ --model_file /path/to/matmul.tflite \\ --input_config /path/to/input_config.ini \\ --output_file /path/to/matmul_float.sim \u591a\u8f93\u5165\u7f51\u7edc\u7684calibrator\u8fc7\u7a0b\u9700\u8981\u4f7f\u7528calibrator_custom\u6a21\u5757\uff0c\u53ef\u4ee5\u53c2\u8003 Calibrator:calibrator_custom \u3002\u4e0d\u540c\u7684\u662f\u8f93\u5165\u7684\u751f\u6210\u5668\u9700\u8981\u914d\u7f6e\u6210\u53cc\u8f93\u5165\u3002\u5c06\u5982\u4e0b\u793a\u4f8b\u6587\u4ef6\u4fdd\u5b58\u4e3amatmul_calibrator.py\u3002 # -*- coding: utf-8 -*- import calibrator_custom import os import sys import numpy as np import argparse from calibrator_custom import utils class Net ( calibrator_custom . SIM_Calibrator ): def __init__ ( self , model_path , input_config ): super () . __init__ () self . model = calibrator_custom . calibrator ( model_path , input_config ) def forward ( self , x , y ): out_details = self . model . get_output_details () self . model . set_input ( 0 , x ) self . model . set_input ( 1 , y ) self . model . invoke () result_list = [] for idx in range ( len ( out_details )): result = self . model . get_output ( idx ) result_list . append ( result ) return result_list def arg_parse (): parser = argparse . ArgumentParser ( description = 'Calibrator Tool' ) parser . add_argument ( '-m' , '--model' , type = str , required = True , help = 'Model path.' ) parser . add_argument ( '--input_config' , type = str , required = True , help = 'Input config path.' ) parser . add_argument ( '--quant_level' , type = str , default = 'L5' , choices = [ 'L1' , 'L2' , 'L3' , 'L4' , 'L5' ], help = 'Indicate Quantilization level. The higher the level, \\ the slower the speed and the higher the accuracy.' ) parser . add_argument ( '--num_process' , default = 10 , type = int , help = 'Amount of processes run at same time.' ) parser . add_argument ( '-o' , '--output' , default = None , type = str , help = 'Output path for fixed model.' ) return parser . parse_args () def data_gen (): calibrator_data = np . random . rand ( 100 , 1 , 256 ) . astype ( np . float32 ) bench_data = np . random . rand ( 100 , 1 , 256 ) . astype ( np . float32 ) for i , j in zip ( calibrator_data , bench_data ): yield [ i , j ] def main (): args = arg_parse () model_path = args . model input_config = args . input_config quant_level = args . quant_level num_subsets = args . num_process output = args . output if not os . path . exists ( model_path ): raise FileNotFoundError ( 'No such {} model' . format ( model_path )) if not os . path . exists ( input_config ): raise FileNotFoundError ( 'input_config.ini file not found.' ) net = Net ( model_path , input_config ) print ( net ) # random generate data # must change real data when using img_gen = data_gen () print ( ' \\033 [31m[WARNING] random generate data, \\ must change real data when using! \\033 [0m' , file = sys . stderr ) out_model = utils . get_out_model_name ( model_path , output ) net . convert ( img_gen , num_process = num_subsets , quant_level = quant_level , fix_model = [ out_model ]) if __name__ == '__main__' : main () \u4f7f\u7528\u7f16\u5199\u7684matmul_calibrator.py\u8f6c\u6362matmul_float.sim\uff0c\u751f\u6210matmul_fixed.sim\u3002 python3 matmul_calibrator.py \\ -m /path/to/matmul_float.sim \\ --input_config /path/to/input_config.ini \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u91cf\u5316\u8be5\u6a21\u578b\u7684\u8f93\u5165\u6570\u636e\u4e00\u5b9a\u8981\u6362\u6210\u771f\u5b9e\u6570\u636e\uff0c\u4e0d\u7136\u7edf\u8ba1\u751f\u6210\u7684fixed\u6a21\u578b\u7cbe\u5ea6\u4f1a\u51fa\u9519\u3002\u5982\u679c\u5355\u72ec\u91cf\u5316\u8be5\u6a21\u578b\u6bd4\u8f83\u56f0\u96be\uff0c\u6bd4\u5982\u5b83\u662f\u63a5\u5728\u67d0\u4e2a\u7f51\u7edc\u540e\u9762\u8fd0\u884c\u7684\uff0c\u53ef\u4ee5\u53c2\u8003 \u591a\u8f93\u5165\u7f51\u7edc\u8f6c\u6362\u8981\u70b9 \uff0c\u6309\u7167\u591a\u6bb5\u7f51\u7edc\u5904\u7406\uff0c\u5728calibrator_custom.SIM_Calibrator\u7c7b\u91cc\u5b9a\u4e49\u591a\u4e2a\u6a21\u578b\uff0c\u53ef\u4ee5\u76f4\u63a5\u751f\u6210\u51fa\u591a\u4e2afixed\u7f51\u7edc\u3002 \u6700\u540e\u4f7f\u7528compiler.py\u8f6c\u6362matmul_fixed.sim\uff0c\u751f\u6210matmul_fixed.sim_sgsimg.img\u3002","title":"4.2 \u8f6c\u6362\u591a\u8f93\u5165\u7f51\u7edc"},{"location":"module/User_Guide/IPU230/Special_Model_Conversion.html#43-pc","text":"\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd0\u884cFloat\u7684\u7f51\u7edc\u65f6\uff0c\u8f93\u5165\u6570\u636e\u7684type\u9700\u8981\u4e3afloat32\uff0c\u8f93\u5165\u6570\u636e\u7684shape\u4e0e\u6a21\u578b\u8f93\u5165shape\u76f8\u540c\u3002\u4f46\u662f\u7531\u4e8ematmul\u7684Fixed\u548cOffline\u6a21\u578b\u662fRAWDATA_S16_NHWC\u8f93\u5165\uff0c\u8f93\u5165\u6570\u636e\u9700\u8981\u5148\u53cd\u91cf\u5316\u5230int16\u624d\u80fd\u8f93\u5165\u5230\u6a21\u578b\u3002\u6240\u4ee5\u5b9a\u4e49calibrator_custom.SIM_Simulator\u7684forward\u51fd\u6570\u65f6\u9700\u8981\u6ce8\u610f\u8be5\u6a21\u578b\u7684\u7279\u6b8a\u6027\uff1a class Net ( calibrator_custom . SIM_Simulator ): def __init__ ( self , model_path , phase ): super () . __init__ () if phase == 'Float' : self . model = calibrator_custom . float_simulator ( model_path ) elif phase == 'Fixed' : self . model = calibrator_custom . fixed_simulator ( model_path ) else : self . model = calibrator_custom . offline_simulator ( model_path ) def forward ( self , x , y ): out_details = self . model . get_output_details () self . model . set_input ( 0 , x ) self . model . set_input ( 1 , y ) self . model . invoke () result_list = [] for idx , _ in enumerate ( out_details ): result = self . model . get_output ( idx ) result_list . append ( result ) return result_list","title":"4.3 \u5728PC\u4e0a\u63a8\u6f14\u591a\u8f93\u5165\u7f51\u7edc"},{"location":"module/User_Guide/IPU230/Special_Model_Conversion.html#44","text":"\u7531\u4e8ematmul_fixed.sim_sgsimg.img\u7f51\u7edc\u8f93\u5165\u662f RAWDATA_F32_NHWC \uff0c\u53ef\u4ee5\u53c2\u8003 FillInputData\u51fd\u6570 \uff0c\u4e0e\u5728PC\u4e0a\u76f8\u540c\uff0c\u9700\u8981\u5c06\u8f93\u5165\u6570\u636e\u5904\u7406\u540e\u518d\u9001\u5165\u6a21\u578b\u3002 \u591a\u8f93\u5165\u6a21\u578b\u53ea\u9700\u5728FillInputData\u51fd\u6570\u4e2d\u589e\u52a0\u5bf9\u6a21\u578b\u7684\u7b2c\u4e8c\u4e2a\u8f93\u5165\u704c\u5165\u6570\u636e\uff1a // input0 MI_FLOAT * pData0 = ( MI_FLOAT * ) InputTensorVector . astArrayTensors [ 0 ]. ptTensorData [ 0 ]; // input1 MI_FLOAT * pData1 = ( MI_FLOAT * ) InputTensorVector . astArrayTensors [ 1 ]. ptTensorData [ 0 ];","title":"4.4 \u5728\u677f\u4e0a\u63a8\u6f14\u591a\u8f93\u5165\u7f51\u7edc"},{"location":"module/User_Guide/IPU260/Accuracy_Debug_SOP.html","text":"1. IPU\u7cbe\u5ea6\u95ee\u9898Debug SOP \u00b6 \u5f53\u6a21\u578b\u7cbe\u5ea6\u4e0d\u7b26\u5408\u9884\u671f\u65f6\uff0c\u5728 SGS_IPU_SDK/doc/Debug_SOP/IPU\u7cbe\u5ea6\u95ee\u9898Debug SOP.pdf \u4e2d\uff0c\u7ed9\u51fa\u4e86\u51e0\u79cd\u5e38\u89c1\u7684\u7cbe\u5ea6\u95ee\u9898\u7684Debug\u601d\u8def\uff0c\u5177\u4f53\u5206\u4e3a\u4ee5\u4e0b\u4e09\u79cd\uff1a \u7cbe\u5ea6\u95ee\u9898 \u7cbe\u5ea6\u8bf4\u660e \u76ee\u5f55 \u2460\u539f\u59cb\u6846\u67b6\u6a21\u578b\u4e0eFLOAT.SIM\u6a21\u578b\u7cbe\u5ea6\u95ee\u9898 \u539f\u59cb\u7f51\u7edc\u6a21\u578b\u4e0e\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u7ed3\u679c\u5e94\u5b8c\u5168\u4e00\u81f4 1.\u539f\u59cb\u6846\u67b6\u6a21\u578b\u4e0eFLOAT.SIM\u6a21\u578b\u7cbe\u5ea6\u95ee\u9898 \u2461FLOAT.SIM\u6a21\u578b\u548cFIXED.SIM\u6a21\u578b\u7cbe\u5ea6\u95ee\u9898 \u6709\u4e00\u5b9a\u7684\u7cbe\u5ea6\u5dee\u522b 2.FLOAT.SIM\u6a21\u578b\u548cFIXED.SIM\u6a21\u578b\u7cbe\u5ea6\u95ee\u9898 \u2462\u677f\u7aef\u7cbe\u5ea6\u95ee\u9898 \u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u4e0e\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u7ed3\u679c\u5e94\u5b8c\u5168\u4e00\u81f4 3.\u677f\u7aef\u7cbe\u5ea6\u95ee\u9898","title":"Accuracy Debug SOP"},{"location":"module/User_Guide/IPU260/Accuracy_Debug_SOP.html#1-ipudebug-sop","text":"\u5f53\u6a21\u578b\u7cbe\u5ea6\u4e0d\u7b26\u5408\u9884\u671f\u65f6\uff0c\u5728 SGS_IPU_SDK/doc/Debug_SOP/IPU\u7cbe\u5ea6\u95ee\u9898Debug SOP.pdf \u4e2d\uff0c\u7ed9\u51fa\u4e86\u51e0\u79cd\u5e38\u89c1\u7684\u7cbe\u5ea6\u95ee\u9898\u7684Debug\u601d\u8def\uff0c\u5177\u4f53\u5206\u4e3a\u4ee5\u4e0b\u4e09\u79cd\uff1a \u7cbe\u5ea6\u95ee\u9898 \u7cbe\u5ea6\u8bf4\u660e \u76ee\u5f55 \u2460\u539f\u59cb\u6846\u67b6\u6a21\u578b\u4e0eFLOAT.SIM\u6a21\u578b\u7cbe\u5ea6\u95ee\u9898 \u539f\u59cb\u7f51\u7edc\u6a21\u578b\u4e0e\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u7ed3\u679c\u5e94\u5b8c\u5168\u4e00\u81f4 1.\u539f\u59cb\u6846\u67b6\u6a21\u578b\u4e0eFLOAT.SIM\u6a21\u578b\u7cbe\u5ea6\u95ee\u9898 \u2461FLOAT.SIM\u6a21\u578b\u548cFIXED.SIM\u6a21\u578b\u7cbe\u5ea6\u95ee\u9898 \u6709\u4e00\u5b9a\u7684\u7cbe\u5ea6\u5dee\u522b 2.FLOAT.SIM\u6a21\u578b\u548cFIXED.SIM\u6a21\u578b\u7cbe\u5ea6\u95ee\u9898 \u2462\u677f\u7aef\u7cbe\u5ea6\u95ee\u9898 \u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u4e0e\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u7ed3\u679c\u5e94\u5b8c\u5168\u4e00\u81f4 3.\u677f\u7aef\u7cbe\u5ea6\u95ee\u9898","title":"1. IPU\u7cbe\u5ea6\u95ee\u9898Debug SOP"},{"location":"module/User_Guide/IPU260/Adding_A_New_Layer.html","text":"1. \u6982\u8ff0 \u00b6 \u672c\u8282\u4ec5\u9002\u7528\u4e8ecaffe \u6a21\u578b\u3002\u5bf9\u4e8esigmastar \u8fd8\u672a\u5b9e\u73b0\u7684layer\uff0c\u7528sigmastar \u63d0\u4f9b\u5e95\u5c42\u7b97\u5b50\u6765\u7ec4\u5408\u5b9e\u73b0\u3002\u5e95\u5c42\u7b97\u5b50\u4e0e tensorflow \u7684\u7b97\u5b50\u7c7b\u4f3c\uff0c\u652f\u6301\u7684\u7b97\u5b50\u53c2\u8003 DLA SDK\u652f\u6301\uff1aTensofFlow \u652f\u6301\u7b97\u5b50 \u652f\u6301\u7b97\u5b50\u8f6c\u6362\u6d41\u7a0b\u5982\u4e0b\u56fe CaffeConvert Tool (\u4ee3\u7801\u4f4d\u7f6e\uff1a SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py ) caffe \u6a21\u578b\u8f6c\u6362\u5de5\u5177\u501f\u9274\u4e86\u5c0f\u7c73\u5f00\u6e90\u6846\u67b6mace \u7684\u8bbe\u8ba1\uff0c\u8981\u6dfb\u52a0\u65b0\u7684layer\uff0c\u8bf7\u5148\u5230 Xiaomi MACE \u4e0b\u8f7d\u539f\u59cb\u4ee3\u7801\uff0c\u6309\u7167mace \u5b98\u65b9\u6587\u6863\u914d\u7f6e \u597d\u7f16\u8bd1\u73af\u5883\uff0c\u6216\u8005\u76f4\u63a5\u4f7f\u7528\u6211\u4eec\u63d0\u4f9b\u7684docker \u73af\u5883\u3002 \u4e0b\u9762\u4ee5 reorg layer \u4e3a\u4f8b\u5b50\uff0c\u8bb2\u89e3\u5982\u4f55\u6dfb\u52a0\u65b0\u7684layer\uff0c\u4e3b\u8981\u4fee\u6539\u4ee5\u4e0b\u51e0\u4e2a\u6587\u4ef6 2. Caffe proto \u6587\u4ef6\u4fee\u6539 \u00b6 2.1 \u4fee\u6539caffe proto \u00b6 Mace \u539f\u59cb\u4ee3\u7801\u4e0b\u8f7d\u540e\uff0c\u7528 SGS_IPU_SDK/Scripts/CaffeConvertTool/third_party/caffe/caffe.proto \u66ff\u6362\u6389mace \u5de5\u7a0b \u8def\u5f84\u4e0bmace/third_party/caffe \u4e0bcaffe.proto \u6587\u4ef6\u3002\u56e0\u4e3asigmastar \u5728mace \u57fa\u7840\u4e0a\u505a\u4e86\u4e8c\u6b21\u5f00\u53d1\uff0c\u6240\u4ee5sigmstar \u652f\u6301 \u7684caffe layer \u5df2\u7ecf\u8fdc\u8fdc\u591a\u4e8e\u539f\u751f\u7684mace \u652f\u6301\u6570\u91cf\u3002\u8981\u6dfb\u52a0\u65b0\u7684layer\uff0c\u8bf7\u4ee5sigmastar \u7684caffe proto \u6587\u4ef6\u4f5c\u4e3a\u57fa\u7840 \u6dfb\u52a0\u3002 optional ReorgParameter reorg_param = 157 ; } message ReorgParameter { optional uint32 stride = 1 ; optional bool reverse = 2 [ default = false ] ; } 2.2 \u7f16\u8bd1proto \u6587\u4ef6 \u00b6 \u5728mace \u5f00\u53d1\u73af\u5883\u4e2d cd pathToMace/ bazel build third_party/caffe/caffe_py \u5728bazel-genfiles \u4e0b\u751f\u6210caffe_pb2.py \u5c06\u4e0a\u9762\u4fee\u6539\u540e\u7684caffe.proto \u548c\u751f\u6210\u7684caffe_pb2.py \u66ff\u6362 SGS_IPU_SDK/Scripts/CaffeConvertTool/third_party/caffe \u540c \u540d\u6587\u4ef6\uff0c\u7136\u540e\u6309\u7167\u5982\u4e0b\u987a\u5e8f\u4fee\u6539\u4ee3\u7801 3. \u4fee\u6539caffe_converter.py \u00b6 \u6587\u4ef6\u8def\u5f84 SGS_IPU_SDK/Scripts/CaffeConvertTool/mace/python/tools/converter_tool/caffe_converter.py \u8be5\u6587\u4ef6\u7684\u4f5c\u7528\u662f\u628acaffe\u6a21\u578b\u8f6c\u6362\u4e3amace\u6a21\u578b\uff0c\u5e76\u4fdd\u5b58\u8be5layer\u7684\u53c2\u6570 Reorg ':self.convert_Reorg, ... ... def convert_Reorg ( self , caffe_op ): op = self . convert_general_op ( caffe_op ) op . type = \"Reorg\" param = caffe_op . layer . reorg_param stride_arg = op . arg . add () stride_arg . name = \"stride\" stride_arg . i = 1 #default is true if param . HasField ( 'stride' ): stride_arg . i = int ( param . stride ) 4. \u4fee\u6539shape_inference.py \u00b6 \u6587\u4ef6\u8def\u5f84 SGS_IPU_SDK/Scripts/CaffeConvertTool/mace/python/tools/converter_tool/shape_inference.py \u8be5\u6587\u4ef6\u7684\u4f5c\u7528\u662f\u8ba1\u7b97layer\u7684output shape Reorg ': self.infer_shape_Reorg, ... ... def infer_shape_Reorg ( self , op ): #only support stride is 2 output_shape = self . _output_shape_cache [ op . input [ 0 ]] input_shape = list ( self . _output_shape_cache [ op . input [ 0 ]]) input_n = input_shape [ 0 ] input_c = input_shape [ 1 ] input_h = input_shape [ 2 ] input_w = input_shape [ 3 ] output_shape = [ input_n , int ( input_c * 4 ), int ( input_h / 2 ), int ( input_w / 2 )] self . add_output_shape ( op , [ output_shape ]) 5. \u4fee\u6539SGSModel_transform.py \u00b6 \u5982\u4e0b\u56fe\u6240\u793a\uff0c\u6211\u4eec\u53d1\u73b0reorg\u5728NCHW\u7684\u6392\u5217\u987a\u5e8f\u4e0b\uff0c\u5b83\u5b9e\u9645\u4e0a\u662f\u5bf9\u6570\u636e\u505a\u4e86\u4e00\u4e2a\u91cd\u6392\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u6700\u540e\u62c6\u89e3\u51fa\u6765\u7684\u7b97\u5b50\u7ec4\u5408\u662f \u6309\u7167\u7b97\u5b50\u7ec4\u5408\u987a\u5e8f\uff0c\u7f16\u5199\u4ee3\u7801 \u6587\u4ef6\u8def\u5f84 SGS_IPU_SDK/Scripts/CaffeConvertTool/mace/python/tools/SGSModel_transform.py \u8be5\u6587\u4ef6\u4f5c\u7528\u662f\u589e\u52a0\u8be5layer \u7684\u62c6\u89e3\u51fd\u6570\u3002\u5373\u7528Sigmastar \u63d0\u4f9b\u7684\u57fa\u672c\u7b97\u5b50\u5b9e\u73b0\u8be5layer\u3002 Reorg ':self.split_Reorg, ... ... def split_Reorg ( self , op ): #only support strid is 2 [ n , c , h , w ] = op . output_shape [ 0 ] . dims [:] c = int ( c / 4 ) op_name = op . name xi = op . input [ 0 ] ... ... \u81f3\u6b64\uff0c\u65b0\u7684layer \u652f\u6301\u6dfb\u52a0\u5b8c\u6210 6. Layer\u62c6\u89e3\u6ce8\u610f\u4e8b\u9879\u4e0e\u6280\u5de7 \u00b6 6.1. Layer\u62c6\u89e3\u6ce8\u610f\u4e8b\u9879\u4e0e\u6280\u5de7 \u6570\u636e\u7ef4\u5ea6\u7684\u95ee\u9898 \u00b6 \u5728caffe\u7f51\u7edc\u4e2d\uff0c\u4f7f\u7528NCHW\u6570\u636e\u6392\u5217\u3002\u800csigmastar\u4f7f\u7528NHWC\u7684\u987a\u5e8f\u8fdb\u884c\u6570\u636e\u8ba1\u7b97\uff08\u4e0etensorflow\u7c7b\u4f3c\uff09\u3002\u6240\u4ee5\u5728\u6a21\u578b\u8f6c\u6362\u6210sim\u6a21\u578b\u7684\u65f6\u5019\uff0c\u4f1a\u5bf9\u6240\u67094\u7ef4\u5ea6\u7684shape\u548c\u6570\u636e\u505a\u4e00\u6b21\u8f6c\u6362\u3002\u5373NCHW\u8f6c\u5230NHWC \u53c2\u8003\u4ee3\u7801\uff1a SGS_IPU_SDK/Scripts/CaffeConvertTool/mace/python/tools/SGSModel_converter.py \u5bf9\u4e8etensor data\u7684\u8f6c\u6362 def _creatBuffer ( self ): ... ... if len ( ori_shape ) == 4 : #transpose data to NHWC six . print_ ( \"Reshape \" , tensor . name , \"to NHWC\" ) data = np . array ( ori_data ) data = data . reshape ( ori_shape ) data = data . transpose ( 0 , 2 , 3 , 1 ) \u5bf9\u4e8eshape\u7684\u8f6c\u6362 def _creatTensor ( self ): ... ... if len ( shape ) == 4 and data_format == mace_pb2 . DT_NCHW : Transformer . transpose_shape ( shape , [ 0 , 2 , 3 , 1 ]) tflite . Tensor . TensorStartShapeVector ( self . _builder , len ( shape )) \u56e0\u4e3ashape\u5728\u521b\u5efasim\u6a21\u578b\u7684\u65f6\u5019\u4f1a\u88ab\u5f3a\u884c\u6539\u53d8\uff0c\u6240\u4ee5\u62c6\u89e3\u7684\u65f6\u5019\u8981\u6ce8\u610f \uff081\uff09\u6709axis\u53c2\u6570\u7684\uff0c\u8981\u6ce8\u610f\u987a\u5e8f\u4ea4\u6362 \u6bd4\u5982`concat layer\uff0ccaffe model\u91cc\u9762\uff0c\u5b83\u8981\u5bf9C\u7eac\u5ea6\u505aconcat\uff0c\u5176axis\u4e3a1\u3002\u7f51\u7edc\u8f6c\u6362\u540e\uff0cC\u4e3a\u6362\u5230\u4e86\u6700\u4f4e\u7ef4\uff0c\u6240 \u4ee5\u8981\u4fee\u6539axis\u4e3a3\uff0c\u4ee3\u7801\u5982\u4e0b\u3002\u76f8\u4f3c\u7684\u8fd8\u6709split\u3001PRelu\u7b49 def split_Concat ( self , op ): ... ... if len ( output_shape [ 0 ] . dims ) == 4 : #nchw -> nhwc if arg [ i ] . i == 1 : arg [ i ] . i = 3 else if arg [ i ] . i == 2 : arg [ i ] . i = 1 else if arg [ i ] . i == 3 : arg [ i ] . i = 2 \uff082\uff09\u6307\u5b9a\u7b97\u5b50output_shape\u7684\u65f6\u5019\uff0c\u7279\u522b\u662f4\u7ef4\u7684\u8f93\u51fa\uff0c\u8981\u6ce8\u610f\u987a\u5e8f\u53d8\u5316\u5e26\u6765\u7684\u5f71\u54cd\u3002\u6bd4\u5982\u5e0c\u671btensor\u7684\u8f93\u51fa\u662f[A,B,C,D]\uff0c\u90a3\u4e48\u4ee3\u7801\u4e2d\u6211\u4eec\u5199\u7684\u6570\u503c\u4e3a[A,D,B,C]\u3002\u56e0\u4e3a[A,D,B,C]\u7ecf\u8fc7\u4e0a\u9762\u4ee3\u7801\u7684\u8f6c\u6362\uff0c\u5c31\u5f97\u5230\u4e86[A,B,C,D]\u8fd9\u4e2a\u987a\u5e8f \uff083\uff09\u5728NCHW \u6570\u636e\u6392\u5217\u4e0b\u6709\u5f88\u5f3a\u89c4\u5f8b\u7684layer\uff0c\u53ef\u4ee5\u5148\u8f6c\u5230NCHW \u4e0b\u64cd\u4f5c\u3002\u6bd4\u5982\u4e0a\u9762\u63d0\u5230\u7684reorg layer\u3002 \uff084\uff09\u7528sdk \u91cc\u9762\u63d0\u4f9b\u7684Netron \u5de5\u5177\u6253\u5f00\u8f6c\u6362\u540e\u7684sim \u6a21\u578b\uff0c\u65b9\u4fbf\u67e5\u770b\u5404\u79cd\u5c5e\u6027\u548cshape\u3002 6.2. \u5efa\u8bae\u62c6\u89e3\u6d41\u7a0b \u00b6 \u7efc\u4e0a\u6240\u8ff0\uff0c\u5728\u62c6\u89e3\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u5efa\u8bae\u6309\u7167\u5982\u4e0b\u6d41\u7a0b\u8fdb\u884c 6.3. \u6570\u636e\u5bf9\u6bd4\u53ca\u9a8c\u8bc1 \u00b6 \u524d\u671f\u53ef\u4ee5\u7528python \u521b\u5efatensorflow \u7b97\u5b50\u7684\u65b9\u6cd5\uff0c\u8fdb\u884c\u9a8c\u8bc1\u3002 \u5f53\u9a8c\u8bc1\u5b8c\u6210\uff0c\u518d\u4fee\u6539SGS_IPU_SDK \u7684\u76f8\u5173\u4ee3\u7801\uff0c\u53c2\u8003 Dump_Debug Tool \u7ae0\u8282\uff0cdump \u51fa\u6700\u540e\u7ed3\u679c\u4e0egolden \u6bd4\u5bf9\u3002","title":"Adding A New Layer"},{"location":"module/User_Guide/IPU260/Adding_A_New_Layer.html#1","text":"\u672c\u8282\u4ec5\u9002\u7528\u4e8ecaffe \u6a21\u578b\u3002\u5bf9\u4e8esigmastar \u8fd8\u672a\u5b9e\u73b0\u7684layer\uff0c\u7528sigmastar \u63d0\u4f9b\u5e95\u5c42\u7b97\u5b50\u6765\u7ec4\u5408\u5b9e\u73b0\u3002\u5e95\u5c42\u7b97\u5b50\u4e0e tensorflow \u7684\u7b97\u5b50\u7c7b\u4f3c\uff0c\u652f\u6301\u7684\u7b97\u5b50\u53c2\u8003 DLA SDK\u652f\u6301\uff1aTensofFlow \u652f\u6301\u7b97\u5b50 \u652f\u6301\u7b97\u5b50\u8f6c\u6362\u6d41\u7a0b\u5982\u4e0b\u56fe CaffeConvert Tool (\u4ee3\u7801\u4f4d\u7f6e\uff1a SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py ) caffe \u6a21\u578b\u8f6c\u6362\u5de5\u5177\u501f\u9274\u4e86\u5c0f\u7c73\u5f00\u6e90\u6846\u67b6mace \u7684\u8bbe\u8ba1\uff0c\u8981\u6dfb\u52a0\u65b0\u7684layer\uff0c\u8bf7\u5148\u5230 Xiaomi MACE \u4e0b\u8f7d\u539f\u59cb\u4ee3\u7801\uff0c\u6309\u7167mace \u5b98\u65b9\u6587\u6863\u914d\u7f6e \u597d\u7f16\u8bd1\u73af\u5883\uff0c\u6216\u8005\u76f4\u63a5\u4f7f\u7528\u6211\u4eec\u63d0\u4f9b\u7684docker \u73af\u5883\u3002 \u4e0b\u9762\u4ee5 reorg layer \u4e3a\u4f8b\u5b50\uff0c\u8bb2\u89e3\u5982\u4f55\u6dfb\u52a0\u65b0\u7684layer\uff0c\u4e3b\u8981\u4fee\u6539\u4ee5\u4e0b\u51e0\u4e2a\u6587\u4ef6","title":"1. \u6982\u8ff0"},{"location":"module/User_Guide/IPU260/Adding_A_New_Layer.html#2-caffe-proto","text":"","title":"2. Caffe proto \u6587\u4ef6\u4fee\u6539"},{"location":"module/User_Guide/IPU260/Adding_A_New_Layer.html#21-caffe-proto","text":"Mace \u539f\u59cb\u4ee3\u7801\u4e0b\u8f7d\u540e\uff0c\u7528 SGS_IPU_SDK/Scripts/CaffeConvertTool/third_party/caffe/caffe.proto \u66ff\u6362\u6389mace \u5de5\u7a0b \u8def\u5f84\u4e0bmace/third_party/caffe \u4e0bcaffe.proto \u6587\u4ef6\u3002\u56e0\u4e3asigmastar \u5728mace \u57fa\u7840\u4e0a\u505a\u4e86\u4e8c\u6b21\u5f00\u53d1\uff0c\u6240\u4ee5sigmstar \u652f\u6301 \u7684caffe layer \u5df2\u7ecf\u8fdc\u8fdc\u591a\u4e8e\u539f\u751f\u7684mace \u652f\u6301\u6570\u91cf\u3002\u8981\u6dfb\u52a0\u65b0\u7684layer\uff0c\u8bf7\u4ee5sigmastar \u7684caffe proto \u6587\u4ef6\u4f5c\u4e3a\u57fa\u7840 \u6dfb\u52a0\u3002 optional ReorgParameter reorg_param = 157 ; } message ReorgParameter { optional uint32 stride = 1 ; optional bool reverse = 2 [ default = false ] ; }","title":"2.1 \u4fee\u6539caffe proto"},{"location":"module/User_Guide/IPU260/Adding_A_New_Layer.html#22-proto","text":"\u5728mace \u5f00\u53d1\u73af\u5883\u4e2d cd pathToMace/ bazel build third_party/caffe/caffe_py \u5728bazel-genfiles \u4e0b\u751f\u6210caffe_pb2.py \u5c06\u4e0a\u9762\u4fee\u6539\u540e\u7684caffe.proto \u548c\u751f\u6210\u7684caffe_pb2.py \u66ff\u6362 SGS_IPU_SDK/Scripts/CaffeConvertTool/third_party/caffe \u540c \u540d\u6587\u4ef6\uff0c\u7136\u540e\u6309\u7167\u5982\u4e0b\u987a\u5e8f\u4fee\u6539\u4ee3\u7801","title":"2.2 \u7f16\u8bd1proto \u6587\u4ef6"},{"location":"module/User_Guide/IPU260/Adding_A_New_Layer.html#3-caffe_converterpy","text":"\u6587\u4ef6\u8def\u5f84 SGS_IPU_SDK/Scripts/CaffeConvertTool/mace/python/tools/converter_tool/caffe_converter.py \u8be5\u6587\u4ef6\u7684\u4f5c\u7528\u662f\u628acaffe\u6a21\u578b\u8f6c\u6362\u4e3amace\u6a21\u578b\uff0c\u5e76\u4fdd\u5b58\u8be5layer\u7684\u53c2\u6570 Reorg ':self.convert_Reorg, ... ... def convert_Reorg ( self , caffe_op ): op = self . convert_general_op ( caffe_op ) op . type = \"Reorg\" param = caffe_op . layer . reorg_param stride_arg = op . arg . add () stride_arg . name = \"stride\" stride_arg . i = 1 #default is true if param . HasField ( 'stride' ): stride_arg . i = int ( param . stride )","title":"3. \u4fee\u6539caffe_converter.py"},{"location":"module/User_Guide/IPU260/Adding_A_New_Layer.html#4-shape_inferencepy","text":"\u6587\u4ef6\u8def\u5f84 SGS_IPU_SDK/Scripts/CaffeConvertTool/mace/python/tools/converter_tool/shape_inference.py \u8be5\u6587\u4ef6\u7684\u4f5c\u7528\u662f\u8ba1\u7b97layer\u7684output shape Reorg ': self.infer_shape_Reorg, ... ... def infer_shape_Reorg ( self , op ): #only support stride is 2 output_shape = self . _output_shape_cache [ op . input [ 0 ]] input_shape = list ( self . _output_shape_cache [ op . input [ 0 ]]) input_n = input_shape [ 0 ] input_c = input_shape [ 1 ] input_h = input_shape [ 2 ] input_w = input_shape [ 3 ] output_shape = [ input_n , int ( input_c * 4 ), int ( input_h / 2 ), int ( input_w / 2 )] self . add_output_shape ( op , [ output_shape ])","title":"4. \u4fee\u6539shape_inference.py"},{"location":"module/User_Guide/IPU260/Adding_A_New_Layer.html#5-sgsmodel_transformpy","text":"\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u6211\u4eec\u53d1\u73b0reorg\u5728NCHW\u7684\u6392\u5217\u987a\u5e8f\u4e0b\uff0c\u5b83\u5b9e\u9645\u4e0a\u662f\u5bf9\u6570\u636e\u505a\u4e86\u4e00\u4e2a\u91cd\u6392\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u6700\u540e\u62c6\u89e3\u51fa\u6765\u7684\u7b97\u5b50\u7ec4\u5408\u662f \u6309\u7167\u7b97\u5b50\u7ec4\u5408\u987a\u5e8f\uff0c\u7f16\u5199\u4ee3\u7801 \u6587\u4ef6\u8def\u5f84 SGS_IPU_SDK/Scripts/CaffeConvertTool/mace/python/tools/SGSModel_transform.py \u8be5\u6587\u4ef6\u4f5c\u7528\u662f\u589e\u52a0\u8be5layer \u7684\u62c6\u89e3\u51fd\u6570\u3002\u5373\u7528Sigmastar \u63d0\u4f9b\u7684\u57fa\u672c\u7b97\u5b50\u5b9e\u73b0\u8be5layer\u3002 Reorg ':self.split_Reorg, ... ... def split_Reorg ( self , op ): #only support strid is 2 [ n , c , h , w ] = op . output_shape [ 0 ] . dims [:] c = int ( c / 4 ) op_name = op . name xi = op . input [ 0 ] ... ... \u81f3\u6b64\uff0c\u65b0\u7684layer \u652f\u6301\u6dfb\u52a0\u5b8c\u6210","title":"5. \u4fee\u6539SGSModel_transform.py"},{"location":"module/User_Guide/IPU260/Adding_A_New_Layer.html#6-layer","text":"","title":"6. Layer\u62c6\u89e3\u6ce8\u610f\u4e8b\u9879\u4e0e\u6280\u5de7"},{"location":"module/User_Guide/IPU260/Adding_A_New_Layer.html#61-layer","text":"\u5728caffe\u7f51\u7edc\u4e2d\uff0c\u4f7f\u7528NCHW\u6570\u636e\u6392\u5217\u3002\u800csigmastar\u4f7f\u7528NHWC\u7684\u987a\u5e8f\u8fdb\u884c\u6570\u636e\u8ba1\u7b97\uff08\u4e0etensorflow\u7c7b\u4f3c\uff09\u3002\u6240\u4ee5\u5728\u6a21\u578b\u8f6c\u6362\u6210sim\u6a21\u578b\u7684\u65f6\u5019\uff0c\u4f1a\u5bf9\u6240\u67094\u7ef4\u5ea6\u7684shape\u548c\u6570\u636e\u505a\u4e00\u6b21\u8f6c\u6362\u3002\u5373NCHW\u8f6c\u5230NHWC \u53c2\u8003\u4ee3\u7801\uff1a SGS_IPU_SDK/Scripts/CaffeConvertTool/mace/python/tools/SGSModel_converter.py \u5bf9\u4e8etensor data\u7684\u8f6c\u6362 def _creatBuffer ( self ): ... ... if len ( ori_shape ) == 4 : #transpose data to NHWC six . print_ ( \"Reshape \" , tensor . name , \"to NHWC\" ) data = np . array ( ori_data ) data = data . reshape ( ori_shape ) data = data . transpose ( 0 , 2 , 3 , 1 ) \u5bf9\u4e8eshape\u7684\u8f6c\u6362 def _creatTensor ( self ): ... ... if len ( shape ) == 4 and data_format == mace_pb2 . DT_NCHW : Transformer . transpose_shape ( shape , [ 0 , 2 , 3 , 1 ]) tflite . Tensor . TensorStartShapeVector ( self . _builder , len ( shape )) \u56e0\u4e3ashape\u5728\u521b\u5efasim\u6a21\u578b\u7684\u65f6\u5019\u4f1a\u88ab\u5f3a\u884c\u6539\u53d8\uff0c\u6240\u4ee5\u62c6\u89e3\u7684\u65f6\u5019\u8981\u6ce8\u610f \uff081\uff09\u6709axis\u53c2\u6570\u7684\uff0c\u8981\u6ce8\u610f\u987a\u5e8f\u4ea4\u6362 \u6bd4\u5982`concat layer\uff0ccaffe model\u91cc\u9762\uff0c\u5b83\u8981\u5bf9C\u7eac\u5ea6\u505aconcat\uff0c\u5176axis\u4e3a1\u3002\u7f51\u7edc\u8f6c\u6362\u540e\uff0cC\u4e3a\u6362\u5230\u4e86\u6700\u4f4e\u7ef4\uff0c\u6240 \u4ee5\u8981\u4fee\u6539axis\u4e3a3\uff0c\u4ee3\u7801\u5982\u4e0b\u3002\u76f8\u4f3c\u7684\u8fd8\u6709split\u3001PRelu\u7b49 def split_Concat ( self , op ): ... ... if len ( output_shape [ 0 ] . dims ) == 4 : #nchw -> nhwc if arg [ i ] . i == 1 : arg [ i ] . i = 3 else if arg [ i ] . i == 2 : arg [ i ] . i = 1 else if arg [ i ] . i == 3 : arg [ i ] . i = 2 \uff082\uff09\u6307\u5b9a\u7b97\u5b50output_shape\u7684\u65f6\u5019\uff0c\u7279\u522b\u662f4\u7ef4\u7684\u8f93\u51fa\uff0c\u8981\u6ce8\u610f\u987a\u5e8f\u53d8\u5316\u5e26\u6765\u7684\u5f71\u54cd\u3002\u6bd4\u5982\u5e0c\u671btensor\u7684\u8f93\u51fa\u662f[A,B,C,D]\uff0c\u90a3\u4e48\u4ee3\u7801\u4e2d\u6211\u4eec\u5199\u7684\u6570\u503c\u4e3a[A,D,B,C]\u3002\u56e0\u4e3a[A,D,B,C]\u7ecf\u8fc7\u4e0a\u9762\u4ee3\u7801\u7684\u8f6c\u6362\uff0c\u5c31\u5f97\u5230\u4e86[A,B,C,D]\u8fd9\u4e2a\u987a\u5e8f \uff083\uff09\u5728NCHW \u6570\u636e\u6392\u5217\u4e0b\u6709\u5f88\u5f3a\u89c4\u5f8b\u7684layer\uff0c\u53ef\u4ee5\u5148\u8f6c\u5230NCHW \u4e0b\u64cd\u4f5c\u3002\u6bd4\u5982\u4e0a\u9762\u63d0\u5230\u7684reorg layer\u3002 \uff084\uff09\u7528sdk \u91cc\u9762\u63d0\u4f9b\u7684Netron \u5de5\u5177\u6253\u5f00\u8f6c\u6362\u540e\u7684sim \u6a21\u578b\uff0c\u65b9\u4fbf\u67e5\u770b\u5404\u79cd\u5c5e\u6027\u548cshape\u3002","title":"6.1. Layer\u62c6\u89e3\u6ce8\u610f\u4e8b\u9879\u4e0e\u6280\u5de7 \u6570\u636e\u7ef4\u5ea6\u7684\u95ee\u9898"},{"location":"module/User_Guide/IPU260/Adding_A_New_Layer.html#62","text":"\u7efc\u4e0a\u6240\u8ff0\uff0c\u5728\u62c6\u89e3\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u5efa\u8bae\u6309\u7167\u5982\u4e0b\u6d41\u7a0b\u8fdb\u884c","title":"6.2. \u5efa\u8bae\u62c6\u89e3\u6d41\u7a0b"},{"location":"module/User_Guide/IPU260/Adding_A_New_Layer.html#63","text":"\u524d\u671f\u53ef\u4ee5\u7528python \u521b\u5efatensorflow \u7b97\u5b50\u7684\u65b9\u6cd5\uff0c\u8fdb\u884c\u9a8c\u8bc1\u3002 \u5f53\u9a8c\u8bc1\u5b8c\u6210\uff0c\u518d\u4fee\u6539SGS_IPU_SDK \u7684\u76f8\u5173\u4ee3\u7801\uff0c\u53c2\u8003 Dump_Debug Tool \u7ae0\u8282\uff0cdump \u51fa\u6700\u540e\u7ed3\u679c\u4e0egolden \u6bd4\u5bf9\u3002","title":"6.3. \u6570\u636e\u5bf9\u6bd4\u53ca\u9a8c\u8bc1"},{"location":"module/User_Guide/IPU260/Calibrate.html","text":"3.1. Calibrator\u7b80\u4ecb \u00b6 CalibratorTool \u8bf4\u660e \u5de5\u5177\u4f4d\u7f6e SGS_IPU_SDK/Scripts/calibrator/calibrator.py \u5de5\u5177\u4f5c\u7528 \u5c06SigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u4e3aSigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b \u4f7f\u7528\u987b\u77e5 \u2460 Calibrator\u5de5\u5177\u53ef\u4ee5\u652f\u6301\u591a\u6570\u6a21\u578b\u7684\u8f6c\u6362\uff0c\u5c11\u90e8\u5206\u6a21\u578b\u5982\u5206\u6bb5\u7f51\u7edcfaste-rcnn\u9700\u81ea\u884c\u5b9e\u73b0Calibrator \u2460 \u666e\u901a\u6a21\u578b\u8f6c\u6362 Calitor \u2461 Calibrator\u81ea\u5b9e\u73b0(faste-rcnn) calibrator_custom.calibrator \u2462 \u6a21\u578b\u53c2\u6570\u91cf\u8f83\u5c0fcalibrator\u5de5\u5177\u65e0\u6cd5\u8fbe\u5230\u6ee1\u610f\u7684\u7cbe\u5ea6\u65f6 torch_calibrator \u2463 \u6a21\u578b\u53c2\u6570\u91cf\u8f83\u5927\u671f\u5f85\u4f7f\u75284bit\u91cf\u5316\u51cf\u5c0f\u6a21\u578b\u5927\u5c0f torch_calibrator \u2461 \u6a21\u578b\u91cf\u5316\u7cbe\u5ea6\u987b\u77e5 \u2460 \u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u6210\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u9700\u898130\u5f20\u5de6\u53f3\u8bad\u7ec3\u56fe\u7247\u7528\u6765\u5206\u6790\u548c\u91cf\u5316\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u7684\u6570\u636e \u2461 \u7ed9\u5b9a\u5355\u5f20\u56fe\u7247\u6587\u4ef6\uff0c\u4f9d\u7136\u53ef\u4ee5\u8f6c\u6362\u4e3a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff0c\u4f46\u662f\u5176\u6a21\u578b\u7cbe\u5ea6\u53ef\u80fd\u4f1a\u53d7\u5230\u5f71\u54cd \u2462 \u8f6c\u6362\u7f51\u7edc\u65f6\u53ef\u4ee5\u5728input_config.ini\u6587\u4ef6\u4e2d\u9488\u5bf9\u5377\u79ef\u914d\u7f6e\u4e0d\u540c\u7684\u91cf\u5316\u4fe1\u606f\uff0c\u4ece\u800c\u83b7\u5f97\u7cbe\u5ea6\u548c\u901f\u5ea6\u7684\u5e73\u8861 CONV_CONFIG \u4f7f\u7528\u524d\u8bf7\u5148\u5728SGS_IPU_SDK \u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK source cfg_env.sh 3.2. Calibrator\u5de5\u5177\u4f7f\u7528\u8bf4\u660e \u00b6 3.2.1 Calibrator\u5de5\u5177\u4f7f\u7528\u793a\u4f8b \u00b6 \u8fdb\u5165\u5230\u8be5\u5de5\u5177\u76ee\u5f55\uff0c\u6267\u884c\uff1a python3 calibrator.py \\ -i ~/SGS_Models/resource/detection/coco2017_calibration_set32 \\ -m ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1_float.sim \\ -n ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1.py \\ --input_config ~/SGS_Models/tensorflow/ssd_mobilenet_v1/input_config.ini \\ --num_process 20 \u6216\u8005\u53ef\u4ee5\u4f7f\u7528\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\uff1a python3 calibrator.py \\ -i ~/SGS_Models/resource/detection/file.list \\ -m ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1_float.sim \\ -n ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1.py \\ --input_config ~/SGS_Models/tensorflow/ssd_mobilenet_v1/input_config.ini \\ --num_process 20 3.2.2 Calibrator\u5de5\u5177\u4f7f\u7528\u53c2\u6570\u8bf4\u660e \u00b6 (1) \u5fc5\u9009\u53c2\u6570 -i \u6216 --image : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u6240\u9700\u7684\u56fe\u7247\u6587\u4ef6\u8def\u5f84\u3002 \u4f7f\u7528\u987b\u77e5 \u652f\u6301\u4f7f\u7528\u5355\u5f20\u56fe\u7247\u8def\u5f84\u8fdb\u884c\u4f20\u53c2\uff0c\u4e5f\u652f\u6301\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\uff0c\u6216\u5b58\u50a8\u56fe\u7247\u8def\u5f84\u5217\u8868\u7684\u6587\u4ef6\u3002\u4f7f\u7528\u8def\u5f84\u5217\u8868\u5f62\u5f0f\u65f6\u53ef\u53c2\u8003\u5982\u4e0b\u65b9\u5f0f\uff1a \u7f51\u7edc\u6a21\u578b\u4e3a\u5355\u8f93\u5165\u65f6\uff1a -i ~/SGS_IPU_SDK/image_test/2007000364.jpg \u7f51\u7edc\u6a21\u578b\u4e3a\u591a\u8f93\u5165\u65f6\uff1a -i /SGS_IPU_SDK/image_test/2007000364.jpg, /SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp -m \u6216 --model \uff1a\u6307\u5b9achapter2\u4e2d\u8f6c\u6362\u51fa\u7684\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 --input_config \uff1a\u6307\u5b9ainput_config.ini\u6587\u4ef6\u8def\u5f84\u3002 \u4f7f\u7528\u987b\u77e5 \u8be5\u6587\u4ef6\u4e0e ConvertTool\u7ae0 \u4e2d\u8f6c\u6362\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6240\u7528\u6587\u4ef6\u4e3a\u540c\u4e00\u6587\u4ef6\uff0c\u5177\u4f53\u53ef\u53c2\u8003 input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e \u3002 -n \u6216 --preprocess : \u6307\u5b9a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4e0e\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\u76f8\u5173\u3002 \u4f7f\u7528\u987b\u77e5 \u591a\u8f93\u5165\u6a21\u578b\u7684\u524d\u5904\u7406\u53c2\u6570\u9700\u4f7f\u7528\u591a\u4e2a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u524d\u5904\u7406\u7684\u4e2a\u6570\u548c\u987a\u5e8f\u9700\u4e0e\u6a21\u578b\u8f93\u5165\u4e2a\u6570\u548c\u987a\u5e8f\u4fdd\u6301\u4e00\u81f4\u3002\u4f8b\u5982: -n preprocess1.py,preprocess2.py \u6216\u8005 --preprocess preprocess1.py,preprocess2.py \u4e3a\u4e86\u5728\u8f6c\u6362\u7f51\u7edc\u65f6\u5c3d\u53ef\u80fd\u51cf\u5c0f\u7cbe\u5ea6\u7684\u4e22\u5931\uff0c\u8bf7\u4f7f\u7528\u4e0e\u8bad\u7ec3\u76f8\u540c\u7684\u56fe\u7247\u524d\u5904\u7406\u65b9\u5f0f\uff0c\u6bcf\u79cd\u524d\u5904\u7406\u65b9\u5f0f\u9700\u72ec\u7acb\u7f16\u5199python\u6587\u4ef6\u3002 \u652f\u6301\u4f7f\u7528\u4ee5\u4e0b\u4e24\u79cd\u65b9\u5f0f\u6307\u5b9a\u524d\u5904\u7406\uff1a -n/--preprocess \u53c2\u6570\u4e3a\u7f16\u5199\u7684\u6587\u4ef6\u540d\u79f0\uff0c\u4e0d\u9700\u8981\u6307\u5b9a\u7f16\u5199\u6587\u4ef6\u7684\u8def\u5f84\uff1a\u8bf7\u5c06\u6587\u4ef6\u4fdd\u5b58\u5230 SGS_IPU_SDK/Scripts/calibrator/preprocess \u6587\u4ef6\u5939\u5185\uff0c\u5e76\u5728preprocess_method/ init .py \u6587\u4ef6\u4e2d\u589e\u52a0\u6587\u4ef6\u540d\u79f0\u3002 -n/--preprocess \u53c2\u6570\u4e3a\u524d\u5904\u7406Python\u7684\u6587\u4ef6\u8def\u5f84\u3002 \u524d\u5904\u7406\u6587\u4ef6\u65b9\u6cd5\u5e94\u6ce8\u610f\u4e0einput_config.ini\u4e2d\u7684[input_config]\u4fe1\u606f\u5339\u914d\uff0c\u8be6\u89c1 \u9644\u5f55 \u524d\u5904\u7406\u548c\u914d\u7f6e\u6587\u4ef6\u6ce8\u610f\u8981\u70b9 \u3002 \u53ef\u53c2\u8003\u4ee5caffe_resnet18\u7f51\u7edc\u4e3a\u4f8b\u7f16\u5199\u7684\u56fe\u7247\u524d\u5904\u7406\u6587\u4ef6\uff0c\u8be6\u89c1 \u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5 (2) \u53ef\u9009\u53c2\u6570 -o \u6216 --output : \u6307\u5b9a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u8def\u5f84\u3002 \u4f7f\u7528\u987b\u77e5 \u6307\u5b9a\u5230\u6587\u4ef6\u5939\uff0c\u5c06\u81ea\u52a8\u4ee5\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u524d\u7f00\u547d\u540d\uff0c\u540e\u63a5'fixed.sim'\uff1b \u6307\u5b9a\u5230\u5177\u4f53\u8def\u5f84\u548c\u6587\u4ef6\u540d\uff0c\u5c06\u4ee5\u6307\u5b9a\u8def\u5f84\u548c\u6587\u4ef6\u540d\u547d\u540d\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff1b \u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\uff0c\u5c06\u4ee5\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u50a8\u5b58\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u3002 --work_mode : \u6307\u5b9a\u6a21\u578b\u8f6c\u6362\u4e3a\u5355\u6838\u6a21\u5f0f\u6216\u8005\u53cc\u6838\u6a21\u5f0f\u3002 \u4f7f\u7528\u987b\u77e5 \u53ef\u9009\u6a21\u5f0f\u6709 single_core\uff0c\u8868\u793a\u5355\u6838\u6a21\u578b\u3002 multi_core\uff0c\u8868\u793a\u53cc\u6838\u6a21\u5f0f\u3002 \u82e5\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\uff0c\u9ed8\u8ba4\u4e3a\u5355\u6838\u6a21\u5f0f\u3002 --num_process : \u8fdb\u7a0b\u6570\uff0c\u540c\u65f6\u8fd0\u884c\u7684\u8fdb\u7a0b\u6570\u3002(\u4e0d\u52a0\u8be5\u53c2\u6570\u9ed8\u8ba4\u4e3a10\u4e2a\u8fdb\u7a0b)\u3002 --quant_level : \u9009\u62e9\u91cf\u5316\u7b49\u7ea7\u3002 \u4f7f\u7528\u987b\u77e5 \u53ef\u9009\u6a21\u5f0f\u6709\uff1a L1: \u91c7\u7528\u6700\u5927\u6700\u5c0f\u503c\u5feb\u901f\u5bf9\u6bd4\u6570\u636e\u91cf\u5316\uff0c\u901f\u5ea6\u8f83\u5feb\u3002 L2: \u91c7\u7528\u5feb\u901f\u5bf9\u6bd4\u6570\u636e\u91cf\u5316\u6743\u91cd\u6570\u636e\u3002 L3: \u5bf9\u7edf\u8ba1\u4fe1\u606f\u505a\u8fdb\u4e00\u6b65\u5206\u6790\uff0c\u8fd1\u4f3c\u62df\u5408\u539f\u6709\u6570\u636e\u5206\u5e03\u3002 L4: \u8fd1\u4f3c\u62df\u5408\u6743\u91cd\u6570\u636e\u5206\u5e03\uff0c\u5e76\u5efa\u8bae\u5347\u7ea7\u67d0\u4e9b\u5377\u79ef\u4e3a16bit\u91cf\u5316\u3002 L5: \u91c7\u7528\u9ad8\u7cbe\u5ea6\u6570\u636e\u5206\u6790\u65b9\u6cd5\uff0c\u6781\u5927\u9650\u5ea6\u62df\u5408\u539f\u6709\u6570\u636e\u5206\u5e03\uff0c\u5e76\u5efa\u8bae\u5347\u7ea7\u67d0\u4e9b\u5377\u79ef\u4e3a16bit\u91cf\u5316\u3002 \u9ed8\u8ba4L5\u91cf\u5316\u7b49\u7ea7\uff0c\u7b49\u7ea7\u8d8a\u9ad8\uff0c\u91cf\u5316\u7cbe\u5ea6\u8d8a\u9ad8\uff0c\u91cf\u5316\u901f\u5ea6\u4f1a\u76f8\u5e94\u53d8\u6162\u3002 \u9009\u62e9L2\u3001L3\u6216L4\u65f6\u4f1a\u6839\u636e\u7edf\u8ba1\u4fe1\u606f\u81ea\u52a8\u914d\u7f6e\u5377\u79ef\u7684\u91cf\u5316\u65b9\u5f0f\uff0c\u5982\u679c\u9700\u8981\u5f3a\u5236\u6307\u5b9a\uff0c\u6307\u5b9a\u65b9\u5f0f\u5728 Convert Tool: input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e-CONV_CONFIG \u4e2d\u6709\u8bf4\u660e(\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u5230\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u65f6\uff0c\u5377\u79ef\u91cf\u5316\u652f\u6301 UINT8 \u548c INT16 \u4e24\u79cd\u91cf\u5316\u65b9\u5f0f\u3002\u53ef\u5bf9\u67d0\u4e9b\u5377\u79ef\u5c42\u5355\u72ec\u8bbe\u7f6eINT16\u91cf\u5316\uff0c\u6216\u8005\u5bf9\u5168\u90e8\u5377\u79efINT16\u91cf\u5316\uff1b\u4e0d\u8bbe\u7f6e\u65f6\u9ed8\u8ba4\u4f7f\u7528calibrator\u7684\u63a8\u8350\u91cf\u5316\u65b9\u5f0f)\u3002 3.3. \u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5 \u00b6 \u4e0b\u9762\u4ee5caffe_resnet18\u7f51\u7edc\u4e3a\u4f8b\uff0c\u5bf9\u7f16\u5199\u56fe\u7247\u524d\u5904\u7406\u6587\u4ef6\u8fdb\u884c\u8bf4\u660e\uff1a (1) \u524d\u5904\u7406\u6587\u4ef6\u4f7f\u7528\u793a\u4f8b import cv2 import numpy as np def get_image ( img_path , resizeH = 224 , resizeW = 224 , resizeC = 3 , norm = True , meanB = 104.0 , meanG = 117.0 , meanR = 123.0 , std = 1.0 , rgb = False , nchw = False ): img = cv2 . imread ( img_path , flags =- 1 ) if img is None : raise FileNotFoundError ( 'No such image: {} ' . format ( img_path )) try : img_dim = img . shape [ 2 ] except IndexError : img_dim = 1 if img_dim == 4 : img = cv2 . cvtColor ( img , cv2 . COLOR_BGRA2BGR ) elif img_dim == 1 : img = cv2 . cvtColor ( img , cv2 . COLOR_GRAY2BGR ) img_float = img . astype ( 'float32' ) img_norm = cv2 . resize ( img_float , ( resizeW , resizeH ), interpolation = cv2 . INTER_LINEAR ) if norm and ( resizeC == 3 ): img_norm = ( img_norm - [ meanB , meanG , meanR ]) / std img_norm = img_norm . astype ( 'float32' ) elif norm and ( resizeC == 1 ): img_norm = ( img_norm - meanB ) / std img_norm = img_norm . astype ( 'float32' ) else : img_norm = np . round ( img_norm ) . astype ( 'uint8' ) if rgb : img_norm = cv2 . cvtColor ( img_norm , cv2 . COLOR_BGR2RGB ) if nchw : # NCHW img_norm = np . transpose ( img_norm , axes = ( 2 , 0 , 1 )) return np . expand_dims ( img_norm , 0 ) def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm ) \u4fdd\u5b58\u4e3a caffe_resnet18.py. \u4f7f\u7528\u987b\u77e5 \u5982\u679c\u60f3\u5728 -n/--preprocess \u53c2\u6570\u4e2d\u4f7f\u7528\u6587\u4ef6\u540d\u800c\u975e\u6587\u4ef6\u8def\u5f84\u7684\u65b9\u5f0f\uff0c\u9700\u8fdb\u884c\u5982\u4e0b\u64cd\u4f5c\uff1a \u5728SGS_IPU_SDK/Scripts/calibrator/preprocess_method/ init .py \u6587\u4ef6\u4e2d\u6dfb\u52a0\u521a\u521a\u7f16\u5199\u7684python\u6587\u4ef6: _all_ = [ 'caffe_mobilenet_v2' , 'caffe_resnet18' , 'caffe_resnet50_conv' , 'mobilenet_v1' ] \u5982\u679c\u4e0d\u5728SGS_IPU_SDK/Scripts/calibrator/preprocess_method/ init .py \u6587\u4ef6\u4e2d\u589e\u52a0\uff0c -n/--preprocess \u53c2\u6570\u9700\u4e3acaffe_resnet18.py\u6587\u4ef6\u8def\u5f84\uff0c\u800c\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528\u6587\u4ef6\u540d\u3002 (2) image_preprocess\u51fd\u6570\u8bf4\u660e\uff1a \u4f7f\u7528image_preprocess\u51fd\u6570\u8c03\u7528\uff0c\u6b64\u5904\u52a1\u5fc5\u6309\u7167\u8be5\u65b9\u6cd5\u4e66\u5199\u3002 def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm ) \u7f16\u5199\u56fe\u7247\u5904\u7406\u51fd\u6570\uff08\u51fd\u6570\u540d\u79f0\u4e0d\u9650\uff09\uff0c\u8fd4\u56denp.array \u683c\u5f0f\u7684\u56fe\u7247\u6570\u636e\uff0c\u51fd\u6570\u5fc5\u987b\u5305\u542b2\u4e2a\u53c2\u6570\uff1a \u56fe\u7247\u8def\u5f84 \u5f52\u4e00\u5316\u6807\u8bb0\uff08norm=True\uff09 \u5f52\u4e00\u5316\u6807\u8bb0\u662f\u4e3a\u4e86\u533a\u5206\u7f51\u7edc\u6a21\u578b\u662f\u5426\u662f\u6d6e\u70b9\u6a21\u578b, \u8d4b\u503c\u4e3aTrue\u5373\u53ef\uff0c\u540e\u7ee7\u8f6c\u6362\u4ee5\u53ca\u9a8c\u8bc1\u8fc7\u7a0b\u4e2d\u5747\u65e0\u9700\u8fdb\u884c\u4efb\u4f55\u4fee\u6539\u64cd\u4f5c\u3002 (\u56e0\u4e3a\u5728\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u9636\u6bb5\uff0c\u56fe\u7247\u7684\u5f52\u4e00\u5316\u9700\u8981\u5728\u9001\u8fdb\u7f51\u7edc\u524d\u5904\u7406\u597d\u3002\u4f46\u662f\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u548c\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u5df2\u7ecf\u5305\u542b\u4e86input_config.ini\u6587\u4ef6\u7684\u8bbe\u7f6e\u4fe1\u606f\uff0c\u80fd\u591f\u5c06\u56fe\u7247\u6570\u636e\u81ea\u884c\u505a\u5f52\u4e00\u5316\u5904\u7406\uff0c\u56e0\u6b64\u9001\u8fdb\u7f51\u7edc\u6a21\u578b\u7684\u6570\u636e\u4e0d\u9700\u8981\u505a\u5f52\u4e00\u5316\uff0c\u8fd9\u4e0e\u5728SigmaStar\u786c\u4ef6\u4e0a\u5904\u7406\u65b9\u5f0f\u76f8\u540c\u3002) (3) \u66f4\u8be6\u7ec6\u7684\u56fe\u7247\u524d\u5904\u7406\u51fd\u6570\u793a\u4f8b\uff0c\u8bf7\u53c2\u8003 \u9644\u5f55 \u524d\u5904\u7406\u548c\u914d\u7f6e\u6587\u4ef6\u6ce8\u610f\u8981\u70b9 \uff0c\u5c06\u63d0\u4f9b\u51e0\u4e0b\u51e0\u79cd\u8f93\u5165\u683c\u5f0f\u7684\u6a21\u578b\u524d\u5904\u7406\u793a\u4f8b\uff1a \u2460 training_input_formats\u548cinput_formats\u5747\u4e3aRGB\u6216\u8005\u5747\u4e3aBGR\u7684\u6a21\u578b\u524d\u5904\u7406 \u2461 training_input_formats\u4e3aGRAY\u548cinput_formats\u4e3aGRAY\u7684\u6a21\u578b\u524d\u5904\u7406 \u2462 training_input_formats\u4e3aRGB\u6216BGR\u6216GRAY\u548cinput_formats\u4e3aYUV_NV12\u7684\u6a21\u578b\u524d\u5904\u7406 \u2463 training_input_formats\u548cinput_formats\u5747\u4e3aRAWDATA_S16_NHWC\u6216\u8005\u5747\u4e3aRAWDATA_F32_NHWC\u7684\u6a21\u578b\u524d\u5904\u7406 3.4. calibrator_custom.calibrator\u7b80\u4ecb \u00b6 (1) calibrator_custom.calibrator\u662f\u57fa\u4e8ePython\u7684\u5feb\u901f\u91cf\u5316\u548c\u8f6c\u6362\u6a21\u578b\u7684\u6a21\u5757\u3002\u4f7f\u7528calibrator_custom.calibrator\u53ef\u4ee5\u66f4\u65b9\u4fbf\u7075\u6d3b\u7684\u5bf9\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u8fdb\u884c\u91cf\u5316\u548c\u8f6c\u6362\u3002 (2) \u76ee\u524d\u57fa\u4e8e\u7684docker\u73af\u5883\uff0c\u63d0\u4f9bPython3.7\u7684\u9884\u7f16\u8bd1\u7684Python\u6a21\u5757\u3002 (3) \u4f7f\u7528 calibrator_custom.calibrator \u65f6\uff0c\u9700\u8981\u7ed9\u5b9afloat.sim\u6a21\u578b\u7684\u8def\u5f84\u548c\u5bf9\u5e94\u7684input_config.ini\u7684\u8def\u5f84\uff0c\u7528\u4e8e\u521b\u5efacalibrator\u7684\u5b9e\u4f8b\u3002\u53c2\u6570\u7ed9\u5b9a\u9519\u8bef\uff0c\u5c06\u65e0\u6cd5\u6210\u529f\u521b\u5efacalibrator\u5b9e\u4f8b\uff0c\u5e76\u8fd4\u56deValueError\u3002\u4f7f\u7528\u65b9\u6cd5\u548c\u76f8\u5173API\u63a5\u53e3\u5982\u4e0b\uff1a import calibrator_custom model_path = './mobilenet_v2_float.sim' input_config_path = './input_config.ini' model = calibrator_custom . calibrator ( model_path , input_config_path ) \u5177\u4f53\u7684\u51fd\u6570\u65b9\u6cd5\u8bf7\u53c2\u8003 calibrator_custom.calibrator\u65b9\u6cd5 \u3002 (4) \u5bf9\u4e8e\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u540c\u65f6\u8f6c\u6362\u65f6\uff0c\u63d0\u4f9bcalibrator_custom.SIM_Calibrator\uff0ccalibrator_custom.SIM_Calibrator\u662f\u5df2\u7ecf\u5b9e\u73b0\u597d\u7684class\uff0c\u5f53\u4e2d\u53ea\u6709forward\u65b9\u6cd5\u672a\u5b9e\u73b0\uff0c\u4f7f\u7528\u65f6\u4ec5\u9700\u5b9e\u73b0\u8be5\u65b9\u6cd5\uff0c\u5373\u53ef\u8f6c\u6362\u5b8c\u6210\u3002\u8be6\u60c5\u8bf7\u53c2\u8003 calibrator_custom.SIM_Calibrator \u3002 Note \u81ea\u5b9e\u73b0calibrator\u7684demo\uff0c\u53ef\u53c2\u8003 \u7279\u6b8a\u6a21\u578b\u8f6c\u6362\u8981\u70b9 \u4e2d\u7684\u5206\u6bb5\u7f51\u7edc\u7ae0\u8282\u76f8\u5173\u8bf4\u660e\u3002 3.4.1 calibrator_custom.calibrator\u65b9\u6cd5 \u00b6 (1) get_input_details : \u8fd4\u56de\u7f51\u7edc\u6a21\u578b\u4fe1\u606f \u4f7f\u7528 get_input_details \u53ef\u4ee5\u5f97\u5230\u7f51\u7edc\u6a21\u578b\u8be6\u7ec6\u4fe1\u606f, \u4ee5list\u5f62\u5f0f\u8fd4\u56de\u7ed3\u679c\u3002 \u2460 \u83b7\u53d6\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u4fe1\u606flist input_details = model . get_input_details () >>> print ( input_details ) [{ 'index' : 0 , 'shape' : array ([ 1 , 513 , 513 , 3 ], dtype = int32 ), 'name' : 'sub_7' , 'dtype' : < class ' numpy . float32 '>}] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578b\u8f93\u5165\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a index : \u8f93\u5165Tensor\u5e8f\u53f7 name : \u8f93\u5165Tensor\u540d\u79f0 shape : \u8f93\u5165Tensor\u7684\u5f62\u72b6 dtype : \u8f93\u5165Tensor\u7684\u6570\u636e\u7c7b\u578b \u2461 \u83b7\u53d6\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u4fe1\u606flist output_details = model . get_output_details () >>> print ( output_details ) [{ 'index' : 0 , 'shape' : array ([ 1 , 257 , 257 , 30 ], dtype = int32 ), 'name' : 'MobilenetV2/Conv/Conv2D' , 'dtype' : < class ' numpy . float32 '>}] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578b\u8f93\u51fa\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a index : \u8f93\u51faTensor\u5e8f\u53f7 name : \u8f93\u51faTensor\u540d\u79f0 shape : \u8f93\u51faTensor\u7684\u5f62\u72b6 dtype : \u8f93\u51faTensor\u7684\u6570\u636e\u7c7b\u578b (2) set_input : \u8bbe\u7f6e\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u6570\u636e model . set_input ( 0 , img_data ) \u4f7f\u7528\u987b\u77e5 0\u4e3a\u8f93\u5165Tensor\u7684index; \u8f93\u5165\u6570\u636e\u53ef\u4ee5\u5728get_input_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230; img_data\u662f\u4e0emodel\u8f93\u5165shape\u548cdtype\u76f8\u540c\u7684numpy.ndarray\u683c\u5f0f\u6570\u636e\uff0c\u9519\u8bef\u7684shape\u6216dtype\uff0c\u5c06\u5bfc\u81f4set_input\u8fd4\u56deValueError; \u5982\u679c\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u53ef\u4ee5\u591a\u6b21\u8c03\u7528set_input\uff0c\u6839\u636eget_input_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230index\u8bbe\u7f6e\u5bf9\u5e94Tensor\u7684\u8f93\u5165\u6570\u636e\u3002 (3) invoke : \u6a21\u578b\u8fd0\u884c\u4e00\u6b21 model . invoke () \u4f7f\u7528\u987b\u77e5 \u8c03\u7528invoke\u524d\u8bf7\u5148\u4f7f\u7528set_input\u8bbe\u7f6e\u8f93\u5165\u6570\u636e\uff0c\u672a\u8c03\u7528set_input\u76f4\u63a5\u8c03\u7528invoke\u4f1a\u8fd4\u56deValueError\u3002 (4) get_output : \u83b7\u53d6\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u6570\u636e result = model . get_output ( 0 ) \u4f7f\u7528\u987b\u77e5 0\u4e3a\u8f93\u51faTensor\u7684index; \u8f93\u51fa\u6570\u636e\u53ef\u4ee5\u5728get_output_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230\uff0c\u8fd4\u56denumpy.ndarray\u683c\u5f0f\u8f93\u51fa\u6570\u636e\u3002 \u5982\u679c\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u51fa\uff0c\u53ef\u4ee5\u591a\u6b21\u8c03\u7528get_output\uff0c\u6839\u636eget_output_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230index\u83b7\u53d6\u5bf9\u5e94Tensor\u7684\u8f93\u51fa\u6570\u636e\u3002 (5) get_tensor_details : \u8fd4\u56de\u7f51\u7edc\u6a21\u578b\u6bcf\u4e2aTensor\u7684\u4fe1\u606f\uff08list\uff09 tensor_details = model . get_tensor_details () >>> print ( tensor_details ) [{ 'dtype' : 'FLOAT32' , 'name' : 'MobilenetV2/Conv/Conv2D' , 'qtype' : 'INT16' , 'shape' : array ([ 1 , 257 , 257 , 30 ], dtype = int32 )}, { 'dtype' : 'FLOAT32' , 'name' : 'MobilenetV2/Conv/Conv2D_bias' , 'qtype' : 'INT16' , 'shape' : array ([ 2 , 30 ], dtype = int32 )}, { 'dtype' : 'FLOAT32' , 'name' : 'MobilenetV2/Conv/weights/read' , 'qtype' : 'INT8' , 'shape' : array ([ 30 , 3 , 3 , 3 ], dtype = int32 )}, { 'dtype' : 'FLOAT32' , 'name' : 'sub_7' , 'qtype' : 'UINT8' , 'shape' : array ([ 1 , 513 , 513 , 3 ], dtype = int32 )}] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578bTensor\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a name : Tensor\u540d\u79f0 shape : Tensor\u7684\u5f62\u72b6 dtype : Tensor\u7684\u6570\u636e\u7c7b\u578b qtype : \u5b9a\u70b9\u6a21\u578b\u8be5Tensor\u53ef\u80fd\u7684\u6570\u636e\u7c7b\u578b\uff08quantization type\uff09 3.4.2 calibrator_custom.SIM_Calibrator \u00b6 (1) calibrator_custom.SIM_Calibrator\u7b80\u4ecb \u5bf9\u4e8e\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u540c\u65f6\u8f6c\u6362\u65f6\uff0c\u63d0\u4f9bcalibrator_custom.SIM_Calibrator\uff0c\u65b9\u4fbf\u8fdb\u884c\u7b80\u5355\u5b9a\u4e49\u540e\uff0c\u7edf\u4e00\u8f6c\u6362\u3002calibrator_custom.SIM_Calibrator\u662f\u5df2\u7ecf\u5b9e\u73b0\u597d\u7684class\uff0c\u5f53\u4e2d\u53ea\u6709forward\u65b9\u6cd5\u672a\u5b9e\u73b0\uff0c\u4f7f\u7528\u65f6\u4ec5\u9700\u5b9e\u73b0\u8be5\u65b9\u6cd5\uff0c\u5373\u53ef\u8f6c\u6362\u5b8c\u6210\u3002 (2) calibrator_custom.SIM_Calibrator\u4f7f\u7528\u65b9\u6cd5 \u4e0b\u9762\u4ee5 SGS_IPU_SDK/Scripts/examples/sim_calibrator.py \u4e3a\u4f8b\uff0c\u8bf4\u660ecalibrator_custom.SIM_Calibrator\u7684\u4f7f\u7528\u65b9\u6cd5\uff1a \u2460 \u5b9a\u4e49forward\u65b9\u6cd5\uff1a import calibrator_custom class Net ( calibrator_custom . SIM_Calibrator ): def __init__ ( self ): super () . __init__ () self . model = calibrator_custom . calibrator ( model_path , input_config ) def forward ( self , x ): out_details = self . model . get_output_details () self . model . set_input ( 0 , x ) self . model . invoke () result_list = [] for idx in range ( len ( out_details )): result = self . model . get_output ( idx ) result_list . append ( result ) return result_list \u4f7f\u7528\u987b\u77e5 forward\u7684\u53c2\u6570\u4e3a\u6a21\u578b\u8f93\u5165\uff0c\u5982\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u53ef\u589e\u52a0forward\u7684\u53c2\u6570\u3002 \u2461 \u521b\u5efacalibrator_custom.SIM_Calibrator\u7684\u5b9e\u4f8b: net = Net () \u2462 calibrator_custom.utils.image_preprocess_func\u4f7f\u7528\u9884\u5148\u5b9a\u4e49\u597d\u7684\u524d\u5904\u7406\u65b9\u6cd5\u83b7\u53d6img_gen\uff1a preprocess_func = calibrator_custom . utils . image_preprocess_func ( model_name ) def image_generator ( folder_path , preprocess_func ): images = [ os . path . join ( folder_path , img ) for img in os . listdir ( folder_path )] for image in images : img = preprocess_func ( image ) yield [ img ] img_gen = image_generator ( './images' , preprocess_func ) \u2463 \u8c03\u7528calibrator_custom.SIM_Calibrator\u7684convert\u65b9\u6cd5\uff1a net . convert ( img_gen , fix_model = [ out_model_path ]) \u4f7f\u7528\u987b\u77e5 convert\u65b9\u6cd5\u5fc5\u987b\u8f93\u5165\u4e24\u4e2a\u53c2\u6570\uff1a\u56fe\u7247\u751f\u6210\u5668\u3001fixed.sim\u6a21\u578b\u7684\u4fdd\u5b58\u8def\u5f84list\u3002 \u56fe\u7247\u751f\u6210\u5668(img_gen)\uff1a\u2462\u4e2d\u751f\u6210\uff0c\u4e3a\u65b9\u4fbf\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u8f6c\u6362\u6a21\u578b\uff0c\u901a\u8fc7\u751f\u6210\u5668\u65b9\u4fbf\u7ec4\u7ec7\u8f93\u5165\u56fe\u7247\u7684\u5e8f\u5217\u3002\u5982\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u751f\u6210\u5668\u5e94\u8be5\u6309\u7167\u5b9a\u4e49forward\u65f6\u7684\u8f93\u5165\u987a\u5e8f\uff0c\u8fd4\u56de\u6709\u591a\u4e2anumpy.ndarray\u7684list\u3002 fixed.sim\u6a21\u578b\u7684\u4fdd\u5b58\u8def\u5f84list: \u5982\u679c\u5728__init__\u4e2d\u5b9a\u4e49\u591a\u4e2a\u6a21\u578b\uff0cfixed\u6a21\u578b\u7684\u4fdd\u5b58\u8def\u5f84list\u5e94\u8be5\u6309\u7167__init__\u4e2d\u5b9a\u4e49\u6a21\u578b\u7684\u987a\u5e8f\uff0c\u4f9d\u6b21\u547d\u540d\u3002 convert\u65b9\u6cd5\u5176\u4ed6\u53ef\u9009\u53c2\u6570\uff1a num_process: \u8fdb\u7a0b\u6570\uff0c\u540c\u65f6\u8fd0\u884c\u7684CPU\u6570\u91cf quant_level: \u9009\u62e9\u91cf\u5316\u7b49\u7ea7\uff1a[L1, L2, L3, L4, L5]\uff0c\u9ed8\u8ba4L5\u91cf\u5316\u7b49\u7ea7\uff0c\u5177\u4f53\u542b\u4e49\u8be6\u89c1 Calibrator\u5de5\u5177\u4f7f\u7528\u53c2\u6570\u8bf4\u660e \u7684\u53ef\u9009\u53c2\u6570\u4f7f\u7528\u65b9\u6cd5\u3002 quant_param: \u91cf\u5316\u5bfc\u5165\u53c2\u6570\u3002\u5982\u679c\u5df2\u6709\u5bf9\u5e94\u6a21\u578b\u7684\u91cf\u5316\u53c2\u6570\uff0c\u53ef\u4ee5\u5c06\u91cf\u5316\u7684\u53c2\u6570\u5728\u6a21\u578b\u8f6c\u6362\u4e2d\u5bfc\u5165\u3002 3.4.3 calibrator_custom.calibrator\u5bfc\u5165\u91cf\u5316\u53c2\u6570\u89c4\u5219 \u00b6 3.4.3.1. \u7b97\u5b50\u91cf\u5316\u7b56\u7565\u548c\u65b9\u6cd5\u8bf4\u660e \u00b6 (1) Conv2D\u7684\u91cf\u5316\u65b9\u6cd5 \u2460 Conv2D\u7684\u91cf\u5316\u5206\u4e3aInputs\u3001Weights\u548cOutputs\uff0c\u76ee\u524d\u652f\u63018bit\uff0c16bit\u91cf\u5316\u3002 \u2461 \u5982\u679c\u4f7f\u75288bit\u91cf\u5316\uff0cConv2D\u7684\u8f93\u5165\u4e3aUINT8\uff08\u76f8\u5f53\u4e8eINT9\u7684\u8868\u8fbe\u80fd\u529b\uff09\uff0cWeights\u4e3aINT8\uff1b\u5982\u679c\u4f7f\u752816bit\u91cf\u5316\uff0cConv2D\u7684\u8f93\u5165\u548cWeights\u5747\u4e3aINT16\u3002 \u2462 Weights\u7684min\u548cmax\u503c\u7684\u4e2a\u6570\u7531kernel\u7684\u4e2a\u6570\u51b3\u5b9a\uff0c\u8f93\u5165\u548c\u8f93\u51fa\u7684min\u548cmax\u503c\u7684\u4e2a\u6570\u7531\u8f93\u5165\u8f93\u51fa\u7684C\u7ef4\u5ea6\u51b3\u5b9a\u3002 \u2463 \u6839\u636e\u7edf\u8ba1\u5f97\u5230\u7684Inputs\u3001Weights\u548cOutputs\u7684min\u548cmax\u503c\uff0c\u9996\u5148\u63d0\u524d\u5c06Weights\u91cf\u5316\u5230\u5b9a\u70b9\u6570\u636e\uff0c\u4fdd\u5b58\u5728fixed\u7684\u7f51\u7edc\u5185\u90e8\uff0c\u518d\u5728\u7f51\u7edc\u8fd0\u884c\u65f6\u52a8\u6001\u91cf\u5316\u8f93\u5165\u548c\u8f93\u51fa\u6570\u636e\u3002 (2) DepthwiseConv2D\u7684\u91cf\u5316\u65b9\u6cd5 \u2460 DepthwiseConv2D\u7684\u91cf\u5316\u5206\u4e3a\u8f93\u5165\u3001Weights\u548c\u8f93\u51fa\uff0c\u76ee\u524d\u652f\u63018bit\uff0c16bit\u91cf\u5316\u3002 \u2461 \u5982\u679c\u4f7f\u75288bit\u91cf\u5316\uff0cDepthwiseConv2D\u7684\u8f93\u5165\u4e3aUINT8\uff08\u76f8\u5f53\u4e8eINT9\u7684\u8868\u8fbe\u80fd\u529b\uff09\uff0cWeights\u4e3aINT8\uff1b\u5982\u679c\u4f7f\u752816bit\u91cf\u5316\uff0cDepthwiseConv2D\u7684\u8f93\u5165\u548cWeights\u5747\u4e3aINT16\u3002 \u2462 Weights\u3001\u8f93\u5165\u548c\u8f93\u51fa\u7684min\u548cmax\u503c\u7684\u4e2a\u6570\u5747\u7531\u5bf9\u5e94Tensor\u7684C\u7ef4\u5ea6\u51b3\u5b9a\u3002 \u2463 \u6839\u636e\u7edf\u8ba1\u5f97\u5230\u7684\u8f93\u5165\u3001Weights\u548c\u8f93\u51fa\u7684min\u548cmax\u503c\uff0c\u9996\u5148\u63d0\u524d\u5c06Weights\u91cf\u5316\u5230\u5b9a\u70b9\u6570\u636e\uff0c\u4fdd\u5b58\u5728fixed\u7684\u7f51\u7edc\u5185\u90e8\uff0c\u518d\u5728\u7f51\u7edc\u8fd0\u884c\u65f6\u52a8\u6001\u91cf\u5316\u8f93\u5165\u548c\u8f93\u51fa\u6570\u636e\u3002 (3) \u5176\u4ed6Op\u91cf\u5316\u65b9\u6cd5 \u2460 \u7f51\u7edc\u4e2d\u5176\u4ed6\u7b97\u5b50\u7684\u91cf\u5316min\u548cmax\u5747\u57fa\u4e8eC\u7ef4\u5ea6\u6570\u91cf\uff0c\u4ec5\u652f\u630116bit\u91cf\u5316\u3002 \u2461 \u8c03\u7528calibrator_custom.calibrator\u7684get_tensor_details\u65b9\u6cd5\u53ef\u4ee5\u4eceqtype\u4e2d\u5f97\u77e5\u8be5Tensor\u5728\u5b9a\u70b9\u6a21\u578b\u65f6\u7684data type\u3002 3.4.3.2. \u91cf\u5316\u53c2\u6570\u7684\u5185\u5bb9 \u00b6 \u57fa\u4e8e\u4e0a\u8ff0\u91cf\u5316\u7684\u7b56\u7565\u548c\u65b9\u6cd5\uff0c\u9700\u8981\u4e3aTensor\u63d0\u4f9b\u5982\u4e0b\u4fe1\u606f\uff1a 1. Tensor\u7684\u540d\u5b57\uff08name\uff09[str] 2. \u7b97\u5b50\u7c7b\u578b\u63d0\u4f9b\u5bf9\u5e94\u6570\u91cf\u7684min\uff0cmax\u3002[list] 3. \u91cf\u5316bit\u4f4d\u3002[int] 4. \u5e38\u91cfTensor\u6570\u636e\uff08data\uff09\uff08\u53ef\u9009\uff09[numpy.ndarray] \u4e0b\u8868\u5c55\u793a\u4e86\u5bf9\u5e94\u7684\u53c2\u6570\u65b9\u5f0f\uff0c\u6574\u4e2a\u53c2\u6570\u4e3alist\uff0c\u5176\u4e2d\u6bcf\u4e2aitem\u662f\u4e00\u4e2adict\uff0c\u5305\u542b\u4e0a\u8ff0\u4fe1\u606f\u3002 [ { \"name\" : \"FeatureExtractor/MobilenetV2/Conv2d_0/weights\" , \"min\" : [ - 4.555312 , - 2.876907 , - 1.234419 ], \"max\" : [ 7.364561 , 3.960804 , 6.0 ], \"bit\" : 8 }, { ... }, ... ] \u793a\u4f8bSGS_IPU_SDK/Scripts/examples/sim_calibrator.py\u4e2d\u5df2\u5b8c\u6210\u4e86\u53c2\u6570\u5bfc\u5165\uff0c\u53ef\u4ee5\u63d0\u4f9bjson\u548cpkl\u6587\u4ef6\u7684\u8bfb\u53d6\u548c\u5bfc\u5165\u3002 3.4.3.2.1 \u91cf\u5316\u6a21\u578b\u91cf\u5316\u53c2\u6570\u5bfc\u51fa\u5de5\u5177 \u00b6 \u91cf\u5316\u6a21\u578b\u91cf\u5316\u53c2\u6570\u5bfc\u51fa\u5de5\u5177\u4f4d\u7f6e SGS_IPU_SDK/Scripts/examples/save_quant_param.py \u4f7f\u7528\u793a\u4f8b\uff1a python3 save_quant_param.py \\ -m fixed.sim \\ --output_mode {JSON,Pickle} \u4f7f\u7528\u987b\u77e5 --output_mode \u53c2\u6570\u652f\u6301JSON\u6216Pickle\u683c\u5f0f\u91cf\u5316\u53c2\u6570\u6570\u636e\u7684\u5bfc\u51fa\u3002 3.4.3.3. \u5bfc\u5165\u91cf\u5316\u6570\u636e\u6d41\u7a0b \u00b6 \u4f7f\u7528\u987b\u77e5 \u2460 \u4e3a\u4e86\u517c\u5bb9\u539f\u6709\u91cf\u5316\u6d41\u7a0b\uff0c\u539f\u6709\u91cf\u5316\u6240\u91c7\u7528\u7684\u7b56\u7565\u4f9d\u7136\u8fdb\u884c\u3002 \u2461 \u83b7\u53d6Float\u6a21\u578btensor\u4fe1\u606f\uff1a\u539f\u59cb\u6a21\u578b\u5728\u8f6c\u6210SGS_Float\u6a21\u578b\u4ee5\u540e\uff0c\u4e00\u4e9b\u7b97\u5b50\u4f1a\u88ab\u5408\u5e76\u548c\u4f18\u5316\uff0c\u8ba1\u7b97\u56fe\u4e0e\u539f\u6846\u67b6\u7684\u6a21\u578b\u6709\u8f83\u5927\u5dee\u5f02\u3002\u6240\u63d0\u4f9b\u7684\u91cf\u5316\u6587\u4ef6\u5185\u5bb9\u9700\u57fa\u4e8e\u5df2\u8f6c\u6210\u7684SGS_Float\u6a21\u578b\u9488\u5bf9\u6027\u8c03\u6574\uff0c\u5982Tensor\u540d\u79f0\u7b49\u4fe1\u606f\u3002\u4e3a\u65b9\u4fbf\u4fee\u6539\u88ab\u5408\u5e76\u548c\u4f18\u5316\u7684\u5c42\uff0c\u53ef\u4ee5\u4f7f\u7528calibrator_custom.calibrator\u7684get_tensor_details\u65b9\u6cd5\u83b7\u53d6Tensor\u7684\u57fa\u672c\u4fe1\u606f\u3002\u53ef\u4ee5\u83b7\u5f97\u6bcf\u4e2aTensor\u7684name\uff0cshape\uff0cdtype\uff0cqtype\u4fe1\u606f\u3002 \u2462 \u83b7\u53d6Fixed\u6a21\u578btensor\u4fe1\u606f\uff1a\u8f6c\u6362\u597d\u7684fixed\u6a21\u578b\u53ef\u4ee5\u4f7f\u7528calibrator_custom.fixed_simulator(\u8bf7\u53c2\u8003 \u7279\u6b8a\u6a21\u578b\u8f6c\u6362\u8981\u70b9 )\u7684get_tensor_details\u65b9\u6cd5\u83b7\u53d6Tensor\u7684\u57fa\u672c\u4fe1\u606f\uff0c\u53ef\u4ee5\u83b7\u5f97\u6bcf\u4e2aTensor\u7684name\uff0cshape\uff0cmin\uff0cmax\uff0cquantization\uff0cdtype\u4fe1\u606f\u3002 \u2463 \u6839\u636e\u6a21\u578bTensor\u4fe1\u606f\uff0c\u66f4\u65b0\u539f\u59cb\u6a21\u578b\u7684\u91cf\u5316\u6587\u4ef6\u540e\uff0c\u5373\u53ef\u5bfc\u5165\u91cf\u5316\u6570\u636e\u6587\u4ef6\u3002 \u2464 \u89e3\u6790\u5b8c\u91cf\u5316\u6587\u4ef6\u540e\uff0c\u4f1a\u5339\u914d\u5df2\u6709\u91cf\u5316\u4fe1\u606f\u4e0e\u5bfc\u5165\u7684\u91cf\u5316\u4fe1\u606f\u3002\u4f18\u5148\u4f7f\u7528\u5bfc\u5165\u7684\u91cf\u5316\u4fe1\u606f\uff0c\u4f46\u4e0d\u6392\u9664\u5728\u5408\u5e76\u65f6\u7531\u4e8e\u5bfc\u5165\u4fe1\u606f\u7684\u4e0d\u5408\u7406\u800c\u653e\u5f03\u4f7f\u7528\u3002 3.5. torch_calibrator\u7b80\u4ecb \u00b6 (1) torch_calibrator\u5de5\u5177\u7684\u4f4d\u7f6e\u5728 SGS_IPU_SDK/Scripts/calibrator/torch_calibrator.py \u3002 (2) torch_calibrator\u662f\u57fa\u4e8ePytorch\u5f00\u53d1\u7684\u65b0\u4e00\u4ee3\u91cf\u5316\u5de5\u5177\uff0c\u4e0e\u65e7\u5de5\u5177\u94fe\u76f8\u6bd4\uff0c\u6709\u4ee5\u4e0b\u7279\u6027\uff1a - \u652f\u6301\u4f7f\u7528GPU\uff0c\u540c\u7b49\u7ea7\u7684\u7b97\u6cd5\u5728GPU\u73af\u5883\u4e0b\u91cf\u5316\u901f\u5ea6\u66f4\u5feb\uff08\u9700\u914d\u5408\u4f7f\u7528Nvidia\u00ae GPU Docker\uff09\uff1b - \u652f\u63014/8bit\u6df7\u5408\u91cf\u5316\u7b97\u6cd5\uff0c\u5bf9\u4e8e\u6709\u6761\u4ef6\u7684\u6a21\u578b\u57288bit\u91cf\u5316\u7684\u57fa\u7840\u4e0a\u7ee7\u7eed\u5411\u4e0b\u538b\u7f29\uff0c\u8fdb\u4e00\u6b65\u63d0\u9ad8\u8fd0\u884c\u6548\u7387\uff1b - \u652f\u6301\u66f4\u590d\u6742\u7684\u91cf\u5316\u6807\u5b9a\u7b97\u6cd5\uff0c\u91cf\u5316\u7cbe\u5ea6\u8fdb\u4e00\u6b65\u5f97\u5230\u63d0\u5347\uff0c\u5bf9\u5c0f\u6a21\u578b\uff08mobilenet\u7cfb\u5217\u3001shufflenet\u7cfb\u5217\u3001nanodet\u7cfb\u5217\u7b49\uff09\u63d0\u5347\u6548\u679c\u66f4\u4e3a\u660e\u663e\u3002 (3) torch_calibrator\u662f\u5bf93.1 calibrator\u5de5\u5177\u7684\u8865\u5145\u3002\u5f53\u6a21\u578b\u53c2\u6570\u91cf\u8f83\u5c0f\uff0c\u4f7f\u75283.1 calibrator\u5de5\u5177\u65e0\u6cd5\u8fbe\u5230\u6ee1\u610f\u7684\u7cbe\u5ea6\u65f6\uff1b\u6216\u8005\u6a21\u578b\u53c2\u6570\u91cf\u8f83\u5927\uff0c\u671f\u5f85\u4f7f\u75284bit\u91cf\u5316\u51cf\u5c0f\u6a21\u578b\u5927\u5c0f\uff0c\u53ef\u4ee5\u4f7f\u7528torch_calibrator\u5de5\u5177\u3002 3.5.1. torch_calibrator\u5de5\u5177\u4f7f\u7528\u8bf4\u660e \u00b6 (1) \u5de5\u5177\u4f7f\u7528\u793a\u4f8b python3 torch_calibrator.py \\ -i ilsvrc2012_calibration_set100 \\ -m caffe_mobilenet_v2_float.sim \\ --input_config input_config.ini \\ --quant_config quant_config.yaml \\ -n caffe_mobilenet_v2.py \\ -q Q2 (2) \u5de5\u5177\u4f7f\u7528\u53c2\u6570\u8bf4\u660e \u2460 \u5fc5\u9009\u53c2\u6570 -i , --image : \u6807\u5b9a\u6570\u636e\u96c6\u56fe\u50cf\u8def\u5f84\uff0c100\u5f20\u8bad\u7ec3\u56fe\u7247\u3002 -m , --model : \u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\u3002 --quant_config : \u91cf\u5316\u53c2\u6570(yaml\u683c\u5f0f)\u6587\u4ef6\u8def\u5f84\uff0c\u540e\u9762\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\u8be5\u6587\u4ef6\u7684\u914d\u7f6e\u65b9\u6cd5\u548c\u7528\u9014\u3002 -n , --preprocess : \u6a21\u578b\u9884\u5904\u7406\u6587\u4ef6\uff08py\u6587\u4ef6\uff09\u8def\u5f84\u3002 -q , --q_mode : \u91cf\u5316\u9009\u9879\uff0c\u540e\u9762\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\u3002 \u2461 \u53ef\u9009\u53c2\u6570 -o , --ouptut : \u6a21\u578b\u8f93\u51fa\u8def\u5f84\u3002\u6307\u5b9a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u4f4d\u7f6e\uff1a\u6307\u5b9a\u5230\u6587\u4ef6\u5939\uff0c\u5c06\u81ea\u52a8\u4ee5\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u524d\u7f00\u547d\u540d\uff0c\u540e\u63a5fixed.sim\uff1b\u6307\u5b9a\u5230\u5177\u4f53\u8def\u5f84\u548c\u6587\u4ef6\u540d\uff0c\u5c06\u4ee5\u6307\u5b9a\u8def\u5f84\u548c\u6587\u4ef6\u540d\u547d\u540d\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff1b\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\uff0c\u5c06\u4ee5\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u50a8\u5b58\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u3002 --cal_batchsize : \u6807\u5b9a\u6570\u636e\u96c6\u7684batchsize\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u7b49\u4e8e\u6570\u636e\u96c6\u4e2a\u6570\uff1b\u5982\u679c\u6807\u5b9a\u6570\u636e\u96c6\u5341\u5206\u5e9e\u5927\u6216\u6a21\u578b\u7ed3\u6784\u7279\u6b8a\u65e0\u6cd5\u5728batchsize != 1\u7684\u60c5\u51b5\u4e0b\u63a8\u7406\uff0c\u5219\u53ef\u4ee5\u8bbe\u7f6e\u8fd9\u4e2a\u53c2\u6570\u3002\u9ed8\u8ba4\u4e3a100\u3002 3.5.2. torch_calibrator\u91cf\u5316\u9009\u9879 \u00b6 \u91cf\u5316\u7b49\u7ea7 \u91cf\u5316\u7279\u8272\u8bf4\u660e \u91cf\u5316\u5b50\u9009\u9879 \u8be6\u7ec6\u8bf4\u660e Q1 \u4ec5\u505amin\u548cmax\u7684\u6807\u5b9a\uff0c\u4e0d\u4f1a\u4f18\u5316\u5377\u79ef\u53c2\u6570\uff0c\u901f\u5ea6\u6574\u4f53\u8f83\u5feb\uff0c\u9002\u7528\u4e8e\u6ca1\u6709GPU\u7684\u73af\u5883\uff0c\u5982\u679c\u6709GPU\u5219\u53ef\u4ee5\u52a0\u5feb\u6807\u5b9a\u901f\u5ea6\uff1b\u7cbe\u5ea6\u65b9\u9762\u6574\u4f53\u6301\u5e733.1 calibrator\u91cf\u5316\u7684\u7cbe\u5ea6\uff1b Q10 \u516816bit\u91cf\u5316\uff0c\u91cf\u5316\u7cbe\u5ea6\u4e0efloat32\u6a21\u578b\u57fa\u672c\u4e00\u81f4 Q1/Q11 \u51688bit\u5feb\u901f\u91cf\u5316\uff0c\u91cf\u5316\u7cbe\u5ea6\u4e0eL2\u6a21\u5f0f\u76f8\u5f53 Q12 \u81ea\u9002\u5e948bit\u548c16bit\u91cf\u5316\uff0c\u91cf\u5316\u7cbe\u5ea6\u4e0eL5\u6a21\u5f0f\u76f8\u5f53 Q13 4/8bit(8/16bit \u53ef\u6839\u636e\u914d\u7f6e\u6587\u4ef6\u66f4\u6539\uff0c\u9ed8\u8ba44/8bit)\u6df7\u5408\u91cf\u5316\uff0c\u5bf9\u4e8e\u6709\u8fdb\u4e00\u6b65\u538b\u7f29\u9700\u6c42\u7684\u6a21\u578b\u53ef\u4ee5\u9009\u7528\u6b64\u65b9\u5f0f\u3002 Q2 \u91cf\u5316\u7b49\u7ea7\u4f1a\u5bf9\u6a21\u578b\u8fdb\u884c\u9010\u5c42\u4f18\u5316\uff0c\u4f4ebit\u60c5\u51b5\u4e0b\u7cbe\u5ea6\u63d0\u5347\u660e\u663e\uff0c\u5728\u8f7b\u91cf\u7ea7\u6a21\u578b\u6548\u679c\u66f4\u4e3a\u663e\u8457\uff0c\u9002\u7528\u4e8e\u6709\u5355\u5757GPU\u7684\u73af\u5883\uff1b\u7cbe\u5ea6\u4e0a\u6574\u4f53\u4f18\u4e8eQ1 Q20 \u516816bit\u91cf\u5316\uff0c\u91cf\u5316\u7cbe\u5ea6\u4e0efloat32\u6a21\u578b\u57fa\u672c\u4e00\u81f4 Q21 \u51688bit\u91cf\u5316\uff0c\u5728\u4e00\u4e9b\u5c0f\u6a21\u578b\u4e0a\u80fd\u591f\u83b7\u5f97\u66f4\u597d\u7684\u6548\u679c Q2/Q22 \u81ea\u9002\u5e94\u9009\u62e9\u91cf\u5316\u65b9\u5f0f\uff0c\u662f\u76ee\u524d\u6548\u679c\u6700\u597d\u7684\u91cf\u5316\u65b9\u5f0f\uff0c\u751f\u6210\u7684\u5b9a\u70b9\u6a21\u578b\u4e3a\u51688bit\u91cf\u5316\u6216\u63a5\u8fd1\u51688\u76848/16\u6df7\u5408\u91cf\u5316\u3002 Q23 4/8bit\uff088/16bit \u53ef\u6839\u636e\u914d\u7f6e\u6587\u4ef6\u66f4\u6539\uff0c\u9ed8\u8ba44/8bit\uff09\u6df7\u5408\u91cf\u5316\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u538b\u7f29\u6a21\u578b\uff0c\u538b\u7f29\u7a0b\u5ea6\u548c\u7cbe\u5ea6\u5747\u4f18\u4e8eQ13 3.5.3. torch_calibrator\u91cf\u5316\u53c2\u6570(yaml\u683c\u5f0f)\u6587\u4ef6 \u00b6 (1) \u6587\u4ef6\u5185\u5bb9\u5c55\u793a QUANT_CONFIG : retrain_iter_num : 40 device : 'cuda:0' mixed_precisions : [ 4 , 8 ] use_preset_min_max_bit : 0 mp_rate : 0.6 PRESET_MIN_MAX_BIT : # preset tensor min/max and bit [ { name : \"126\" , min : null , max : null , bit : 8 }, { name : \"layer1.0.conv1.weight\" , min : null , max : null , bit : 8 } ] (2) \u6587\u4ef6\u5185\u5bb9\u8bf4\u660e retrain_iter_num\uff1a\u6bcf\u5c42\u91cd\u8bad\u7ec3\u8fed\u4ee3\u6b21\u6570 \u5982\u679c\u8be5\u9879\u4e0d\u5199\u5219\u9ed8\u8ba4\u4e3a40\uff0c\u90e8\u5206\u8f7b\u91cf\u7ea7\u6a21\u578b\u53ef\u80fd\u9700\u8981\u66f4\u591a\u7684\u8fed\u4ee3\u6b21\u6570\u3002 device\uff1a\u6307\u5b9aGPU/CPU \u5982\u679c\u4e0d\u7ed9\u5219\u4f1a\u81ea\u52a8\u5bfb\u627e\u7a7a\u95f2\u7684GPU\u3002\u82e5\u65e0GPU\u5219\u4f1a\u81ea\u52a8\u8c03\u7528CPU\u3002 \u82e5\u6307\u5b9acpu\u8fd0\u7b97\uff0c\u586b\u5199\u4e3a'cpu'\u5373\u53ef\u3002 use_preset_min_max_bit\uff1a\u662f\u5426\u4f7f\u7528\u624b\u5de5\u9884\u8bbe\u7684min/max/bit\u4fe1\u606f \u5982\u679c\u8be5\u9879\u4e3a1\uff0c\u5219\u4f1a\u4f7f\u7528\u4e0b\u65b9\u624b\u52a8\u8bbe\u7f6e\u7684\u4fe1\u606f\uff1b\u5982\u679c\u8be5\u9879\u4e3a0\u6216\u4e0d\u5199\uff0c\u5219\u4e0d\u4f1a\u4f7f\u7528\u4e0b\u65b9\u7684\u4fe1\u606f\u3002 mixed_precisions: \u6df7\u5408\u91cf\u5316\u6a21\u5f0f \u53ef\u9009[4, 8]\uff0c[8, 16]\u3002\u5982\u679c\u4e0d\u586b\uff0c\u9ed8\u8ba4\u662f[4, 8]\u3002\u4ec5\u5728Q13\u3001Q23\u7684\u6a21\u5f0f\u751f\u6548\u3002 mp_rate\uff1a\u6df7\u5408\u91cf\u5316\u6307\u5b9a\u7684\u538b\u7f29\u7387 \u5982\u672a\u6307\u5b9a\u6216\u4e0d\u5728[0.5, 1]\u7684\u8303\u56f4\u5185\uff0c\u5219\u4f1a\u81ea\u52a8\u63a8\u8350\u4e00\u4e2a\u538b\u7f29\u7387\u3002\u8be5\u53c2\u6570\u4f1a\u914d\u5408 mixed_precisions \uff0c\u751f\u62104/8bit\u62168/16bit\u7684\u6a21\u578b\u3002\u4ec5\u5728Q13\u3001Q23\u7684\u6a21\u5f0f\u4e0b\u751f\u6548\u3002 \u5982\u679c\u81ea\u52a8\u63a8\u8350\u7684\u538b\u7f29\u7387\u6ee1\u8db3\u7cbe\u5ea6\u8981\u6c42\uff0c\u53ef\u901a\u8fc7\u4ee50.05\u6b65\u957f\u4e0b\u8c03\u538b\u7f29\u7387\uff0c\u6ee1\u8db3\u7cbe\u5ea6\u8981\u6c42\u7684\u540c\u65f6\u63d0\u5347\u6a21\u578b\u6027\u80fd\u3002 \u5982\u679c\u81ea\u52a8\u63a8\u8350\u7684\u538b\u7f29\u7387\u4e0d\u6ee1\u8db3\u7cbe\u5ea6\u8981\u6c42\uff0c\u53ef\u901a\u8fc7\u4ee50.05\u6b65\u957f\u4e0a\u8c03\u538b\u7f29\u7387\uff0c\u63d0\u5347\u6a21\u578b\u91cf\u5316\u7cbe\u5ea6\u3002 PRESET_MIN_MAX_BIT\uff1a\u53ef\u4ee5\u9884\u8bbe\u67d0\u4e2aTensor\u7684min/max/bit\u4fe1\u606f \u8be6\u89c1 \u91cf\u5316\u7b56\u7565\u548c\u65b9\u6cd5 \uff0cTensor\u540d\u5b57\u4ee5float.sim\u6a21\u578b\u4e2d\u4e3a\u51c6\u3002\u9700\u8981\u5c06 use_preset_min_max_bit \u8bbe\u4e3a1\u3002","title":"Calibrate"},{"location":"module/User_Guide/IPU260/Calibrate.html#31-calibrator","text":"CalibratorTool \u8bf4\u660e \u5de5\u5177\u4f4d\u7f6e SGS_IPU_SDK/Scripts/calibrator/calibrator.py \u5de5\u5177\u4f5c\u7528 \u5c06SigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u4e3aSigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b \u4f7f\u7528\u987b\u77e5 \u2460 Calibrator\u5de5\u5177\u53ef\u4ee5\u652f\u6301\u591a\u6570\u6a21\u578b\u7684\u8f6c\u6362\uff0c\u5c11\u90e8\u5206\u6a21\u578b\u5982\u5206\u6bb5\u7f51\u7edcfaste-rcnn\u9700\u81ea\u884c\u5b9e\u73b0Calibrator \u2460 \u666e\u901a\u6a21\u578b\u8f6c\u6362 Calitor \u2461 Calibrator\u81ea\u5b9e\u73b0(faste-rcnn) calibrator_custom.calibrator \u2462 \u6a21\u578b\u53c2\u6570\u91cf\u8f83\u5c0fcalibrator\u5de5\u5177\u65e0\u6cd5\u8fbe\u5230\u6ee1\u610f\u7684\u7cbe\u5ea6\u65f6 torch_calibrator \u2463 \u6a21\u578b\u53c2\u6570\u91cf\u8f83\u5927\u671f\u5f85\u4f7f\u75284bit\u91cf\u5316\u51cf\u5c0f\u6a21\u578b\u5927\u5c0f torch_calibrator \u2461 \u6a21\u578b\u91cf\u5316\u7cbe\u5ea6\u987b\u77e5 \u2460 \u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u6210\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u9700\u898130\u5f20\u5de6\u53f3\u8bad\u7ec3\u56fe\u7247\u7528\u6765\u5206\u6790\u548c\u91cf\u5316\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u7684\u6570\u636e \u2461 \u7ed9\u5b9a\u5355\u5f20\u56fe\u7247\u6587\u4ef6\uff0c\u4f9d\u7136\u53ef\u4ee5\u8f6c\u6362\u4e3a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff0c\u4f46\u662f\u5176\u6a21\u578b\u7cbe\u5ea6\u53ef\u80fd\u4f1a\u53d7\u5230\u5f71\u54cd \u2462 \u8f6c\u6362\u7f51\u7edc\u65f6\u53ef\u4ee5\u5728input_config.ini\u6587\u4ef6\u4e2d\u9488\u5bf9\u5377\u79ef\u914d\u7f6e\u4e0d\u540c\u7684\u91cf\u5316\u4fe1\u606f\uff0c\u4ece\u800c\u83b7\u5f97\u7cbe\u5ea6\u548c\u901f\u5ea6\u7684\u5e73\u8861 CONV_CONFIG \u4f7f\u7528\u524d\u8bf7\u5148\u5728SGS_IPU_SDK \u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK source cfg_env.sh","title":"3.1.   Calibrator\u7b80\u4ecb"},{"location":"module/User_Guide/IPU260/Calibrate.html#32-calibrator","text":"","title":"3.2.   Calibrator\u5de5\u5177\u4f7f\u7528\u8bf4\u660e"},{"location":"module/User_Guide/IPU260/Calibrate.html#321-calibrator","text":"\u8fdb\u5165\u5230\u8be5\u5de5\u5177\u76ee\u5f55\uff0c\u6267\u884c\uff1a python3 calibrator.py \\ -i ~/SGS_Models/resource/detection/coco2017_calibration_set32 \\ -m ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1_float.sim \\ -n ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1.py \\ --input_config ~/SGS_Models/tensorflow/ssd_mobilenet_v1/input_config.ini \\ --num_process 20 \u6216\u8005\u53ef\u4ee5\u4f7f\u7528\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\uff1a python3 calibrator.py \\ -i ~/SGS_Models/resource/detection/file.list \\ -m ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1_float.sim \\ -n ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1.py \\ --input_config ~/SGS_Models/tensorflow/ssd_mobilenet_v1/input_config.ini \\ --num_process 20","title":"3.2.1 Calibrator\u5de5\u5177\u4f7f\u7528\u793a\u4f8b"},{"location":"module/User_Guide/IPU260/Calibrate.html#322-calibrator","text":"(1) \u5fc5\u9009\u53c2\u6570 -i \u6216 --image : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u6240\u9700\u7684\u56fe\u7247\u6587\u4ef6\u8def\u5f84\u3002 \u4f7f\u7528\u987b\u77e5 \u652f\u6301\u4f7f\u7528\u5355\u5f20\u56fe\u7247\u8def\u5f84\u8fdb\u884c\u4f20\u53c2\uff0c\u4e5f\u652f\u6301\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\uff0c\u6216\u5b58\u50a8\u56fe\u7247\u8def\u5f84\u5217\u8868\u7684\u6587\u4ef6\u3002\u4f7f\u7528\u8def\u5f84\u5217\u8868\u5f62\u5f0f\u65f6\u53ef\u53c2\u8003\u5982\u4e0b\u65b9\u5f0f\uff1a \u7f51\u7edc\u6a21\u578b\u4e3a\u5355\u8f93\u5165\u65f6\uff1a -i ~/SGS_IPU_SDK/image_test/2007000364.jpg \u7f51\u7edc\u6a21\u578b\u4e3a\u591a\u8f93\u5165\u65f6\uff1a -i /SGS_IPU_SDK/image_test/2007000364.jpg, /SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp -m \u6216 --model \uff1a\u6307\u5b9achapter2\u4e2d\u8f6c\u6362\u51fa\u7684\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 --input_config \uff1a\u6307\u5b9ainput_config.ini\u6587\u4ef6\u8def\u5f84\u3002 \u4f7f\u7528\u987b\u77e5 \u8be5\u6587\u4ef6\u4e0e ConvertTool\u7ae0 \u4e2d\u8f6c\u6362\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6240\u7528\u6587\u4ef6\u4e3a\u540c\u4e00\u6587\u4ef6\uff0c\u5177\u4f53\u53ef\u53c2\u8003 input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e \u3002 -n \u6216 --preprocess : \u6307\u5b9a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4e0e\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\u76f8\u5173\u3002 \u4f7f\u7528\u987b\u77e5 \u591a\u8f93\u5165\u6a21\u578b\u7684\u524d\u5904\u7406\u53c2\u6570\u9700\u4f7f\u7528\u591a\u4e2a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u524d\u5904\u7406\u7684\u4e2a\u6570\u548c\u987a\u5e8f\u9700\u4e0e\u6a21\u578b\u8f93\u5165\u4e2a\u6570\u548c\u987a\u5e8f\u4fdd\u6301\u4e00\u81f4\u3002\u4f8b\u5982: -n preprocess1.py,preprocess2.py \u6216\u8005 --preprocess preprocess1.py,preprocess2.py \u4e3a\u4e86\u5728\u8f6c\u6362\u7f51\u7edc\u65f6\u5c3d\u53ef\u80fd\u51cf\u5c0f\u7cbe\u5ea6\u7684\u4e22\u5931\uff0c\u8bf7\u4f7f\u7528\u4e0e\u8bad\u7ec3\u76f8\u540c\u7684\u56fe\u7247\u524d\u5904\u7406\u65b9\u5f0f\uff0c\u6bcf\u79cd\u524d\u5904\u7406\u65b9\u5f0f\u9700\u72ec\u7acb\u7f16\u5199python\u6587\u4ef6\u3002 \u652f\u6301\u4f7f\u7528\u4ee5\u4e0b\u4e24\u79cd\u65b9\u5f0f\u6307\u5b9a\u524d\u5904\u7406\uff1a -n/--preprocess \u53c2\u6570\u4e3a\u7f16\u5199\u7684\u6587\u4ef6\u540d\u79f0\uff0c\u4e0d\u9700\u8981\u6307\u5b9a\u7f16\u5199\u6587\u4ef6\u7684\u8def\u5f84\uff1a\u8bf7\u5c06\u6587\u4ef6\u4fdd\u5b58\u5230 SGS_IPU_SDK/Scripts/calibrator/preprocess \u6587\u4ef6\u5939\u5185\uff0c\u5e76\u5728preprocess_method/ init .py \u6587\u4ef6\u4e2d\u589e\u52a0\u6587\u4ef6\u540d\u79f0\u3002 -n/--preprocess \u53c2\u6570\u4e3a\u524d\u5904\u7406Python\u7684\u6587\u4ef6\u8def\u5f84\u3002 \u524d\u5904\u7406\u6587\u4ef6\u65b9\u6cd5\u5e94\u6ce8\u610f\u4e0einput_config.ini\u4e2d\u7684[input_config]\u4fe1\u606f\u5339\u914d\uff0c\u8be6\u89c1 \u9644\u5f55 \u524d\u5904\u7406\u548c\u914d\u7f6e\u6587\u4ef6\u6ce8\u610f\u8981\u70b9 \u3002 \u53ef\u53c2\u8003\u4ee5caffe_resnet18\u7f51\u7edc\u4e3a\u4f8b\u7f16\u5199\u7684\u56fe\u7247\u524d\u5904\u7406\u6587\u4ef6\uff0c\u8be6\u89c1 \u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5 (2) \u53ef\u9009\u53c2\u6570 -o \u6216 --output : \u6307\u5b9a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u8def\u5f84\u3002 \u4f7f\u7528\u987b\u77e5 \u6307\u5b9a\u5230\u6587\u4ef6\u5939\uff0c\u5c06\u81ea\u52a8\u4ee5\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u524d\u7f00\u547d\u540d\uff0c\u540e\u63a5'fixed.sim'\uff1b \u6307\u5b9a\u5230\u5177\u4f53\u8def\u5f84\u548c\u6587\u4ef6\u540d\uff0c\u5c06\u4ee5\u6307\u5b9a\u8def\u5f84\u548c\u6587\u4ef6\u540d\u547d\u540d\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff1b \u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\uff0c\u5c06\u4ee5\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u50a8\u5b58\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u3002 --work_mode : \u6307\u5b9a\u6a21\u578b\u8f6c\u6362\u4e3a\u5355\u6838\u6a21\u5f0f\u6216\u8005\u53cc\u6838\u6a21\u5f0f\u3002 \u4f7f\u7528\u987b\u77e5 \u53ef\u9009\u6a21\u5f0f\u6709 single_core\uff0c\u8868\u793a\u5355\u6838\u6a21\u578b\u3002 multi_core\uff0c\u8868\u793a\u53cc\u6838\u6a21\u5f0f\u3002 \u82e5\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\uff0c\u9ed8\u8ba4\u4e3a\u5355\u6838\u6a21\u5f0f\u3002 --num_process : \u8fdb\u7a0b\u6570\uff0c\u540c\u65f6\u8fd0\u884c\u7684\u8fdb\u7a0b\u6570\u3002(\u4e0d\u52a0\u8be5\u53c2\u6570\u9ed8\u8ba4\u4e3a10\u4e2a\u8fdb\u7a0b)\u3002 --quant_level : \u9009\u62e9\u91cf\u5316\u7b49\u7ea7\u3002 \u4f7f\u7528\u987b\u77e5 \u53ef\u9009\u6a21\u5f0f\u6709\uff1a L1: \u91c7\u7528\u6700\u5927\u6700\u5c0f\u503c\u5feb\u901f\u5bf9\u6bd4\u6570\u636e\u91cf\u5316\uff0c\u901f\u5ea6\u8f83\u5feb\u3002 L2: \u91c7\u7528\u5feb\u901f\u5bf9\u6bd4\u6570\u636e\u91cf\u5316\u6743\u91cd\u6570\u636e\u3002 L3: \u5bf9\u7edf\u8ba1\u4fe1\u606f\u505a\u8fdb\u4e00\u6b65\u5206\u6790\uff0c\u8fd1\u4f3c\u62df\u5408\u539f\u6709\u6570\u636e\u5206\u5e03\u3002 L4: \u8fd1\u4f3c\u62df\u5408\u6743\u91cd\u6570\u636e\u5206\u5e03\uff0c\u5e76\u5efa\u8bae\u5347\u7ea7\u67d0\u4e9b\u5377\u79ef\u4e3a16bit\u91cf\u5316\u3002 L5: \u91c7\u7528\u9ad8\u7cbe\u5ea6\u6570\u636e\u5206\u6790\u65b9\u6cd5\uff0c\u6781\u5927\u9650\u5ea6\u62df\u5408\u539f\u6709\u6570\u636e\u5206\u5e03\uff0c\u5e76\u5efa\u8bae\u5347\u7ea7\u67d0\u4e9b\u5377\u79ef\u4e3a16bit\u91cf\u5316\u3002 \u9ed8\u8ba4L5\u91cf\u5316\u7b49\u7ea7\uff0c\u7b49\u7ea7\u8d8a\u9ad8\uff0c\u91cf\u5316\u7cbe\u5ea6\u8d8a\u9ad8\uff0c\u91cf\u5316\u901f\u5ea6\u4f1a\u76f8\u5e94\u53d8\u6162\u3002 \u9009\u62e9L2\u3001L3\u6216L4\u65f6\u4f1a\u6839\u636e\u7edf\u8ba1\u4fe1\u606f\u81ea\u52a8\u914d\u7f6e\u5377\u79ef\u7684\u91cf\u5316\u65b9\u5f0f\uff0c\u5982\u679c\u9700\u8981\u5f3a\u5236\u6307\u5b9a\uff0c\u6307\u5b9a\u65b9\u5f0f\u5728 Convert Tool: input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e-CONV_CONFIG \u4e2d\u6709\u8bf4\u660e(\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u5230\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u65f6\uff0c\u5377\u79ef\u91cf\u5316\u652f\u6301 UINT8 \u548c INT16 \u4e24\u79cd\u91cf\u5316\u65b9\u5f0f\u3002\u53ef\u5bf9\u67d0\u4e9b\u5377\u79ef\u5c42\u5355\u72ec\u8bbe\u7f6eINT16\u91cf\u5316\uff0c\u6216\u8005\u5bf9\u5168\u90e8\u5377\u79efINT16\u91cf\u5316\uff1b\u4e0d\u8bbe\u7f6e\u65f6\u9ed8\u8ba4\u4f7f\u7528calibrator\u7684\u63a8\u8350\u91cf\u5316\u65b9\u5f0f)\u3002","title":"3.2.2 Calibrator\u5de5\u5177\u4f7f\u7528\u53c2\u6570\u8bf4\u660e"},{"location":"module/User_Guide/IPU260/Calibrate.html#33","text":"\u4e0b\u9762\u4ee5caffe_resnet18\u7f51\u7edc\u4e3a\u4f8b\uff0c\u5bf9\u7f16\u5199\u56fe\u7247\u524d\u5904\u7406\u6587\u4ef6\u8fdb\u884c\u8bf4\u660e\uff1a (1) \u524d\u5904\u7406\u6587\u4ef6\u4f7f\u7528\u793a\u4f8b import cv2 import numpy as np def get_image ( img_path , resizeH = 224 , resizeW = 224 , resizeC = 3 , norm = True , meanB = 104.0 , meanG = 117.0 , meanR = 123.0 , std = 1.0 , rgb = False , nchw = False ): img = cv2 . imread ( img_path , flags =- 1 ) if img is None : raise FileNotFoundError ( 'No such image: {} ' . format ( img_path )) try : img_dim = img . shape [ 2 ] except IndexError : img_dim = 1 if img_dim == 4 : img = cv2 . cvtColor ( img , cv2 . COLOR_BGRA2BGR ) elif img_dim == 1 : img = cv2 . cvtColor ( img , cv2 . COLOR_GRAY2BGR ) img_float = img . astype ( 'float32' ) img_norm = cv2 . resize ( img_float , ( resizeW , resizeH ), interpolation = cv2 . INTER_LINEAR ) if norm and ( resizeC == 3 ): img_norm = ( img_norm - [ meanB , meanG , meanR ]) / std img_norm = img_norm . astype ( 'float32' ) elif norm and ( resizeC == 1 ): img_norm = ( img_norm - meanB ) / std img_norm = img_norm . astype ( 'float32' ) else : img_norm = np . round ( img_norm ) . astype ( 'uint8' ) if rgb : img_norm = cv2 . cvtColor ( img_norm , cv2 . COLOR_BGR2RGB ) if nchw : # NCHW img_norm = np . transpose ( img_norm , axes = ( 2 , 0 , 1 )) return np . expand_dims ( img_norm , 0 ) def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm ) \u4fdd\u5b58\u4e3a caffe_resnet18.py. \u4f7f\u7528\u987b\u77e5 \u5982\u679c\u60f3\u5728 -n/--preprocess \u53c2\u6570\u4e2d\u4f7f\u7528\u6587\u4ef6\u540d\u800c\u975e\u6587\u4ef6\u8def\u5f84\u7684\u65b9\u5f0f\uff0c\u9700\u8fdb\u884c\u5982\u4e0b\u64cd\u4f5c\uff1a \u5728SGS_IPU_SDK/Scripts/calibrator/preprocess_method/ init .py \u6587\u4ef6\u4e2d\u6dfb\u52a0\u521a\u521a\u7f16\u5199\u7684python\u6587\u4ef6: _all_ = [ 'caffe_mobilenet_v2' , 'caffe_resnet18' , 'caffe_resnet50_conv' , 'mobilenet_v1' ] \u5982\u679c\u4e0d\u5728SGS_IPU_SDK/Scripts/calibrator/preprocess_method/ init .py \u6587\u4ef6\u4e2d\u589e\u52a0\uff0c -n/--preprocess \u53c2\u6570\u9700\u4e3acaffe_resnet18.py\u6587\u4ef6\u8def\u5f84\uff0c\u800c\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528\u6587\u4ef6\u540d\u3002 (2) image_preprocess\u51fd\u6570\u8bf4\u660e\uff1a \u4f7f\u7528image_preprocess\u51fd\u6570\u8c03\u7528\uff0c\u6b64\u5904\u52a1\u5fc5\u6309\u7167\u8be5\u65b9\u6cd5\u4e66\u5199\u3002 def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm ) \u7f16\u5199\u56fe\u7247\u5904\u7406\u51fd\u6570\uff08\u51fd\u6570\u540d\u79f0\u4e0d\u9650\uff09\uff0c\u8fd4\u56denp.array \u683c\u5f0f\u7684\u56fe\u7247\u6570\u636e\uff0c\u51fd\u6570\u5fc5\u987b\u5305\u542b2\u4e2a\u53c2\u6570\uff1a \u56fe\u7247\u8def\u5f84 \u5f52\u4e00\u5316\u6807\u8bb0\uff08norm=True\uff09 \u5f52\u4e00\u5316\u6807\u8bb0\u662f\u4e3a\u4e86\u533a\u5206\u7f51\u7edc\u6a21\u578b\u662f\u5426\u662f\u6d6e\u70b9\u6a21\u578b, \u8d4b\u503c\u4e3aTrue\u5373\u53ef\uff0c\u540e\u7ee7\u8f6c\u6362\u4ee5\u53ca\u9a8c\u8bc1\u8fc7\u7a0b\u4e2d\u5747\u65e0\u9700\u8fdb\u884c\u4efb\u4f55\u4fee\u6539\u64cd\u4f5c\u3002 (\u56e0\u4e3a\u5728\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u9636\u6bb5\uff0c\u56fe\u7247\u7684\u5f52\u4e00\u5316\u9700\u8981\u5728\u9001\u8fdb\u7f51\u7edc\u524d\u5904\u7406\u597d\u3002\u4f46\u662f\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u548c\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u5df2\u7ecf\u5305\u542b\u4e86input_config.ini\u6587\u4ef6\u7684\u8bbe\u7f6e\u4fe1\u606f\uff0c\u80fd\u591f\u5c06\u56fe\u7247\u6570\u636e\u81ea\u884c\u505a\u5f52\u4e00\u5316\u5904\u7406\uff0c\u56e0\u6b64\u9001\u8fdb\u7f51\u7edc\u6a21\u578b\u7684\u6570\u636e\u4e0d\u9700\u8981\u505a\u5f52\u4e00\u5316\uff0c\u8fd9\u4e0e\u5728SigmaStar\u786c\u4ef6\u4e0a\u5904\u7406\u65b9\u5f0f\u76f8\u540c\u3002) (3) \u66f4\u8be6\u7ec6\u7684\u56fe\u7247\u524d\u5904\u7406\u51fd\u6570\u793a\u4f8b\uff0c\u8bf7\u53c2\u8003 \u9644\u5f55 \u524d\u5904\u7406\u548c\u914d\u7f6e\u6587\u4ef6\u6ce8\u610f\u8981\u70b9 \uff0c\u5c06\u63d0\u4f9b\u51e0\u4e0b\u51e0\u79cd\u8f93\u5165\u683c\u5f0f\u7684\u6a21\u578b\u524d\u5904\u7406\u793a\u4f8b\uff1a \u2460 training_input_formats\u548cinput_formats\u5747\u4e3aRGB\u6216\u8005\u5747\u4e3aBGR\u7684\u6a21\u578b\u524d\u5904\u7406 \u2461 training_input_formats\u4e3aGRAY\u548cinput_formats\u4e3aGRAY\u7684\u6a21\u578b\u524d\u5904\u7406 \u2462 training_input_formats\u4e3aRGB\u6216BGR\u6216GRAY\u548cinput_formats\u4e3aYUV_NV12\u7684\u6a21\u578b\u524d\u5904\u7406 \u2463 training_input_formats\u548cinput_formats\u5747\u4e3aRAWDATA_S16_NHWC\u6216\u8005\u5747\u4e3aRAWDATA_F32_NHWC\u7684\u6a21\u578b\u524d\u5904\u7406","title":"3.3. \u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5"},{"location":"module/User_Guide/IPU260/Calibrate.html#34-calibrator_customcalibrator","text":"(1) calibrator_custom.calibrator\u662f\u57fa\u4e8ePython\u7684\u5feb\u901f\u91cf\u5316\u548c\u8f6c\u6362\u6a21\u578b\u7684\u6a21\u5757\u3002\u4f7f\u7528calibrator_custom.calibrator\u53ef\u4ee5\u66f4\u65b9\u4fbf\u7075\u6d3b\u7684\u5bf9\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u8fdb\u884c\u91cf\u5316\u548c\u8f6c\u6362\u3002 (2) \u76ee\u524d\u57fa\u4e8e\u7684docker\u73af\u5883\uff0c\u63d0\u4f9bPython3.7\u7684\u9884\u7f16\u8bd1\u7684Python\u6a21\u5757\u3002 (3) \u4f7f\u7528 calibrator_custom.calibrator \u65f6\uff0c\u9700\u8981\u7ed9\u5b9afloat.sim\u6a21\u578b\u7684\u8def\u5f84\u548c\u5bf9\u5e94\u7684input_config.ini\u7684\u8def\u5f84\uff0c\u7528\u4e8e\u521b\u5efacalibrator\u7684\u5b9e\u4f8b\u3002\u53c2\u6570\u7ed9\u5b9a\u9519\u8bef\uff0c\u5c06\u65e0\u6cd5\u6210\u529f\u521b\u5efacalibrator\u5b9e\u4f8b\uff0c\u5e76\u8fd4\u56deValueError\u3002\u4f7f\u7528\u65b9\u6cd5\u548c\u76f8\u5173API\u63a5\u53e3\u5982\u4e0b\uff1a import calibrator_custom model_path = './mobilenet_v2_float.sim' input_config_path = './input_config.ini' model = calibrator_custom . calibrator ( model_path , input_config_path ) \u5177\u4f53\u7684\u51fd\u6570\u65b9\u6cd5\u8bf7\u53c2\u8003 calibrator_custom.calibrator\u65b9\u6cd5 \u3002 (4) \u5bf9\u4e8e\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u540c\u65f6\u8f6c\u6362\u65f6\uff0c\u63d0\u4f9bcalibrator_custom.SIM_Calibrator\uff0ccalibrator_custom.SIM_Calibrator\u662f\u5df2\u7ecf\u5b9e\u73b0\u597d\u7684class\uff0c\u5f53\u4e2d\u53ea\u6709forward\u65b9\u6cd5\u672a\u5b9e\u73b0\uff0c\u4f7f\u7528\u65f6\u4ec5\u9700\u5b9e\u73b0\u8be5\u65b9\u6cd5\uff0c\u5373\u53ef\u8f6c\u6362\u5b8c\u6210\u3002\u8be6\u60c5\u8bf7\u53c2\u8003 calibrator_custom.SIM_Calibrator \u3002 Note \u81ea\u5b9e\u73b0calibrator\u7684demo\uff0c\u53ef\u53c2\u8003 \u7279\u6b8a\u6a21\u578b\u8f6c\u6362\u8981\u70b9 \u4e2d\u7684\u5206\u6bb5\u7f51\u7edc\u7ae0\u8282\u76f8\u5173\u8bf4\u660e\u3002","title":"3.4.   calibrator_custom.calibrator\u7b80\u4ecb"},{"location":"module/User_Guide/IPU260/Calibrate.html#341-calibrator_customcalibrator","text":"(1) get_input_details : \u8fd4\u56de\u7f51\u7edc\u6a21\u578b\u4fe1\u606f \u4f7f\u7528 get_input_details \u53ef\u4ee5\u5f97\u5230\u7f51\u7edc\u6a21\u578b\u8be6\u7ec6\u4fe1\u606f, \u4ee5list\u5f62\u5f0f\u8fd4\u56de\u7ed3\u679c\u3002 \u2460 \u83b7\u53d6\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u4fe1\u606flist input_details = model . get_input_details () >>> print ( input_details ) [{ 'index' : 0 , 'shape' : array ([ 1 , 513 , 513 , 3 ], dtype = int32 ), 'name' : 'sub_7' , 'dtype' : < class ' numpy . float32 '>}] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578b\u8f93\u5165\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a index : \u8f93\u5165Tensor\u5e8f\u53f7 name : \u8f93\u5165Tensor\u540d\u79f0 shape : \u8f93\u5165Tensor\u7684\u5f62\u72b6 dtype : \u8f93\u5165Tensor\u7684\u6570\u636e\u7c7b\u578b \u2461 \u83b7\u53d6\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u4fe1\u606flist output_details = model . get_output_details () >>> print ( output_details ) [{ 'index' : 0 , 'shape' : array ([ 1 , 257 , 257 , 30 ], dtype = int32 ), 'name' : 'MobilenetV2/Conv/Conv2D' , 'dtype' : < class ' numpy . float32 '>}] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578b\u8f93\u51fa\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a index : \u8f93\u51faTensor\u5e8f\u53f7 name : \u8f93\u51faTensor\u540d\u79f0 shape : \u8f93\u51faTensor\u7684\u5f62\u72b6 dtype : \u8f93\u51faTensor\u7684\u6570\u636e\u7c7b\u578b (2) set_input : \u8bbe\u7f6e\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u6570\u636e model . set_input ( 0 , img_data ) \u4f7f\u7528\u987b\u77e5 0\u4e3a\u8f93\u5165Tensor\u7684index; \u8f93\u5165\u6570\u636e\u53ef\u4ee5\u5728get_input_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230; img_data\u662f\u4e0emodel\u8f93\u5165shape\u548cdtype\u76f8\u540c\u7684numpy.ndarray\u683c\u5f0f\u6570\u636e\uff0c\u9519\u8bef\u7684shape\u6216dtype\uff0c\u5c06\u5bfc\u81f4set_input\u8fd4\u56deValueError; \u5982\u679c\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u53ef\u4ee5\u591a\u6b21\u8c03\u7528set_input\uff0c\u6839\u636eget_input_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230index\u8bbe\u7f6e\u5bf9\u5e94Tensor\u7684\u8f93\u5165\u6570\u636e\u3002 (3) invoke : \u6a21\u578b\u8fd0\u884c\u4e00\u6b21 model . invoke () \u4f7f\u7528\u987b\u77e5 \u8c03\u7528invoke\u524d\u8bf7\u5148\u4f7f\u7528set_input\u8bbe\u7f6e\u8f93\u5165\u6570\u636e\uff0c\u672a\u8c03\u7528set_input\u76f4\u63a5\u8c03\u7528invoke\u4f1a\u8fd4\u56deValueError\u3002 (4) get_output : \u83b7\u53d6\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u6570\u636e result = model . get_output ( 0 ) \u4f7f\u7528\u987b\u77e5 0\u4e3a\u8f93\u51faTensor\u7684index; \u8f93\u51fa\u6570\u636e\u53ef\u4ee5\u5728get_output_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230\uff0c\u8fd4\u56denumpy.ndarray\u683c\u5f0f\u8f93\u51fa\u6570\u636e\u3002 \u5982\u679c\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u51fa\uff0c\u53ef\u4ee5\u591a\u6b21\u8c03\u7528get_output\uff0c\u6839\u636eget_output_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230index\u83b7\u53d6\u5bf9\u5e94Tensor\u7684\u8f93\u51fa\u6570\u636e\u3002 (5) get_tensor_details : \u8fd4\u56de\u7f51\u7edc\u6a21\u578b\u6bcf\u4e2aTensor\u7684\u4fe1\u606f\uff08list\uff09 tensor_details = model . get_tensor_details () >>> print ( tensor_details ) [{ 'dtype' : 'FLOAT32' , 'name' : 'MobilenetV2/Conv/Conv2D' , 'qtype' : 'INT16' , 'shape' : array ([ 1 , 257 , 257 , 30 ], dtype = int32 )}, { 'dtype' : 'FLOAT32' , 'name' : 'MobilenetV2/Conv/Conv2D_bias' , 'qtype' : 'INT16' , 'shape' : array ([ 2 , 30 ], dtype = int32 )}, { 'dtype' : 'FLOAT32' , 'name' : 'MobilenetV2/Conv/weights/read' , 'qtype' : 'INT8' , 'shape' : array ([ 30 , 3 , 3 , 3 ], dtype = int32 )}, { 'dtype' : 'FLOAT32' , 'name' : 'sub_7' , 'qtype' : 'UINT8' , 'shape' : array ([ 1 , 513 , 513 , 3 ], dtype = int32 )}] \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578bTensor\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a name : Tensor\u540d\u79f0 shape : Tensor\u7684\u5f62\u72b6 dtype : Tensor\u7684\u6570\u636e\u7c7b\u578b qtype : \u5b9a\u70b9\u6a21\u578b\u8be5Tensor\u53ef\u80fd\u7684\u6570\u636e\u7c7b\u578b\uff08quantization type\uff09","title":"3.4.1 calibrator_custom.calibrator\u65b9\u6cd5"},{"location":"module/User_Guide/IPU260/Calibrate.html#342-calibrator_customsim_calibrator","text":"(1) calibrator_custom.SIM_Calibrator\u7b80\u4ecb \u5bf9\u4e8e\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u540c\u65f6\u8f6c\u6362\u65f6\uff0c\u63d0\u4f9bcalibrator_custom.SIM_Calibrator\uff0c\u65b9\u4fbf\u8fdb\u884c\u7b80\u5355\u5b9a\u4e49\u540e\uff0c\u7edf\u4e00\u8f6c\u6362\u3002calibrator_custom.SIM_Calibrator\u662f\u5df2\u7ecf\u5b9e\u73b0\u597d\u7684class\uff0c\u5f53\u4e2d\u53ea\u6709forward\u65b9\u6cd5\u672a\u5b9e\u73b0\uff0c\u4f7f\u7528\u65f6\u4ec5\u9700\u5b9e\u73b0\u8be5\u65b9\u6cd5\uff0c\u5373\u53ef\u8f6c\u6362\u5b8c\u6210\u3002 (2) calibrator_custom.SIM_Calibrator\u4f7f\u7528\u65b9\u6cd5 \u4e0b\u9762\u4ee5 SGS_IPU_SDK/Scripts/examples/sim_calibrator.py \u4e3a\u4f8b\uff0c\u8bf4\u660ecalibrator_custom.SIM_Calibrator\u7684\u4f7f\u7528\u65b9\u6cd5\uff1a \u2460 \u5b9a\u4e49forward\u65b9\u6cd5\uff1a import calibrator_custom class Net ( calibrator_custom . SIM_Calibrator ): def __init__ ( self ): super () . __init__ () self . model = calibrator_custom . calibrator ( model_path , input_config ) def forward ( self , x ): out_details = self . model . get_output_details () self . model . set_input ( 0 , x ) self . model . invoke () result_list = [] for idx in range ( len ( out_details )): result = self . model . get_output ( idx ) result_list . append ( result ) return result_list \u4f7f\u7528\u987b\u77e5 forward\u7684\u53c2\u6570\u4e3a\u6a21\u578b\u8f93\u5165\uff0c\u5982\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u53ef\u589e\u52a0forward\u7684\u53c2\u6570\u3002 \u2461 \u521b\u5efacalibrator_custom.SIM_Calibrator\u7684\u5b9e\u4f8b: net = Net () \u2462 calibrator_custom.utils.image_preprocess_func\u4f7f\u7528\u9884\u5148\u5b9a\u4e49\u597d\u7684\u524d\u5904\u7406\u65b9\u6cd5\u83b7\u53d6img_gen\uff1a preprocess_func = calibrator_custom . utils . image_preprocess_func ( model_name ) def image_generator ( folder_path , preprocess_func ): images = [ os . path . join ( folder_path , img ) for img in os . listdir ( folder_path )] for image in images : img = preprocess_func ( image ) yield [ img ] img_gen = image_generator ( './images' , preprocess_func ) \u2463 \u8c03\u7528calibrator_custom.SIM_Calibrator\u7684convert\u65b9\u6cd5\uff1a net . convert ( img_gen , fix_model = [ out_model_path ]) \u4f7f\u7528\u987b\u77e5 convert\u65b9\u6cd5\u5fc5\u987b\u8f93\u5165\u4e24\u4e2a\u53c2\u6570\uff1a\u56fe\u7247\u751f\u6210\u5668\u3001fixed.sim\u6a21\u578b\u7684\u4fdd\u5b58\u8def\u5f84list\u3002 \u56fe\u7247\u751f\u6210\u5668(img_gen)\uff1a\u2462\u4e2d\u751f\u6210\uff0c\u4e3a\u65b9\u4fbf\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u8f6c\u6362\u6a21\u578b\uff0c\u901a\u8fc7\u751f\u6210\u5668\u65b9\u4fbf\u7ec4\u7ec7\u8f93\u5165\u56fe\u7247\u7684\u5e8f\u5217\u3002\u5982\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u751f\u6210\u5668\u5e94\u8be5\u6309\u7167\u5b9a\u4e49forward\u65f6\u7684\u8f93\u5165\u987a\u5e8f\uff0c\u8fd4\u56de\u6709\u591a\u4e2anumpy.ndarray\u7684list\u3002 fixed.sim\u6a21\u578b\u7684\u4fdd\u5b58\u8def\u5f84list: \u5982\u679c\u5728__init__\u4e2d\u5b9a\u4e49\u591a\u4e2a\u6a21\u578b\uff0cfixed\u6a21\u578b\u7684\u4fdd\u5b58\u8def\u5f84list\u5e94\u8be5\u6309\u7167__init__\u4e2d\u5b9a\u4e49\u6a21\u578b\u7684\u987a\u5e8f\uff0c\u4f9d\u6b21\u547d\u540d\u3002 convert\u65b9\u6cd5\u5176\u4ed6\u53ef\u9009\u53c2\u6570\uff1a num_process: \u8fdb\u7a0b\u6570\uff0c\u540c\u65f6\u8fd0\u884c\u7684CPU\u6570\u91cf quant_level: \u9009\u62e9\u91cf\u5316\u7b49\u7ea7\uff1a[L1, L2, L3, L4, L5]\uff0c\u9ed8\u8ba4L5\u91cf\u5316\u7b49\u7ea7\uff0c\u5177\u4f53\u542b\u4e49\u8be6\u89c1 Calibrator\u5de5\u5177\u4f7f\u7528\u53c2\u6570\u8bf4\u660e \u7684\u53ef\u9009\u53c2\u6570\u4f7f\u7528\u65b9\u6cd5\u3002 quant_param: \u91cf\u5316\u5bfc\u5165\u53c2\u6570\u3002\u5982\u679c\u5df2\u6709\u5bf9\u5e94\u6a21\u578b\u7684\u91cf\u5316\u53c2\u6570\uff0c\u53ef\u4ee5\u5c06\u91cf\u5316\u7684\u53c2\u6570\u5728\u6a21\u578b\u8f6c\u6362\u4e2d\u5bfc\u5165\u3002","title":"3.4.2 calibrator_custom.SIM_Calibrator"},{"location":"module/User_Guide/IPU260/Calibrate.html#343-calibrator_customcalibrator","text":"","title":"3.4.3 calibrator_custom.calibrator\u5bfc\u5165\u91cf\u5316\u53c2\u6570\u89c4\u5219"},{"location":"module/User_Guide/IPU260/Calibrate.html#3431","text":"(1) Conv2D\u7684\u91cf\u5316\u65b9\u6cd5 \u2460 Conv2D\u7684\u91cf\u5316\u5206\u4e3aInputs\u3001Weights\u548cOutputs\uff0c\u76ee\u524d\u652f\u63018bit\uff0c16bit\u91cf\u5316\u3002 \u2461 \u5982\u679c\u4f7f\u75288bit\u91cf\u5316\uff0cConv2D\u7684\u8f93\u5165\u4e3aUINT8\uff08\u76f8\u5f53\u4e8eINT9\u7684\u8868\u8fbe\u80fd\u529b\uff09\uff0cWeights\u4e3aINT8\uff1b\u5982\u679c\u4f7f\u752816bit\u91cf\u5316\uff0cConv2D\u7684\u8f93\u5165\u548cWeights\u5747\u4e3aINT16\u3002 \u2462 Weights\u7684min\u548cmax\u503c\u7684\u4e2a\u6570\u7531kernel\u7684\u4e2a\u6570\u51b3\u5b9a\uff0c\u8f93\u5165\u548c\u8f93\u51fa\u7684min\u548cmax\u503c\u7684\u4e2a\u6570\u7531\u8f93\u5165\u8f93\u51fa\u7684C\u7ef4\u5ea6\u51b3\u5b9a\u3002 \u2463 \u6839\u636e\u7edf\u8ba1\u5f97\u5230\u7684Inputs\u3001Weights\u548cOutputs\u7684min\u548cmax\u503c\uff0c\u9996\u5148\u63d0\u524d\u5c06Weights\u91cf\u5316\u5230\u5b9a\u70b9\u6570\u636e\uff0c\u4fdd\u5b58\u5728fixed\u7684\u7f51\u7edc\u5185\u90e8\uff0c\u518d\u5728\u7f51\u7edc\u8fd0\u884c\u65f6\u52a8\u6001\u91cf\u5316\u8f93\u5165\u548c\u8f93\u51fa\u6570\u636e\u3002 (2) DepthwiseConv2D\u7684\u91cf\u5316\u65b9\u6cd5 \u2460 DepthwiseConv2D\u7684\u91cf\u5316\u5206\u4e3a\u8f93\u5165\u3001Weights\u548c\u8f93\u51fa\uff0c\u76ee\u524d\u652f\u63018bit\uff0c16bit\u91cf\u5316\u3002 \u2461 \u5982\u679c\u4f7f\u75288bit\u91cf\u5316\uff0cDepthwiseConv2D\u7684\u8f93\u5165\u4e3aUINT8\uff08\u76f8\u5f53\u4e8eINT9\u7684\u8868\u8fbe\u80fd\u529b\uff09\uff0cWeights\u4e3aINT8\uff1b\u5982\u679c\u4f7f\u752816bit\u91cf\u5316\uff0cDepthwiseConv2D\u7684\u8f93\u5165\u548cWeights\u5747\u4e3aINT16\u3002 \u2462 Weights\u3001\u8f93\u5165\u548c\u8f93\u51fa\u7684min\u548cmax\u503c\u7684\u4e2a\u6570\u5747\u7531\u5bf9\u5e94Tensor\u7684C\u7ef4\u5ea6\u51b3\u5b9a\u3002 \u2463 \u6839\u636e\u7edf\u8ba1\u5f97\u5230\u7684\u8f93\u5165\u3001Weights\u548c\u8f93\u51fa\u7684min\u548cmax\u503c\uff0c\u9996\u5148\u63d0\u524d\u5c06Weights\u91cf\u5316\u5230\u5b9a\u70b9\u6570\u636e\uff0c\u4fdd\u5b58\u5728fixed\u7684\u7f51\u7edc\u5185\u90e8\uff0c\u518d\u5728\u7f51\u7edc\u8fd0\u884c\u65f6\u52a8\u6001\u91cf\u5316\u8f93\u5165\u548c\u8f93\u51fa\u6570\u636e\u3002 (3) \u5176\u4ed6Op\u91cf\u5316\u65b9\u6cd5 \u2460 \u7f51\u7edc\u4e2d\u5176\u4ed6\u7b97\u5b50\u7684\u91cf\u5316min\u548cmax\u5747\u57fa\u4e8eC\u7ef4\u5ea6\u6570\u91cf\uff0c\u4ec5\u652f\u630116bit\u91cf\u5316\u3002 \u2461 \u8c03\u7528calibrator_custom.calibrator\u7684get_tensor_details\u65b9\u6cd5\u53ef\u4ee5\u4eceqtype\u4e2d\u5f97\u77e5\u8be5Tensor\u5728\u5b9a\u70b9\u6a21\u578b\u65f6\u7684data type\u3002","title":"3.4.3.1. \u7b97\u5b50\u91cf\u5316\u7b56\u7565\u548c\u65b9\u6cd5\u8bf4\u660e"},{"location":"module/User_Guide/IPU260/Calibrate.html#3432","text":"\u57fa\u4e8e\u4e0a\u8ff0\u91cf\u5316\u7684\u7b56\u7565\u548c\u65b9\u6cd5\uff0c\u9700\u8981\u4e3aTensor\u63d0\u4f9b\u5982\u4e0b\u4fe1\u606f\uff1a 1. Tensor\u7684\u540d\u5b57\uff08name\uff09[str] 2. \u7b97\u5b50\u7c7b\u578b\u63d0\u4f9b\u5bf9\u5e94\u6570\u91cf\u7684min\uff0cmax\u3002[list] 3. \u91cf\u5316bit\u4f4d\u3002[int] 4. \u5e38\u91cfTensor\u6570\u636e\uff08data\uff09\uff08\u53ef\u9009\uff09[numpy.ndarray] \u4e0b\u8868\u5c55\u793a\u4e86\u5bf9\u5e94\u7684\u53c2\u6570\u65b9\u5f0f\uff0c\u6574\u4e2a\u53c2\u6570\u4e3alist\uff0c\u5176\u4e2d\u6bcf\u4e2aitem\u662f\u4e00\u4e2adict\uff0c\u5305\u542b\u4e0a\u8ff0\u4fe1\u606f\u3002 [ { \"name\" : \"FeatureExtractor/MobilenetV2/Conv2d_0/weights\" , \"min\" : [ - 4.555312 , - 2.876907 , - 1.234419 ], \"max\" : [ 7.364561 , 3.960804 , 6.0 ], \"bit\" : 8 }, { ... }, ... ] \u793a\u4f8bSGS_IPU_SDK/Scripts/examples/sim_calibrator.py\u4e2d\u5df2\u5b8c\u6210\u4e86\u53c2\u6570\u5bfc\u5165\uff0c\u53ef\u4ee5\u63d0\u4f9bjson\u548cpkl\u6587\u4ef6\u7684\u8bfb\u53d6\u548c\u5bfc\u5165\u3002","title":"3.4.3.2. \u91cf\u5316\u53c2\u6570\u7684\u5185\u5bb9"},{"location":"module/User_Guide/IPU260/Calibrate.html#3433","text":"\u4f7f\u7528\u987b\u77e5 \u2460 \u4e3a\u4e86\u517c\u5bb9\u539f\u6709\u91cf\u5316\u6d41\u7a0b\uff0c\u539f\u6709\u91cf\u5316\u6240\u91c7\u7528\u7684\u7b56\u7565\u4f9d\u7136\u8fdb\u884c\u3002 \u2461 \u83b7\u53d6Float\u6a21\u578btensor\u4fe1\u606f\uff1a\u539f\u59cb\u6a21\u578b\u5728\u8f6c\u6210SGS_Float\u6a21\u578b\u4ee5\u540e\uff0c\u4e00\u4e9b\u7b97\u5b50\u4f1a\u88ab\u5408\u5e76\u548c\u4f18\u5316\uff0c\u8ba1\u7b97\u56fe\u4e0e\u539f\u6846\u67b6\u7684\u6a21\u578b\u6709\u8f83\u5927\u5dee\u5f02\u3002\u6240\u63d0\u4f9b\u7684\u91cf\u5316\u6587\u4ef6\u5185\u5bb9\u9700\u57fa\u4e8e\u5df2\u8f6c\u6210\u7684SGS_Float\u6a21\u578b\u9488\u5bf9\u6027\u8c03\u6574\uff0c\u5982Tensor\u540d\u79f0\u7b49\u4fe1\u606f\u3002\u4e3a\u65b9\u4fbf\u4fee\u6539\u88ab\u5408\u5e76\u548c\u4f18\u5316\u7684\u5c42\uff0c\u53ef\u4ee5\u4f7f\u7528calibrator_custom.calibrator\u7684get_tensor_details\u65b9\u6cd5\u83b7\u53d6Tensor\u7684\u57fa\u672c\u4fe1\u606f\u3002\u53ef\u4ee5\u83b7\u5f97\u6bcf\u4e2aTensor\u7684name\uff0cshape\uff0cdtype\uff0cqtype\u4fe1\u606f\u3002 \u2462 \u83b7\u53d6Fixed\u6a21\u578btensor\u4fe1\u606f\uff1a\u8f6c\u6362\u597d\u7684fixed\u6a21\u578b\u53ef\u4ee5\u4f7f\u7528calibrator_custom.fixed_simulator(\u8bf7\u53c2\u8003 \u7279\u6b8a\u6a21\u578b\u8f6c\u6362\u8981\u70b9 )\u7684get_tensor_details\u65b9\u6cd5\u83b7\u53d6Tensor\u7684\u57fa\u672c\u4fe1\u606f\uff0c\u53ef\u4ee5\u83b7\u5f97\u6bcf\u4e2aTensor\u7684name\uff0cshape\uff0cmin\uff0cmax\uff0cquantization\uff0cdtype\u4fe1\u606f\u3002 \u2463 \u6839\u636e\u6a21\u578bTensor\u4fe1\u606f\uff0c\u66f4\u65b0\u539f\u59cb\u6a21\u578b\u7684\u91cf\u5316\u6587\u4ef6\u540e\uff0c\u5373\u53ef\u5bfc\u5165\u91cf\u5316\u6570\u636e\u6587\u4ef6\u3002 \u2464 \u89e3\u6790\u5b8c\u91cf\u5316\u6587\u4ef6\u540e\uff0c\u4f1a\u5339\u914d\u5df2\u6709\u91cf\u5316\u4fe1\u606f\u4e0e\u5bfc\u5165\u7684\u91cf\u5316\u4fe1\u606f\u3002\u4f18\u5148\u4f7f\u7528\u5bfc\u5165\u7684\u91cf\u5316\u4fe1\u606f\uff0c\u4f46\u4e0d\u6392\u9664\u5728\u5408\u5e76\u65f6\u7531\u4e8e\u5bfc\u5165\u4fe1\u606f\u7684\u4e0d\u5408\u7406\u800c\u653e\u5f03\u4f7f\u7528\u3002","title":"3.4.3.3. \u5bfc\u5165\u91cf\u5316\u6570\u636e\u6d41\u7a0b"},{"location":"module/User_Guide/IPU260/Calibrate.html#35-torch_calibrator","text":"(1) torch_calibrator\u5de5\u5177\u7684\u4f4d\u7f6e\u5728 SGS_IPU_SDK/Scripts/calibrator/torch_calibrator.py \u3002 (2) torch_calibrator\u662f\u57fa\u4e8ePytorch\u5f00\u53d1\u7684\u65b0\u4e00\u4ee3\u91cf\u5316\u5de5\u5177\uff0c\u4e0e\u65e7\u5de5\u5177\u94fe\u76f8\u6bd4\uff0c\u6709\u4ee5\u4e0b\u7279\u6027\uff1a - \u652f\u6301\u4f7f\u7528GPU\uff0c\u540c\u7b49\u7ea7\u7684\u7b97\u6cd5\u5728GPU\u73af\u5883\u4e0b\u91cf\u5316\u901f\u5ea6\u66f4\u5feb\uff08\u9700\u914d\u5408\u4f7f\u7528Nvidia\u00ae GPU Docker\uff09\uff1b - \u652f\u63014/8bit\u6df7\u5408\u91cf\u5316\u7b97\u6cd5\uff0c\u5bf9\u4e8e\u6709\u6761\u4ef6\u7684\u6a21\u578b\u57288bit\u91cf\u5316\u7684\u57fa\u7840\u4e0a\u7ee7\u7eed\u5411\u4e0b\u538b\u7f29\uff0c\u8fdb\u4e00\u6b65\u63d0\u9ad8\u8fd0\u884c\u6548\u7387\uff1b - \u652f\u6301\u66f4\u590d\u6742\u7684\u91cf\u5316\u6807\u5b9a\u7b97\u6cd5\uff0c\u91cf\u5316\u7cbe\u5ea6\u8fdb\u4e00\u6b65\u5f97\u5230\u63d0\u5347\uff0c\u5bf9\u5c0f\u6a21\u578b\uff08mobilenet\u7cfb\u5217\u3001shufflenet\u7cfb\u5217\u3001nanodet\u7cfb\u5217\u7b49\uff09\u63d0\u5347\u6548\u679c\u66f4\u4e3a\u660e\u663e\u3002 (3) torch_calibrator\u662f\u5bf93.1 calibrator\u5de5\u5177\u7684\u8865\u5145\u3002\u5f53\u6a21\u578b\u53c2\u6570\u91cf\u8f83\u5c0f\uff0c\u4f7f\u75283.1 calibrator\u5de5\u5177\u65e0\u6cd5\u8fbe\u5230\u6ee1\u610f\u7684\u7cbe\u5ea6\u65f6\uff1b\u6216\u8005\u6a21\u578b\u53c2\u6570\u91cf\u8f83\u5927\uff0c\u671f\u5f85\u4f7f\u75284bit\u91cf\u5316\u51cf\u5c0f\u6a21\u578b\u5927\u5c0f\uff0c\u53ef\u4ee5\u4f7f\u7528torch_calibrator\u5de5\u5177\u3002","title":"3.5. torch_calibrator\u7b80\u4ecb"},{"location":"module/User_Guide/IPU260/Calibrate.html#351-torch_calibrator","text":"(1) \u5de5\u5177\u4f7f\u7528\u793a\u4f8b python3 torch_calibrator.py \\ -i ilsvrc2012_calibration_set100 \\ -m caffe_mobilenet_v2_float.sim \\ --input_config input_config.ini \\ --quant_config quant_config.yaml \\ -n caffe_mobilenet_v2.py \\ -q Q2 (2) \u5de5\u5177\u4f7f\u7528\u53c2\u6570\u8bf4\u660e \u2460 \u5fc5\u9009\u53c2\u6570 -i , --image : \u6807\u5b9a\u6570\u636e\u96c6\u56fe\u50cf\u8def\u5f84\uff0c100\u5f20\u8bad\u7ec3\u56fe\u7247\u3002 -m , --model : \u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\u3002 --quant_config : \u91cf\u5316\u53c2\u6570(yaml\u683c\u5f0f)\u6587\u4ef6\u8def\u5f84\uff0c\u540e\u9762\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\u8be5\u6587\u4ef6\u7684\u914d\u7f6e\u65b9\u6cd5\u548c\u7528\u9014\u3002 -n , --preprocess : \u6a21\u578b\u9884\u5904\u7406\u6587\u4ef6\uff08py\u6587\u4ef6\uff09\u8def\u5f84\u3002 -q , --q_mode : \u91cf\u5316\u9009\u9879\uff0c\u540e\u9762\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\u3002 \u2461 \u53ef\u9009\u53c2\u6570 -o , --ouptut : \u6a21\u578b\u8f93\u51fa\u8def\u5f84\u3002\u6307\u5b9a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u4f4d\u7f6e\uff1a\u6307\u5b9a\u5230\u6587\u4ef6\u5939\uff0c\u5c06\u81ea\u52a8\u4ee5\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u524d\u7f00\u547d\u540d\uff0c\u540e\u63a5fixed.sim\uff1b\u6307\u5b9a\u5230\u5177\u4f53\u8def\u5f84\u548c\u6587\u4ef6\u540d\uff0c\u5c06\u4ee5\u6307\u5b9a\u8def\u5f84\u548c\u6587\u4ef6\u540d\u547d\u540d\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff1b\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\uff0c\u5c06\u4ee5\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u50a8\u5b58\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u3002 --cal_batchsize : \u6807\u5b9a\u6570\u636e\u96c6\u7684batchsize\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u7b49\u4e8e\u6570\u636e\u96c6\u4e2a\u6570\uff1b\u5982\u679c\u6807\u5b9a\u6570\u636e\u96c6\u5341\u5206\u5e9e\u5927\u6216\u6a21\u578b\u7ed3\u6784\u7279\u6b8a\u65e0\u6cd5\u5728batchsize != 1\u7684\u60c5\u51b5\u4e0b\u63a8\u7406\uff0c\u5219\u53ef\u4ee5\u8bbe\u7f6e\u8fd9\u4e2a\u53c2\u6570\u3002\u9ed8\u8ba4\u4e3a100\u3002","title":"3.5.1. torch_calibrator\u5de5\u5177\u4f7f\u7528\u8bf4\u660e"},{"location":"module/User_Guide/IPU260/Calibrate.html#352-torch_calibrator","text":"\u91cf\u5316\u7b49\u7ea7 \u91cf\u5316\u7279\u8272\u8bf4\u660e \u91cf\u5316\u5b50\u9009\u9879 \u8be6\u7ec6\u8bf4\u660e Q1 \u4ec5\u505amin\u548cmax\u7684\u6807\u5b9a\uff0c\u4e0d\u4f1a\u4f18\u5316\u5377\u79ef\u53c2\u6570\uff0c\u901f\u5ea6\u6574\u4f53\u8f83\u5feb\uff0c\u9002\u7528\u4e8e\u6ca1\u6709GPU\u7684\u73af\u5883\uff0c\u5982\u679c\u6709GPU\u5219\u53ef\u4ee5\u52a0\u5feb\u6807\u5b9a\u901f\u5ea6\uff1b\u7cbe\u5ea6\u65b9\u9762\u6574\u4f53\u6301\u5e733.1 calibrator\u91cf\u5316\u7684\u7cbe\u5ea6\uff1b Q10 \u516816bit\u91cf\u5316\uff0c\u91cf\u5316\u7cbe\u5ea6\u4e0efloat32\u6a21\u578b\u57fa\u672c\u4e00\u81f4 Q1/Q11 \u51688bit\u5feb\u901f\u91cf\u5316\uff0c\u91cf\u5316\u7cbe\u5ea6\u4e0eL2\u6a21\u5f0f\u76f8\u5f53 Q12 \u81ea\u9002\u5e948bit\u548c16bit\u91cf\u5316\uff0c\u91cf\u5316\u7cbe\u5ea6\u4e0eL5\u6a21\u5f0f\u76f8\u5f53 Q13 4/8bit(8/16bit \u53ef\u6839\u636e\u914d\u7f6e\u6587\u4ef6\u66f4\u6539\uff0c\u9ed8\u8ba44/8bit)\u6df7\u5408\u91cf\u5316\uff0c\u5bf9\u4e8e\u6709\u8fdb\u4e00\u6b65\u538b\u7f29\u9700\u6c42\u7684\u6a21\u578b\u53ef\u4ee5\u9009\u7528\u6b64\u65b9\u5f0f\u3002 Q2 \u91cf\u5316\u7b49\u7ea7\u4f1a\u5bf9\u6a21\u578b\u8fdb\u884c\u9010\u5c42\u4f18\u5316\uff0c\u4f4ebit\u60c5\u51b5\u4e0b\u7cbe\u5ea6\u63d0\u5347\u660e\u663e\uff0c\u5728\u8f7b\u91cf\u7ea7\u6a21\u578b\u6548\u679c\u66f4\u4e3a\u663e\u8457\uff0c\u9002\u7528\u4e8e\u6709\u5355\u5757GPU\u7684\u73af\u5883\uff1b\u7cbe\u5ea6\u4e0a\u6574\u4f53\u4f18\u4e8eQ1 Q20 \u516816bit\u91cf\u5316\uff0c\u91cf\u5316\u7cbe\u5ea6\u4e0efloat32\u6a21\u578b\u57fa\u672c\u4e00\u81f4 Q21 \u51688bit\u91cf\u5316\uff0c\u5728\u4e00\u4e9b\u5c0f\u6a21\u578b\u4e0a\u80fd\u591f\u83b7\u5f97\u66f4\u597d\u7684\u6548\u679c Q2/Q22 \u81ea\u9002\u5e94\u9009\u62e9\u91cf\u5316\u65b9\u5f0f\uff0c\u662f\u76ee\u524d\u6548\u679c\u6700\u597d\u7684\u91cf\u5316\u65b9\u5f0f\uff0c\u751f\u6210\u7684\u5b9a\u70b9\u6a21\u578b\u4e3a\u51688bit\u91cf\u5316\u6216\u63a5\u8fd1\u51688\u76848/16\u6df7\u5408\u91cf\u5316\u3002 Q23 4/8bit\uff088/16bit \u53ef\u6839\u636e\u914d\u7f6e\u6587\u4ef6\u66f4\u6539\uff0c\u9ed8\u8ba44/8bit\uff09\u6df7\u5408\u91cf\u5316\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u538b\u7f29\u6a21\u578b\uff0c\u538b\u7f29\u7a0b\u5ea6\u548c\u7cbe\u5ea6\u5747\u4f18\u4e8eQ13","title":"3.5.2. torch_calibrator\u91cf\u5316\u9009\u9879"},{"location":"module/User_Guide/IPU260/Calibrate.html#353-torch_calibratoryaml","text":"(1) \u6587\u4ef6\u5185\u5bb9\u5c55\u793a QUANT_CONFIG : retrain_iter_num : 40 device : 'cuda:0' mixed_precisions : [ 4 , 8 ] use_preset_min_max_bit : 0 mp_rate : 0.6 PRESET_MIN_MAX_BIT : # preset tensor min/max and bit [ { name : \"126\" , min : null , max : null , bit : 8 }, { name : \"layer1.0.conv1.weight\" , min : null , max : null , bit : 8 } ] (2) \u6587\u4ef6\u5185\u5bb9\u8bf4\u660e retrain_iter_num\uff1a\u6bcf\u5c42\u91cd\u8bad\u7ec3\u8fed\u4ee3\u6b21\u6570 \u5982\u679c\u8be5\u9879\u4e0d\u5199\u5219\u9ed8\u8ba4\u4e3a40\uff0c\u90e8\u5206\u8f7b\u91cf\u7ea7\u6a21\u578b\u53ef\u80fd\u9700\u8981\u66f4\u591a\u7684\u8fed\u4ee3\u6b21\u6570\u3002 device\uff1a\u6307\u5b9aGPU/CPU \u5982\u679c\u4e0d\u7ed9\u5219\u4f1a\u81ea\u52a8\u5bfb\u627e\u7a7a\u95f2\u7684GPU\u3002\u82e5\u65e0GPU\u5219\u4f1a\u81ea\u52a8\u8c03\u7528CPU\u3002 \u82e5\u6307\u5b9acpu\u8fd0\u7b97\uff0c\u586b\u5199\u4e3a'cpu'\u5373\u53ef\u3002 use_preset_min_max_bit\uff1a\u662f\u5426\u4f7f\u7528\u624b\u5de5\u9884\u8bbe\u7684min/max/bit\u4fe1\u606f \u5982\u679c\u8be5\u9879\u4e3a1\uff0c\u5219\u4f1a\u4f7f\u7528\u4e0b\u65b9\u624b\u52a8\u8bbe\u7f6e\u7684\u4fe1\u606f\uff1b\u5982\u679c\u8be5\u9879\u4e3a0\u6216\u4e0d\u5199\uff0c\u5219\u4e0d\u4f1a\u4f7f\u7528\u4e0b\u65b9\u7684\u4fe1\u606f\u3002 mixed_precisions: \u6df7\u5408\u91cf\u5316\u6a21\u5f0f \u53ef\u9009[4, 8]\uff0c[8, 16]\u3002\u5982\u679c\u4e0d\u586b\uff0c\u9ed8\u8ba4\u662f[4, 8]\u3002\u4ec5\u5728Q13\u3001Q23\u7684\u6a21\u5f0f\u751f\u6548\u3002 mp_rate\uff1a\u6df7\u5408\u91cf\u5316\u6307\u5b9a\u7684\u538b\u7f29\u7387 \u5982\u672a\u6307\u5b9a\u6216\u4e0d\u5728[0.5, 1]\u7684\u8303\u56f4\u5185\uff0c\u5219\u4f1a\u81ea\u52a8\u63a8\u8350\u4e00\u4e2a\u538b\u7f29\u7387\u3002\u8be5\u53c2\u6570\u4f1a\u914d\u5408 mixed_precisions \uff0c\u751f\u62104/8bit\u62168/16bit\u7684\u6a21\u578b\u3002\u4ec5\u5728Q13\u3001Q23\u7684\u6a21\u5f0f\u4e0b\u751f\u6548\u3002 \u5982\u679c\u81ea\u52a8\u63a8\u8350\u7684\u538b\u7f29\u7387\u6ee1\u8db3\u7cbe\u5ea6\u8981\u6c42\uff0c\u53ef\u901a\u8fc7\u4ee50.05\u6b65\u957f\u4e0b\u8c03\u538b\u7f29\u7387\uff0c\u6ee1\u8db3\u7cbe\u5ea6\u8981\u6c42\u7684\u540c\u65f6\u63d0\u5347\u6a21\u578b\u6027\u80fd\u3002 \u5982\u679c\u81ea\u52a8\u63a8\u8350\u7684\u538b\u7f29\u7387\u4e0d\u6ee1\u8db3\u7cbe\u5ea6\u8981\u6c42\uff0c\u53ef\u901a\u8fc7\u4ee50.05\u6b65\u957f\u4e0a\u8c03\u538b\u7f29\u7387\uff0c\u63d0\u5347\u6a21\u578b\u91cf\u5316\u7cbe\u5ea6\u3002 PRESET_MIN_MAX_BIT\uff1a\u53ef\u4ee5\u9884\u8bbe\u67d0\u4e2aTensor\u7684min/max/bit\u4fe1\u606f \u8be6\u89c1 \u91cf\u5316\u7b56\u7565\u548c\u65b9\u6cd5 \uff0cTensor\u540d\u5b57\u4ee5float.sim\u6a21\u578b\u4e2d\u4e3a\u51c6\u3002\u9700\u8981\u5c06 use_preset_min_max_bit \u8bbe\u4e3a1\u3002","title":"3.5.3. torch_calibrator\u91cf\u5316\u53c2\u6570(yaml\u683c\u5f0f)\u6587\u4ef6"},{"location":"module/User_Guide/IPU260/Compile.html","text":"4.1 Compiler\u7b80\u4ecb \u00b6 CompilerTool \u8bf4\u660e \u5de5\u5177\u4f4d\u7f6e SGS_IPU_SDK/Scripts/calibrator/compiler.py \u5de5\u5177\u4f5c\u7528 \u5c06SigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u4e3aSigmaStar\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b \u4f7f\u7528\u987b\u77e5 \u2460 \u4f7f\u7528Simulator\u5de5\u5177\u8fd0\u884c\u591abatch\u79bb\u7ebf\u6a21\u578b SGS_IPU_SDK/Scripts/examples/multi_batch_simulator.py \u2461 \u4f7f\u7528MI_IPU\u7684API\u5728\u677f\u7aef\u8fd0\u884c\u591abatch\u79bb\u7ebf\u6a21\u578b alkaid/sdk/verify/mi_demo/source/dla/dla_classifyNBatch (3) \u5728SGS_IPU_SDK \u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK source cfg_env.sh 4.2 Compiler\u5de5\u5177\u4f7f\u7528\u8bf4\u660e \u00b6 4.2.1 Compiler\u5de5\u5177\u4f7f\u7528\u793a\u4f8b \u00b6 \u8fdb\u5165\u5230\u8be5\u5de5\u5177\u76ee\u5f55\uff0c\u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 compiler.py \\ -m ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_fixed.sim 4.2.2 Compiler\u5de5\u5177\u4f7f\u7528\u53c2\u6570\u8bf4\u660e \u00b6 (1) \u5fc5\u9009\u53c2\u6570 \u2460 -m , --model : Fixed\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a \u2460 -b , --batch \uff1a\u671f\u5f85\u8bbe\u5b9a\u7684Batch\u6570\uff0c\u9ed8\u8ba4\u4e3a1\u3002 \u2461 --batch_mode \uff1a\u591abatch\u6a21\u5f0f\u3002 \u4f7f\u7528\u987b\u77e5 \u53ef\u9009n_buf/one_buf\uff0c\u9ed8\u8ba4\u4e3an_buf\u6a21\u5f0f n_buf : \u6bcf\u4e2abatch\u7684\u8f93\u5165\u548c\u8f93\u51fa\u6570\u636e\u72ec\u7acbbuffer\u3002 \u9009\u62e9\u8be5\u6a21\u5f0f\u65f6\uff0c -b / --batch \u53c2\u6570\u4e3a\u671f\u5f85\u8bbe\u5b9a\u7684\u6700\u5927Batch\u6570\uff0cCompiler\u4f1a\u6839\u636e\u6700\u5927Batch\u6570\u4f18\u5316\uff0c\u751f\u6210\u7684\u79bb\u7ebf\u6a21\u578b\u53ef\u4f7f\u7528\u4efb\u610f\u5c0f\u4e8e\u6700\u5927Batch\u6570\u8fd0\u884c\u3002 one_buf : \u591a\u4e2abatch\u7684\u6570\u636e\u9700\u5728\u6700\u9ad8\u7ef4\u5ea6\u5806\u53e0\u540e\u4f7f\u7528\u4e00\u5757buffer\u3002 \u9009\u62e9\u8be5\u6a21\u5f0f\u65f6\uff0c -b / --batch \u53c2\u6570\u53ef\u6307\u5b9a\u591a\u79cd\u9700\u8981\u4f7f\u7528\u7684Batch\u6570\uff0c\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0c\u6700\u591a\u8bbe\u5b9a10\u4e2a\uff0c\u751f\u6210\u7684\u79bb\u7ebf\u6a21\u578b\u4ec5\u80fd\u4f7f\u7528\u6307\u5b9aBatch\u6570\u8fd0\u884c\u3002 \u2462 -c , --category : \u6a21\u578b\u7684\u7c7b\u522b\u3002 \u4f7f\u7528\u987b\u77e5 \u53ef\u9009Classification / Detection / Unknown\u3002 Classification : \u6a21\u578b\u67091\u4e2a\u8f93\u51fa\uff0c\u4f1a\u6839\u636e\u8f93\u51fa\u6392\u5e8f\u8f93\u51fa\u5206\u6570\u7531\u9ad8\u81f3\u4f4e\u7684\u524d5\u4e2a\u3002 Detection : \u6a21\u578b\u67094\u4e2a\u8f93\u51fa\uff0c\u4f1a\u6839\u636e\u8f93\u51fa\u8f6c\u6362\u4e3a\u8f93\u5165\u56fe\u7247\u7684bbox\u4f4d\u7f6e\u4ee5\u53ca\u7c7b\u522b\u3002\u53ea\u652f\u6301SigmaStar\u540e\u5904\u7406\u7b97\u5b50[SigmaStar\u540e\u5904\u7406\u6a21\u5757]\u3002\u5176\u4ed6\u540e\u5904\u7406\u8bf7\u4f7f\u7528Unknown\u3002 Unknown : \u6a21\u578b\u8f93\u51fa\u4e0d\u5c5e\u4e8e\u4e0a\u8ff0\u4e24\u79cd\u7c7b\u578b\uff0c\u4f1a\u8f93\u51fa\u5168\u90e8\u7684Tensor\u6570\u503c\u3002\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u5230\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u65f6\u9ed8\u8ba4\u4e3aUnknown\u3002 \u2463 -o , --output : \u6a21\u578b\u8f93\u51fa\u8def\u5f84\u3002 \u4f7f\u7528\u987b\u77e5 \u6307\u5b9a\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u6570\u636e\u4f4d\u7f6e\uff1a\u6307\u5b9a\u5230\u6587\u4ef6\u5939\uff0c\u5c06\u81ea\u52a8\u4ee5\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u524d\u7f00\u547d\u540d\uff0c\u540e\u63a5sgsimg.img\uff1b \u6307\u5b9a\u5230\u5177\u4f53\u8def\u5f84\u548c\u6587\u4ef6\u540d\uff0c\u5c06\u4ee5\u6307\u5b9a\u8def\u5f84\u548c\u6587\u4ef6\u540d\u547d\u540d\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\uff1b \u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\uff0c\u5c06\u4ee5\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u50a8\u5b58\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u3002 \u2464 --inplace_input_buf : RAWDATA_F32_NHWC \u662f\u5426\u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf. \u4f7f\u7528\u987b\u77e5 training_input_formats \u548c input_formats \u914d\u7f6e\u4e3a RAWDATA_F32_NHWC \u4e14\u4f7f\u7528 --batch_mode \u7684 one_buf \u6a21\u5f0f\u65f6\u624d\u53ef\u4ee5\u914d\u7f6e\u6b64\u53c2\u6570\u3002 \u53ef\u9009True/False\uff0c\u9ed8\u8ba4\u4e3aTrue\u3002 True : \u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf\u3002 False : \u4fdd\u7559\u539f\u59cb\u8f93\u5165buf\u3002","title":"Compile"},{"location":"module/User_Guide/IPU260/Compile.html#41-compiler","text":"CompilerTool \u8bf4\u660e \u5de5\u5177\u4f4d\u7f6e SGS_IPU_SDK/Scripts/calibrator/compiler.py \u5de5\u5177\u4f5c\u7528 \u5c06SigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u4e3aSigmaStar\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b \u4f7f\u7528\u987b\u77e5 \u2460 \u4f7f\u7528Simulator\u5de5\u5177\u8fd0\u884c\u591abatch\u79bb\u7ebf\u6a21\u578b SGS_IPU_SDK/Scripts/examples/multi_batch_simulator.py \u2461 \u4f7f\u7528MI_IPU\u7684API\u5728\u677f\u7aef\u8fd0\u884c\u591abatch\u79bb\u7ebf\u6a21\u578b alkaid/sdk/verify/mi_demo/source/dla/dla_classifyNBatch (3) \u5728SGS_IPU_SDK \u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK source cfg_env.sh","title":"4.1 Compiler\u7b80\u4ecb"},{"location":"module/User_Guide/IPU260/Compile.html#42-compiler","text":"","title":"4.2 Compiler\u5de5\u5177\u4f7f\u7528\u8bf4\u660e"},{"location":"module/User_Guide/IPU260/Compile.html#421-compiler","text":"\u8fdb\u5165\u5230\u8be5\u5de5\u5177\u76ee\u5f55\uff0c\u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 compiler.py \\ -m ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_fixed.sim","title":"4.2.1 Compiler\u5de5\u5177\u4f7f\u7528\u793a\u4f8b"},{"location":"module/User_Guide/IPU260/Compile.html#422-compiler","text":"(1) \u5fc5\u9009\u53c2\u6570 \u2460 -m , --model : Fixed\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a \u2460 -b , --batch \uff1a\u671f\u5f85\u8bbe\u5b9a\u7684Batch\u6570\uff0c\u9ed8\u8ba4\u4e3a1\u3002 \u2461 --batch_mode \uff1a\u591abatch\u6a21\u5f0f\u3002 \u4f7f\u7528\u987b\u77e5 \u53ef\u9009n_buf/one_buf\uff0c\u9ed8\u8ba4\u4e3an_buf\u6a21\u5f0f n_buf : \u6bcf\u4e2abatch\u7684\u8f93\u5165\u548c\u8f93\u51fa\u6570\u636e\u72ec\u7acbbuffer\u3002 \u9009\u62e9\u8be5\u6a21\u5f0f\u65f6\uff0c -b / --batch \u53c2\u6570\u4e3a\u671f\u5f85\u8bbe\u5b9a\u7684\u6700\u5927Batch\u6570\uff0cCompiler\u4f1a\u6839\u636e\u6700\u5927Batch\u6570\u4f18\u5316\uff0c\u751f\u6210\u7684\u79bb\u7ebf\u6a21\u578b\u53ef\u4f7f\u7528\u4efb\u610f\u5c0f\u4e8e\u6700\u5927Batch\u6570\u8fd0\u884c\u3002 one_buf : \u591a\u4e2abatch\u7684\u6570\u636e\u9700\u5728\u6700\u9ad8\u7ef4\u5ea6\u5806\u53e0\u540e\u4f7f\u7528\u4e00\u5757buffer\u3002 \u9009\u62e9\u8be5\u6a21\u5f0f\u65f6\uff0c -b / --batch \u53c2\u6570\u53ef\u6307\u5b9a\u591a\u79cd\u9700\u8981\u4f7f\u7528\u7684Batch\u6570\uff0c\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0c\u6700\u591a\u8bbe\u5b9a10\u4e2a\uff0c\u751f\u6210\u7684\u79bb\u7ebf\u6a21\u578b\u4ec5\u80fd\u4f7f\u7528\u6307\u5b9aBatch\u6570\u8fd0\u884c\u3002 \u2462 -c , --category : \u6a21\u578b\u7684\u7c7b\u522b\u3002 \u4f7f\u7528\u987b\u77e5 \u53ef\u9009Classification / Detection / Unknown\u3002 Classification : \u6a21\u578b\u67091\u4e2a\u8f93\u51fa\uff0c\u4f1a\u6839\u636e\u8f93\u51fa\u6392\u5e8f\u8f93\u51fa\u5206\u6570\u7531\u9ad8\u81f3\u4f4e\u7684\u524d5\u4e2a\u3002 Detection : \u6a21\u578b\u67094\u4e2a\u8f93\u51fa\uff0c\u4f1a\u6839\u636e\u8f93\u51fa\u8f6c\u6362\u4e3a\u8f93\u5165\u56fe\u7247\u7684bbox\u4f4d\u7f6e\u4ee5\u53ca\u7c7b\u522b\u3002\u53ea\u652f\u6301SigmaStar\u540e\u5904\u7406\u7b97\u5b50[SigmaStar\u540e\u5904\u7406\u6a21\u5757]\u3002\u5176\u4ed6\u540e\u5904\u7406\u8bf7\u4f7f\u7528Unknown\u3002 Unknown : \u6a21\u578b\u8f93\u51fa\u4e0d\u5c5e\u4e8e\u4e0a\u8ff0\u4e24\u79cd\u7c7b\u578b\uff0c\u4f1a\u8f93\u51fa\u5168\u90e8\u7684Tensor\u6570\u503c\u3002\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u5230\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u65f6\u9ed8\u8ba4\u4e3aUnknown\u3002 \u2463 -o , --output : \u6a21\u578b\u8f93\u51fa\u8def\u5f84\u3002 \u4f7f\u7528\u987b\u77e5 \u6307\u5b9a\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u6570\u636e\u4f4d\u7f6e\uff1a\u6307\u5b9a\u5230\u6587\u4ef6\u5939\uff0c\u5c06\u81ea\u52a8\u4ee5\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u524d\u7f00\u547d\u540d\uff0c\u540e\u63a5sgsimg.img\uff1b \u6307\u5b9a\u5230\u5177\u4f53\u8def\u5f84\u548c\u6587\u4ef6\u540d\uff0c\u5c06\u4ee5\u6307\u5b9a\u8def\u5f84\u548c\u6587\u4ef6\u540d\u547d\u540d\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\uff1b \u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\uff0c\u5c06\u4ee5\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u50a8\u5b58\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u3002 \u2464 --inplace_input_buf : RAWDATA_F32_NHWC \u662f\u5426\u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf. \u4f7f\u7528\u987b\u77e5 training_input_formats \u548c input_formats \u914d\u7f6e\u4e3a RAWDATA_F32_NHWC \u4e14\u4f7f\u7528 --batch_mode \u7684 one_buf \u6a21\u5f0f\u65f6\u624d\u53ef\u4ee5\u914d\u7f6e\u6b64\u53c2\u6570\u3002 \u53ef\u9009True/False\uff0c\u9ed8\u8ba4\u4e3aTrue\u3002 True : \u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf\u3002 False : \u4fdd\u7559\u539f\u59cb\u8f93\u5165buf\u3002","title":"4.2.2 Compiler\u5de5\u5177\u4f7f\u7528\u53c2\u6570\u8bf4\u660e"},{"location":"module/User_Guide/IPU260/Convert.html","text":"2.1. Convert Tool\u7b80\u4ecb \u00b6 ConvertTool \u8bf4\u660e \u5de5\u5177\u4f4d\u7f6e SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py \u5de5\u5177\u4f5c\u7528 \u5c06\u6a21\u578b\u8f6c\u6362\u4e3aSGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b \u4f7f\u7528\u987b\u77e5 \u2460 \u652f\u6301\u4ece tensorflow_graphdef \uff0c tensorflow_savemodel \uff0c keras \uff0c tflite \uff0c caffe \uff0c onnx \u516d\u79cd\u6846\u67b6\u6a21\u578b\u8f6c\u6362 \u4e0d\u540c\u6846\u67b6\u6a21\u578b\u8f6c\u6362\u4e3aSGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u7684\u4f7f\u7528\u65b9\u6cd5 \u2461 \u8f6c\u6362\u4e3aSGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b \u9700\u914d\u7f6einput config \u4fe1\u606f \u8be6\u89c1 input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e \u2462 \u8f6c\u6362\u5b8c\u6210\u540e\u4f1a\u751f\u6210\u4e24\u4e2a\u6587\u4ef6\uff0c\u4f8b\u5982 --output_file \u6307\u5b9a\u4e3a ./resnet50_float.sim\uff0c\u8f6c\u6362\u5b8c\u6210\u540e\u4f1a\u751f\u6210\uff1a \u2460 Debug_resnet50_float.sim Debug_resnet50_float.sim \u662f\u8f6c\u6362\u8fc7\u7a0b\u7684\u4e2d\u95f4\u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u672a\u7ecf\u8fc7\u4f18\u5316\uff0c\u4e0e\u539f\u6846\u67b6\u6a21\u578b\u62e5\u6709\u76f8\u540c\u7684\u7f51\u7edc\u7ed3\u6784\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f5c\u4e3a\u8f6c\u6362\u540e\u8c03\u8bd5\u4f7f\u7528\uff0c\u4f46\u662f\u65e0\u6cd5\u5728IPU SDK\u4e2d\u8fd0\u884c \u2461 resnet50_float.sim resnet50_float.sim \u662f\u771f\u6b63\u8f6c\u6362\u597d\u7684\u6587\u4ef6 \u4f7f\u7528\u524d\u5148\u5728SGS_IPU_SDK\u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK source cfg_env.sh 2.2. \u4e0d\u540c\u6846\u67b6\u6a21\u578b\u8f6c\u6362\u4e3aSGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u7684\u4f7f\u7528\u65b9\u6cd5 \u00b6 \u4e0b\u9762\u662fConvert Tool\u76ee\u524d\u652f\u6301\u7684platform information\uff1a python3 ConvertTool.py -h usage : ConvertTool.py [-h] {tensorflow_graphdef,tensorflow_savemodel,keras,tflite,caffe,onnx} ... Convert Tool positional arguments : {tensorflow_graphdef,tensorflow_savemodel,keras,tflite,caffe,onnx} platform info tensorflow_graphdef tensorflow graphdef commands tensorflow_savemodel tensorflow save_model commands keras keras commands tflite tflite commands caffe caffe commands onnx onnx commands optional arguments : -h, --help show this help message and exit \u4e0d\u540c\u5e73\u53f0\u6a21\u578b\u8f6c\u6362\u4e3aSGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u7684\u6240\u9700\u53c2\u6570\u4fe1\u606f\u7565\u6709\u4e0d\u540c\uff0c\u5982\u679c\u60f3\u8fdb\u4e00\u6b65\u4e86\u89e3\u5404\u4e2a\u5e73\u53f0\u8f6c\u6362\u6240\u9700\u8981\u7684\u53c2\u6570\u4fe1\u606f\uff0c\u53ef\u4ee5\u6267\u884c python3 ConvertTool.py {platform} \u2013h \u8fdb\u884c\u67e5\u770b\u3002 \u4e0b\u9762\u5c06\u7b80\u5355\u4ecb\u7ecd\u5404\u4e2a\u5e73\u53f0\u8f6c\u6362\u6240\u9700\u7684\u5177\u4f53\u4fe1\u606f\u548c\u67e5\u770b\u6307\u4ee4\uff1a 2.2.1 caffe\u6846\u67b6\u6307\u4ee4 \u00b6 1\u3001information\uff1a python3 ConvertTool.py caffe -h usage : ConvertTool.py caffe [-h] --model_file MODEL_FILE --weight_file WEIGHT_FILE --input_config INPUT_CONFIG --output_file OUTPUT_FILE optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of tflite file containing the caffe model. --weight_file WEIGHT_FILE Full filepath of tflite file containing the caffe weight. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. 2\u3001 \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a (1) \u5fc5\u9009\u53c2\u6570\uff1a --model_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684caffe\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 --weight_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684caffe\u6743\u91cd\u6587\u4ef6\u8def\u5f84\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput config\u7684\u914d\u7f6e\u4fe1\u606f\u3002 --output_file : \u8f6c\u6362\u6a21\u578b\u7684\u8f93\u51fa\u8def\u5f84\u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a \u65e0\u3002 3\u3001 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ConvertTool.py caffe \\ --model_file ~/SGS_Models/caffe/caffe_resnet50_conv/caffe_resnet50_conv.prototxt \\ --weight_file ~/SGS_Models/caffe/caffe_resnet50_conv/caffe_resnet50_conv.caffemodel \\ --input_config ~/SGS_Models/caffe/caffe_resnet50_conv/input_config.ini \\ --output_file ./resnet50_float.sim 2.2.2 Onnx\u6846\u67b6\u6307\u4ee4 \u00b6 1\u3001information\uff1a python3 Path_to_SGS_IPU_SDK/Scripts/ConvertTool onnx -h usage : ConvertTool.py onnx [-h] --model_file MODEL_FILE --input_shapes INPUT_SHAPES --input_config INPUT_CONFIG --output_file OUTPUT_FILE optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of tflite file containing the onnx model. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon-separated. For many models each shape takes the form N C H W (default None) --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. 2\u3001 \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a (1) \u5fc5\u9009\u53c2\u6570\uff1a --model_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684Onnx\u6a21\u578b\u6587\u4ef6\u7684\u8def\u5f84\u3002 --input_shapes : Onnx\u6a21\u578b\u8f93\u5165shape. dimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0cshape\u4e2a\u6570\u548cinputs \u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\u3002 \u8be5\u6587\u4ef6\u4e3ainput config\u7684\u914d\u7f6e\u4fe1\u606f\u3002 --output_file : \u8f6c\u6362\u6a21\u578b\u7684\u8f93\u51fa\u8def\u5f84\u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a \u65e0\u3002 3\u3001 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ~/SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py onnx --model_file ~/SGS_Models/onnx/onnx_mobilenet_v2/onnx_mobilenet_v2.onnx \\ --input_shapes 1,3,224,224 \\ --input_config ~/SGS_Models/onnx/onnx_mobilenet_v2/input_config.ini \\ --output_file ./onnx_mobilenet_v2_float.sim Note 1.\u5982\u679connx\u6a21\u578b\u4e2d\u5e26\u6709\u540e\u5904\u7406\u7684\u7b97\u5b50\uff0c\u8bf7\u5148\u53bb\u9664\uff0c\u76ee\u524d\u53ea\u652f\u6301\u4e3b\u5e72\u7f51\u7edc\u7684\u8f6c\u6362\u3002\u5982\u679c\u662f\u7531\u5176\u4ed6\u6846\u67b6\u751f\u6210\u7684onnx\u6a21\u578b\uff0c\u8bf7\u52a1\u5fc5\u6ce8\u610f\u5728\u8f6c\u6362\u6a21\u578b\u65f6\u5173\u95ed\u751f\u6210\u540e\u5904\u7406\u7684\u9009\u9879\u3002 2.2.3 tflite\u6846\u67b6\u6307\u4ee4 \u00b6 1\u3001information\uff1a python3 ConvertTool.py tflite -h usage : ConvertTool.py tflite [-h] --model_file MODEL_FILE --input_config INPUT_CONFIG --output_file OUTPUT_FILE optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of tflite file containing the tflite model. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. 2\u3001 \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a (1) \u5fc5\u9009\u53c2\u6570\uff1a --model_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 \u8f93\u5165\u7684\u6a21\u578b\u4e3atflite\u683c\u5f0f\u6587\u4ef6\u8def\u5f84(\u5fc5\u987b\u4e3a\u975e\u91cf\u5316\u6a21\u578b)\u3002 --output_file : \u6307\u5b9a\u8f93\u51fa\u7684\u6a21\u578b\u6587\u4ef6\u3002 flatbuffer\u683c\u5f0f\uff0csim\u540e\u7f00\u6587\u4ef6\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\u3002 \u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a \u65e0\u3002 3\u3001 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ConvertTool.py tflite \\ --model_file ~/test/tensorflow_model/Debug_save_model_float.tflite \\ --input_config ~/test/tensorflow_model/input_config.ini \\ --output_file ~/test/tensorflow_model/save_model_float.sim 2.2.4 tensorflow_savemodel \u6846\u67b6\u6307\u4ee4 \u00b6 1\u3001information\uff1a python3 ConvertTool.py tensorflow_savemodel -h usage : ConvertTool.py tensorflow_savemodel [-h] --saved_model_dir SAVED_MODEL_DIR --input_config INPUT_CONFIG --output_file OUTPUT_FILE --input_shapes INPUT_SHAPES (optional) --tag_set TAG_SET (optional) --signature_key SIGNATURE_KEY (optional) optional arguments : -h, --help show this help message and exit. --saved_model_dir SAVED_MODEL_DIR SavedModel directory to convert. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. --debug Run gdb in Debug mode. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth Default : None. --tag_set TAG_SET Set of tags identifying the MetaGraphDef within the SavedModel to analyze. All tags in the tag set must be present. Default : None. --signature_key SIGNATURE_KEY Key identifying SignatureDef containing inputs and outputs. Default : DEFAULT_SERVING_SIGNATURE_DEF_KEY 2\u3001 \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a (1) \u5fc5\u9009\u53c2\u6570\uff1a --saved_model_dir : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 \u8f93\u5165\u7684\u6a21\u578b\u4e3aTensorFlow saved_model.builder\u751f\u6210\u7684\u6587\u4ef6\u8def\u5f84\u3002 --output_file : \u6307\u5b9a\u8f93\u51fa\u7684\u6a21\u578b\u6587\u4ef6\u3002 flatbuffer\u683c\u5f0f\uff0c\u9700\u662fsim\u540e\u7f00\u6587\u4ef6\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\u3002 \u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a --input_shapes : \u7f51\u7edc\u8f93\u5165Tensor\u7684shape\u3002 \u683c\u5f0f\u4e3aNHWC\uff0cdimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0cshape\u4e2a\u6570\u548cinputs \u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002\u82e5\u4e0d\u6307\u5b9a\u5219\u4ecesaved_model_dir\u4e2d\u83b7\u53d6\u3002 --tag_set : \u9700\u8981\u548csave model\u65f6\u6240\u6307\u5b9a\u7684tag\u5339\u914d\u3002 \u5982\u679c\u4e0d\u505a\u8bbe\u5b9a\uff0c\u5219\u9ed8\u8ba4\u4e3a\u2018serve\u2019\u3002 --signature_key : \u9700\u8981\u548csave model\u65f6\u6240\u6307\u5b9a\u7684signature\u5339\u914d\u3002 \u5982\u679c\u4e0d\u505a\u8bbe\u5b9a\uff0c\u5219\u9ed8\u8ba4\u4e3a \u2018DEFAULT_SERVING_SIGNATURE_DEF_KEY\u2019 3\u3001 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ConvertTool.py tensorflow_savemodel \\ --saved_model_dir ~/test/tensorflow_model/save_model \\ --input_config ~/test/tensorflow_model/input_config.ini \\ --output_file ~/test/tensorflow_model/save_model_float.sim \\ --tag_set test_saved_model \\ --signature_key test_signature 2.2.5 tensorflow_graphdef \u6846\u67b6\u6307\u4ee4 \u00b6 1\u3001information\uff1a python3 ConvertTool.py tensorflow_graphdef -h usage : ConvertTool.py tensorflow_graphdef [-h] --graph_def_file GRAPH_DEF_FILE --input_config INPUT_CONFIG --output_file OUTPUT_FILE --input_shapes INPUT_SHAPES (optional) optional arguments : -h, --help show this help message and exit. --graph_def_file GRAPH_DEF_FILE Full filepath of file containing frozen GraphDef. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated.For many models each shape takes the form batch size, input array height, input array width, input array depth. Default : None 2\u3001 \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a (1) \u5fc5\u9009\u53c2\u6570\uff1a --graph_def_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684\u8f93\u5165\u6a21\u578b\u8def\u5f84\u3002 \u4e3aTensorFlow frozen\u7684graphdef\u7684pb\u683c\u5f0f\u6587\u4ef6\u8def\u5f84\u3002 --output_file : \u6307\u5b9a\u751f\u6210\u7684\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u540d\u3002 flatbuffer\u683c\u5f0f\uff0c\u9700\u4ee5sim\u540e\u7f00\u547d\u540d\u6587\u4ef6\u3002 --input_shapes : \u6307\u5b9a\u7f51\u7edc\u8f93\u5165Tensor\u7684shape\u3002 \u683c\u5f0f\u4e3aNHWC\uff0cdimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff1b\u9700\u6ce8\u610fshape\u4e2a\u6570\u548cinputs\u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\u3002 \u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a \u65e0\u3002 3\u3001 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ConvertTool.py tensorflow_graphdef \\ --graph_def_file ~/SGS_Models/tensorflow/resnet_v2_50/resnet_v2_50.pb \\ --output_file ./resnet_v2_float.sim \\ --input_shapes 1,299,299,3 \\ --input_config ~/SGS_Models/tensorflow/resnet_v2_50/input_config.ini 2.2.6 keras\u6846\u67b6\u6307\u4ee4 \u00b6 1\u3001information\uff1a python3 ConvertTool.py keras -h usage : ConvertTool.py keras [-h] --model_file MODEL_FILE --input_config INPUT_CONFIG --output_file OUTPUT_FILE --input_shapes INPUT_SHAPES (optional) --custom_objects CUSTOM_OBJECTS (optional) optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of HDF5 file containing the tf.keras model. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth. Default : None. --custom_objects CUSTOM_OBJECTS Dict mapping names (strings) to custom classes or functions to be considered during model deserialization. Default : None. 2\u3001 \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a (1) \u5fc5\u9009\u53c2\u6570\uff1a --model_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 \u8f93\u5165\u7684\u6a21\u578b\u4e3akeras h5\u683c\u5f0f\u6587\u4ef6\u8def\u5f84\u3002 --output_file : \u6307\u5b9a\u8f93\u51fa\u7684\u6a21\u578b\u6587\u4ef6\u3002 flatbuffer\u683c\u5f0f\uff0c\u9700\u662fsim\u540e\u7f00\u6587\u4ef6\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\u3002 \u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a --input_shapes : \u7f51\u7edc\u8f93\u5165Tensor\u7684shape\u3002 \u683c\u5f0f\u4e3aNHWC\uff0cdimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0cshape\u4e2a\u6570\u548cinputs \u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002 --custom_objects : Dict mapping names (strings) to custom classes or functions to be considered during model deserialization (default None). 3\u3001 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ConvertTool.py keras \\ --model_file ./TEST_h5/resnet50/resnet50.h5 \\ --input_config ./TEST_h5/resnet50/input_config.ini \\ --output_file ./TEST_h5/resnet50/resnet50_float.sim 2.3. input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e \u00b6 \u59822.2\u8282\u6240\u793a\uff0c\u5404\u5e73\u53f0\u6a21\u578b\u5728\u8f6c\u6362\u4e3aSGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u7684\u6307\u4ee4\u4e2d\u90fd\u9700\u4f7f\u7528\u5fc5\u9009\u53c2\u6570 --input_config \uff0c\u7528\u4e8e\u6307\u5b9ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u6587\u4ef6input_config.ini\u8def\u5f84\uff0c\u4e0b\u9762\u5c06\u5bf9\u8be5\u6587\u4ef6\u8fdb\u884c\u4ecb\u7ecd\uff1a (1) \u8be5\u6587\u4ef6\u7684\u4e3b\u8981\u529f\u80fd\u6709\uff1a \u2022 \u914d\u7f6e\u7f51\u7edc\u6a21\u578b\u56fe\u7247\u524d\u5904\u7406\u7684\u5f52\u4e00\u5316\u4fe1\u606f\uff1b \u2022 \u914d\u7f6e\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u8f93\u51fa\u7684\u91cf\u5316\u5904\u7406\u4fe1\u606f\uff1b \u2022 \u914d\u7f6e\u7f51\u7edc\u6a21\u578b\u4e2d\u5377\u79ef\u7684\u91cf\u5316\u4fe1\u606f\u3002 [\u8865\u5145\u8bf4\u660e] \u2460 \u914d\u7f6einput_config.ini\u6587\u4ef6\u4e3b\u8981\u662f\u4e3a\u4e86\u80fd\u5c06\u7f51\u7edc\u6a21\u578b\u5feb\u901f\u9002\u914d\u5230SigmaStar\u82af\u7247\u4e2d\u4f7f\u7528\u3002\u5728\u7f51\u7edc\u6a21\u578b\u7684\u8bad\u7ec3\u4e2d\uff0c\u4e0d\u540c\u7684\u6846\u67b6\u548c\u8bad\u7ec3\u6570\u636e\u96c6\u9700\u8981\u7f51\u7edc\u4f7f\u7528\u4e0d\u540c\u7684\u56fe\u7247\u5f52\u4e00\u5316\u65b9\u6cd5\uff0c\u800c\u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0c\u4e3a\u4e86\u80fd\u591f\u8ba9\u7f51\u7edc\u6a21\u578b\u7684\u9884\u6d4b\u66f4\u52a0\u51c6\u786e\uff0c\u9700\u8981\u8fd8\u539f\u8bad\u7ec3\u6a21\u578b\u65f6\u7684\u56fe\u7247\u524d\u5904\u7406\u5f52\u4e00\u5316\u65b9\u6cd5\u3002 \u2461 \u5c06RGB\u4e09\u4e2a\u901a\u9053\u7684\u5747\u503c\u548cstd_value\u8bbe\u7f6e\u597d\u540e\uff0c\u5728\u8f6c\u6362\u6a21\u578b\u65f6\u4f1a\u5199\u5165\u5230\u6a21\u578b\u5185\u90e8\uff0c\u8fd9\u6837\u5728\u786c\u4ef6\u4e0a\u5b9e\u9645\u4f7f\u7528\u65f6\uff0c\u4ec5\u9700\u8981\u5c06\u56fe\u7247resize\u5230\u7f51\u7edc\u6a21\u578b\u7684\u8f93\u5165\u7684\u5c3a\u5bf8\uff0c\u56fe\u7247\u5f52\u4e00\u5316\u7684\u5de5\u4f5c\u5728\u7f51\u7edc\u5185\u90e8\u5b8c\u6210\u3002 \u2462 \u5b9e\u9645\u786c\u4ef6\u4e0a\u4f7f\u7528\u65f6\u56fe\u7247\u8f93\u5165\u683c\u5f0f\u4e0e\u8bad\u7ec3\u65f6\u4f7f\u7528\u7684RGB\u53ef\u80fd\u6709\u5f88\u5927\u533a\u522b\uff0c\u6b63\u786e\u914d\u7f6e\u8fd9\u4e9b\u9009\u9879\u80fd\u4f7f\u8f6c\u6362\u597d\u7684\u6a21\u578b\u5185\u62e5\u6709\u8fd9\u4e9b\u914d\u7f6e\u4fe1\u606f\uff0c\u80fd\u591f\u76f4\u63a5\u5728SigmaStar\u7684\u786c\u4ef6\u4e0a\u90e8\u7f72\u3002 (2) \u8be5\u6587\u4ef6\u9700\u8bbe\u7f6e\u4fe1\u606f\u793a\u4f8b\uff1a [INPUT_CONFIG] ;Names of the input arrays, comma-separated.image input must be the first. inputs = 'data'; ;Memory formats of input arrays, comma-separated. ;One of RGB, BGR, RGBA, BGRA, YUV_NV12, RAWDATA_S16_NHWC ;Each entry in the list should match an entry in inputs arrays. training_input_formats = BGR; input_formats = BGR; ;Indicate the input data need qauntize or not. ;Each entry in the list should match an entry in inputs arrays. quantizations = TRUE; ;mean_values parameter for image models, ;Each entry in the list match RGB channel of\uff08RGB,BGR,RGBA,BGRA,YUV_NV12\uff09, channel order is R,G,B. mean = 127.5:127.5:127.5; ;std_value parameter for image models, std_value = 1.0; [OUTPUT_CONFIG] ;Names of the output arrays, comma-separated. outputs = 'prob'; ;Indicate the output data need deqauntize or not. ;Each entry in the list should match an entry in outputs arrays. dequantizations = TRUE; [CONV_CONFIG] ;input_format=ALL_INT16; tensor_arrays = 'conv1-1,conv2-1'; \u8be5\u6587\u4ef6\u4e3b\u8981\u5206\u4e3a\u4e09\u4e2a\u8bbe\u7f6e\u4fe1\u606f\uff1a [INPUT_CONFIG] // \u914d\u7f6e\u7f51\u7edc\u6a21\u578b\u56fe\u7247\u524d\u5904\u7406\u7684\u5f52\u4e00\u5316\u4fe1\u606f [OUTPUT_CONFIG] // \u914d\u7f6e\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u8f93\u51fa\u7684\u91cf\u5316\u5904\u7406\u4fe1\u606f [CONV_CONFIG] // \u914d\u7f6e\u7f51\u7edc\u6a21\u578b\u4e2d\u5377\u79ef\u7684\u91cf\u5316\u4fe1\u606f \u4e0b\u9762\u9488\u5bf9\u8fd9\u4e09\u4e2a\u8bbe\u7f6e\u4fe1\u606f\u5177\u4f53\u8bf4\u660e\uff1a 2.3.1 INPUT_CONFIG \u00b6 (1) inputs : \u7f51\u7edc\u8f93\u5165Tensor\u7684name\u3002 \u4f7f\u7528\u987b\u77e5 \u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u8bf7\u7528\u9017\u53f7( , )\u5206\u9694\u3002\u6a21\u578b\u8f93\u5165Tensor\u6570\u91cf\u548c\u987a\u5e8f\u4e0e inputs \u7684\u914d\u7f6e\u4e00\u81f4\u3002 \u6240\u6709\u8f93\u5165name\u7684\u957f\u5ea6\u4e0d\u80fd\u8d85\u8fc71024\u4e2a\u5b57\u7b26\u3002 String\u7c7b\u578b\u7684\u503c\uff0c\u5982tensor name\uff0c\u9700\u7528('')\u5c06\u5185\u5bb9\u5305\u542b\u8d77\u6765\uff0c\u4f8b\u5982inputs='detectionBoxes,detectionClasses,detectionScores,numDetections'; (2) training_input_formats : \u7f51\u7edc\u8bad\u7ec3\u65f6\u7684\u56fe\u7247\u683c\u5f0f\u3002 \u4f7f\u7528\u987b\u77e5 \u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u8bf7\u7528\u9017\u53f7( , )\u5206\u9694\u3002\u6a21\u578b\u8f93\u5165Tensor\u6570\u91cf\u548c\u987a\u5e8f\u4e0e inputs \u7684\u914d\u7f6e\u4e00\u81f4\u3002 \u53ef\u9009\u56fe\u7247\u683c\u5f0f\u5305\u62ec\uff1a RGB BGR RAWDATA_S16_NHWC RAWDATA_F32_NHWC GRAY (3) input_formats : \u7f51\u7edc\u6a21\u578b\u5728SigmaStar\u82af\u7247\u4e0a\u8fd0\u884c\u7684\u56fe\u7247\u8f93\u5165\u683c\u5f0f\u3002 \u4f7f\u7528\u987b\u77e5 \u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u8bf7\u7528\u9017\u53f7( , )\u5206\u9694\u3002\u6a21\u578b\u8f93\u5165Tensor\u6570\u91cf\u548c\u987a\u5e8f\u4e0e inputs \u7684\u914d\u7f6e\u4e00\u81f4\u3002 \u53ef\u9009\u56fe\u7247\u683c\u5f0f\u5305\u62ec\uff1a RGB BGR RGBA BGRA YUV_NV12 RAWDATA_F32_NHWC RAWDATA_S16_NHWC GRAY \u82e5 training_input_formats \u8bbe\u7f6e\u4e3a RAWDATA_S16_NHWC ,\u5219 input_formats \u4e5f\u5fc5\u987b\u8bbe\u7f6e\u4e3a RAWDATA_S16_NHWC \u3002 training_input_formats\u53ef\u4ee5\u548cinput_formats \u4e0d\u4e00\u6837\u3002\u4f8b\u5982\u5728\u5728SigmaStar\u5f00\u53d1\u677f\u4e0a\uff0cinput_formats\u662fYUV_NV12\uff0c\u4f46\u662ftraining input formats \u662fRGB\u3002 \u66f4\u8be6\u7ec6\u7684 training_input_formats \u548c input_formats \u5bf9\u5e94\u5173\u7cfb\u8bf7\u53c2\u8003 \u8f93\u5165\u8f93\u51fa\u914d\u7f6e\u603b\u7ed3 training_input_formats \u548c input_formats \u4e0d\u80fd\u914d\u7f6e\u4e3a\u5982\u4e0b\u60c5\u51b5\uff1a training_input_formats=RGB; input_formats=BGR;(\u9519\u8bef\u914d\u7f6e) training_input_formats=BGR; input_formats=RGB;(\u9519\u8bef\u914d\u7f6e) \u7070\u5ea6\u56fe\u7247\u8bf7\u6309\u5982\u4e0b\u65b9\u5f0f\u914d\u7f6e\uff1a training_input_formats=GRAY; input_formats=YUV_NV12; \u5177\u4f53\u8be6\u89c1 \u7070\u5ea6\u6a21\u578b\u8f6c\u6362\u8981\u70b9 \u914d\u7f6e RAWDATA_F32_NHWC \u6216 RAWDATA_S16_NHWC \u65f6\uff0c mean \u548c std_value \u4e0d\u8981\u914d\u7f6e\uff0c\u5177\u4f53\u8be6\u89c1 RAWDATA_F32_NHWC\u6a21\u578b\u8f6c\u6362\u8981\u70b9 (4) quantizations : \u7528\u6765\u6807\u8bc6\u6240\u6709\u8f93\u5165Tensor\u7684\u6570\u636e\u662f\u5426\u9700\u8981\u505a\u91cf\u5316\uff0cTRUE\u6216\u8005FALSE\uff0c\u9ed8\u8ba4\u503c\u4e3aTRUE\u3002 \u4f7f\u7528\u987b\u77e5 \u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u8bf7\u7528\u9017\u53f7( , )\u5206\u9694\u3002\u6a21\u578b\u8f93\u5165Tensor\u6570\u91cf\u548c\u987a\u5e8f\u4e0e inputs \u7684\u914d\u7f6e\u4e00\u81f4\u3002 (5) mean : \u7f51\u7edc\u8bad\u7ec3\u9636\u6bb5\u7528\u6765\u5bf9\u56fe\u7247\u8fdb\u884c\u524d\u5904\u7406\u3002 \u4f7f\u7528\u987b\u77e5 \u5bf9\u4e8eRGB\u901a\u9053\u7684\u56fe\u7247\uff0c\u4f7f\u7528\u516c\u5f0f (RGB - [mean_red, mean_green, mean_green])/std_value \u5bf9\u56fe\u7247\u8fdb\u884c\u9884\u5904\u7406\u3002 mean_red:mean_green:mean_blue \u5c31\u662f\u76f8\u5e94\u901a\u9053\u4e0a\u7684mean\u503c\u3002\u5982\u679c\u8fd9\u4e2a\u7f51\u7edc\u6ca1\u6709\u505a\u4efb\u4f55\u5f52\u4e00\u5316\u5904\u7406\uff0c\u8fd9\u4e2a\u503c\u8bbe\u4e3a0\u5373\u53ef\u3002 \u6bcf\u4e2amean\u6570\u91cf\u7b49\u4e8einputs \u4e2a\u6570\u3002\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 (6) std_value : \u7f51\u7edc\u8bad\u7ec3\u9636\u6bb5\u7528\u6765\u5bf9\u56fe\u7247\u8fdb\u884c\u524d\u5904\u7406\u3002 \u4f7f\u7528\u987b\u77e5 \u5bf9\u4e8eRGB\u901a\u9053\u7684\u56fe\u7247\uff0c\u4f7f\u7528\u516c\u5f0f (RGB - [mean_red, mean_green, mean_green])/std_value \u5bf9\u56fe\u7247\u8fdb\u884c\u9884\u5904\u7406\u3002 \u5982\u679c\u6ca1\u6709\u505a\u4efb\u4f55\u5f52\u4e00\u5316\u5904\u7406\uff0c\u8fd9\u4e2a\u503c\u8bbe\u4e3a1\u5373\u53ef\u3002 \u5982\u679c\u6bcf\u4e2a\u901a\u9053\u90fd\u6709\u5bf9\u5e94\u7684 std_value \u503c\uff0c\u4ee5\u82f1\u6587\u5192\u53f7( : )\u5206\u9694\uff0c\u987a\u5e8f\u4e3aRGB\u3002 \u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 (7) input_width_alignment \uff1a\u7528\u6765\u6807\u8bc6\u6570\u636e\u4f5c\u4e3a\u7f51\u7edc\u8f93\u5165\u65f6Width\u65b9\u5411\u5bf9\u9f50\u7684\u6570\u91cf\uff0c\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 (8) input_height_alignment \uff1a\u7528\u6765\u6807\u8bc6\u6570\u636e\u4f5c\u4e3a\u7f51\u7edc\u8f93\u5165\u65f6Height\u65b9\u5411\u5bf9\u9f50\u7684\u6570\u91cf\uff0c\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 \u4f7f\u7528\u987b\u77e5 \u5f53input_formats\u8bbe\u5b9a\u4e3aYUV_NV12\u65f6\uff0c input_width_alignment \u548c input_height_alignment \u9ed8\u8ba4\u503c\u4e3a2\uff0c\u5176\u4f59\u60c5\u51b5\u9ed8\u8ba4\u503c\u4e3a1\u3002 \u677f\u4e0a\u8fd0\u884c\u65f6\u6570\u636e\u5bf9\u9f50\u65b9\u5f0f\u8be6\u89c1 \u8f93\u5165\u8f93\u51fa\u914d\u7f6e\u603b\u7ed3 (9) input_layouts : \u7528\u6765\u6807\u8bc6\u8f93\u5165Tensor\u7684\u6570\u636e\u6392\u5e03\u683c\u5f0f\u3002 \u4f7f\u7528\u987b\u77e5 \u53ef\u9009\u6570\u636e\u6392\u5e03\u683c\u5f0f\u5305\u62ec\uff1a NCHW: NCHW \u8868\u793a\u5bf9\u5e94\u987a\u5e8f\u7684inputTensor\u82e5\u662f\u56db\u7ef4\u5219\u6309\u7167NCHW\u7684\u6570\u636e\u683c\u5f0f\u6392\u5e03\uff08\u4e0ecaffe/onnx\u539f\u6a21\u578b\u76f8\u540c\uff09 NHWC: NHWC \u8868\u793a\u5bf9\u5e94\u987a\u5e8f\u7684inputTensor\u82e5\u662f\u56db\u7ef4\u5219\u6309\u7167NHWC\u7684\u683c\u5f0f\u6392\u5e03\uff08\u9ed8\u8ba4\u683c\u5f0f\uff09\u3002 \u5982\u679c\u4e0d\u8bbe\u7f6e\u8be5\u9879\uff0c\u5c06\u9ed8\u8ba4\u6570\u636e\u6392\u5e03\u683c\u5f0f\u4e3a NHWC \u3002 \u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7\uff08,\uff09\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002\u6570\u91cf\u7b49\u4e8einputs\u4e2a\u6570\uff0c\u6a21\u578b\u8f93\u5165Tensor\u987a\u5e8f\u4e0e input_layouts \u7684\u914d\u7f6e\u987a\u5e8f\u4e00\u81f4\u3002 \u5f53\u8f93\u5165\u7684 input_layouts \u8bbe\u4e3a NCHW \u4e14\u662f\u56db\u7ef4Tensor\uff0c\u9700\u8981\u786e\u4fdd\u8be5\u8f93\u5165\u5bf9\u5e94\u7684\u524d\u5904\u7406\u811a\u672c\u8fd4\u56de\u6570\u636e\u4e5f\u6309\u7167NCHW\u6392\u5e03\uff0c\u4e14\u677f\u7aef\u8fd0\u884c\u79bb\u7ebf\u6a21\u578b\u65f6\u7684\u8f93\u5165\u6570\u636e\u6392\u5e03\u4e5f\u6309\u7167NCHW\u6392\u5e03\u3002 \u5f53input_formats\u8bbe\u5b9a\u4e3aYUV_NV12\u4e14\u8be5\u8f93\u5165 input_layouts \u8bbe\u4e3a NCHW \uff0c\u524d\u5904\u7406\u811a\u672c\u9700\u8981\u6309\u7167 training_input_formats \uff08BGR\u3001RGB\u3001GRAY\uff09\u8fd4\u56deNCHW\u6392\u5e03\u7684\u6570\u636e\uff0c\u800c\u5728\u677f\u7aef\u8fd0\u884c\u79bb\u7ebf\u6a21\u578b\u65f6\u7684\u8f93\u5165\u6570\u636e\u4e3a\u6b63\u5e38\u6392\u5e03\u7684YUV_NV12\u3002 \u5f53input_formats\u8bbe\u5b9a\u4e3aRGBA\u3001BGRA\u65f6\uff0c\u4e0d\u652f\u6301 input_layouts \u8bbe\u4e3a NCHW \u3002 2.3.2 OUTPUT_CONFIG \u00b6 (1) outputs : \u7f51\u7edc\u8f93\u51faTensor\u7684name(\u53ef\u7528Netron\u5de5\u5177\u6253\u5f00\u6a21\u578b\u67e5\u770b)\u3002 \u4f7f\u7528\u987b\u77e5 \u5982\u679c\u6709\u591a\u4e2a\u8f93\u51faTensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u3002 \u6a21\u578b\u8f93\u51faTensor\u987a\u5e8f\u4e0e outputs \u7684\u914d\u7f6e\u987a\u5e8f\u4e00\u81f4\u3002 \u6240\u6709\u8f93\u51faname\u7684\u957f\u5ea6\u4e0d\u80fd\u8d85\u8fc71024\u4e2a\u5b57\u7b26\u3002 String\u7c7b\u578b\u7684\u503c\uff0c\u5982tensor name\uff0c\u9700\u7528('')\u5c06\u5185\u5bb9\u5305\u542b\u8d77\u6765\uff0c\u4f8b\u5982outputs='detectionBoxes,detectionClasses,detectionScores,numDetections'; \u8f6c\u6362\u5e26\u540e\u5904\u7406\u7f51\u7edc\u65f6\uff0cBackbone\u7f51\u7edc\u7684outputs\u4e0e\u5b8c\u6574\u7f51\u7edcoutputs\u7684\u540d\u79f0\u4e0d\u540c\uff0c\u5176\u4f59\u8bbe\u7f6e\u5e94\u5b8c\u5168\u4e00\u81f4\u3002 (2) dequantizations : \u7528\u6765\u6807\u8bc6\u6240\u6709\u8f93\u51faTensor\u7684\u6570\u636e\u662f\u5426\u9700\u8981\u505a\u53cd\u91cf\u5316\uff0cTRUE\u6216\u8005FALSE\uff0c\u9ed8\u8ba4\u503c\u4e3aTRUE\u3002 \u4f7f\u7528\u987b\u77e5 \u6570\u91cf\u7b49\u4e8eoutputs\u3002\u5982\u679c\u6709\u591a\u4e2a\u8f93\u51faTensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 \u8be5\u9009\u9879\u4ec5\u5728\u677f\u4e0a\u8fd0\u884c\u65f6\u751f\u6548\u3002\u8be5\u9009\u9879\u8bbe\u4e3aTRUE\u65f6\uff0c\u4f1a\u5728\u8f6c\u6362\u5230Fixed\u6a21\u578b\u540e\u5728\u5bf9\u5e94\u7684\u8f93\u51fa\u589e\u52a0Fix2float\u7b97\u5b50\uff0c\u5b8c\u6210\u8f93\u51fa\u6570\u636e\u4e58scale\u8f6c\u6362\u6210float\u7684\u64cd\u4f5c\u3002 \u5982\u679c\u914d\u7f6e dequantizations \u4e3aTRUE\uff0c\u751f\u6210\u7684\u6a21\u578b\u5bf9\u5e94\u8f93\u51fa\u4f1a\u589e\u52a0Fix2Float\u7b97\u5b50\uff0c\u8f93\u51fa\u6570\u636e\u7c7b\u578b\u4e3afloat32\uff0c\u6570\u636e\u4e0e\u8f93\u51fashape\u4e00\u81f4\uff0c\u6ca1\u6709\u5bf9\u9f50\u8981\u6c42\u3002 \u5982\u679c\u914d\u7f6e dequantizations \u4e3aFALSE\uff0c\u5728\u677f\u7aef\u8fd0\u884c\u65f6\u8f93\u51fa\u6570\u636e\u7c7b\u578b\u4e3aint16\uff0c\u6570\u636e\u4e0e\u8f93\u51fashape\u4e00\u81f4\uff0c\u6ca1\u6709\u5bf9\u9f50\u8981\u6c42\u3002 (3) output_layouts : \u7528\u6765\u6807\u8bc6\u8f93\u51faTensor\u7684\u6570\u636e\u6392\u5e03\u683c\u5f0f\u3002 \u4f7f\u7528\u987b\u77e5 \u53ef\u9009\u6570\u636e\u6392\u5e03\u683c\u5f0f\u5305\u62ec\uff1a NCHW: NCHW \u8868\u793a\u5bf9\u5e94\u987a\u5e8f\u7684outputTensor\u82e5\u662f\u56db\u7ef4\u5219\u6309\u7167NCHW\u7684\u6570\u636e\u683c\u5f0f\u6392\u5e03\uff08\u4e0ecaffe/onnx\u539f\u6a21\u578b\u76f8\u540c\uff09 NHWC: NHWC \u8868\u793a\u5bf9\u5e94\u987a\u5e8f\u7684outputTensor\u82e5\u662f\u56db\u7ef4\u5219\u6309\u7167NHWC\u7684\u683c\u5f0f\u6392\u5e03\uff08\u9ed8\u8ba4\u683c\u5f0f\uff09\u3002 \u5982\u679c\u4e0d\u8bbe\u7f6e\u8be5\u9879\uff0c\u5c06\u9ed8\u8ba4\u6570\u636e\u6392\u5e03\u683c\u5f0f\u4e3a NHWC \u3002 \u5982\u679c\u6709\u591a\u4e2a\u8f93\u51faTensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7\uff08,\uff09\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002\u6570\u91cf\u7b49\u4e8eoutputs\u4e2a\u6570\uff0c\u6a21\u578b\u8f93\u51faTensor\u987a\u5e8f\u4e0e output_layouts \u7684\u914d\u7f6e\u987a\u5e8f\u4e00\u81f4\u3002 2.3.3 CONV_CONFIG \u00b6 (1) input_format : \u6307\u5b9a\u7f51\u7edc\u4e2d\u6240\u6709\u5377\u79ef\u7684\u91cf\u5316\u65b9\u5f0f\u3002 \u4f7f\u7528\u987b\u77e5 \u9ed8\u8ba4\u4f7f\u7528 CalibrateTool \u63a8\u8350\u7684\u91cf\u5316\u65b9\u5f0f\uff0c\u82e5\u4e0d\u60f3\u4f7f\u7528\u63a8\u8350\u65b9\u5f0f\uff0c\u53ef\u9009\u65b9\u6848ALL_UINT8\uff0cALL_INT16\uff0c CONV2D_INT16\uff0cDEPTHWISE_INT16\u3002\u914d\u7f6e\u540e\u5c06\u4f18\u5148\u4f7f\u7528\u5df2\u9009\u65b9\u6848\u4e0d\u518d\u8d70\u63a8\u8350\u91cf\u5316\u3002 ALL_UINT8 : \u6307\u5b9a\u6240\u6709\u5377\u79ef\u6309\u7167UINT8\u91cf\u5316\u3002 ALL_INT16 : \u6307\u5b9a\u6240\u6709\u5377\u79ef\u6309\u7167INT16\u91cf\u5316\u3002 CONV2D_INT16 : \u53ea\u6307\u5b9a\u6240\u6709\u666e\u901a\u5377\u79ef\u6309\u7167INT16\u91cf\u5316\u3002 DEPTHWISE_INT16 : \u53ea\u6307\u5b9a\u6240\u6709Depthwise \u5377\u79ef\u6309\u7167INT16\u91cf\u5316\u3002 \u5728 ALL_UINT8 \u6a21\u5f0f \u4e0b\uff0c\u5377\u79ef\u8fd0\u884c\u6240\u5360\u5e26\u5bbd\u5c0f\uff0c\u8fd0\u884c\u901f\u5ea6\u5feb\uff1b\u5728 ALL_INT16 \u6a21\u5f0f \u4e0b\uff0c\u53ef\u4ee5\u6781\u5927\u7684\u63d0\u9ad8\u5377\u79ef\u7684\u7cbe\u5ea6\uff0c\u4f46\u662f\u8fd0\u884c\u7684\u901f\u5ea6\u4f1a\u6709\u5f71\u54cd\u3002 (2) tensor_arrays : \u6307\u5b9a\u7f51\u7edc\u4e2d\u67d0\u4e9b\u5c42\u7684\u5377\u79ef\u91cf\u5316\u65b9\u5f0f\u3002 \u4f7f\u7528\u987b\u77e5 \u6574\u4e2a\u7f51\u7edc\u5377\u79ef\u90fd\u91c7\u7528\u9ed8\u8ba4\u7684UINT8 \uff0c\u4f46\u662f\u67d0\u4e9b\u5377\u79ef\u5c42\u9700\u8981\u66f4\u9ad8\u7684\u7cbe\u5ea6\uff0c\u8fd9\u65f6\u76f4\u63a5\u586b\u5199\u90a3\u4e9b\u5377\u79ef\u5c42\u7684\u7b2c\u4e00\u4e2a\u8f93\u5165\u7684 input id name\u5373\u53ef\u3002\u591a\u5c42\u65f6\uff0cname\u4ee5\u9017\u53f7( , )\u5206\u9694\u3002 \u5377\u79ef\u7b2c\u4e00\u4e2a\u8f93\u5165\u7684input id\u540d\u5b57\u53ef\u901a\u8fc7netron\u5de5\u5177\u67e5\u770b\u3002\u6307\u5b9a\u91cf\u5316\u65f6\uff0c\u7f51\u7edc\u4e2d\u7684\u7b2c\u4e00\u5c42\u5377\u79ef\u4e0d\u751f\u6548\u3002 2.3.4 \u8f93\u5165\u8f93\u51fa\u914d\u7f6e\u603b\u7ed3 \u00b6 training_input_formats input_formats \u677f\u4e0a\u8fd0\u884c\u65f6\u6570\u636e\u5bf9\u9f50\u65b9\u5f0f RGB/BGR RGB/BGR \u4e0d\u7528\u5bf9\u9f50 RGB/BGR RGBA/BGRA W = ALIGN_UP(W * 4, input_width_alignment ) / 4 input_width_alignment \u9ed8\u8ba4\u4e3a1 RGB/BGR/GRAY YUV_NV12 H = ALIGN_UP(H, input_height_alignment ) input_height_alignment \u9ed8\u8ba4\u4e3a2 W = ALIGN_UP(W, input_width_alignment ) input_width_alignment \u9ed8\u8ba4\u4e3a2 GRAY GRAY H = ALIGN_UP(H, input_height_alignment ) input_height_alignment \u9ed8\u8ba4\u4e3a1 W = ALIGN_UP(W, input_width_alignment ) input_width_alignment \u9ed8\u8ba4\u4e3a1 RAWDATA_F32_NHWC RAWDATA_F32_NHWC \u4e0d\u7528\u5bf9\u9f50 RAWDATA_S16_NHWC RAWDATA_S16_NHWC \u4e0d\u7528\u5bf9\u9f50","title":"Convert"},{"location":"module/User_Guide/IPU260/Convert.html#21-convert-tool","text":"ConvertTool \u8bf4\u660e \u5de5\u5177\u4f4d\u7f6e SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py \u5de5\u5177\u4f5c\u7528 \u5c06\u6a21\u578b\u8f6c\u6362\u4e3aSGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b \u4f7f\u7528\u987b\u77e5 \u2460 \u652f\u6301\u4ece tensorflow_graphdef \uff0c tensorflow_savemodel \uff0c keras \uff0c tflite \uff0c caffe \uff0c onnx \u516d\u79cd\u6846\u67b6\u6a21\u578b\u8f6c\u6362 \u4e0d\u540c\u6846\u67b6\u6a21\u578b\u8f6c\u6362\u4e3aSGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u7684\u4f7f\u7528\u65b9\u6cd5 \u2461 \u8f6c\u6362\u4e3aSGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b \u9700\u914d\u7f6einput config \u4fe1\u606f \u8be6\u89c1 input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e \u2462 \u8f6c\u6362\u5b8c\u6210\u540e\u4f1a\u751f\u6210\u4e24\u4e2a\u6587\u4ef6\uff0c\u4f8b\u5982 --output_file \u6307\u5b9a\u4e3a ./resnet50_float.sim\uff0c\u8f6c\u6362\u5b8c\u6210\u540e\u4f1a\u751f\u6210\uff1a \u2460 Debug_resnet50_float.sim Debug_resnet50_float.sim \u662f\u8f6c\u6362\u8fc7\u7a0b\u7684\u4e2d\u95f4\u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u672a\u7ecf\u8fc7\u4f18\u5316\uff0c\u4e0e\u539f\u6846\u67b6\u6a21\u578b\u62e5\u6709\u76f8\u540c\u7684\u7f51\u7edc\u7ed3\u6784\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f5c\u4e3a\u8f6c\u6362\u540e\u8c03\u8bd5\u4f7f\u7528\uff0c\u4f46\u662f\u65e0\u6cd5\u5728IPU SDK\u4e2d\u8fd0\u884c \u2461 resnet50_float.sim resnet50_float.sim \u662f\u771f\u6b63\u8f6c\u6362\u597d\u7684\u6587\u4ef6 \u4f7f\u7528\u524d\u5148\u5728SGS_IPU_SDK\u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK source cfg_env.sh","title":"2.1.   Convert Tool\u7b80\u4ecb"},{"location":"module/User_Guide/IPU260/Convert.html#22-sgs","text":"\u4e0b\u9762\u662fConvert Tool\u76ee\u524d\u652f\u6301\u7684platform information\uff1a python3 ConvertTool.py -h usage : ConvertTool.py [-h] {tensorflow_graphdef,tensorflow_savemodel,keras,tflite,caffe,onnx} ... Convert Tool positional arguments : {tensorflow_graphdef,tensorflow_savemodel,keras,tflite,caffe,onnx} platform info tensorflow_graphdef tensorflow graphdef commands tensorflow_savemodel tensorflow save_model commands keras keras commands tflite tflite commands caffe caffe commands onnx onnx commands optional arguments : -h, --help show this help message and exit \u4e0d\u540c\u5e73\u53f0\u6a21\u578b\u8f6c\u6362\u4e3aSGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u7684\u6240\u9700\u53c2\u6570\u4fe1\u606f\u7565\u6709\u4e0d\u540c\uff0c\u5982\u679c\u60f3\u8fdb\u4e00\u6b65\u4e86\u89e3\u5404\u4e2a\u5e73\u53f0\u8f6c\u6362\u6240\u9700\u8981\u7684\u53c2\u6570\u4fe1\u606f\uff0c\u53ef\u4ee5\u6267\u884c python3 ConvertTool.py {platform} \u2013h \u8fdb\u884c\u67e5\u770b\u3002 \u4e0b\u9762\u5c06\u7b80\u5355\u4ecb\u7ecd\u5404\u4e2a\u5e73\u53f0\u8f6c\u6362\u6240\u9700\u7684\u5177\u4f53\u4fe1\u606f\u548c\u67e5\u770b\u6307\u4ee4\uff1a","title":"2.2.   \u4e0d\u540c\u6846\u67b6\u6a21\u578b\u8f6c\u6362\u4e3aSGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u7684\u4f7f\u7528\u65b9\u6cd5"},{"location":"module/User_Guide/IPU260/Convert.html#221-caffe","text":"1\u3001information\uff1a python3 ConvertTool.py caffe -h usage : ConvertTool.py caffe [-h] --model_file MODEL_FILE --weight_file WEIGHT_FILE --input_config INPUT_CONFIG --output_file OUTPUT_FILE optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of tflite file containing the caffe model. --weight_file WEIGHT_FILE Full filepath of tflite file containing the caffe weight. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. 2\u3001 \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a (1) \u5fc5\u9009\u53c2\u6570\uff1a --model_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684caffe\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 --weight_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684caffe\u6743\u91cd\u6587\u4ef6\u8def\u5f84\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u6587\u4ef6\u4e3ainput config\u7684\u914d\u7f6e\u4fe1\u606f\u3002 --output_file : \u8f6c\u6362\u6a21\u578b\u7684\u8f93\u51fa\u8def\u5f84\u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a \u65e0\u3002 3\u3001 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ConvertTool.py caffe \\ --model_file ~/SGS_Models/caffe/caffe_resnet50_conv/caffe_resnet50_conv.prototxt \\ --weight_file ~/SGS_Models/caffe/caffe_resnet50_conv/caffe_resnet50_conv.caffemodel \\ --input_config ~/SGS_Models/caffe/caffe_resnet50_conv/input_config.ini \\ --output_file ./resnet50_float.sim","title":"2.2.1 caffe\u6846\u67b6\u6307\u4ee4"},{"location":"module/User_Guide/IPU260/Convert.html#222-onnx","text":"1\u3001information\uff1a python3 Path_to_SGS_IPU_SDK/Scripts/ConvertTool onnx -h usage : ConvertTool.py onnx [-h] --model_file MODEL_FILE --input_shapes INPUT_SHAPES --input_config INPUT_CONFIG --output_file OUTPUT_FILE optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of tflite file containing the onnx model. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon-separated. For many models each shape takes the form N C H W (default None) --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. 2\u3001 \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a (1) \u5fc5\u9009\u53c2\u6570\uff1a --model_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684Onnx\u6a21\u578b\u6587\u4ef6\u7684\u8def\u5f84\u3002 --input_shapes : Onnx\u6a21\u578b\u8f93\u5165shape. dimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0cshape\u4e2a\u6570\u548cinputs \u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\u3002 \u8be5\u6587\u4ef6\u4e3ainput config\u7684\u914d\u7f6e\u4fe1\u606f\u3002 --output_file : \u8f6c\u6362\u6a21\u578b\u7684\u8f93\u51fa\u8def\u5f84\u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a \u65e0\u3002 3\u3001 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ~/SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py onnx --model_file ~/SGS_Models/onnx/onnx_mobilenet_v2/onnx_mobilenet_v2.onnx \\ --input_shapes 1,3,224,224 \\ --input_config ~/SGS_Models/onnx/onnx_mobilenet_v2/input_config.ini \\ --output_file ./onnx_mobilenet_v2_float.sim Note 1.\u5982\u679connx\u6a21\u578b\u4e2d\u5e26\u6709\u540e\u5904\u7406\u7684\u7b97\u5b50\uff0c\u8bf7\u5148\u53bb\u9664\uff0c\u76ee\u524d\u53ea\u652f\u6301\u4e3b\u5e72\u7f51\u7edc\u7684\u8f6c\u6362\u3002\u5982\u679c\u662f\u7531\u5176\u4ed6\u6846\u67b6\u751f\u6210\u7684onnx\u6a21\u578b\uff0c\u8bf7\u52a1\u5fc5\u6ce8\u610f\u5728\u8f6c\u6362\u6a21\u578b\u65f6\u5173\u95ed\u751f\u6210\u540e\u5904\u7406\u7684\u9009\u9879\u3002","title":"2.2.2 Onnx\u6846\u67b6\u6307\u4ee4"},{"location":"module/User_Guide/IPU260/Convert.html#223-tflite","text":"1\u3001information\uff1a python3 ConvertTool.py tflite -h usage : ConvertTool.py tflite [-h] --model_file MODEL_FILE --input_config INPUT_CONFIG --output_file OUTPUT_FILE optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of tflite file containing the tflite model. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. 2\u3001 \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a (1) \u5fc5\u9009\u53c2\u6570\uff1a --model_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 \u8f93\u5165\u7684\u6a21\u578b\u4e3atflite\u683c\u5f0f\u6587\u4ef6\u8def\u5f84(\u5fc5\u987b\u4e3a\u975e\u91cf\u5316\u6a21\u578b)\u3002 --output_file : \u6307\u5b9a\u8f93\u51fa\u7684\u6a21\u578b\u6587\u4ef6\u3002 flatbuffer\u683c\u5f0f\uff0csim\u540e\u7f00\u6587\u4ef6\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\u3002 \u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a \u65e0\u3002 3\u3001 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ConvertTool.py tflite \\ --model_file ~/test/tensorflow_model/Debug_save_model_float.tflite \\ --input_config ~/test/tensorflow_model/input_config.ini \\ --output_file ~/test/tensorflow_model/save_model_float.sim","title":"2.2.3 tflite\u6846\u67b6\u6307\u4ee4"},{"location":"module/User_Guide/IPU260/Convert.html#224-tensorflow_savemodel","text":"1\u3001information\uff1a python3 ConvertTool.py tensorflow_savemodel -h usage : ConvertTool.py tensorflow_savemodel [-h] --saved_model_dir SAVED_MODEL_DIR --input_config INPUT_CONFIG --output_file OUTPUT_FILE --input_shapes INPUT_SHAPES (optional) --tag_set TAG_SET (optional) --signature_key SIGNATURE_KEY (optional) optional arguments : -h, --help show this help message and exit. --saved_model_dir SAVED_MODEL_DIR SavedModel directory to convert. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. --debug Run gdb in Debug mode. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth Default : None. --tag_set TAG_SET Set of tags identifying the MetaGraphDef within the SavedModel to analyze. All tags in the tag set must be present. Default : None. --signature_key SIGNATURE_KEY Key identifying SignatureDef containing inputs and outputs. Default : DEFAULT_SERVING_SIGNATURE_DEF_KEY 2\u3001 \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a (1) \u5fc5\u9009\u53c2\u6570\uff1a --saved_model_dir : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 \u8f93\u5165\u7684\u6a21\u578b\u4e3aTensorFlow saved_model.builder\u751f\u6210\u7684\u6587\u4ef6\u8def\u5f84\u3002 --output_file : \u6307\u5b9a\u8f93\u51fa\u7684\u6a21\u578b\u6587\u4ef6\u3002 flatbuffer\u683c\u5f0f\uff0c\u9700\u662fsim\u540e\u7f00\u6587\u4ef6\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\u3002 \u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a --input_shapes : \u7f51\u7edc\u8f93\u5165Tensor\u7684shape\u3002 \u683c\u5f0f\u4e3aNHWC\uff0cdimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0cshape\u4e2a\u6570\u548cinputs \u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002\u82e5\u4e0d\u6307\u5b9a\u5219\u4ecesaved_model_dir\u4e2d\u83b7\u53d6\u3002 --tag_set : \u9700\u8981\u548csave model\u65f6\u6240\u6307\u5b9a\u7684tag\u5339\u914d\u3002 \u5982\u679c\u4e0d\u505a\u8bbe\u5b9a\uff0c\u5219\u9ed8\u8ba4\u4e3a\u2018serve\u2019\u3002 --signature_key : \u9700\u8981\u548csave model\u65f6\u6240\u6307\u5b9a\u7684signature\u5339\u914d\u3002 \u5982\u679c\u4e0d\u505a\u8bbe\u5b9a\uff0c\u5219\u9ed8\u8ba4\u4e3a \u2018DEFAULT_SERVING_SIGNATURE_DEF_KEY\u2019 3\u3001 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ConvertTool.py tensorflow_savemodel \\ --saved_model_dir ~/test/tensorflow_model/save_model \\ --input_config ~/test/tensorflow_model/input_config.ini \\ --output_file ~/test/tensorflow_model/save_model_float.sim \\ --tag_set test_saved_model \\ --signature_key test_signature","title":"2.2.4 tensorflow_savemodel \u6846\u67b6\u6307\u4ee4"},{"location":"module/User_Guide/IPU260/Convert.html#225-tensorflow_graphdef","text":"1\u3001information\uff1a python3 ConvertTool.py tensorflow_graphdef -h usage : ConvertTool.py tensorflow_graphdef [-h] --graph_def_file GRAPH_DEF_FILE --input_config INPUT_CONFIG --output_file OUTPUT_FILE --input_shapes INPUT_SHAPES (optional) optional arguments : -h, --help show this help message and exit. --graph_def_file GRAPH_DEF_FILE Full filepath of file containing frozen GraphDef. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated.For many models each shape takes the form batch size, input array height, input array width, input array depth. Default : None 2\u3001 \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a (1) \u5fc5\u9009\u53c2\u6570\uff1a --graph_def_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684\u8f93\u5165\u6a21\u578b\u8def\u5f84\u3002 \u4e3aTensorFlow frozen\u7684graphdef\u7684pb\u683c\u5f0f\u6587\u4ef6\u8def\u5f84\u3002 --output_file : \u6307\u5b9a\u751f\u6210\u7684\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u540d\u3002 flatbuffer\u683c\u5f0f\uff0c\u9700\u4ee5sim\u540e\u7f00\u547d\u540d\u6587\u4ef6\u3002 --input_shapes : \u6307\u5b9a\u7f51\u7edc\u8f93\u5165Tensor\u7684shape\u3002 \u683c\u5f0f\u4e3aNHWC\uff0cdimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff1b\u9700\u6ce8\u610fshape\u4e2a\u6570\u548cinputs\u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\u3002 \u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a \u65e0\u3002 3\u3001 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ConvertTool.py tensorflow_graphdef \\ --graph_def_file ~/SGS_Models/tensorflow/resnet_v2_50/resnet_v2_50.pb \\ --output_file ./resnet_v2_float.sim \\ --input_shapes 1,299,299,3 \\ --input_config ~/SGS_Models/tensorflow/resnet_v2_50/input_config.ini","title":"2.2.5 tensorflow_graphdef \u6846\u67b6\u6307\u4ee4"},{"location":"module/User_Guide/IPU260/Convert.html#226-keras","text":"1\u3001information\uff1a python3 ConvertTool.py keras -h usage : ConvertTool.py keras [-h] --model_file MODEL_FILE --input_config INPUT_CONFIG --output_file OUTPUT_FILE --input_shapes INPUT_SHAPES (optional) --custom_objects CUSTOM_OBJECTS (optional) optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of HDF5 file containing the tf.keras model. --input_config INPUT_CONFIG Input config path. --output_file OUTPUT_FILE Full filepath of out Model path. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth. Default : None. --custom_objects CUSTOM_OBJECTS Dict mapping names (strings) to custom classes or functions to be considered during model deserialization. Default : None. 2\u3001 \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a (1) \u5fc5\u9009\u53c2\u6570\uff1a --model_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 \u8f93\u5165\u7684\u6a21\u578b\u4e3akeras h5\u683c\u5f0f\u6587\u4ef6\u8def\u5f84\u3002 --output_file : \u6307\u5b9a\u8f93\u51fa\u7684\u6a21\u578b\u6587\u4ef6\u3002 flatbuffer\u683c\u5f0f\uff0c\u9700\u662fsim\u540e\u7f00\u6587\u4ef6\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\u3002 \u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a --input_shapes : \u7f51\u7edc\u8f93\u5165Tensor\u7684shape\u3002 \u683c\u5f0f\u4e3aNHWC\uff0cdimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0cshape\u4e2a\u6570\u548cinputs \u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002 --custom_objects : Dict mapping names (strings) to custom classes or functions to be considered during model deserialization (default None). 3\u3001 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ConvertTool.py keras \\ --model_file ./TEST_h5/resnet50/resnet50.h5 \\ --input_config ./TEST_h5/resnet50/input_config.ini \\ --output_file ./TEST_h5/resnet50/resnet50_float.sim","title":"2.2.6 keras\u6846\u67b6\u6307\u4ee4"},{"location":"module/User_Guide/IPU260/Convert.html#23-input-config","text":"\u59822.2\u8282\u6240\u793a\uff0c\u5404\u5e73\u53f0\u6a21\u578b\u5728\u8f6c\u6362\u4e3aSGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u7684\u6307\u4ee4\u4e2d\u90fd\u9700\u4f7f\u7528\u5fc5\u9009\u53c2\u6570 --input_config \uff0c\u7528\u4e8e\u6307\u5b9ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u6587\u4ef6input_config.ini\u8def\u5f84\uff0c\u4e0b\u9762\u5c06\u5bf9\u8be5\u6587\u4ef6\u8fdb\u884c\u4ecb\u7ecd\uff1a (1) \u8be5\u6587\u4ef6\u7684\u4e3b\u8981\u529f\u80fd\u6709\uff1a \u2022 \u914d\u7f6e\u7f51\u7edc\u6a21\u578b\u56fe\u7247\u524d\u5904\u7406\u7684\u5f52\u4e00\u5316\u4fe1\u606f\uff1b \u2022 \u914d\u7f6e\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u8f93\u51fa\u7684\u91cf\u5316\u5904\u7406\u4fe1\u606f\uff1b \u2022 \u914d\u7f6e\u7f51\u7edc\u6a21\u578b\u4e2d\u5377\u79ef\u7684\u91cf\u5316\u4fe1\u606f\u3002 [\u8865\u5145\u8bf4\u660e] \u2460 \u914d\u7f6einput_config.ini\u6587\u4ef6\u4e3b\u8981\u662f\u4e3a\u4e86\u80fd\u5c06\u7f51\u7edc\u6a21\u578b\u5feb\u901f\u9002\u914d\u5230SigmaStar\u82af\u7247\u4e2d\u4f7f\u7528\u3002\u5728\u7f51\u7edc\u6a21\u578b\u7684\u8bad\u7ec3\u4e2d\uff0c\u4e0d\u540c\u7684\u6846\u67b6\u548c\u8bad\u7ec3\u6570\u636e\u96c6\u9700\u8981\u7f51\u7edc\u4f7f\u7528\u4e0d\u540c\u7684\u56fe\u7247\u5f52\u4e00\u5316\u65b9\u6cd5\uff0c\u800c\u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0c\u4e3a\u4e86\u80fd\u591f\u8ba9\u7f51\u7edc\u6a21\u578b\u7684\u9884\u6d4b\u66f4\u52a0\u51c6\u786e\uff0c\u9700\u8981\u8fd8\u539f\u8bad\u7ec3\u6a21\u578b\u65f6\u7684\u56fe\u7247\u524d\u5904\u7406\u5f52\u4e00\u5316\u65b9\u6cd5\u3002 \u2461 \u5c06RGB\u4e09\u4e2a\u901a\u9053\u7684\u5747\u503c\u548cstd_value\u8bbe\u7f6e\u597d\u540e\uff0c\u5728\u8f6c\u6362\u6a21\u578b\u65f6\u4f1a\u5199\u5165\u5230\u6a21\u578b\u5185\u90e8\uff0c\u8fd9\u6837\u5728\u786c\u4ef6\u4e0a\u5b9e\u9645\u4f7f\u7528\u65f6\uff0c\u4ec5\u9700\u8981\u5c06\u56fe\u7247resize\u5230\u7f51\u7edc\u6a21\u578b\u7684\u8f93\u5165\u7684\u5c3a\u5bf8\uff0c\u56fe\u7247\u5f52\u4e00\u5316\u7684\u5de5\u4f5c\u5728\u7f51\u7edc\u5185\u90e8\u5b8c\u6210\u3002 \u2462 \u5b9e\u9645\u786c\u4ef6\u4e0a\u4f7f\u7528\u65f6\u56fe\u7247\u8f93\u5165\u683c\u5f0f\u4e0e\u8bad\u7ec3\u65f6\u4f7f\u7528\u7684RGB\u53ef\u80fd\u6709\u5f88\u5927\u533a\u522b\uff0c\u6b63\u786e\u914d\u7f6e\u8fd9\u4e9b\u9009\u9879\u80fd\u4f7f\u8f6c\u6362\u597d\u7684\u6a21\u578b\u5185\u62e5\u6709\u8fd9\u4e9b\u914d\u7f6e\u4fe1\u606f\uff0c\u80fd\u591f\u76f4\u63a5\u5728SigmaStar\u7684\u786c\u4ef6\u4e0a\u90e8\u7f72\u3002 (2) \u8be5\u6587\u4ef6\u9700\u8bbe\u7f6e\u4fe1\u606f\u793a\u4f8b\uff1a [INPUT_CONFIG] ;Names of the input arrays, comma-separated.image input must be the first. inputs = 'data'; ;Memory formats of input arrays, comma-separated. ;One of RGB, BGR, RGBA, BGRA, YUV_NV12, RAWDATA_S16_NHWC ;Each entry in the list should match an entry in inputs arrays. training_input_formats = BGR; input_formats = BGR; ;Indicate the input data need qauntize or not. ;Each entry in the list should match an entry in inputs arrays. quantizations = TRUE; ;mean_values parameter for image models, ;Each entry in the list match RGB channel of\uff08RGB,BGR,RGBA,BGRA,YUV_NV12\uff09, channel order is R,G,B. mean = 127.5:127.5:127.5; ;std_value parameter for image models, std_value = 1.0; [OUTPUT_CONFIG] ;Names of the output arrays, comma-separated. outputs = 'prob'; ;Indicate the output data need deqauntize or not. ;Each entry in the list should match an entry in outputs arrays. dequantizations = TRUE; [CONV_CONFIG] ;input_format=ALL_INT16; tensor_arrays = 'conv1-1,conv2-1'; \u8be5\u6587\u4ef6\u4e3b\u8981\u5206\u4e3a\u4e09\u4e2a\u8bbe\u7f6e\u4fe1\u606f\uff1a [INPUT_CONFIG] // \u914d\u7f6e\u7f51\u7edc\u6a21\u578b\u56fe\u7247\u524d\u5904\u7406\u7684\u5f52\u4e00\u5316\u4fe1\u606f [OUTPUT_CONFIG] // \u914d\u7f6e\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u8f93\u51fa\u7684\u91cf\u5316\u5904\u7406\u4fe1\u606f [CONV_CONFIG] // \u914d\u7f6e\u7f51\u7edc\u6a21\u578b\u4e2d\u5377\u79ef\u7684\u91cf\u5316\u4fe1\u606f \u4e0b\u9762\u9488\u5bf9\u8fd9\u4e09\u4e2a\u8bbe\u7f6e\u4fe1\u606f\u5177\u4f53\u8bf4\u660e\uff1a","title":"2.3. input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e"},{"location":"module/User_Guide/IPU260/Convert.html#231-input_config","text":"(1) inputs : \u7f51\u7edc\u8f93\u5165Tensor\u7684name\u3002 \u4f7f\u7528\u987b\u77e5 \u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u8bf7\u7528\u9017\u53f7( , )\u5206\u9694\u3002\u6a21\u578b\u8f93\u5165Tensor\u6570\u91cf\u548c\u987a\u5e8f\u4e0e inputs \u7684\u914d\u7f6e\u4e00\u81f4\u3002 \u6240\u6709\u8f93\u5165name\u7684\u957f\u5ea6\u4e0d\u80fd\u8d85\u8fc71024\u4e2a\u5b57\u7b26\u3002 String\u7c7b\u578b\u7684\u503c\uff0c\u5982tensor name\uff0c\u9700\u7528('')\u5c06\u5185\u5bb9\u5305\u542b\u8d77\u6765\uff0c\u4f8b\u5982inputs='detectionBoxes,detectionClasses,detectionScores,numDetections'; (2) training_input_formats : \u7f51\u7edc\u8bad\u7ec3\u65f6\u7684\u56fe\u7247\u683c\u5f0f\u3002 \u4f7f\u7528\u987b\u77e5 \u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u8bf7\u7528\u9017\u53f7( , )\u5206\u9694\u3002\u6a21\u578b\u8f93\u5165Tensor\u6570\u91cf\u548c\u987a\u5e8f\u4e0e inputs \u7684\u914d\u7f6e\u4e00\u81f4\u3002 \u53ef\u9009\u56fe\u7247\u683c\u5f0f\u5305\u62ec\uff1a RGB BGR RAWDATA_S16_NHWC RAWDATA_F32_NHWC GRAY (3) input_formats : \u7f51\u7edc\u6a21\u578b\u5728SigmaStar\u82af\u7247\u4e0a\u8fd0\u884c\u7684\u56fe\u7247\u8f93\u5165\u683c\u5f0f\u3002 \u4f7f\u7528\u987b\u77e5 \u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u8bf7\u7528\u9017\u53f7( , )\u5206\u9694\u3002\u6a21\u578b\u8f93\u5165Tensor\u6570\u91cf\u548c\u987a\u5e8f\u4e0e inputs \u7684\u914d\u7f6e\u4e00\u81f4\u3002 \u53ef\u9009\u56fe\u7247\u683c\u5f0f\u5305\u62ec\uff1a RGB BGR RGBA BGRA YUV_NV12 RAWDATA_F32_NHWC RAWDATA_S16_NHWC GRAY \u82e5 training_input_formats \u8bbe\u7f6e\u4e3a RAWDATA_S16_NHWC ,\u5219 input_formats \u4e5f\u5fc5\u987b\u8bbe\u7f6e\u4e3a RAWDATA_S16_NHWC \u3002 training_input_formats\u53ef\u4ee5\u548cinput_formats \u4e0d\u4e00\u6837\u3002\u4f8b\u5982\u5728\u5728SigmaStar\u5f00\u53d1\u677f\u4e0a\uff0cinput_formats\u662fYUV_NV12\uff0c\u4f46\u662ftraining input formats \u662fRGB\u3002 \u66f4\u8be6\u7ec6\u7684 training_input_formats \u548c input_formats \u5bf9\u5e94\u5173\u7cfb\u8bf7\u53c2\u8003 \u8f93\u5165\u8f93\u51fa\u914d\u7f6e\u603b\u7ed3 training_input_formats \u548c input_formats \u4e0d\u80fd\u914d\u7f6e\u4e3a\u5982\u4e0b\u60c5\u51b5\uff1a training_input_formats=RGB; input_formats=BGR;(\u9519\u8bef\u914d\u7f6e) training_input_formats=BGR; input_formats=RGB;(\u9519\u8bef\u914d\u7f6e) \u7070\u5ea6\u56fe\u7247\u8bf7\u6309\u5982\u4e0b\u65b9\u5f0f\u914d\u7f6e\uff1a training_input_formats=GRAY; input_formats=YUV_NV12; \u5177\u4f53\u8be6\u89c1 \u7070\u5ea6\u6a21\u578b\u8f6c\u6362\u8981\u70b9 \u914d\u7f6e RAWDATA_F32_NHWC \u6216 RAWDATA_S16_NHWC \u65f6\uff0c mean \u548c std_value \u4e0d\u8981\u914d\u7f6e\uff0c\u5177\u4f53\u8be6\u89c1 RAWDATA_F32_NHWC\u6a21\u578b\u8f6c\u6362\u8981\u70b9 (4) quantizations : \u7528\u6765\u6807\u8bc6\u6240\u6709\u8f93\u5165Tensor\u7684\u6570\u636e\u662f\u5426\u9700\u8981\u505a\u91cf\u5316\uff0cTRUE\u6216\u8005FALSE\uff0c\u9ed8\u8ba4\u503c\u4e3aTRUE\u3002 \u4f7f\u7528\u987b\u77e5 \u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u8bf7\u7528\u9017\u53f7( , )\u5206\u9694\u3002\u6a21\u578b\u8f93\u5165Tensor\u6570\u91cf\u548c\u987a\u5e8f\u4e0e inputs \u7684\u914d\u7f6e\u4e00\u81f4\u3002 (5) mean : \u7f51\u7edc\u8bad\u7ec3\u9636\u6bb5\u7528\u6765\u5bf9\u56fe\u7247\u8fdb\u884c\u524d\u5904\u7406\u3002 \u4f7f\u7528\u987b\u77e5 \u5bf9\u4e8eRGB\u901a\u9053\u7684\u56fe\u7247\uff0c\u4f7f\u7528\u516c\u5f0f (RGB - [mean_red, mean_green, mean_green])/std_value \u5bf9\u56fe\u7247\u8fdb\u884c\u9884\u5904\u7406\u3002 mean_red:mean_green:mean_blue \u5c31\u662f\u76f8\u5e94\u901a\u9053\u4e0a\u7684mean\u503c\u3002\u5982\u679c\u8fd9\u4e2a\u7f51\u7edc\u6ca1\u6709\u505a\u4efb\u4f55\u5f52\u4e00\u5316\u5904\u7406\uff0c\u8fd9\u4e2a\u503c\u8bbe\u4e3a0\u5373\u53ef\u3002 \u6bcf\u4e2amean\u6570\u91cf\u7b49\u4e8einputs \u4e2a\u6570\u3002\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 (6) std_value : \u7f51\u7edc\u8bad\u7ec3\u9636\u6bb5\u7528\u6765\u5bf9\u56fe\u7247\u8fdb\u884c\u524d\u5904\u7406\u3002 \u4f7f\u7528\u987b\u77e5 \u5bf9\u4e8eRGB\u901a\u9053\u7684\u56fe\u7247\uff0c\u4f7f\u7528\u516c\u5f0f (RGB - [mean_red, mean_green, mean_green])/std_value \u5bf9\u56fe\u7247\u8fdb\u884c\u9884\u5904\u7406\u3002 \u5982\u679c\u6ca1\u6709\u505a\u4efb\u4f55\u5f52\u4e00\u5316\u5904\u7406\uff0c\u8fd9\u4e2a\u503c\u8bbe\u4e3a1\u5373\u53ef\u3002 \u5982\u679c\u6bcf\u4e2a\u901a\u9053\u90fd\u6709\u5bf9\u5e94\u7684 std_value \u503c\uff0c\u4ee5\u82f1\u6587\u5192\u53f7( : )\u5206\u9694\uff0c\u987a\u5e8f\u4e3aRGB\u3002 \u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 (7) input_width_alignment \uff1a\u7528\u6765\u6807\u8bc6\u6570\u636e\u4f5c\u4e3a\u7f51\u7edc\u8f93\u5165\u65f6Width\u65b9\u5411\u5bf9\u9f50\u7684\u6570\u91cf\uff0c\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 (8) input_height_alignment \uff1a\u7528\u6765\u6807\u8bc6\u6570\u636e\u4f5c\u4e3a\u7f51\u7edc\u8f93\u5165\u65f6Height\u65b9\u5411\u5bf9\u9f50\u7684\u6570\u91cf\uff0c\u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 \u4f7f\u7528\u987b\u77e5 \u5f53input_formats\u8bbe\u5b9a\u4e3aYUV_NV12\u65f6\uff0c input_width_alignment \u548c input_height_alignment \u9ed8\u8ba4\u503c\u4e3a2\uff0c\u5176\u4f59\u60c5\u51b5\u9ed8\u8ba4\u503c\u4e3a1\u3002 \u677f\u4e0a\u8fd0\u884c\u65f6\u6570\u636e\u5bf9\u9f50\u65b9\u5f0f\u8be6\u89c1 \u8f93\u5165\u8f93\u51fa\u914d\u7f6e\u603b\u7ed3 (9) input_layouts : \u7528\u6765\u6807\u8bc6\u8f93\u5165Tensor\u7684\u6570\u636e\u6392\u5e03\u683c\u5f0f\u3002 \u4f7f\u7528\u987b\u77e5 \u53ef\u9009\u6570\u636e\u6392\u5e03\u683c\u5f0f\u5305\u62ec\uff1a NCHW: NCHW \u8868\u793a\u5bf9\u5e94\u987a\u5e8f\u7684inputTensor\u82e5\u662f\u56db\u7ef4\u5219\u6309\u7167NCHW\u7684\u6570\u636e\u683c\u5f0f\u6392\u5e03\uff08\u4e0ecaffe/onnx\u539f\u6a21\u578b\u76f8\u540c\uff09 NHWC: NHWC \u8868\u793a\u5bf9\u5e94\u987a\u5e8f\u7684inputTensor\u82e5\u662f\u56db\u7ef4\u5219\u6309\u7167NHWC\u7684\u683c\u5f0f\u6392\u5e03\uff08\u9ed8\u8ba4\u683c\u5f0f\uff09\u3002 \u5982\u679c\u4e0d\u8bbe\u7f6e\u8be5\u9879\uff0c\u5c06\u9ed8\u8ba4\u6570\u636e\u6392\u5e03\u683c\u5f0f\u4e3a NHWC \u3002 \u5982\u679c\u6709\u591a\u4e2a\u8f93\u5165Tensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7\uff08,\uff09\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002\u6570\u91cf\u7b49\u4e8einputs\u4e2a\u6570\uff0c\u6a21\u578b\u8f93\u5165Tensor\u987a\u5e8f\u4e0e input_layouts \u7684\u914d\u7f6e\u987a\u5e8f\u4e00\u81f4\u3002 \u5f53\u8f93\u5165\u7684 input_layouts \u8bbe\u4e3a NCHW \u4e14\u662f\u56db\u7ef4Tensor\uff0c\u9700\u8981\u786e\u4fdd\u8be5\u8f93\u5165\u5bf9\u5e94\u7684\u524d\u5904\u7406\u811a\u672c\u8fd4\u56de\u6570\u636e\u4e5f\u6309\u7167NCHW\u6392\u5e03\uff0c\u4e14\u677f\u7aef\u8fd0\u884c\u79bb\u7ebf\u6a21\u578b\u65f6\u7684\u8f93\u5165\u6570\u636e\u6392\u5e03\u4e5f\u6309\u7167NCHW\u6392\u5e03\u3002 \u5f53input_formats\u8bbe\u5b9a\u4e3aYUV_NV12\u4e14\u8be5\u8f93\u5165 input_layouts \u8bbe\u4e3a NCHW \uff0c\u524d\u5904\u7406\u811a\u672c\u9700\u8981\u6309\u7167 training_input_formats \uff08BGR\u3001RGB\u3001GRAY\uff09\u8fd4\u56deNCHW\u6392\u5e03\u7684\u6570\u636e\uff0c\u800c\u5728\u677f\u7aef\u8fd0\u884c\u79bb\u7ebf\u6a21\u578b\u65f6\u7684\u8f93\u5165\u6570\u636e\u4e3a\u6b63\u5e38\u6392\u5e03\u7684YUV_NV12\u3002 \u5f53input_formats\u8bbe\u5b9a\u4e3aRGBA\u3001BGRA\u65f6\uff0c\u4e0d\u652f\u6301 input_layouts \u8bbe\u4e3a NCHW \u3002","title":"2.3.1 INPUT_CONFIG"},{"location":"module/User_Guide/IPU260/Convert.html#232-output_config","text":"(1) outputs : \u7f51\u7edc\u8f93\u51faTensor\u7684name(\u53ef\u7528Netron\u5de5\u5177\u6253\u5f00\u6a21\u578b\u67e5\u770b)\u3002 \u4f7f\u7528\u987b\u77e5 \u5982\u679c\u6709\u591a\u4e2a\u8f93\u51faTensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u3002 \u6a21\u578b\u8f93\u51faTensor\u987a\u5e8f\u4e0e outputs \u7684\u914d\u7f6e\u987a\u5e8f\u4e00\u81f4\u3002 \u6240\u6709\u8f93\u51faname\u7684\u957f\u5ea6\u4e0d\u80fd\u8d85\u8fc71024\u4e2a\u5b57\u7b26\u3002 String\u7c7b\u578b\u7684\u503c\uff0c\u5982tensor name\uff0c\u9700\u7528('')\u5c06\u5185\u5bb9\u5305\u542b\u8d77\u6765\uff0c\u4f8b\u5982outputs='detectionBoxes,detectionClasses,detectionScores,numDetections'; \u8f6c\u6362\u5e26\u540e\u5904\u7406\u7f51\u7edc\u65f6\uff0cBackbone\u7f51\u7edc\u7684outputs\u4e0e\u5b8c\u6574\u7f51\u7edcoutputs\u7684\u540d\u79f0\u4e0d\u540c\uff0c\u5176\u4f59\u8bbe\u7f6e\u5e94\u5b8c\u5168\u4e00\u81f4\u3002 (2) dequantizations : \u7528\u6765\u6807\u8bc6\u6240\u6709\u8f93\u51faTensor\u7684\u6570\u636e\u662f\u5426\u9700\u8981\u505a\u53cd\u91cf\u5316\uff0cTRUE\u6216\u8005FALSE\uff0c\u9ed8\u8ba4\u503c\u4e3aTRUE\u3002 \u4f7f\u7528\u987b\u77e5 \u6570\u91cf\u7b49\u4e8eoutputs\u3002\u5982\u679c\u6709\u591a\u4e2a\u8f93\u51faTensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7( , )\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002 \u8be5\u9009\u9879\u4ec5\u5728\u677f\u4e0a\u8fd0\u884c\u65f6\u751f\u6548\u3002\u8be5\u9009\u9879\u8bbe\u4e3aTRUE\u65f6\uff0c\u4f1a\u5728\u8f6c\u6362\u5230Fixed\u6a21\u578b\u540e\u5728\u5bf9\u5e94\u7684\u8f93\u51fa\u589e\u52a0Fix2float\u7b97\u5b50\uff0c\u5b8c\u6210\u8f93\u51fa\u6570\u636e\u4e58scale\u8f6c\u6362\u6210float\u7684\u64cd\u4f5c\u3002 \u5982\u679c\u914d\u7f6e dequantizations \u4e3aTRUE\uff0c\u751f\u6210\u7684\u6a21\u578b\u5bf9\u5e94\u8f93\u51fa\u4f1a\u589e\u52a0Fix2Float\u7b97\u5b50\uff0c\u8f93\u51fa\u6570\u636e\u7c7b\u578b\u4e3afloat32\uff0c\u6570\u636e\u4e0e\u8f93\u51fashape\u4e00\u81f4\uff0c\u6ca1\u6709\u5bf9\u9f50\u8981\u6c42\u3002 \u5982\u679c\u914d\u7f6e dequantizations \u4e3aFALSE\uff0c\u5728\u677f\u7aef\u8fd0\u884c\u65f6\u8f93\u51fa\u6570\u636e\u7c7b\u578b\u4e3aint16\uff0c\u6570\u636e\u4e0e\u8f93\u51fashape\u4e00\u81f4\uff0c\u6ca1\u6709\u5bf9\u9f50\u8981\u6c42\u3002 (3) output_layouts : \u7528\u6765\u6807\u8bc6\u8f93\u51faTensor\u7684\u6570\u636e\u6392\u5e03\u683c\u5f0f\u3002 \u4f7f\u7528\u987b\u77e5 \u53ef\u9009\u6570\u636e\u6392\u5e03\u683c\u5f0f\u5305\u62ec\uff1a NCHW: NCHW \u8868\u793a\u5bf9\u5e94\u987a\u5e8f\u7684outputTensor\u82e5\u662f\u56db\u7ef4\u5219\u6309\u7167NCHW\u7684\u6570\u636e\u683c\u5f0f\u6392\u5e03\uff08\u4e0ecaffe/onnx\u539f\u6a21\u578b\u76f8\u540c\uff09 NHWC: NHWC \u8868\u793a\u5bf9\u5e94\u987a\u5e8f\u7684outputTensor\u82e5\u662f\u56db\u7ef4\u5219\u6309\u7167NHWC\u7684\u683c\u5f0f\u6392\u5e03\uff08\u9ed8\u8ba4\u683c\u5f0f\uff09\u3002 \u5982\u679c\u4e0d\u8bbe\u7f6e\u8be5\u9879\uff0c\u5c06\u9ed8\u8ba4\u6570\u636e\u6392\u5e03\u683c\u5f0f\u4e3a NHWC \u3002 \u5982\u679c\u6709\u591a\u4e2a\u8f93\u51faTensor\uff0c\u4ee5\u82f1\u6587\u9017\u53f7\uff08,\uff09\u5206\u9694\u4e14\u4e2d\u95f4\u4e0d\u53ef\u6709\u7a7a\u683c\u3002\u6570\u91cf\u7b49\u4e8eoutputs\u4e2a\u6570\uff0c\u6a21\u578b\u8f93\u51faTensor\u987a\u5e8f\u4e0e output_layouts \u7684\u914d\u7f6e\u987a\u5e8f\u4e00\u81f4\u3002","title":"2.3.2 OUTPUT_CONFIG"},{"location":"module/User_Guide/IPU260/Convert.html#233-conv_config","text":"(1) input_format : \u6307\u5b9a\u7f51\u7edc\u4e2d\u6240\u6709\u5377\u79ef\u7684\u91cf\u5316\u65b9\u5f0f\u3002 \u4f7f\u7528\u987b\u77e5 \u9ed8\u8ba4\u4f7f\u7528 CalibrateTool \u63a8\u8350\u7684\u91cf\u5316\u65b9\u5f0f\uff0c\u82e5\u4e0d\u60f3\u4f7f\u7528\u63a8\u8350\u65b9\u5f0f\uff0c\u53ef\u9009\u65b9\u6848ALL_UINT8\uff0cALL_INT16\uff0c CONV2D_INT16\uff0cDEPTHWISE_INT16\u3002\u914d\u7f6e\u540e\u5c06\u4f18\u5148\u4f7f\u7528\u5df2\u9009\u65b9\u6848\u4e0d\u518d\u8d70\u63a8\u8350\u91cf\u5316\u3002 ALL_UINT8 : \u6307\u5b9a\u6240\u6709\u5377\u79ef\u6309\u7167UINT8\u91cf\u5316\u3002 ALL_INT16 : \u6307\u5b9a\u6240\u6709\u5377\u79ef\u6309\u7167INT16\u91cf\u5316\u3002 CONV2D_INT16 : \u53ea\u6307\u5b9a\u6240\u6709\u666e\u901a\u5377\u79ef\u6309\u7167INT16\u91cf\u5316\u3002 DEPTHWISE_INT16 : \u53ea\u6307\u5b9a\u6240\u6709Depthwise \u5377\u79ef\u6309\u7167INT16\u91cf\u5316\u3002 \u5728 ALL_UINT8 \u6a21\u5f0f \u4e0b\uff0c\u5377\u79ef\u8fd0\u884c\u6240\u5360\u5e26\u5bbd\u5c0f\uff0c\u8fd0\u884c\u901f\u5ea6\u5feb\uff1b\u5728 ALL_INT16 \u6a21\u5f0f \u4e0b\uff0c\u53ef\u4ee5\u6781\u5927\u7684\u63d0\u9ad8\u5377\u79ef\u7684\u7cbe\u5ea6\uff0c\u4f46\u662f\u8fd0\u884c\u7684\u901f\u5ea6\u4f1a\u6709\u5f71\u54cd\u3002 (2) tensor_arrays : \u6307\u5b9a\u7f51\u7edc\u4e2d\u67d0\u4e9b\u5c42\u7684\u5377\u79ef\u91cf\u5316\u65b9\u5f0f\u3002 \u4f7f\u7528\u987b\u77e5 \u6574\u4e2a\u7f51\u7edc\u5377\u79ef\u90fd\u91c7\u7528\u9ed8\u8ba4\u7684UINT8 \uff0c\u4f46\u662f\u67d0\u4e9b\u5377\u79ef\u5c42\u9700\u8981\u66f4\u9ad8\u7684\u7cbe\u5ea6\uff0c\u8fd9\u65f6\u76f4\u63a5\u586b\u5199\u90a3\u4e9b\u5377\u79ef\u5c42\u7684\u7b2c\u4e00\u4e2a\u8f93\u5165\u7684 input id name\u5373\u53ef\u3002\u591a\u5c42\u65f6\uff0cname\u4ee5\u9017\u53f7( , )\u5206\u9694\u3002 \u5377\u79ef\u7b2c\u4e00\u4e2a\u8f93\u5165\u7684input id\u540d\u5b57\u53ef\u901a\u8fc7netron\u5de5\u5177\u67e5\u770b\u3002\u6307\u5b9a\u91cf\u5316\u65f6\uff0c\u7f51\u7edc\u4e2d\u7684\u7b2c\u4e00\u5c42\u5377\u79ef\u4e0d\u751f\u6548\u3002","title":"2.3.3 CONV_CONFIG"},{"location":"module/User_Guide/IPU260/Convert.html#234","text":"training_input_formats input_formats \u677f\u4e0a\u8fd0\u884c\u65f6\u6570\u636e\u5bf9\u9f50\u65b9\u5f0f RGB/BGR RGB/BGR \u4e0d\u7528\u5bf9\u9f50 RGB/BGR RGBA/BGRA W = ALIGN_UP(W * 4, input_width_alignment ) / 4 input_width_alignment \u9ed8\u8ba4\u4e3a1 RGB/BGR/GRAY YUV_NV12 H = ALIGN_UP(H, input_height_alignment ) input_height_alignment \u9ed8\u8ba4\u4e3a2 W = ALIGN_UP(W, input_width_alignment ) input_width_alignment \u9ed8\u8ba4\u4e3a2 GRAY GRAY H = ALIGN_UP(H, input_height_alignment ) input_height_alignment \u9ed8\u8ba4\u4e3a1 W = ALIGN_UP(W, input_width_alignment ) input_width_alignment \u9ed8\u8ba4\u4e3a1 RAWDATA_F32_NHWC RAWDATA_F32_NHWC \u4e0d\u7528\u5bf9\u9f50 RAWDATA_S16_NHWC RAWDATA_S16_NHWC \u4e0d\u7528\u5bf9\u9f50","title":"2.3.4 \u8f93\u5165\u8f93\u51fa\u914d\u7f6e\u603b\u7ed3"},{"location":"module/User_Guide/IPU260/DLA_SDK_Auxiliary_Tool.html","text":"1. DLA SDK\u8f85\u52a9\u5de5\u5177\u4f7f\u7528\u8bf4\u660e \u00b6 \u5de5\u5177 \u5de5\u5177\u8def\u5f84 \u5de5\u5177\u4f5c\u7528 \u6ce8\u610f\u4e8b\u9879 Offline\u6a21\u578b\u4fe1\u606f\u67e5\u770b\u5de5\u5177 SGS_IPU_SDK/DumpDebug/show_img_info.py \u67e5\u770bOffline\u6a21\u578b\u4fe1\u606f IPU Log\u6027\u80fd\u5206\u6790\u5de5\u5177 SGS_IPU_SDK/Scripts/example/performance_timeline.py \u5206\u6790Offline\u6a21\u578b\u6027\u80fd \u9700\u914d\u5408 SGS_IPU_SDK/cfg/IpuConfigS.ini \u6587\u4ef6\u540e\u91cd\u65b0\u8f6c\u6362\u539f\u59cb\u6a21\u578b\u5230\u79bb\u7ebf\u6a21\u578b IPU\u7f51\u7edc\u6a21\u578b\u6570\u636e\u5bf9\u6bd4\u5206\u6790\u5de5\u5177 SGS_IPU_SDK/DumpDebug/auto_dump_debug.sh \u5bf9\u6bd4\u5206\u6790\u539f\u6a21\u578b/float/fix\u5404\u9636\u6bb5\u6a21\u578b\u6570\u636e \u9700\u914d\u5408 DumpDebugTool \u5de5\u5177\u4f7f\u7528 1.1 Offline\u6a21\u578b\u4fe1\u606f\u67e5\u770b\u5de5\u5177 \u00b6 Offline\u6a21\u578b\u4fe1\u606f\u67e5\u770b\u5de5\u5177\uff1aSGS_IPU_SDK/DumpDebug/show_img_info.py\u3002 (1) \u5de5\u5177\u4f7f\u7528\u547d\u4ee4 python3 show_img_info . py \\ - m deploy_fixed . sim_sgsimg . img \\ -- version (2) \u5fc5\u9009\u53c2\u6570 -m , --model : \u79bb\u7ebf\u6a21\u578b\u7684\u8def\u5f84 \u4f7f\u7528\u8be5\u53c2\u6570\u5c06\u663e\u793a\u5982\u4e0b\u4fe1\u606f\uff1a \u8bf4\u660e Offline IMG Version : \u6240\u7528\u6570\u636e\u96c6\u751f\u6210\u8be5\u79bb\u7ebf\u6a21\u578b\u65f6\u7528\u7684SDK\u7248\u672c\u4fe1\u606f\u3002 Offline Model Size : \u8be5\u79bb\u7ebf\u6a21\u578b\u7684\u5927\u5c0f\u3002 Offline Model Max Batch Numer : \u8be5\u79bb\u7ebf\u6a21\u578b\u7684\u6700\u5927batch\u6570\u3002( compiler \u5de5\u5177 -b,--batch \u53c2\u6570) Offline Model Suggested Batch : n_buf\u6a21\u578b\u5185\u53ef\u53c2\u8003\u7684batch\u6570\uff0c\u5b9e\u9645\u4f7f\u7528\u65f6\u53ef\u8bbe\u7f6e\u4e3a\u5c0f\u4e8e\u7b49\u4e8eMax Batch Numer\u7684\u4efb\u610fbatch\u6570\u3002(compiler compiler \u5de5\u5177 --batch_mode \u53c2\u6570) Offline Model Supported Batch \uff1aone_buf\u6a21\u578b\u5185\u53ef\u4f7f\u7528\u7684batch\u6570\uff0c\u53ea\u80fd\u5728\u8fd9\u4e9bbatch\u6570\u4e2d\u8fdb\u884c\u9009\u62e9\u3002( compiler \u5de5\u5177 --batch_mode \u53c2\u6570) Offline Model Variable Buffer Size : \u8be5\u79bb\u7ebf\u6a21\u578b\u7684Variable Buffer\u5927\u5c0f\u3002 Offline_Model : work_mode : \u8be5\u6a21\u578b\u5355\u6838/\u53cc\u6838\u6a21\u5f0f\u4fe1\u606f( calibrator \u5de5\u5177 --work_mode \u53c2\u6570) Input \uff1a name: \u6a21\u578b\u8f93\u5165Tensor\u540d\u79f0\u3002 index: \u6a21\u578b\u8f93\u5165Tensor\u7d22\u5f15\u3002 dtype: \u6a21\u578b\u8f93\u5165Tensor\u7684\u6570\u636e\u7c7b\u578b\uff0cuint8/allint16 layouts: \u6a21\u578b\u8f93\u5165Tensor\u7684\u6570\u636e\u6392\u5e03\uff0cNCHW/NHWC shape: \u6a21\u578b\u8f93\u5165Tensor\u7684shape\u4fe1\u606f\u3002 training_input_formats:\u7f51\u7edc\u8bad\u7ec3\u65f6\u7684\u56fe\u7247\u683c\u5f0f\u4fe1\u606f( input_config training_input_formats \u53c2\u6570) input_formats:\u7f51\u7edc\u6a21\u578b\u5728SigmaStar\u82af\u7247\u4e0a\u8fd0\u884c\u7684\u56fe\u7247\u8f93\u5165\u683c\u5f0f( input_config input_formats \u53c2\u6570) input_width_alignment:\u6570\u636e\u4f5c\u4e3a\u7f51\u7edc\u8f93\u5165\u65f6Width\u65b9\u5411\u5bf9\u9f50\u7684\u6570\u91cf( input_config input_width_alignment \u53c2\u6570) input_height_alignment:\u6570\u636e\u4f5c\u4e3a\u7f51\u7edc\u8f93\u5165\u65f6Height\u65b9\u5411\u5bf9\u9f50\u7684\u6570\u91cf( input_config input_height_alignment \u53c2\u6570) batch:\u8be5\u79bb\u7ebf\u6a21\u578b\u7684batch\u6570 batch_mode:\u6a21\u578b\u7684batch\u6a21\u5f0f\uff0cn_buf/one_buf Output \uff1a name:\u6a21\u578b\u8f93\u51faTensor\u540d\u79f0\u3002 index:\u6a21\u578b\u8f93\u51faTensor\u7d22\u5f15 dtype:\u6a21\u578b\u8f93\u51faTensor\u7684\u6570\u636e\u7c7b\u578b\uff0cuint8/allint16 shape:\u6a21\u578b\u8f93\u51faTensor\u7684shape\u4fe1\u606f\u3002 batch:\u8be5\u79bb\u7ebf\u6a21\u578b\u7684batch\u6570 batch_mode:\u6a21\u578b\u7684batch\u6a21\u5f0f\uff0cn_buf/one_buf (3) \u53ef\u9009\u53c2\u6570 --version : \u751f\u6210\u79bb\u7ebf\u6a21\u578b\u6240\u7528\u7684\u7684SDK\u7248\u672c\u4fe1\u606f\uff0c\u5373\u663e\u793a\u7ed3\u679c\u4e2d SDK_Version_Info: \u540e\u6253\u5370\u7684\u4fe1\u606f\u3002 1.2 IPU Log\u6027\u80fd\u5206\u6790\u5de5\u5177 \u00b6 IPU Log\u6027\u80fd\u5206\u6790\u5de5\u5177\u4f4d\u7f6e\uff1a SGS_IPU_SDK/Scripts/example/performance_timeline.py \uff0c\u5c06\u6a21\u578b\u8fd0\u884c\u65f6\u751f\u6210\u7684IPU Log \u4f20\u5165\u89e3\u6790\u811a\u672c\uff0c \u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u751f\u6210\u4e00\u4e2ajson\u683c\u5f0f\u6587\u4ef6\uff0c\u6253\u5f00google\u6d4f\u89c8\u5668\uff0c\u6572\u5165 chrome://tracing \uff0c\u5c06\u751f\u6210\u7684json\u6587\u4ef6\u62d6\u5165\u6d4f\u89c8\u5668\u5373\u53ef\u3002 1.2.1 \u5982\u4f55\u751f\u6210 IPU Log \u00b6 \u6253\u5f00 SGS_IPU_SDK/cfg/IpuConfigS.ini \u6587\u4ef6\uff0c\u8bbe enable_performance_analyse=1 \uff0c\u91cd\u65b0\u8f6c\u6362\u539f\u59cb\u6a21\u578b\u5230\u79bb\u7ebf\u6a21\u578b\u3002 ; ipu_configS . ini [ CORE_CONFIG ] ; 0 : single core mode ; 1 : multi core mode ; other : no support work_mode = 1 [ DEBUG_CONFIG ] enable_performance_analyse = 1 \u8fd0\u884coffline\u6a21\u578b\uff0c\u751f\u6210IPU Log\u3002 prog_dla_dla_show_img_info \\ - m deploy_fixed . sim_sgsimg . img \\ -- ipu_log logdir \u53c2\u6570\u89e3\u91ca\u5982\u4e0b\uff1a -m , --model : \u79bb\u7ebf\u6a21\u578b\u7684\u8def\u5f84 --ipu_log : \u751f\u6210ipu log\u7684\u4fdd\u5b58\u76ee\u5f55 1.2.2 \u5982\u4f55\u4f7f\u7528IPU log\u751f\u6210json \u6587\u4ef6 \u00b6 python3 ~/ SGS_IPU_SDK / Scripts / example / performance_timeline . py \\ - c0 log_ctrl0 . bin \\ - c1 log_ctrl1 . bin \\ - cc log_corectrl0 . bin \\ - f 900 \\ - v 36 X \u53c2\u6570\u89e3\u91ca\u5982\u4e0b\uff1a -c0 , --core0 : core0 ipu log \u6587\u4ef6\u7684\u8def\u5f84 \uff08\u5355\u6838\u53ea\u9700 core0 ipu log\uff09 -c1 , --core1 : core1 ipu log \u6587\u4ef6\u8def\u5f84 -cc , --corectrl : corectrl ipu log \u6587\u4ef6\u8def\u5f84 \uff08\u53ef\u9009\uff09 -f , --frequency : ipu clk freq (\u9ed8\u8ba4\u4e3a800) -v , --ipu_version : ipu chip version (\u5982\uff1a36X) \u8fd0\u884c\u7ed3\u675f\u540e\uff0c\u4f1a\u5728\u8fd0\u884c\u76ee\u5f55\u4e0b\u751f\u6210log_ctrl0.json\u6587\u4ef6\uff0c \u5c06\u751f\u6210\u7684json\u6587\u4ef6\u62d6\u5165\u6d4f\u89c8\u5668 chrome://tracing \u5373\u53ef\u663e\u793a\u6bcf\u5c42\u7684\u6027\u80fd\u8017\u65f6\u5360\u6bd4 \uff0c\u5176\u4e2d\u5404\u6307\u6807\u672f\u8bed\u89e3\u91ca\u5982\u4e0b\uff1a \u6307\u6807\u672f\u8bed start\uff1a\u8be5\u5c42\u5f00\u59cb\u65f6\u95f4 wall duration\uff1a\u8be5\u5c42\u8017\u65f6 total_cycle\uff1a\u8be5\u5c42cycle\u6570\uff0c\u4e0e\u201cwall duration\u201d\u53ef\u4ee5\u6362\u7b97\uff0cwall duration = total_cycle/freq conv_cycle_percent:\u8be5\u5c42conv\u8fd0\u884c\u65f6\u95f4\u5360\u8be5\u5c42\u8fd0\u884c\u65f6\u95f4\u767e\u5206\u6bd4 vector_cycle_percent:\u8be5\u5c42vector\u8fd0\u884c\u65f6\u95f4\u5360\u8be5\u5c42\u8fd0\u884c\u65f6\u95f4\u767e\u5206\u6bd4 dma_load_cycle_percent:\u8be5\u5c42dma load\u8fd0\u884c\u65f6\u95f4\u5360\u8be5\u5c42\u8fd0\u884c\u65f6\u95f4\u767e\u5206\u6bd4 dma_store_cycle_percent:\u8be5\u5c42dma store\u8fd0\u884c\u65f6\u95f4\u5360\u8be5\u5c42\u8fd0\u884c\u65f6\u95f4\u767e\u5206\u6bd4 conv/vertor/dma_load/dma_store\u6307\u4ee4\u53ef\u4ee5\u5e76\u884c\u6267\u884c\uff0c\u6240\u4ee5\u767e\u5206\u6bd4\u76f8\u52a0\u4e0d\u662f100% 1.3 IPU\u7f51\u7edc\u6a21\u578b\u6570\u636e\u5bf9\u6bd4\u5206\u6790\u5de5\u5177 \u00b6 \u8be6\u60c5\u8bf7\u53c2\u8003\u624b\u518c DumpDebug Tool\u7ae0\u8282","title":"DLA SDK Auxiliary Tool"},{"location":"module/User_Guide/IPU260/DLA_SDK_Auxiliary_Tool.html#1-dla-sdk","text":"\u5de5\u5177 \u5de5\u5177\u8def\u5f84 \u5de5\u5177\u4f5c\u7528 \u6ce8\u610f\u4e8b\u9879 Offline\u6a21\u578b\u4fe1\u606f\u67e5\u770b\u5de5\u5177 SGS_IPU_SDK/DumpDebug/show_img_info.py \u67e5\u770bOffline\u6a21\u578b\u4fe1\u606f IPU Log\u6027\u80fd\u5206\u6790\u5de5\u5177 SGS_IPU_SDK/Scripts/example/performance_timeline.py \u5206\u6790Offline\u6a21\u578b\u6027\u80fd \u9700\u914d\u5408 SGS_IPU_SDK/cfg/IpuConfigS.ini \u6587\u4ef6\u540e\u91cd\u65b0\u8f6c\u6362\u539f\u59cb\u6a21\u578b\u5230\u79bb\u7ebf\u6a21\u578b IPU\u7f51\u7edc\u6a21\u578b\u6570\u636e\u5bf9\u6bd4\u5206\u6790\u5de5\u5177 SGS_IPU_SDK/DumpDebug/auto_dump_debug.sh \u5bf9\u6bd4\u5206\u6790\u539f\u6a21\u578b/float/fix\u5404\u9636\u6bb5\u6a21\u578b\u6570\u636e \u9700\u914d\u5408 DumpDebugTool \u5de5\u5177\u4f7f\u7528","title":"1. DLA SDK\u8f85\u52a9\u5de5\u5177\u4f7f\u7528\u8bf4\u660e"},{"location":"module/User_Guide/IPU260/DLA_SDK_Auxiliary_Tool.html#11-offline","text":"Offline\u6a21\u578b\u4fe1\u606f\u67e5\u770b\u5de5\u5177\uff1aSGS_IPU_SDK/DumpDebug/show_img_info.py\u3002 (1) \u5de5\u5177\u4f7f\u7528\u547d\u4ee4 python3 show_img_info . py \\ - m deploy_fixed . sim_sgsimg . img \\ -- version (2) \u5fc5\u9009\u53c2\u6570 -m , --model : \u79bb\u7ebf\u6a21\u578b\u7684\u8def\u5f84 \u4f7f\u7528\u8be5\u53c2\u6570\u5c06\u663e\u793a\u5982\u4e0b\u4fe1\u606f\uff1a \u8bf4\u660e Offline IMG Version : \u6240\u7528\u6570\u636e\u96c6\u751f\u6210\u8be5\u79bb\u7ebf\u6a21\u578b\u65f6\u7528\u7684SDK\u7248\u672c\u4fe1\u606f\u3002 Offline Model Size : \u8be5\u79bb\u7ebf\u6a21\u578b\u7684\u5927\u5c0f\u3002 Offline Model Max Batch Numer : \u8be5\u79bb\u7ebf\u6a21\u578b\u7684\u6700\u5927batch\u6570\u3002( compiler \u5de5\u5177 -b,--batch \u53c2\u6570) Offline Model Suggested Batch : n_buf\u6a21\u578b\u5185\u53ef\u53c2\u8003\u7684batch\u6570\uff0c\u5b9e\u9645\u4f7f\u7528\u65f6\u53ef\u8bbe\u7f6e\u4e3a\u5c0f\u4e8e\u7b49\u4e8eMax Batch Numer\u7684\u4efb\u610fbatch\u6570\u3002(compiler compiler \u5de5\u5177 --batch_mode \u53c2\u6570) Offline Model Supported Batch \uff1aone_buf\u6a21\u578b\u5185\u53ef\u4f7f\u7528\u7684batch\u6570\uff0c\u53ea\u80fd\u5728\u8fd9\u4e9bbatch\u6570\u4e2d\u8fdb\u884c\u9009\u62e9\u3002( compiler \u5de5\u5177 --batch_mode \u53c2\u6570) Offline Model Variable Buffer Size : \u8be5\u79bb\u7ebf\u6a21\u578b\u7684Variable Buffer\u5927\u5c0f\u3002 Offline_Model : work_mode : \u8be5\u6a21\u578b\u5355\u6838/\u53cc\u6838\u6a21\u5f0f\u4fe1\u606f( calibrator \u5de5\u5177 --work_mode \u53c2\u6570) Input \uff1a name: \u6a21\u578b\u8f93\u5165Tensor\u540d\u79f0\u3002 index: \u6a21\u578b\u8f93\u5165Tensor\u7d22\u5f15\u3002 dtype: \u6a21\u578b\u8f93\u5165Tensor\u7684\u6570\u636e\u7c7b\u578b\uff0cuint8/allint16 layouts: \u6a21\u578b\u8f93\u5165Tensor\u7684\u6570\u636e\u6392\u5e03\uff0cNCHW/NHWC shape: \u6a21\u578b\u8f93\u5165Tensor\u7684shape\u4fe1\u606f\u3002 training_input_formats:\u7f51\u7edc\u8bad\u7ec3\u65f6\u7684\u56fe\u7247\u683c\u5f0f\u4fe1\u606f( input_config training_input_formats \u53c2\u6570) input_formats:\u7f51\u7edc\u6a21\u578b\u5728SigmaStar\u82af\u7247\u4e0a\u8fd0\u884c\u7684\u56fe\u7247\u8f93\u5165\u683c\u5f0f( input_config input_formats \u53c2\u6570) input_width_alignment:\u6570\u636e\u4f5c\u4e3a\u7f51\u7edc\u8f93\u5165\u65f6Width\u65b9\u5411\u5bf9\u9f50\u7684\u6570\u91cf( input_config input_width_alignment \u53c2\u6570) input_height_alignment:\u6570\u636e\u4f5c\u4e3a\u7f51\u7edc\u8f93\u5165\u65f6Height\u65b9\u5411\u5bf9\u9f50\u7684\u6570\u91cf( input_config input_height_alignment \u53c2\u6570) batch:\u8be5\u79bb\u7ebf\u6a21\u578b\u7684batch\u6570 batch_mode:\u6a21\u578b\u7684batch\u6a21\u5f0f\uff0cn_buf/one_buf Output \uff1a name:\u6a21\u578b\u8f93\u51faTensor\u540d\u79f0\u3002 index:\u6a21\u578b\u8f93\u51faTensor\u7d22\u5f15 dtype:\u6a21\u578b\u8f93\u51faTensor\u7684\u6570\u636e\u7c7b\u578b\uff0cuint8/allint16 shape:\u6a21\u578b\u8f93\u51faTensor\u7684shape\u4fe1\u606f\u3002 batch:\u8be5\u79bb\u7ebf\u6a21\u578b\u7684batch\u6570 batch_mode:\u6a21\u578b\u7684batch\u6a21\u5f0f\uff0cn_buf/one_buf (3) \u53ef\u9009\u53c2\u6570 --version : \u751f\u6210\u79bb\u7ebf\u6a21\u578b\u6240\u7528\u7684\u7684SDK\u7248\u672c\u4fe1\u606f\uff0c\u5373\u663e\u793a\u7ed3\u679c\u4e2d SDK_Version_Info: \u540e\u6253\u5370\u7684\u4fe1\u606f\u3002","title":"1.1 Offline\u6a21\u578b\u4fe1\u606f\u67e5\u770b\u5de5\u5177"},{"location":"module/User_Guide/IPU260/DLA_SDK_Auxiliary_Tool.html#12-ipu-log","text":"IPU Log\u6027\u80fd\u5206\u6790\u5de5\u5177\u4f4d\u7f6e\uff1a SGS_IPU_SDK/Scripts/example/performance_timeline.py \uff0c\u5c06\u6a21\u578b\u8fd0\u884c\u65f6\u751f\u6210\u7684IPU Log \u4f20\u5165\u89e3\u6790\u811a\u672c\uff0c \u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u751f\u6210\u4e00\u4e2ajson\u683c\u5f0f\u6587\u4ef6\uff0c\u6253\u5f00google\u6d4f\u89c8\u5668\uff0c\u6572\u5165 chrome://tracing \uff0c\u5c06\u751f\u6210\u7684json\u6587\u4ef6\u62d6\u5165\u6d4f\u89c8\u5668\u5373\u53ef\u3002","title":"1.2 IPU Log\u6027\u80fd\u5206\u6790\u5de5\u5177"},{"location":"module/User_Guide/IPU260/DLA_SDK_Auxiliary_Tool.html#121-ipu-log","text":"\u6253\u5f00 SGS_IPU_SDK/cfg/IpuConfigS.ini \u6587\u4ef6\uff0c\u8bbe enable_performance_analyse=1 \uff0c\u91cd\u65b0\u8f6c\u6362\u539f\u59cb\u6a21\u578b\u5230\u79bb\u7ebf\u6a21\u578b\u3002 ; ipu_configS . ini [ CORE_CONFIG ] ; 0 : single core mode ; 1 : multi core mode ; other : no support work_mode = 1 [ DEBUG_CONFIG ] enable_performance_analyse = 1 \u8fd0\u884coffline\u6a21\u578b\uff0c\u751f\u6210IPU Log\u3002 prog_dla_dla_show_img_info \\ - m deploy_fixed . sim_sgsimg . img \\ -- ipu_log logdir \u53c2\u6570\u89e3\u91ca\u5982\u4e0b\uff1a -m , --model : \u79bb\u7ebf\u6a21\u578b\u7684\u8def\u5f84 --ipu_log : \u751f\u6210ipu log\u7684\u4fdd\u5b58\u76ee\u5f55","title":"1.2.1 \u5982\u4f55\u751f\u6210 IPU Log"},{"location":"module/User_Guide/IPU260/DLA_SDK_Auxiliary_Tool.html#122-ipu-logjson","text":"python3 ~/ SGS_IPU_SDK / Scripts / example / performance_timeline . py \\ - c0 log_ctrl0 . bin \\ - c1 log_ctrl1 . bin \\ - cc log_corectrl0 . bin \\ - f 900 \\ - v 36 X \u53c2\u6570\u89e3\u91ca\u5982\u4e0b\uff1a -c0 , --core0 : core0 ipu log \u6587\u4ef6\u7684\u8def\u5f84 \uff08\u5355\u6838\u53ea\u9700 core0 ipu log\uff09 -c1 , --core1 : core1 ipu log \u6587\u4ef6\u8def\u5f84 -cc , --corectrl : corectrl ipu log \u6587\u4ef6\u8def\u5f84 \uff08\u53ef\u9009\uff09 -f , --frequency : ipu clk freq (\u9ed8\u8ba4\u4e3a800) -v , --ipu_version : ipu chip version (\u5982\uff1a36X) \u8fd0\u884c\u7ed3\u675f\u540e\uff0c\u4f1a\u5728\u8fd0\u884c\u76ee\u5f55\u4e0b\u751f\u6210log_ctrl0.json\u6587\u4ef6\uff0c \u5c06\u751f\u6210\u7684json\u6587\u4ef6\u62d6\u5165\u6d4f\u89c8\u5668 chrome://tracing \u5373\u53ef\u663e\u793a\u6bcf\u5c42\u7684\u6027\u80fd\u8017\u65f6\u5360\u6bd4 \uff0c\u5176\u4e2d\u5404\u6307\u6807\u672f\u8bed\u89e3\u91ca\u5982\u4e0b\uff1a \u6307\u6807\u672f\u8bed start\uff1a\u8be5\u5c42\u5f00\u59cb\u65f6\u95f4 wall duration\uff1a\u8be5\u5c42\u8017\u65f6 total_cycle\uff1a\u8be5\u5c42cycle\u6570\uff0c\u4e0e\u201cwall duration\u201d\u53ef\u4ee5\u6362\u7b97\uff0cwall duration = total_cycle/freq conv_cycle_percent:\u8be5\u5c42conv\u8fd0\u884c\u65f6\u95f4\u5360\u8be5\u5c42\u8fd0\u884c\u65f6\u95f4\u767e\u5206\u6bd4 vector_cycle_percent:\u8be5\u5c42vector\u8fd0\u884c\u65f6\u95f4\u5360\u8be5\u5c42\u8fd0\u884c\u65f6\u95f4\u767e\u5206\u6bd4 dma_load_cycle_percent:\u8be5\u5c42dma load\u8fd0\u884c\u65f6\u95f4\u5360\u8be5\u5c42\u8fd0\u884c\u65f6\u95f4\u767e\u5206\u6bd4 dma_store_cycle_percent:\u8be5\u5c42dma store\u8fd0\u884c\u65f6\u95f4\u5360\u8be5\u5c42\u8fd0\u884c\u65f6\u95f4\u767e\u5206\u6bd4 conv/vertor/dma_load/dma_store\u6307\u4ee4\u53ef\u4ee5\u5e76\u884c\u6267\u884c\uff0c\u6240\u4ee5\u767e\u5206\u6bd4\u76f8\u52a0\u4e0d\u662f100%","title":"1.2.2 \u5982\u4f55\u4f7f\u7528IPU log\u751f\u6210json \u6587\u4ef6"},{"location":"module/User_Guide/IPU260/DLA_SDK_Auxiliary_Tool.html#13-ipu","text":"\u8be6\u60c5\u8bf7\u53c2\u8003\u624b\u518c DumpDebug Tool\u7ae0\u8282","title":"1.3 IPU\u7f51\u7edc\u6a21\u578b\u6570\u636e\u5bf9\u6bd4\u5206\u6790\u5de5\u5177"},{"location":"module/User_Guide/IPU260/DLA_SDK_Support.html","text":"1. Caffe\u652f\u6301\u7b97\u5b50 \u00b6 \u7b97\u5b50 \u5907\u6ce8 ArgMax only support top 1 Axpy BatchNorm Concat \u6700\u59271024\u4e2atensor concat Convolution \u9650\u5236\u6761\u4ef6\uff1aAll tensor size < 2^31 \u82e5kernel size \u4e3a do*h*w*di \u5219h * w < 64 group\u4e3a1\u65f6\uff1a\u8f6c\u6362\u6210Depthwise Convolution; group\u4e3aC\u65f6\uff1a\u8f6c\u6362\u4e3aConvolution; group\u4e3a (1, C) \u65f6\uff1a\u62c6\u89e3\u6210GroupConv round(di/16)*round(do/16) < 512 * 1024 ConvolutionDepthwise \u539f\u751f\u652f\u6301Kernel_size\u4e3a3*3\uff0c6*6\uff0c9*9\uff0c\u5176\u4f59\u60c5\u51b5\u8f6c\u6362\u6210Convolution\u5904\u7406\u9650\u5236\u6761\u4ef6\uff1aPad\u8303\u56f4\uff1a[0, 1] CReLU \u8f93\u5165<=4\u7ef4 ContinuationIndicator Crop Deconvolution All tensor size < 2^31 \u82e5kernel size \u4e3a do*h*w*di\uff0ch * w < 64 round(di/16)*round(do/16) < 512 * 1024 Dropout Eltwise \u5176\u4e2dPROD\u548cSUM\uff0c\u5bf9\u4e8e\u8f93\u5165\u7684\u4e24\u4e2atensor,\u5f53\u4e3a4\u7ef4\u5411\u91cf\u65f6\uff0c\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6 1. NCHW \uff0cconst 2. NCHW \uff0cC\u7ef4\u5411\u91cf 3. NCHW \uff0cNCHW \u5f53\u4e3a5\u7ef4\u5411\u91cf\u65f6\uff0c\u6ee1\u8db3 1. NCDHW \uff0cconst 2. NCDHW \uff0cNCDHW Flatten InnerProduct \u82e5weight size do*di round(di/16)*round(do/16) < 512 * 1024 Permute Pooling \u82e5kernel size\u4e3ah*w 1.AVGPooling (1).FilterW <= 255\uff0cFilterH <= 255\uff0c (2).AvePooling_U8\uff1aFilterMax(FilterW*FilterH) = 12288\uff0c (3).AvePooling_S16\uff1aFilterMax(FilterW*FilterH) = 12288 2.MaxPooling: \u9700FilterW <= 255\uff0c\u4e14FilterMax(FilterW*FilterH) = 6029312 PriorBox Power \u4ec5\u652f\u6301\u6307\u6570\u4e3a\u6b63\u6574\u6570 Reshape Reverse ROIPooling ROIPooling\u7684rois\u8f93\u5165\u7ef4\u5ea6\u4e3a\uff08N\u00d75\uff09\uff0c\u5f53\u540e\u6bb5\u7f51\u7edc\u5168\u90e8\u662fInnerProduct\u65f6\uff0cN\u624d\u53ef\u4ee5\u8bbe\u7f6e\u5927\u4e8e1\uff0c\u5982\u679c\u540e\u6bb5\u7f51\u7edc\u4e2d\u6709\u5377\u79ef\u65f6\uff0cN\u4ec5\u53ef\u4ee5\u8bbe\u7f6e\u4e3a1\uff0c\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u9700\u8981\u5faa\u73af\u6267\u884cN\u6b21\u3002\u4f7f\u7528\u65b9\u6cd5\u548c\u9650\u5236\u8be6\u89c1\u4e0b\u65b9Please Note\u3002 ReLU \u8f93\u5165<=4\u7ef4 PRuLU \u8f93\u5165<=4\u7ef4 Sigmoid Slice Scale \u5bf9\u4e8e\u8f93\u5165\u7684\u4e24\u4e2atensor,shape\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6 1. 4\u7ef4\u5411\u91cf\uff0cNCHW 2. NCHW \uff0cconst 3. NCHW \uff0cC\u7ef4\u5411\u91cf 4. NCHW \uff0cNCHW \u5f53\u4e3a5\u7ef4\u5411\u91cf\u65f6\uff0c\u6ee1\u8db3 1. NCDHW \uff0cconst 2. NCDHW \uff0cNCDHW Softmax \u5982\u9700\u5bf9\u6307\u5b9a\u7ef4\u5ea6\u8fdb\u884c\u8fd0\u7b97\uff0c\u5c06\u8981\u8ba1\u7b97\u7684\u7ef4\u5ea6\u8f6c\u7f6e\u5230\u6700\u540e\u7684\u7ef4\u5ea6\uff08\u6700\u5185\u7ef4\u5ea6\uff09\uff0c\u6700\u5927\u652f\u630132*512=16384 Splite ShuffleChannel Tanh \u8f93\u5165<=4\u7ef4 Threshold \u53ea\u652f\u63014\u7ef4\u8f93\u5165 Tile Upsample Upsample\u7b97\u5b50\u5728caffe\u4e2d\u6ca1\u6709\uff0c\u53ef\u4ee5\u624b\u52a8\u5c06Deconvolution\u4fee\u6539\u6210Upsample \u53ea\u652f\u63014\u7ef4\u8f93\u5165 Only support same scale on H and W Reorg \u53ea\u652f\u6301stride = 2 LSTM \u652f\u6301\u5355\u5411\uff0c\u53cc\u5411 Please Note: Upsample\u7b97\u5b50\u5728prototxt\u4e2d\u8fd9\u6837\u63cf\u8ff0\uff1a layer { bottom : \"layer85-conv\" top : \"layer86-upsample\" name : \"layer86-upsample\" type : \"Upsample\" upsample_param { scale : 2 } } scale\u53c2\u6570\u4e0eDeconvolution\u7684Stride\u542b\u4e49\u76f8\u540c\u3002\u4f46\u9700\u6ce8\u610fUpsample\u76f8\u5f53\u4e8e\u6743\u91cd\u5168\u4e3a1\u7684Deconvolution\u7b97\u5b50\u3002 ROIPooling\u7b97\u5b50\u5728prototxt\u4e2d\u8fd9\u6837\u63cf\u8ff0\uff1a layer { name : \"roi_pool5\" type : \"ROIPooling\" bottom : \"conv5_3\" bottom : \"rois\" top : \"pool5\" roi_pooling_param { pooled_w : 7 pooled_h : 7 spatial_scale : 0.0625 } } Roi_pooling_param\u4ec5\u652f\u6301pooled_w\uff0cpooled_h\u548cspatial_scale\u3002Float\u6a21\u578b\u7684rois\u8f93\u5165\u4e3arpn\u5c42\u8f93\u51fa\u7684\u5750\u6807\uff0cFixed\u548cOffline\u6a21\u578b\u7684rois\u8f93\u5165\u4e3arpn\u5c42\u8f93\u51fa\u5750\u6807\u4e58spatial_scale\u503c\u540e\u518d\u91cf\u5316\u5230int16\u540e\u9001\u5165\u6a21\u578b\u3002 2. TensorFlow\u652f\u6301\u7b97\u5b50 \u00b6 \u7c7b\u522b \u7b97\u5b50 \u5907\u6ce8 Convolution Conv \u9650\u5236\u6761\u4ef6\uff1aKernel_size\uff1aH * W < 64 Convolution DepthwiseConv2dNative \u539f\u751f\u652f\u6301Kernel_size\u4e3a3*3\uff0c6*6\uff0c9*9\uff0c\u5176\u4f59\u60c5\u51b5\u8f6c\u6362\u6210Convolution\u5904\u7406 Convolution FullyConnected Pooling Max pooling Pooling Average Pooling Activation ReLU Activation PReLU Activation ReLU6 Activation LeakyReLU Activation Sigmoid Math Less Math Greater Math GreaterEqual Math Equal Math Add Math Sub Math Mul Math RealDiv \u4ec5\u652f\u6301\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u6570\u4e3a\u5e38\u91cfTensor Math Maximum Math Minimum Math Mean Math Max Math Sqrt Math Rsqrt Math Round Math Softmax \u5982\u9700\u5bf9\u6307\u5b9a\u7ef4\u5ea6\u8fdb\u884c\u8fd0\u7b97\uff0c\u5c06\u8981\u8ba1\u7b97\u7684\u7ef4\u5ea6\u8f6c\u7f6e\u5230\u6700\u540e\u7684\u7ef4\u5ea6\uff08\u6700\u5185\u7ef4\u5ea6\uff09 Math FusedBatchNorm Math Exp DMA Align DMA ConcatV2 DMA Fill DMA Gather DMA GatherV2 DMA Pack DMA Pad DMA SpaceToBatchND DMA BatchToSpaceND DMA Zeroslike DMA Split DMA Slice DMA Unpack DMA Tile DMA Reshape DMA Transpose DMA Resize_bilinear DMA Resize_NearestNeighbor DMA Batch_matmul Misc TopKV2 Misc shape 3. Onnx\u652f\u6301\u7b97\u5b50 \u00b6 \u7b97\u5b50 \u5907\u6ce8 Add \u5bf9\u4e8e\u8f93\u5165\u7684\u4e24\u4e2atensor,shape\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6 1. 4\u7ef4\u5411\u91cf\uff0cNCHW 2. NCHW \uff0cconst 3. NCHW \uff0cC\u7ef4\u5411\u91cf \u5f53\u4e3a5\u7ef4\u5411\u91cf\u65f6\uff0c\u6ee1\u8db3 1. NCDHW \uff0cconst 2. NCDHW \uff0cNCDHW Abs ArgMax ArgMin AveragePool \u82e5kernel size\u4e3ah*w\uff0c\u9700\u6ee1\u8db3 1.FilterW <= 255\uff0cFilterH <= 255\uff0c 2.AvePooling_U8\uff1aFilterMax(FilterW*FilterH) = 12288\uff0c 3.AvePooling_S16\uff1aFilterMax(FilterW*FilterH) = 12288 BatchNormalization Cast Constant Concat \u6700\u59271024\u4e2atensor concat Convolution All tensor size < 2^31 \u82e5kernel size \u4e3a co*h*w*ci \u5219h * w < 64 round(ci/16)*round(co/16) < 512 * 1024 \u652f\u6301autoPad\u7684SAME_UPPER\u5c5e\u6027;\u9650\u5236\u6761\u4ef6\uff1aPads\u8303\u56f4\uff1a[0, 7] Convolution3D All tensor size < 2^31 \u82e5kernel size \u4e3a co*h*w*d*ci \u5219h * w < 64\uff0cd\u7ef4\u65e0\u9650\u5236 round(ci/16)*round(co/16) < 512 * 1024 \u652f\u6301autoPad\u7684SAME_UPPER\u5c5e\u6027;\u9650\u5236\u6761\u4ef6\uff1aPads\u8303\u56f4\uff1a[0, 7] ConvTranspose All tensor size < 2^32 \u82e5kernel size \u4e3a co*h*w*ci\uff0ch * w < 64 round(ci/16)*round(co/16) < 512 * 1024 Clip Div \u5bf9\u4e8e\u8f93\u5165\u7684\u4e24\u4e2atensor,shape\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6 1. 4\u7ef4\u5411\u91cf\uff0cNCHW 2. NCHW \uff0cconst 3. NCHW \uff0cC\u7ef4\u5411\u91cf \u5f53\u4e3a5\u7ef4\u5411\u91cf\u65f6\uff0c\u6ee1\u8db3 1. NCDHW \uff0cconst 2. NCDHW \uff0cNCDHW Dropout DepthToSpace \u53ea\u652f\u63014\u7ef4\u8f93\u5165 Expand Exp Equal ERF Flatten HardSigmoid Identity InstanceNormalization Gather \u53ea\u652f\u6301indices\u4e3aint32\u7684\u5e38\u6570 Gemm \u8f93\u5165<=4\u7ef4\uff0c\u82e5weight size do*di round(di/16)*round(do/16) < 512 * 1024 GlobalAveragePool \u82e5kernel size\u4e3ah*w\uff0c\u9700\u6ee1\u8db3 1.FilterW <= 255\uff0cFilterH <= 255\uff0c 2.AvePooling_U8\uff1aFilterMax(FilterW*FilterH) = 12288\uff0c 3.AvePooling_S16\uff1aFilterMax(FilterW*FilterH) = 12288 GlobalMaxPool \u82e5kernel size\u4e3ah*w\uff0c\u9700FilterW <= 255\uff0c\u4e14FilterMax(FilterW*FilterH) = 6029312 GreaterOrEqual LogSoftmax LeakyReLU \u8f93\u5165<=4\u7ef4 LSTM \u6fc0\u6d3b\u51fd\u6570\u56fa\u5b9a\uff0c\u4e0d\u80fd\u914d\u7f6e\u3002\u53c2\u89c1\u7528\u6237\u624b\u518c\u7279\u6b8a\u7f51\u7edc\u8f6c\u6362LSTM\u7ae0\u8282,\u652f\u6301\u5355\u5411LSTM\u548c\u53cc\u5411LSTM Matmul \u8f93\u5165<=4\u7ef4\uff0c\u82e5weight size do*di round(di/16)*round(do/16) < 512 * 1024 Mul \u5bf9\u4e8e\u8f93\u5165\u7684\u4e24\u4e2atensor,shape\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6 1. 4\u7ef4\u5411\u91cf\uff0cNCHW 2. NCHW \uff0cconst 3. NCHW \uff0cC\u7ef4\u5411\u91cf \u5f53\u4e3a5\u7ef4\u5411\u91cf\u65f6\uff0c\u6ee1\u8db3 1. NCDHW \uff0cconst 2. NCDHW \uff0cNCDHW Min MaxPool \u82e5kernel size\u4e3ah*w\uff0c\u9700FilterW <= 255\uff0c\u4e14FilterMax(FilterW*FilterH) = 6029312 Max Not Pad \u652f\u6301\uff0conly support constant Pow Reshape PReLU \u8f93\u5165<=4\u7ef4 ReduceSum \u8f93\u5165<=4\u7ef4 ReduceMean \u8f93\u5165<=4\u7ef4 ReduceMax \u8f93\u5165<=4\u7ef4\uff0c\u4ec5\u652f\u6301\u540c\u65f6\u5bf9\u4e00\u4e2aaxis\u8fdb\u884c\u8ba1\u7b97 ReduceMin \u8f93\u5165<=4\u7ef4 Resize \u5f53'model'\u4e3anearest \u4e0a\u91c7\u6837\u65f6\uff0c'coordinate_transformation_mode'\u4e3a'asymmetric', 'nearest_mode'only support round_prefer_floor(Default) and floor coordinate_transformation_mode'\u4e3a'align_corners', 'nearest_mode'only support round_prefer_floor(Default) and round_prefer_ceil. \u4e0b\u91c7\u6837 'coordinate_transformation_mode'\u4e3a'asymmetric', 'nearest_mode' is not support floor ReLU \u53ea\u652f\u63014\u7ef4\u8f93\u5165 ReduceL2 Tanh Sigmoid Slice SoftMax \u5982\u9700\u5bf9\u6307\u5b9a\u7ef4\u5ea6\u8fdb\u884c\u8fd0\u7b97\uff0c\u5c06\u8981\u8ba1\u7b97\u7684\u7ef4\u5ea6\u8f6c\u7f6e\u5230\u6700\u540e\u7684\u7ef4\u5ea6\uff08\u6700\u5185\u7ef4\u5ea6\uff09 Split SpaceToDepth Squeeze Sub \u5bf9\u4e8e\u8f93\u5165\u7684\u4e24\u4e2atensor,shape\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6 1. 4\u7ef4\u5411\u91cf\uff0cNCHW 2. NCHW \uff0cconst 3. NCHW \uff0cC\u7ef4\u5411\u91cf \u5f53\u4e3a5\u7ef4\u5411\u91cf\u65f6\uff0c\u6ee1\u8db3 1. NCDHW \uff0cconst 2. NCDHW \uff0cNCDHW ScatterND Softplus Sqrt Transpose Tile UnSqueeze Upsample \u53ea\u652f\u63014\u7ef4\u8f93\u5165Only support same scale on H and W Pool3D\u2014GloabalAveragePooling Pool3D\u2014MaxPooling 4. SigmaStar IPU SDK\u5bf9\u6a21\u578b\u7684\u9650\u5236 \u00b6 \u5bf9\u4e8e\u6307\u5b9a\u7ef4\u5ea6\u7684Softmax\uff0c\u6211\u4eec\u53ea\u652f\u6301\u5bf9\u6700\u5185\u7ef4\u5ea6\u7684\u64cd\u4f5c\uff08\u591a\u4f59\u591a\u7ef4Tensor\u7684Softmax\u8fd0\u7b97\uff0c\u6211\u4eec\u53ea\u652f\u6301Softmax\u5236\u5b9a\u5728\u6700\u5185\u7ef4\u5ea6\u505a\uff09\u3002 \u9664\u7b2c\u4e00\u5c42Conv\u5916\uff0c\u5176\u4ed6\u5c42\u7684Conv DI\u7ef4\u5ea6\uff08\u5373NHWC \u4e2dC\u8fd9\u4e2a\u7ef4\u5ea6\uff09\u8d8a\u5927\u6548\u7387\u4f1a\u8d8a\u9ad8\uff0c\u6700\u5927\u652f\u63f42048\u3002 Math\u7c7b\u7b97\u5b50\uff08\u5305\u62ecAdd\u3001Sub\u3001Mul\u3001Div\u7b49\u5143\u7d20\u64cd\u4f5c\u7684\u7b97\u5b50\uff09\uff0c\u5982\u679c\u53f3\u64cd\u4f5c\u6570\u662fscaler\uff08\u5355\u4e2a\u6570\u5b57\uff09 \u6216\u8005 1 \u7ef4\u5411\u91cf\uff08HW\u7ef4\u5ea6\u6570\u636e\u76f8\u540c\uff0cC\u7ef4\u5ea6\u4e0d\u540c\uff09\uff0c\u6548\u7387\u4f1a\u66f4\u9ad8\u3002 \u7f51\u7edc\u7ed3\u6784\u4e2d\u5c3d\u91cf\u51cf\u5c11\u4e00\u4e2a\u7b97\u5b50\u7684\u8f93\u51fa\u88ab\u591a\u4e2a\u7b97\u5b50\u4f5c\u4e3a\u8f93\u5165\u7684\u60c5\u51b5\uff0c\u5982ResNet\u7684\u6b8b\u5dee\u7ed3\u6784\uff0cGoogLeNet\u7684Inception\u6a21\u5757\u7b49\u3002\u53ef\u53c2\u8003 \u6784\u5efaBW\u53cb\u597d\u578b\u6a21\u578b 5. \u6a21\u578b\u6027\u80fd\u4f18\u5316\u89c4\u5219 \u00b6 \uff081\uff09\u5bf9\u4e8e\u5377\u79ef\u7684\u6027\u80fd\u4f18\u5316 kernel size 3x3 \u6700\u597d\uff0c\u7279\u522b\u5bf9\u4e8e\u9996\u5c42\u3002 kernel size 1x1 \u7684\u65f6\u5019\uff0cinput tensor \u6700\u5185\u7ef4\u5ea6shape\u503c\u5bf9\u9f50\u523016 \u6700\u597d\u3002 \uff082\uff09\u5bf9\u4e8eDMA\u7b97\u5b50 concatenation\u7b97\u5b50\u6bd4pack\u7b97\u5b50\u6027\u80fd\u66f4\u597d\u3002 split\u6bd4slice\u7b97\u5b50\u6027\u80fd\u66f4\u597d\u3002 \u5c3d\u91cf\u51cf\u5c11\u5728\u6700\u5185\u7ef4\u4e0a\u505atranspose\u3002 \u5355\u53e3elementwise \u7b97\u5b50\u7684const \u64cd\u4f5c\u6570\u6700\u597d\u662f\u53f3\u64cd\u4f5c\u6570\uff0c\u5373input[1]\u3002 \uff083\uff09\u7efc\u5408\u90e8\u5206 Tensor\u7684\u7ef4\u5ea6\u4e3a4\u6700\u597d\u3002 Tensor\u6700\u5185\u7ef4\u7684shape\u503c\u5bf9\u9f50\u523032\u6700\u597d\u3002 Softmax\u6700\u597d\u53ea\u5bf9\u6700\u5185\u7ef4\u5ea6\u64cd\u4f5c\u3002 ReduceMax\u3001ReduceMin\u3001ReduceSum\u6700\u597d\u574d\u584c\u7684\u7eac\u5ea6\u662f\u76f8\u90bb\u7684\u3002 \uff084\uff09\u5408\u5e76\u89c4\u5219 Pad + Conv2D/DepthwiseConv\uff0cpad\u4f1a\u88ab\u5408\u5e76\u5230\u5377\u79ef\u4e2d\uff0cpad\u51e0\u4e4e\u4e0d\u5360\u7528\u65f6\u95f4\u3002 Conv2D/DepthwiseConv + \u5355\u53e3Mul + \u5355\u53e3Add\uff0cMul\u548cAdd\u7b97\u5b50\u4f1a\u548c\u5377\u79ef\u4e00\u8d77\u8fd0\u7b97\u3002\u6211\u4eec\u4f1a\u628aBatchNorm\u8f6c\u6362\u6210Mul+Add,\u6240\u4ee5Conv2D/DepthwiseConv + BatchNorm\u53ef\u4ee5\u5408\u5e76\u3002 Pad + avgPooling \u53ef\u4ee5\u5408\u5e76\u3002 \u8fde\u7eed\u7684transpose\u4f1a\u81ea\u52a8\u5408\u5e76\u4e3a\u4e00\u4e2a\u3002 \u6240\u6709reshape\u7b97\u5b50\u90fd\u4f1a\u88ab\u8df3\u8fc7\u3002 \u8fde\u7eed\u7684\u5355\u53e3\u7684\u76f8\u540celementwise\u7b97\u5b50\u4f1a\u5408\u5e76\u3002 \u5355\u72ec\u7684\u5355\u53e3mul\u548c\u5355\u53e3add\uff0c\u4f1a\u53d8\u6210MultAdd\u5355\u4e00\u7684\u7b97\u5b50\u3002 \u6ce8\u610f\uff1a\u8fd9\u91cc\u5355\u53e3\u610f\u601d\u4e3a\u4e00\u4e2a\u6570\u636e\u662fconstant\u7684\u60c5\u51b5 \uff085\uff09\u6784\u5efaBW\u53cb\u597d\u7684AI\u6a21\u578b BW\u53cb\u597d\u7684AI\u6a21\u578b\u6307\u6a21\u578b\u6570\u636e\u5c3d\u53ef\u80fd\u4e0d\u5360\u7528\u7cfb\u7edf\u603b\u7ebfBW\u8d44\u6e90\uff0cBW\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b: BW = Input BW + Output BW + Const BW + Variable BW \u5176\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7\u51cf\u5c11variable bw\u6765\u63d0\u5347\u6a21\u578b\u6027\u80fd,variable bw\u5c06\u53d7\u4ee5\u4e0b\u4e24\u70b9\u5f71\u54cd\uff1a (1) tensor\u6570\u636e\u91cf\u592a\u5927 (2) tensor\u7684\u751f\u547d\u5468\u671f\u592a\u957f \u793a\u4f8b\u4e00\uff1aBW\u53cb\u597d\u578b \u793a\u4f8b\u4e8c\uff1atensor\u7684\u751f\u547d\u5468\u671f\u592a\u957f \u793a\u4f8b\u4e09\uff1atensor\u6570\u636e\u91cf\u592a\u5927 \u4e0a\u56fe\u5c55\u793a\u4e86\u4e09\u79cd\u5e38\u89c1\u7684\u6a21\u578b\u7ed3\u6784\u56fe\uff0c\u5176\u4e2d\u56fe\u4e00\u6240\u793a\u7684\u7ed3\u6784\u7b26\u5408\u6a21\u578b\u4f18\u5316\u89c4\u5219\uff0c\u56fe\u4e8c\u3001\u56fe\u4e09\u6240\u793a\u7684\u7ed3\u6784\u5c06\u5f71\u54cd\u6a21\u578b\u6027\u80fd\u3002\u6784\u5efa\u6a21\u578b\u65f6\u8bf7\u5c3d\u53ef\u80fd\u51cf\u5c11\u56fe\u4e8c\u3001\u56fe\u4e09\u7ed3\u6784\u7684\u4f7f\u7528\u3002","title":"DLA SDK Support"},{"location":"module/User_Guide/IPU260/DLA_SDK_Support.html#1-caffe","text":"\u7b97\u5b50 \u5907\u6ce8 ArgMax only support top 1 Axpy BatchNorm Concat \u6700\u59271024\u4e2atensor concat Convolution \u9650\u5236\u6761\u4ef6\uff1aAll tensor size < 2^31 \u82e5kernel size \u4e3a do*h*w*di \u5219h * w < 64 group\u4e3a1\u65f6\uff1a\u8f6c\u6362\u6210Depthwise Convolution; group\u4e3aC\u65f6\uff1a\u8f6c\u6362\u4e3aConvolution; group\u4e3a (1, C) \u65f6\uff1a\u62c6\u89e3\u6210GroupConv round(di/16)*round(do/16) < 512 * 1024 ConvolutionDepthwise \u539f\u751f\u652f\u6301Kernel_size\u4e3a3*3\uff0c6*6\uff0c9*9\uff0c\u5176\u4f59\u60c5\u51b5\u8f6c\u6362\u6210Convolution\u5904\u7406\u9650\u5236\u6761\u4ef6\uff1aPad\u8303\u56f4\uff1a[0, 1] CReLU \u8f93\u5165<=4\u7ef4 ContinuationIndicator Crop Deconvolution All tensor size < 2^31 \u82e5kernel size \u4e3a do*h*w*di\uff0ch * w < 64 round(di/16)*round(do/16) < 512 * 1024 Dropout Eltwise \u5176\u4e2dPROD\u548cSUM\uff0c\u5bf9\u4e8e\u8f93\u5165\u7684\u4e24\u4e2atensor,\u5f53\u4e3a4\u7ef4\u5411\u91cf\u65f6\uff0c\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6 1. NCHW \uff0cconst 2. NCHW \uff0cC\u7ef4\u5411\u91cf 3. NCHW \uff0cNCHW \u5f53\u4e3a5\u7ef4\u5411\u91cf\u65f6\uff0c\u6ee1\u8db3 1. NCDHW \uff0cconst 2. NCDHW \uff0cNCDHW Flatten InnerProduct \u82e5weight size do*di round(di/16)*round(do/16) < 512 * 1024 Permute Pooling \u82e5kernel size\u4e3ah*w 1.AVGPooling (1).FilterW <= 255\uff0cFilterH <= 255\uff0c (2).AvePooling_U8\uff1aFilterMax(FilterW*FilterH) = 12288\uff0c (3).AvePooling_S16\uff1aFilterMax(FilterW*FilterH) = 12288 2.MaxPooling: \u9700FilterW <= 255\uff0c\u4e14FilterMax(FilterW*FilterH) = 6029312 PriorBox Power \u4ec5\u652f\u6301\u6307\u6570\u4e3a\u6b63\u6574\u6570 Reshape Reverse ROIPooling ROIPooling\u7684rois\u8f93\u5165\u7ef4\u5ea6\u4e3a\uff08N\u00d75\uff09\uff0c\u5f53\u540e\u6bb5\u7f51\u7edc\u5168\u90e8\u662fInnerProduct\u65f6\uff0cN\u624d\u53ef\u4ee5\u8bbe\u7f6e\u5927\u4e8e1\uff0c\u5982\u679c\u540e\u6bb5\u7f51\u7edc\u4e2d\u6709\u5377\u79ef\u65f6\uff0cN\u4ec5\u53ef\u4ee5\u8bbe\u7f6e\u4e3a1\uff0c\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u9700\u8981\u5faa\u73af\u6267\u884cN\u6b21\u3002\u4f7f\u7528\u65b9\u6cd5\u548c\u9650\u5236\u8be6\u89c1\u4e0b\u65b9Please Note\u3002 ReLU \u8f93\u5165<=4\u7ef4 PRuLU \u8f93\u5165<=4\u7ef4 Sigmoid Slice Scale \u5bf9\u4e8e\u8f93\u5165\u7684\u4e24\u4e2atensor,shape\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6 1. 4\u7ef4\u5411\u91cf\uff0cNCHW 2. NCHW \uff0cconst 3. NCHW \uff0cC\u7ef4\u5411\u91cf 4. NCHW \uff0cNCHW \u5f53\u4e3a5\u7ef4\u5411\u91cf\u65f6\uff0c\u6ee1\u8db3 1. NCDHW \uff0cconst 2. NCDHW \uff0cNCDHW Softmax \u5982\u9700\u5bf9\u6307\u5b9a\u7ef4\u5ea6\u8fdb\u884c\u8fd0\u7b97\uff0c\u5c06\u8981\u8ba1\u7b97\u7684\u7ef4\u5ea6\u8f6c\u7f6e\u5230\u6700\u540e\u7684\u7ef4\u5ea6\uff08\u6700\u5185\u7ef4\u5ea6\uff09\uff0c\u6700\u5927\u652f\u630132*512=16384 Splite ShuffleChannel Tanh \u8f93\u5165<=4\u7ef4 Threshold \u53ea\u652f\u63014\u7ef4\u8f93\u5165 Tile Upsample Upsample\u7b97\u5b50\u5728caffe\u4e2d\u6ca1\u6709\uff0c\u53ef\u4ee5\u624b\u52a8\u5c06Deconvolution\u4fee\u6539\u6210Upsample \u53ea\u652f\u63014\u7ef4\u8f93\u5165 Only support same scale on H and W Reorg \u53ea\u652f\u6301stride = 2 LSTM \u652f\u6301\u5355\u5411\uff0c\u53cc\u5411 Please Note: Upsample\u7b97\u5b50\u5728prototxt\u4e2d\u8fd9\u6837\u63cf\u8ff0\uff1a layer { bottom : \"layer85-conv\" top : \"layer86-upsample\" name : \"layer86-upsample\" type : \"Upsample\" upsample_param { scale : 2 } } scale\u53c2\u6570\u4e0eDeconvolution\u7684Stride\u542b\u4e49\u76f8\u540c\u3002\u4f46\u9700\u6ce8\u610fUpsample\u76f8\u5f53\u4e8e\u6743\u91cd\u5168\u4e3a1\u7684Deconvolution\u7b97\u5b50\u3002 ROIPooling\u7b97\u5b50\u5728prototxt\u4e2d\u8fd9\u6837\u63cf\u8ff0\uff1a layer { name : \"roi_pool5\" type : \"ROIPooling\" bottom : \"conv5_3\" bottom : \"rois\" top : \"pool5\" roi_pooling_param { pooled_w : 7 pooled_h : 7 spatial_scale : 0.0625 } } Roi_pooling_param\u4ec5\u652f\u6301pooled_w\uff0cpooled_h\u548cspatial_scale\u3002Float\u6a21\u578b\u7684rois\u8f93\u5165\u4e3arpn\u5c42\u8f93\u51fa\u7684\u5750\u6807\uff0cFixed\u548cOffline\u6a21\u578b\u7684rois\u8f93\u5165\u4e3arpn\u5c42\u8f93\u51fa\u5750\u6807\u4e58spatial_scale\u503c\u540e\u518d\u91cf\u5316\u5230int16\u540e\u9001\u5165\u6a21\u578b\u3002","title":"1. Caffe\u652f\u6301\u7b97\u5b50"},{"location":"module/User_Guide/IPU260/DLA_SDK_Support.html#2-tensorflow","text":"\u7c7b\u522b \u7b97\u5b50 \u5907\u6ce8 Convolution Conv \u9650\u5236\u6761\u4ef6\uff1aKernel_size\uff1aH * W < 64 Convolution DepthwiseConv2dNative \u539f\u751f\u652f\u6301Kernel_size\u4e3a3*3\uff0c6*6\uff0c9*9\uff0c\u5176\u4f59\u60c5\u51b5\u8f6c\u6362\u6210Convolution\u5904\u7406 Convolution FullyConnected Pooling Max pooling Pooling Average Pooling Activation ReLU Activation PReLU Activation ReLU6 Activation LeakyReLU Activation Sigmoid Math Less Math Greater Math GreaterEqual Math Equal Math Add Math Sub Math Mul Math RealDiv \u4ec5\u652f\u6301\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u6570\u4e3a\u5e38\u91cfTensor Math Maximum Math Minimum Math Mean Math Max Math Sqrt Math Rsqrt Math Round Math Softmax \u5982\u9700\u5bf9\u6307\u5b9a\u7ef4\u5ea6\u8fdb\u884c\u8fd0\u7b97\uff0c\u5c06\u8981\u8ba1\u7b97\u7684\u7ef4\u5ea6\u8f6c\u7f6e\u5230\u6700\u540e\u7684\u7ef4\u5ea6\uff08\u6700\u5185\u7ef4\u5ea6\uff09 Math FusedBatchNorm Math Exp DMA Align DMA ConcatV2 DMA Fill DMA Gather DMA GatherV2 DMA Pack DMA Pad DMA SpaceToBatchND DMA BatchToSpaceND DMA Zeroslike DMA Split DMA Slice DMA Unpack DMA Tile DMA Reshape DMA Transpose DMA Resize_bilinear DMA Resize_NearestNeighbor DMA Batch_matmul Misc TopKV2 Misc shape","title":"2. TensorFlow\u652f\u6301\u7b97\u5b50"},{"location":"module/User_Guide/IPU260/DLA_SDK_Support.html#3-onnx","text":"\u7b97\u5b50 \u5907\u6ce8 Add \u5bf9\u4e8e\u8f93\u5165\u7684\u4e24\u4e2atensor,shape\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6 1. 4\u7ef4\u5411\u91cf\uff0cNCHW 2. NCHW \uff0cconst 3. NCHW \uff0cC\u7ef4\u5411\u91cf \u5f53\u4e3a5\u7ef4\u5411\u91cf\u65f6\uff0c\u6ee1\u8db3 1. NCDHW \uff0cconst 2. NCDHW \uff0cNCDHW Abs ArgMax ArgMin AveragePool \u82e5kernel size\u4e3ah*w\uff0c\u9700\u6ee1\u8db3 1.FilterW <= 255\uff0cFilterH <= 255\uff0c 2.AvePooling_U8\uff1aFilterMax(FilterW*FilterH) = 12288\uff0c 3.AvePooling_S16\uff1aFilterMax(FilterW*FilterH) = 12288 BatchNormalization Cast Constant Concat \u6700\u59271024\u4e2atensor concat Convolution All tensor size < 2^31 \u82e5kernel size \u4e3a co*h*w*ci \u5219h * w < 64 round(ci/16)*round(co/16) < 512 * 1024 \u652f\u6301autoPad\u7684SAME_UPPER\u5c5e\u6027;\u9650\u5236\u6761\u4ef6\uff1aPads\u8303\u56f4\uff1a[0, 7] Convolution3D All tensor size < 2^31 \u82e5kernel size \u4e3a co*h*w*d*ci \u5219h * w < 64\uff0cd\u7ef4\u65e0\u9650\u5236 round(ci/16)*round(co/16) < 512 * 1024 \u652f\u6301autoPad\u7684SAME_UPPER\u5c5e\u6027;\u9650\u5236\u6761\u4ef6\uff1aPads\u8303\u56f4\uff1a[0, 7] ConvTranspose All tensor size < 2^32 \u82e5kernel size \u4e3a co*h*w*ci\uff0ch * w < 64 round(ci/16)*round(co/16) < 512 * 1024 Clip Div \u5bf9\u4e8e\u8f93\u5165\u7684\u4e24\u4e2atensor,shape\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6 1. 4\u7ef4\u5411\u91cf\uff0cNCHW 2. NCHW \uff0cconst 3. NCHW \uff0cC\u7ef4\u5411\u91cf \u5f53\u4e3a5\u7ef4\u5411\u91cf\u65f6\uff0c\u6ee1\u8db3 1. NCDHW \uff0cconst 2. NCDHW \uff0cNCDHW Dropout DepthToSpace \u53ea\u652f\u63014\u7ef4\u8f93\u5165 Expand Exp Equal ERF Flatten HardSigmoid Identity InstanceNormalization Gather \u53ea\u652f\u6301indices\u4e3aint32\u7684\u5e38\u6570 Gemm \u8f93\u5165<=4\u7ef4\uff0c\u82e5weight size do*di round(di/16)*round(do/16) < 512 * 1024 GlobalAveragePool \u82e5kernel size\u4e3ah*w\uff0c\u9700\u6ee1\u8db3 1.FilterW <= 255\uff0cFilterH <= 255\uff0c 2.AvePooling_U8\uff1aFilterMax(FilterW*FilterH) = 12288\uff0c 3.AvePooling_S16\uff1aFilterMax(FilterW*FilterH) = 12288 GlobalMaxPool \u82e5kernel size\u4e3ah*w\uff0c\u9700FilterW <= 255\uff0c\u4e14FilterMax(FilterW*FilterH) = 6029312 GreaterOrEqual LogSoftmax LeakyReLU \u8f93\u5165<=4\u7ef4 LSTM \u6fc0\u6d3b\u51fd\u6570\u56fa\u5b9a\uff0c\u4e0d\u80fd\u914d\u7f6e\u3002\u53c2\u89c1\u7528\u6237\u624b\u518c\u7279\u6b8a\u7f51\u7edc\u8f6c\u6362LSTM\u7ae0\u8282,\u652f\u6301\u5355\u5411LSTM\u548c\u53cc\u5411LSTM Matmul \u8f93\u5165<=4\u7ef4\uff0c\u82e5weight size do*di round(di/16)*round(do/16) < 512 * 1024 Mul \u5bf9\u4e8e\u8f93\u5165\u7684\u4e24\u4e2atensor,shape\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6 1. 4\u7ef4\u5411\u91cf\uff0cNCHW 2. NCHW \uff0cconst 3. NCHW \uff0cC\u7ef4\u5411\u91cf \u5f53\u4e3a5\u7ef4\u5411\u91cf\u65f6\uff0c\u6ee1\u8db3 1. NCDHW \uff0cconst 2. NCDHW \uff0cNCDHW Min MaxPool \u82e5kernel size\u4e3ah*w\uff0c\u9700FilterW <= 255\uff0c\u4e14FilterMax(FilterW*FilterH) = 6029312 Max Not Pad \u652f\u6301\uff0conly support constant Pow Reshape PReLU \u8f93\u5165<=4\u7ef4 ReduceSum \u8f93\u5165<=4\u7ef4 ReduceMean \u8f93\u5165<=4\u7ef4 ReduceMax \u8f93\u5165<=4\u7ef4\uff0c\u4ec5\u652f\u6301\u540c\u65f6\u5bf9\u4e00\u4e2aaxis\u8fdb\u884c\u8ba1\u7b97 ReduceMin \u8f93\u5165<=4\u7ef4 Resize \u5f53'model'\u4e3anearest \u4e0a\u91c7\u6837\u65f6\uff0c'coordinate_transformation_mode'\u4e3a'asymmetric', 'nearest_mode'only support round_prefer_floor(Default) and floor coordinate_transformation_mode'\u4e3a'align_corners', 'nearest_mode'only support round_prefer_floor(Default) and round_prefer_ceil. \u4e0b\u91c7\u6837 'coordinate_transformation_mode'\u4e3a'asymmetric', 'nearest_mode' is not support floor ReLU \u53ea\u652f\u63014\u7ef4\u8f93\u5165 ReduceL2 Tanh Sigmoid Slice SoftMax \u5982\u9700\u5bf9\u6307\u5b9a\u7ef4\u5ea6\u8fdb\u884c\u8fd0\u7b97\uff0c\u5c06\u8981\u8ba1\u7b97\u7684\u7ef4\u5ea6\u8f6c\u7f6e\u5230\u6700\u540e\u7684\u7ef4\u5ea6\uff08\u6700\u5185\u7ef4\u5ea6\uff09 Split SpaceToDepth Squeeze Sub \u5bf9\u4e8e\u8f93\u5165\u7684\u4e24\u4e2atensor,shape\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6 1. 4\u7ef4\u5411\u91cf\uff0cNCHW 2. NCHW \uff0cconst 3. NCHW \uff0cC\u7ef4\u5411\u91cf \u5f53\u4e3a5\u7ef4\u5411\u91cf\u65f6\uff0c\u6ee1\u8db3 1. NCDHW \uff0cconst 2. NCDHW \uff0cNCDHW ScatterND Softplus Sqrt Transpose Tile UnSqueeze Upsample \u53ea\u652f\u63014\u7ef4\u8f93\u5165Only support same scale on H and W Pool3D\u2014GloabalAveragePooling Pool3D\u2014MaxPooling","title":"3. Onnx\u652f\u6301\u7b97\u5b50"},{"location":"module/User_Guide/IPU260/DLA_SDK_Support.html#4-sigmastar-ipu-sdk","text":"\u5bf9\u4e8e\u6307\u5b9a\u7ef4\u5ea6\u7684Softmax\uff0c\u6211\u4eec\u53ea\u652f\u6301\u5bf9\u6700\u5185\u7ef4\u5ea6\u7684\u64cd\u4f5c\uff08\u591a\u4f59\u591a\u7ef4Tensor\u7684Softmax\u8fd0\u7b97\uff0c\u6211\u4eec\u53ea\u652f\u6301Softmax\u5236\u5b9a\u5728\u6700\u5185\u7ef4\u5ea6\u505a\uff09\u3002 \u9664\u7b2c\u4e00\u5c42Conv\u5916\uff0c\u5176\u4ed6\u5c42\u7684Conv DI\u7ef4\u5ea6\uff08\u5373NHWC \u4e2dC\u8fd9\u4e2a\u7ef4\u5ea6\uff09\u8d8a\u5927\u6548\u7387\u4f1a\u8d8a\u9ad8\uff0c\u6700\u5927\u652f\u63f42048\u3002 Math\u7c7b\u7b97\u5b50\uff08\u5305\u62ecAdd\u3001Sub\u3001Mul\u3001Div\u7b49\u5143\u7d20\u64cd\u4f5c\u7684\u7b97\u5b50\uff09\uff0c\u5982\u679c\u53f3\u64cd\u4f5c\u6570\u662fscaler\uff08\u5355\u4e2a\u6570\u5b57\uff09 \u6216\u8005 1 \u7ef4\u5411\u91cf\uff08HW\u7ef4\u5ea6\u6570\u636e\u76f8\u540c\uff0cC\u7ef4\u5ea6\u4e0d\u540c\uff09\uff0c\u6548\u7387\u4f1a\u66f4\u9ad8\u3002 \u7f51\u7edc\u7ed3\u6784\u4e2d\u5c3d\u91cf\u51cf\u5c11\u4e00\u4e2a\u7b97\u5b50\u7684\u8f93\u51fa\u88ab\u591a\u4e2a\u7b97\u5b50\u4f5c\u4e3a\u8f93\u5165\u7684\u60c5\u51b5\uff0c\u5982ResNet\u7684\u6b8b\u5dee\u7ed3\u6784\uff0cGoogLeNet\u7684Inception\u6a21\u5757\u7b49\u3002\u53ef\u53c2\u8003 \u6784\u5efaBW\u53cb\u597d\u578b\u6a21\u578b","title":"4. SigmaStar IPU SDK\u5bf9\u6a21\u578b\u7684\u9650\u5236"},{"location":"module/User_Guide/IPU260/DLA_SDK_Support.html#5","text":"\uff081\uff09\u5bf9\u4e8e\u5377\u79ef\u7684\u6027\u80fd\u4f18\u5316 kernel size 3x3 \u6700\u597d\uff0c\u7279\u522b\u5bf9\u4e8e\u9996\u5c42\u3002 kernel size 1x1 \u7684\u65f6\u5019\uff0cinput tensor \u6700\u5185\u7ef4\u5ea6shape\u503c\u5bf9\u9f50\u523016 \u6700\u597d\u3002 \uff082\uff09\u5bf9\u4e8eDMA\u7b97\u5b50 concatenation\u7b97\u5b50\u6bd4pack\u7b97\u5b50\u6027\u80fd\u66f4\u597d\u3002 split\u6bd4slice\u7b97\u5b50\u6027\u80fd\u66f4\u597d\u3002 \u5c3d\u91cf\u51cf\u5c11\u5728\u6700\u5185\u7ef4\u4e0a\u505atranspose\u3002 \u5355\u53e3elementwise \u7b97\u5b50\u7684const \u64cd\u4f5c\u6570\u6700\u597d\u662f\u53f3\u64cd\u4f5c\u6570\uff0c\u5373input[1]\u3002 \uff083\uff09\u7efc\u5408\u90e8\u5206 Tensor\u7684\u7ef4\u5ea6\u4e3a4\u6700\u597d\u3002 Tensor\u6700\u5185\u7ef4\u7684shape\u503c\u5bf9\u9f50\u523032\u6700\u597d\u3002 Softmax\u6700\u597d\u53ea\u5bf9\u6700\u5185\u7ef4\u5ea6\u64cd\u4f5c\u3002 ReduceMax\u3001ReduceMin\u3001ReduceSum\u6700\u597d\u574d\u584c\u7684\u7eac\u5ea6\u662f\u76f8\u90bb\u7684\u3002 \uff084\uff09\u5408\u5e76\u89c4\u5219 Pad + Conv2D/DepthwiseConv\uff0cpad\u4f1a\u88ab\u5408\u5e76\u5230\u5377\u79ef\u4e2d\uff0cpad\u51e0\u4e4e\u4e0d\u5360\u7528\u65f6\u95f4\u3002 Conv2D/DepthwiseConv + \u5355\u53e3Mul + \u5355\u53e3Add\uff0cMul\u548cAdd\u7b97\u5b50\u4f1a\u548c\u5377\u79ef\u4e00\u8d77\u8fd0\u7b97\u3002\u6211\u4eec\u4f1a\u628aBatchNorm\u8f6c\u6362\u6210Mul+Add,\u6240\u4ee5Conv2D/DepthwiseConv + BatchNorm\u53ef\u4ee5\u5408\u5e76\u3002 Pad + avgPooling \u53ef\u4ee5\u5408\u5e76\u3002 \u8fde\u7eed\u7684transpose\u4f1a\u81ea\u52a8\u5408\u5e76\u4e3a\u4e00\u4e2a\u3002 \u6240\u6709reshape\u7b97\u5b50\u90fd\u4f1a\u88ab\u8df3\u8fc7\u3002 \u8fde\u7eed\u7684\u5355\u53e3\u7684\u76f8\u540celementwise\u7b97\u5b50\u4f1a\u5408\u5e76\u3002 \u5355\u72ec\u7684\u5355\u53e3mul\u548c\u5355\u53e3add\uff0c\u4f1a\u53d8\u6210MultAdd\u5355\u4e00\u7684\u7b97\u5b50\u3002 \u6ce8\u610f\uff1a\u8fd9\u91cc\u5355\u53e3\u610f\u601d\u4e3a\u4e00\u4e2a\u6570\u636e\u662fconstant\u7684\u60c5\u51b5 \uff085\uff09\u6784\u5efaBW\u53cb\u597d\u7684AI\u6a21\u578b BW\u53cb\u597d\u7684AI\u6a21\u578b\u6307\u6a21\u578b\u6570\u636e\u5c3d\u53ef\u80fd\u4e0d\u5360\u7528\u7cfb\u7edf\u603b\u7ebfBW\u8d44\u6e90\uff0cBW\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b: BW = Input BW + Output BW + Const BW + Variable BW \u5176\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7\u51cf\u5c11variable bw\u6765\u63d0\u5347\u6a21\u578b\u6027\u80fd,variable bw\u5c06\u53d7\u4ee5\u4e0b\u4e24\u70b9\u5f71\u54cd\uff1a (1) tensor\u6570\u636e\u91cf\u592a\u5927 (2) tensor\u7684\u751f\u547d\u5468\u671f\u592a\u957f \u793a\u4f8b\u4e00\uff1aBW\u53cb\u597d\u578b \u793a\u4f8b\u4e8c\uff1atensor\u7684\u751f\u547d\u5468\u671f\u592a\u957f \u793a\u4f8b\u4e09\uff1atensor\u6570\u636e\u91cf\u592a\u5927 \u4e0a\u56fe\u5c55\u793a\u4e86\u4e09\u79cd\u5e38\u89c1\u7684\u6a21\u578b\u7ed3\u6784\u56fe\uff0c\u5176\u4e2d\u56fe\u4e00\u6240\u793a\u7684\u7ed3\u6784\u7b26\u5408\u6a21\u578b\u4f18\u5316\u89c4\u5219\uff0c\u56fe\u4e8c\u3001\u56fe\u4e09\u6240\u793a\u7684\u7ed3\u6784\u5c06\u5f71\u54cd\u6a21\u578b\u6027\u80fd\u3002\u6784\u5efa\u6a21\u578b\u65f6\u8bf7\u5c3d\u53ef\u80fd\u51cf\u5c11\u56fe\u4e8c\u3001\u56fe\u4e09\u7ed3\u6784\u7684\u4f7f\u7528\u3002","title":"5. \u6a21\u578b\u6027\u80fd\u4f18\u5316\u89c4\u5219"},{"location":"module/User_Guide/IPU260/Directory_Navigation.html","text":"1. \u7ae0\u8282\u603b\u7ed3 \u00b6 \u529f\u80fd \u6307\u5357 \u76ee\u5f55 \u7f51\u7edc\u8f6c\u6362 \u8f6c\u6362\u4e3aSGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b 2.1 Convert Tool\u7b80\u4ecb 2.2 \u4e0d\u540c\u6846\u67b6\u6a21\u578b\u8f6c\u6362\u4e3aSGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u7684\u4f7f\u7528\u65b9\u6cd5 2.2.1 caffe\u6846\u67b6\u6307\u4ee4 2.2.2 Onnx\u6846\u67b6\u6307\u4ee4 2.2.3 tflite\u6846\u67b6\u6307\u4ee4 2.2.4 tensorflow_savemodel \u6846\u67b6\u6307\u4ee4 2.2.5 tensorflow_graphdef \u6846\u67b6\u6307\u4ee4 2.2.6 keras\u6846\u67b6\u6307\u4ee4 2.3. input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e 2.3.1 INPUT_CONFIG 2.3.2 OUTPUT_CONFIG 2.3.3 CONV_CONFIG 2.3.4 \u8f93\u5165\u8f93\u51fa\u914d\u7f6e\u603b\u7ed3 \u8f6c\u6362\u4e3aSGS\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b 3.1. Calibrator\u7b80\u4ecb 3.2. Calibrator\u5de5\u5177\u4f7f\u7528\u8bf4\u660e 3.2.1 Calibrator\u5de5\u5177\u4f7f\u7528\u793a\u4f8b 3.2.2 Calibrator\u5de5\u5177\u4f7f\u7528\u53c2\u6570\u8bf4\u660e 3.3. \u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5 3.4. calibrator_custom.calibrator\u7b80\u4ecb 3.4.1 calibrator_custom.calibrator\u65b9\u6cd5 3.4.2 calibrator_custom.SIM_Calibrator 3.4.3 calibrator_custom.calibrator\u5bfc\u5165\u91cf\u5316\u53c2\u6570\u89c4\u5219 3.5. torch_calibrator\u7b80\u4ecb 3.5.1. torch_calibrator\u5de5\u5177\u4f7f\u7528\u8bf4\u660e 3.5.2. torch_calibrator\u91cf\u5316\u9009\u9879 3.5.3. torch_calibrator\u91cf\u5316\u53c2\u6570(yaml\u683c\u5f0f)\u6587\u4ef6 \u8f6c\u6362\u4e3aSGS\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b 4.1 Compiler\u7b80\u4ecb 4.2 Compiler\u5de5\u5177\u4f7f\u7528\u8bf4\u660e 4.2.1 Compiler\u5de5\u5177\u4f7f\u7528\u793a\u4f8b 4.2.2 Compiler\u5de5\u5177\u4f7f\u7528\u53c2\u6570\u8bf4\u660e \u677f\u7aef\u8fd0\u884c\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b \u4e00\u952e\u751f\u6210SGS\u79bb\u7ebf\u6a21\u578b \u7f51\u7edc\u63a8\u6f14 SigmaStar\u6d6e\u70b9/\u5b9a\u70b9/\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u9a8c\u8bc1 5.1. Simulator\u7b80\u4ecb 5.2 Simulator\u5de5\u5177\u4f7f\u7528\u8bf4\u660e 5.2.1 Simulator\u5de5\u5177\u4f7f\u7528\u793a\u4f8b 5.2.2 Simulator\u5de5\u5177\u4f7f\u7528\u53c2\u6570\u8bf4\u660e SigmaStar\u6d6e\u70b9/\u5b9a\u70b9/\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u6570\u636e\u89e3\u6790 6.1. DumpDebug Tool\u7b80\u4ecb 6.2. DumpDebug Tool\u5de5\u5177\u4f7f\u7528\u8bf4\u660e 6.2.1 DumpDebug Tool\u5de5\u5177\u5982\u4f55\u89e3\u6790\u7f51\u7edc\u6a21\u578b\u6570\u636e 6.2.2 \u4f7f\u7528auto_dump_debug.sh\u811a\u672c\u5206\u6790\u6570\u636e IPU\u7cbe\u5ea6\u95ee\u9898Debug SOP \u7279\u6b8a\u7f51\u7edc\u8f6c\u6362 \u6dfb\u52a0\u65b0\u7684layer \u7279\u6b8a\u6a21\u578b\u8f6c\u6362\u8981\u70b9 \u7070\u5ea6\u6a21\u578b RAWDATA_F32_NHWC\u4e0eRAWDATA_S16_NHWC\u8f93\u5165\u7684\u6a21\u578b \u5206\u6bb5\u7f51\u7edc \u591a\u8f93\u5165\u7f51\u7edc \u8f85\u52a9\u67e5\u770b\u5de5\u5177 DLA SDK \u8f85\u52a9\u5de5\u5177 Offline\u6a21\u578b\u4fe1\u606f\u67e5\u770b\u5de5\u5177 IPU Log\u6027\u80fd\u5206\u6790\u5de5\u5177 IPU\u7f51\u7edc\u6a21\u578b\u6570\u636e\u5bf9\u6bd4\u5206\u6790\u5de5\u5177","title":"Directory Navigation"},{"location":"module/User_Guide/IPU260/Directory_Navigation.html#1","text":"\u529f\u80fd \u6307\u5357 \u76ee\u5f55 \u7f51\u7edc\u8f6c\u6362 \u8f6c\u6362\u4e3aSGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b 2.1 Convert Tool\u7b80\u4ecb 2.2 \u4e0d\u540c\u6846\u67b6\u6a21\u578b\u8f6c\u6362\u4e3aSGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u7684\u4f7f\u7528\u65b9\u6cd5 2.2.1 caffe\u6846\u67b6\u6307\u4ee4 2.2.2 Onnx\u6846\u67b6\u6307\u4ee4 2.2.3 tflite\u6846\u67b6\u6307\u4ee4 2.2.4 tensorflow_savemodel \u6846\u67b6\u6307\u4ee4 2.2.5 tensorflow_graphdef \u6846\u67b6\u6307\u4ee4 2.2.6 keras\u6846\u67b6\u6307\u4ee4 2.3. input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e 2.3.1 INPUT_CONFIG 2.3.2 OUTPUT_CONFIG 2.3.3 CONV_CONFIG 2.3.4 \u8f93\u5165\u8f93\u51fa\u914d\u7f6e\u603b\u7ed3 \u8f6c\u6362\u4e3aSGS\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b 3.1. Calibrator\u7b80\u4ecb 3.2. Calibrator\u5de5\u5177\u4f7f\u7528\u8bf4\u660e 3.2.1 Calibrator\u5de5\u5177\u4f7f\u7528\u793a\u4f8b 3.2.2 Calibrator\u5de5\u5177\u4f7f\u7528\u53c2\u6570\u8bf4\u660e 3.3. \u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5 3.4. calibrator_custom.calibrator\u7b80\u4ecb 3.4.1 calibrator_custom.calibrator\u65b9\u6cd5 3.4.2 calibrator_custom.SIM_Calibrator 3.4.3 calibrator_custom.calibrator\u5bfc\u5165\u91cf\u5316\u53c2\u6570\u89c4\u5219 3.5. torch_calibrator\u7b80\u4ecb 3.5.1. torch_calibrator\u5de5\u5177\u4f7f\u7528\u8bf4\u660e 3.5.2. torch_calibrator\u91cf\u5316\u9009\u9879 3.5.3. torch_calibrator\u91cf\u5316\u53c2\u6570(yaml\u683c\u5f0f)\u6587\u4ef6 \u8f6c\u6362\u4e3aSGS\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b 4.1 Compiler\u7b80\u4ecb 4.2 Compiler\u5de5\u5177\u4f7f\u7528\u8bf4\u660e 4.2.1 Compiler\u5de5\u5177\u4f7f\u7528\u793a\u4f8b 4.2.2 Compiler\u5de5\u5177\u4f7f\u7528\u53c2\u6570\u8bf4\u660e \u677f\u7aef\u8fd0\u884c\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b \u4e00\u952e\u751f\u6210SGS\u79bb\u7ebf\u6a21\u578b \u7f51\u7edc\u63a8\u6f14 SigmaStar\u6d6e\u70b9/\u5b9a\u70b9/\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u9a8c\u8bc1 5.1. Simulator\u7b80\u4ecb 5.2 Simulator\u5de5\u5177\u4f7f\u7528\u8bf4\u660e 5.2.1 Simulator\u5de5\u5177\u4f7f\u7528\u793a\u4f8b 5.2.2 Simulator\u5de5\u5177\u4f7f\u7528\u53c2\u6570\u8bf4\u660e SigmaStar\u6d6e\u70b9/\u5b9a\u70b9/\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u6570\u636e\u89e3\u6790 6.1. DumpDebug Tool\u7b80\u4ecb 6.2. DumpDebug Tool\u5de5\u5177\u4f7f\u7528\u8bf4\u660e 6.2.1 DumpDebug Tool\u5de5\u5177\u5982\u4f55\u89e3\u6790\u7f51\u7edc\u6a21\u578b\u6570\u636e 6.2.2 \u4f7f\u7528auto_dump_debug.sh\u811a\u672c\u5206\u6790\u6570\u636e IPU\u7cbe\u5ea6\u95ee\u9898Debug SOP \u7279\u6b8a\u7f51\u7edc\u8f6c\u6362 \u6dfb\u52a0\u65b0\u7684layer \u7279\u6b8a\u6a21\u578b\u8f6c\u6362\u8981\u70b9 \u7070\u5ea6\u6a21\u578b RAWDATA_F32_NHWC\u4e0eRAWDATA_S16_NHWC\u8f93\u5165\u7684\u6a21\u578b \u5206\u6bb5\u7f51\u7edc \u591a\u8f93\u5165\u7f51\u7edc \u8f85\u52a9\u67e5\u770b\u5de5\u5177 DLA SDK \u8f85\u52a9\u5de5\u5177 Offline\u6a21\u578b\u4fe1\u606f\u67e5\u770b\u5de5\u5177 IPU Log\u6027\u80fd\u5206\u6790\u5de5\u5177 IPU\u7f51\u7edc\u6a21\u578b\u6570\u636e\u5bf9\u6bd4\u5206\u6790\u5de5\u5177","title":"1. \u7ae0\u8282\u603b\u7ed3"},{"location":"module/User_Guide/IPU260/DumpDebug_Tool.html","text":"6.1. DumpDebug Tool\u7b80\u4ecb \u00b6 DumpDebugTool \u8bf4\u660e \u5de5\u5177\u4f4d\u7f6e SGS_IPU_SDK/DumpDebug/ \u5de5\u5177\u4f5c\u7528 \u63d0\u4f9b\u6a21\u578b\u91cf\u5316\u540e\u7cbe\u5ea6\u4e0b\u964d\u95ee\u9898\u7684\u6392\u67e5\u65b9\u6cd5 \u89e3\u6790\u7f51\u7edc\u6a21\u578b\u6570\u636e \u5bf9\u6bd4\u4e0d\u540c\u9636\u6bb5\u7684\u7f51\u7edc\u6a21\u578b\u6570\u636e \u4f7f\u7528\u987b\u77e5 \u2460 SigmaStar DLA SDK\u5728\u8f6c\u6362\u7f51\u7edc\u65f6\u7684\u6570\u636e\u4e00\u81f4\u6027\u8bf4\u660e\uff1a \u539f\u59cb\u6a21\u578b\u8f6c\u5316\u4e3aSigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\uff1a Caffe\u3001Onnx\u3001TensorFlow\u7684\u7f51\u7edc\u6a21\u578b\u4e0eSigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u7684\u7ed3\u679c\u5b8c\u5168\u4e00\u81f4; SigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u5316\u4e3aSigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff1a \u6709\u7cbe\u5ea6\u5dee\u522b\u7684\u53ea\u6709\u5728SigmaStar\u6d6e\u70b9\u6a21\u578b\u8f6c\u6362\u4e3aSigmaStar\u5b9a\u70b9\u8fd9\u4e2a\u9636\u6bb5; SigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u5316\u4e3aSigmaStar\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\uff1a SigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u4e0eSigmaStar\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u7684\u7ed3\u679c\u5b8c\u5168\u4e00\u81f4; \u2461 \u53d1\u73b0SigmaStar\u5b9a\u70b9\u7f51\u7edc\u7684\u7ed3\u679c\u4e0e\u539f\u6709\u6d6e\u70b9\u7684\u7ed3\u679c\u76f8\u5dee\u8f83\u591a\u65f6\uff0c\u4f7f\u7528DumpDebug Tool\u53ef\u4ee5\u68c0\u67e5\u8f6c\u6362\u540e\u5b9a\u70b9\u7f51\u7edc\u7684\u9519\u8bef\u3002 \u5bf9\u6bd4\u5206\u6790SigmaStar\u6d6e\u70b9\u4e0e\u5b9a\u70b9\u6a21\u578b \u2462 DumpDebug Tool\u4e5f\u53ef\u7528\u4e8e\u76f4\u63a5dump\u539f\u6a21\u578bCaffe/Onnx\u7684\u6bcf\u4e00\u5c42\u6570\u636e\uff0c\u4ee5\u4fbf\u4e0eSigmaStar\u6a21\u578b\u8fdb\u884c\u5bf9\u6bd4\u3002 \u5bf9\u6bd4\u5206\u6790SigmaStar\uff08\u6d6e\u70b9/\u5b9a\u70b9\uff09\u6a21\u578b\u4e0e\u539f\u6a21\u578b\uff08Caffe/Onnx\uff09 6.2. DumpDebug Tool\u5de5\u5177\u4f7f\u7528\u8bf4\u660e \u00b6 6.2.1 DumpDebug Tool\u5de5\u5177\u5982\u4f55\u89e3\u6790\u7f51\u7edc\u6a21\u578b\u6570\u636e \u00b6 6.2.1.1 Dump\u89e3\u6790SigmaStar\u6d6e\u70b9\u6216\u5b9a\u70b9\u6a21\u578b \u00b6 setp1: \u5728 SGS_IPU_SDK/cfg \u6587\u4ef6\u5939\u4e2d\u627e\u5230DebugConfig.txt\u6587\u4ef6\uff0c\u590d\u5236\u5230\u5f53\u524d\u8fd0\u884c\u8def\u5f84\u4e0b. step2: \u6253\u5f00DebugConfig.txt\uff0c\u4fee\u6539\u6587\u4ef6\u5185\u5bb9\uff1a dumpTensor eliminateGarbage dequantFixed #dumpasstring #disableDomainFuseOps path = \u4f7f\u7528\u987b\u77e5 DebugConfig.txt\u5404\u53c2\u6570\u4f5c\u7528: dumpTensor : Dump\u7f51\u7edc\u6a21\u578b\u5404\u5c42\u6570\u636e\u603b\u5f00\u5173\u3002 eliminateGarbage : Dump\u7f51\u7edc\u6a21\u578b\u6570\u636e\u65f6\u53bb\u9664\u65e0\u7528\u6570\u636e\uff08\u5efa\u8bae\u5f00\u542f\uff09\u3002 dequantFixed : \u9488\u5bf9\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff0c\u5c06\u6574\u5f62\u6570\u636e\u8f6c\u6362\u4e3a\u6d6e\u70b9\u6570\u636e\uff08\u5efa\u8bae\u5f00\u542f\uff09\u3002 dumpasstring : Dump\u7f51\u7edc\u6a21\u578b\u6570\u636e\u4e3a\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u5173\u95ed\u9009\u9879\u4e3a\u4e8c\u8fdb\u5236\u6587\u4ef6\u7c7b\u578b\u3002\uff08\u5982\u679c\u9700\u8981[6.2.2 \u4f7f\u7528auto_dump_debug.sh\u811a\u672c\u5206\u6790\u6570\u636e]\u529f\u80fd\uff0c\u52a1\u5fc5\u5173\u95ed\u6b64\u9009\u9879\uff09\u3002 disableDomainFuseOps : \u8f6c\u6362\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u65f6\uff0c\u53d6\u6d88\u7f51\u7edc\u5c42\u878d\u5408\uff08\u5efa\u8bae\u5173\u95ed\uff09\u3002 path= : \u6307\u5b9a\u751f\u6210\u6863\u6848\u7684\u8f93\u51fa\u5168\u8def\u5f84\uff08path= \u540e\u9762\u786e\u4fdd\u586b\u5199\u7c7b\u4f3c /home/user \u7684\u7edd\u5bf9\u8def\u5f84\u3002\u5982\u679cpath= \u540e\u9762\u6ca1\u6709\u5185\u5bb9\u6216\u6839\u672c\u6ca1\u6709 path= \u7684\u8bdd\uff0c\u5219\u4f1a\u9ed8\u8ba4\u8f93\u51fa\u5230 $HOME \u4f4d\u7f6e\u3002\u53e6\u5916\uff0c\u7edd\u5bf9\u8def\u5f84\u6216 /home/user \u4e0d\u8d85\u8fc7122\u5b57\u8282\uff09\u3002 step3: \u8fd0\u884csimulator\u5bf9\u5355\u5f20\u56fe\u7247\u63a8\u6f14\u3002 \u4f7f\u7528\u987b\u77e5 simulator\u5de5\u5177\u4f7f\u7528\u8be6\u89c1 simulator step4: \u63a8\u6f14\u5b8c\u6210\u540e\uff0c\u4f1a\u5728DebugConfig.txt\u6587\u4ef6\u4e2d path= \u53c2\u6570\u6307\u5b9a\u7684\u76ee\u5f55\u4e0b\u751f\u6210sigma_outtensor_dump.bin\u6587\u4ef6\uff0c\u7528\u4e8e\u4fdd\u5b58Dump\u51fa\u7684\u7f51\u7edc\u6a21\u578b\u4e2d\u5404\u5c42\u6570\u636e\u3002 \u4f7f\u7528\u987b\u77e5 Dump\u5b8c\u6210\u540e,\u7ed3\u679c\u5c06\u4fdd\u5b58\u5728sigma_outtensor_dump.bin\u6587\u4ef6\u4e2d\uff0c\u82e5\u9700\u91cd\u547d\u540d\uff0c\u8bf7\u52ff\u4fee\u6539\u6587\u4ef6\u540e\u7f00 .bin\u3002 \u65b0\u7684Dump\u4f1a\u590d\u5199sigma_outtensor_dump.bin\u6587\u4ef6\uff0c\u82e5\u91cd\u65b0\u8fd0\u884c\uff0c\u8bf7\u6ce8\u610f\u4fdd\u5b58\u3002 DebugConfig.txt\u6587\u4ef6\u4e2ddisableDomainFuseOps \u9009\u9879\u8bf4\u660e\uff1a \u4f5c\u7528\u4e8e\u8f6c\u6362\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u9636\u6bb5\uff0c\u5efa\u8bae\u5173\u95ed\u3002 \u4f7f\u7528\u65f6\uff0c\u9ed8\u8ba4\u5173\u95ed\u8be5\u9009\u9879\uff0c\u5373calibrator\u5c06\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u6210\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u65f6\u5c06\u8fdb\u884c\u7f51\u7edc\u878d\u5408\uff0c\u5982\u679c\u6253\u5f00\u8be5\u9009\u9879\uff0c\u5219\u5c06\u53d6\u6d88\u7f51\u7edc\u878d\u5408\u529f\u80fd\u3002 \u5173\u95ed\u8be5\u9009\u9879\u65f6\uff0c\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u548c\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u80fd\u591f\u5728\u8f6c\u6362\u65f6\u4f18\u5316\u7f51\u7edc\u6a21\u578b\u7684\u7b97\u5b50\uff0c\u52a0\u901f\u6a21\u578b\u7684\u8fd0\u884c\uff0c\u4f46\u662f\u4e5f\u4f1a\u5f71\u54cd\u7f51\u7edc\u7684\u5c42\u7ea7\u7ed3\u6784\uff0c\u4f7f\u5f97\u90e8\u5206\u7b97\u5b50\u7684\u8f93\u51fa\u4e0d\u4f1a\u88abDump\u5230sigma_outtersor_dump.bin\u6587\u4ef6\u4e2d\u3002 \u5982\u679c\u9700\u8981\u7f51\u7edc\u6a21\u578b\u7684\u6bcf\u4e00\u5c42\u6570\u636e\uff0c\u53ef\u4ee5\u6253\u5f00disableDomainFuseOps\u9009\u9879\uff0c\u91cd\u65b0\u8fd0\u884ccalibrator\u8f6c\u6362\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff0c\u6b64\u65f6\u8f6c\u51fa\u7684\u6a21\u578b\u6ca1\u6709\u878d\u5408\u4f18\u5316\uff0c\u53ef\u4ee5\u8f93\u51fa\u6bcf\u5c42\u7684\u6570\u636e\u3002 \u5bf9\u6bd4\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u548c\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff0c\u4f7f\u7528simulator\u4e2d\u53c2\u6570 -t/--type \u548c -m/--model \u6307\u5b9a\u4e0d\u540c\u9636\u6bb5\u7684\u6a21\u578b\uff0c\u5373\u53efDump\u51fa\u4e0d\u540c\u9636\u6bb5\u7684\u7f51\u7edc\u6a21\u578b\u6570\u636e\u3002\u8be6\u89c1 simulator \u3002 \u79bb\u7ebf\u6a21\u578b\u4e0d\u652f\u6301Dump Debug,\u79bb\u7ebf\u6a21\u578b\u7f51\u7edc\u7684\u5c42\u7ea7\u7ed3\u6784Domain\u5df2\u7ecf\u878d\u5408\uff0c\u4e0d\u80fdDump\u7f51\u7edc\u6a21\u578b\u4e2d\u5404\u5c42\u7684\u6570\u636e\u3002 \u4f7f\u7528calibrator\u5c06\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u4e3a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u65f6\uff0c\u4f1a\u5728SGS_IPU_SDK\u6839\u76ee\u5f55\u4e0b\u4ea7\u751ftensor_min_max.txt \u6587\u4ef6\uff0c\u6b64\u6587\u4ef6\u8bb0\u5f55\u4e86\u7f51\u7edc\u7684\u6bcf\u5c42\u8f93\u5165\u548c\u8f93\u51fa\u7684\u6700\u5927\u4e0e\u6700\u5c0f\u503c\uff0c\u5c06\u5728\u4e4b\u540e\u5206\u6790Dump\u6570\u636e\u65f6\u6709\u7528\u3002 6.2.1.2 Dump\u89e3\u6790Caffe\u539f\u6a21\u578b \u00b6 (1) \u5de5\u5177\u7684\u4f4d\u7f6e\u5728 SGS_IPU_SDK/DumpDebug/code/caffe_dump_data.py \u3002 (2) caffe_dump_data.py\u811a\u672c\u9700\u8981\u4f7f\u7528 python2 \u8fd0\u884c\uff08Caffe\u4ec5\u652f\u6301python2\uff09\uff0c\u7528\u4e8e\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u6216\u8005\u4e8c\u8fdb\u5236\u5f62\u5f0fdump\u51faCaffe\u539f\u6a21\u578b\u6bcf\u4e00\u5c42\u7684\u6570\u636e\u3002 (3) \u4f7f\u7528\u793a\u4f8b\uff1a step1: caffe_dump_data.py\u4e2d\u4fee\u6539Caffe\u7684\u8fd0\u884c\u8def\u5f84\uff0c\u6bd4\u5982\uff1a caffe_root = '/home/your_caffe_root' sys.path.insert ( 0 ,caffe_root+ '/python' ) step2: \u8fd0\u884c\u811a\u672c\uff1a python2 caffe_dump_data.py \\ --model_file caffe_mobilenet_v2.prototxt \\ --weight_file caffe_mobilenet_v2.caffemodel \\ --i ./img.bmp \\ --dump_bin True \\ -n ./caffe_mobilenet_v2.py (4) \u4f7f\u7528\u53c2\u6570\u8bf4\u660e\uff1a \u2460 \u5fc5\u9009\u53c2\u6570\u8bf4\u660e\uff1a --model_file : Caffe\u539f\u6a21\u578bprototxt\u6587\u4ef6\u8def\u5f84\u3002 --weight_file : Caffe\u539f\u6a21\u578bcaffemodel\u6587\u4ef6\u8def\u5f84\u3002 -i , --image : \u56fe\u7247\u6587\u4ef6\u6216\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\u6216 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u3002 --dump_bin : \u662f\u5426\u4ee5\u4e8c\u8fdb\u5236\u5f62\u5f0fdump\u6bcf\u4e00\u5c42\u7ed3\u679c\u3002 dump_bin\u53ef\u9009 True / False True: Dump\u7ed3\u679c\u4ee5\u4e8c\u8fdb\u5236\u5f62\u5f0f\u4fdd\u5b58\u4e8e\u5f53\u524d\u8fd0\u884c\u76ee\u5f55\u4e0b,\u5c06\u81ea\u52a8\u521b\u5efa\u6587\u4ef6\u5939dumpData, \u5185\u5b58\u6709caffe_NHWC_outtensor_dump.bin\u7ed3\u679c\u6587\u4ef6 ./dumpData/caffe_NHWC_outtensor_dump.bin\uff084\u7ef4tensor\u6392\u5e03\u683c\u5f0f\u4e3aNHWC\uff0c\u4e0eSigmaStar\u6a21\u578b\u76f8\u540c\uff09 False: Dump\u7ed3\u679c\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u4fdd\u5b58\u4e8e\u5f53\u524d\u8fd0\u884c\u76ee\u5f55\u4e0b\uff0c\u5c06\u81ea\u52a8\u521b\u5efa\u6587\u4ef6\u5939dumpData\uff0c\u5185\u5b58\u6709caffe_NHWC_outtensor_dump.txt\u7ed3\u679c\u6587\u4ef6\u53caNHWC\u548cNCHW\u6587\u4ef6\u5939 ./dumpData/caffe_NHWC_outtensor_dump.txt\uff084\u7ef4tensor\u6392\u5e03\u683c\u5f0f\u4e3aNHWC\uff0c\u4e0eSigmaStar\u6a21\u578b\u76f8\u540c\uff09 ./dumpData/NHWC\uff08\u6bcf\u5c42\u8f93\u51fa\u5355\u72ec\u751f\u6210\u6587\u4ef6\uff0c4\u7ef4tensor\u6392\u5e03\u683c\u5f0f\u4e3aNHWC\uff0c\u4e0eSigmaStar\u6a21\u578b\u76f8\u540c\uff09 ./dumpData/NCHW\uff08\u6bcf\u5c42\u8f93\u51fa\u5355\u72ec\u751f\u6210\u6587\u4ef6\uff0c4\u7ef4tensor\u6392\u5e03\u683c\u5f0f\u4e3aNCHW\uff0c\u4e0e\u539f\u6a21\u578b\u6392\u5e03\u76f8\u540c\uff09 \u5982\u679c\u9700\u8981[6.2.2 \u4f7f\u7528auto_dump_debug.sh\u811a\u672c\u5206\u6790\u6570\u636e]\u529f\u80fd\uff0c\u52a1\u5fc5\u4f7f\u7528 True\u3002 -n , --preprocess : \u524d\u5904\u7406\u65b9\u6cd5\uff0c\u8bf7\u76f4\u63a5\u7ed9\u5b9a\u524d\u5904\u7406python\u6587\u4ef6\u8def\u5f84\u3002\u9700\u8981\u786e\u4fdd\u524d\u5904\u7406python\u6587\u4ef6\u4e2d\u5305\u542b get_image \u51fd\u6570\uff0c\u5e76\u4e14\u8be5\u51fd\u6570\u5e26\u6709 nchw \u53c2\u6570\u7528\u6765\u5904\u7406\u539f\u6a21\u578b4\u7ef4\u8f93\u5165\u7684\u6392\u5e03\u4e3aNCHW\uff08caffe_dump_data.py\u4f1a\u76f4\u63a5\u8c03\u7528get_image\u51fd\u6570\u6765\u751f\u6210\u6a21\u578binput\u6570\u636e\uff0c\u5e76\u4e14\u5f3a\u5236nchw=True\uff09\u3002 \u524d\u5904\u7406\u811a\u672c\u51fd\u6570\u793a\u4f8b\uff1a def get_image ( img_path, resizeH = 224 , resizeW = 224 , resizeC = 3 , norm = True, meanB = 104 , meanG = 117 , meanR = 123 , std = 58 .82, rgb = False, nchw = False ) : ... ... if nchw: # NCHW img_norm = np.transpose ( img_norm.reshape ( resizeH, resizeW, -1 ) , axes =( 2 , 0 , 1 )) return np.expand_dims ( img_norm, 0 ) Please Note: \u82e5\u6a21\u578b\u4e3a \u591a\u8f93\u5165 \u65f6\uff0c -n,--preprocess \u53c2\u6570\u7528\u6cd5\u9700\u8981\u591a\u4e2a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4f8b\u5982 -n preprocess1.py,preprocess2.py \u6216\u8005 --preprocess preprocess1.py,preprocess2.py \u82e5\u6a21\u578b\u4e3a \u591a\u8f93\u5165 \u65f6\uff0c -i/--image \u53c2\u6570\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\u3002 6.2.1.3 Dump\u89e3\u6790Onnx\u539f\u6a21\u578b \u00b6 (1) \u5de5\u5177\u7684\u4f4d\u7f6e\u5728 SGS_IPU_SDK/DumpDebug/code/onnx_dump_data.py \u3002 (2) onnx_dump_data.py\u811a\u672c\u9700\u8981\u4f7f\u7528 python3 \u8fd0\u884c\uff08\u4e0eIPU SDK\u73af\u5883\u76f8\u540c\uff09\uff0c\u7528\u4e8e\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u6216\u8005\u4e8c\u8fdb\u5236\u5f62\u5f0fdump\u51faOnnx\u539f\u6a21\u578b\u6bcf\u4e00\u5c42\u7684\u6570\u636e\u3002 (3) \u4f7f\u7528\u793a\u4f8b\uff1a python3 onnx_dump_data.py \\ --model_file onnx_mobilenet_v2.onnx \\ --image ./img.bmp \\ --dump_bin True \\ -n onnx_mobilenet_v2.py (4) \u4f7f\u7528\u53c2\u6570\u8bf4\u660e\uff1a \u2460 \u5fc5\u9009\u53c2\u6570\u8bf4\u660e\uff1a --model_file : Onnx\u539f\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 -i , --image : \u56fe\u7247\u6587\u4ef6\u6216\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\u6216 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u3002 --dump_bin : \u662f\u5426\u4ee5\u4e8c\u8fdb\u5236\u5f62\u5f0fdump\u6bcf\u4e00\u5c42\u7ed3\u679c\u3002 dump_bin\u53ef\u9009 True / False True: Dump\u7ed3\u679c\u4ee5\u4e8c\u8fdb\u5236\u5f62\u5f0f\u4fdd\u5b58\u4e8e\u5f53\u524d\u8fd0\u884c\u76ee\u5f55\u4e0b,\u5c06\u81ea\u52a8\u521b\u5efa\u6587\u4ef6\u5939dumpData, \u5185\u5b58\u6709caffe_NHWC_outtensor_dump.bin\u7ed3\u679c\u6587\u4ef6 ./dumpData/caffe_NHWC_outtensor_dump.bin\uff084\u7ef4tensor\u6392\u5e03\u683c\u5f0f\u4e3aNHWC\uff0c\u4e0eSigmaStar\u6a21\u578b\u76f8\u540c\uff09 False: Dump\u7ed3\u679c\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u4fdd\u5b58\u4e8e\u5f53\u524d\u8fd0\u884c\u76ee\u5f55\u4e0b\uff0c\u5c06\u81ea\u52a8\u521b\u5efa\u6587\u4ef6\u5939dumpData\uff0c\u5185\u5b58\u6709caffe_NHWC_outtensor_dump.txt\u7ed3\u679c\u6587\u4ef6\u53caNHWC\u548cNCHW\u6587\u4ef6\u5939 ./dumpData/caffe_NHWC_outtensor_dump.txt\uff084\u7ef4tensor\u6392\u5e03\u683c\u5f0f\u4e3aNHWC\uff0c\u4e0eSigmaStar\u6a21\u578b\u76f8\u540c\uff09 ./dumpData/NHWC\uff08\u6bcf\u5c42\u8f93\u51fa\u5355\u72ec\u751f\u6210\u6587\u4ef6\uff0c4\u7ef4tensor\u6392\u5e03\u683c\u5f0f\u4e3aNHWC\uff0c\u4e0eSigmaStar\u6a21\u578b\u76f8\u540c\uff09 ./dumpData/NCHW\uff08\u6bcf\u5c42\u8f93\u51fa\u5355\u72ec\u751f\u6210\u6587\u4ef6\uff0c4\u7ef4tensor\u6392\u5e03\u683c\u5f0f\u4e3aNCHW\uff0c\u4e0e\u539f\u6a21\u578b\u6392\u5e03\u76f8\u540c\uff09 \u5982\u679c\u9700\u8981[6.2.2 \u4f7f\u7528auto_dump_debug.sh\u811a\u672c\u5206\u6790\u6570\u636e]\u529f\u80fd\uff0c\u52a1\u5fc5\u4f7f\u7528 True\u3002 -n , --preprocess : \u524d\u5904\u7406\u65b9\u6cd5\uff0c\u8bf7\u76f4\u63a5\u7ed9\u5b9a\u524d\u5904\u7406python\u6587\u4ef6\u8def\u5f84\u3002\u9700\u8981\u786e\u4fdd\u524d\u5904\u7406python\u6587\u4ef6\u4e2d\u5305\u542b get_image \u51fd\u6570\uff0c\u5e76\u4e14\u8be5\u51fd\u6570\u5e26\u6709 nchw \u53c2\u6570\u7528\u6765\u5904\u7406\u539f\u6a21\u578b4\u7ef4\u8f93\u5165\u7684\u6392\u5e03\u4e3aNCHW\uff08onnx_dump_data.py\u4f1a\u76f4\u63a5\u8c03\u7528get_image\u51fd\u6570\u6765\u751f\u6210\u6a21\u578binput\u6570\u636e\uff0c\u5e76\u4e14\u5f3a\u5236nchw=True\uff09\u3002 \u524d\u5904\u7406\u811a\u672c\u51fd\u6570\u793a\u4f8b\uff1a def get_image ( img_path, resizeH = 224 , resizeW = 224 , resizeC = 3 , norm = True, meanB = 104 , meanG = 117 , meanR = 123 , std = 58 .82, rgb = False, nchw = False ) : ... ... if nchw: # NCHW img_norm = np.transpose ( img_norm.reshape ( resizeH, resizeW, -1 ) , axes =( 2 , 0 , 1 )) return np.expand_dims ( img_norm, 0 ) Please Note: \u82e5\u6a21\u578b\u4e3a \u591a\u8f93\u5165 \u65f6\uff0c -n,--preprocess \u53c2\u6570\u7528\u6cd5\u9700\u8981\u591a\u4e2a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4f8b\u5982 -n preprocess1.py,preprocess2.py \u6216\u8005 --preprocess preprocess1.py,preprocess2.py \u82e5\u6a21\u578b\u4e3a \u591a\u8f93\u5165 \u65f6\uff0c -i/--image \u53c2\u6570\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\u3002 6.2.2 \u4f7f\u7528auto_dump_debug.sh\u811a\u672c\u5206\u6790\u6570\u636e \u00b6 \u5de5\u5177\u7684\u4f4d\u7f6e\u5728 SGS_IPU_SDK/DumpDebug/auto_dump_debug.sh \u3002 6.2.2.1 \u5bf9\u6bd4\u5206\u6790SigmaStar\u6d6e\u70b9\u4e0e\u5b9a\u70b9\u6a21\u578b \u00b6 (1) auto_dump_debug.sh\u811a\u672c\u80fd\u591f\u5bf9\u6bd4\u6837\u672c bin\uff08sample\uff09\u548c\u57fa\u51c6 bin\uff08benchmark\uff09\u7684\u76f8\u540coutput tensor\u5c42\u7684COS\u3001MSE\u548cRMSE\uff0c\u9700\u4f7f\u7528 6.2.1.1 \u4e2dDump\u51fa\u7684\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u548c\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u7684bin\u6587\u4ef6\u3002 (2) \u4f7f\u7528\u793a\u4f8b\uff1a ./auto_dump_debug.sh \\ /home/user/SGS_IPU_SDK \\ /home/user/sample.bin \\ /home/user/benchmark.bin (3) \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a Param1 : SGS_IPU_SDK \u7684\u8def\u5f84\uff0c\u5982\u679c\u5728\u5f53\u524d\u4f4d\u7f6e\uff0c\u53ea\u9700\u4f20\u76ee\u5f55\u5939\u540d\u3002 Param2 : \u9700\u8981\u5bf9\u6bd4\u7684\u5df2\u7ecf dump\u51fa\u6765\u7684sample bin\u8def\u5f84\uff0c\u6b64\u5904\u5e94\u4e3a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578bDump\u51fa\u7684bin\u6587\u4ef6\u8def\u5f84\u3002 Param3 : \u4f5c\u4e3a\u53c2\u8003\u7684\u5df2\u7ecf dump\u51fa\u6765\u7684 benchmark bin\u8def\u5f84\uff0c\u6b64\u5904\u5e94\u4e3a\u6d6e\u70b9\u7f51\u7edc\u6a21\u578bDump\u51fa\u7684bin\u6587\u4ef6\u8def\u5f84\u3002 (4) \u5206\u6790\u7ed3\u679c\u5c55\u793a \u4f7f\u7528\u987b\u77e5 auto_dump_debug.sh\u811a\u672c\u5bf9\u6bd4\u7ed3\u679c\u5c06\u53d7DebugConfig.txt\u4e2ddisableDomainFuseOps\u5f71\u54cd\u3002 \u2460 \u672a\u5f00\u542fdisableDomainFuseOps\u9009\u9879\u65f6\uff0c\u5b8c\u6210\u5206\u6790\u540e\u663e\u793a\u5982\u4e0b\uff1a\uff08\u90e8\u5206\uff09 3.conv1_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000046 COS:0.999898 RMSE:0.014310 4.pool1.xx.output0 OP_TYPE:MAX_POOL_2D MSE:0.000057 COS:0.999931 RMSE:0.011018 7.res2a_branch1_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000076 COS:0.999886 RMSE:0.015652 11.res2a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000027 COS:0.999652 RMSE:0.023612 16.res2a_xx.xx.output0 OP_TYPE:RELU MSE:0.000177 COS:0.999644 RMSE:0.025049 20.res2b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000069 COS:0.999242 RMSE:0.039121 25.res2b_xx.xx.output0 OP_TYPE:RELU MSE:0.000430 COS:0.999452 RMSE:0.030551 28.res3a_branch1_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000165 COS:0.998975 RMSE:0.041644 32.res3a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000139 COS:0.998842 RMSE:0.048416 37.res3a_xx.xx.output0 OP_TYPE:RELU MSE:0.000297 COS:0.999069 RMSE:0.041043 41.res3b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000070 COS:0.998836 RMSE:0.051215 46.res3b_xx.xx.output0 OP_TYPE:RELU MSE:0.000366 COS:0.999035 RMSE:0.042863 49.res4a_branch1_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000026 COS:0.999282 RMSE:0.035575 53.res4a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000108 COS:0.998950 RMSE:0.047213 58.res4a_xx.xx.output0 OP_TYPE:RELU MSE:0.000149 COS:0.999174 RMSE:0.040582 62.res4b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000030 COS:0.999020 RMSE:0.046630 67.res4b_xx.xx.output0 OP_TYPE:RELU MSE:0.000168 COS:0.999073 RMSE:0.041229 70.res5a_branch1_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000305 COS:0.999276 RMSE:0.033715 74.res5a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000032 COS:0.998723 RMSE:0.053469 79.res5a_xx.xx.output0 OP_TYPE:RELU MSE:0.000507 COS:0.998762 RMSE:0.050663 83.res5b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000027 COS:0.998182 RMSE:0.064201 88.res5b_xx.xx.output0 OP_TYPE:RELU MSE:0.006022 COS:0.998665 RMSE:0.056931 89.pool5.xx.output0 OP_TYPE:AVG_POOL_2D MSE:0.004321 COS:0.998488 RMSE:0.079694 90.fc1000_reshape#1_output#183.output0 OP_TYPE:ReshapeAliasMSE:0.004321 COS:0.998488 RMSE:0.079694 91.fc1000#185.xx.output0 OP_TYPE:CONV_2D MSE:0.014197 COS:0.998901 RMSE:0.051447 92.fc1000.xx.output0 OP_TYPE:ReshapeAliasMSE:0.014197 COS:0.998901 RMSE:0.051447 93.prob.xx.output0 OP_TYPE:Fix2Float MSE:0.000000 COS:1.000000 RMSE:0.000152 \u2461 \u5f00\u542fdisableDomainFuseOps\u9009\u9879\u65f6\uff0c\u5b8c\u6210\u5206\u6790\u540e\u663e\u793a\u5982\u4e0b\uff1a\uff08\u90e8\u5206\uff09 0.conv1.xx.output0 OP_TYPE:CONV_2D MSE:2.397930 COS:0.999887 RMSE:0.019312 1.conv1_xx.xx.output0 OP_TYPE:MUL MSE:0.000037 COS:0.999850 RMSE:0.020800 2.conv1_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000037 COS:0.999936 RMSE:0.010667 3.conv1_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000052 COS:0.999885 RMSE:0.015123 4.pool1.xx.output0 OP_TYPE:MAX_POOL_2D MSE:0.000063 COS:0.999924 RMSE:0.011603 5.res2a_branch1.xx.output0 OP_TYPE:CONV_2D MSE:0.000096 COS:0.999952 RMSE:0.009368 6.res2a_branch1_xx.xx.output0 OP_TYPE:MUL MSE:0.000080 COS:0.999956 RMSE:0.009144 7.res2a_branch1_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000080 COS:0.999880 RMSE:0.016141 8.res2a_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.000349 COS:0.999951 RMSE:0.009727 9.res2a_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000049 COS:0.999956 RMSE:0.009349 10.res2a_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000049 COS:0.999886 RMSE:0.016510 11.res2a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000028 COS:0.999641 RMSE:0.024211 12.res2a_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000100 COS:0.999821 RMSE:0.018379 13.res2a_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.000118 COS:0.999832 RMSE:0.017982 14.res2a_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000118 COS:0.999670 RMSE:0.024984 15.res2a.xx.output0 OP_TYPE:ADD MSE:0.000241 COS:0.999771 RMSE:0.021801 16.res2a_xx.xx.output0 OP_TYPE:RELU MSE:0.000182 COS:0.999634 RMSE:0.025262 17.res2b_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.000525 COS:0.999709 RMSE:0.023127 18.res2b_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000193 COS:0.999746 RMSE:0.022434 19.res2b_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000193 COS:0.999474 RMSE:0.032121 20.res2b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000071 COS:0.999219 RMSE:0.039747 21.res2b_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000157 COS:0.999549 RMSE:0.030371 22.res2b_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.000272 COS:0.999587 RMSE:0.029537 23.res2b_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000272 COS:0.999151 RMSE:0.040304 24.res2b.xx.output0 OP_TYPE:ADD MSE:0.000534 COS:0.999425 RMSE:0.031402 25.res2b_xx.xx.output0 OP_TYPE:RELU MSE:0.000448 COS:0.999429 RMSE:0.031203 26.res3a_branch1.xx.output0 OP_TYPE:CONV_2D MSE:0.000267 COS:0.999320 RMSE:0.034101 27.res3a_branch1_xx.xx.output0 OP_TYPE:MUL MSE:0.000169 COS:0.999345 RMSE:0.034331 28.res3a_branch1_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000169 COS:0.998949 RMSE:0.042434 29.res3a_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.001885 COS:0.999472 RMSE:0.030785 30.res3a_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000427 COS:0.999486 RMSE:0.030586 31.res3a_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000427 COS:0.998909 RMSE:0.045188 32.res3a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000147 COS:0.998773 RMSE:0.049700 33.res3a_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000331 COS:0.999425 RMSE:0.034038 34.res3a_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.000368 COS:0.999411 RMSE:0.034275 35.res3a_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000368 COS:0.998931 RMSE:0.044919 36.res3a.xx.output0 OP_TYPE:ADD MSE:0.000585 COS:0.999040 RMSE:0.042398 37.res3a_xx.xx.output0 OP_TYPE:RELU MSE:0.000301 COS:0.999058 RMSE:0.041479 38.res3b_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.000811 COS:0.999530 RMSE:0.029739 39.res3b_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000288 COS:0.999580 RMSE:0.028879 40.res3b_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000288 COS:0.999383 RMSE:0.033874 41.res3b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000073 COS:0.998787 RMSE:0.052493 42.res3b_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000136 COS:0.999469 RMSE:0.033442 43.res3b_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.000314 COS:0.999489 RMSE:0.033050 44.res3b_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000314 COS:0.999308 RMSE:0.036079 45.res3b.xx.output0 OP_TYPE:ADD MSE:0.000659 COS:0.998989 RMSE:0.042628 46.res3b_xx.xx.output0 OP_TYPE:RELU MSE:0.000375 COS:0.999011 RMSE:0.043575 47.res4a_branch1.xx.output0 OP_TYPE:CONV_2D MSE:0.000098 COS:0.999264 RMSE:0.037842 48.res4a_branch1_xx.xx.output0 OP_TYPE:MUL MSE:0.000027 COS:0.999298 RMSE:0.037615 49.res4a_branch1_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000027 COS:0.999253 RMSE:0.036302 50.res4a_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.001011 COS:0.999543 RMSE:0.028507 51.res4a_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000300 COS:0.999544 RMSE:0.028563 52.res4a_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000300 COS:0.999147 RMSE:0.040221 53.res4a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000107 COS:0.998961 RMSE:0.047238 54.res4a_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000335 COS:0.999464 RMSE:0.032660 55.res4a_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.000255 COS:0.999453 RMSE:0.032788 56.res4a_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000255 COS:0.999234 RMSE:0.038888 57.res4a.xx.output0 OP_TYPE:ADD MSE:0.000312 COS:0.999298 RMSE:0.036873 58.res4a_xx.xx.output0 OP_TYPE:RELU MSE:0.000146 COS:0.999191 RMSE:0.040181 59.res4b_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.000369 COS:0.999748 RMSE:0.021992 60.res4b_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000156 COS:0.999772 RMSE:0.021527 61.res4b_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000156 COS:0.999625 RMSE:0.026857 62.res4b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000028 COS:0.999073 RMSE:0.045494 63.res4b_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000048 COS:0.999748 RMSE:0.022612 64.res4b_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.000191 COS:0.999751 RMSE:0.022354 65.res4b_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000191 COS:0.999678 RMSE:0.024581 66.res4b.xx.output0 OP_TYPE:ADD MSE:0.000337 COS:0.999448 RMSE:0.032108 67.res4b_xx.xx.output0 OP_TYPE:RELU MSE:0.000160 COS:0.999113 RMSE:0.040588 68.res5a_branch1.xx.output0 OP_TYPE:CONV_2D MSE:0.000072 COS:0.999179 RMSE:0.038052 69.res5a_branch1_xx.xx.output0 OP_TYPE:MUL MSE:0.000290 COS:0.999179 RMSE:0.038130 70.res5a_branch1_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000290 COS:0.999311 RMSE:0.032880 71.res5a_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.000355 COS:0.999758 RMSE:0.020371 72.res5a_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000133 COS:0.999750 RMSE:0.020561 73.res5a_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000133 COS:0.999613 RMSE:0.026392 74.res5a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000028 COS:0.998859 RMSE:0.051003 75.res5a_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000063 COS:0.999512 RMSE:0.031809 76.res5a_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.001009 COS:0.999480 RMSE:0.032233 77.res5a_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.001009 COS:0.999257 RMSE:0.039436 78.res5a.xx.output0 OP_TYPE:ADD MSE:0.001413 COS:0.999379 RMSE:0.034297 79.res5a_xx.xx.output0 OP_TYPE:RELU MSE:0.000457 COS:0.998876 RMSE:0.048274 80.res5b_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.001387 COS:0.999842 RMSE:0.015781 81.res5b_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000239 COS:0.999839 RMSE:0.015798 82.res5b_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000239 COS:0.999639 RMSE:0.026762 83.res5b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000023 COS:0.998458 RMSE:0.058598 84.res5b_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000041 COS:0.999061 RMSE:0.041137 85.res5b_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.007750 COS:0.999058 RMSE:0.041188 86.res5b_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.007751 COS:0.998732 RMSE:0.052601 87.res5b.xx.output0 OP_TYPE:ADD MSE:0.008533 COS:0.998792 RMSE:0.052043 88.res5b_xx.xx.output0 OP_TYPE:RELU MSE:0.004860 COS:0.998924 RMSE:0.051718 89.pool5.xx.output0 OP_TYPE:AVG_POOL_2D MSE:0.004061 COS:0.998601 RMSE:0.078395 90.fc1000_reshape#1_output#183.output0 OP_TYPE:ReshapeAliasMSE:0.004061 COS:0.998601 RMSE:0.078395 91.fc1000#185.xx.output0 OP_TYPE:CONV_2D MSE:0.013363 COS:0.998935 RMSE:0.050327 92.fc1000.xx.output0 OP_TYPE:ReshapeAliasMSE:0.013363 COS:0.998935 RMSE:0.050327 93.prob.xx.output0 OP_TYPE:SOFTMAX MSE:0.000000 COS:1.000000 RMSE:0.000152 6.2.2.2 \u5bf9\u6bd4\u5206\u6790SigmaStar\uff08\u6d6e\u70b9/\u5b9a\u70b9\uff09\u6a21\u578b\u4e0e\u539f\u6a21\u578b\uff08Caffe/Onnx\uff09 \u00b6 (1) auto_dump_debug.sh\u811a\u672c\u540c\u6837\u80fd\u591f\u5bf9\u6bd4SigmaStar\uff08\u6d6e\u70b9/\u5b9a\u70b9\uff09\u6a21\u578b\u4e0e\u539f\u6a21\u578b\uff08Caffe/Onnx\uff09\u76f8\u540coutput tensor\u5c42\u7684COS\u3001MSE\u548cRMSE\u3002\u6253\u5370\u683c\u5f0f\u4e0e 6.2.2.1 \u76f8\u540c\u3002 (2) \u4f7f\u7528\u793a\u4f8b\uff1a \u2460 \u4e0eCaffe\u539f\u6a21\u578b\u5bf9\u6bd4\uff1a ./auto_dump_debug.sh \\ /home/user/SGS_IPU_SDK \\ /home/user/sigma_outtensor_dump.bin \\ /home/user/caffe_NHWC_outtensor_dump.bin \u2461 \u4e0eOnnx\u539f\u6a21\u578b\u5bf9\u6bd4\uff1a ./auto_dump_debug.sh \\ /home/user/SGS_IPU_SDK \\ /home/user/sigma_outtensor_dump.bin \\ /home/user/onnx_NHWC_outtensor_dump.bin (3) \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a Param1 : SGS_IPU_SDK \u7684\u8def\u5f84\uff0c\u5982\u679c\u5728\u5f53\u524d\u4f4d\u7f6e\uff0c\u53ea\u9700\u4f20\u76ee\u5f55\u5939\u540d\u3002 Param2 : \u9700\u8981\u5bf9\u6bd4\u7684\u5df2\u7ecf dump\u51fa\u6765\u7684sample bin\u8def\u5f84\uff0c\u6b64\u5904\u5e94\u4e3aSigmaStar\u7f51\u7edc\u6a21\u578b\uff08\u6d6e\u70b9/\u5b9a\u70b9\uff09Dump\u51fa\u7684bin\u6587\u4ef6\u8def\u5f84\u3002 Param3 : \u4f5c\u4e3a\u53c2\u8003\u7684\u5df2\u7ecf dump\u51fa\u6765\u7684 benchmark bin\u8def\u5f84\uff0c\u6b64\u5904\u5e94\u4e3a\u539f\u6a21\u578b\uff08Caffe/Onnx\uff09Dump\u51fa\u7684bin\u6587\u4ef6\u8def\u5f84\u3002 \u4f7f\u7528\u987b\u77e5 \u5c06 6.2.1.1 \u4e2dDump\u51fa\u7684\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6216\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u7684bin\u6587\u4ef6\u4f5c\u4e3a\u6837\u672c bin\uff08sample\uff09\uff0c\u4f20\u5165Param2\uff0c\u4e0d\u5f97\u4f20\u5165Param3\u3002 \u5c06 6.2.1.2 \u6216 6.2.1.3 \u4e2dDump\u51fa\u7684\u539f\u6a21\u578bbin\u6587\u4ef6\u4f5c\u4e3a\u57fa\u51c6 bin\uff08benchmark\uff09\uff0c\u4f20\u5165Param3\uff0c\u4e0d\u5f97\u4f20\u5165Param2\u3002 6.3. SegmentFault\u9519\u8bef\u5904\u7406 \u00b6 \u5f53\u8fd0\u884c\u65f6\u53d1\u751fSegmentFault\u9519\u8bef\u65f6\uff0c\u7a0b\u5e8f\u4e2d\u65ad\u8fd0\u884c\uff0c\u6b64\u65f6\u5b9a\u4f4d\u7a0b\u5e8f\u53d1\u751f\u9519\u8bef\u4f4d\u7f6e\u81f3\u5173\u91cd\u8981\u3002\u8bf7\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\uff0c\u534f\u52a9\u63d0\u4f9b\u76f8\u5173\u4fe1\u606f\u3002 (1) \u4fee\u6539\u751f\u6210core\u6587\u4ef6\u8def\u5f84\u4e3a\u5f53\u524d\u76ee\u5f55\uff0c\u5e76\u8bbe\u7f6ecore\u6587\u4ef6\u5927\u5c0f\u65e0\u4e0a\u9650\uff1a echo core > /proc/sys/kernel/core_pattern ulimit -c unlimited (2) \u91cd\u65b0\u8fd0\u884c\u521a\u521a\u53d1\u751f\u9519\u8bef\u7684\u8f6c\u6362\u7f51\u7edc\u547d\u4ee4\u3002 (3) \u751f\u6210core\u6587\u4ef6\u540e\uff0c\u8fd0\u884c\u5982\u4e0b\u547d\u4ee4\uff0c\u4f1a\u6253\u5370\u7a0b\u5e8f\u76f8\u5173\u4fe1\u606f\uff1a ~/SGS_IPU_SDK/DumpDebug/show_address.sh /path/to/SGS_IPU_SDK/bin/XXX /path/to/core show_address.sh\u811a\u672c\u9700\u8981\u4e24\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u6267\u884c\u547d\u4ee4\u7684bin\u7684\u8def\u5f84\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3acore\u7684\u8def\u5f84\u3002 \u5c4f\u5e55\u4f1a\u6253\u5370\u5185\u5b58\u6620\u5c04\u4fe1\u606f\u4ee5\u53ca\u7a0b\u5e8f\u51fd\u6570\u5806\u6808\u5730\u5740\uff0c\u8bf7\u53cd\u9988\u6b64\u4fe1\u606f\u3002 6.4. \u76f8\u5173\u95ee\u9898\u6c47\u603b \u00b6 DumpDebug Tool\u63d0\u4f9b\u4e86\u6a21\u578b\u91cf\u5316\u540e\u7cbe\u5ea6\u4e0b\u964d\u95ee\u9898\u7684\u6392\u67e5\u65b9\u6cd5\uff0c\u53ef\u7528\u4e8e\u9488\u5bf9\u5b9e\u9645\u95ee\u9898\u53c2\u8003\u3002 \u4f7f\u7528calibrator\u65f6\uff0c --quant_level \u9009\u62e9L2\u3001L3\u3001L4\u6216L5\u65f6\u4f1a\u6839\u636e\u7edf\u8ba1\u4fe1\u606f\u81ea\u52a8\u914d\u7f6e\u5377\u79ef\u7684\u91cf\u5316\u65b9\u5f0f\uff0c\u5982\u679ccalibrator\u672a\u80fd\u5c06\u4ee5\u4e0b\u60c5\u51b5\u7684\u5377\u79ef\u4fee\u6539\u6210\u201dINT16\u201d\u5377\u79ef\u6a21\u5f0f\uff0c\u8bf7\u5728input config\u4e2d\u901a\u8fc7\u914d\u7f6eCONV_CONFIG\u7684tensor_arrays\u65b9\u5f0f\u624b\u52a8\u5f00\u542f\u3002 \u4f7f\u7528auto_dump_debug.sh\u811a\u672c\u5206\u6790\u6570\u636e \u529f\u80fd\u5bf9\u6bd4\u6570\u636e\u540e\uff0c\u5982\u679cRMSE\u503c\u8f83\u5927\uff08\u4e00\u822c\u8ba4\u4e3a\u5927\u4e8e0.5\uff09\uff0c\u53ef\u5c06\u8be5\u5c42\u524d\u7684\u5377\u79ef\u8f93\u5165\u5c42\u5f00\u542f INT16 \u5377\u79ef\u6a21\u5f0f\u3002 \u4fee\u6539input_config.ini\u6587\u4ef6\u540e\u9700\u8981\u91cd\u65b0\u4ece\u539f\u59cb\u6846\u67b6\u8bad\u7ec3\u7684\u6a21\u578b\u8f6c\u6362 \u3002","title":"DumpDebug Tool"},{"location":"module/User_Guide/IPU260/DumpDebug_Tool.html#61-dumpdebug-tool","text":"DumpDebugTool \u8bf4\u660e \u5de5\u5177\u4f4d\u7f6e SGS_IPU_SDK/DumpDebug/ \u5de5\u5177\u4f5c\u7528 \u63d0\u4f9b\u6a21\u578b\u91cf\u5316\u540e\u7cbe\u5ea6\u4e0b\u964d\u95ee\u9898\u7684\u6392\u67e5\u65b9\u6cd5 \u89e3\u6790\u7f51\u7edc\u6a21\u578b\u6570\u636e \u5bf9\u6bd4\u4e0d\u540c\u9636\u6bb5\u7684\u7f51\u7edc\u6a21\u578b\u6570\u636e \u4f7f\u7528\u987b\u77e5 \u2460 SigmaStar DLA SDK\u5728\u8f6c\u6362\u7f51\u7edc\u65f6\u7684\u6570\u636e\u4e00\u81f4\u6027\u8bf4\u660e\uff1a \u539f\u59cb\u6a21\u578b\u8f6c\u5316\u4e3aSigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\uff1a Caffe\u3001Onnx\u3001TensorFlow\u7684\u7f51\u7edc\u6a21\u578b\u4e0eSigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u7684\u7ed3\u679c\u5b8c\u5168\u4e00\u81f4; SigmaStar\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u5316\u4e3aSigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff1a \u6709\u7cbe\u5ea6\u5dee\u522b\u7684\u53ea\u6709\u5728SigmaStar\u6d6e\u70b9\u6a21\u578b\u8f6c\u6362\u4e3aSigmaStar\u5b9a\u70b9\u8fd9\u4e2a\u9636\u6bb5; SigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u5316\u4e3aSigmaStar\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\uff1a SigmaStar\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u4e0eSigmaStar\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u7684\u7ed3\u679c\u5b8c\u5168\u4e00\u81f4; \u2461 \u53d1\u73b0SigmaStar\u5b9a\u70b9\u7f51\u7edc\u7684\u7ed3\u679c\u4e0e\u539f\u6709\u6d6e\u70b9\u7684\u7ed3\u679c\u76f8\u5dee\u8f83\u591a\u65f6\uff0c\u4f7f\u7528DumpDebug Tool\u53ef\u4ee5\u68c0\u67e5\u8f6c\u6362\u540e\u5b9a\u70b9\u7f51\u7edc\u7684\u9519\u8bef\u3002 \u5bf9\u6bd4\u5206\u6790SigmaStar\u6d6e\u70b9\u4e0e\u5b9a\u70b9\u6a21\u578b \u2462 DumpDebug Tool\u4e5f\u53ef\u7528\u4e8e\u76f4\u63a5dump\u539f\u6a21\u578bCaffe/Onnx\u7684\u6bcf\u4e00\u5c42\u6570\u636e\uff0c\u4ee5\u4fbf\u4e0eSigmaStar\u6a21\u578b\u8fdb\u884c\u5bf9\u6bd4\u3002 \u5bf9\u6bd4\u5206\u6790SigmaStar\uff08\u6d6e\u70b9/\u5b9a\u70b9\uff09\u6a21\u578b\u4e0e\u539f\u6a21\u578b\uff08Caffe/Onnx\uff09","title":"6.1. DumpDebug Tool\u7b80\u4ecb"},{"location":"module/User_Guide/IPU260/DumpDebug_Tool.html#62-dumpdebug-tool","text":"","title":"6.2. DumpDebug Tool\u5de5\u5177\u4f7f\u7528\u8bf4\u660e"},{"location":"module/User_Guide/IPU260/DumpDebug_Tool.html#621-dumpdebug-tool","text":"","title":"6.2.1 DumpDebug Tool\u5de5\u5177\u5982\u4f55\u89e3\u6790\u7f51\u7edc\u6a21\u578b\u6570\u636e"},{"location":"module/User_Guide/IPU260/DumpDebug_Tool.html#6211-dumpsigmastar","text":"setp1: \u5728 SGS_IPU_SDK/cfg \u6587\u4ef6\u5939\u4e2d\u627e\u5230DebugConfig.txt\u6587\u4ef6\uff0c\u590d\u5236\u5230\u5f53\u524d\u8fd0\u884c\u8def\u5f84\u4e0b. step2: \u6253\u5f00DebugConfig.txt\uff0c\u4fee\u6539\u6587\u4ef6\u5185\u5bb9\uff1a dumpTensor eliminateGarbage dequantFixed #dumpasstring #disableDomainFuseOps path = \u4f7f\u7528\u987b\u77e5 DebugConfig.txt\u5404\u53c2\u6570\u4f5c\u7528: dumpTensor : Dump\u7f51\u7edc\u6a21\u578b\u5404\u5c42\u6570\u636e\u603b\u5f00\u5173\u3002 eliminateGarbage : Dump\u7f51\u7edc\u6a21\u578b\u6570\u636e\u65f6\u53bb\u9664\u65e0\u7528\u6570\u636e\uff08\u5efa\u8bae\u5f00\u542f\uff09\u3002 dequantFixed : \u9488\u5bf9\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff0c\u5c06\u6574\u5f62\u6570\u636e\u8f6c\u6362\u4e3a\u6d6e\u70b9\u6570\u636e\uff08\u5efa\u8bae\u5f00\u542f\uff09\u3002 dumpasstring : Dump\u7f51\u7edc\u6a21\u578b\u6570\u636e\u4e3a\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u5173\u95ed\u9009\u9879\u4e3a\u4e8c\u8fdb\u5236\u6587\u4ef6\u7c7b\u578b\u3002\uff08\u5982\u679c\u9700\u8981[6.2.2 \u4f7f\u7528auto_dump_debug.sh\u811a\u672c\u5206\u6790\u6570\u636e]\u529f\u80fd\uff0c\u52a1\u5fc5\u5173\u95ed\u6b64\u9009\u9879\uff09\u3002 disableDomainFuseOps : \u8f6c\u6362\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u65f6\uff0c\u53d6\u6d88\u7f51\u7edc\u5c42\u878d\u5408\uff08\u5efa\u8bae\u5173\u95ed\uff09\u3002 path= : \u6307\u5b9a\u751f\u6210\u6863\u6848\u7684\u8f93\u51fa\u5168\u8def\u5f84\uff08path= \u540e\u9762\u786e\u4fdd\u586b\u5199\u7c7b\u4f3c /home/user \u7684\u7edd\u5bf9\u8def\u5f84\u3002\u5982\u679cpath= \u540e\u9762\u6ca1\u6709\u5185\u5bb9\u6216\u6839\u672c\u6ca1\u6709 path= \u7684\u8bdd\uff0c\u5219\u4f1a\u9ed8\u8ba4\u8f93\u51fa\u5230 $HOME \u4f4d\u7f6e\u3002\u53e6\u5916\uff0c\u7edd\u5bf9\u8def\u5f84\u6216 /home/user \u4e0d\u8d85\u8fc7122\u5b57\u8282\uff09\u3002 step3: \u8fd0\u884csimulator\u5bf9\u5355\u5f20\u56fe\u7247\u63a8\u6f14\u3002 \u4f7f\u7528\u987b\u77e5 simulator\u5de5\u5177\u4f7f\u7528\u8be6\u89c1 simulator step4: \u63a8\u6f14\u5b8c\u6210\u540e\uff0c\u4f1a\u5728DebugConfig.txt\u6587\u4ef6\u4e2d path= \u53c2\u6570\u6307\u5b9a\u7684\u76ee\u5f55\u4e0b\u751f\u6210sigma_outtensor_dump.bin\u6587\u4ef6\uff0c\u7528\u4e8e\u4fdd\u5b58Dump\u51fa\u7684\u7f51\u7edc\u6a21\u578b\u4e2d\u5404\u5c42\u6570\u636e\u3002 \u4f7f\u7528\u987b\u77e5 Dump\u5b8c\u6210\u540e,\u7ed3\u679c\u5c06\u4fdd\u5b58\u5728sigma_outtensor_dump.bin\u6587\u4ef6\u4e2d\uff0c\u82e5\u9700\u91cd\u547d\u540d\uff0c\u8bf7\u52ff\u4fee\u6539\u6587\u4ef6\u540e\u7f00 .bin\u3002 \u65b0\u7684Dump\u4f1a\u590d\u5199sigma_outtensor_dump.bin\u6587\u4ef6\uff0c\u82e5\u91cd\u65b0\u8fd0\u884c\uff0c\u8bf7\u6ce8\u610f\u4fdd\u5b58\u3002 DebugConfig.txt\u6587\u4ef6\u4e2ddisableDomainFuseOps \u9009\u9879\u8bf4\u660e\uff1a \u4f5c\u7528\u4e8e\u8f6c\u6362\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u9636\u6bb5\uff0c\u5efa\u8bae\u5173\u95ed\u3002 \u4f7f\u7528\u65f6\uff0c\u9ed8\u8ba4\u5173\u95ed\u8be5\u9009\u9879\uff0c\u5373calibrator\u5c06\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u6210\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u65f6\u5c06\u8fdb\u884c\u7f51\u7edc\u878d\u5408\uff0c\u5982\u679c\u6253\u5f00\u8be5\u9009\u9879\uff0c\u5219\u5c06\u53d6\u6d88\u7f51\u7edc\u878d\u5408\u529f\u80fd\u3002 \u5173\u95ed\u8be5\u9009\u9879\u65f6\uff0c\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u548c\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u80fd\u591f\u5728\u8f6c\u6362\u65f6\u4f18\u5316\u7f51\u7edc\u6a21\u578b\u7684\u7b97\u5b50\uff0c\u52a0\u901f\u6a21\u578b\u7684\u8fd0\u884c\uff0c\u4f46\u662f\u4e5f\u4f1a\u5f71\u54cd\u7f51\u7edc\u7684\u5c42\u7ea7\u7ed3\u6784\uff0c\u4f7f\u5f97\u90e8\u5206\u7b97\u5b50\u7684\u8f93\u51fa\u4e0d\u4f1a\u88abDump\u5230sigma_outtersor_dump.bin\u6587\u4ef6\u4e2d\u3002 \u5982\u679c\u9700\u8981\u7f51\u7edc\u6a21\u578b\u7684\u6bcf\u4e00\u5c42\u6570\u636e\uff0c\u53ef\u4ee5\u6253\u5f00disableDomainFuseOps\u9009\u9879\uff0c\u91cd\u65b0\u8fd0\u884ccalibrator\u8f6c\u6362\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff0c\u6b64\u65f6\u8f6c\u51fa\u7684\u6a21\u578b\u6ca1\u6709\u878d\u5408\u4f18\u5316\uff0c\u53ef\u4ee5\u8f93\u51fa\u6bcf\u5c42\u7684\u6570\u636e\u3002 \u5bf9\u6bd4\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u548c\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\uff0c\u4f7f\u7528simulator\u4e2d\u53c2\u6570 -t/--type \u548c -m/--model \u6307\u5b9a\u4e0d\u540c\u9636\u6bb5\u7684\u6a21\u578b\uff0c\u5373\u53efDump\u51fa\u4e0d\u540c\u9636\u6bb5\u7684\u7f51\u7edc\u6a21\u578b\u6570\u636e\u3002\u8be6\u89c1 simulator \u3002 \u79bb\u7ebf\u6a21\u578b\u4e0d\u652f\u6301Dump Debug,\u79bb\u7ebf\u6a21\u578b\u7f51\u7edc\u7684\u5c42\u7ea7\u7ed3\u6784Domain\u5df2\u7ecf\u878d\u5408\uff0c\u4e0d\u80fdDump\u7f51\u7edc\u6a21\u578b\u4e2d\u5404\u5c42\u7684\u6570\u636e\u3002 \u4f7f\u7528calibrator\u5c06\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\u4e3a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u65f6\uff0c\u4f1a\u5728SGS_IPU_SDK\u6839\u76ee\u5f55\u4e0b\u4ea7\u751ftensor_min_max.txt \u6587\u4ef6\uff0c\u6b64\u6587\u4ef6\u8bb0\u5f55\u4e86\u7f51\u7edc\u7684\u6bcf\u5c42\u8f93\u5165\u548c\u8f93\u51fa\u7684\u6700\u5927\u4e0e\u6700\u5c0f\u503c\uff0c\u5c06\u5728\u4e4b\u540e\u5206\u6790Dump\u6570\u636e\u65f6\u6709\u7528\u3002","title":"6.2.1.1 Dump\u89e3\u6790SigmaStar\u6d6e\u70b9\u6216\u5b9a\u70b9\u6a21\u578b"},{"location":"module/User_Guide/IPU260/DumpDebug_Tool.html#6212-dumpcaffe","text":"(1) \u5de5\u5177\u7684\u4f4d\u7f6e\u5728 SGS_IPU_SDK/DumpDebug/code/caffe_dump_data.py \u3002 (2) caffe_dump_data.py\u811a\u672c\u9700\u8981\u4f7f\u7528 python2 \u8fd0\u884c\uff08Caffe\u4ec5\u652f\u6301python2\uff09\uff0c\u7528\u4e8e\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u6216\u8005\u4e8c\u8fdb\u5236\u5f62\u5f0fdump\u51faCaffe\u539f\u6a21\u578b\u6bcf\u4e00\u5c42\u7684\u6570\u636e\u3002 (3) \u4f7f\u7528\u793a\u4f8b\uff1a step1: caffe_dump_data.py\u4e2d\u4fee\u6539Caffe\u7684\u8fd0\u884c\u8def\u5f84\uff0c\u6bd4\u5982\uff1a caffe_root = '/home/your_caffe_root' sys.path.insert ( 0 ,caffe_root+ '/python' ) step2: \u8fd0\u884c\u811a\u672c\uff1a python2 caffe_dump_data.py \\ --model_file caffe_mobilenet_v2.prototxt \\ --weight_file caffe_mobilenet_v2.caffemodel \\ --i ./img.bmp \\ --dump_bin True \\ -n ./caffe_mobilenet_v2.py (4) \u4f7f\u7528\u53c2\u6570\u8bf4\u660e\uff1a \u2460 \u5fc5\u9009\u53c2\u6570\u8bf4\u660e\uff1a --model_file : Caffe\u539f\u6a21\u578bprototxt\u6587\u4ef6\u8def\u5f84\u3002 --weight_file : Caffe\u539f\u6a21\u578bcaffemodel\u6587\u4ef6\u8def\u5f84\u3002 -i , --image : \u56fe\u7247\u6587\u4ef6\u6216\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\u6216 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u3002 --dump_bin : \u662f\u5426\u4ee5\u4e8c\u8fdb\u5236\u5f62\u5f0fdump\u6bcf\u4e00\u5c42\u7ed3\u679c\u3002 dump_bin\u53ef\u9009 True / False True: Dump\u7ed3\u679c\u4ee5\u4e8c\u8fdb\u5236\u5f62\u5f0f\u4fdd\u5b58\u4e8e\u5f53\u524d\u8fd0\u884c\u76ee\u5f55\u4e0b,\u5c06\u81ea\u52a8\u521b\u5efa\u6587\u4ef6\u5939dumpData, \u5185\u5b58\u6709caffe_NHWC_outtensor_dump.bin\u7ed3\u679c\u6587\u4ef6 ./dumpData/caffe_NHWC_outtensor_dump.bin\uff084\u7ef4tensor\u6392\u5e03\u683c\u5f0f\u4e3aNHWC\uff0c\u4e0eSigmaStar\u6a21\u578b\u76f8\u540c\uff09 False: Dump\u7ed3\u679c\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u4fdd\u5b58\u4e8e\u5f53\u524d\u8fd0\u884c\u76ee\u5f55\u4e0b\uff0c\u5c06\u81ea\u52a8\u521b\u5efa\u6587\u4ef6\u5939dumpData\uff0c\u5185\u5b58\u6709caffe_NHWC_outtensor_dump.txt\u7ed3\u679c\u6587\u4ef6\u53caNHWC\u548cNCHW\u6587\u4ef6\u5939 ./dumpData/caffe_NHWC_outtensor_dump.txt\uff084\u7ef4tensor\u6392\u5e03\u683c\u5f0f\u4e3aNHWC\uff0c\u4e0eSigmaStar\u6a21\u578b\u76f8\u540c\uff09 ./dumpData/NHWC\uff08\u6bcf\u5c42\u8f93\u51fa\u5355\u72ec\u751f\u6210\u6587\u4ef6\uff0c4\u7ef4tensor\u6392\u5e03\u683c\u5f0f\u4e3aNHWC\uff0c\u4e0eSigmaStar\u6a21\u578b\u76f8\u540c\uff09 ./dumpData/NCHW\uff08\u6bcf\u5c42\u8f93\u51fa\u5355\u72ec\u751f\u6210\u6587\u4ef6\uff0c4\u7ef4tensor\u6392\u5e03\u683c\u5f0f\u4e3aNCHW\uff0c\u4e0e\u539f\u6a21\u578b\u6392\u5e03\u76f8\u540c\uff09 \u5982\u679c\u9700\u8981[6.2.2 \u4f7f\u7528auto_dump_debug.sh\u811a\u672c\u5206\u6790\u6570\u636e]\u529f\u80fd\uff0c\u52a1\u5fc5\u4f7f\u7528 True\u3002 -n , --preprocess : \u524d\u5904\u7406\u65b9\u6cd5\uff0c\u8bf7\u76f4\u63a5\u7ed9\u5b9a\u524d\u5904\u7406python\u6587\u4ef6\u8def\u5f84\u3002\u9700\u8981\u786e\u4fdd\u524d\u5904\u7406python\u6587\u4ef6\u4e2d\u5305\u542b get_image \u51fd\u6570\uff0c\u5e76\u4e14\u8be5\u51fd\u6570\u5e26\u6709 nchw \u53c2\u6570\u7528\u6765\u5904\u7406\u539f\u6a21\u578b4\u7ef4\u8f93\u5165\u7684\u6392\u5e03\u4e3aNCHW\uff08caffe_dump_data.py\u4f1a\u76f4\u63a5\u8c03\u7528get_image\u51fd\u6570\u6765\u751f\u6210\u6a21\u578binput\u6570\u636e\uff0c\u5e76\u4e14\u5f3a\u5236nchw=True\uff09\u3002 \u524d\u5904\u7406\u811a\u672c\u51fd\u6570\u793a\u4f8b\uff1a def get_image ( img_path, resizeH = 224 , resizeW = 224 , resizeC = 3 , norm = True, meanB = 104 , meanG = 117 , meanR = 123 , std = 58 .82, rgb = False, nchw = False ) : ... ... if nchw: # NCHW img_norm = np.transpose ( img_norm.reshape ( resizeH, resizeW, -1 ) , axes =( 2 , 0 , 1 )) return np.expand_dims ( img_norm, 0 ) Please Note: \u82e5\u6a21\u578b\u4e3a \u591a\u8f93\u5165 \u65f6\uff0c -n,--preprocess \u53c2\u6570\u7528\u6cd5\u9700\u8981\u591a\u4e2a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4f8b\u5982 -n preprocess1.py,preprocess2.py \u6216\u8005 --preprocess preprocess1.py,preprocess2.py \u82e5\u6a21\u578b\u4e3a \u591a\u8f93\u5165 \u65f6\uff0c -i/--image \u53c2\u6570\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\u3002","title":"6.2.1.2 Dump\u89e3\u6790Caffe\u539f\u6a21\u578b"},{"location":"module/User_Guide/IPU260/DumpDebug_Tool.html#6213-dumponnx","text":"(1) \u5de5\u5177\u7684\u4f4d\u7f6e\u5728 SGS_IPU_SDK/DumpDebug/code/onnx_dump_data.py \u3002 (2) onnx_dump_data.py\u811a\u672c\u9700\u8981\u4f7f\u7528 python3 \u8fd0\u884c\uff08\u4e0eIPU SDK\u73af\u5883\u76f8\u540c\uff09\uff0c\u7528\u4e8e\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u6216\u8005\u4e8c\u8fdb\u5236\u5f62\u5f0fdump\u51faOnnx\u539f\u6a21\u578b\u6bcf\u4e00\u5c42\u7684\u6570\u636e\u3002 (3) \u4f7f\u7528\u793a\u4f8b\uff1a python3 onnx_dump_data.py \\ --model_file onnx_mobilenet_v2.onnx \\ --image ./img.bmp \\ --dump_bin True \\ -n onnx_mobilenet_v2.py (4) \u4f7f\u7528\u53c2\u6570\u8bf4\u660e\uff1a \u2460 \u5fc5\u9009\u53c2\u6570\u8bf4\u660e\uff1a --model_file : Onnx\u539f\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 -i , --image : \u56fe\u7247\u6587\u4ef6\u6216\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\u6216 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u3002 --dump_bin : \u662f\u5426\u4ee5\u4e8c\u8fdb\u5236\u5f62\u5f0fdump\u6bcf\u4e00\u5c42\u7ed3\u679c\u3002 dump_bin\u53ef\u9009 True / False True: Dump\u7ed3\u679c\u4ee5\u4e8c\u8fdb\u5236\u5f62\u5f0f\u4fdd\u5b58\u4e8e\u5f53\u524d\u8fd0\u884c\u76ee\u5f55\u4e0b,\u5c06\u81ea\u52a8\u521b\u5efa\u6587\u4ef6\u5939dumpData, \u5185\u5b58\u6709caffe_NHWC_outtensor_dump.bin\u7ed3\u679c\u6587\u4ef6 ./dumpData/caffe_NHWC_outtensor_dump.bin\uff084\u7ef4tensor\u6392\u5e03\u683c\u5f0f\u4e3aNHWC\uff0c\u4e0eSigmaStar\u6a21\u578b\u76f8\u540c\uff09 False: Dump\u7ed3\u679c\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u4fdd\u5b58\u4e8e\u5f53\u524d\u8fd0\u884c\u76ee\u5f55\u4e0b\uff0c\u5c06\u81ea\u52a8\u521b\u5efa\u6587\u4ef6\u5939dumpData\uff0c\u5185\u5b58\u6709caffe_NHWC_outtensor_dump.txt\u7ed3\u679c\u6587\u4ef6\u53caNHWC\u548cNCHW\u6587\u4ef6\u5939 ./dumpData/caffe_NHWC_outtensor_dump.txt\uff084\u7ef4tensor\u6392\u5e03\u683c\u5f0f\u4e3aNHWC\uff0c\u4e0eSigmaStar\u6a21\u578b\u76f8\u540c\uff09 ./dumpData/NHWC\uff08\u6bcf\u5c42\u8f93\u51fa\u5355\u72ec\u751f\u6210\u6587\u4ef6\uff0c4\u7ef4tensor\u6392\u5e03\u683c\u5f0f\u4e3aNHWC\uff0c\u4e0eSigmaStar\u6a21\u578b\u76f8\u540c\uff09 ./dumpData/NCHW\uff08\u6bcf\u5c42\u8f93\u51fa\u5355\u72ec\u751f\u6210\u6587\u4ef6\uff0c4\u7ef4tensor\u6392\u5e03\u683c\u5f0f\u4e3aNCHW\uff0c\u4e0e\u539f\u6a21\u578b\u6392\u5e03\u76f8\u540c\uff09 \u5982\u679c\u9700\u8981[6.2.2 \u4f7f\u7528auto_dump_debug.sh\u811a\u672c\u5206\u6790\u6570\u636e]\u529f\u80fd\uff0c\u52a1\u5fc5\u4f7f\u7528 True\u3002 -n , --preprocess : \u524d\u5904\u7406\u65b9\u6cd5\uff0c\u8bf7\u76f4\u63a5\u7ed9\u5b9a\u524d\u5904\u7406python\u6587\u4ef6\u8def\u5f84\u3002\u9700\u8981\u786e\u4fdd\u524d\u5904\u7406python\u6587\u4ef6\u4e2d\u5305\u542b get_image \u51fd\u6570\uff0c\u5e76\u4e14\u8be5\u51fd\u6570\u5e26\u6709 nchw \u53c2\u6570\u7528\u6765\u5904\u7406\u539f\u6a21\u578b4\u7ef4\u8f93\u5165\u7684\u6392\u5e03\u4e3aNCHW\uff08onnx_dump_data.py\u4f1a\u76f4\u63a5\u8c03\u7528get_image\u51fd\u6570\u6765\u751f\u6210\u6a21\u578binput\u6570\u636e\uff0c\u5e76\u4e14\u5f3a\u5236nchw=True\uff09\u3002 \u524d\u5904\u7406\u811a\u672c\u51fd\u6570\u793a\u4f8b\uff1a def get_image ( img_path, resizeH = 224 , resizeW = 224 , resizeC = 3 , norm = True, meanB = 104 , meanG = 117 , meanR = 123 , std = 58 .82, rgb = False, nchw = False ) : ... ... if nchw: # NCHW img_norm = np.transpose ( img_norm.reshape ( resizeH, resizeW, -1 ) , axes =( 2 , 0 , 1 )) return np.expand_dims ( img_norm, 0 ) Please Note: \u82e5\u6a21\u578b\u4e3a \u591a\u8f93\u5165 \u65f6\uff0c -n,--preprocess \u53c2\u6570\u7528\u6cd5\u9700\u8981\u591a\u4e2a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4f8b\u5982 -n preprocess1.py,preprocess2.py \u6216\u8005 --preprocess preprocess1.py,preprocess2.py \u82e5\u6a21\u578b\u4e3a \u591a\u8f93\u5165 \u65f6\uff0c -i/--image \u53c2\u6570\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\u3002","title":"6.2.1.3 Dump\u89e3\u6790Onnx\u539f\u6a21\u578b"},{"location":"module/User_Guide/IPU260/DumpDebug_Tool.html#622-auto_dump_debugsh","text":"\u5de5\u5177\u7684\u4f4d\u7f6e\u5728 SGS_IPU_SDK/DumpDebug/auto_dump_debug.sh \u3002","title":"6.2.2 \u4f7f\u7528auto_dump_debug.sh\u811a\u672c\u5206\u6790\u6570\u636e"},{"location":"module/User_Guide/IPU260/DumpDebug_Tool.html#6221-sigmastar","text":"(1) auto_dump_debug.sh\u811a\u672c\u80fd\u591f\u5bf9\u6bd4\u6837\u672c bin\uff08sample\uff09\u548c\u57fa\u51c6 bin\uff08benchmark\uff09\u7684\u76f8\u540coutput tensor\u5c42\u7684COS\u3001MSE\u548cRMSE\uff0c\u9700\u4f7f\u7528 6.2.1.1 \u4e2dDump\u51fa\u7684\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u548c\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u7684bin\u6587\u4ef6\u3002 (2) \u4f7f\u7528\u793a\u4f8b\uff1a ./auto_dump_debug.sh \\ /home/user/SGS_IPU_SDK \\ /home/user/sample.bin \\ /home/user/benchmark.bin (3) \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a Param1 : SGS_IPU_SDK \u7684\u8def\u5f84\uff0c\u5982\u679c\u5728\u5f53\u524d\u4f4d\u7f6e\uff0c\u53ea\u9700\u4f20\u76ee\u5f55\u5939\u540d\u3002 Param2 : \u9700\u8981\u5bf9\u6bd4\u7684\u5df2\u7ecf dump\u51fa\u6765\u7684sample bin\u8def\u5f84\uff0c\u6b64\u5904\u5e94\u4e3a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578bDump\u51fa\u7684bin\u6587\u4ef6\u8def\u5f84\u3002 Param3 : \u4f5c\u4e3a\u53c2\u8003\u7684\u5df2\u7ecf dump\u51fa\u6765\u7684 benchmark bin\u8def\u5f84\uff0c\u6b64\u5904\u5e94\u4e3a\u6d6e\u70b9\u7f51\u7edc\u6a21\u578bDump\u51fa\u7684bin\u6587\u4ef6\u8def\u5f84\u3002 (4) \u5206\u6790\u7ed3\u679c\u5c55\u793a \u4f7f\u7528\u987b\u77e5 auto_dump_debug.sh\u811a\u672c\u5bf9\u6bd4\u7ed3\u679c\u5c06\u53d7DebugConfig.txt\u4e2ddisableDomainFuseOps\u5f71\u54cd\u3002 \u2460 \u672a\u5f00\u542fdisableDomainFuseOps\u9009\u9879\u65f6\uff0c\u5b8c\u6210\u5206\u6790\u540e\u663e\u793a\u5982\u4e0b\uff1a\uff08\u90e8\u5206\uff09 3.conv1_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000046 COS:0.999898 RMSE:0.014310 4.pool1.xx.output0 OP_TYPE:MAX_POOL_2D MSE:0.000057 COS:0.999931 RMSE:0.011018 7.res2a_branch1_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000076 COS:0.999886 RMSE:0.015652 11.res2a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000027 COS:0.999652 RMSE:0.023612 16.res2a_xx.xx.output0 OP_TYPE:RELU MSE:0.000177 COS:0.999644 RMSE:0.025049 20.res2b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000069 COS:0.999242 RMSE:0.039121 25.res2b_xx.xx.output0 OP_TYPE:RELU MSE:0.000430 COS:0.999452 RMSE:0.030551 28.res3a_branch1_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000165 COS:0.998975 RMSE:0.041644 32.res3a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000139 COS:0.998842 RMSE:0.048416 37.res3a_xx.xx.output0 OP_TYPE:RELU MSE:0.000297 COS:0.999069 RMSE:0.041043 41.res3b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000070 COS:0.998836 RMSE:0.051215 46.res3b_xx.xx.output0 OP_TYPE:RELU MSE:0.000366 COS:0.999035 RMSE:0.042863 49.res4a_branch1_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000026 COS:0.999282 RMSE:0.035575 53.res4a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000108 COS:0.998950 RMSE:0.047213 58.res4a_xx.xx.output0 OP_TYPE:RELU MSE:0.000149 COS:0.999174 RMSE:0.040582 62.res4b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000030 COS:0.999020 RMSE:0.046630 67.res4b_xx.xx.output0 OP_TYPE:RELU MSE:0.000168 COS:0.999073 RMSE:0.041229 70.res5a_branch1_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000305 COS:0.999276 RMSE:0.033715 74.res5a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000032 COS:0.998723 RMSE:0.053469 79.res5a_xx.xx.output0 OP_TYPE:RELU MSE:0.000507 COS:0.998762 RMSE:0.050663 83.res5b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:CONV_2D MSE:0.000027 COS:0.998182 RMSE:0.064201 88.res5b_xx.xx.output0 OP_TYPE:RELU MSE:0.006022 COS:0.998665 RMSE:0.056931 89.pool5.xx.output0 OP_TYPE:AVG_POOL_2D MSE:0.004321 COS:0.998488 RMSE:0.079694 90.fc1000_reshape#1_output#183.output0 OP_TYPE:ReshapeAliasMSE:0.004321 COS:0.998488 RMSE:0.079694 91.fc1000#185.xx.output0 OP_TYPE:CONV_2D MSE:0.014197 COS:0.998901 RMSE:0.051447 92.fc1000.xx.output0 OP_TYPE:ReshapeAliasMSE:0.014197 COS:0.998901 RMSE:0.051447 93.prob.xx.output0 OP_TYPE:Fix2Float MSE:0.000000 COS:1.000000 RMSE:0.000152 \u2461 \u5f00\u542fdisableDomainFuseOps\u9009\u9879\u65f6\uff0c\u5b8c\u6210\u5206\u6790\u540e\u663e\u793a\u5982\u4e0b\uff1a\uff08\u90e8\u5206\uff09 0.conv1.xx.output0 OP_TYPE:CONV_2D MSE:2.397930 COS:0.999887 RMSE:0.019312 1.conv1_xx.xx.output0 OP_TYPE:MUL MSE:0.000037 COS:0.999850 RMSE:0.020800 2.conv1_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000037 COS:0.999936 RMSE:0.010667 3.conv1_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000052 COS:0.999885 RMSE:0.015123 4.pool1.xx.output0 OP_TYPE:MAX_POOL_2D MSE:0.000063 COS:0.999924 RMSE:0.011603 5.res2a_branch1.xx.output0 OP_TYPE:CONV_2D MSE:0.000096 COS:0.999952 RMSE:0.009368 6.res2a_branch1_xx.xx.output0 OP_TYPE:MUL MSE:0.000080 COS:0.999956 RMSE:0.009144 7.res2a_branch1_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000080 COS:0.999880 RMSE:0.016141 8.res2a_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.000349 COS:0.999951 RMSE:0.009727 9.res2a_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000049 COS:0.999956 RMSE:0.009349 10.res2a_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000049 COS:0.999886 RMSE:0.016510 11.res2a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000028 COS:0.999641 RMSE:0.024211 12.res2a_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000100 COS:0.999821 RMSE:0.018379 13.res2a_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.000118 COS:0.999832 RMSE:0.017982 14.res2a_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000118 COS:0.999670 RMSE:0.024984 15.res2a.xx.output0 OP_TYPE:ADD MSE:0.000241 COS:0.999771 RMSE:0.021801 16.res2a_xx.xx.output0 OP_TYPE:RELU MSE:0.000182 COS:0.999634 RMSE:0.025262 17.res2b_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.000525 COS:0.999709 RMSE:0.023127 18.res2b_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000193 COS:0.999746 RMSE:0.022434 19.res2b_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000193 COS:0.999474 RMSE:0.032121 20.res2b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000071 COS:0.999219 RMSE:0.039747 21.res2b_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000157 COS:0.999549 RMSE:0.030371 22.res2b_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.000272 COS:0.999587 RMSE:0.029537 23.res2b_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000272 COS:0.999151 RMSE:0.040304 24.res2b.xx.output0 OP_TYPE:ADD MSE:0.000534 COS:0.999425 RMSE:0.031402 25.res2b_xx.xx.output0 OP_TYPE:RELU MSE:0.000448 COS:0.999429 RMSE:0.031203 26.res3a_branch1.xx.output0 OP_TYPE:CONV_2D MSE:0.000267 COS:0.999320 RMSE:0.034101 27.res3a_branch1_xx.xx.output0 OP_TYPE:MUL MSE:0.000169 COS:0.999345 RMSE:0.034331 28.res3a_branch1_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000169 COS:0.998949 RMSE:0.042434 29.res3a_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.001885 COS:0.999472 RMSE:0.030785 30.res3a_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000427 COS:0.999486 RMSE:0.030586 31.res3a_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000427 COS:0.998909 RMSE:0.045188 32.res3a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000147 COS:0.998773 RMSE:0.049700 33.res3a_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000331 COS:0.999425 RMSE:0.034038 34.res3a_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.000368 COS:0.999411 RMSE:0.034275 35.res3a_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000368 COS:0.998931 RMSE:0.044919 36.res3a.xx.output0 OP_TYPE:ADD MSE:0.000585 COS:0.999040 RMSE:0.042398 37.res3a_xx.xx.output0 OP_TYPE:RELU MSE:0.000301 COS:0.999058 RMSE:0.041479 38.res3b_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.000811 COS:0.999530 RMSE:0.029739 39.res3b_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000288 COS:0.999580 RMSE:0.028879 40.res3b_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000288 COS:0.999383 RMSE:0.033874 41.res3b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000073 COS:0.998787 RMSE:0.052493 42.res3b_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000136 COS:0.999469 RMSE:0.033442 43.res3b_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.000314 COS:0.999489 RMSE:0.033050 44.res3b_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000314 COS:0.999308 RMSE:0.036079 45.res3b.xx.output0 OP_TYPE:ADD MSE:0.000659 COS:0.998989 RMSE:0.042628 46.res3b_xx.xx.output0 OP_TYPE:RELU MSE:0.000375 COS:0.999011 RMSE:0.043575 47.res4a_branch1.xx.output0 OP_TYPE:CONV_2D MSE:0.000098 COS:0.999264 RMSE:0.037842 48.res4a_branch1_xx.xx.output0 OP_TYPE:MUL MSE:0.000027 COS:0.999298 RMSE:0.037615 49.res4a_branch1_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000027 COS:0.999253 RMSE:0.036302 50.res4a_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.001011 COS:0.999543 RMSE:0.028507 51.res4a_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000300 COS:0.999544 RMSE:0.028563 52.res4a_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000300 COS:0.999147 RMSE:0.040221 53.res4a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000107 COS:0.998961 RMSE:0.047238 54.res4a_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000335 COS:0.999464 RMSE:0.032660 55.res4a_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.000255 COS:0.999453 RMSE:0.032788 56.res4a_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000255 COS:0.999234 RMSE:0.038888 57.res4a.xx.output0 OP_TYPE:ADD MSE:0.000312 COS:0.999298 RMSE:0.036873 58.res4a_xx.xx.output0 OP_TYPE:RELU MSE:0.000146 COS:0.999191 RMSE:0.040181 59.res4b_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.000369 COS:0.999748 RMSE:0.021992 60.res4b_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000156 COS:0.999772 RMSE:0.021527 61.res4b_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000156 COS:0.999625 RMSE:0.026857 62.res4b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000028 COS:0.999073 RMSE:0.045494 63.res4b_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000048 COS:0.999748 RMSE:0.022612 64.res4b_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.000191 COS:0.999751 RMSE:0.022354 65.res4b_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000191 COS:0.999678 RMSE:0.024581 66.res4b.xx.output0 OP_TYPE:ADD MSE:0.000337 COS:0.999448 RMSE:0.032108 67.res4b_xx.xx.output0 OP_TYPE:RELU MSE:0.000160 COS:0.999113 RMSE:0.040588 68.res5a_branch1.xx.output0 OP_TYPE:CONV_2D MSE:0.000072 COS:0.999179 RMSE:0.038052 69.res5a_branch1_xx.xx.output0 OP_TYPE:MUL MSE:0.000290 COS:0.999179 RMSE:0.038130 70.res5a_branch1_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000290 COS:0.999311 RMSE:0.032880 71.res5a_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.000355 COS:0.999758 RMSE:0.020371 72.res5a_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000133 COS:0.999750 RMSE:0.020561 73.res5a_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000133 COS:0.999613 RMSE:0.026392 74.res5a_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000028 COS:0.998859 RMSE:0.051003 75.res5a_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000063 COS:0.999512 RMSE:0.031809 76.res5a_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.001009 COS:0.999480 RMSE:0.032233 77.res5a_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.001009 COS:0.999257 RMSE:0.039436 78.res5a.xx.output0 OP_TYPE:ADD MSE:0.001413 COS:0.999379 RMSE:0.034297 79.res5a_xx.xx.output0 OP_TYPE:RELU MSE:0.000457 COS:0.998876 RMSE:0.048274 80.res5b_branch2a.xx.output0 OP_TYPE:CONV_2D MSE:0.001387 COS:0.999842 RMSE:0.015781 81.res5b_branch2a_xx.xx.output0 OP_TYPE:MUL MSE:0.000239 COS:0.999839 RMSE:0.015798 82.res5b_branch2a_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.000239 COS:0.999639 RMSE:0.026762 83.res5b_branch2a_xx_xx_xx.xx.output0 OP_TYPE:RELU MSE:0.000023 COS:0.998458 RMSE:0.058598 84.res5b_branch2b.xx.output0 OP_TYPE:CONV_2D MSE:0.000041 COS:0.999061 RMSE:0.041137 85.res5b_branch2b_xx.xx.output0 OP_TYPE:MUL MSE:0.007750 COS:0.999058 RMSE:0.041188 86.res5b_branch2b_xx_xx.xx.output0 OP_TYPE:ADD MSE:0.007751 COS:0.998732 RMSE:0.052601 87.res5b.xx.output0 OP_TYPE:ADD MSE:0.008533 COS:0.998792 RMSE:0.052043 88.res5b_xx.xx.output0 OP_TYPE:RELU MSE:0.004860 COS:0.998924 RMSE:0.051718 89.pool5.xx.output0 OP_TYPE:AVG_POOL_2D MSE:0.004061 COS:0.998601 RMSE:0.078395 90.fc1000_reshape#1_output#183.output0 OP_TYPE:ReshapeAliasMSE:0.004061 COS:0.998601 RMSE:0.078395 91.fc1000#185.xx.output0 OP_TYPE:CONV_2D MSE:0.013363 COS:0.998935 RMSE:0.050327 92.fc1000.xx.output0 OP_TYPE:ReshapeAliasMSE:0.013363 COS:0.998935 RMSE:0.050327 93.prob.xx.output0 OP_TYPE:SOFTMAX MSE:0.000000 COS:1.000000 RMSE:0.000152","title":"6.2.2.1 \u5bf9\u6bd4\u5206\u6790SigmaStar\u6d6e\u70b9\u4e0e\u5b9a\u70b9\u6a21\u578b"},{"location":"module/User_Guide/IPU260/DumpDebug_Tool.html#6222-sigmastarcaffeonnx","text":"(1) auto_dump_debug.sh\u811a\u672c\u540c\u6837\u80fd\u591f\u5bf9\u6bd4SigmaStar\uff08\u6d6e\u70b9/\u5b9a\u70b9\uff09\u6a21\u578b\u4e0e\u539f\u6a21\u578b\uff08Caffe/Onnx\uff09\u76f8\u540coutput tensor\u5c42\u7684COS\u3001MSE\u548cRMSE\u3002\u6253\u5370\u683c\u5f0f\u4e0e 6.2.2.1 \u76f8\u540c\u3002 (2) \u4f7f\u7528\u793a\u4f8b\uff1a \u2460 \u4e0eCaffe\u539f\u6a21\u578b\u5bf9\u6bd4\uff1a ./auto_dump_debug.sh \\ /home/user/SGS_IPU_SDK \\ /home/user/sigma_outtensor_dump.bin \\ /home/user/caffe_NHWC_outtensor_dump.bin \u2461 \u4e0eOnnx\u539f\u6a21\u578b\u5bf9\u6bd4\uff1a ./auto_dump_debug.sh \\ /home/user/SGS_IPU_SDK \\ /home/user/sigma_outtensor_dump.bin \\ /home/user/onnx_NHWC_outtensor_dump.bin (3) \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a Param1 : SGS_IPU_SDK \u7684\u8def\u5f84\uff0c\u5982\u679c\u5728\u5f53\u524d\u4f4d\u7f6e\uff0c\u53ea\u9700\u4f20\u76ee\u5f55\u5939\u540d\u3002 Param2 : \u9700\u8981\u5bf9\u6bd4\u7684\u5df2\u7ecf dump\u51fa\u6765\u7684sample bin\u8def\u5f84\uff0c\u6b64\u5904\u5e94\u4e3aSigmaStar\u7f51\u7edc\u6a21\u578b\uff08\u6d6e\u70b9/\u5b9a\u70b9\uff09Dump\u51fa\u7684bin\u6587\u4ef6\u8def\u5f84\u3002 Param3 : \u4f5c\u4e3a\u53c2\u8003\u7684\u5df2\u7ecf dump\u51fa\u6765\u7684 benchmark bin\u8def\u5f84\uff0c\u6b64\u5904\u5e94\u4e3a\u539f\u6a21\u578b\uff08Caffe/Onnx\uff09Dump\u51fa\u7684bin\u6587\u4ef6\u8def\u5f84\u3002 \u4f7f\u7528\u987b\u77e5 \u5c06 6.2.1.1 \u4e2dDump\u51fa\u7684\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b\u6216\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u7684bin\u6587\u4ef6\u4f5c\u4e3a\u6837\u672c bin\uff08sample\uff09\uff0c\u4f20\u5165Param2\uff0c\u4e0d\u5f97\u4f20\u5165Param3\u3002 \u5c06 6.2.1.2 \u6216 6.2.1.3 \u4e2dDump\u51fa\u7684\u539f\u6a21\u578bbin\u6587\u4ef6\u4f5c\u4e3a\u57fa\u51c6 bin\uff08benchmark\uff09\uff0c\u4f20\u5165Param3\uff0c\u4e0d\u5f97\u4f20\u5165Param2\u3002","title":"6.2.2.2 \u5bf9\u6bd4\u5206\u6790SigmaStar\uff08\u6d6e\u70b9/\u5b9a\u70b9\uff09\u6a21\u578b\u4e0e\u539f\u6a21\u578b\uff08Caffe/Onnx\uff09"},{"location":"module/User_Guide/IPU260/DumpDebug_Tool.html#63-segmentfault","text":"\u5f53\u8fd0\u884c\u65f6\u53d1\u751fSegmentFault\u9519\u8bef\u65f6\uff0c\u7a0b\u5e8f\u4e2d\u65ad\u8fd0\u884c\uff0c\u6b64\u65f6\u5b9a\u4f4d\u7a0b\u5e8f\u53d1\u751f\u9519\u8bef\u4f4d\u7f6e\u81f3\u5173\u91cd\u8981\u3002\u8bf7\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\uff0c\u534f\u52a9\u63d0\u4f9b\u76f8\u5173\u4fe1\u606f\u3002 (1) \u4fee\u6539\u751f\u6210core\u6587\u4ef6\u8def\u5f84\u4e3a\u5f53\u524d\u76ee\u5f55\uff0c\u5e76\u8bbe\u7f6ecore\u6587\u4ef6\u5927\u5c0f\u65e0\u4e0a\u9650\uff1a echo core > /proc/sys/kernel/core_pattern ulimit -c unlimited (2) \u91cd\u65b0\u8fd0\u884c\u521a\u521a\u53d1\u751f\u9519\u8bef\u7684\u8f6c\u6362\u7f51\u7edc\u547d\u4ee4\u3002 (3) \u751f\u6210core\u6587\u4ef6\u540e\uff0c\u8fd0\u884c\u5982\u4e0b\u547d\u4ee4\uff0c\u4f1a\u6253\u5370\u7a0b\u5e8f\u76f8\u5173\u4fe1\u606f\uff1a ~/SGS_IPU_SDK/DumpDebug/show_address.sh /path/to/SGS_IPU_SDK/bin/XXX /path/to/core show_address.sh\u811a\u672c\u9700\u8981\u4e24\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u6267\u884c\u547d\u4ee4\u7684bin\u7684\u8def\u5f84\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3acore\u7684\u8def\u5f84\u3002 \u5c4f\u5e55\u4f1a\u6253\u5370\u5185\u5b58\u6620\u5c04\u4fe1\u606f\u4ee5\u53ca\u7a0b\u5e8f\u51fd\u6570\u5806\u6808\u5730\u5740\uff0c\u8bf7\u53cd\u9988\u6b64\u4fe1\u606f\u3002","title":"6.3. SegmentFault\u9519\u8bef\u5904\u7406"},{"location":"module/User_Guide/IPU260/DumpDebug_Tool.html#64","text":"DumpDebug Tool\u63d0\u4f9b\u4e86\u6a21\u578b\u91cf\u5316\u540e\u7cbe\u5ea6\u4e0b\u964d\u95ee\u9898\u7684\u6392\u67e5\u65b9\u6cd5\uff0c\u53ef\u7528\u4e8e\u9488\u5bf9\u5b9e\u9645\u95ee\u9898\u53c2\u8003\u3002 \u4f7f\u7528calibrator\u65f6\uff0c --quant_level \u9009\u62e9L2\u3001L3\u3001L4\u6216L5\u65f6\u4f1a\u6839\u636e\u7edf\u8ba1\u4fe1\u606f\u81ea\u52a8\u914d\u7f6e\u5377\u79ef\u7684\u91cf\u5316\u65b9\u5f0f\uff0c\u5982\u679ccalibrator\u672a\u80fd\u5c06\u4ee5\u4e0b\u60c5\u51b5\u7684\u5377\u79ef\u4fee\u6539\u6210\u201dINT16\u201d\u5377\u79ef\u6a21\u5f0f\uff0c\u8bf7\u5728input config\u4e2d\u901a\u8fc7\u914d\u7f6eCONV_CONFIG\u7684tensor_arrays\u65b9\u5f0f\u624b\u52a8\u5f00\u542f\u3002 \u4f7f\u7528auto_dump_debug.sh\u811a\u672c\u5206\u6790\u6570\u636e \u529f\u80fd\u5bf9\u6bd4\u6570\u636e\u540e\uff0c\u5982\u679cRMSE\u503c\u8f83\u5927\uff08\u4e00\u822c\u8ba4\u4e3a\u5927\u4e8e0.5\uff09\uff0c\u53ef\u5c06\u8be5\u5c42\u524d\u7684\u5377\u79ef\u8f93\u5165\u5c42\u5f00\u542f INT16 \u5377\u79ef\u6a21\u5f0f\u3002 \u4fee\u6539input_config.ini\u6587\u4ef6\u540e\u9700\u8981\u91cd\u65b0\u4ece\u539f\u59cb\u6846\u67b6\u8bad\u7ec3\u7684\u6a21\u578b\u8f6c\u6362 \u3002","title":"6.4. \u76f8\u5173\u95ee\u9898\u6c47\u603b"},{"location":"module/User_Guide/IPU260/OneClick_Generation.html","text":"8.1. SGS_Converter\u7b80\u4ecb \u00b6 SGS_Converter \u8bf4\u660e \u5de5\u5177\u4f4d\u7f6e SGS_IPU_SDK/Scripts/ConvertTool/SGS_converter.py \u5de5\u5177\u4f5c\u7528 \u5c06\u6a21\u578b\u4e00\u952e\u8f6c\u6362\u4e3aSGS\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b \u4f7f\u7528\u987b\u77e5 \u2460 \u652f\u6301\u4ece tensorflow_graphdef \uff0c tensorflow_savemodel \uff0c keras \uff0c tflite \uff0c caffe \uff0c onnx \u516d\u79cd\u6846\u67b6\u6a21\u578b\u8f6c\u6362 \u4e0d\u540c\u6846\u67b6\u6a21\u578b\u4e00\u952e\u8f6c\u6362\u7684\u4f7f\u7528\u65b9\u6cd5 \u2461 \u9700\u914d\u7f6einput config \u4fe1\u606f \u8be6\u89c1 input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e \u4f7f\u7528\u524d\u5148\u5728SGS_IPU_SDK\u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK source cfg_env.sh 8.2. \u4e0d\u540c\u6846\u67b6\u6a21\u578b\u4e00\u952e\u8f6c\u6362\u4e3aSGS\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u7684\u4f7f\u7528\u65b9\u6cd5 \u00b6 \u4e0b\u9762\u662fSGS_Converter\u76ee\u524d\u652f\u6301\u7684platform information\uff1a python3 SGS_converter.py -h usage : SGS_converter.py [-h] {tensorflow_graphdef,tensorflow_savemodel,keras,tflite,caffe,onnx,debug} ... Convert Tool positional arguments : {tensorflow_graphdef,tensorflow_savemodel,keras,tflite,caffe,onnx,debug} platform info tensorflow_graphdef tensorflow graphdef commands tensorflow_savemodel tensorflow save_model commands keras keras commands tflite tflite commands caffe caffe commands onnx onnx commands debug debug commands optional arguments : -h, --help show this help message and exit \u4e0d\u540c\u5e73\u53f0\u6a21\u578b\u8f6c\u6362\u4e3aSGS\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u7684\u6240\u9700\u53c2\u6570\u4fe1\u606f\u7565\u6709\u4e0d\u540c\uff0c\u5982\u679c\u60f3\u8fdb\u4e00\u6b65\u4e86\u89e3\u5404\u4e2a\u5e73\u53f0\u8f6c\u6362\u6240\u9700\u8981\u7684\u53c2\u6570\u4fe1\u606f\uff0c\u53ef\u4ee5\u6267\u884c python3 SGS_converter.py {platform} \u2013h \u8fdb\u884c\u67e5\u770b\u3002 \u4e0b\u9762\u5c06\u7b80\u5355\u4ecb\u7ecd\u5404\u4e2a\u5e73\u53f0\u8f6c\u6362\u6240\u9700\u7684\u5177\u4f53\u4fe1\u606f\u548c\u67e5\u770b\u6307\u4ee4\uff1a 8.2.1 caffe \u6846\u67b6\u6307\u4ee4 \u00b6 1\u3001information\uff1a python3 SGS_converter.py caffe -h usage : SGS_converter.py caffe [-h] --model_file MODEL_FILE --weight_file WEIGHT_FILE --input_config INPUT_CONFIG -i IMAGE_FILE -n PREPROCESS [--input_shapes INPUT_SHAPES] [--output_file OUTPUT_FILE] [--export_models] optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE SavedModel directory to convert --weight_file WEIGHT_FILE Full filepath of tflite file containing the caffe -n PREPROCESS, --preprocess PREPROCESS Name of model to select image preprocess method --input_config INPUT_CONFIG Input config path. -i IMAGE_FILE, --image_file IMAGE_FILE Image / Directory containing images path / Image_list for multi_input model. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth. (default None) --output_file OUTPUT_FILE Full filepath of out Model path. --export_models export models of debug/float/cmodel_float/fix 2\u3001 \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a (1) \u5fc5\u9009\u53c2\u6570\uff1a --model_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684caffe\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 --weight_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684caffe\u6743\u91cd\u6587\u4ef6\u8def\u5f84\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\u3002 \u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 -i : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u6240\u9700\u7684\u56fe\u7247\u6587\u4ef6\u8def\u5f84\u3002 \u4f7f\u7528\u987b\u77e5 \u652f\u6301\u4f7f\u7528\u5355\u5f20\u56fe\u7247\u8def\u5f84\u8fdb\u884c\u4f20\u53c2\uff0c\u4e5f\u652f\u6301\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\uff0c\u6216\u5b58\u50a8\u56fe\u7247\u8def\u5f84\u5217\u8868\u7684\u6587\u4ef6\u3002\u4f7f\u7528\u8def\u5f84\u5217\u8868\u5f62\u5f0f\u65f6\u53ef\u53c2\u8003\u5982\u4e0b\u65b9\u5f0f\uff1a \u7f51\u7edc\u6a21\u578b\u4e3a\u5355\u8f93\u5165\u65f6\uff1a -i ~/SGS_IPU_SDK/image_test/2007000364.jpg \u7f51\u7edc\u6a21\u578b\u4e3a\u591a\u8f93\u5165\u65f6\uff1a -i /SGS_IPU_SDK/image_test/2007000364.jpg, /SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp -n : \u6307\u5b9a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4e0e\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\u76f8\u5173\u3002 \u8be6\u89c1 Calibrator:\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5 \u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a --export_models : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u65f6\u4fdd\u5b58\u5404\u4e2a\u9636\u6bb5\u7684\u6587\u4ef6\uff0c\u4e0d\u4f7f\u7528\u8be5\u53c2\u6570\u5219\u53ea\u751f\u6210\u79bb\u7ebf\u7f51\u7edc\u6587\u4ef6\u3002 \u4f7f\u7528\u987b\u77e5 \u4f7f\u7528 --export_models \u53c2\u6570\u5fc5\u987b\u540c\u65f6\u4f7f\u7528--output_file\u53c2\u6570 --output_file : \u6307\u5b9a\u751f\u6210\u7684SGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b,\u8be5\u53c2\u6570\u5fc5\u987b\u4e0e --export_models \u4e00\u8d77\u4f7f\u7528\u3002 --work_mode : \u6307\u5b9a\u6a21\u578b\u8f6c\u6362\u4e3a\u5355\u6838\u6a21\u5f0f\u6216\u8005\u53cc\u6838\u6a21\u5f0f\u3002 \u4f7f\u7528\u987b\u77e5 \u53ef\u9009\u6a21\u5f0f\u6709 single_core\uff0c\u8868\u793a\u5355\u6838\u6a21\u578b\u3002 multi_core\uff0c\u8868\u793a\u53cc\u6838\u6a21\u5f0f\u3002 \u82e5\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\uff0c\u9ed8\u8ba4\u4e3a\u5355\u6838\u6a21\u5f0f\u3002 --inplace_input_buf : RAWDATA_F32_NHWC \u662f\u5426\u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf. \u4f7f\u7528\u987b\u77e5 training_input_formats \u548c input_formats \u914d\u7f6e\u4e3a RAWDATA_F32_NHWC \u4e14\u4f7f\u7528 --batch_mode \u7684 one_buf \u6a21\u5f0f\u65f6\u624d\u53ef\u4ee5\u914d\u7f6e\u6b64\u53c2\u6570\u3002 \u53ef\u9009True/False\uff0c\u9ed8\u8ba4\u4e3aTrue\u3002 True : \u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf\u3002 False : \u4fdd\u7559\u539f\u59cb\u8f93\u5165buf\u3002 3\u3001 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 SGS_converter.py caffe \\ --model_file caffe_resnet50_conv.prototxt \\ --weight_file caffe_resnet50_conv.caffemodel \\ --input_config input_config.ini \\ -i file.list -n preprocess.py --export_models --output_file resnet50_float.sim 8.2.2 onnx \u6846\u67b6\u6307\u4ee4 \u00b6 1\u3001information\uff1a python3 SGS_converter.py onnx -h usage : SGS_converter.py onnx [-h] --model_file MODEL_FILE --input_config INPUT_CONFIG -i IMAGE_FILE -n PREPROCESS [--input_shapes INPUT_SHAPES] [--output_file OUTPUT_FILE] [--export_models] optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE SavedModel directory to convert -n PREPROCESS, --preprocess PREPROCESS Name of model to select image preprocess method --input_config INPUT_CONFIG Input config path. -i IMAGE_FILE, --image_file IMAGE_FILE Image / Directory containing images path / Image_list for multi_input model. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth. (default None) --output_file OUTPUT_FILE Full filepath of out Model path. --export_models export models of debug/float/cmodel_float/fix 2\u3001 \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a (1) \u5fc5\u9009\u53c2\u6570\uff1a --model_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684caffe\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 --input_shapes : Onnx\u6a21\u578b\u8f93\u5165shape. dimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0cshape\u4e2a\u6570\u548cinputs \u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\u3002 \u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 -i : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u6240\u9700\u7684\u56fe\u7247\u6587\u4ef6\u8def\u5f84\u3002 \u4f7f\u7528\u987b\u77e5 \u652f\u6301\u4f7f\u7528\u5355\u5f20\u56fe\u7247\u8def\u5f84\u8fdb\u884c\u4f20\u53c2\uff0c\u4e5f\u652f\u6301\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\uff0c\u6216\u5b58\u50a8\u56fe\u7247\u8def\u5f84\u5217\u8868\u7684\u6587\u4ef6\u3002\u4f7f\u7528\u8def\u5f84\u5217\u8868\u5f62\u5f0f\u65f6\u53ef\u53c2\u8003\u5982\u4e0b\u65b9\u5f0f\uff1a \u7f51\u7edc\u6a21\u578b\u4e3a\u5355\u8f93\u5165\u65f6\uff1a -i ~/SGS_IPU_SDK/image_test/2007000364.jpg \u7f51\u7edc\u6a21\u578b\u4e3a\u591a\u8f93\u5165\u65f6\uff1a -i /SGS_IPU_SDK/image_test/2007000364.jpg, /SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp -n : \u6307\u5b9a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4e0e\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\u76f8\u5173\u3002 \u8be6\u89c1 Calibrator:\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5 \u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a --export_models : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u65f6\u4fdd\u5b58\u5404\u4e2a\u9636\u6bb5\u7684\u6587\u4ef6\uff0c\u4e0d\u4f7f\u7528\u8be5\u53c2\u6570\u5219\u53ea\u751f\u6210\u79bb\u7ebf\u7f51\u7edc\u6587\u4ef6\u3002 \u4f7f\u7528\u987b\u77e5 \u4f7f\u7528 --export_models \u53c2\u6570\u5fc5\u987b\u540c\u65f6\u4f7f\u7528--output_file\u53c2\u6570 --output_file : \u6307\u5b9a\u751f\u6210\u7684SGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b,\u8be5\u53c2\u6570\u5fc5\u987b\u4e0e --export_models \u4e00\u8d77\u4f7f\u7528\u3002 --work_mode : \u6307\u5b9a\u6a21\u578b\u8f6c\u6362\u4e3a\u5355\u6838\u6a21\u5f0f\u6216\u8005\u53cc\u6838\u6a21\u5f0f\u3002 \u4f7f\u7528\u987b\u77e5 \u53ef\u9009\u6a21\u5f0f\u6709 single_core\uff0c\u8868\u793a\u5355\u6838\u6a21\u578b\u3002 multi_core\uff0c\u8868\u793a\u53cc\u6838\u6a21\u5f0f\u3002 \u82e5\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\uff0c\u9ed8\u8ba4\u4e3a\u5355\u6838\u6a21\u5f0f\u3002 --inplace_input_buf : RAWDATA_F32_NHWC \u662f\u5426\u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf. \u4f7f\u7528\u987b\u77e5 training_input_formats \u548c input_formats \u914d\u7f6e\u4e3a RAWDATA_F32_NHWC \u4e14\u4f7f\u7528 --batch_mode \u7684 one_buf \u6a21\u5f0f\u65f6\u624d\u53ef\u4ee5\u914d\u7f6e\u6b64\u53c2\u6570\u3002 \u53ef\u9009True/False\uff0c\u9ed8\u8ba4\u4e3aTrue\u3002 True : \u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf\u3002 False : \u4fdd\u7559\u539f\u59cb\u8f93\u5165buf\u3002 3\u3001 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ~/SGS_IPU_SDK/Scripts/ConvertTool/SGS_converter.py onnx --model_file ~/SGS_Models/onnx/onnx_mobilenet_v2/onnx_mobilenet_v2.onnx \\ --input_shapes 1,3,224,224 \\ --input_config ~/SGS_Models/onnx/onnx_mobilenet_v2/input_config.ini \\ -i file.list -n preprocess.py --export_models --output_file onnx_mobilenet_v2_float.sim Note 1.\u5982\u679connx\u6a21\u578b\u4e2d\u5e26\u6709\u540e\u5904\u7406\u7684\u7b97\u5b50\uff0c\u8bf7\u5148\u53bb\u9664\uff0c\u76ee\u524d\u53ea\u652f\u6301\u4e3b\u5e72\u7f51\u7edc\u7684\u8f6c\u6362\u3002\u5982\u679c\u662f\u7531\u5176\u4ed6\u6846\u67b6\u751f\u6210\u7684onnx\u6a21\u578b\uff0c\u8bf7\u52a1\u5fc5\u6ce8\u610f\u5728\u8f6c\u6362\u6a21\u578b\u65f6\u5173\u95ed\u751f\u6210\u540e\u5904\u7406\u7684\u9009\u9879\u3002 8.2.3 tflite \u6846\u67b6\u6307\u4ee4 \u00b6 1\u3001information\uff1a python3 SGS_converter.py tflite -h usage : SGS_converter.py tflite [-h] --model_file MODEL_FILE --input_config INPUT_CONFIG -i IMAGE_FILE -n PREPROCESS [--input_shapes INPUT_SHAPES] [--output_file OUTPUT_FILE] [--export_models] optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE SavedModel directory to convert -n PREPROCESS, --preprocess PREPROCESS Name of model to select image preprocess method --input_config INPUT_CONFIG Input config path. -i IMAGE_FILE, --image_file IMAGE_FILE Image / Directory containing images path / Image_list for multi_input model. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth. (default None) --output_file OUTPUT_FILE Full filepath of out Model path. --export_models export models of debug/float/cmodel_float/fix 2\u3001 \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a (1) \u5fc5\u9009\u53c2\u6570\uff1a --model_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 \u8f93\u5165\u7684\u6a21\u578b\u4e3atflite\u683c\u5f0f\u6587\u4ef6\u8def\u5f84(\u5fc5\u987b\u4e3a\u975e\u91cf\u5316\u6a21\u578b)\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\u3002 \u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 -i : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u6240\u9700\u7684\u56fe\u7247\u6587\u4ef6\u8def\u5f84\u3002 \u4f7f\u7528\u987b\u77e5 \u652f\u6301\u4f7f\u7528\u5355\u5f20\u56fe\u7247\u8def\u5f84\u8fdb\u884c\u4f20\u53c2\uff0c\u4e5f\u652f\u6301\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\uff0c\u6216\u5b58\u50a8\u56fe\u7247\u8def\u5f84\u5217\u8868\u7684\u6587\u4ef6\u3002\u4f7f\u7528\u8def\u5f84\u5217\u8868\u5f62\u5f0f\u65f6\u53ef\u53c2\u8003\u5982\u4e0b\u65b9\u5f0f\uff1a \u7f51\u7edc\u6a21\u578b\u4e3a\u5355\u8f93\u5165\u65f6\uff1a -i ~/SGS_IPU_SDK/image_test/2007000364.jpg \u7f51\u7edc\u6a21\u578b\u4e3a\u591a\u8f93\u5165\u65f6\uff1a -i /SGS_IPU_SDK/image_test/2007000364.jpg, /SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp -n : \u6307\u5b9a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4e0e\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\u76f8\u5173\u3002 \u8be6\u89c1 Calibrator:\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5 \u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a --export_models : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u65f6\u4fdd\u5b58\u5404\u4e2a\u9636\u6bb5\u7684\u6587\u4ef6\uff0c\u4e0d\u4f7f\u7528\u8be5\u53c2\u6570\u5219\u53ea\u751f\u6210\u79bb\u7ebf\u7f51\u7edc\u6587\u4ef6\u3002 \u4f7f\u7528\u987b\u77e5 \u4f7f\u7528 --export_models \u53c2\u6570\u5fc5\u987b\u540c\u65f6\u4f7f\u7528--output_file\u53c2\u6570 --output_file : \u6307\u5b9a\u751f\u6210\u7684SGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b,\u8be5\u53c2\u6570\u5fc5\u987b\u4e0e --export_models \u4e00\u8d77\u4f7f\u7528\u3002 --work_mode : \u6307\u5b9a\u6a21\u578b\u8f6c\u6362\u4e3a\u5355\u6838\u6a21\u5f0f\u6216\u8005\u53cc\u6838\u6a21\u5f0f\u3002 \u4f7f\u7528\u987b\u77e5 \u53ef\u9009\u6a21\u5f0f\u6709 single_core\uff0c\u8868\u793a\u5355\u6838\u6a21\u578b\u3002 multi_core\uff0c\u8868\u793a\u53cc\u6838\u6a21\u5f0f\u3002 \u82e5\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\uff0c\u9ed8\u8ba4\u4e3a\u5355\u6838\u6a21\u5f0f\u3002 --inplace_input_buf : RAWDATA_F32_NHWC \u662f\u5426\u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf. \u4f7f\u7528\u987b\u77e5 training_input_formats \u548c input_formats \u914d\u7f6e\u4e3a RAWDATA_F32_NHWC \u4e14\u4f7f\u7528 --batch_mode \u7684 one_buf \u6a21\u5f0f\u65f6\u624d\u53ef\u4ee5\u914d\u7f6e\u6b64\u53c2\u6570\u3002 \u53ef\u9009True/False\uff0c\u9ed8\u8ba4\u4e3aTrue\u3002 True : \u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf\u3002 False : \u4fdd\u7559\u539f\u59cb\u8f93\u5165buf\u3002 3\u3001 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 SGS_converter.py tflite \\ --model_file Debug_save_model_float.tflite \\ --input_config input_config.ini \\ -i file.list -n preprocess.py 8.2.4 tensorflow_graphdef \u6846\u67b6\u6307\u4ee4 \u00b6 1\u3001information\uff1a python3 SGS_converter.py tensorflow_graphdef -h usage : SGS_converter.py tensorflow_graphdef [-h] --model_file MODEL_FILE --input_config INPUT_CONFIG -i IMAGE_FILE -n PREPROCESS [--input_shapes INPUT_SHAPES] [--output_file OUTPUT_FILE] [--export_models] optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of file containing frozen GraphDef --input_config INPUT_CONFIG Input config path. -i IMAGE_FILE, --image_file IMAGE_FILE Image / Directory containing images path / Image_list for multi_input model. -n PREPROCESS, --preprocess PREPROCESS Name of model to select image preprocess method --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth. (default None) --output_file OUTPUT_FILE Full filepath of out Model path. --export_models export models of debug/float/cmodel_float/fix 2\u3001 \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a (1) \u5fc5\u9009\u53c2\u6570\uff1a --model_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684\u8f93\u5165\u6a21\u578b\u8def\u5f84\u3002 \u4e3aTensorFlow frozen\u7684graphdef\u7684pb\u683c\u5f0f\u6587\u4ef6\u8def\u5f84\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\u3002 \u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 --input_shapes : \u6307\u5b9a\u7f51\u7edc\u8f93\u5165Tensor\u7684shape\u3002 \u683c\u5f0f\u4e3aNHWC\uff0cdimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff1b\u9700\u6ce8\u610fshape\u4e2a\u6570\u548cinputs\u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002 -i : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u6240\u9700\u7684\u56fe\u7247\u6587\u4ef6\u8def\u5f84\u3002 \u4f7f\u7528\u987b\u77e5 \u652f\u6301\u4f7f\u7528\u5355\u5f20\u56fe\u7247\u8def\u5f84\u8fdb\u884c\u4f20\u53c2\uff0c\u4e5f\u652f\u6301\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\uff0c\u6216\u5b58\u50a8\u56fe\u7247\u8def\u5f84\u5217\u8868\u7684\u6587\u4ef6\u3002\u4f7f\u7528\u8def\u5f84\u5217\u8868\u5f62\u5f0f\u65f6\u53ef\u53c2\u8003\u5982\u4e0b\u65b9\u5f0f\uff1a \u7f51\u7edc\u6a21\u578b\u4e3a\u5355\u8f93\u5165\u65f6\uff1a -i ~/SGS_IPU_SDK/image_test/2007000364.jpg \u7f51\u7edc\u6a21\u578b\u4e3a\u591a\u8f93\u5165\u65f6\uff1a -i /SGS_IPU_SDK/image_test/2007000364.jpg, /SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp -n : \u6307\u5b9a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4e0e\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\u76f8\u5173\u3002 \u8be6\u89c1 Calibrator:\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5 \u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a --export_models : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u65f6\u4fdd\u5b58\u5404\u4e2a\u9636\u6bb5\u7684\u6587\u4ef6\uff0c\u4e0d\u4f7f\u7528\u8be5\u53c2\u6570\u5219\u53ea\u751f\u6210\u79bb\u7ebf\u7f51\u7edc\u6587\u4ef6\u3002 \u4f7f\u7528\u987b\u77e5 \u4f7f\u7528 --export_models \u53c2\u6570\u5fc5\u987b\u540c\u65f6\u4f7f\u7528--output_file\u53c2\u6570 --output_file : \u6307\u5b9a\u751f\u6210\u7684SGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b,\u8be5\u53c2\u6570\u5fc5\u987b\u4e0e --export_models \u4e00\u8d77\u4f7f\u7528\u3002 --work_mode : \u6307\u5b9a\u6a21\u578b\u8f6c\u6362\u4e3a\u5355\u6838\u6a21\u5f0f\u6216\u8005\u53cc\u6838\u6a21\u5f0f\u3002 \u4f7f\u7528\u987b\u77e5 \u53ef\u9009\u6a21\u5f0f\u6709 single_core\uff0c\u8868\u793a\u5355\u6838\u6a21\u578b\u3002 multi_core\uff0c\u8868\u793a\u53cc\u6838\u6a21\u5f0f\u3002 \u82e5\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\uff0c\u9ed8\u8ba4\u4e3a\u5355\u6838\u6a21\u5f0f\u3002 --inplace_input_buf : RAWDATA_F32_NHWC \u662f\u5426\u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf. \u4f7f\u7528\u987b\u77e5 training_input_formats \u548c input_formats \u914d\u7f6e\u4e3a RAWDATA_F32_NHWC \u4e14\u4f7f\u7528 --batch_mode \u7684 one_buf \u6a21\u5f0f\u65f6\u624d\u53ef\u4ee5\u914d\u7f6e\u6b64\u53c2\u6570\u3002 \u53ef\u9009True/False\uff0c\u9ed8\u8ba4\u4e3aTrue\u3002 True : \u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf\u3002 False : \u4fdd\u7559\u539f\u59cb\u8f93\u5165buf\u3002 3\u3001 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 SGS_converter.py tensorflow_graphdef \\ --model_file yolo_v3_7/yolo_v3_7.pb \\ --input_config input_config.ini \\ --input_shapes 1,299,299,3 \\ -i file.list -n yolo_v3_7.py 8.2.5 tensorflow_savemodel \u6846\u67b6\u6307\u4ee4 \u00b6 1\u3001information\uff1a python3 SGS_converter.py tensorflow_savemodel -h usage : SGS_converter.py tensorflow_savemodel [-h] --model_file MODEL_FILE --input_config INPUT_CONFIG -i IMAGE_FILE -n PREPROCESS [--input_shapes INPUT_SHAPES] [--output_file OUTPUT_FILE] [--export_models] optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE SavedModel directory to convert -n PREPROCESS, --preprocess PREPROCESS Name of model to select image preprocess method --input_config INPUT_CONFIG Input config path. -i IMAGE_FILE, --image_file IMAGE_FILE Image / Directory containing images path / Image_list for multi_input model. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth. (default None) --output_file OUTPUT_FILE Full filepath of out Model path. --export_models export models of debug/float/cmodel_float/fix 2\u3001 \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a (1) \u5fc5\u9009\u53c2\u6570\uff1a --model_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 \u8f93\u5165\u7684\u6a21\u578b\u4e3aTensorFlow saved_model.builder\u751f\u6210\u7684\u6587\u4ef6\u8def\u5f84\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\u3002 \u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 -i : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u6240\u9700\u7684\u56fe\u7247\u6587\u4ef6\u8def\u5f84\u3002 \u4f7f\u7528\u987b\u77e5 \u652f\u6301\u4f7f\u7528\u5355\u5f20\u56fe\u7247\u8def\u5f84\u8fdb\u884c\u4f20\u53c2\uff0c\u4e5f\u652f\u6301\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\uff0c\u6216\u5b58\u50a8\u56fe\u7247\u8def\u5f84\u5217\u8868\u7684\u6587\u4ef6\u3002\u4f7f\u7528\u8def\u5f84\u5217\u8868\u5f62\u5f0f\u65f6\u53ef\u53c2\u8003\u5982\u4e0b\u65b9\u5f0f\uff1a \u7f51\u7edc\u6a21\u578b\u4e3a\u5355\u8f93\u5165\u65f6\uff1a -i ~/SGS_IPU_SDK/image_test/2007000364.jpg \u7f51\u7edc\u6a21\u578b\u4e3a\u591a\u8f93\u5165\u65f6\uff1a -i /SGS_IPU_SDK/image_test/2007000364.jpg, /SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp -n : \u6307\u5b9a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4e0e\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\u76f8\u5173\u3002 \u8be6\u89c1 Calibrator:\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5 \u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a --export_models : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u65f6\u4fdd\u5b58\u5404\u4e2a\u9636\u6bb5\u7684\u6587\u4ef6\uff0c\u4e0d\u4f7f\u7528\u8be5\u53c2\u6570\u5219\u53ea\u751f\u6210\u79bb\u7ebf\u7f51\u7edc\u6587\u4ef6\u3002 \u4f7f\u7528\u987b\u77e5 \u4f7f\u7528 --export_models \u53c2\u6570\u5fc5\u987b\u540c\u65f6\u4f7f\u7528--output_file\u53c2\u6570 --output_file : \u6307\u5b9a\u751f\u6210\u7684SGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b,\u8be5\u53c2\u6570\u5fc5\u987b\u4e0e --export_models \u4e00\u8d77\u4f7f\u7528\u3002 --input_shapes : \u7f51\u7edc\u8f93\u5165Tensor\u7684shape\u3002 \u683c\u5f0f\u4e3aNHWC\uff0cdimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0cshape\u4e2a\u6570\u548cinputs \u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002\u82e5\u4e0d\u6307\u5b9a\u5219\u4ecesaved_model_dir\u4e2d\u83b7\u53d6\u3002 --tag_set : \u9700\u8981\u548csave model\u65f6\u6240\u6307\u5b9a\u7684tag\u5339\u914d\u3002 \u5982\u679c\u4e0d\u505a\u8bbe\u5b9a\uff0c\u5219\u9ed8\u8ba4\u4e3a\u2018serve\u2019\u3002 --signature_key : \u9700\u8981\u548csave model\u65f6\u6240\u6307\u5b9a\u7684signature\u5339\u914d\u3002 \u5982\u679c\u4e0d\u505a\u8bbe\u5b9a\uff0c\u5219\u9ed8\u8ba4\u4e3a \u2018DEFAULT_SERVING_SIGNATURE_DEF_KEY\u2019 --work_mode : \u6307\u5b9a\u6a21\u578b\u8f6c\u6362\u4e3a\u5355\u6838\u6a21\u5f0f\u6216\u8005\u53cc\u6838\u6a21\u5f0f\u3002 \u4f7f\u7528\u987b\u77e5 \u53ef\u9009\u6a21\u5f0f\u6709 single_core\uff0c\u8868\u793a\u5355\u6838\u6a21\u578b\u3002 multi_core\uff0c\u8868\u793a\u53cc\u6838\u6a21\u5f0f\u3002 \u82e5\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\uff0c\u9ed8\u8ba4\u4e3a\u5355\u6838\u6a21\u5f0f\u3002 --inplace_input_buf : RAWDATA_F32_NHWC \u662f\u5426\u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf. \u4f7f\u7528\u987b\u77e5 training_input_formats \u548c input_formats \u914d\u7f6e\u4e3a RAWDATA_F32_NHWC \u4e14\u4f7f\u7528 --batch_mode \u7684 one_buf \u6a21\u5f0f\u65f6\u624d\u53ef\u4ee5\u914d\u7f6e\u6b64\u53c2\u6570\u3002 \u53ef\u9009True/False\uff0c\u9ed8\u8ba4\u4e3aTrue\u3002 True : \u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf\u3002 False : \u4fdd\u7559\u539f\u59cb\u8f93\u5165buf\u3002 3\u3001 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 SGS_converter.py tensorflow_savemodel \\ --model_file ~/test/tensorflow_model/save_model \\ --input_config input_config.ini \\ -i file.list -n preprocess.py 8.2.6 keras \u6846\u67b6\u6307\u4ee4 \u00b6 1\u3001information\uff1a python3 SGS_converter.py keras -h usage : SGS_converter.py keras [-h] --model_file MODEL_FILE --input_config INPUT_CONFIG -i IMAGE_FILE -n PREPROCESS [--input_shapes INPUT_SHAPES] [--output_file OUTPUT_FILE] [--export_models] optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE SavedModel directory to convert -n PREPROCESS, --preprocess PREPROCESS Name of model to select image preprocess method --input_config INPUT_CONFIG Input config path. -i IMAGE_FILE, --image_file IMAGE_FILE Image / Directory containing images path / Image_list for multi_input model. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth. (default None) --output_file OUTPUT_FILE Full filepath of out Model path. --export_models export models of debug/float/cmodel_float/fix 2\u3001 \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a (1) \u5fc5\u9009\u53c2\u6570\uff1a --model_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 \u8f93\u5165\u7684\u6a21\u578b\u4e3akeras h5\u683c\u5f0f\u6587\u4ef6\u8def\u5f84\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\u3002 \u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 -i : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u6240\u9700\u7684\u56fe\u7247\u6587\u4ef6\u8def\u5f84\u3002 \u4f7f\u7528\u987b\u77e5 \u652f\u6301\u4f7f\u7528\u5355\u5f20\u56fe\u7247\u8def\u5f84\u8fdb\u884c\u4f20\u53c2\uff0c\u4e5f\u652f\u6301\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\uff0c\u6216\u5b58\u50a8\u56fe\u7247\u8def\u5f84\u5217\u8868\u7684\u6587\u4ef6\u3002\u4f7f\u7528\u8def\u5f84\u5217\u8868\u5f62\u5f0f\u65f6\u53ef\u53c2\u8003\u5982\u4e0b\u65b9\u5f0f\uff1a \u7f51\u7edc\u6a21\u578b\u4e3a\u5355\u8f93\u5165\u65f6\uff1a -i ~/SGS_IPU_SDK/image_test/2007000364.jpg \u7f51\u7edc\u6a21\u578b\u4e3a\u591a\u8f93\u5165\u65f6\uff1a -i /SGS_IPU_SDK/image_test/2007000364.jpg, /SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp -n : \u6307\u5b9a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4e0e\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\u76f8\u5173\u3002 \u8be6\u89c1 Calibrator:\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5 \u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a --export_models : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u65f6\u4fdd\u5b58\u5404\u4e2a\u9636\u6bb5\u7684\u6587\u4ef6\uff0c\u4e0d\u4f7f\u7528\u8be5\u53c2\u6570\u5219\u53ea\u751f\u6210\u79bb\u7ebf\u7f51\u7edc\u6587\u4ef6\u3002 \u4f7f\u7528\u987b\u77e5 \u4f7f\u7528 --export_models \u53c2\u6570\u5fc5\u987b\u540c\u65f6\u4f7f\u7528--output_file\u53c2\u6570 --output_file : \u6307\u5b9a\u751f\u6210\u7684SGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b,\u8be5\u53c2\u6570\u5fc5\u987b\u4e0e --export_models \u4e00\u8d77\u4f7f\u7528\u3002 --custom_objects : Dict mapping names (strings) to custom classes or functions to be considered during model deserialization (default None). --work_mode : \u6307\u5b9a\u6a21\u578b\u8f6c\u6362\u4e3a\u5355\u6838\u6a21\u5f0f\u6216\u8005\u53cc\u6838\u6a21\u5f0f\u3002 \u4f7f\u7528\u987b\u77e5 \u53ef\u9009\u6a21\u5f0f\u6709 single_core\uff0c\u8868\u793a\u5355\u6838\u6a21\u578b\u3002 multi_core\uff0c\u8868\u793a\u53cc\u6838\u6a21\u5f0f\u3002 \u82e5\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\uff0c\u9ed8\u8ba4\u4e3a\u5355\u6838\u6a21\u5f0f\u3002 --inplace_input_buf : RAWDATA_F32_NHWC \u662f\u5426\u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf. \u4f7f\u7528\u987b\u77e5 training_input_formats \u548c input_formats \u914d\u7f6e\u4e3a RAWDATA_F32_NHWC \u4e14\u4f7f\u7528 --batch_mode \u7684 one_buf \u6a21\u5f0f\u65f6\u624d\u53ef\u4ee5\u914d\u7f6e\u6b64\u53c2\u6570\u3002 \u53ef\u9009True/False\uff0c\u9ed8\u8ba4\u4e3aTrue\u3002 True : \u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf\u3002 False : \u4fdd\u7559\u539f\u59cb\u8f93\u5165buf\u3002 3\u3001 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 SGS_converter.py keras \\ --model_file resnet50.h5 \\ --input_config input_config.ini \\ -i file.list -n resnet50.py 8.3. \u8f6c\u6362\u5e26\u6709\u7279\u6b8a\u8bbe\u5b9a\u7684\u6a21\u578b \u00b6 \u4f7f\u7528Convert\u3001Calibrator\u3001Compiler\u5de5\u5177\u751f\u6210SGS\u5404\u9636\u6bb5\u7f51\u7edc\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e\u8f6c\u6362\u6307\u4ee4\u53c2\u6570\u7684\u65b9\u5f0f\u6307\u5b9a\u6a21\u578b\u7684\u8f6c\u6362\u6a21\u5f0f\u3002\u5982\u679c\u9700\u8981\u4f7f\u7528\u4e00\u952e\u8f6c\u6362\u5de5\u5177\u5b9e\u73b0\u4e0a\u8ff0\u5de5\u5177\u7684\u540c\u7b49\u529f\u80fd\uff0c\u53ef\u4ee5\u901a\u8fc7 (1)\u5728input_config.ini\u4e2d\u914d\u7f6e\u6307\u5b9a\u53c2\u6570\uff08\u5bf9input_config.ini\u914d\u7f6e\u4fe1\u606f\u7684\u8be6\u7ec6\u8bf4\u660e\u5df2\u5728 Convert Tool:input_config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e \u4e2d\u7ed9\u51fa\uff09 (2)\u5728\u8f6c\u6362\u6307\u4ee4\u4e2d\u914d\u7f6e\u6307\u5b9a\u53c2\u6570 \u4e24\u79cd\u65b9\u5f0f\u5b9e\u73b0\uff0c\u5b9e\u73b0\u5404\u529f\u80fd\u6240\u5bf9\u5e94\u7684\u65b9\u6cd5\u5982\u4e0b\u6240\u793a\uff1a (1) \u529f\u80fd\u4e00\uff1a\u6307\u5b9a\u6a21\u578b\u8f6c\u4e3a\u5355\u6838\u6a21\u5f0f\u6216\u8005\u591a\u6838\u6a21\u5f0f \u8be5\u529f\u80fd\u5bf9\u5e94 Calibrator \u4e2d\u7684\u53ef\u9009\u53c2\u6570 --work_mode \u6240\u5b9e\u73b0\u7684\u529f\u80fd\uff1b \u4e00\u952e\u8f6c\u6362\u6a21\u578b\u65f6\uff0c\u901a\u8fc7\u5728 \u8f6c\u6362\u547d\u4ee4 \u4e2d\u914d\u7f6e\u53c2\u6570'--work_mode'\u5b9e\u73b0. \u4f7f\u7528\u987b\u77e5 \u53ef\u9009\u6a21\u5f0f\u6709 single_core\uff0c\u8868\u793a\u5355\u6838\u6a21\u578b\u3002 multi_core\uff0c\u8868\u793a\u53cc\u6838\u6a21\u5f0f\u3002 \u82e5\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\uff0c\u9ed8\u8ba4\u4e3a\u5355\u6838\u6a21\u5f0f\u3002 (2) \u529f\u80fd\u4e8c\uff1a\u6307\u5b9a\u540c\u65f6\u8fd0\u884c\u7684\u8fdb\u7a0b\u6570 \u8be5\u529f\u80fd\u5bf9\u5e94 Calibrator \u4e2d\u7684\u53ef\u9009\u53c2\u6570 --num_process \u6240\u5b9e\u73b0\u7684\u529f\u80fd\uff1b \u4e00\u952e\u8f6c\u6362\u6a21\u578b\u65f6\uff0c\u901a\u8fc7\u5728 input_config.ini \u7684[INPUT_CONFIG]\u4e2d\u914d\u7f6e num_process \u6307\u5b9a\u8fdb\u7a0b\u6570\u5b9e\u73b0\uff1a [ INPUT_CONFIG ] ; Amount of processes run at same time . num_process = 10 ; \u4f7f\u7528\u987b\u77e5 \u5982\u679c\u65e0\u8fdb\u7a0b\u6570\u8981\u6c42\uff0c\u5219\u65e0\u9700\u5728input_config.ini\u4e2d\u914d\u7f6e\u8be5\u53c2\u6570\uff0c\u5e76\u5c06\u4f7f\u7528\u9ed8\u8ba4\u503c10\u8fdb\u884c\u6a21\u578b\u8f6c\u6362\u3002 (3) \u529f\u80fd\u4e09\uff1a\u9009\u62e9\u91cf\u5316\u7b49\u7ea7 \u8be5\u529f\u80fd\u5bf9\u5e94 Calibrator \u4e2d\u7684\u53ef\u9009\u53c2\u6570 --quant_level \u6240\u5b9e\u73b0\u7684\u529f\u80fd\uff1b \u4e00\u952e\u8f6c\u6362\u6a21\u578b\u65f6\uff0c\u901a\u8fc7\u5728 input_config.ini \u7684[INPUT_CONFIG]\u4e2d\u914d\u7f6e --quant_level \u6307\u5b9a\u91cf\u5316\u7b49\u7ea7\u5b9e\u73b0\uff1a [ INPUT_CONFIG ] ; choices = [ 'L1' , 'L2' , 'L3' , 'L4' , 'L5' ], ; Indicate Quantilization level . The higher the level , the slower the speed and the higher the accuracy . quant_level = L5 ; \u4f7f\u7528\u987b\u77e5 \u5982\u679c\u65e0\u91cf\u5316\u8981\u6c42\uff0c\u5219\u65e0\u9700\u5728input_config.ini\u4e2d\u914d\u7f6e\u8be5\u53c2\u6570\uff0c\u5c06\u4f7f\u7528\u9ed8\u8ba4\u503cL5\u8fdb\u884c\u6a21\u578b\u8f6c\u6362\u3002 (4) \u529f\u80fd\u56db\uff1a\u9009\u62e9\u91cf\u5316\u5de5\u5177 \u8be5\u529f\u80fd\u5bf9\u5e94 Calibrator \u4e2d\u7684 torch_calibrator\u5de5\u5177 \u6240\u5b9e\u73b0\u7684\u529f\u80fd\uff1b\u5982\u9700\u9009\u62e9\u91cf\u5316\u5de5\u5177\uff0c\u8bf7\u4f7f\u7528\u5206\u9636\u6bb5\u8f6c\u6362\u6a21\u578b\u7684\u65b9\u5f0f\u8fdb\u884c\u6a21\u578b\u8f6c\u6362\u3002 (5) \u529f\u80fd\u4e94\uff1a\u9009\u62e9Batch\u6570 \u8be5\u529f\u80fd\u5bf9\u5e94 Compiler \u4e2d\u7684\u53ef\u9009\u53c2\u6570 -b, --batch \u548c --batch_mode \u6240\u5b9e\u73b0\u7684\u529f\u80fd\uff1b \u4e00\u952e\u8f6c\u6362\u6a21\u578b\u65f6\uff0c\u901a\u8fc7\u5728 input_config.ini \u7684[INPUT_CONFIG]\u4e2d\u914d\u7f6e batch \u6307\u5b9aBatch\u6570,\u914d\u7f6e batchmode \u6307\u5b9a\u591abatch\u6a21\u5f0f\u5b9e\u73b0\uff1a [ INPUT_CONFIG ] ; Expected max batch size in normal batch mode , or specific batches , comma - separated for multi - batches batch = 1 ; ; choices = [ 'n_buf' , 'one_buf' ] batchmode = one_buf ; \u4f7f\u7528\u987b\u77e5 \u5982\u679c\u65e0\u9700\u6c42\uff0c\u5219\u65e0\u9700\u5728input_config.ini\u4e2d\u914d\u7f6e\u76f8\u5173\u53c2\u6570\uff0c\u5c06\u4f7f\u7528\u9ed8\u8ba4\u503c(batch=1,batchmode=one_buf)\u8fdb\u884c\u6a21\u578b\u8f6c\u6362\u3002 (6) \u529f\u80fd\u516d\uff1a\u9009\u62e9\u6a21\u578b\u7684\u7c7b\u522b \u8be5\u529f\u80fd\u5bf9\u5e94 Compiler \u4e2d\u7684\u53ef\u9009\u53c2\u6570 -c, --category \u6240\u5b9e\u73b0\u7684\u529f\u80fd\uff1b \u4e00\u952e\u8f6c\u6362\u6a21\u578b\u65f6\u65e0\u9700\u5bf9\u8be5\u53c2\u6570\u8fdb\u884c\u914d\u7f6e\u3002 (7) \u529f\u80fd\u4e03\uff1a RAWDATA_F32_NHWC \u662f\u5426\u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf. \u8be5\u529f\u80fd\u5bf9\u5e94 Compiler \u4e2d\u7684\u53ef\u9009\u53c2\u6570 --inplace_input_buf \u6240\u5b9e\u73b0\u7684\u529f\u80fd\uff1b \u4e00\u952e\u8f6c\u6362\u6a21\u578b\u65f6\uff0c\u901a\u8fc7\u5728 \u8f6c\u6362\u547d\u4ee4 \u4e2d\u914d\u7f6e\u53c2\u6570 --inplace_input_buf \u5b9e\u73b0.","title":"OneClick Generation"},{"location":"module/User_Guide/IPU260/OneClick_Generation.html#81-sgs_converter","text":"SGS_Converter \u8bf4\u660e \u5de5\u5177\u4f4d\u7f6e SGS_IPU_SDK/Scripts/ConvertTool/SGS_converter.py \u5de5\u5177\u4f5c\u7528 \u5c06\u6a21\u578b\u4e00\u952e\u8f6c\u6362\u4e3aSGS\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b \u4f7f\u7528\u987b\u77e5 \u2460 \u652f\u6301\u4ece tensorflow_graphdef \uff0c tensorflow_savemodel \uff0c keras \uff0c tflite \uff0c caffe \uff0c onnx \u516d\u79cd\u6846\u67b6\u6a21\u578b\u8f6c\u6362 \u4e0d\u540c\u6846\u67b6\u6a21\u578b\u4e00\u952e\u8f6c\u6362\u7684\u4f7f\u7528\u65b9\u6cd5 \u2461 \u9700\u914d\u7f6einput config \u4fe1\u606f \u8be6\u89c1 input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e \u4f7f\u7528\u524d\u5148\u5728SGS_IPU_SDK\u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK source cfg_env.sh","title":"8.1.   SGS_Converter\u7b80\u4ecb"},{"location":"module/User_Guide/IPU260/OneClick_Generation.html#82-sgs","text":"\u4e0b\u9762\u662fSGS_Converter\u76ee\u524d\u652f\u6301\u7684platform information\uff1a python3 SGS_converter.py -h usage : SGS_converter.py [-h] {tensorflow_graphdef,tensorflow_savemodel,keras,tflite,caffe,onnx,debug} ... Convert Tool positional arguments : {tensorflow_graphdef,tensorflow_savemodel,keras,tflite,caffe,onnx,debug} platform info tensorflow_graphdef tensorflow graphdef commands tensorflow_savemodel tensorflow save_model commands keras keras commands tflite tflite commands caffe caffe commands onnx onnx commands debug debug commands optional arguments : -h, --help show this help message and exit \u4e0d\u540c\u5e73\u53f0\u6a21\u578b\u8f6c\u6362\u4e3aSGS\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u7684\u6240\u9700\u53c2\u6570\u4fe1\u606f\u7565\u6709\u4e0d\u540c\uff0c\u5982\u679c\u60f3\u8fdb\u4e00\u6b65\u4e86\u89e3\u5404\u4e2a\u5e73\u53f0\u8f6c\u6362\u6240\u9700\u8981\u7684\u53c2\u6570\u4fe1\u606f\uff0c\u53ef\u4ee5\u6267\u884c python3 SGS_converter.py {platform} \u2013h \u8fdb\u884c\u67e5\u770b\u3002 \u4e0b\u9762\u5c06\u7b80\u5355\u4ecb\u7ecd\u5404\u4e2a\u5e73\u53f0\u8f6c\u6362\u6240\u9700\u7684\u5177\u4f53\u4fe1\u606f\u548c\u67e5\u770b\u6307\u4ee4\uff1a","title":"8.2.   \u4e0d\u540c\u6846\u67b6\u6a21\u578b\u4e00\u952e\u8f6c\u6362\u4e3aSGS\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u7684\u4f7f\u7528\u65b9\u6cd5"},{"location":"module/User_Guide/IPU260/OneClick_Generation.html#821-caffe","text":"1\u3001information\uff1a python3 SGS_converter.py caffe -h usage : SGS_converter.py caffe [-h] --model_file MODEL_FILE --weight_file WEIGHT_FILE --input_config INPUT_CONFIG -i IMAGE_FILE -n PREPROCESS [--input_shapes INPUT_SHAPES] [--output_file OUTPUT_FILE] [--export_models] optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE SavedModel directory to convert --weight_file WEIGHT_FILE Full filepath of tflite file containing the caffe -n PREPROCESS, --preprocess PREPROCESS Name of model to select image preprocess method --input_config INPUT_CONFIG Input config path. -i IMAGE_FILE, --image_file IMAGE_FILE Image / Directory containing images path / Image_list for multi_input model. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth. (default None) --output_file OUTPUT_FILE Full filepath of out Model path. --export_models export models of debug/float/cmodel_float/fix 2\u3001 \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a (1) \u5fc5\u9009\u53c2\u6570\uff1a --model_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684caffe\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 --weight_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684caffe\u6743\u91cd\u6587\u4ef6\u8def\u5f84\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\u3002 \u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 -i : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u6240\u9700\u7684\u56fe\u7247\u6587\u4ef6\u8def\u5f84\u3002 \u4f7f\u7528\u987b\u77e5 \u652f\u6301\u4f7f\u7528\u5355\u5f20\u56fe\u7247\u8def\u5f84\u8fdb\u884c\u4f20\u53c2\uff0c\u4e5f\u652f\u6301\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\uff0c\u6216\u5b58\u50a8\u56fe\u7247\u8def\u5f84\u5217\u8868\u7684\u6587\u4ef6\u3002\u4f7f\u7528\u8def\u5f84\u5217\u8868\u5f62\u5f0f\u65f6\u53ef\u53c2\u8003\u5982\u4e0b\u65b9\u5f0f\uff1a \u7f51\u7edc\u6a21\u578b\u4e3a\u5355\u8f93\u5165\u65f6\uff1a -i ~/SGS_IPU_SDK/image_test/2007000364.jpg \u7f51\u7edc\u6a21\u578b\u4e3a\u591a\u8f93\u5165\u65f6\uff1a -i /SGS_IPU_SDK/image_test/2007000364.jpg, /SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp -n : \u6307\u5b9a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4e0e\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\u76f8\u5173\u3002 \u8be6\u89c1 Calibrator:\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5 \u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a --export_models : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u65f6\u4fdd\u5b58\u5404\u4e2a\u9636\u6bb5\u7684\u6587\u4ef6\uff0c\u4e0d\u4f7f\u7528\u8be5\u53c2\u6570\u5219\u53ea\u751f\u6210\u79bb\u7ebf\u7f51\u7edc\u6587\u4ef6\u3002 \u4f7f\u7528\u987b\u77e5 \u4f7f\u7528 --export_models \u53c2\u6570\u5fc5\u987b\u540c\u65f6\u4f7f\u7528--output_file\u53c2\u6570 --output_file : \u6307\u5b9a\u751f\u6210\u7684SGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b,\u8be5\u53c2\u6570\u5fc5\u987b\u4e0e --export_models \u4e00\u8d77\u4f7f\u7528\u3002 --work_mode : \u6307\u5b9a\u6a21\u578b\u8f6c\u6362\u4e3a\u5355\u6838\u6a21\u5f0f\u6216\u8005\u53cc\u6838\u6a21\u5f0f\u3002 \u4f7f\u7528\u987b\u77e5 \u53ef\u9009\u6a21\u5f0f\u6709 single_core\uff0c\u8868\u793a\u5355\u6838\u6a21\u578b\u3002 multi_core\uff0c\u8868\u793a\u53cc\u6838\u6a21\u5f0f\u3002 \u82e5\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\uff0c\u9ed8\u8ba4\u4e3a\u5355\u6838\u6a21\u5f0f\u3002 --inplace_input_buf : RAWDATA_F32_NHWC \u662f\u5426\u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf. \u4f7f\u7528\u987b\u77e5 training_input_formats \u548c input_formats \u914d\u7f6e\u4e3a RAWDATA_F32_NHWC \u4e14\u4f7f\u7528 --batch_mode \u7684 one_buf \u6a21\u5f0f\u65f6\u624d\u53ef\u4ee5\u914d\u7f6e\u6b64\u53c2\u6570\u3002 \u53ef\u9009True/False\uff0c\u9ed8\u8ba4\u4e3aTrue\u3002 True : \u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf\u3002 False : \u4fdd\u7559\u539f\u59cb\u8f93\u5165buf\u3002 3\u3001 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 SGS_converter.py caffe \\ --model_file caffe_resnet50_conv.prototxt \\ --weight_file caffe_resnet50_conv.caffemodel \\ --input_config input_config.ini \\ -i file.list -n preprocess.py --export_models --output_file resnet50_float.sim","title":"8.2.1 caffe \u6846\u67b6\u6307\u4ee4"},{"location":"module/User_Guide/IPU260/OneClick_Generation.html#822-onnx","text":"1\u3001information\uff1a python3 SGS_converter.py onnx -h usage : SGS_converter.py onnx [-h] --model_file MODEL_FILE --input_config INPUT_CONFIG -i IMAGE_FILE -n PREPROCESS [--input_shapes INPUT_SHAPES] [--output_file OUTPUT_FILE] [--export_models] optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE SavedModel directory to convert -n PREPROCESS, --preprocess PREPROCESS Name of model to select image preprocess method --input_config INPUT_CONFIG Input config path. -i IMAGE_FILE, --image_file IMAGE_FILE Image / Directory containing images path / Image_list for multi_input model. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth. (default None) --output_file OUTPUT_FILE Full filepath of out Model path. --export_models export models of debug/float/cmodel_float/fix 2\u3001 \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a (1) \u5fc5\u9009\u53c2\u6570\uff1a --model_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684caffe\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 --input_shapes : Onnx\u6a21\u578b\u8f93\u5165shape. dimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0cshape\u4e2a\u6570\u548cinputs \u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\u3002 \u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 -i : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u6240\u9700\u7684\u56fe\u7247\u6587\u4ef6\u8def\u5f84\u3002 \u4f7f\u7528\u987b\u77e5 \u652f\u6301\u4f7f\u7528\u5355\u5f20\u56fe\u7247\u8def\u5f84\u8fdb\u884c\u4f20\u53c2\uff0c\u4e5f\u652f\u6301\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\uff0c\u6216\u5b58\u50a8\u56fe\u7247\u8def\u5f84\u5217\u8868\u7684\u6587\u4ef6\u3002\u4f7f\u7528\u8def\u5f84\u5217\u8868\u5f62\u5f0f\u65f6\u53ef\u53c2\u8003\u5982\u4e0b\u65b9\u5f0f\uff1a \u7f51\u7edc\u6a21\u578b\u4e3a\u5355\u8f93\u5165\u65f6\uff1a -i ~/SGS_IPU_SDK/image_test/2007000364.jpg \u7f51\u7edc\u6a21\u578b\u4e3a\u591a\u8f93\u5165\u65f6\uff1a -i /SGS_IPU_SDK/image_test/2007000364.jpg, /SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp -n : \u6307\u5b9a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4e0e\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\u76f8\u5173\u3002 \u8be6\u89c1 Calibrator:\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5 \u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a --export_models : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u65f6\u4fdd\u5b58\u5404\u4e2a\u9636\u6bb5\u7684\u6587\u4ef6\uff0c\u4e0d\u4f7f\u7528\u8be5\u53c2\u6570\u5219\u53ea\u751f\u6210\u79bb\u7ebf\u7f51\u7edc\u6587\u4ef6\u3002 \u4f7f\u7528\u987b\u77e5 \u4f7f\u7528 --export_models \u53c2\u6570\u5fc5\u987b\u540c\u65f6\u4f7f\u7528--output_file\u53c2\u6570 --output_file : \u6307\u5b9a\u751f\u6210\u7684SGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b,\u8be5\u53c2\u6570\u5fc5\u987b\u4e0e --export_models \u4e00\u8d77\u4f7f\u7528\u3002 --work_mode : \u6307\u5b9a\u6a21\u578b\u8f6c\u6362\u4e3a\u5355\u6838\u6a21\u5f0f\u6216\u8005\u53cc\u6838\u6a21\u5f0f\u3002 \u4f7f\u7528\u987b\u77e5 \u53ef\u9009\u6a21\u5f0f\u6709 single_core\uff0c\u8868\u793a\u5355\u6838\u6a21\u578b\u3002 multi_core\uff0c\u8868\u793a\u53cc\u6838\u6a21\u5f0f\u3002 \u82e5\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\uff0c\u9ed8\u8ba4\u4e3a\u5355\u6838\u6a21\u5f0f\u3002 --inplace_input_buf : RAWDATA_F32_NHWC \u662f\u5426\u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf. \u4f7f\u7528\u987b\u77e5 training_input_formats \u548c input_formats \u914d\u7f6e\u4e3a RAWDATA_F32_NHWC \u4e14\u4f7f\u7528 --batch_mode \u7684 one_buf \u6a21\u5f0f\u65f6\u624d\u53ef\u4ee5\u914d\u7f6e\u6b64\u53c2\u6570\u3002 \u53ef\u9009True/False\uff0c\u9ed8\u8ba4\u4e3aTrue\u3002 True : \u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf\u3002 False : \u4fdd\u7559\u539f\u59cb\u8f93\u5165buf\u3002 3\u3001 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 ~/SGS_IPU_SDK/Scripts/ConvertTool/SGS_converter.py onnx --model_file ~/SGS_Models/onnx/onnx_mobilenet_v2/onnx_mobilenet_v2.onnx \\ --input_shapes 1,3,224,224 \\ --input_config ~/SGS_Models/onnx/onnx_mobilenet_v2/input_config.ini \\ -i file.list -n preprocess.py --export_models --output_file onnx_mobilenet_v2_float.sim Note 1.\u5982\u679connx\u6a21\u578b\u4e2d\u5e26\u6709\u540e\u5904\u7406\u7684\u7b97\u5b50\uff0c\u8bf7\u5148\u53bb\u9664\uff0c\u76ee\u524d\u53ea\u652f\u6301\u4e3b\u5e72\u7f51\u7edc\u7684\u8f6c\u6362\u3002\u5982\u679c\u662f\u7531\u5176\u4ed6\u6846\u67b6\u751f\u6210\u7684onnx\u6a21\u578b\uff0c\u8bf7\u52a1\u5fc5\u6ce8\u610f\u5728\u8f6c\u6362\u6a21\u578b\u65f6\u5173\u95ed\u751f\u6210\u540e\u5904\u7406\u7684\u9009\u9879\u3002","title":"8.2.2 onnx \u6846\u67b6\u6307\u4ee4"},{"location":"module/User_Guide/IPU260/OneClick_Generation.html#823-tflite","text":"1\u3001information\uff1a python3 SGS_converter.py tflite -h usage : SGS_converter.py tflite [-h] --model_file MODEL_FILE --input_config INPUT_CONFIG -i IMAGE_FILE -n PREPROCESS [--input_shapes INPUT_SHAPES] [--output_file OUTPUT_FILE] [--export_models] optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE SavedModel directory to convert -n PREPROCESS, --preprocess PREPROCESS Name of model to select image preprocess method --input_config INPUT_CONFIG Input config path. -i IMAGE_FILE, --image_file IMAGE_FILE Image / Directory containing images path / Image_list for multi_input model. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth. (default None) --output_file OUTPUT_FILE Full filepath of out Model path. --export_models export models of debug/float/cmodel_float/fix 2\u3001 \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a (1) \u5fc5\u9009\u53c2\u6570\uff1a --model_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 \u8f93\u5165\u7684\u6a21\u578b\u4e3atflite\u683c\u5f0f\u6587\u4ef6\u8def\u5f84(\u5fc5\u987b\u4e3a\u975e\u91cf\u5316\u6a21\u578b)\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\u3002 \u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 -i : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u6240\u9700\u7684\u56fe\u7247\u6587\u4ef6\u8def\u5f84\u3002 \u4f7f\u7528\u987b\u77e5 \u652f\u6301\u4f7f\u7528\u5355\u5f20\u56fe\u7247\u8def\u5f84\u8fdb\u884c\u4f20\u53c2\uff0c\u4e5f\u652f\u6301\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\uff0c\u6216\u5b58\u50a8\u56fe\u7247\u8def\u5f84\u5217\u8868\u7684\u6587\u4ef6\u3002\u4f7f\u7528\u8def\u5f84\u5217\u8868\u5f62\u5f0f\u65f6\u53ef\u53c2\u8003\u5982\u4e0b\u65b9\u5f0f\uff1a \u7f51\u7edc\u6a21\u578b\u4e3a\u5355\u8f93\u5165\u65f6\uff1a -i ~/SGS_IPU_SDK/image_test/2007000364.jpg \u7f51\u7edc\u6a21\u578b\u4e3a\u591a\u8f93\u5165\u65f6\uff1a -i /SGS_IPU_SDK/image_test/2007000364.jpg, /SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp -n : \u6307\u5b9a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4e0e\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\u76f8\u5173\u3002 \u8be6\u89c1 Calibrator:\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5 \u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a --export_models : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u65f6\u4fdd\u5b58\u5404\u4e2a\u9636\u6bb5\u7684\u6587\u4ef6\uff0c\u4e0d\u4f7f\u7528\u8be5\u53c2\u6570\u5219\u53ea\u751f\u6210\u79bb\u7ebf\u7f51\u7edc\u6587\u4ef6\u3002 \u4f7f\u7528\u987b\u77e5 \u4f7f\u7528 --export_models \u53c2\u6570\u5fc5\u987b\u540c\u65f6\u4f7f\u7528--output_file\u53c2\u6570 --output_file : \u6307\u5b9a\u751f\u6210\u7684SGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b,\u8be5\u53c2\u6570\u5fc5\u987b\u4e0e --export_models \u4e00\u8d77\u4f7f\u7528\u3002 --work_mode : \u6307\u5b9a\u6a21\u578b\u8f6c\u6362\u4e3a\u5355\u6838\u6a21\u5f0f\u6216\u8005\u53cc\u6838\u6a21\u5f0f\u3002 \u4f7f\u7528\u987b\u77e5 \u53ef\u9009\u6a21\u5f0f\u6709 single_core\uff0c\u8868\u793a\u5355\u6838\u6a21\u578b\u3002 multi_core\uff0c\u8868\u793a\u53cc\u6838\u6a21\u5f0f\u3002 \u82e5\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\uff0c\u9ed8\u8ba4\u4e3a\u5355\u6838\u6a21\u5f0f\u3002 --inplace_input_buf : RAWDATA_F32_NHWC \u662f\u5426\u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf. \u4f7f\u7528\u987b\u77e5 training_input_formats \u548c input_formats \u914d\u7f6e\u4e3a RAWDATA_F32_NHWC \u4e14\u4f7f\u7528 --batch_mode \u7684 one_buf \u6a21\u5f0f\u65f6\u624d\u53ef\u4ee5\u914d\u7f6e\u6b64\u53c2\u6570\u3002 \u53ef\u9009True/False\uff0c\u9ed8\u8ba4\u4e3aTrue\u3002 True : \u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf\u3002 False : \u4fdd\u7559\u539f\u59cb\u8f93\u5165buf\u3002 3\u3001 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 SGS_converter.py tflite \\ --model_file Debug_save_model_float.tflite \\ --input_config input_config.ini \\ -i file.list -n preprocess.py","title":"8.2.3 tflite \u6846\u67b6\u6307\u4ee4"},{"location":"module/User_Guide/IPU260/OneClick_Generation.html#824-tensorflow_graphdef","text":"1\u3001information\uff1a python3 SGS_converter.py tensorflow_graphdef -h usage : SGS_converter.py tensorflow_graphdef [-h] --model_file MODEL_FILE --input_config INPUT_CONFIG -i IMAGE_FILE -n PREPROCESS [--input_shapes INPUT_SHAPES] [--output_file OUTPUT_FILE] [--export_models] optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE Full filepath of file containing frozen GraphDef --input_config INPUT_CONFIG Input config path. -i IMAGE_FILE, --image_file IMAGE_FILE Image / Directory containing images path / Image_list for multi_input model. -n PREPROCESS, --preprocess PREPROCESS Name of model to select image preprocess method --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth. (default None) --output_file OUTPUT_FILE Full filepath of out Model path. --export_models export models of debug/float/cmodel_float/fix 2\u3001 \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a (1) \u5fc5\u9009\u53c2\u6570\uff1a --model_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684\u8f93\u5165\u6a21\u578b\u8def\u5f84\u3002 \u4e3aTensorFlow frozen\u7684graphdef\u7684pb\u683c\u5f0f\u6587\u4ef6\u8def\u5f84\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\u3002 \u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 --input_shapes : \u6307\u5b9a\u7f51\u7edc\u8f93\u5165Tensor\u7684shape\u3002 \u683c\u5f0f\u4e3aNHWC\uff0cdimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff1b\u9700\u6ce8\u610fshape\u4e2a\u6570\u548cinputs\u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002 -i : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u6240\u9700\u7684\u56fe\u7247\u6587\u4ef6\u8def\u5f84\u3002 \u4f7f\u7528\u987b\u77e5 \u652f\u6301\u4f7f\u7528\u5355\u5f20\u56fe\u7247\u8def\u5f84\u8fdb\u884c\u4f20\u53c2\uff0c\u4e5f\u652f\u6301\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\uff0c\u6216\u5b58\u50a8\u56fe\u7247\u8def\u5f84\u5217\u8868\u7684\u6587\u4ef6\u3002\u4f7f\u7528\u8def\u5f84\u5217\u8868\u5f62\u5f0f\u65f6\u53ef\u53c2\u8003\u5982\u4e0b\u65b9\u5f0f\uff1a \u7f51\u7edc\u6a21\u578b\u4e3a\u5355\u8f93\u5165\u65f6\uff1a -i ~/SGS_IPU_SDK/image_test/2007000364.jpg \u7f51\u7edc\u6a21\u578b\u4e3a\u591a\u8f93\u5165\u65f6\uff1a -i /SGS_IPU_SDK/image_test/2007000364.jpg, /SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp -n : \u6307\u5b9a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4e0e\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\u76f8\u5173\u3002 \u8be6\u89c1 Calibrator:\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5 \u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a --export_models : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u65f6\u4fdd\u5b58\u5404\u4e2a\u9636\u6bb5\u7684\u6587\u4ef6\uff0c\u4e0d\u4f7f\u7528\u8be5\u53c2\u6570\u5219\u53ea\u751f\u6210\u79bb\u7ebf\u7f51\u7edc\u6587\u4ef6\u3002 \u4f7f\u7528\u987b\u77e5 \u4f7f\u7528 --export_models \u53c2\u6570\u5fc5\u987b\u540c\u65f6\u4f7f\u7528--output_file\u53c2\u6570 --output_file : \u6307\u5b9a\u751f\u6210\u7684SGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b,\u8be5\u53c2\u6570\u5fc5\u987b\u4e0e --export_models \u4e00\u8d77\u4f7f\u7528\u3002 --work_mode : \u6307\u5b9a\u6a21\u578b\u8f6c\u6362\u4e3a\u5355\u6838\u6a21\u5f0f\u6216\u8005\u53cc\u6838\u6a21\u5f0f\u3002 \u4f7f\u7528\u987b\u77e5 \u53ef\u9009\u6a21\u5f0f\u6709 single_core\uff0c\u8868\u793a\u5355\u6838\u6a21\u578b\u3002 multi_core\uff0c\u8868\u793a\u53cc\u6838\u6a21\u5f0f\u3002 \u82e5\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\uff0c\u9ed8\u8ba4\u4e3a\u5355\u6838\u6a21\u5f0f\u3002 --inplace_input_buf : RAWDATA_F32_NHWC \u662f\u5426\u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf. \u4f7f\u7528\u987b\u77e5 training_input_formats \u548c input_formats \u914d\u7f6e\u4e3a RAWDATA_F32_NHWC \u4e14\u4f7f\u7528 --batch_mode \u7684 one_buf \u6a21\u5f0f\u65f6\u624d\u53ef\u4ee5\u914d\u7f6e\u6b64\u53c2\u6570\u3002 \u53ef\u9009True/False\uff0c\u9ed8\u8ba4\u4e3aTrue\u3002 True : \u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf\u3002 False : \u4fdd\u7559\u539f\u59cb\u8f93\u5165buf\u3002 3\u3001 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 SGS_converter.py tensorflow_graphdef \\ --model_file yolo_v3_7/yolo_v3_7.pb \\ --input_config input_config.ini \\ --input_shapes 1,299,299,3 \\ -i file.list -n yolo_v3_7.py","title":"8.2.4 tensorflow_graphdef \u6846\u67b6\u6307\u4ee4"},{"location":"module/User_Guide/IPU260/OneClick_Generation.html#825-tensorflow_savemodel","text":"1\u3001information\uff1a python3 SGS_converter.py tensorflow_savemodel -h usage : SGS_converter.py tensorflow_savemodel [-h] --model_file MODEL_FILE --input_config INPUT_CONFIG -i IMAGE_FILE -n PREPROCESS [--input_shapes INPUT_SHAPES] [--output_file OUTPUT_FILE] [--export_models] optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE SavedModel directory to convert -n PREPROCESS, --preprocess PREPROCESS Name of model to select image preprocess method --input_config INPUT_CONFIG Input config path. -i IMAGE_FILE, --image_file IMAGE_FILE Image / Directory containing images path / Image_list for multi_input model. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth. (default None) --output_file OUTPUT_FILE Full filepath of out Model path. --export_models export models of debug/float/cmodel_float/fix 2\u3001 \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a (1) \u5fc5\u9009\u53c2\u6570\uff1a --model_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 \u8f93\u5165\u7684\u6a21\u578b\u4e3aTensorFlow saved_model.builder\u751f\u6210\u7684\u6587\u4ef6\u8def\u5f84\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\u3002 \u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 -i : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u6240\u9700\u7684\u56fe\u7247\u6587\u4ef6\u8def\u5f84\u3002 \u4f7f\u7528\u987b\u77e5 \u652f\u6301\u4f7f\u7528\u5355\u5f20\u56fe\u7247\u8def\u5f84\u8fdb\u884c\u4f20\u53c2\uff0c\u4e5f\u652f\u6301\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\uff0c\u6216\u5b58\u50a8\u56fe\u7247\u8def\u5f84\u5217\u8868\u7684\u6587\u4ef6\u3002\u4f7f\u7528\u8def\u5f84\u5217\u8868\u5f62\u5f0f\u65f6\u53ef\u53c2\u8003\u5982\u4e0b\u65b9\u5f0f\uff1a \u7f51\u7edc\u6a21\u578b\u4e3a\u5355\u8f93\u5165\u65f6\uff1a -i ~/SGS_IPU_SDK/image_test/2007000364.jpg \u7f51\u7edc\u6a21\u578b\u4e3a\u591a\u8f93\u5165\u65f6\uff1a -i /SGS_IPU_SDK/image_test/2007000364.jpg, /SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp -n : \u6307\u5b9a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4e0e\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\u76f8\u5173\u3002 \u8be6\u89c1 Calibrator:\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5 \u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a --export_models : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u65f6\u4fdd\u5b58\u5404\u4e2a\u9636\u6bb5\u7684\u6587\u4ef6\uff0c\u4e0d\u4f7f\u7528\u8be5\u53c2\u6570\u5219\u53ea\u751f\u6210\u79bb\u7ebf\u7f51\u7edc\u6587\u4ef6\u3002 \u4f7f\u7528\u987b\u77e5 \u4f7f\u7528 --export_models \u53c2\u6570\u5fc5\u987b\u540c\u65f6\u4f7f\u7528--output_file\u53c2\u6570 --output_file : \u6307\u5b9a\u751f\u6210\u7684SGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b,\u8be5\u53c2\u6570\u5fc5\u987b\u4e0e --export_models \u4e00\u8d77\u4f7f\u7528\u3002 --input_shapes : \u7f51\u7edc\u8f93\u5165Tensor\u7684shape\u3002 \u683c\u5f0f\u4e3aNHWC\uff0cdimention \u4e4b\u95f4\u4ee5\u9017\u53f7( , )\u5206\u9694\uff0cshape\u4e2a\u6570\u548cinputs \u4e2a\u6570\u5bf9\u5e94\uff0c\u591a\u4e2ashape\u4e4b\u95f4\u4ee5\u5192\u53f7( : )\u5206\u9694\u3002\u82e5\u4e0d\u6307\u5b9a\u5219\u4ecesaved_model_dir\u4e2d\u83b7\u53d6\u3002 --tag_set : \u9700\u8981\u548csave model\u65f6\u6240\u6307\u5b9a\u7684tag\u5339\u914d\u3002 \u5982\u679c\u4e0d\u505a\u8bbe\u5b9a\uff0c\u5219\u9ed8\u8ba4\u4e3a\u2018serve\u2019\u3002 --signature_key : \u9700\u8981\u548csave model\u65f6\u6240\u6307\u5b9a\u7684signature\u5339\u914d\u3002 \u5982\u679c\u4e0d\u505a\u8bbe\u5b9a\uff0c\u5219\u9ed8\u8ba4\u4e3a \u2018DEFAULT_SERVING_SIGNATURE_DEF_KEY\u2019 --work_mode : \u6307\u5b9a\u6a21\u578b\u8f6c\u6362\u4e3a\u5355\u6838\u6a21\u5f0f\u6216\u8005\u53cc\u6838\u6a21\u5f0f\u3002 \u4f7f\u7528\u987b\u77e5 \u53ef\u9009\u6a21\u5f0f\u6709 single_core\uff0c\u8868\u793a\u5355\u6838\u6a21\u578b\u3002 multi_core\uff0c\u8868\u793a\u53cc\u6838\u6a21\u5f0f\u3002 \u82e5\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\uff0c\u9ed8\u8ba4\u4e3a\u5355\u6838\u6a21\u5f0f\u3002 --inplace_input_buf : RAWDATA_F32_NHWC \u662f\u5426\u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf. \u4f7f\u7528\u987b\u77e5 training_input_formats \u548c input_formats \u914d\u7f6e\u4e3a RAWDATA_F32_NHWC \u4e14\u4f7f\u7528 --batch_mode \u7684 one_buf \u6a21\u5f0f\u65f6\u624d\u53ef\u4ee5\u914d\u7f6e\u6b64\u53c2\u6570\u3002 \u53ef\u9009True/False\uff0c\u9ed8\u8ba4\u4e3aTrue\u3002 True : \u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf\u3002 False : \u4fdd\u7559\u539f\u59cb\u8f93\u5165buf\u3002 3\u3001 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 SGS_converter.py tensorflow_savemodel \\ --model_file ~/test/tensorflow_model/save_model \\ --input_config input_config.ini \\ -i file.list -n preprocess.py","title":"8.2.5 tensorflow_savemodel \u6846\u67b6\u6307\u4ee4"},{"location":"module/User_Guide/IPU260/OneClick_Generation.html#826-keras","text":"1\u3001information\uff1a python3 SGS_converter.py keras -h usage : SGS_converter.py keras [-h] --model_file MODEL_FILE --input_config INPUT_CONFIG -i IMAGE_FILE -n PREPROCESS [--input_shapes INPUT_SHAPES] [--output_file OUTPUT_FILE] [--export_models] optional arguments : -h, --help show this help message and exit --model_file MODEL_FILE SavedModel directory to convert -n PREPROCESS, --preprocess PREPROCESS Name of model to select image preprocess method --input_config INPUT_CONFIG Input config path. -i IMAGE_FILE, --image_file IMAGE_FILE Image / Directory containing images path / Image_list for multi_input model. --input_shapes INPUT_SHAPES Shapes corresponding to --input_arrays, colon- separated. For many models each shape takes the form batch size, input array height, input array width, input array depth. (default None) --output_file OUTPUT_FILE Full filepath of out Model path. --export_models export models of debug/float/cmodel_float/fix 2\u3001 \u76f8\u5173\u53c2\u6570\u8bf4\u660e\uff1a (1) \u5fc5\u9009\u53c2\u6570\uff1a --model_file : \u6307\u5b9a\u9700\u8fdb\u884c\u8f6c\u6362\u7684\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 \u8f93\u5165\u7684\u6a21\u578b\u4e3akeras h5\u683c\u5f0f\u6587\u4ef6\u8def\u5f84\u3002 --input_config : input_config.ini\u6587\u4ef6\u8def\u5f84\u3002 \u8be5\u6587\u4ef6\u4e3ainput tensor\u7684\u914d\u7f6e\u4fe1\u606f\u3002 -i : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u6240\u9700\u7684\u56fe\u7247\u6587\u4ef6\u8def\u5f84\u3002 \u4f7f\u7528\u987b\u77e5 \u652f\u6301\u4f7f\u7528\u5355\u5f20\u56fe\u7247\u8def\u5f84\u8fdb\u884c\u4f20\u53c2\uff0c\u4e5f\u652f\u6301\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\uff0c\u6216\u5b58\u50a8\u56fe\u7247\u8def\u5f84\u5217\u8868\u7684\u6587\u4ef6\u3002\u4f7f\u7528\u8def\u5f84\u5217\u8868\u5f62\u5f0f\u65f6\u53ef\u53c2\u8003\u5982\u4e0b\u65b9\u5f0f\uff1a \u7f51\u7edc\u6a21\u578b\u4e3a\u5355\u8f93\u5165\u65f6\uff1a -i ~/SGS_IPU_SDK/image_test/2007000364.jpg \u7f51\u7edc\u6a21\u578b\u4e3a\u591a\u8f93\u5165\u65f6\uff1a -i /SGS_IPU_SDK/image_test/2007000364.jpg, /SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp -n : \u6307\u5b9a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4e0e\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\u76f8\u5173\u3002 \u8be6\u89c1 Calibrator:\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5 \u3002 (2) \u53ef\u9009\u53c2\u6570\uff1a --export_models : \u6307\u5b9a\u8f6c\u6362\u6a21\u578b\u65f6\u4fdd\u5b58\u5404\u4e2a\u9636\u6bb5\u7684\u6587\u4ef6\uff0c\u4e0d\u4f7f\u7528\u8be5\u53c2\u6570\u5219\u53ea\u751f\u6210\u79bb\u7ebf\u7f51\u7edc\u6587\u4ef6\u3002 \u4f7f\u7528\u987b\u77e5 \u4f7f\u7528 --export_models \u53c2\u6570\u5fc5\u987b\u540c\u65f6\u4f7f\u7528--output_file\u53c2\u6570 --output_file : \u6307\u5b9a\u751f\u6210\u7684SGS\u6d6e\u70b9\u7f51\u7edc\u6a21\u578b,\u8be5\u53c2\u6570\u5fc5\u987b\u4e0e --export_models \u4e00\u8d77\u4f7f\u7528\u3002 --custom_objects : Dict mapping names (strings) to custom classes or functions to be considered during model deserialization (default None). --work_mode : \u6307\u5b9a\u6a21\u578b\u8f6c\u6362\u4e3a\u5355\u6838\u6a21\u5f0f\u6216\u8005\u53cc\u6838\u6a21\u5f0f\u3002 \u4f7f\u7528\u987b\u77e5 \u53ef\u9009\u6a21\u5f0f\u6709 single_core\uff0c\u8868\u793a\u5355\u6838\u6a21\u578b\u3002 multi_core\uff0c\u8868\u793a\u53cc\u6838\u6a21\u5f0f\u3002 \u82e5\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\uff0c\u9ed8\u8ba4\u4e3a\u5355\u6838\u6a21\u5f0f\u3002 --inplace_input_buf : RAWDATA_F32_NHWC \u662f\u5426\u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf. \u4f7f\u7528\u987b\u77e5 training_input_formats \u548c input_formats \u914d\u7f6e\u4e3a RAWDATA_F32_NHWC \u4e14\u4f7f\u7528 --batch_mode \u7684 one_buf \u6a21\u5f0f\u65f6\u624d\u53ef\u4ee5\u914d\u7f6e\u6b64\u53c2\u6570\u3002 \u53ef\u9009True/False\uff0c\u9ed8\u8ba4\u4e3aTrue\u3002 True : \u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf\u3002 False : \u4fdd\u7559\u539f\u59cb\u8f93\u5165buf\u3002 3\u3001 \u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a python3 SGS_converter.py keras \\ --model_file resnet50.h5 \\ --input_config input_config.ini \\ -i file.list -n resnet50.py","title":"8.2.6 keras \u6846\u67b6\u6307\u4ee4"},{"location":"module/User_Guide/IPU260/OneClick_Generation.html#83","text":"\u4f7f\u7528Convert\u3001Calibrator\u3001Compiler\u5de5\u5177\u751f\u6210SGS\u5404\u9636\u6bb5\u7f51\u7edc\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e\u8f6c\u6362\u6307\u4ee4\u53c2\u6570\u7684\u65b9\u5f0f\u6307\u5b9a\u6a21\u578b\u7684\u8f6c\u6362\u6a21\u5f0f\u3002\u5982\u679c\u9700\u8981\u4f7f\u7528\u4e00\u952e\u8f6c\u6362\u5de5\u5177\u5b9e\u73b0\u4e0a\u8ff0\u5de5\u5177\u7684\u540c\u7b49\u529f\u80fd\uff0c\u53ef\u4ee5\u901a\u8fc7 (1)\u5728input_config.ini\u4e2d\u914d\u7f6e\u6307\u5b9a\u53c2\u6570\uff08\u5bf9input_config.ini\u914d\u7f6e\u4fe1\u606f\u7684\u8be6\u7ec6\u8bf4\u660e\u5df2\u5728 Convert Tool:input_config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e \u4e2d\u7ed9\u51fa\uff09 (2)\u5728\u8f6c\u6362\u6307\u4ee4\u4e2d\u914d\u7f6e\u6307\u5b9a\u53c2\u6570 \u4e24\u79cd\u65b9\u5f0f\u5b9e\u73b0\uff0c\u5b9e\u73b0\u5404\u529f\u80fd\u6240\u5bf9\u5e94\u7684\u65b9\u6cd5\u5982\u4e0b\u6240\u793a\uff1a (1) \u529f\u80fd\u4e00\uff1a\u6307\u5b9a\u6a21\u578b\u8f6c\u4e3a\u5355\u6838\u6a21\u5f0f\u6216\u8005\u591a\u6838\u6a21\u5f0f \u8be5\u529f\u80fd\u5bf9\u5e94 Calibrator \u4e2d\u7684\u53ef\u9009\u53c2\u6570 --work_mode \u6240\u5b9e\u73b0\u7684\u529f\u80fd\uff1b \u4e00\u952e\u8f6c\u6362\u6a21\u578b\u65f6\uff0c\u901a\u8fc7\u5728 \u8f6c\u6362\u547d\u4ee4 \u4e2d\u914d\u7f6e\u53c2\u6570'--work_mode'\u5b9e\u73b0. \u4f7f\u7528\u987b\u77e5 \u53ef\u9009\u6a21\u5f0f\u6709 single_core\uff0c\u8868\u793a\u5355\u6838\u6a21\u578b\u3002 multi_core\uff0c\u8868\u793a\u53cc\u6838\u6a21\u5f0f\u3002 \u82e5\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\uff0c\u9ed8\u8ba4\u4e3a\u5355\u6838\u6a21\u5f0f\u3002 (2) \u529f\u80fd\u4e8c\uff1a\u6307\u5b9a\u540c\u65f6\u8fd0\u884c\u7684\u8fdb\u7a0b\u6570 \u8be5\u529f\u80fd\u5bf9\u5e94 Calibrator \u4e2d\u7684\u53ef\u9009\u53c2\u6570 --num_process \u6240\u5b9e\u73b0\u7684\u529f\u80fd\uff1b \u4e00\u952e\u8f6c\u6362\u6a21\u578b\u65f6\uff0c\u901a\u8fc7\u5728 input_config.ini \u7684[INPUT_CONFIG]\u4e2d\u914d\u7f6e num_process \u6307\u5b9a\u8fdb\u7a0b\u6570\u5b9e\u73b0\uff1a [ INPUT_CONFIG ] ; Amount of processes run at same time . num_process = 10 ; \u4f7f\u7528\u987b\u77e5 \u5982\u679c\u65e0\u8fdb\u7a0b\u6570\u8981\u6c42\uff0c\u5219\u65e0\u9700\u5728input_config.ini\u4e2d\u914d\u7f6e\u8be5\u53c2\u6570\uff0c\u5e76\u5c06\u4f7f\u7528\u9ed8\u8ba4\u503c10\u8fdb\u884c\u6a21\u578b\u8f6c\u6362\u3002 (3) \u529f\u80fd\u4e09\uff1a\u9009\u62e9\u91cf\u5316\u7b49\u7ea7 \u8be5\u529f\u80fd\u5bf9\u5e94 Calibrator \u4e2d\u7684\u53ef\u9009\u53c2\u6570 --quant_level \u6240\u5b9e\u73b0\u7684\u529f\u80fd\uff1b \u4e00\u952e\u8f6c\u6362\u6a21\u578b\u65f6\uff0c\u901a\u8fc7\u5728 input_config.ini \u7684[INPUT_CONFIG]\u4e2d\u914d\u7f6e --quant_level \u6307\u5b9a\u91cf\u5316\u7b49\u7ea7\u5b9e\u73b0\uff1a [ INPUT_CONFIG ] ; choices = [ 'L1' , 'L2' , 'L3' , 'L4' , 'L5' ], ; Indicate Quantilization level . The higher the level , the slower the speed and the higher the accuracy . quant_level = L5 ; \u4f7f\u7528\u987b\u77e5 \u5982\u679c\u65e0\u91cf\u5316\u8981\u6c42\uff0c\u5219\u65e0\u9700\u5728input_config.ini\u4e2d\u914d\u7f6e\u8be5\u53c2\u6570\uff0c\u5c06\u4f7f\u7528\u9ed8\u8ba4\u503cL5\u8fdb\u884c\u6a21\u578b\u8f6c\u6362\u3002 (4) \u529f\u80fd\u56db\uff1a\u9009\u62e9\u91cf\u5316\u5de5\u5177 \u8be5\u529f\u80fd\u5bf9\u5e94 Calibrator \u4e2d\u7684 torch_calibrator\u5de5\u5177 \u6240\u5b9e\u73b0\u7684\u529f\u80fd\uff1b\u5982\u9700\u9009\u62e9\u91cf\u5316\u5de5\u5177\uff0c\u8bf7\u4f7f\u7528\u5206\u9636\u6bb5\u8f6c\u6362\u6a21\u578b\u7684\u65b9\u5f0f\u8fdb\u884c\u6a21\u578b\u8f6c\u6362\u3002 (5) \u529f\u80fd\u4e94\uff1a\u9009\u62e9Batch\u6570 \u8be5\u529f\u80fd\u5bf9\u5e94 Compiler \u4e2d\u7684\u53ef\u9009\u53c2\u6570 -b, --batch \u548c --batch_mode \u6240\u5b9e\u73b0\u7684\u529f\u80fd\uff1b \u4e00\u952e\u8f6c\u6362\u6a21\u578b\u65f6\uff0c\u901a\u8fc7\u5728 input_config.ini \u7684[INPUT_CONFIG]\u4e2d\u914d\u7f6e batch \u6307\u5b9aBatch\u6570,\u914d\u7f6e batchmode \u6307\u5b9a\u591abatch\u6a21\u5f0f\u5b9e\u73b0\uff1a [ INPUT_CONFIG ] ; Expected max batch size in normal batch mode , or specific batches , comma - separated for multi - batches batch = 1 ; ; choices = [ 'n_buf' , 'one_buf' ] batchmode = one_buf ; \u4f7f\u7528\u987b\u77e5 \u5982\u679c\u65e0\u9700\u6c42\uff0c\u5219\u65e0\u9700\u5728input_config.ini\u4e2d\u914d\u7f6e\u76f8\u5173\u53c2\u6570\uff0c\u5c06\u4f7f\u7528\u9ed8\u8ba4\u503c(batch=1,batchmode=one_buf)\u8fdb\u884c\u6a21\u578b\u8f6c\u6362\u3002 (6) \u529f\u80fd\u516d\uff1a\u9009\u62e9\u6a21\u578b\u7684\u7c7b\u522b \u8be5\u529f\u80fd\u5bf9\u5e94 Compiler \u4e2d\u7684\u53ef\u9009\u53c2\u6570 -c, --category \u6240\u5b9e\u73b0\u7684\u529f\u80fd\uff1b \u4e00\u952e\u8f6c\u6362\u6a21\u578b\u65f6\u65e0\u9700\u5bf9\u8be5\u53c2\u6570\u8fdb\u884c\u914d\u7f6e\u3002 (7) \u529f\u80fd\u4e03\uff1a RAWDATA_F32_NHWC \u662f\u5426\u66ff\u6362\u5e76\u8986\u76d6\u539f\u59cb\u8f93\u5165buf. \u8be5\u529f\u80fd\u5bf9\u5e94 Compiler \u4e2d\u7684\u53ef\u9009\u53c2\u6570 --inplace_input_buf \u6240\u5b9e\u73b0\u7684\u529f\u80fd\uff1b \u4e00\u952e\u8f6c\u6362\u6a21\u578b\u65f6\uff0c\u901a\u8fc7\u5728 \u8f6c\u6362\u547d\u4ee4 \u4e2d\u914d\u7f6e\u53c2\u6570 --inplace_input_buf \u5b9e\u73b0.","title":"8.3. \u8f6c\u6362\u5e26\u6709\u7279\u6b8a\u8bbe\u5b9a\u7684\u6a21\u578b"},{"location":"module/User_Guide/IPU260/Preprocess.py_and_Input_Config.ini_Support.html","text":"\u6839\u636einput_config.ini\u6587\u4ef6\u4e2dtraining_input_formats \u548c input_formats\u8bbe\u7f6e\u7684\u4e0d\u540c\uff0c\u4e0b\u9762\u4e3e\u4f8b\u524d\u5904\u7406\u6587\u4ef6\u7684\u5199\u6cd5: \u524d\u5904\u7406 training_input_formats\u548cinput_formats\u5747\u4e3aRGB\u6216\u8005\u5747\u4e3aBGR training_input_formats\u548cinput_formats\u5747\u4e3aRGB\u6216\u8005\u5747\u4e3aBGR training_input_formats\u4e3aRGB\u6216BGR\u6216GRAY\u548cinput_formats\u4e3aYUV_NV12 training_input_formats\u548cinput_formats\u5747\u4e3aRAWDATA_S16_NHWC\u6216\u8005\u5747\u4e3aRAWDATA_F32_NHWC input_config.ini\u914d\u7f6e\u8981\u70b9 \u8bf7\u53c2\u8003 Convert: \u8f93\u5165\u8f93\u51fa\u914d\u7f6e\u603b\u7ed3 1.1. training_input_formats\u548cinput_formats\u5747\u4e3aRGB\u6216\u8005\u5747\u4e3aBGR \u00b6 (1) input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e training_input_formats input_formats \u677f\u4e0a\u8fd0\u884c\u65f6\u6570\u636e\u5bf9\u9f50\u65b9\u5f0f RGB/BGR RGB/BGR \u4e0d\u7528\u5bf9\u9f50 RGB/BGR RGBA/BGRA \u4e0d\u7528\u5bf9\u9f50 (2) \u524d\u5904\u7406\u811a\u672c\u793a\u4f8b import cv2 import numpy as np def get_image ( img_path , resizeH = 224 , resizeW = 224 , norm = True , meanB = 103.53 , meanG = 116.28 , meanR = 123.68 , std = 57.375 , rgb = False , nchw = False ): img = cv2 . imread ( img_path ) if img is None : raise FileNotFoundError ( 'No such image: {} ' . format ( img_path )) img_norm = cv2 . resize ( img , ( resizeW , resizeH ), interpolation = cv2 . INTER_LINEAR ) if norm : img_norm = ( img_norm - [ meanB , meanG , meanR ]) / std img_norm = img_norm . astype ( 'float32' ) else : img_norm = np . round ( img_norm ) . astype ( 'uint8' ) if rgb : img_norm = cv2 . cvtColor ( img_norm , cv2 . COLOR_BGR2RGB ) if nchw : img_norm = np . transpose ( img_norm , axes = ( 2 , 0 , 1 )) return np . expand_dims ( img_norm , 0 ) def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm ) Note \u793a\u4f8b\u4e2d\u6bcf\u4e2achannel\u4e0a\u6709\u76f8\u540c\u7684std\u503c\uff0c\u6545\u53c2\u6570\u53ea\u7ed9\u4e86\u4e00\u4e2a\u503c\uff0c\u5982\u679c\u5728\u6bcf\u4e2achannel\u4e0a\u6709\u4e0d\u540c\u7684std\u503c\uff0c\u9700\u8981\u5728\u5bf9\u5e94channel\u4e0a\u9664\u4ee5std\uff0c\u53c2\u6570\u5e94\u7ed9 std= [57.375, 57.12, 58.395]\u3002 input_config.ini\u6587\u4ef6\u4e2dmean\u6bcf\u4e2a\u901a\u9053\u5bf9\u5e94\u7684std_value\u503c\uff0c\u4ee5\u82f1\u6587\u5192\u53f7( : )\u5206\u9694\uff0c\u987a\u5e8f\u4e3aRGB\u3002 1.2. training_input_formats\u4e3aGRAY\u548cinput_formats\u4e3aGRAY \u00b6 (1) input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e training_input_formats input_formats \u677f\u4e0a\u8fd0\u884c\u65f6\u6570\u636e\u5bf9\u9f50\u65b9\u5f0f GRAY GRAY H = ALIGN_UP(H, yuv420_v_pitch_alignment ) input_height_alignment\u9ed8\u8ba4\u4e3a1 W = ALIGN_UP(W, yuv420_h_pitch_alignment ) input_width_alignment\u9ed8\u8ba4\u4e3a1 (2) \u524d\u5904\u7406\u811a\u672c\u793a\u4f8b import cv2 import numpy as np def get_image ( img_path , resizeH = 28 , resizeW = 28 , norm = True , meanR = 33.318 , std = 1.0 , rgb = False , nchw = False ): img = cv2 . imread ( img_path , flags =- 1 ) if img is None : raise FileNotFoundError ( 'No such image: {} ' . format ( img_path )) try : img_dim = img . shape [ 2 ] except IndexError : img_dim = 1 if img_dim == 3 : img = cv2 . cvtColor ( img , cv2 . COLOR_BGR2GRAY ) elif img_dim == 4 : img = cv2 . cvtColor ( img , cv2 . COLOR_BGRA2GRAY ) img_norm = cv2 . resize ( img , ( resizeW , resizeH ), interpolation = cv2 . INTER_LINEAR ) if norm : img_norm = ( img_norm - meanR ) / std img_norm = np . expand_dims ( img_norm , axis = 2 ) img_norm = img_norm . astype ( 'float32' ) else : img_norm = np . expand_dims ( img_norm , axis = 2 ) img_norm = np . round ( img_norm ) . astype ( 'uint8' ) if rgb : img_norm = cv2 . cvtColor ( img_norm , cv2 . COLOR_BGR2RGB ) if nchw : # NCHW img_norm = np . transpose ( img_norm , axes = ( 2 , 0 , 1 )) return np . expand_dims ( img_norm , 0 ) def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm ) Note \u7070\u5ea6\u6a21\u578b\uff0c\u6307\u8f93\u5165\u662f\u5355\u901a\u9053\u56fe\u7247\u7684\u6a21\u578b\uff0c\u5373\u8f93\u5165C\u7ef4\u5ea6\u4e0a\u4e3a1\u7684\u6a21\u578b\u3002 1.3. training_input_formats\u4e3aRGB\u6216BGR\u6216GRAY\u548cinput_formats\u4e3aYUV_NV12 \u00b6 (1) input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e training_input_formats input_formats \u677f\u4e0a\u8fd0\u884c\u65f6\u6570\u636e\u5bf9\u9f50\u65b9\u5f0f RGB/BGR/GRAY YUV_NV12 H = ALIGN_UP(H, yuv420_v_pitch_alignment ) input_height_alignment\u9ed8\u8ba4\u4e3a2 W = ALIGN_UP(W, yuv420_h_pitch_alignment ) input_width_alignment\u9ed8\u8ba4\u4e3a2 (2) \u524d\u5904\u7406\u811a\u672c\u793a\u4f8b import cv2 import numpy as np def get_image ( img_path , resizeH = 224 , resizeW = 224 , norm = True , meanB = 127.5 , meanG = 127.5 , meanR = 127.5 , std = 128.0 , rgb = False , nchw = False ): img = cv2 . imread ( img_path ) if img is None : raise FileNotFoundError ( 'No such image: {} ' . format ( img_path )) img_norm = cv2 . resize ( img , ( resizeW , resizeH ), interpolation = cv2 . INTER_LINEAR ) if norm : img_norm = ( img_norm - [ meanB , meanG , meanR ]) / std img_norm = img_norm . astype ( 'float32' ) else : img_norm = np . round ( img_norm ) . astype ( 'uint8' ) if rgb : img_norm = cv2 . cvtColor ( img_norm , cv2 . COLOR_BGR2RGB ) if nchw : img_norm = np . transpose ( img_norm , axes = ( 2 , 0 , 1 )) return np . expand_dims ( img_norm , 0 ) def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm ) 1.4. training_input_formats\u548cinput_formats\u5747\u4e3aRAWDATA_S16_NHWC\u6216\u8005\u5747\u4e3aRAWDATA_F32_NHWC \u00b6 1.4.1. training_input_formats\u548cinput_formats\u5747\u4e3aRAWDATA_S16_NHWC \u00b6 (1) input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e training_input_formats input_formats \u677f\u4e0a\u8fd0\u884c\u65f6\u6570\u636e\u5bf9\u9f50\u65b9\u5f0f RAWDATA_S16_NHWC RAWDATA_S16_NHWC \u4e0d\u7528\u5bf9\u9f50 (2) \u524d\u5904\u7406\u811a\u672c\u793a\u4f8b import cv2 import numpy as np def get_image ( img_path , resizeH = 224 , resizeW = 224 , norm = True , rgb = False , nchw = False ): img = cv2 . imread ( img_path ) if img is None : raise FileNotFoundError ( 'No such image: {} ' . format ( img_path )) img_norm = cv2 . resize ( img , ( resizeW , resizeH ), interpolation = cv2 . INTER_LINEAR ) img_norm = img_norm . astype ( 'float32' ) if rgb : img_norm = cv2 . cvtColor ( img_norm , cv2 . COLOR_BGR2RGB ) if nchw : img_norm = np . transpose ( img_norm , axes = ( 2 , 0 , 1 )) return np . expand_dims ( img_norm , 0 ) def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm ) Note \u8bf7\u4e0d\u8981\u8bbe\u7f6einput_config.ini\u4e2d\u7684mean_red\u3001mean_green\u3001mean_blue\u548cstd_value\u53c2\u6570\u503c\uff0c\u56e0\u4e3a\u4e0d\u9700\u8981\u524d\u5904\u7406\u4e2d\u7684\u5f52\u4e00\u5316\u64cd\u4f5c\u3002 \u7f16\u5199\u56fe\u7247\u5904\u7406\u51fd\u6570\u65f6(\u5982\u793a\u4f8b\u4e2d\u7684def get_image(\u2026\u2026))\uff0c\u7531\u4e8e\u8be5\u51fd\u6570\u5fc5\u987b\u5305\u542b\u5f52\u4e00\u5316\u6807\u8bb0(norm),\u6545\u53ea\u9700\u6784\u9020\u51fd\u6570\u65f6\u58f0\u660enorm=True\u5373\u53ef\uff0c\u51fd\u6570\u4e2d\u65e0\u9700\u5b9e\u73b0norm\u4e3aTrue\u6216false\u7684\u64cd\u4f5c\u3002 \u4f7f\u7528simulator\u5de5\u5177\u65f6\uff0c\u4f1a\u8bfb\u5165\u539f\u6d6e\u70b9\u6570\u636e\uff0c\u8fdb\u884c\u53cd\u91cf\u5316\u548c\u5bf9\u9f50\u6392\u5217\u540e\u8f93\u5165\u7ed9\u5b9a\u70b9\u6a21\u578b\u3002 \u5728\u677f\u4e0a\u8fd0\u884cRAWDATA_S16_NHWC\u7684\u7f51\u7edc\u65f6\uff0c\u4e0d\u9700\u8981\u8f93\u5165\u6570\u636e\u7684\u5b9a\u70b9\u5316\u548c\u5bf9\u9f50\u6392\u5217\u8fc7\u7a0b\u3002 1.4.2. training_input_formats\u548cinput_formats\u5747\u4e3aRAWDATA_F32_NHWC \u00b6 (1) input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e training_input_formats input_formats \u677f\u4e0a\u8fd0\u884c\u65f6\u6570\u636e\u5bf9\u9f50\u65b9\u5f0f RAWDATA_F32_NHWC RAWDATA_F32_NHWC \u4e0d\u7528\u5bf9\u9f50 (2) \u524d\u5904\u7406\u811a\u672c\u793a\u4f8b import cv2 import numpy as np def get_image ( img_path , resizeH = 224 , resizeW = 224 , norm = True , rgb = False , nchw = False ): img = cv2 . imread ( img_path ) if img is None : raise FileNotFoundError ( 'No such image: {} ' . format ( img_path )) img_norm = cv2 . resize ( img , ( resizeW , resizeH ), interpolation = cv2 . INTER_LINEAR ) img_norm = img_norm . astype ( 'float32' ) if rgb : img_norm = cv2 . cvtColor ( img_norm , cv2 . COLOR_BGR2RGB ) if nchw : img_norm = np . transpose ( img_norm , axes = ( 2 , 0 , 1 )) return np . expand_dims ( img_norm , 0 ) def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm ) Note \u8bf7\u4e0d\u8981\u8bbe\u7f6einput_config.ini\u4e2d\u7684mean_red\u3001mean_green\u3001mean_blue\u548cstd_value\u53c2\u6570\u503c\uff0c\u56e0\u4e3a\u4e0d\u9700\u8981\u524d\u5904\u7406\u4e2d\u7684\u5f52\u4e00\u5316\u64cd\u4f5c\u3002 \u7f16\u5199\u56fe\u7247\u5904\u7406\u51fd\u6570\u65f6(\u5982\u793a\u4f8b\u4e2d\u7684def get_image(\u2026\u2026))\uff0c\u7531\u4e8e\u8be5\u51fd\u6570\u5fc5\u987b\u5305\u542b\u5f52\u4e00\u5316\u6807\u8bb0(norm),\u6545\u53ea\u9700\u6784\u9020\u51fd\u6570\u65f6\u58f0\u660enorm=True\u5373\u53ef\uff0c\u51fd\u6570\u4e2d\u65e0\u9700\u5b9e\u73b0norm\u4e3aTrue\u6216false\u7684\u64cd\u4f5c\u3002 \u4f7f\u7528simulator\u5de5\u5177\u65f6\uff0csimulator.py\u4f1a\u8bfb\u5165\u539f\u6d6e\u70b9\u6570\u636e\uff0c\u7531\u6a21\u578b\u5185\u90e8\u7684align\u7b97\u5b50\u81ea\u52a8\u5bf9\u9f50\u6570\u636e\uff0c\u4e0d\u9700\u8981\u4eba\u4e3a\u64cd\u4f5c\u3002 \u5728\u677f\u4e0a\u8fd0\u884cRAWDATA_F32_NHWC\u7684\u7f51\u7edc\u65f6\uff0c\u4e0d\u9700\u8981\u8f93\u5165\u6570\u636e\u7684\u5b9a\u70b9\u5316\u548c\u5bf9\u9f50\u6392\u5217\u8fc7\u7a0b\u3002 \u7279\u6b8a\u6a21\u578b\u8f6c\u6362\u8981\u70b9\uff1aRAWDATA_F32_NHWC\u6a21\u578b\u8f6c\u6362\u8981\u70b9","title":"Preprocess.py and Input Config.ini Support"},{"location":"module/User_Guide/IPU260/Preprocess.py_and_Input_Config.ini_Support.html#11-training_input_formatsinput_formatsrgbbgr","text":"(1) input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e training_input_formats input_formats \u677f\u4e0a\u8fd0\u884c\u65f6\u6570\u636e\u5bf9\u9f50\u65b9\u5f0f RGB/BGR RGB/BGR \u4e0d\u7528\u5bf9\u9f50 RGB/BGR RGBA/BGRA \u4e0d\u7528\u5bf9\u9f50 (2) \u524d\u5904\u7406\u811a\u672c\u793a\u4f8b import cv2 import numpy as np def get_image ( img_path , resizeH = 224 , resizeW = 224 , norm = True , meanB = 103.53 , meanG = 116.28 , meanR = 123.68 , std = 57.375 , rgb = False , nchw = False ): img = cv2 . imread ( img_path ) if img is None : raise FileNotFoundError ( 'No such image: {} ' . format ( img_path )) img_norm = cv2 . resize ( img , ( resizeW , resizeH ), interpolation = cv2 . INTER_LINEAR ) if norm : img_norm = ( img_norm - [ meanB , meanG , meanR ]) / std img_norm = img_norm . astype ( 'float32' ) else : img_norm = np . round ( img_norm ) . astype ( 'uint8' ) if rgb : img_norm = cv2 . cvtColor ( img_norm , cv2 . COLOR_BGR2RGB ) if nchw : img_norm = np . transpose ( img_norm , axes = ( 2 , 0 , 1 )) return np . expand_dims ( img_norm , 0 ) def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm ) Note \u793a\u4f8b\u4e2d\u6bcf\u4e2achannel\u4e0a\u6709\u76f8\u540c\u7684std\u503c\uff0c\u6545\u53c2\u6570\u53ea\u7ed9\u4e86\u4e00\u4e2a\u503c\uff0c\u5982\u679c\u5728\u6bcf\u4e2achannel\u4e0a\u6709\u4e0d\u540c\u7684std\u503c\uff0c\u9700\u8981\u5728\u5bf9\u5e94channel\u4e0a\u9664\u4ee5std\uff0c\u53c2\u6570\u5e94\u7ed9 std= [57.375, 57.12, 58.395]\u3002 input_config.ini\u6587\u4ef6\u4e2dmean\u6bcf\u4e2a\u901a\u9053\u5bf9\u5e94\u7684std_value\u503c\uff0c\u4ee5\u82f1\u6587\u5192\u53f7( : )\u5206\u9694\uff0c\u987a\u5e8f\u4e3aRGB\u3002","title":"1.1. training_input_formats\u548cinput_formats\u5747\u4e3aRGB\u6216\u8005\u5747\u4e3aBGR"},{"location":"module/User_Guide/IPU260/Preprocess.py_and_Input_Config.ini_Support.html#12-training_input_formatsgrayinput_formatsgray","text":"(1) input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e training_input_formats input_formats \u677f\u4e0a\u8fd0\u884c\u65f6\u6570\u636e\u5bf9\u9f50\u65b9\u5f0f GRAY GRAY H = ALIGN_UP(H, yuv420_v_pitch_alignment ) input_height_alignment\u9ed8\u8ba4\u4e3a1 W = ALIGN_UP(W, yuv420_h_pitch_alignment ) input_width_alignment\u9ed8\u8ba4\u4e3a1 (2) \u524d\u5904\u7406\u811a\u672c\u793a\u4f8b import cv2 import numpy as np def get_image ( img_path , resizeH = 28 , resizeW = 28 , norm = True , meanR = 33.318 , std = 1.0 , rgb = False , nchw = False ): img = cv2 . imread ( img_path , flags =- 1 ) if img is None : raise FileNotFoundError ( 'No such image: {} ' . format ( img_path )) try : img_dim = img . shape [ 2 ] except IndexError : img_dim = 1 if img_dim == 3 : img = cv2 . cvtColor ( img , cv2 . COLOR_BGR2GRAY ) elif img_dim == 4 : img = cv2 . cvtColor ( img , cv2 . COLOR_BGRA2GRAY ) img_norm = cv2 . resize ( img , ( resizeW , resizeH ), interpolation = cv2 . INTER_LINEAR ) if norm : img_norm = ( img_norm - meanR ) / std img_norm = np . expand_dims ( img_norm , axis = 2 ) img_norm = img_norm . astype ( 'float32' ) else : img_norm = np . expand_dims ( img_norm , axis = 2 ) img_norm = np . round ( img_norm ) . astype ( 'uint8' ) if rgb : img_norm = cv2 . cvtColor ( img_norm , cv2 . COLOR_BGR2RGB ) if nchw : # NCHW img_norm = np . transpose ( img_norm , axes = ( 2 , 0 , 1 )) return np . expand_dims ( img_norm , 0 ) def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm ) Note \u7070\u5ea6\u6a21\u578b\uff0c\u6307\u8f93\u5165\u662f\u5355\u901a\u9053\u56fe\u7247\u7684\u6a21\u578b\uff0c\u5373\u8f93\u5165C\u7ef4\u5ea6\u4e0a\u4e3a1\u7684\u6a21\u578b\u3002","title":"1.2. training_input_formats\u4e3aGRAY\u548cinput_formats\u4e3aGRAY"},{"location":"module/User_Guide/IPU260/Preprocess.py_and_Input_Config.ini_Support.html#13-training_input_formatsrgbbgrgrayinput_formatsyuv_nv12","text":"(1) input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e training_input_formats input_formats \u677f\u4e0a\u8fd0\u884c\u65f6\u6570\u636e\u5bf9\u9f50\u65b9\u5f0f RGB/BGR/GRAY YUV_NV12 H = ALIGN_UP(H, yuv420_v_pitch_alignment ) input_height_alignment\u9ed8\u8ba4\u4e3a2 W = ALIGN_UP(W, yuv420_h_pitch_alignment ) input_width_alignment\u9ed8\u8ba4\u4e3a2 (2) \u524d\u5904\u7406\u811a\u672c\u793a\u4f8b import cv2 import numpy as np def get_image ( img_path , resizeH = 224 , resizeW = 224 , norm = True , meanB = 127.5 , meanG = 127.5 , meanR = 127.5 , std = 128.0 , rgb = False , nchw = False ): img = cv2 . imread ( img_path ) if img is None : raise FileNotFoundError ( 'No such image: {} ' . format ( img_path )) img_norm = cv2 . resize ( img , ( resizeW , resizeH ), interpolation = cv2 . INTER_LINEAR ) if norm : img_norm = ( img_norm - [ meanB , meanG , meanR ]) / std img_norm = img_norm . astype ( 'float32' ) else : img_norm = np . round ( img_norm ) . astype ( 'uint8' ) if rgb : img_norm = cv2 . cvtColor ( img_norm , cv2 . COLOR_BGR2RGB ) if nchw : img_norm = np . transpose ( img_norm , axes = ( 2 , 0 , 1 )) return np . expand_dims ( img_norm , 0 ) def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm )","title":"1.3. training_input_formats\u4e3aRGB\u6216BGR\u6216GRAY\u548cinput_formats\u4e3aYUV_NV12"},{"location":"module/User_Guide/IPU260/Preprocess.py_and_Input_Config.ini_Support.html#14-training_input_formatsinput_formatsrawdata_s16_nhwcrawdata_f32_nhwc","text":"","title":"1.4. training_input_formats\u548cinput_formats\u5747\u4e3aRAWDATA_S16_NHWC\u6216\u8005\u5747\u4e3aRAWDATA_F32_NHWC"},{"location":"module/User_Guide/IPU260/Preprocess.py_and_Input_Config.ini_Support.html#141-training_input_formatsinput_formatsrawdata_s16_nhwc","text":"(1) input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e training_input_formats input_formats \u677f\u4e0a\u8fd0\u884c\u65f6\u6570\u636e\u5bf9\u9f50\u65b9\u5f0f RAWDATA_S16_NHWC RAWDATA_S16_NHWC \u4e0d\u7528\u5bf9\u9f50 (2) \u524d\u5904\u7406\u811a\u672c\u793a\u4f8b import cv2 import numpy as np def get_image ( img_path , resizeH = 224 , resizeW = 224 , norm = True , rgb = False , nchw = False ): img = cv2 . imread ( img_path ) if img is None : raise FileNotFoundError ( 'No such image: {} ' . format ( img_path )) img_norm = cv2 . resize ( img , ( resizeW , resizeH ), interpolation = cv2 . INTER_LINEAR ) img_norm = img_norm . astype ( 'float32' ) if rgb : img_norm = cv2 . cvtColor ( img_norm , cv2 . COLOR_BGR2RGB ) if nchw : img_norm = np . transpose ( img_norm , axes = ( 2 , 0 , 1 )) return np . expand_dims ( img_norm , 0 ) def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm ) Note \u8bf7\u4e0d\u8981\u8bbe\u7f6einput_config.ini\u4e2d\u7684mean_red\u3001mean_green\u3001mean_blue\u548cstd_value\u53c2\u6570\u503c\uff0c\u56e0\u4e3a\u4e0d\u9700\u8981\u524d\u5904\u7406\u4e2d\u7684\u5f52\u4e00\u5316\u64cd\u4f5c\u3002 \u7f16\u5199\u56fe\u7247\u5904\u7406\u51fd\u6570\u65f6(\u5982\u793a\u4f8b\u4e2d\u7684def get_image(\u2026\u2026))\uff0c\u7531\u4e8e\u8be5\u51fd\u6570\u5fc5\u987b\u5305\u542b\u5f52\u4e00\u5316\u6807\u8bb0(norm),\u6545\u53ea\u9700\u6784\u9020\u51fd\u6570\u65f6\u58f0\u660enorm=True\u5373\u53ef\uff0c\u51fd\u6570\u4e2d\u65e0\u9700\u5b9e\u73b0norm\u4e3aTrue\u6216false\u7684\u64cd\u4f5c\u3002 \u4f7f\u7528simulator\u5de5\u5177\u65f6\uff0c\u4f1a\u8bfb\u5165\u539f\u6d6e\u70b9\u6570\u636e\uff0c\u8fdb\u884c\u53cd\u91cf\u5316\u548c\u5bf9\u9f50\u6392\u5217\u540e\u8f93\u5165\u7ed9\u5b9a\u70b9\u6a21\u578b\u3002 \u5728\u677f\u4e0a\u8fd0\u884cRAWDATA_S16_NHWC\u7684\u7f51\u7edc\u65f6\uff0c\u4e0d\u9700\u8981\u8f93\u5165\u6570\u636e\u7684\u5b9a\u70b9\u5316\u548c\u5bf9\u9f50\u6392\u5217\u8fc7\u7a0b\u3002","title":"1.4.1. training_input_formats\u548cinput_formats\u5747\u4e3aRAWDATA_S16_NHWC"},{"location":"module/User_Guide/IPU260/Preprocess.py_and_Input_Config.ini_Support.html#142-training_input_formatsinput_formatsrawdata_f32_nhwc","text":"(1) input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e training_input_formats input_formats \u677f\u4e0a\u8fd0\u884c\u65f6\u6570\u636e\u5bf9\u9f50\u65b9\u5f0f RAWDATA_F32_NHWC RAWDATA_F32_NHWC \u4e0d\u7528\u5bf9\u9f50 (2) \u524d\u5904\u7406\u811a\u672c\u793a\u4f8b import cv2 import numpy as np def get_image ( img_path , resizeH = 224 , resizeW = 224 , norm = True , rgb = False , nchw = False ): img = cv2 . imread ( img_path ) if img is None : raise FileNotFoundError ( 'No such image: {} ' . format ( img_path )) img_norm = cv2 . resize ( img , ( resizeW , resizeH ), interpolation = cv2 . INTER_LINEAR ) img_norm = img_norm . astype ( 'float32' ) if rgb : img_norm = cv2 . cvtColor ( img_norm , cv2 . COLOR_BGR2RGB ) if nchw : img_norm = np . transpose ( img_norm , axes = ( 2 , 0 , 1 )) return np . expand_dims ( img_norm , 0 ) def image_preprocess ( img_path , norm = True ): return get_image ( img_path , norm = norm ) Note \u8bf7\u4e0d\u8981\u8bbe\u7f6einput_config.ini\u4e2d\u7684mean_red\u3001mean_green\u3001mean_blue\u548cstd_value\u53c2\u6570\u503c\uff0c\u56e0\u4e3a\u4e0d\u9700\u8981\u524d\u5904\u7406\u4e2d\u7684\u5f52\u4e00\u5316\u64cd\u4f5c\u3002 \u7f16\u5199\u56fe\u7247\u5904\u7406\u51fd\u6570\u65f6(\u5982\u793a\u4f8b\u4e2d\u7684def get_image(\u2026\u2026))\uff0c\u7531\u4e8e\u8be5\u51fd\u6570\u5fc5\u987b\u5305\u542b\u5f52\u4e00\u5316\u6807\u8bb0(norm),\u6545\u53ea\u9700\u6784\u9020\u51fd\u6570\u65f6\u58f0\u660enorm=True\u5373\u53ef\uff0c\u51fd\u6570\u4e2d\u65e0\u9700\u5b9e\u73b0norm\u4e3aTrue\u6216false\u7684\u64cd\u4f5c\u3002 \u4f7f\u7528simulator\u5de5\u5177\u65f6\uff0csimulator.py\u4f1a\u8bfb\u5165\u539f\u6d6e\u70b9\u6570\u636e\uff0c\u7531\u6a21\u578b\u5185\u90e8\u7684align\u7b97\u5b50\u81ea\u52a8\u5bf9\u9f50\u6570\u636e\uff0c\u4e0d\u9700\u8981\u4eba\u4e3a\u64cd\u4f5c\u3002 \u5728\u677f\u4e0a\u8fd0\u884cRAWDATA_F32_NHWC\u7684\u7f51\u7edc\u65f6\uff0c\u4e0d\u9700\u8981\u8f93\u5165\u6570\u636e\u7684\u5b9a\u70b9\u5316\u548c\u5bf9\u9f50\u6392\u5217\u8fc7\u7a0b\u3002 \u7279\u6b8a\u6a21\u578b\u8f6c\u6362\u8981\u70b9\uff1aRAWDATA_F32_NHWC\u6a21\u578b\u8f6c\u6362\u8981\u70b9","title":"1.4.2. training_input_formats\u548cinput_formats\u5747\u4e3aRAWDATA_F32_NHWC"},{"location":"module/User_Guide/IPU260/Running_Offline_Network_Model_On_Development_Board.html","text":"\u672c\u7ae0\u5c06\u901a\u8fc7dla_simulator.cpp\u6587\u4ef6\uff0c\u9488\u5bf9\u4f7f\u7528MI_IPU API\u7684\u987a\u5e8f\u4e3e\u4f8b\u8bf4\u660e\u3002 \u8bf4\u660e \u6ce8\u610f\u4e8b\u9879 \u5efa\u8bae\u5728\u5f00\u53d1\u677f\u4e0a\u8fd0\u884c\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u4e4b\u524d\uff0c\u4f7f\u7528Simulator\u5bf9\u6a21\u578b\u8fdb\u884c\u9a8c\u8bc1\u3002Simulator\u80fd\u591f\u5728PC\u7aef\u6a21\u62df\u677f\u4e0a\u8fd0\u884c\u73af\u5883\u3002 \u9996\u5148\u786e\u4fdd\u5f00\u53d1\u677f\u5df2\u7ecf\u70e7\u5f55\u597d\u6700\u65b0\u7684\u56fa\u4ef6\uff0c\u4f7f\u7528mi_demo\u4e2d\u7684dla_simulator\u53ef\u5bf9\u5355\u5f20\u56fe\u7247\u63a8\u6f14\u4e00\u6b21\uff0c\u7ed3\u679c\u4e3a\u63a8\u6f14\u7ed3\u679c\u7684TOP5\u3002 7.1. \u521b\u5efaIPU\u8bbe\u5907 \u00b6 MI_S32 IPUCreateDevice ( char * pFirmwarePath , MI_U32 u32VarBufSize ) { MI_S32 s32Ret = MI_SUCCESS ; MI_IPU_DevAttr_t stDevAttr ; stDevAttr . u32MaxVariableBufSize = u32VarBufSize ; s32Ret = MI_IPU_CreateDevice ( & stDevAttr , NULL , pFirmwarePath , 0 ); return s32Ret ; } (1) \u53c2\u6570\u8bf4\u660e \u2460 \u8f93\u5165\u53c2\u6570\uff1a pFirmwarePath\uff1a\u5728\u8be5\u6b3echip\u4e0a\u4e0d\u518d\u9700\u8981firmware\uff0c\u56e0\u6b64\u4f20NULL u32VarBufSize\uff1a\u6a21\u578b\u5185\u90e8Tensor\u4f7f\u7528\u7684memory\u7684\u6700\u5927\u5927\u5c0f \u5176\u4e2d\uff0cu32VarBufSize\u83b7\u53d6\u65b9\u6cd5\u5982\u4e0b\uff1a \u65b9\u6cd5 1 : \u53ef\u4ee5\u901a\u8fc7 parse_net\u5de5\u5177\u83b7\u53d6 parse_net\u5de5\u5177\u8def\u5f84 \uff1a SGS_IPU_SDK / bin / parse_net \u4f7f\u7528\u65f6\u76f4\u63a5\u5728 parse_net\u547d\u4ee4\u540e\u52a0\u4e0a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8def\u5f84\u5373\u53ef \uff0c\u53ef\u53c2\u8003\u4ee5\u4e0b\u547d\u4ee4\uff1a . / parse_net xxx_fixed . sim | grep Variable \u8f93\u51fa\uff1a | |--> SubGraph [ 0 ] : Variable buffer 0xd2f00 @ 0x82f3b40 . \u5176\u4e2d 0xd2f00 \u5411 2 \u5bf9\u9f50\u540e\u4e3a u32VarBufSize\u5927\u5c0f \u3002 \u5728 C / C ++ \u4e2d\uff0c\u5411 2 \u5bf9\u9f50\u7684\u5b9a\u4e49\u4e3a\uff1a #define alignment_up(a, size) ((a + size - 1) & (~(size - 1))) \u6240\u4ee5 u32VarBufSize\u4e3a864000 \u3002 \u65b9\u6cd5 2 : \u4f7f\u7528 MI\u7684API\u83b7\u53d6 MI_IPU_OfflineModelStaticInfo_t OfflineModelInfo ; ret = MI_IPU_GetOfflineModeStaticInfo ( NULL , modelFilePath , & OfflineModelInfo ); if ( ret != MI_SUCCESS ) { std :: cerr << \"get model variable buffer size failed!\" << std :: endl ; return ; } u32VarBufSize = OfflineModelInfo . u32VariableBufferSize \u5982\u679c\u6709\u591a\u4e2a\u6a21\u578b\u9700\u8981\u8fd0\u884c\uff0c\u9009\u53d6\u6700\u5927\u7684 u32VarBufSize\u521b\u5efaIPU\u8bbe\u5907\u5373\u53ef \u3002 \u2461 \u8f93\u51fa\u53c2\u6570\uff1aMI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API_V3.DOC\u300b 7.2. \u521b\u5efaIPU\u901a\u9053 \u00b6 MI_S32 IPUCreateChannel ( MI_U32 * u32Channel , char * pModelImage ) { MI_S32 s32Ret ; MI_IPUChnAttr_t stChnAttr ; //create channel memset ( & stChnAttr , 0 , sizeof ( stChnAttr )); stChnAttr . u32InputBufDepth = 2 ; stChnAttr . u32OutputBufDepth = 2 ; return MI_IPU_CreateCHN ( u32Channel , & stChnAttr , NULL , pModelImage ); } MI_U32 u32Channel ; ret = IPUCreateChannel ( & u32ChannelID , \u201c . / mobilenet_v1_fixed . img \u201d ); (1) \u53c2\u6570\u8bf4\u660e \u2460 \u8f93\u5165\u53c2\u6570\uff1a u32Channel\uff1a\u521b\u5efaIPU\u901a\u9053\u7684ID pModelImage\uff1a\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u79bb\u7ebf \u5982\u679c\u9700\u8981\u652f\u6301\u6279\u5904\u7406\u8f93\u5165\uff0c\u8bf7\u53c2\u8003 dla_simulator_nbatch.cpp \uff0c\u793a\u4f8b\u5982\u4e0b\uff1a MI_S32 IPUCreateChannel ( MI_U32 * u32Channel , char * pModelImage , int number ) { MI_SYS_GlobalPrivPoolConfig_t stGlobalPrivPoolConf ; MI_IPUChnAttr_t stChnAttr ; //create channel memset ( & stChnAttr , 0 , sizeof ( stChnAttr )); stChnAttr . u32InputBufDepth = 1 ; stChnAttr . u32OutputBufDepth = 1 ; stChnAttr . u32BatchMax = number ; return MI_IPU_CreateCHN ( u32Channel , & stChnAttr , NULL , pModelImage ); } \u8f93\u5165\u53c2\u6570\uff1a u32Channel\uff1a\u521b\u5efaIPU\u901a\u9053\u7684ID pModelImage\uff1a\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u79bb\u7ebf number\uff1a\u6279\u5904\u7406\u8f93\u5165batch\u6570 \u2461 \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API_V3.DOC\u300b 7.3. \u83b7\u53d6\u6a21\u578b\u8f93\u5165\u8f93\u51faTensor\u5c5e\u6027 \u00b6 MI_IPU_SubNet_InputOutputDesc_t desc ; MI_IPU_GetInOutTensorDesc ( u32ChannelID , & desc ); (1) \u53c2\u6570\u8bf4\u660e \u2460 \u8f93\u5165\u53c2\u6570\uff1a u32ChnId\uff1aIPU\u901a\u9053\u7684ID pstDesc\uff1aIPU\u5b50\u7f51\u7edc\u8f93\u5165/\u8f93\u51fa\u63cf\u8ff0\u7ed3\u6784\u4f53 \u2461 \u8f93\u51fa\u53c2\u6570\uff1aMI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API_V3.DOC\u300b 7.4. \u83b7\u53d6\u8f93\u5165\u8f93\u51faTensor \u00b6 MI_IPU_TensorVector_t InputTensorVector ; MI_IPU_TensorVector_t OutputTensorVector ; MI_IPU_GetInputTensors ( u32ChannelID , & InputTensorVector ); MI_IPU_GetOutputTensors ( u32ChannelID , & OutputTensorVector ); (1) \u53c2\u6570\u8bf4\u660e \u2460 \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID InputTensorVector\uff1a\u8f93\u5165IPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 OutputTensorVector\uff1a\u8f93\u51faIPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 \u5982\u679c\u9700\u8981\u652f\u6301\u6279\u5904\u7406\u8f93\u5165\uff0c\u8bf7\u53c2\u8003 dla_simulator_nbatch.cpp \uff0c\u793a\u4f8b\u5982\u4e0b\uff1a MI_IPU_BatchInvokeParam_t stInvokeParam ; memset ( & stInvokeParam , 0 , sizeof ( MI_IPU_BatchInvokeParam_t )); stInvokeParam . u32BatchN = number \uff1b MI_IPU_GetInputTensors2 ( u32ChannelID , & stInvokeParam ); MI_IPU_GetOutputTensors2 ( u32ChannelID , & stInvokeParam ); \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID stInvokeParam\uff1ainvoke\u53c2\u6570\u7ed3\u6784\u4f53\uff0c\u5305\u62ec\u6279\u5904\u7406\u8f93\u5165batch\u6570\uff0c\u4ee5\u53ca\u8f93\u5165\u8f93\u51fatensors\u7684\u6307\u9488 \u2461 \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API_V3.DOC\u300b 7.5. \u6a21\u578b\u6570\u636e\u8f93\u5165 \u00b6 7.5.1. \u62f7\u8d1d\u6570\u636e \u00b6 \u5c06\u6570\u636e\u62f7\u8d1d\u81f3\u6a21\u578b\u8f93\u5165Tensor\u7684\u865a\u62df\u5730\u5740\uff0c\u62f7\u8d1d\u5b8c\u6210\u540e\u8c03\u7528MI_SYS_FlushInvCache\uff1a MI_U8 * pdata = ( MI_U8 * ) InputTensorVector . astArrayTensors [ 0 ]. ptTensorData [ 0 ]; MI_U8 * pSrc = ( MI_U8 * ) Input_Data ; for ( int i = 0 ; i < imageSize ; i ++ ) { * ( pdata + i ) = * ( pSrc + i ); } MI_SYS_FlushInvCache ( pdata , imageSize ); \u6a21\u578b\u4e2dinput formats\u8bbe\u7f6e\u4e3a BGR \u6216\u8005 RGB \u65f6\uff0cstride\u4e0d\u8981\u505aalignment\uff0c\u505a\u4e86alignment\u53cd\u800c\u6709\u95ee\u9898\u3002 \u6a21\u578b\u4e2dinput formats\u8bbe\u7f6e\u4e3a BGRA \u6216\u8005 RGBA \uff08A channel\u5728\u9ad8\u5730\u5740\uff09\uff0c\u4e0d\u9700\u8981alignment\u3002 input_formats\u8bbe\u7f6e\u4e3a BGRA \uff0c\u5bf9\u5e94MI_SYS_PixelFormat_e\u4e3a E_MI_SYSPIXEL_FRAME_ARGB8888 \u3002 input_formats\u8bbe\u7f6e\u4e3a RGBA \uff0c\u5bf9\u5e94MI_SYS_PixelFormat_e\u4e3a E_MI_SYSPIXEL_FRAME_ABGR8888 \u3002 input formats\u8bbe\u7f6e\u4e3a YUV_NV12 \u6216\u8005 GRAY \u65f6\uff0calignment\u89c4\u5219\u662fstride = alignment_up(width, 2)\uff0cheight\u9700\u89812 alignment\u3002 input_formats\u8bbe\u7f6e\u4e3a YUV_NV12 \u6216\u8005 GRAY \u65f6\uff0c\u5bf9\u5e94MI_SYS_PixelFormat_e\u4e3a E_MI_SYSPIXEL_FRAME_YUV_SEMIPLANAR_420 \u3002 7.5.2.\u96f6\u62f7\u8d1d\u6570\u636e \u00b6 \u5982\u679c\u4f7f\u7528MI\u7684\u5176\u4ed6\u6a21\u5757\uff0c\u4e3a\u6a21\u578b\u8f93\u5165\u505a\u597d\u4e86\u6570\u636e\u51c6\u5907\uff0c\u53ef\u4ee5\u4e0d\u7528\u62f7\u8d1d\u6570\u636e\uff0c\u76f4\u63a5\u7ed9\u4f20\u9012\u5176\u4ed6MI\u6a21\u5757\u7684\u7269\u7406\u5730\u5740\uff08\u8be5\u8d77\u59cb\u7269\u7406\u5730\u5740\u5fc5\u987b\u8981\u662f64 bytes\u5bf9\u9f50\uff09\u3002 \u4ee5\u4e0b\u4ee5MI_SYS\u6a21\u5757\u793a\u4f8b\u6a21\u578b\u8f93\u5165\u96f6\u62f7\u8d1d\u6570\u636e\uff0c\u9700\u6ce8\u610f\uff1a \u521b\u5efaIPU\u901a\u9053\u65f6\uff0c\u8f93\u5165InputBufDepth\u8bbe\u4e3a\u96f6\uff0c\u4e0d\u518d\u4f7f\u7528MI_IPU_GetInputTensors\u5206\u914d\u8f93\u5165\u7a7a\u95f4 stChnAttr.u32InputBufDepth = 0; \u7531\u4e8e\u4e0d\u4f7f\u7528MI_IPU_GetInputTensors\uff0c\u9700\u624b\u52a8\u5c06\u7f51\u7edc\u63cf\u8ff0\u7684\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u4e2a\u6570\u8d4b\u7ed9 InputTensorVector.u32TensorCount\u3002 InputTensorVector.u32TensorCount = desc.u32InputTensorCount; \u4f7f\u7528MI_SYS\u7684API\u5206\u914d\u7a7a\u95f4: MI_S32 s32ret = 0 ; MI_PHY phyAddr = 0 ; void * pVirAddr = NULL ; s32ret = MI_SYS_MMA_Alloc ( NULL , BufSize , & phyAddr ); if ( s32ret != MI_SUCCESS ) { throw std :: runtime_error ( \"Alloc buffer failed!\" ); } s32ret = MI_SYS_Mmap ( phyAddr , BufSize , & pVirAddr , TRUE ); if ( s32ret != MI_SUCCESS ) { MI_SYS_MMA_Free ( phyAddr ); throw std :: runtime_error ( \"Mmap buffer failed!\" ); } \u4f20\u9012\u865a\u62df\u5730\u5740\u548c\u5bf9\u5e94\u7684\u8d77\u59cb\u7269\u7406\u5730\u5740\uff08\u8be5\u8d77\u59cb\u7269\u7406\u5730\u5740\u5fc5\u987b\u8981\u662f64 bytes\u5bf9\u9f50\uff09\u7ed9InputTensorVector InputTensorVector . astArrayTensors [ 0 ]. ptTensorData [ 0 ] = pVirAddr ; InputTensorVector . astArrayTensors [ 0 ]. phyTensorAddr [ 0 ] = phyAddr ; \u4e4b\u540e\u53ef\u4ee5\u8fdb\u884c\u6a21\u578b\u63a8\u6f14\u3002 \u4f7f\u7528\u96f6\u62f7\u8d1d\u6570\u636e\uff0c\u4e0d\u9700\u8981\u518d\u91ca\u653e\u8f93\u5165Tensor\uff0c\u5373\u4e0d\u518d\u8c03\u7528MI_IPU_PutInputTensors\u51fd\u6570\uff0c\u91ca\u653eBuffer\u8c03\u7528MI_SYS\u7684API\u5b8c\u6210\u3002 \u91ca\u653eMI_SYS\u7684Buffer MI_SYS_Munmap ( pVirAddr , BufSize ); MI_SYS_MMA_Free ( phyAddr ); 7.6. \u6a21\u578b\u63a8\u6f14 \u00b6 ret = MI_IPU_Invoke ( u32ChannelID , & InputTensorVector , & OutputTensorVector ); if ( ret != MI_SUCCESS ) { MI_IPU_DestroyCHN ( u32ChannelID ); MI_IPU_DestroyDevice (); std :: cerr << \"IPU invoke failed!!\" << std :: endl ; } (1) \u53c2\u6570\u8bf4\u660e \u2460 \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID InputTensorVector\uff1a\u8f93\u5165IPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 \uff08\u6bcf\u4e2a\u8f93\u5165tensor\u7684\u8d77\u59cb\u7269\u7406\u5730\u5740\u5fc5\u987b\u8981\u662f64 bytes\u5bf9\u9f50\uff09 OutputTensorVector\uff1a\u8f93\u51faIPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 \uff08\u6bcf\u4e2a\u8f93\u51fatensor\u7684\u8d77\u59cb\u7269\u7406\u5730\u5740\u5fc5\u987b\u8981\u662f64 bytes\u5bf9\u9f50\uff09 \u5982\u679c\u9700\u8981\u652f\u6301\u6279\u5904\u7406\u8f93\u5165\uff0c\u8bf7\u53c2\u8003 dla_simulator_nbatch.cpp ret = MI_IPU_Invoke2 ( u32ChannelID , & stInvokeParam , & stRuntimeInfo ); if ( ret != MI_SUCCESS ) { MI_IPU_DestroyCHN ( u32ChannelID ); MI_IPU_DestroyDevice (); std :: cerr << \"IPU invoke failed! Error Code: \" << ret << std :: endl ; return ; } \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID stInvokeParam\uff1ainvoke\u53c2\u6570\u7ed3\u6784\u4f53\uff0c\u5305\u62ec\u6279\u5904\u7406batch\u6570\u3001\u8f93\u5165\u8f93\u51fatensor\u6307\u9488\u3001IPU core\u9009\u62e9\u3001 task\u4f18\u5148\u7ea7\u7b49 \uff08\u6bcf\u4e2a\u8f93\u5165/\u8f93\u51fatensor\u7684\u8d77\u59cb\u7269\u7406\u5730\u5740\u5fc5\u987b\u8981\u662f64 bytes\u5bf9\u9f50\uff09 stRuntimeInfo\uff1a\u6a21\u578b\u63a8\u6f14\u4fe1\u606f\u7ed3\u6784\u4f53\uff0c\u5305\u62ec\u63a8\u6f14\u65f6\u95f4\u4ee5\u53ca\u63a8\u6f14\u5e26\u5bbd\u3002 \u2461 \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API_V3.DOC\u300b 7.7. \u91ca\u653e\u8f93\u5165\u8f93\u51faTensor \u00b6 MI_IPU_PutInputTensors ( u32ChannelID , & InputTensorVector ); MI_IPU_PutOutputTensors ( u32ChannelID , & OutputTensorVector ); (1) \u53c2\u6570\u8bf4\u660e \u2460 \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID InputTensorVector\uff1a\u8f93\u5165IPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 OutputTensorVector\uff1a\u8f93\u51faIPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 \u5982\u679c\u9700\u8981\u652f\u6301\u6279\u5904\u7406\u8f93\u5165\uff0c\u8bf7\u53c2\u8003 dla_simulator_nbatch.cpp MI_IPU_PutInputTensors2 ( u32ChannelID , & stInvokeParam ); MI_IPU_PutOutputTensors2 ( u32ChannelID , & stInvokeParam ); \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID stInvokeParam\uff1ainvoke\u53c2\u6570\u7ed3\u6784\u4f53\uff0c\u5305\u62ec\u6279\u5904\u7406\u8f93\u5165batch\u6570\uff0c\u4ee5\u53ca\u8f93\u5165\u8f93\u51fatensors\u7684\u6307\u9488 \u2461 \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API_V3.DOC\u300b 7.8. \u9500\u6bc1IPU\u901a\u9053 \u00b6 MI_IPU_DestroyCHN ( u32ChannelID ); (1) \u53c2\u6570\u8bf4\u660e \u2460 \u8f93\u5165\u53c2\u6570\uff1a s32Channel\uff1a\u521b\u5efaIPU\u901a\u9053\u7684ID \u2461 \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API_V3.DOC\u300b 7.9. \u9500\u6bc1IPU\u8bbe\u5907 \u00b6 MI_IPU_DestroyDevice (); (1) \u53c2\u6570\u8bf4\u660e \u2460 \u8f93\u5165\u53c2\u6570\uff1a \u7a7a \u2461 \u8f93\u51fa\u53c2\u6570\uff1aMI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API_V3.DOC\u300b","title":"Running Offline Network Model On Development Board"},{"location":"module/User_Guide/IPU260/Running_Offline_Network_Model_On_Development_Board.html#71-ipu","text":"MI_S32 IPUCreateDevice ( char * pFirmwarePath , MI_U32 u32VarBufSize ) { MI_S32 s32Ret = MI_SUCCESS ; MI_IPU_DevAttr_t stDevAttr ; stDevAttr . u32MaxVariableBufSize = u32VarBufSize ; s32Ret = MI_IPU_CreateDevice ( & stDevAttr , NULL , pFirmwarePath , 0 ); return s32Ret ; } (1) \u53c2\u6570\u8bf4\u660e \u2460 \u8f93\u5165\u53c2\u6570\uff1a pFirmwarePath\uff1a\u5728\u8be5\u6b3echip\u4e0a\u4e0d\u518d\u9700\u8981firmware\uff0c\u56e0\u6b64\u4f20NULL u32VarBufSize\uff1a\u6a21\u578b\u5185\u90e8Tensor\u4f7f\u7528\u7684memory\u7684\u6700\u5927\u5927\u5c0f \u5176\u4e2d\uff0cu32VarBufSize\u83b7\u53d6\u65b9\u6cd5\u5982\u4e0b\uff1a \u65b9\u6cd5 1 : \u53ef\u4ee5\u901a\u8fc7 parse_net\u5de5\u5177\u83b7\u53d6 parse_net\u5de5\u5177\u8def\u5f84 \uff1a SGS_IPU_SDK / bin / parse_net \u4f7f\u7528\u65f6\u76f4\u63a5\u5728 parse_net\u547d\u4ee4\u540e\u52a0\u4e0a\u5b9a\u70b9\u7f51\u7edc\u6a21\u578b\u8def\u5f84\u5373\u53ef \uff0c\u53ef\u53c2\u8003\u4ee5\u4e0b\u547d\u4ee4\uff1a . / parse_net xxx_fixed . sim | grep Variable \u8f93\u51fa\uff1a | |--> SubGraph [ 0 ] : Variable buffer 0xd2f00 @ 0x82f3b40 . \u5176\u4e2d 0xd2f00 \u5411 2 \u5bf9\u9f50\u540e\u4e3a u32VarBufSize\u5927\u5c0f \u3002 \u5728 C / C ++ \u4e2d\uff0c\u5411 2 \u5bf9\u9f50\u7684\u5b9a\u4e49\u4e3a\uff1a #define alignment_up(a, size) ((a + size - 1) & (~(size - 1))) \u6240\u4ee5 u32VarBufSize\u4e3a864000 \u3002 \u65b9\u6cd5 2 : \u4f7f\u7528 MI\u7684API\u83b7\u53d6 MI_IPU_OfflineModelStaticInfo_t OfflineModelInfo ; ret = MI_IPU_GetOfflineModeStaticInfo ( NULL , modelFilePath , & OfflineModelInfo ); if ( ret != MI_SUCCESS ) { std :: cerr << \"get model variable buffer size failed!\" << std :: endl ; return ; } u32VarBufSize = OfflineModelInfo . u32VariableBufferSize \u5982\u679c\u6709\u591a\u4e2a\u6a21\u578b\u9700\u8981\u8fd0\u884c\uff0c\u9009\u53d6\u6700\u5927\u7684 u32VarBufSize\u521b\u5efaIPU\u8bbe\u5907\u5373\u53ef \u3002 \u2461 \u8f93\u51fa\u53c2\u6570\uff1aMI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API_V3.DOC\u300b","title":"7.1. \u521b\u5efaIPU\u8bbe\u5907"},{"location":"module/User_Guide/IPU260/Running_Offline_Network_Model_On_Development_Board.html#72-ipu","text":"MI_S32 IPUCreateChannel ( MI_U32 * u32Channel , char * pModelImage ) { MI_S32 s32Ret ; MI_IPUChnAttr_t stChnAttr ; //create channel memset ( & stChnAttr , 0 , sizeof ( stChnAttr )); stChnAttr . u32InputBufDepth = 2 ; stChnAttr . u32OutputBufDepth = 2 ; return MI_IPU_CreateCHN ( u32Channel , & stChnAttr , NULL , pModelImage ); } MI_U32 u32Channel ; ret = IPUCreateChannel ( & u32ChannelID , \u201c . / mobilenet_v1_fixed . img \u201d ); (1) \u53c2\u6570\u8bf4\u660e \u2460 \u8f93\u5165\u53c2\u6570\uff1a u32Channel\uff1a\u521b\u5efaIPU\u901a\u9053\u7684ID pModelImage\uff1a\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u79bb\u7ebf \u5982\u679c\u9700\u8981\u652f\u6301\u6279\u5904\u7406\u8f93\u5165\uff0c\u8bf7\u53c2\u8003 dla_simulator_nbatch.cpp \uff0c\u793a\u4f8b\u5982\u4e0b\uff1a MI_S32 IPUCreateChannel ( MI_U32 * u32Channel , char * pModelImage , int number ) { MI_SYS_GlobalPrivPoolConfig_t stGlobalPrivPoolConf ; MI_IPUChnAttr_t stChnAttr ; //create channel memset ( & stChnAttr , 0 , sizeof ( stChnAttr )); stChnAttr . u32InputBufDepth = 1 ; stChnAttr . u32OutputBufDepth = 1 ; stChnAttr . u32BatchMax = number ; return MI_IPU_CreateCHN ( u32Channel , & stChnAttr , NULL , pModelImage ); } \u8f93\u5165\u53c2\u6570\uff1a u32Channel\uff1a\u521b\u5efaIPU\u901a\u9053\u7684ID pModelImage\uff1a\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u79bb\u7ebf number\uff1a\u6279\u5904\u7406\u8f93\u5165batch\u6570 \u2461 \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API_V3.DOC\u300b","title":"7.2. \u521b\u5efaIPU\u901a\u9053"},{"location":"module/User_Guide/IPU260/Running_Offline_Network_Model_On_Development_Board.html#73-tensor","text":"MI_IPU_SubNet_InputOutputDesc_t desc ; MI_IPU_GetInOutTensorDesc ( u32ChannelID , & desc ); (1) \u53c2\u6570\u8bf4\u660e \u2460 \u8f93\u5165\u53c2\u6570\uff1a u32ChnId\uff1aIPU\u901a\u9053\u7684ID pstDesc\uff1aIPU\u5b50\u7f51\u7edc\u8f93\u5165/\u8f93\u51fa\u63cf\u8ff0\u7ed3\u6784\u4f53 \u2461 \u8f93\u51fa\u53c2\u6570\uff1aMI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API_V3.DOC\u300b","title":"7.3. \u83b7\u53d6\u6a21\u578b\u8f93\u5165\u8f93\u51faTensor\u5c5e\u6027"},{"location":"module/User_Guide/IPU260/Running_Offline_Network_Model_On_Development_Board.html#74-tensor","text":"MI_IPU_TensorVector_t InputTensorVector ; MI_IPU_TensorVector_t OutputTensorVector ; MI_IPU_GetInputTensors ( u32ChannelID , & InputTensorVector ); MI_IPU_GetOutputTensors ( u32ChannelID , & OutputTensorVector ); (1) \u53c2\u6570\u8bf4\u660e \u2460 \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID InputTensorVector\uff1a\u8f93\u5165IPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 OutputTensorVector\uff1a\u8f93\u51faIPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 \u5982\u679c\u9700\u8981\u652f\u6301\u6279\u5904\u7406\u8f93\u5165\uff0c\u8bf7\u53c2\u8003 dla_simulator_nbatch.cpp \uff0c\u793a\u4f8b\u5982\u4e0b\uff1a MI_IPU_BatchInvokeParam_t stInvokeParam ; memset ( & stInvokeParam , 0 , sizeof ( MI_IPU_BatchInvokeParam_t )); stInvokeParam . u32BatchN = number \uff1b MI_IPU_GetInputTensors2 ( u32ChannelID , & stInvokeParam ); MI_IPU_GetOutputTensors2 ( u32ChannelID , & stInvokeParam ); \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID stInvokeParam\uff1ainvoke\u53c2\u6570\u7ed3\u6784\u4f53\uff0c\u5305\u62ec\u6279\u5904\u7406\u8f93\u5165batch\u6570\uff0c\u4ee5\u53ca\u8f93\u5165\u8f93\u51fatensors\u7684\u6307\u9488 \u2461 \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API_V3.DOC\u300b","title":"7.4. \u83b7\u53d6\u8f93\u5165\u8f93\u51faTensor"},{"location":"module/User_Guide/IPU260/Running_Offline_Network_Model_On_Development_Board.html#75","text":"","title":"7.5. \u6a21\u578b\u6570\u636e\u8f93\u5165"},{"location":"module/User_Guide/IPU260/Running_Offline_Network_Model_On_Development_Board.html#751","text":"\u5c06\u6570\u636e\u62f7\u8d1d\u81f3\u6a21\u578b\u8f93\u5165Tensor\u7684\u865a\u62df\u5730\u5740\uff0c\u62f7\u8d1d\u5b8c\u6210\u540e\u8c03\u7528MI_SYS_FlushInvCache\uff1a MI_U8 * pdata = ( MI_U8 * ) InputTensorVector . astArrayTensors [ 0 ]. ptTensorData [ 0 ]; MI_U8 * pSrc = ( MI_U8 * ) Input_Data ; for ( int i = 0 ; i < imageSize ; i ++ ) { * ( pdata + i ) = * ( pSrc + i ); } MI_SYS_FlushInvCache ( pdata , imageSize ); \u6a21\u578b\u4e2dinput formats\u8bbe\u7f6e\u4e3a BGR \u6216\u8005 RGB \u65f6\uff0cstride\u4e0d\u8981\u505aalignment\uff0c\u505a\u4e86alignment\u53cd\u800c\u6709\u95ee\u9898\u3002 \u6a21\u578b\u4e2dinput formats\u8bbe\u7f6e\u4e3a BGRA \u6216\u8005 RGBA \uff08A channel\u5728\u9ad8\u5730\u5740\uff09\uff0c\u4e0d\u9700\u8981alignment\u3002 input_formats\u8bbe\u7f6e\u4e3a BGRA \uff0c\u5bf9\u5e94MI_SYS_PixelFormat_e\u4e3a E_MI_SYSPIXEL_FRAME_ARGB8888 \u3002 input_formats\u8bbe\u7f6e\u4e3a RGBA \uff0c\u5bf9\u5e94MI_SYS_PixelFormat_e\u4e3a E_MI_SYSPIXEL_FRAME_ABGR8888 \u3002 input formats\u8bbe\u7f6e\u4e3a YUV_NV12 \u6216\u8005 GRAY \u65f6\uff0calignment\u89c4\u5219\u662fstride = alignment_up(width, 2)\uff0cheight\u9700\u89812 alignment\u3002 input_formats\u8bbe\u7f6e\u4e3a YUV_NV12 \u6216\u8005 GRAY \u65f6\uff0c\u5bf9\u5e94MI_SYS_PixelFormat_e\u4e3a E_MI_SYSPIXEL_FRAME_YUV_SEMIPLANAR_420 \u3002","title":"7.5.1. \u62f7\u8d1d\u6570\u636e"},{"location":"module/User_Guide/IPU260/Running_Offline_Network_Model_On_Development_Board.html#752","text":"\u5982\u679c\u4f7f\u7528MI\u7684\u5176\u4ed6\u6a21\u5757\uff0c\u4e3a\u6a21\u578b\u8f93\u5165\u505a\u597d\u4e86\u6570\u636e\u51c6\u5907\uff0c\u53ef\u4ee5\u4e0d\u7528\u62f7\u8d1d\u6570\u636e\uff0c\u76f4\u63a5\u7ed9\u4f20\u9012\u5176\u4ed6MI\u6a21\u5757\u7684\u7269\u7406\u5730\u5740\uff08\u8be5\u8d77\u59cb\u7269\u7406\u5730\u5740\u5fc5\u987b\u8981\u662f64 bytes\u5bf9\u9f50\uff09\u3002 \u4ee5\u4e0b\u4ee5MI_SYS\u6a21\u5757\u793a\u4f8b\u6a21\u578b\u8f93\u5165\u96f6\u62f7\u8d1d\u6570\u636e\uff0c\u9700\u6ce8\u610f\uff1a \u521b\u5efaIPU\u901a\u9053\u65f6\uff0c\u8f93\u5165InputBufDepth\u8bbe\u4e3a\u96f6\uff0c\u4e0d\u518d\u4f7f\u7528MI_IPU_GetInputTensors\u5206\u914d\u8f93\u5165\u7a7a\u95f4 stChnAttr.u32InputBufDepth = 0; \u7531\u4e8e\u4e0d\u4f7f\u7528MI_IPU_GetInputTensors\uff0c\u9700\u624b\u52a8\u5c06\u7f51\u7edc\u63cf\u8ff0\u7684\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u4e2a\u6570\u8d4b\u7ed9 InputTensorVector.u32TensorCount\u3002 InputTensorVector.u32TensorCount = desc.u32InputTensorCount; \u4f7f\u7528MI_SYS\u7684API\u5206\u914d\u7a7a\u95f4: MI_S32 s32ret = 0 ; MI_PHY phyAddr = 0 ; void * pVirAddr = NULL ; s32ret = MI_SYS_MMA_Alloc ( NULL , BufSize , & phyAddr ); if ( s32ret != MI_SUCCESS ) { throw std :: runtime_error ( \"Alloc buffer failed!\" ); } s32ret = MI_SYS_Mmap ( phyAddr , BufSize , & pVirAddr , TRUE ); if ( s32ret != MI_SUCCESS ) { MI_SYS_MMA_Free ( phyAddr ); throw std :: runtime_error ( \"Mmap buffer failed!\" ); } \u4f20\u9012\u865a\u62df\u5730\u5740\u548c\u5bf9\u5e94\u7684\u8d77\u59cb\u7269\u7406\u5730\u5740\uff08\u8be5\u8d77\u59cb\u7269\u7406\u5730\u5740\u5fc5\u987b\u8981\u662f64 bytes\u5bf9\u9f50\uff09\u7ed9InputTensorVector InputTensorVector . astArrayTensors [ 0 ]. ptTensorData [ 0 ] = pVirAddr ; InputTensorVector . astArrayTensors [ 0 ]. phyTensorAddr [ 0 ] = phyAddr ; \u4e4b\u540e\u53ef\u4ee5\u8fdb\u884c\u6a21\u578b\u63a8\u6f14\u3002 \u4f7f\u7528\u96f6\u62f7\u8d1d\u6570\u636e\uff0c\u4e0d\u9700\u8981\u518d\u91ca\u653e\u8f93\u5165Tensor\uff0c\u5373\u4e0d\u518d\u8c03\u7528MI_IPU_PutInputTensors\u51fd\u6570\uff0c\u91ca\u653eBuffer\u8c03\u7528MI_SYS\u7684API\u5b8c\u6210\u3002 \u91ca\u653eMI_SYS\u7684Buffer MI_SYS_Munmap ( pVirAddr , BufSize ); MI_SYS_MMA_Free ( phyAddr );","title":"7.5.2.\u96f6\u62f7\u8d1d\u6570\u636e"},{"location":"module/User_Guide/IPU260/Running_Offline_Network_Model_On_Development_Board.html#76","text":"ret = MI_IPU_Invoke ( u32ChannelID , & InputTensorVector , & OutputTensorVector ); if ( ret != MI_SUCCESS ) { MI_IPU_DestroyCHN ( u32ChannelID ); MI_IPU_DestroyDevice (); std :: cerr << \"IPU invoke failed!!\" << std :: endl ; } (1) \u53c2\u6570\u8bf4\u660e \u2460 \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID InputTensorVector\uff1a\u8f93\u5165IPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 \uff08\u6bcf\u4e2a\u8f93\u5165tensor\u7684\u8d77\u59cb\u7269\u7406\u5730\u5740\u5fc5\u987b\u8981\u662f64 bytes\u5bf9\u9f50\uff09 OutputTensorVector\uff1a\u8f93\u51faIPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 \uff08\u6bcf\u4e2a\u8f93\u51fatensor\u7684\u8d77\u59cb\u7269\u7406\u5730\u5740\u5fc5\u987b\u8981\u662f64 bytes\u5bf9\u9f50\uff09 \u5982\u679c\u9700\u8981\u652f\u6301\u6279\u5904\u7406\u8f93\u5165\uff0c\u8bf7\u53c2\u8003 dla_simulator_nbatch.cpp ret = MI_IPU_Invoke2 ( u32ChannelID , & stInvokeParam , & stRuntimeInfo ); if ( ret != MI_SUCCESS ) { MI_IPU_DestroyCHN ( u32ChannelID ); MI_IPU_DestroyDevice (); std :: cerr << \"IPU invoke failed! Error Code: \" << ret << std :: endl ; return ; } \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID stInvokeParam\uff1ainvoke\u53c2\u6570\u7ed3\u6784\u4f53\uff0c\u5305\u62ec\u6279\u5904\u7406batch\u6570\u3001\u8f93\u5165\u8f93\u51fatensor\u6307\u9488\u3001IPU core\u9009\u62e9\u3001 task\u4f18\u5148\u7ea7\u7b49 \uff08\u6bcf\u4e2a\u8f93\u5165/\u8f93\u51fatensor\u7684\u8d77\u59cb\u7269\u7406\u5730\u5740\u5fc5\u987b\u8981\u662f64 bytes\u5bf9\u9f50\uff09 stRuntimeInfo\uff1a\u6a21\u578b\u63a8\u6f14\u4fe1\u606f\u7ed3\u6784\u4f53\uff0c\u5305\u62ec\u63a8\u6f14\u65f6\u95f4\u4ee5\u53ca\u63a8\u6f14\u5e26\u5bbd\u3002 \u2461 \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API_V3.DOC\u300b","title":"7.6. \u6a21\u578b\u63a8\u6f14"},{"location":"module/User_Guide/IPU260/Running_Offline_Network_Model_On_Development_Board.html#77-tensor","text":"MI_IPU_PutInputTensors ( u32ChannelID , & InputTensorVector ); MI_IPU_PutOutputTensors ( u32ChannelID , & OutputTensorVector ); (1) \u53c2\u6570\u8bf4\u660e \u2460 \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID InputTensorVector\uff1a\u8f93\u5165IPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 OutputTensorVector\uff1a\u8f93\u51faIPU Tensor\u6570\u7ec4\u7ed3\u6784\u4f53 \u5982\u679c\u9700\u8981\u652f\u6301\u6279\u5904\u7406\u8f93\u5165\uff0c\u8bf7\u53c2\u8003 dla_simulator_nbatch.cpp MI_IPU_PutInputTensors2 ( u32ChannelID , & stInvokeParam ); MI_IPU_PutOutputTensors2 ( u32ChannelID , & stInvokeParam ); \u8f93\u5165\u53c2\u6570\uff1a u32ChannelID\uff1aIPU\u901a\u9053\u7684ID stInvokeParam\uff1ainvoke\u53c2\u6570\u7ed3\u6784\u4f53\uff0c\u5305\u62ec\u6279\u5904\u7406\u8f93\u5165batch\u6570\uff0c\u4ee5\u53ca\u8f93\u5165\u8f93\u51fatensors\u7684\u6307\u9488 \u2461 \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API_V3.DOC\u300b","title":"7.7. \u91ca\u653e\u8f93\u5165\u8f93\u51faTensor"},{"location":"module/User_Guide/IPU260/Running_Offline_Network_Model_On_Development_Board.html#78-ipu","text":"MI_IPU_DestroyCHN ( u32ChannelID ); (1) \u53c2\u6570\u8bf4\u660e \u2460 \u8f93\u5165\u53c2\u6570\uff1a s32Channel\uff1a\u521b\u5efaIPU\u901a\u9053\u7684ID \u2461 \u8f93\u51fa\u53c2\u6570\uff1a MI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API_V3.DOC\u300b","title":"7.8. \u9500\u6bc1IPU\u901a\u9053"},{"location":"module/User_Guide/IPU260/Running_Offline_Network_Model_On_Development_Board.html#79-ipu","text":"MI_IPU_DestroyDevice (); (1) \u53c2\u6570\u8bf4\u660e \u2460 \u8f93\u5165\u53c2\u6570\uff1a \u7a7a \u2461 \u8f93\u51fa\u53c2\u6570\uff1aMI_IPU API \u9519\u8bef\u7801\uff0c\u5177\u4f53\u53c2\u8003\u300aMI_IPU_API_V3.DOC\u300b","title":"7.9. \u9500\u6bc1IPU\u8bbe\u5907"},{"location":"module/User_Guide/IPU260/Simulate.html","text":"5.1. Simulator\u7b80\u4ecb \u00b6 SimulatorTool \u8bf4\u660e \u5de5\u5177\u4f4d\u7f6e SGS_IPU_SDK/Scripts/calibrator/simulator.py \u5de5\u5177\u4f5c\u7528 \u5bf9SigmaStar\u6d6e\u70b9/\u5b9a\u70b9/\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u9a8c\u8bc1 \u4f7f\u7528\u987b\u77e5 \u2460 \u652f\u6301\u5bf9\u5206\u7c7b\u7f51\u7edc\u6570\u636e\u96c6\u9a8c\u8bc1 ILSVRC \u2461 \u652f\u6301\u5bf9\u68c0\u6d4b\u7f51\u7edc\u6570\u636e\u96c6\u9a8c\u8bc1\uff08\u652f\u6301COCO\u6570\u636e\u96c6\uff09 COCO2017 \u2462 \u652f\u6301\u5bf9\u5355\u5f20\u56fe\u7247\u9884\u6d4b image \u2463 \u652f\u6301\u7ed8\u5236\u5355\u5f20\u56fe\u7247\u76ee\u6807\u68c0\u6d4b\u7ed3\u679c \u2461 simulator\u5de5\u5177\u6bcf\u6b21\u8fd0\u884c\u7ed3\u675f\u540e\u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u521b\u5efalog\u76ee\u5f55\uff0clog\u76ee\u5f55\u4e0b\u7684output\u6587\u4ef6\u5939\uff0c\u5b58\u653e\u6a21\u578b\u63a8\u6f14\u7684\u7ed3\u679c\u3002 \u5728SGS_IPU_SDK \u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK source cfg_env.sh 5.2 Simulator\u5de5\u5177\u4f7f\u7528\u8bf4\u660e \u00b6 5.2.1 Simulator\u5de5\u5177\u4f7f\u7528\u793a\u4f8b \u00b6 \u8fdb\u5165\u5230\u8be5\u5de5\u5177\u76ee\u5f55\uff0c\u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a (1) \u6d4b\u8bd5ILSVRC\u6570\u636e\u96c6\uff0c\u5e76\u8fd4\u56de\u6a21\u578b\u7cbe\u5ea6\u7ed3\u679c\uff1a python3 simulator.py \\ -i ~/SGS_Models/resource/classify/ilsvrc2012_val_set100/ \\ -m ~/SGS_Models/tensorflow/mobilenet_v2/mobilenet_v2_float.sim \\ -l ~/SGS_Models/resource/classify/tensorflow_labels.txt \\ -c Classification \\ -t Float \\ -n mobilenet_v2 \\ --num_process 20 \u6216\u8005\u53ef\u4ee5\u4f7f\u7528\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\uff1a python3 simulator.py \\ -i ~/SGS_Models/resource/classify/ilsvrc2012_val_set100/file.list \\ -m ~/SGS_Models/tensorflow/mobilenet_v2/mobilenet_v2_float.sim \\ -l ~/SGS_Models/resource/classify/tensorflow_labels.txt \\ -c Classification \\ -t Float \\ -n mobilenet_v2 \\ --num_process 20 (2) \u6d4b\u8bd5COCO2017\u6570\u636e\u96c6\uff0c\u5e76\u8fd4\u56de\u6a21\u578b\u68c0\u6d4b\u7ed3\u679c\uff1a python3 simulator.py \\ -i ~/SGS_Models/resource/detection/coco2017_val_set100 \\ -m ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1_float.sim \\ -l ~/SGS_Models/resource/detection/coco2017_val_set100.json \\ -c Detection \\ -t Float \\ -n ssd_mobilenet_v1 \\ --num_process 10 \u6216\u8005\u53ef\u4ee5\u4f7f\u7528\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\uff1a python3 simulator.py \\ -i ~/SGS_Models/resource/detection/coco2017_val_set100/file.list \\ -m ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1_float.sim \\ -l ~/SGS_Models/resource/detection/coco2017_val_set100.json \\ -c Detection \\ -t Float \\ -n ssd_mobilenet_v1 \\ --num_process 10 (3) \u6d4b\u8bd5\u5355\u5f20\u56fe\u7247\uff0c\u5e76\u5c06\u68c0\u6d4b\u7ed3\u679c\u7ed8\u5236\u5728\u56fe\u7247\u4e0a\uff0c\u4fdd\u5b58\u5230 ./results/ \u6587\u4ef6\u5939\u4e0b\uff1a python3 simulator.py \\ -i ~/SGS_Models/resource/detection/coco2017_val_set100/000000567877.jpg \\ -m ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1_float.sim \\ -c Detection \\ -t Float \\ -n ssd_mobilenet_v1 \\ --draw_result ./results 5.2.2 Simulator\u5de5\u5177\u4f7f\u7528\u53c2\u6570\u8bf4\u660e \u00b6 (1) \u5fc5\u9009\u53c2\u6570 \u2460 -i , --image : \u56fe\u7247\u6587\u4ef6 / \u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84 / \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u3002 \u4f7f\u7528\u987b\u77e5 \u4e0d\u52a0\u53ef\u9009\u53c2\u6570 -n/--preprocess \u65f6\uff0c -i/--image \u4e0d\u80fd\u7ed9\u56fe\u7247\u6216\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\u3002 -i/--image \u53c2\u6570\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\u65f6\uff1a \u7f51\u7edc\u6a21\u578b\u4e3a\u5355\u8f93\u5165\u65f6\uff1a~/SGS_IPU_SDK/image_test/2007000364.jpg \u7f51\u7edc\u6a21\u578b\u4e3a\u591a\u8f93\u5165\u65f6\uff1a /SGS_IPU_SDK/image_test/2007000364.jpg, /SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp \u5f53 -i/--image \u7684\u53c2\u6570\u4e3a\u5355\u5f20\u56fe\u7247\u7684\u8def\u5f84\u65f6\uff0csimulator\u53ea\u5bf9\u8be5\u56fe\u7247\u63a8\u6f14\uff1b \u5f53 -i/--image \u7684\u53c2\u6570\u4e3a\u56fe\u7247\u6587\u4ef6\u5939\u7684\u8def\u5f84\u65f6\uff0csimulator\u4f1a\u5bf9\u6587\u4ef6\u5939\u5185\u7684\u56fe\u7247\u5168\u90e8\u63a8\u6f14\uff0c\u6b64\u65f6\u589e\u52a0\u53ef\u9009\u53c2\u6570--num_process\uff08\u53c2\u6570 > 1\uff09\uff0c\u53ef\u4ee5\u5f00\u542f\u591a\u8fdb\u7a0b\u63a8\u6f14\u3002 \u2461 -m , --model : \u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 \u2462 -c , --category : \u6a21\u578b\u7684\u7c7b\u522b\uff0c\u4e3b\u8981\u6709Classification / Detection / Unknown\u3002 \u4f7f\u7528\u987b\u77e5 Classification : \u6a21\u578b\u67091\u4e2a\u8f93\u51fa\uff0c\u4f1a\u6839\u636e\u8f93\u51fa\u6392\u5e8f\u8f93\u51fa\u5206\u6570\u7531\u9ad8\u81f3\u4f4e\u7684\u524d5\u4e2a\u3002 Detection : \u6a21\u578b\u67094\u4e2a\u8f93\u51fa\uff0c\u4f1a\u6839\u636e\u8f93\u51fa\u8f6c\u6362\u4e3a\u8f93\u5165\u56fe\u7247\u7684bbox\u4f4d\u7f6e\u4ee5\u53ca\u7c7b\u522b\u3002\u53ea\u652f\u6301SigmaStar\u540e\u5904\u7406\u7b97\u5b50 [SigmaStar\u540e\u5904\u7406\u6a21\u5757]\u3002\u5176\u4ed6\u540e\u5904\u7406\u8bf7\u4f7f\u7528Unknown\u3002 Unknown : \u6a21\u578b\u8f93\u51fa\u4e0d\u5c5e\u4e8e\u4e0a\u8ff0\u4e24\u79cd\u7c7b\u578b\uff0c\u4f1a\u8f93\u51fa\u5168\u90e8\u7684Tensor\u6570\u503c\u3002 -c/--category \u7684\u53c2\u6570\u9009\u62e9Unknown\u65f6\uff0c\u5f53input_config.ini\u4e2d[OUTPUT_CONFIG]\u7684dequantizations\u4e3a'TRUE'\u65f6\uff0c\u4f1a\u5728\u8f6c\u6362Fixed\u6a21\u578b\u65f6\u5728\u589e\u52a0Fix2float\u7b97\u5b50\uff0c\u8be5\u7b97\u5b50\u4f1a\u8f6c\u6362\u5b9a\u70b9\u6570\u636e\u5230\u6d6e\u70b9\u6570\u636e\uff0c\u5b9a\u70b9\u548c\u79bb\u7ebf\u6a21\u578b\u7684\u8f93\u51faTensor\u7ef4\u5ea6\u4e0e\u6a21\u578b\u7ef4\u5ea6\u76f8\u540c \u2463 -t , --type : \u6a21\u578b\u7684\u6570\u636e\u7c7b\u578b\u3002 \u4f7f\u7528\u987b\u77e5 Float : \u6d6e\u70b9\u6a21\u578b\u3002 Fixed : \u5b9a\u70b9\u5728\u7ebf\u6a21\u578b\u3002 Offline : \u5b9a\u70b9\u79bb\u7ebf\u6a21\u578b\u3002 (2) \u53ef\u9009\u53c2\u6570 \u2460 -l , --label : \u6570\u636e\u96c6\u7684\u6807\u7b7e\u6587\u4ef6\u8def\u5f84 / \u56fe\u7247\u6587\u5b57\u63cf\u8ff0\u7684\u6807\u7b7e\u3002 \u4f7f\u7528\u987b\u77e5 \u5f53 -l/--label \u7684\u53c2\u6570\u4e3a\u6570\u636e\u96c6\u6807\u7b7e\u6587\u4ef6\u8def\u5f84\u65f6\u5fc5\u987b\u4f7f\u7528\u53ef\u9009\u53c2\u6570--num_process\uff0c\u6570\u636e\u96c6\u9a8c\u8bc1\u652f\u6301ImageNet\uff08Top1\u3001Top5\uff09\u3001COCO\u76ee\u6807\u68c0\u6d4b(mmAP)\uff1b \u5f53 -l/--label \u53c2\u6570\u4e3a\u56fe\u7247\u6587\u5b57\u63cf\u8ff0\u6807\u7b7e\u65f6\uff0c\u4e0d\u80fd\u4f7f\u7528\u9009\u9879--num_process\u3002 \u2461 -n , --preprocess : \u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u8be6\u89c1 Calibrator:\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5 \u3002 \u4f7f\u7528\u987b\u77e5 \u4e0d\u52a0 -n/--preprocess \u53c2\u6570\u65f6\uff0c -i/--image \u4e0d\u80fd\u7ed9\u56fe\u7247\u6216\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\u3002\u4e0d\u52a0\u8be5\u53c2\u6570\uff0c\u56fe\u7247\u53c2\u6570\u9700\u8981\u7ed9\u539f\u59cb\u6570\u636e\uff0c\u53ef\u91c7\u7528 --save_input \u4fdd\u5b58\u56fe\u7247\u6570\u636e\u540e\uff0c\u6839\u636e\u8be5\u683c\u5f0f\u5236\u5b9a\u5176\u4ed6\u7684\u539f\u59cb\u6570\u636e\u3002 \u4e5f\u53ef\u4ee5\u5b8c\u6210\u524d\u5904\u7406\u6587\u4ef6\u914d\u7f6e\u540e\uff0c\u7ed9\u5b9a\u524d\u5904\u7406\u6587\u4ef6\u8def\u5f84\u3002 \u82e5\u6a21\u578b\u4e3a \u591a\u8f93\u5165 \u65f6\uff0c -n,--preprocess \u53c2\u6570\u7528\u6cd5\u9700\u8981\u591a\u4e2a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4f8b\u5982 -n preprocess1.py,preprocess2.py \u6216\u8005 --preprocess preprocess1.py,preprocess2.py \u2462 --tool : sgs_simulator\u6587\u4ef6\u8def\u5f84\u3002 \u4f7f\u7528\u987b\u77e5 simulator\u5de5\u5177\u4f1a\u5bfb\u627e\u7cfb\u7edf\u53d8\u91cf\u4ece\u800c\u83b7\u5f97\u5bf9\u5e94\u9636\u6bb5\u4efb\u52a1\u6240\u9700\u5de5\u5177\u8def\u5f84\uff0c\u56e0\u6b64\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u53c2\u6570-t/--tool\u4e0d\u7528\u6307\u5b9a\u76f8\u5173\u5de5\u5177\u7684\u4f4d\u7f6e\u3002 \u2463 --skip_garbage : Fixed\u548cOffline\u6a21\u578b\u8f93\u51fa\u7ed3\u679c\u8df3\u8fc7\u65e0\u7528\u6570\u636e\u3002 \u2464 --dump_rawdata : \u4fdd\u5b58Fixed\u548cOffline\u6a21\u578b\u8f93\u5165\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u6587\u4ef6\u540d\u4e3a\u56fe\u7247\u540d + .bin\uff0c\u4fdd\u5b58\u5728\u5f53\u524d\u8def\u5f84\u3002 \u2465 --num_process : \u8fdb\u7a0b\u6570\uff0c\u540c\u65f6\u8fd0\u884c\u7684\u8fdb\u7a0b\u6570\u3002 \u4f7f\u7528\u987b\u77e5 \u4e0d\u52a0\u8be5\u53c2\u6570\u9ed8\u8ba4\u4e3a\u5355\u7ebf\u7a0b\u3002 \u9a8c\u8bc1\u6570\u636e\u96c6\u5fc5\u987b\u52a0\u6b64\u53c2\u6570\u4e14\u8fdb\u7a0b\u6570 > 1\u3002 \u2466 --draw_result : \u7ed8\u5236\u76ee\u6807\u68c0\u6d4b\u7f51\u7edc\u9009\u6846\u7ed3\u679c\u3002 \u4f7f\u7528\u987b\u77e5 \u53c2\u6570\u4e3a\u7ed3\u679c\u4fdd\u5b58\u6587\u4ef6\u5939\u8def\u5f84\uff08\u6587\u4ef6\u5939\u4e0d\u5b58\u5728\u4f1a\u81ea\u52a8\u521b\u5efa\uff09\u548c\u753b\u6846\u7684\u9608\u503c\uff0c\u4f7f\u7528\u9017\u53f7( , )\u5206\u9694\u4fdd\u5b58\u8def\u5f84\u4e0e\u9608\u503c\u3002 \u8f93\u5165\u9608\u503c\u753b\u51fa\u5927\u4e8e\u9608\u503c\u7684\u68c0\u6d4b\u7ed3\u679c\uff0c\u4e0d\u8f93\u5165\u9608\u503c\u5219\u753b\u51fa\u5168\u90e8\u68c0\u6d4b\u7ed3\u679c\u3002 \u2467 --continue_run : \u63a5\u7740\u4e0a\u6b21\u6570\u636e\u96c6\u5269\u4e0b\u7684\u90e8\u5206\u8fd0\u884c\u3002 \u2468 --save_input : \u4fdd\u5b58simulator \u524d\u5904\u7406\u540e\u7684\u6587\u4ef6\uff0c\u9ed8\u8ba4\u4e0d\u4fdd\u5b58\u3002\u6587\u4ef6\u4e3a\u6587\u672c\u6587\u4ef6\uff0c\u4f1a\u5728\u8fd0\u884c\u8def\u5f84\u4e0b\u521b\u5efa\u6587\u4ef6\u5939tmp_image\uff0c\u6587\u4ef6\u4fdd\u5b58\u5728 ./tmp_image/imagename \u56fe\u7247\u540d\u3002 5.2. calibrator_custom.simulator\u7b80\u4ecb \u00b6 (1) calibrator_custom.simulator\u662f\u57fa\u4e8ePython\u7684\u5feb\u901f\u91cf\u5316\u548c\u8f6c\u6362\u6a21\u578b\u7684\u6a21\u5757\u3002 (2) \u7528calibrator_custom.simulator\u53ef\u4ee5\u66f4\u65b9\u4fbf\u7075\u6d3b\u7684\u5bf9\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u8fdb\u884c\u91cf\u5316\u548c\u8f6c\u6362\u3002 (3) calibrator_custom.simulator\u5305\u542b3\u79cd\uff0c\u7528\u4e8e\u89e3\u6790\u4e0d\u540c\u9636\u6bb5\u7684\u6a21\u578b\u3002 \u2460 calibrator_custom.float_simulator \u7528\u4e8e\u89e3\u6790float\u6a21\u578b \u2461 calibrator_custom.fixed_simulator \u7528\u4e8e\u89e3\u6790fixed\u6a21\u578b \u2462 calibrator_custom.offline_simulator \u7528\u4e8e\u89e3\u6790offline\u6a21\u578b 5.3 calibrator_custom.simulator\u5de5\u5177\u4f7f\u7528\u8bf4\u660e \u00b6 5.3.1 calibrator_custom.simulator\u4f7f\u7528\u793a\u4f8b \u00b6 \u4e0b\u9762\u57fa\u4e8ecalibrator_custom.float_simulator\uff0c\u8bf4\u660e\u4f7f\u7528\u65b9\u6cd5\u548c\u76f8\u5173API\u63a5\u53e3\uff1a import calibrator_custom model_path = './mobilenet_v2_float.sim' model = calibrator_custom . float_simulator ( model_path ) \u4f7f\u7528\u987b\u77e5 \u4f7f\u7528calibrator_custom.float_simulator\u65f6\uff0c\u9700\u8981\u7ed9\u5b9afloat.sim\u6a21\u578b\u7684\u8def\u5f84\uff0c\u7528\u4e8e\u521b\u5efafloat_simulator\u7684\u5b9e\u4f8b\u3002\u53c2\u6570\u7ed9\u5b9a\u9519\u8bef\uff0c\u5c06\u65e0\u6cd5\u6210\u529f\u521b\u5efafloat_simulator\u5b9e\u4f8b\uff0c\u5e76\u8fd4\u56deValueError\u3002 5.3.2 calibrator_custom.simulator\u65b9\u6cd5 \u00b6 (1) get_input_details : \u8fd4\u56de\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u4fe1\u606f\uff0c\u4ee5list\u5f62\u5f0f\u8fd4\u56de\u3002 \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578b\u8f93\u5165\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a index : \u8f93\u5165Tensor\u5e8f\u53f7 name : \u8f93\u5165Tensor\u540d\u79f0 shape : \u8f93\u5165Tensor\u7684\u5f62\u72b6 dtype : \u8f93\u5165Tensor\u7684\u6570\u636e\u7c7b\u578b input_formats : \u7f51\u7edc\u6a21\u578b\u5b9e\u9645\u8fd0\u884c\u65f6\u7684\u56fe\u7247\u8f93\u5165\u683c\u5f0f training_input_formats : \u7f51\u7edc\u6a21\u578b\u8bad\u7ec3\u662f\u7684\u56fe\u7247\u8f93\u5165\u683c\u5f0f \u2460 Float\u6a21\u578b\u8fd4\u56de\u5982\u4e0b\uff1a input_details = model . get_input_details () print ( input_details ) [ { 'name' : 'sub_7' , 'shape' : array ([ 1 , 513 , 513 , 3 ], dtype = int32 ), 'dtype' : < class ' numpy . float32 '>, 'index' : 0 } ] \u2461 Fixed\u548cOffline\u6a21\u578b\u8fd4\u56de\u5982\u4e0b\uff1a >>> input_details = model . get_input_details () >>> print ( input_details ) [ { 'index' : 0 , 'shape' : array ([ 1 , 513 , 513 , 3 ]), 'dtype' : < class ' numpy . uint8 '>, 'name' : 'sub_7' , 'input_formats' : 'RGB' , 'training_input_formats' : 'RGB' } ] (2) get_output_detail : \u8fd4\u56de\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u4fe1\u606f\uff0c\u4ee5list\u5f62\u5f0f\u8fd4\u56de\u3002 \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578b\u8f93\u5165\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a index : \u8f93\u51faTensor\u5e8f\u53f7 name : \u8f93\u51faTensor\u540d\u79f0 shape : \u8f93\u51faTensor\u7684\u5f62\u72b6 dtype : \u8f93\u51faTensor\u7684\u6570\u636e\u7c7b\u578b input_formats : \u7f51\u7edc\u6a21\u578b\u5b9e\u9645\u8fd0\u884c\u65f6\u7684\u56fe\u7247\u8f93\u51fa\u683c\u5f0f training_input_formats : \u7f51\u7edc\u6a21\u578b\u8bad\u7ec3\u662f\u7684\u56fe\u7247\u8f93\u51fa\u683c\u5f0f quantization : \u8f93\u51faTensor\u7684scale\u548czero_point\uff08\u9700\u5c06\u6a21\u578b\u8f93\u51faTensor\u4e58scale\u5f97\u5230\u6d6e\u70b9\u6570\uff09\u3002 \u5982\u679cinput_config.ini\u914d\u7f6e dequantizations \u4e3aTRUE\uff0c\u751f\u6210\u7684\u6a21\u578b\u5bf9\u5e94\u8f93\u51fa\u4f1a\u589e\u52a0Fix2Float\u7b97\u5b50\uff0c\u8f93\u51fa\u6570\u636e\u7c7b\u578b\u4e3afloat32\uff0cget_output_details\u4e0d\u518d\u8fd4\u56de quantization \u3002 \u2460 Float\u6a21\u578b\u8fd4\u56de\u5982\u4e0b\uff1a >>> output_details = model . get_output_details () >>> print ( output_details ) [ { 'name' : 'MobilenetV2/Conv/Conv2D' , 'shape' : array ([ 1 , 257 , 257 , 30 ], dtype = int32 ), 'dtype' : < class ' numpy . float32 '>, 'index' : 0 } ] \u2461 Fixed\u548cOffline\u6a21\u578b\u8fd4\u56de\u5982\u4e0b\uff1a >>> output_details = model . get_output_details () >>> print ( output_details ) [ { 'index' : 0 , 'shape' : array ([ 1 , 257 , 257 , 30 ]), 'name' : 'MobilenetV2/Conv/Conv2D' , 'dtype' : < class ' numpy . int16 '>, 'quantization' : ( 0.00013832777040079236 , 0 ) } ] (3) set_input : \u8bbe\u7f6e\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u6570\u636e >>> model . set_input ( 0 , img_data ) \u4f7f\u7528\u987b\u77e5 0\u4e3a\u8f93\u5165Tensor\u7684index\uff1b \u8f93\u5165\u6570\u636e\u53ef\u4ee5\u5728get_input_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230\uff1b img_data\u662f\u4e0emodel\u8f93\u5165shape\u548cdtype\u76f8\u540c\u7684numpy.ndarray\u683c\u5f0f\u6570\u636e\uff0c\u9519\u8bef\u7684shape\u6216dtype\uff0c\u5c06\u5bfc\u81f4set_input\u8fd4\u56deValueError\uff1b \u5982\u679c\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u53ef\u4ee5\u591a\u6b21\u8c03\u7528set_input\uff0c\u6839\u636eget_input_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230index\u8bbe\u7f6e\u5bf9\u5e94Tensor\u7684\u8f93\u5165\u6570\u636e\u3002 (4) invoke : \u6a21\u578b\u8fd0\u884c\u4e00\u6b21 >>> model . invoke () \u4f7f\u7528\u987b\u77e5 \u8c03\u7528invoke\u524d\u8bf7\u5148\u4f7f\u7528set_input\u8bbe\u7f6e\u8f93\u5165\u6570\u636e\uff0c\u672a\u8c03\u7528set_input\u76f4\u63a5\u8c03\u7528invoke\u4f1a\u8fd4\u56deValueError\u3002 (5) get_output : \u83b7\u53d6\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u6570\u636e >>> result = model . get_output ( 0 ) \u4f7f\u7528\u987b\u77e5 0\u4e3a\u8f93\u51faTensor\u7684index; \u8f93\u51fa\u6570\u636e\u53ef\u4ee5\u5728get_output_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230\uff0c\u8fd4\u56denumpy.ndarray\u683c\u5f0f\u8f93\u51fa\u6570\u636e\u3002 \u5982\u679c\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u51fa\uff0c\u53ef\u4ee5\u591a\u6b21\u8c03\u7528get_output\uff0c\u6839\u636eget_output_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230index\u83b7\u53d6\u5bf9\u5e94Tensor\u7684\u8f93\u51fa\u6570\u636e\u3002 \u5047\u8bbe\u6a21\u578b\u8f93\u51fa\u7684shape\u4e3a[1, 257, 257, 30],Float\u6a21\u578b\u67e5\u770b\u7ed3\u679c\u7684shape: >>> print ( result . shape ) ( 1 , 257 , 257 , 30 ) (6) get_tensor_details : \u8fd4\u56de\u7f51\u7edc\u6a21\u578b\u6bcf\u4e2aTensor\u7684\u4fe1\u606f\uff08list\uff09 \u2460 Float\u6a21\u578b\u8fd4\u56de\u5982\u4e0b\uff1a \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578bTensor\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a name : Tensor\u540d\u79f0 shape : Tensor\u7684\u5f62\u72b6 dtype : Tensor\u7684\u6570\u636e\u7c7b\u578b qtype : \u5b9a\u70b9\u6a21\u578b\u8be5Tensor\u53ef\u80fd\u7684\u6570\u636e\u7c7b\u578b\uff08quantization type\uff09 >>> tensor_details = model . get_tensor_details () >>> print ( tensor_details ) [ { 'name' : 'MobilenetV2/Conv/Conv2D' , 'shape' : array ([ 1 , 257 , 257 , 30 ], dtype = int32 ), 'dtype' : 'FLOAT32' , 'qtype' : 'INT16' }, { 'name' : 'MobilenetV2/Conv/Conv2D_bias' , 'shape' : array ( [ 2 , 30 ], dtype = int32 ), 'dtype' : 'FLOAT32' , 'qtype' : 'INT16' }, { 'name' : 'MobilenetV2/Conv/weights/read' , 'shape' : array ( [ 30 , 3 , 3 , 3 ], dtype = int32 ), 'dtype' : 'FLOAT32' , 'qtype' : 'INT8' }, { 'name' : 'sub_7' , 'shape' : array ([ 1 , 513 , 513 , 3 ], dtype = int32 ), 'dtype' : 'FLOAT32' , 'qtype' : 'UINT8' } ] \u2461 Fixed\u548cOffline\u6a21\u578b\u5982\u679cinput_config.ini\u4e2d[OUTPUT_CONFIG]\u7684dequantizations\u914d\u7f6e\u4e3aFALSE\u65f6\u8fd4\u56de\u5982\u4e0b\uff1a \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578bTensor\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a name : Tensor\u540d\u79f0 shape : Tensor\u7684\u5f62\u72b6 dtype : Tensor\u7684\u6570\u636e\u7c7b\u578b quantization : Tensor\u7684scale\u548czero_point min : Tensor\u7684\u6700\u5c0f\u503c max : Tensor\u7684\u6700\u5927\u503c >>> tensor_details = model . get_tensor_details () >>> print ( tensor_details ) [ { 'shape' : array ([ 1 , 257 , 257 , 30 ]), 'quantization' : [( 0.00013832777040079236 , 0 )], 'min' : [ - 4.230099201202393 ], 'max' : [ 4.532586097717285 ], 'name' : 'MobilenetV2/Conv/Conv2D' , 'dtype' : 'INT16' }, { 'shape' : array ([ 2 , 30 ]), 'quantization' : [], 'min' : [ 0.0 ], 'max ' : [ 1.0 ], 'name' : 'MobilenetV2/Conv/Conv2D_bias' , 'dtype' : 'INT16' }, { 'shape' : array ([ 30 , 3 , 3 , 3 ]), 'quantization' : [( 0.004813921172171831 , 0 )], 'min' : [ - 0.5498989820480347 ], 'max' : [ 0.6113680005073547 ], 'name' : 'MobilenetV2/Conv/weights/read' , 'dtype' : 'INT8' }, { 'shape' : array ([ 1 , 513 , 513 , 3 ]), 'quantization' : [( 0.007843137718737125 , 128 )], 'min' : [ - 1 . 0 ], 'max' : [ 1.0 ], 'name' : 'sub_7' , 'dtype' : 'UINT8' } ] \u4f7f\u7528\u987b\u77e5 \u914d\u7f6einput_config.ini\u4e2d[OUTPUT_CONFIG]\u7684dequantizations\u4e3aTRUE\u65f6\uff0c\u4f1a\u5728\u8f6c\u6362Fixed\u6a21\u578b\u65f6\u5728\u589e\u52a0Fix2float\u7b97\u5b50\uff0c\u8be5\u7b97\u5b50\u4f1a\u8f6c\u6362\u5b9a\u70b9\u6570\u636e\u5230\u6d6e\u70b9\u6570\u636e\uff0c\u56e0\u6b64model.get_tensor_details()\u5c06\u4e0d\u518d\u6709'quantization'\u4fe1\u606f\u3002 5.3.3 calibrator_custom.SIM_Simulator \u00b6 (1) calibrator_custom.SIM_Simulator\u7b80\u4ecb \u5bf9\u4e8e\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u540c\u65f6\u8f6c\u6362\u65f6\uff0c\u63d0\u4f9bcalibrator_custom.SIM_Simulator\uff0c\u65b9\u4fbf\u8fdb\u884c\u7b80\u5355\u5b9a\u4e49\u540e\uff0c\u7edf\u4e00\u8fd0\u884c\u3002calibrator_custom.SIM_Simulator\u662f\u5df2\u7ecf\u5b9e\u73b0\u597d\u7684class\uff0c\u5f53\u4e2d\u53ea\u6709forward\u65b9\u6cd5\u672a\u5b9e\u73b0\uff0c\u4f7f\u7528\u65f6\u4ec5\u9700\u5b9e\u73b0\u8be5\u65b9\u6cd5\uff0c\u5373\u53ef\u8f6c\u6362\u5b8c\u6210\u3002 (2) calibrator_custom.SIM_Simulator\u4f7f\u7528\u65b9\u6cd5 \u4e0b\u9762\u4ee5 SGS_IPU_SDK/Scripts/examples/sim_simulator.py \u4e3a\u4f8b\uff0c\u8bf4\u660ecalibrator_custom.SIM_Simulator\u7684\u4f7f\u7528\u65b9\u6cd5\uff1a \u2460 \u5b9a\u4e49forward\u65b9\u6cd5\uff1a import calibrator_custom class Net ( calibrator_custom . SIM_Simulator ): def __init__ ( self ): super () . __init__ () self . model = calibrator_custom . fixed_simulator ( model_path ) def forward ( self , x ): out_details = self . model . get_output_details () self . model . set_input ( 0 , x ) self . model . invoke () result_list = [] for idx in range ( len ( out_details )): result = self . model . get_output ( idx ) # for Fixed and Offline model if out_details [ idx ][ 'dtype' ] == np . int16 : scale , _ = out_details [ idx ][ 'quantization' ] result = np . dot ( result , scale ) result_list . append ( result ) return result_list \u4f7f\u7528\u987b\u77e5 forward\u7684\u53c2\u6570\u4e3a\u6a21\u578b\u8f93\u5165\uff0c\u5982\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u53ef\u589e\u52a0forward\u7684\u53c2\u6570\u3002 \u2461 \u521b\u5efacalibrator_custom.SIM_Simulator\u7684\u5b9e\u4f8b net = Net () \u2462 \u8c03\u7528calibrator_custom.SIM_Simulator\u5b9e\u4f8b\u7684\u65b9\u6cd5 result = net ( img_gen , num_process = 4 ) \u4f7f\u7528\u987b\u77e5 \u8c03\u7528calibrator_custom.SIM_Simulator\u5b9e\u4f8b\uff0c\u9700\u8981\u7ed9\u5b9a\u8f93\u5165\u56fe\u7247\u7684numpy.ndarray\u6216\u8005\u56fe\u7247\u751f\u6210\u5668\u3002 \u5f53num_process\u5927\u4e8e1\u65f6\uff0cimg_gen\u5fc5\u987b\u4e3a\u56fe\u7247\u751f\u6210\u5668\u3002 \u56fe\u7247\u751f\u6210\u5668(img_gen): \u4e3a\u65b9\u4fbf\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u8f6c\u6362\u6a21\u578b\uff0c\u901a\u8fc7\u751f\u6210\u5668\u65b9\u4fbf\u7ec4\u7ec7\u8f93\u5165\u56fe\u7247\u7684\u5e8f\u5217\u3002\u5982\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u751f\u6210\u5668\u5e94\u8be5\u6309\u7167\u5b9a\u4e49forward\u65f6\u7684\u8f93\u5165\u987a\u5e8f\uff0c\u8fd4\u56de\u6709\u591a\u4e2anumpy.ndarray\u7684list\u3002 calibrator_custom.utils.image_preprocess_func\u4f7f\u7528\u9884\u5148\u5b9a\u4e49\u597d\u7684\u524d\u5904\u7406\u65b9\u6cd5,\u83b7\u53d6img_gen\u3002 preprocess_func = calibrator_custom . utils . image_preprocess_func ( model_name ) def image_generator ( folder_path , preprocess_func , norm ): images = [ os . path . join ( folder_path , img ) for img in os . listdir ( folder_path )] for image in images : img = preprocess_func ( image , norm ) yield [ img ] img_gen = image_generator ( './images' , preprocess_func , False )","title":"Simulate"},{"location":"module/User_Guide/IPU260/Simulate.html#51-simulator","text":"SimulatorTool \u8bf4\u660e \u5de5\u5177\u4f4d\u7f6e SGS_IPU_SDK/Scripts/calibrator/simulator.py \u5de5\u5177\u4f5c\u7528 \u5bf9SigmaStar\u6d6e\u70b9/\u5b9a\u70b9/\u79bb\u7ebf\u7f51\u7edc\u6a21\u578b\u9a8c\u8bc1 \u4f7f\u7528\u987b\u77e5 \u2460 \u652f\u6301\u5bf9\u5206\u7c7b\u7f51\u7edc\u6570\u636e\u96c6\u9a8c\u8bc1 ILSVRC \u2461 \u652f\u6301\u5bf9\u68c0\u6d4b\u7f51\u7edc\u6570\u636e\u96c6\u9a8c\u8bc1\uff08\u652f\u6301COCO\u6570\u636e\u96c6\uff09 COCO2017 \u2462 \u652f\u6301\u5bf9\u5355\u5f20\u56fe\u7247\u9884\u6d4b image \u2463 \u652f\u6301\u7ed8\u5236\u5355\u5f20\u56fe\u7247\u76ee\u6807\u68c0\u6d4b\u7ed3\u679c \u2461 simulator\u5de5\u5177\u6bcf\u6b21\u8fd0\u884c\u7ed3\u675f\u540e\u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u521b\u5efalog\u76ee\u5f55\uff0clog\u76ee\u5f55\u4e0b\u7684output\u6587\u4ef6\u5939\uff0c\u5b58\u653e\u6a21\u578b\u63a8\u6f14\u7684\u7ed3\u679c\u3002 \u5728SGS_IPU_SDK \u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK source cfg_env.sh","title":"5.1. Simulator\u7b80\u4ecb"},{"location":"module/User_Guide/IPU260/Simulate.html#52-simulator","text":"","title":"5.2 Simulator\u5de5\u5177\u4f7f\u7528\u8bf4\u660e"},{"location":"module/User_Guide/IPU260/Simulate.html#521-simulator","text":"\u8fdb\u5165\u5230\u8be5\u5de5\u5177\u76ee\u5f55\uff0c\u5de5\u5177\u4f7f\u7528\u793a\u4f8b\uff1a (1) \u6d4b\u8bd5ILSVRC\u6570\u636e\u96c6\uff0c\u5e76\u8fd4\u56de\u6a21\u578b\u7cbe\u5ea6\u7ed3\u679c\uff1a python3 simulator.py \\ -i ~/SGS_Models/resource/classify/ilsvrc2012_val_set100/ \\ -m ~/SGS_Models/tensorflow/mobilenet_v2/mobilenet_v2_float.sim \\ -l ~/SGS_Models/resource/classify/tensorflow_labels.txt \\ -c Classification \\ -t Float \\ -n mobilenet_v2 \\ --num_process 20 \u6216\u8005\u53ef\u4ee5\u4f7f\u7528\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\uff1a python3 simulator.py \\ -i ~/SGS_Models/resource/classify/ilsvrc2012_val_set100/file.list \\ -m ~/SGS_Models/tensorflow/mobilenet_v2/mobilenet_v2_float.sim \\ -l ~/SGS_Models/resource/classify/tensorflow_labels.txt \\ -c Classification \\ -t Float \\ -n mobilenet_v2 \\ --num_process 20 (2) \u6d4b\u8bd5COCO2017\u6570\u636e\u96c6\uff0c\u5e76\u8fd4\u56de\u6a21\u578b\u68c0\u6d4b\u7ed3\u679c\uff1a python3 simulator.py \\ -i ~/SGS_Models/resource/detection/coco2017_val_set100 \\ -m ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1_float.sim \\ -l ~/SGS_Models/resource/detection/coco2017_val_set100.json \\ -c Detection \\ -t Float \\ -n ssd_mobilenet_v1 \\ --num_process 10 \u6216\u8005\u53ef\u4ee5\u4f7f\u7528\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\uff1a python3 simulator.py \\ -i ~/SGS_Models/resource/detection/coco2017_val_set100/file.list \\ -m ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1_float.sim \\ -l ~/SGS_Models/resource/detection/coco2017_val_set100.json \\ -c Detection \\ -t Float \\ -n ssd_mobilenet_v1 \\ --num_process 10 (3) \u6d4b\u8bd5\u5355\u5f20\u56fe\u7247\uff0c\u5e76\u5c06\u68c0\u6d4b\u7ed3\u679c\u7ed8\u5236\u5728\u56fe\u7247\u4e0a\uff0c\u4fdd\u5b58\u5230 ./results/ \u6587\u4ef6\u5939\u4e0b\uff1a python3 simulator.py \\ -i ~/SGS_Models/resource/detection/coco2017_val_set100/000000567877.jpg \\ -m ~/SGS_Models/tensorflow/ssd_mobilenet_v1/ssd_mobilenet_v1_float.sim \\ -c Detection \\ -t Float \\ -n ssd_mobilenet_v1 \\ --draw_result ./results","title":"5.2.1 Simulator\u5de5\u5177\u4f7f\u7528\u793a\u4f8b"},{"location":"module/User_Guide/IPU260/Simulate.html#522-simulator","text":"(1) \u5fc5\u9009\u53c2\u6570 \u2460 -i , --image : \u56fe\u7247\u6587\u4ef6 / \u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84 / \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u3002 \u4f7f\u7528\u987b\u77e5 \u4e0d\u52a0\u53ef\u9009\u53c2\u6570 -n/--preprocess \u65f6\uff0c -i/--image \u4e0d\u80fd\u7ed9\u56fe\u7247\u6216\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\u3002 -i/--image \u53c2\u6570\u4f20\u5165 \u6307\u5b9a\u56fe\u7247\u8def\u5f84\u5217\u8868\u6587\u4ef6 \u7684\u5f62\u5f0f\u65f6\uff1a \u7f51\u7edc\u6a21\u578b\u4e3a\u5355\u8f93\u5165\u65f6\uff1a~/SGS_IPU_SDK/image_test/2007000364.jpg \u7f51\u7edc\u6a21\u578b\u4e3a\u591a\u8f93\u5165\u65f6\uff1a /SGS_IPU_SDK/image_test/2007000364.jpg, /SGS_IPU_SDK/image_test/ILSVRC2012_test_00000002.bmp \u5f53 -i/--image \u7684\u53c2\u6570\u4e3a\u5355\u5f20\u56fe\u7247\u7684\u8def\u5f84\u65f6\uff0csimulator\u53ea\u5bf9\u8be5\u56fe\u7247\u63a8\u6f14\uff1b \u5f53 -i/--image \u7684\u53c2\u6570\u4e3a\u56fe\u7247\u6587\u4ef6\u5939\u7684\u8def\u5f84\u65f6\uff0csimulator\u4f1a\u5bf9\u6587\u4ef6\u5939\u5185\u7684\u56fe\u7247\u5168\u90e8\u63a8\u6f14\uff0c\u6b64\u65f6\u589e\u52a0\u53ef\u9009\u53c2\u6570--num_process\uff08\u53c2\u6570 > 1\uff09\uff0c\u53ef\u4ee5\u5f00\u542f\u591a\u8fdb\u7a0b\u63a8\u6f14\u3002 \u2461 -m , --model : \u7f51\u7edc\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 \u2462 -c , --category : \u6a21\u578b\u7684\u7c7b\u522b\uff0c\u4e3b\u8981\u6709Classification / Detection / Unknown\u3002 \u4f7f\u7528\u987b\u77e5 Classification : \u6a21\u578b\u67091\u4e2a\u8f93\u51fa\uff0c\u4f1a\u6839\u636e\u8f93\u51fa\u6392\u5e8f\u8f93\u51fa\u5206\u6570\u7531\u9ad8\u81f3\u4f4e\u7684\u524d5\u4e2a\u3002 Detection : \u6a21\u578b\u67094\u4e2a\u8f93\u51fa\uff0c\u4f1a\u6839\u636e\u8f93\u51fa\u8f6c\u6362\u4e3a\u8f93\u5165\u56fe\u7247\u7684bbox\u4f4d\u7f6e\u4ee5\u53ca\u7c7b\u522b\u3002\u53ea\u652f\u6301SigmaStar\u540e\u5904\u7406\u7b97\u5b50 [SigmaStar\u540e\u5904\u7406\u6a21\u5757]\u3002\u5176\u4ed6\u540e\u5904\u7406\u8bf7\u4f7f\u7528Unknown\u3002 Unknown : \u6a21\u578b\u8f93\u51fa\u4e0d\u5c5e\u4e8e\u4e0a\u8ff0\u4e24\u79cd\u7c7b\u578b\uff0c\u4f1a\u8f93\u51fa\u5168\u90e8\u7684Tensor\u6570\u503c\u3002 -c/--category \u7684\u53c2\u6570\u9009\u62e9Unknown\u65f6\uff0c\u5f53input_config.ini\u4e2d[OUTPUT_CONFIG]\u7684dequantizations\u4e3a'TRUE'\u65f6\uff0c\u4f1a\u5728\u8f6c\u6362Fixed\u6a21\u578b\u65f6\u5728\u589e\u52a0Fix2float\u7b97\u5b50\uff0c\u8be5\u7b97\u5b50\u4f1a\u8f6c\u6362\u5b9a\u70b9\u6570\u636e\u5230\u6d6e\u70b9\u6570\u636e\uff0c\u5b9a\u70b9\u548c\u79bb\u7ebf\u6a21\u578b\u7684\u8f93\u51faTensor\u7ef4\u5ea6\u4e0e\u6a21\u578b\u7ef4\u5ea6\u76f8\u540c \u2463 -t , --type : \u6a21\u578b\u7684\u6570\u636e\u7c7b\u578b\u3002 \u4f7f\u7528\u987b\u77e5 Float : \u6d6e\u70b9\u6a21\u578b\u3002 Fixed : \u5b9a\u70b9\u5728\u7ebf\u6a21\u578b\u3002 Offline : \u5b9a\u70b9\u79bb\u7ebf\u6a21\u578b\u3002 (2) \u53ef\u9009\u53c2\u6570 \u2460 -l , --label : \u6570\u636e\u96c6\u7684\u6807\u7b7e\u6587\u4ef6\u8def\u5f84 / \u56fe\u7247\u6587\u5b57\u63cf\u8ff0\u7684\u6807\u7b7e\u3002 \u4f7f\u7528\u987b\u77e5 \u5f53 -l/--label \u7684\u53c2\u6570\u4e3a\u6570\u636e\u96c6\u6807\u7b7e\u6587\u4ef6\u8def\u5f84\u65f6\u5fc5\u987b\u4f7f\u7528\u53ef\u9009\u53c2\u6570--num_process\uff0c\u6570\u636e\u96c6\u9a8c\u8bc1\u652f\u6301ImageNet\uff08Top1\u3001Top5\uff09\u3001COCO\u76ee\u6807\u68c0\u6d4b(mmAP)\uff1b \u5f53 -l/--label \u53c2\u6570\u4e3a\u56fe\u7247\u6587\u5b57\u63cf\u8ff0\u6807\u7b7e\u65f6\uff0c\u4e0d\u80fd\u4f7f\u7528\u9009\u9879--num_process\u3002 \u2461 -n , --preprocess : \u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u8be6\u89c1 Calibrator:\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5 \u3002 \u4f7f\u7528\u987b\u77e5 \u4e0d\u52a0 -n/--preprocess \u53c2\u6570\u65f6\uff0c -i/--image \u4e0d\u80fd\u7ed9\u56fe\u7247\u6216\u56fe\u7247\u6587\u4ef6\u5939\u8def\u5f84\u3002\u4e0d\u52a0\u8be5\u53c2\u6570\uff0c\u56fe\u7247\u53c2\u6570\u9700\u8981\u7ed9\u539f\u59cb\u6570\u636e\uff0c\u53ef\u91c7\u7528 --save_input \u4fdd\u5b58\u56fe\u7247\u6570\u636e\u540e\uff0c\u6839\u636e\u8be5\u683c\u5f0f\u5236\u5b9a\u5176\u4ed6\u7684\u539f\u59cb\u6570\u636e\u3002 \u4e5f\u53ef\u4ee5\u5b8c\u6210\u524d\u5904\u7406\u6587\u4ef6\u914d\u7f6e\u540e\uff0c\u7ed9\u5b9a\u524d\u5904\u7406\u6587\u4ef6\u8def\u5f84\u3002 \u82e5\u6a21\u578b\u4e3a \u591a\u8f93\u5165 \u65f6\uff0c -n,--preprocess \u53c2\u6570\u7528\u6cd5\u9700\u8981\u591a\u4e2a\u524d\u5904\u7406\u65b9\u6cd5\uff0c\u4f8b\u5982 -n preprocess1.py,preprocess2.py \u6216\u8005 --preprocess preprocess1.py,preprocess2.py \u2462 --tool : sgs_simulator\u6587\u4ef6\u8def\u5f84\u3002 \u4f7f\u7528\u987b\u77e5 simulator\u5de5\u5177\u4f1a\u5bfb\u627e\u7cfb\u7edf\u53d8\u91cf\u4ece\u800c\u83b7\u5f97\u5bf9\u5e94\u9636\u6bb5\u4efb\u52a1\u6240\u9700\u5de5\u5177\u8def\u5f84\uff0c\u56e0\u6b64\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u53c2\u6570-t/--tool\u4e0d\u7528\u6307\u5b9a\u76f8\u5173\u5de5\u5177\u7684\u4f4d\u7f6e\u3002 \u2463 --skip_garbage : Fixed\u548cOffline\u6a21\u578b\u8f93\u51fa\u7ed3\u679c\u8df3\u8fc7\u65e0\u7528\u6570\u636e\u3002 \u2464 --dump_rawdata : \u4fdd\u5b58Fixed\u548cOffline\u6a21\u578b\u8f93\u5165\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u6587\u4ef6\u540d\u4e3a\u56fe\u7247\u540d + .bin\uff0c\u4fdd\u5b58\u5728\u5f53\u524d\u8def\u5f84\u3002 \u2465 --num_process : \u8fdb\u7a0b\u6570\uff0c\u540c\u65f6\u8fd0\u884c\u7684\u8fdb\u7a0b\u6570\u3002 \u4f7f\u7528\u987b\u77e5 \u4e0d\u52a0\u8be5\u53c2\u6570\u9ed8\u8ba4\u4e3a\u5355\u7ebf\u7a0b\u3002 \u9a8c\u8bc1\u6570\u636e\u96c6\u5fc5\u987b\u52a0\u6b64\u53c2\u6570\u4e14\u8fdb\u7a0b\u6570 > 1\u3002 \u2466 --draw_result : \u7ed8\u5236\u76ee\u6807\u68c0\u6d4b\u7f51\u7edc\u9009\u6846\u7ed3\u679c\u3002 \u4f7f\u7528\u987b\u77e5 \u53c2\u6570\u4e3a\u7ed3\u679c\u4fdd\u5b58\u6587\u4ef6\u5939\u8def\u5f84\uff08\u6587\u4ef6\u5939\u4e0d\u5b58\u5728\u4f1a\u81ea\u52a8\u521b\u5efa\uff09\u548c\u753b\u6846\u7684\u9608\u503c\uff0c\u4f7f\u7528\u9017\u53f7( , )\u5206\u9694\u4fdd\u5b58\u8def\u5f84\u4e0e\u9608\u503c\u3002 \u8f93\u5165\u9608\u503c\u753b\u51fa\u5927\u4e8e\u9608\u503c\u7684\u68c0\u6d4b\u7ed3\u679c\uff0c\u4e0d\u8f93\u5165\u9608\u503c\u5219\u753b\u51fa\u5168\u90e8\u68c0\u6d4b\u7ed3\u679c\u3002 \u2467 --continue_run : \u63a5\u7740\u4e0a\u6b21\u6570\u636e\u96c6\u5269\u4e0b\u7684\u90e8\u5206\u8fd0\u884c\u3002 \u2468 --save_input : \u4fdd\u5b58simulator \u524d\u5904\u7406\u540e\u7684\u6587\u4ef6\uff0c\u9ed8\u8ba4\u4e0d\u4fdd\u5b58\u3002\u6587\u4ef6\u4e3a\u6587\u672c\u6587\u4ef6\uff0c\u4f1a\u5728\u8fd0\u884c\u8def\u5f84\u4e0b\u521b\u5efa\u6587\u4ef6\u5939tmp_image\uff0c\u6587\u4ef6\u4fdd\u5b58\u5728 ./tmp_image/imagename \u56fe\u7247\u540d\u3002","title":"5.2.2   Simulator\u5de5\u5177\u4f7f\u7528\u53c2\u6570\u8bf4\u660e"},{"location":"module/User_Guide/IPU260/Simulate.html#52-calibrator_customsimulator","text":"(1) calibrator_custom.simulator\u662f\u57fa\u4e8ePython\u7684\u5feb\u901f\u91cf\u5316\u548c\u8f6c\u6362\u6a21\u578b\u7684\u6a21\u5757\u3002 (2) \u7528calibrator_custom.simulator\u53ef\u4ee5\u66f4\u65b9\u4fbf\u7075\u6d3b\u7684\u5bf9\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u8fdb\u884c\u91cf\u5316\u548c\u8f6c\u6362\u3002 (3) calibrator_custom.simulator\u5305\u542b3\u79cd\uff0c\u7528\u4e8e\u89e3\u6790\u4e0d\u540c\u9636\u6bb5\u7684\u6a21\u578b\u3002 \u2460 calibrator_custom.float_simulator \u7528\u4e8e\u89e3\u6790float\u6a21\u578b \u2461 calibrator_custom.fixed_simulator \u7528\u4e8e\u89e3\u6790fixed\u6a21\u578b \u2462 calibrator_custom.offline_simulator \u7528\u4e8e\u89e3\u6790offline\u6a21\u578b","title":"5.2. calibrator_custom.simulator\u7b80\u4ecb"},{"location":"module/User_Guide/IPU260/Simulate.html#53-calibrator_customsimulator","text":"","title":"5.3 calibrator_custom.simulator\u5de5\u5177\u4f7f\u7528\u8bf4\u660e"},{"location":"module/User_Guide/IPU260/Simulate.html#531-calibrator_customsimulator","text":"\u4e0b\u9762\u57fa\u4e8ecalibrator_custom.float_simulator\uff0c\u8bf4\u660e\u4f7f\u7528\u65b9\u6cd5\u548c\u76f8\u5173API\u63a5\u53e3\uff1a import calibrator_custom model_path = './mobilenet_v2_float.sim' model = calibrator_custom . float_simulator ( model_path ) \u4f7f\u7528\u987b\u77e5 \u4f7f\u7528calibrator_custom.float_simulator\u65f6\uff0c\u9700\u8981\u7ed9\u5b9afloat.sim\u6a21\u578b\u7684\u8def\u5f84\uff0c\u7528\u4e8e\u521b\u5efafloat_simulator\u7684\u5b9e\u4f8b\u3002\u53c2\u6570\u7ed9\u5b9a\u9519\u8bef\uff0c\u5c06\u65e0\u6cd5\u6210\u529f\u521b\u5efafloat_simulator\u5b9e\u4f8b\uff0c\u5e76\u8fd4\u56deValueError\u3002","title":"5.3.1 calibrator_custom.simulator\u4f7f\u7528\u793a\u4f8b"},{"location":"module/User_Guide/IPU260/Simulate.html#532-calibrator_customsimulator","text":"(1) get_input_details : \u8fd4\u56de\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u4fe1\u606f\uff0c\u4ee5list\u5f62\u5f0f\u8fd4\u56de\u3002 \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578b\u8f93\u5165\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a index : \u8f93\u5165Tensor\u5e8f\u53f7 name : \u8f93\u5165Tensor\u540d\u79f0 shape : \u8f93\u5165Tensor\u7684\u5f62\u72b6 dtype : \u8f93\u5165Tensor\u7684\u6570\u636e\u7c7b\u578b input_formats : \u7f51\u7edc\u6a21\u578b\u5b9e\u9645\u8fd0\u884c\u65f6\u7684\u56fe\u7247\u8f93\u5165\u683c\u5f0f training_input_formats : \u7f51\u7edc\u6a21\u578b\u8bad\u7ec3\u662f\u7684\u56fe\u7247\u8f93\u5165\u683c\u5f0f \u2460 Float\u6a21\u578b\u8fd4\u56de\u5982\u4e0b\uff1a input_details = model . get_input_details () print ( input_details ) [ { 'name' : 'sub_7' , 'shape' : array ([ 1 , 513 , 513 , 3 ], dtype = int32 ), 'dtype' : < class ' numpy . float32 '>, 'index' : 0 } ] \u2461 Fixed\u548cOffline\u6a21\u578b\u8fd4\u56de\u5982\u4e0b\uff1a >>> input_details = model . get_input_details () >>> print ( input_details ) [ { 'index' : 0 , 'shape' : array ([ 1 , 513 , 513 , 3 ]), 'dtype' : < class ' numpy . uint8 '>, 'name' : 'sub_7' , 'input_formats' : 'RGB' , 'training_input_formats' : 'RGB' } ] (2) get_output_detail : \u8fd4\u56de\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u4fe1\u606f\uff0c\u4ee5list\u5f62\u5f0f\u8fd4\u56de\u3002 \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578b\u8f93\u5165\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a index : \u8f93\u51faTensor\u5e8f\u53f7 name : \u8f93\u51faTensor\u540d\u79f0 shape : \u8f93\u51faTensor\u7684\u5f62\u72b6 dtype : \u8f93\u51faTensor\u7684\u6570\u636e\u7c7b\u578b input_formats : \u7f51\u7edc\u6a21\u578b\u5b9e\u9645\u8fd0\u884c\u65f6\u7684\u56fe\u7247\u8f93\u51fa\u683c\u5f0f training_input_formats : \u7f51\u7edc\u6a21\u578b\u8bad\u7ec3\u662f\u7684\u56fe\u7247\u8f93\u51fa\u683c\u5f0f quantization : \u8f93\u51faTensor\u7684scale\u548czero_point\uff08\u9700\u5c06\u6a21\u578b\u8f93\u51faTensor\u4e58scale\u5f97\u5230\u6d6e\u70b9\u6570\uff09\u3002 \u5982\u679cinput_config.ini\u914d\u7f6e dequantizations \u4e3aTRUE\uff0c\u751f\u6210\u7684\u6a21\u578b\u5bf9\u5e94\u8f93\u51fa\u4f1a\u589e\u52a0Fix2Float\u7b97\u5b50\uff0c\u8f93\u51fa\u6570\u636e\u7c7b\u578b\u4e3afloat32\uff0cget_output_details\u4e0d\u518d\u8fd4\u56de quantization \u3002 \u2460 Float\u6a21\u578b\u8fd4\u56de\u5982\u4e0b\uff1a >>> output_details = model . get_output_details () >>> print ( output_details ) [ { 'name' : 'MobilenetV2/Conv/Conv2D' , 'shape' : array ([ 1 , 257 , 257 , 30 ], dtype = int32 ), 'dtype' : < class ' numpy . float32 '>, 'index' : 0 } ] \u2461 Fixed\u548cOffline\u6a21\u578b\u8fd4\u56de\u5982\u4e0b\uff1a >>> output_details = model . get_output_details () >>> print ( output_details ) [ { 'index' : 0 , 'shape' : array ([ 1 , 257 , 257 , 30 ]), 'name' : 'MobilenetV2/Conv/Conv2D' , 'dtype' : < class ' numpy . int16 '>, 'quantization' : ( 0.00013832777040079236 , 0 ) } ] (3) set_input : \u8bbe\u7f6e\u7f51\u7edc\u6a21\u578b\u8f93\u5165\u6570\u636e >>> model . set_input ( 0 , img_data ) \u4f7f\u7528\u987b\u77e5 0\u4e3a\u8f93\u5165Tensor\u7684index\uff1b \u8f93\u5165\u6570\u636e\u53ef\u4ee5\u5728get_input_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230\uff1b img_data\u662f\u4e0emodel\u8f93\u5165shape\u548cdtype\u76f8\u540c\u7684numpy.ndarray\u683c\u5f0f\u6570\u636e\uff0c\u9519\u8bef\u7684shape\u6216dtype\uff0c\u5c06\u5bfc\u81f4set_input\u8fd4\u56deValueError\uff1b \u5982\u679c\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u53ef\u4ee5\u591a\u6b21\u8c03\u7528set_input\uff0c\u6839\u636eget_input_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230index\u8bbe\u7f6e\u5bf9\u5e94Tensor\u7684\u8f93\u5165\u6570\u636e\u3002 (4) invoke : \u6a21\u578b\u8fd0\u884c\u4e00\u6b21 >>> model . invoke () \u4f7f\u7528\u987b\u77e5 \u8c03\u7528invoke\u524d\u8bf7\u5148\u4f7f\u7528set_input\u8bbe\u7f6e\u8f93\u5165\u6570\u636e\uff0c\u672a\u8c03\u7528set_input\u76f4\u63a5\u8c03\u7528invoke\u4f1a\u8fd4\u56deValueError\u3002 (5) get_output : \u83b7\u53d6\u7f51\u7edc\u6a21\u578b\u8f93\u51fa\u6570\u636e >>> result = model . get_output ( 0 ) \u4f7f\u7528\u987b\u77e5 0\u4e3a\u8f93\u51faTensor\u7684index; \u8f93\u51fa\u6570\u636e\u53ef\u4ee5\u5728get_output_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230\uff0c\u8fd4\u56denumpy.ndarray\u683c\u5f0f\u8f93\u51fa\u6570\u636e\u3002 \u5982\u679c\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u51fa\uff0c\u53ef\u4ee5\u591a\u6b21\u8c03\u7528get_output\uff0c\u6839\u636eget_output_details()\u7684\u8fd4\u56de\u503c\u91cc\u62ff\u5230index\u83b7\u53d6\u5bf9\u5e94Tensor\u7684\u8f93\u51fa\u6570\u636e\u3002 \u5047\u8bbe\u6a21\u578b\u8f93\u51fa\u7684shape\u4e3a[1, 257, 257, 30],Float\u6a21\u578b\u67e5\u770b\u7ed3\u679c\u7684shape: >>> print ( result . shape ) ( 1 , 257 , 257 , 30 ) (6) get_tensor_details : \u8fd4\u56de\u7f51\u7edc\u6a21\u578b\u6bcf\u4e2aTensor\u7684\u4fe1\u606f\uff08list\uff09 \u2460 Float\u6a21\u578b\u8fd4\u56de\u5982\u4e0b\uff1a \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578bTensor\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a name : Tensor\u540d\u79f0 shape : Tensor\u7684\u5f62\u72b6 dtype : Tensor\u7684\u6570\u636e\u7c7b\u578b qtype : \u5b9a\u70b9\u6a21\u578b\u8be5Tensor\u53ef\u80fd\u7684\u6570\u636e\u7c7b\u578b\uff08quantization type\uff09 >>> tensor_details = model . get_tensor_details () >>> print ( tensor_details ) [ { 'name' : 'MobilenetV2/Conv/Conv2D' , 'shape' : array ([ 1 , 257 , 257 , 30 ], dtype = int32 ), 'dtype' : 'FLOAT32' , 'qtype' : 'INT16' }, { 'name' : 'MobilenetV2/Conv/Conv2D_bias' , 'shape' : array ( [ 2 , 30 ], dtype = int32 ), 'dtype' : 'FLOAT32' , 'qtype' : 'INT16' }, { 'name' : 'MobilenetV2/Conv/weights/read' , 'shape' : array ( [ 30 , 3 , 3 , 3 ], dtype = int32 ), 'dtype' : 'FLOAT32' , 'qtype' : 'INT8' }, { 'name' : 'sub_7' , 'shape' : array ([ 1 , 513 , 513 , 3 ], dtype = int32 ), 'dtype' : 'FLOAT32' , 'qtype' : 'UINT8' } ] \u2461 Fixed\u548cOffline\u6a21\u578b\u5982\u679cinput_config.ini\u4e2d[OUTPUT_CONFIG]\u7684dequantizations\u914d\u7f6e\u4e3aFALSE\u65f6\u8fd4\u56de\u5982\u4e0b\uff1a \u8fd4\u56de\u7684list\u4e2d\u6839\u636e\u6a21\u578bTensor\u4e2a\u6570\u5305\u542b\u4ee5\u4e0bdict\u4fe1\u606f\uff1a name : Tensor\u540d\u79f0 shape : Tensor\u7684\u5f62\u72b6 dtype : Tensor\u7684\u6570\u636e\u7c7b\u578b quantization : Tensor\u7684scale\u548czero_point min : Tensor\u7684\u6700\u5c0f\u503c max : Tensor\u7684\u6700\u5927\u503c >>> tensor_details = model . get_tensor_details () >>> print ( tensor_details ) [ { 'shape' : array ([ 1 , 257 , 257 , 30 ]), 'quantization' : [( 0.00013832777040079236 , 0 )], 'min' : [ - 4.230099201202393 ], 'max' : [ 4.532586097717285 ], 'name' : 'MobilenetV2/Conv/Conv2D' , 'dtype' : 'INT16' }, { 'shape' : array ([ 2 , 30 ]), 'quantization' : [], 'min' : [ 0.0 ], 'max ' : [ 1.0 ], 'name' : 'MobilenetV2/Conv/Conv2D_bias' , 'dtype' : 'INT16' }, { 'shape' : array ([ 30 , 3 , 3 , 3 ]), 'quantization' : [( 0.004813921172171831 , 0 )], 'min' : [ - 0.5498989820480347 ], 'max' : [ 0.6113680005073547 ], 'name' : 'MobilenetV2/Conv/weights/read' , 'dtype' : 'INT8' }, { 'shape' : array ([ 1 , 513 , 513 , 3 ]), 'quantization' : [( 0.007843137718737125 , 128 )], 'min' : [ - 1 . 0 ], 'max' : [ 1.0 ], 'name' : 'sub_7' , 'dtype' : 'UINT8' } ] \u4f7f\u7528\u987b\u77e5 \u914d\u7f6einput_config.ini\u4e2d[OUTPUT_CONFIG]\u7684dequantizations\u4e3aTRUE\u65f6\uff0c\u4f1a\u5728\u8f6c\u6362Fixed\u6a21\u578b\u65f6\u5728\u589e\u52a0Fix2float\u7b97\u5b50\uff0c\u8be5\u7b97\u5b50\u4f1a\u8f6c\u6362\u5b9a\u70b9\u6570\u636e\u5230\u6d6e\u70b9\u6570\u636e\uff0c\u56e0\u6b64model.get_tensor_details()\u5c06\u4e0d\u518d\u6709'quantization'\u4fe1\u606f\u3002","title":"5.3.2   calibrator_custom.simulator\u65b9\u6cd5"},{"location":"module/User_Guide/IPU260/Simulate.html#533-calibrator_customsim_simulator","text":"(1) calibrator_custom.SIM_Simulator\u7b80\u4ecb \u5bf9\u4e8e\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u540c\u65f6\u8f6c\u6362\u65f6\uff0c\u63d0\u4f9bcalibrator_custom.SIM_Simulator\uff0c\u65b9\u4fbf\u8fdb\u884c\u7b80\u5355\u5b9a\u4e49\u540e\uff0c\u7edf\u4e00\u8fd0\u884c\u3002calibrator_custom.SIM_Simulator\u662f\u5df2\u7ecf\u5b9e\u73b0\u597d\u7684class\uff0c\u5f53\u4e2d\u53ea\u6709forward\u65b9\u6cd5\u672a\u5b9e\u73b0\uff0c\u4f7f\u7528\u65f6\u4ec5\u9700\u5b9e\u73b0\u8be5\u65b9\u6cd5\uff0c\u5373\u53ef\u8f6c\u6362\u5b8c\u6210\u3002 (2) calibrator_custom.SIM_Simulator\u4f7f\u7528\u65b9\u6cd5 \u4e0b\u9762\u4ee5 SGS_IPU_SDK/Scripts/examples/sim_simulator.py \u4e3a\u4f8b\uff0c\u8bf4\u660ecalibrator_custom.SIM_Simulator\u7684\u4f7f\u7528\u65b9\u6cd5\uff1a \u2460 \u5b9a\u4e49forward\u65b9\u6cd5\uff1a import calibrator_custom class Net ( calibrator_custom . SIM_Simulator ): def __init__ ( self ): super () . __init__ () self . model = calibrator_custom . fixed_simulator ( model_path ) def forward ( self , x ): out_details = self . model . get_output_details () self . model . set_input ( 0 , x ) self . model . invoke () result_list = [] for idx in range ( len ( out_details )): result = self . model . get_output ( idx ) # for Fixed and Offline model if out_details [ idx ][ 'dtype' ] == np . int16 : scale , _ = out_details [ idx ][ 'quantization' ] result = np . dot ( result , scale ) result_list . append ( result ) return result_list \u4f7f\u7528\u987b\u77e5 forward\u7684\u53c2\u6570\u4e3a\u6a21\u578b\u8f93\u5165\uff0c\u5982\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u53ef\u589e\u52a0forward\u7684\u53c2\u6570\u3002 \u2461 \u521b\u5efacalibrator_custom.SIM_Simulator\u7684\u5b9e\u4f8b net = Net () \u2462 \u8c03\u7528calibrator_custom.SIM_Simulator\u5b9e\u4f8b\u7684\u65b9\u6cd5 result = net ( img_gen , num_process = 4 ) \u4f7f\u7528\u987b\u77e5 \u8c03\u7528calibrator_custom.SIM_Simulator\u5b9e\u4f8b\uff0c\u9700\u8981\u7ed9\u5b9a\u8f93\u5165\u56fe\u7247\u7684numpy.ndarray\u6216\u8005\u56fe\u7247\u751f\u6210\u5668\u3002 \u5f53num_process\u5927\u4e8e1\u65f6\uff0cimg_gen\u5fc5\u987b\u4e3a\u56fe\u7247\u751f\u6210\u5668\u3002 \u56fe\u7247\u751f\u6210\u5668(img_gen): \u4e3a\u65b9\u4fbf\u591a\u8f93\u5165\u3001\u591a\u6bb5\u7f51\u7edc\u8f6c\u6362\u6a21\u578b\uff0c\u901a\u8fc7\u751f\u6210\u5668\u65b9\u4fbf\u7ec4\u7ec7\u8f93\u5165\u56fe\u7247\u7684\u5e8f\u5217\u3002\u5982\u6a21\u578b\u6709\u591a\u4e2a\u8f93\u5165\uff0c\u751f\u6210\u5668\u5e94\u8be5\u6309\u7167\u5b9a\u4e49forward\u65f6\u7684\u8f93\u5165\u987a\u5e8f\uff0c\u8fd4\u56de\u6709\u591a\u4e2anumpy.ndarray\u7684list\u3002 calibrator_custom.utils.image_preprocess_func\u4f7f\u7528\u9884\u5148\u5b9a\u4e49\u597d\u7684\u524d\u5904\u7406\u65b9\u6cd5,\u83b7\u53d6img_gen\u3002 preprocess_func = calibrator_custom . utils . image_preprocess_func ( model_name ) def image_generator ( folder_path , preprocess_func , norm ): images = [ os . path . join ( folder_path , img ) for img in os . listdir ( folder_path )] for image in images : img = preprocess_func ( image , norm ) yield [ img ] img_gen = image_generator ( './images' , preprocess_func , False )","title":"5.3.3   calibrator_custom.SIM_Simulator"},{"location":"module/User_Guide/IPU260/Special_Model_Conversion.html","text":"\u7279\u6b8a\u6a21\u578b \u7070\u5ea6\u6a21\u578b \u8f93\u5165\u662f\u5355\u901a\u9053\u56fe\u7247\u7684\u6a21\u578b\uff0c\u5373\u8f93\u5165C\u7ef4\u5ea6\u4e0a\u4e3a1\u7684\u6a21\u578b \u975e\u56fe\u7247\u6570\u636e\u8f93\u5165\u7684\u7f51\u7edc\u6a21\u578b input_config.ini\u4e2d\u4f7f\u7528RAWDATA_F32_NHWC\u6216RAWDATA_S16_NHWC\u914d\u7f6e\u7684\u6a21\u578b \u5206\u6bb5\u6a21\u578b \u7f51\u7edc\u4e2d\u6709\u4e0d\u652f\u6301\u7684Layer\uff0c\u53ef\u5c06\u5b8c\u6574\u7f51\u7edc\u5206\u6bb5\u6267\u884c\uff0c\u5982FasterRCNN \u591a\u8f93\u5165\u6a21\u578b 1. \u7070\u5ea6\u6a21\u578b \u00b6 \u7070\u5ea6\u6a21\u578b\uff0c\u6307\u8f93\u5165\u662f\u5355\u901a\u9053\u56fe\u7247\u7684\u6a21\u578b\uff0c\u5373\u8f93\u5165C\u7ef4\u5ea6\u4e0a\u4e3a1\u7684\u6a21\u578b\u3002 \u7070\u5ea6\u6a21\u578b\u7684\u7f51\u7edc\u8f6c\u6362\uff1a\u9700\u6ce8\u610finput_config\u914d\u7f6e \u7070\u5ea6\u6a21\u578b\u7684\u7f51\u7edc\u9a8c\u8bc1: \u9700\u6ce8\u610f\u524d\u5904\u7406 1.1. \u7070\u5ea6\u6a21\u578binput_config\u914d\u7f6e\u4fe1\u606f\u8981\u70b9 \u00b6 \u8f6c\u6362\u7070\u5ea6\u6a21\u578b\u65f6\u9700\u6ce8\u610finput_config\u914d\u7f6e\u4fe1\u606f\u4e2d\u5982\u4e0b\u8981\u70b9\uff1a(input_config.ini\u6587\u4ef6\u8be6\u7ec6\u8bf4\u660e\u8bf7\u53c2\u8003 Convert: input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e ) Note input_config.ini\u6587\u4ef6\u4e2d training_input_formats \u4e3aGRAY\uff0c input_formats \u53ef\u4ee5\u4e3aGRAY,\u4e5f\u53ef\u4ee5\u4e3aYUV_NV12\u3002 input_formats \u4e3aGRAY\u65f6\uff1a [INPUT_CONFIG] ...... training_input_formats = GRAY; input_formats = GRAY; ...... \u5b9e\u9645\u7ed9Fixed\u6216Offline\u6a21\u578b\u7684\u6570\u636e\u4e3a\u7070\u5ea6\u56fe\u7247\uff0c\u6b64\u65f6\u5bf9\u5e94\u7684 input_width_alignment \u548c input_height_alignment \u9ed8\u8ba4\u4e3a1\uff0c\u5982\u4e0d\u8bbe\u5b9a input_width_alignment \u548c input_height_alignment \uff0c\u5b9e\u9645\u8f93\u5165\u4e0e\u6a21\u578b\u8f93\u5165\u5f62\u72b6\u76f8\u540c\u3002 input_formats \u4e3aYUV_NV12\u65f6\uff1a [INPUT_CONFIG] ...... training_input_formats = GRAY; input_formats = YUV_NV12; ...... \u5b9e\u9645\u7ed9Fixed\u6216Offline\u6a21\u578b\u7684\u6570\u636e\u4e3aYUV_NV12\u6570\u636e\uff0c\u6b64\u65f6\u5bf9\u5e94\u7684 input_width_alignment \u548c input_height_alignment \u9ed8\u8ba4\u4e3a2\u3002 input_config.ini\u6587\u4ef6\u4e2d\u4ec5\u9700\u8bbe\u7f6e\u5355\u901a\u9053\u7684mean\u503c [INPUT_CONFIG] ...... mean = 33.318; std_value = 1.0; 1.2. \u7070\u5ea6\u56fe\u7247\u8f93\u5165\u6a21\u578b\u524d\u5904\u7406\u65b9\u6cd5 \u00b6 \u7070\u5ea6\u56fe\u7247\u8f93\u5165\u7684\u524d\u5904\u7406\u65b9\u6cd5\u4e0e Calibrator: \u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5 \u8981\u6c42\u76f8\u540c\uff0c\u524d\u5904\u7406\u65b9\u6cd5\u793a\u4f8b\u8bf7\u53c2\u8003 \u524d\u5904\u7406\u548c\u914d\u7f6e\u6587\u4ef6\u6ce8\u610f\u8981\u70b9 Note \u7070\u5ea6\u56fe\u7247\u8f93\u5165\u6a21\u578b\u5728PC\u4e0a\u8fd0\u884c\u4e0e\u5f00\u53d1\u677f\u6839\u636e input_formats \u7684\u914d\u7f6e\u53ef\u4ee5\u652f\u6301GRAY\u6216YUV_NV12\u56fe\u7247\u8f93\u5165\u6570\u636e\u3002 2. RAWDATA_F32_NHWC\u4e0eRAWDATA_S16_NHWC\u8f93\u5165\u7684\u6a21\u578b \u00b6 RAWDATA_F32_NHWC \u4e0e RAWDATA_S16_NHWC \u53ef\u4ee5\u7528\u4e8e\u5206\u6bb5\u7f51\u7edc\u7684\u540e\u7aef\u7f51\u7edc\u6a21\u578b\u8f93\u5165\uff0c\u6216\u8005\u975e\u56fe\u7247\u6570\u636e\u8f93\u5165\u7684\u7f51\u7edc\u6a21\u578b\u3002 \u975e\u56fe\u7247\u8f93\u5165\u7684\u7f51\u7edc\u8f6c\u6362\uff1a\u9700\u6ce8\u610finput_config\u914d\u7f6e \u975e\u56fe\u7247\u8f93\u5165\u7684\u6a21\u578b\u7f51\u7edc\u9a8c\u8bc1: \u9700\u6ce8\u610f\u524d\u5904\u7406 2.1. \u975e\u56fe\u7247\u8f93\u5165\u6a21\u578binput_config\u914d\u7f6e\u4fe1\u606f\u8981\u70b9 \u00b6 (1) RAWDATA_F32_NHWC \u6a21\u578b \u8f6c\u6362\u975e\u56fe\u7247\u8f93\u5165\u6a21\u578b\u65f6\u9700\u6ce8\u610finput_config\u914d\u7f6e\u4fe1\u606f\u4e2d\u5982\u4e0b\u8981\u70b9\uff1a(input_config.ini\u6587\u4ef6\u8be6\u7ec6\u8bf4\u660e\u8bf7\u53c2\u8003 Convert: input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e ) Note input_formats \u548c training_input_formats \u90fd\u586b\u5199 RAWDATA_S16_NHWC \uff0c quantizations \u914d\u7f6e\u4e3a TRUE \u3002 input_config.ini\u4e2d mean \u548c std_value \u4e0d\u8981\u586b\u5199\u3002 \u6a21\u578b\u5728\u4f7f\u7528calibrator.py\u5de5\u5177\u8f6c\u6362\u4e3a\u5b9a\u70b9\u7f51\u7edc\u65f6\u4f7f\u7528\u6d6e\u70b9\u6570\u636e\uff0c\u56e0\u6b64\u8f6c\u6362\u65b9\u6cd5\u4e0e\u6b63\u5e38\u7f51\u7edc\u76f8\u540c\u3002\u53ef\u4ee5\u53c2\u8003 Calibrator \u7684\u4f7f\u7528\u65b9\u6cd5\u3002 (2) RAWDATA_S16_NHWC \u6a21\u578b \u8f6c\u6362\u975e\u56fe\u7247\u8f93\u5165\u6a21\u578b\u65f6\u9700\u6ce8\u610finput_config\u914d\u7f6e\u4fe1\u606f\u4e2d\u5982\u4e0b\u8981\u70b9\uff1a(input_config.ini\u6587\u4ef6\u8be6\u7ec6\u8bf4\u660e\u8bf7\u53c2\u8003 Convert: input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e ) Note input_formats \u548c training_input_formats \u90fd\u586b\u5199 RAWDATA_F32_NHWC \uff0c quantizations \u914d\u7f6e\u4e3a TRUE \u3002 input_config.ini\u4e2d mean \u548c std_value \u4e0d\u8981\u586b\u5199\u3002 \u6a21\u578b\u5728\u4f7f\u7528calibrator.py\u5de5\u5177\u8f6c\u6362\u4e3a\u5b9a\u70b9\u7f51\u7edc\u65f6\u4f7f\u7528\u6d6e\u70b9\u6570\u636e\uff0c\u56e0\u6b64\u8f6c\u6362\u65b9\u6cd5\u4e0e\u6b63\u5e38\u7f51\u7edc\u76f8\u540c\u3002\u53ef\u4ee5\u53c2\u8003 Calibrator \u7684\u4f7f\u7528\u65b9\u6cd5\u3002 \u4f7f\u7528\u8be5\u79cd\u65b9\u5f0f\u8f93\u5165\u65f6\uff0c\u7531\u4e8e\u786c\u4ef6\u7684\u9650\u5236\u6761\u4ef6\uff0c\u6240\u4ee5\u9700\u8981\u63d0\u524d\u6392\u5217\u597d\u6570\u636e\u540e\u624d\u80fd\u8fdb\u884c\u8ba1\u7b97\u3002 2.2 RAWDATA_F32_NHWC\u6a21\u578b\u63a8\u6f14 \u00b6 (1) \u6a21\u578b\u524d\u5904\u7406\u65b9\u6cd5 \u8bf7\u53c2\u8003 \u524d\u5904\u7406\u548c\u914d\u7f6e\u6587\u4ef6\u6ce8\u610f\u8981\u70b9\uff1atraining_input_formats\u548cinput_formats\u5747\u4e3aRAWDATA_S16_NHWC\u6216\u8005\u5747\u4e3aRAWDATA_F32_NHWC (2) \u677f\u4e0a\u8fd0\u884c\u6ce8\u610f\u4e8b\u9879 \u5728\u677f\u4e0a\u8fd0\u884c RAWDATA_F32_NHWC \u7684\u7f51\u7edc\u65f6\uff0c\u53ef\u4ee5\u53c2\u8003\u5982\u4e0b\u4ee3\u7801\uff1a void FillInputData ( MI_FLOAT * pfData , MI_IPU_TensorVector_t & InputTensorVector , MI_IPU_SubNet_InputOutputDesc_t & desc ) { const MI_U32 H = desc . astMI_InputTensorDescs [ 0 ]. u32TensorShape [ 1 ]; const MI_U32 W = desc . astMI_InputTensorDescs [ 0 ]. u32TensorShape [ 2 ]; const MI_U32 C = desc . astMI_InputTensorDescs [ 0 ]. u32TensorShape [ 3 ]; MI_FLOAT * pTensorData = ( MI_FLOAT * ) InputTensorVector . astArrayTensors [ 0 ]. ptTensorData [ 0 ]; if ( desc . astMI_InputTensorDescs [ 0 ]. eElmFormat == MI_IPU_FORMAT_FP32 ) { memcpy ( pTensorData , pfData , H * W * C * sizeof ( MI_FLOAT )); } } \u5176\u4e2d\uff0c FillInputData\u51fd\u6570\u7684\u8f93\u5165\u5206\u522b\u662f\u6d6e\u70b9\u8f93\u5165\u6570\u636e\u7684\u6570\u7ec4 MI_IPU\u8f93\u5165Tensor\u7ed3\u6784\u4f53\u548cMI_IPU\u7f51\u7edc\u63cf\u8ff0\u7ed3\u6784\u4f53 \u53ea\u6709\u4f7f\u7528 RAWDATA_F32_NHWC \u914d\u7f6e\u7684\u7f51\u7edc\u5728\u677f\u4e0amemcpy\u5b8c\u6570\u636e\u540e\u4e0d\u8981\u8c03\u7528MI_SYS_FlushInvCache\u3002 \u8865\u5145\u8bf4\u660e \u5982\u9700\u4f7f\u7528calibrator_custom.fixed_simulator\uff0c\u9700\u81ea\u884c\u5b9e\u73b0\u5b9a\u70b9\u5316\uff1a \u4f7f\u7528calibrator_custom.fixed_simulator\u65f6\uff0c\u8f93\u5165\u6570\u636e\u7c7b\u578b\u4e3afloat32\u3002 >>> import calibrator_custom >>> model = calibrator_custom . fixed_simulator ( './mobilenet_v2_fixed.sim' ) >>> input_details = model . get_input_details () >>> print ( input_details ) [{ 'shape' : array ([ 1 , 513 , 513 , 3 ]), 'name' : 'sub_7' , 'dtype' : < class ' numpy . float32 '>, ' index ': 0}] calibrator_custom.fixed_simulator\u4e2d\u68c0\u67e5\u4e86\u6a21\u578b\u7684\u8f93\u5165\u683c\u5f0f\uff0c\u8ba1\u7b97\u51fa\u9700\u8981\u8f93\u5165\u7684shape\u4fe1\u606f\u3002 \u5df2\u4f7f\u7528float\u7f51\u7edc\u7684\u524d\u5904\u7406\u5904\u7406\u5b8c\u56fe\u7247\uff0c\u8fd4\u56denumpy.ndarray\u683c\u5f0f\u7684\u53d8\u91cfimg >>> print ( img . shape ) ( 1 , 513 , 513 , 3 ) >>> print ( img . dtype ) float32 \u8f93\u5165\u6a21\u578b\u6570\u636e >>> model . set_input ( input_details [ 0 ][ 'index' ], img ) 2.3. RAWDATA_S16_NHWC\u6a21\u578b\u63a8\u6f14 \u00b6 (1) \u6a21\u578b\u524d\u5904\u7406\u65b9\u6cd5 \u8bf7\u53c2\u8003 \u524d\u5904\u7406\u548c\u914d\u7f6e\u6587\u4ef6\u6ce8\u610f\u8981\u70b9\uff1atraining_input_formats\u548cinput_formats\u5747\u4e3aRAWDATA_S16_NHWC\u6216\u8005\u5747\u4e3aRAWDATA_F32_NHWC simulator.py\u4f1a\u8bfb\u5165\u539f\u6d6e\u70b9\u6570\u636e\uff0c\u8fdb\u884c\u53cd\u91cf\u5316\u540e\u8f93\u5165\u7ed9\u5b9a\u70b9\u6a21\u578b\u3002 (2) \u677f\u4e0a\u8fd0\u884c\u6ce8\u610f\u4e8b\u9879 \u5728\u677f\u4e0a\u8fd0\u884c RAWDATA_S16_NHWC \u7684\u7f51\u7edc\u65f6\uff0c\u4e5f\u9700\u8981\u5b8c\u6210\u8f93\u5165\u6570\u636e\u7684\u5b9a\u70b9\u5316\u8fc7\u7a0b\uff0c\u53ef\u4ee5\u53c2\u8003\u5982\u4e0b\u4ee3\u7801\uff0cFillInputData\u51fd\u6570\u7684\u8f93\u5165\u5206\u522b\u662f\u6d6e\u70b9\u8f93\u5165\u6570\u636e\u7684\u6570\u7ec4\uff0cMI_IPU\u8f93\u5165Tensor\u7ed3\u6784\u4f53\u548cMI_IPU\u7f51\u7edc\u63cf\u8ff0\u7ed3\u6784\u4f53\u3002 #define CLIP3(x, min, max) ((x) < (min) ? (min) : ((x) > (max) ? (max) : (x))) void FillInputData ( MI_FLOAT * pfData , MI_IPU_TensorVector_t & InputTensorVector , MI_IPU_SubNet_InputOutputDesc_t & desc ) { const MI_U32 H = desc . astMI_InputTensorDescs [ 0 ]. u32TensorShape [ 1 ]; const MI_U32 W = desc . astMI_InputTensorDescs [ 0 ]. u32TensorShape [ 2 ]; const MI_U32 C = desc . astMI_InputTensorDescs [ 0 ]. u32TensorShape [ 3 ]; const MI_FLOAT Scale = desc . astMI_InputTensorDescs [ 0 ]. fScalar ; const MI_S64 ZeroPoint = desc . astMI_InputTensorDescs [ 0 ]. s64ZeroPoint ; MI_S16 * pData = ( MI_S16 * ) InputTensorVector . astArrayTensors [ 0 ]. ptTensorData [ 0 ]; for ( MI_U32 i = 0 ; i < H * W * C ; i ++ ) { * ( pData + i ) = ( MI_S16 ) CLIP3 ( pfData [ i ] / Scale + ZeroPoint , -32768 , 32767 ); } MI_SYS_FlushInvCache ( pData , desc . astMI_InputTensorDescs [ 0 ]. s32AlignedBufSize ); } \u5176\u4e2d\uff0c FillInputData\u51fd\u6570\u7684\u8f93\u5165\u5206\u522b\u662f\u6d6e\u70b9\u8f93\u5165\u6570\u636e\u7684\u6570\u7ec4 MI_IPU\u8f93\u5165Tensor\u7ed3\u6784\u4f53\u548cMI_IPU\u7f51\u7edc\u63cf\u8ff0\u7ed3\u6784\u4f53 \u8865\u5145\u8bf4\u660e \u5982\u9700\u4f7f\u7528calibrator_custom.fixed_simulator\uff0c\u9700\u81ea\u884c\u5b9e\u73b0\u5b9a\u70b9\u5316\uff1a \u4f7f\u7528calibrator_custom.fixed_simulator\u65f6\uff0c\u8f93\u5165\u6570\u636e\u7c7b\u578b\u4e3aint16\u3002 >>> import calibrator_custom >>> model = calibrator_custom . fixed_simulator ( './mobilenet_v2_s16_fixed.sim' ) >>> input_details = model . get_input_details () >>> print ( input_details ) [{ 'input_formats' : 'RAWDATA_S16_NHWC' , 'training_input_formats' : 'RAWDATA_S16_NHWC' , 'shape' : array ([ 1 , 513 , 513 , 3 ]), 'name' : 'sub_7' , 'dtype' : < class ' numpy . int16 '>, ' index ': 0, ' quantization ': (3.0518509447574615e-05, 0)}] calibrator_custom.fixed_simulator\u4e2d\u68c0\u67e5\u4e86\u6a21\u578b\u7684\u8f93\u5165\u683c\u5f0f\uff0c\u8ba1\u7b97\u51fa\u9700\u8981\u8f93\u5165\u7684shape\u4fe1\u606f\u3002 \u5df2\u4f7f\u7528float\u7f51\u7edc\u7684\u524d\u5904\u7406\u5904\u7406\u5b8c\u56fe\u7247\uff0c\u8fd4\u56denumpy.ndarray\u683c\u5f0f\u7684\u53d8\u91cfimg >>> print ( img . shape ) ( 1 , 513 , 513 , 3 ) \u5b9a\u70b9\u5316img\u7684\u6570\u636e\uff0c\u5e76\u8f6c\u6362\u6570\u636e\u7c7b\u578b >>> ins , zp = input_details [ 0 ][ 'quantization' ] >>> img = ( img / ins + zp ) . astype ( input_details [ 0 ][ 'dtype' ]) >>> print ( img . dtype ) int16 \u8f93\u5165\u6a21\u578b\u6570\u636e >>> model . set_input ( input_details [ 0 ][ 'index' ], img ) 3. \u5206\u6bb5\u7f51\u7edc\u8f6c\u6362\u8981\u70b9 \u00b6 \u7f51\u7edc\u4e2d\u6709\u4e0d\u652f\u6301\u7684Layer\uff0c\u53ef\u5c06\u5b8c\u6574\u7f51\u7edc\u5206\u6bb5\u6267\u884c\uff1a \u524d\u4e00\u6bb5\u7f51\u7edc\u8fd0\u884c\u5b8c\u6210\u540e\u5c06\u7ed3\u679c\u8f93\u5165\u7ed9\u81ea\u5b9a\u4e49\u5b9e\u73b0\u5c42\uff0c \u518d\u5c06\u81ea\u5b9a\u4e49\u5c42\u7684\u8f93\u51fa\u7ed3\u679c\u4f5c\u4e3a\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u8fd0\u884c\u3002 \u4ee5Faster_RCNN\u7f51\u7edc\u4e3a\u4f8b: Faster_RCNN\u7f51\u7edc\u4e2d\u7684Proposal Layer\u662f\u4e0d\u652f\u6301\u7684\uff0c\u9700\u8981\u5c06\u7f51\u7edc\u4ece\u8be5\u5c42\u5206\u6210\u4e24\u6bb5\u3002 3.1 \u7f51\u7edc\u5207\u5206 \u00b6 \u7f51\u7edc\u5207\u5206\u793a\u610f\u56fe: (1) \u56fe\u4e2d\u7684Python Layer\u662fProposal Layer\uff0c\u901a\u8fc7\u4fee\u6539prototxt\u6587\u4ef6\uff0c\u5c06\u7f51\u7edc\u4eceProposal Layer\u5904\u62c6\u6210\u4e24\u6bb5\u3002 (2) \u7b2c\u4e00\u6bb5\u7f51\u7edc\u5c06\u67093\u4e2a\u8f93\u51fa\uff0c > \u5176\u4e2drpn_cls_prob_reshape\u548crpn_bbox_pred\u4e24\u4e2a\u8f93\u51fa\u7ed3\u679c\u5c06\u4f5c\u4e3aProposal Layer\u7684\u8f93\u5165\uff0c > conv5_3\u548cProposal Layer\u7684\u8f93\u51fa\u5c06\u4f5c\u4e3a\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u3002 (3) \u7b2c\u4e00\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u662f\u56fe\u7247\u6570\u636e\uff0cinput_config.ini\u548c\u524d\u5904\u7406\u6587\u4ef6\u5206\u522b\u6309\u7167 Convert:input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e \u548c Calibrator:\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5 \u5904\u7406\u3002 (4) \u7b2c\u4e8c\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u4e0d\u662f\u56fe\u7247\u6570\u636e\uff0c\u53ef\u4ee5\u5bf9\u4e24\u4e2a\u8f93\u5165\u540c\u65f6\u91c7\u7528RAWDATA_S16_NHWC\u7684\u683c\u5f0f\u914d\u7f6e\u3002\u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u901a\u8fc7ConvertTool.py\u5206\u522b\u5c06\u4e24\u4e2a\u7f51\u7edc\u8f6c\u6362\u6210float.sim\u6a21\u578b\u6587\u4ef6\u3002 \u5177\u4f53\u914d\u7f6e\u6587\u4ef6\u548c\u8f6c\u6362\u547d\u4ee4 \u7b2c\u4e00\u6bb5\u7f51\u7edc\uff1a python3 ~/SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py caffe \\ --model_file test_stageone.prototxt \\ --weight_file VGG16_faster_rcnn_final.caffemodel \\ --input_arrays data \\ --output_arrays rpn_cls_prob_reshape,rpn_bbox_pred,conv5_3 \\ --input_config input_config.ini \\ --output_file faster_rcnn_main_float.sim [INPUT_CONFIG] inputs = data; input_formats = BGR; quantizations = TRUE; mean = 122.7717:115.9465:102.9801; std_value = 1; [OUTPUT_CONFIG] outputs = rpn_cls_prob_reshape,rpn_bbox_pred,conv5_3; dequantizations = TRUE,TRUE,FALSE; \u8bbe\u5b9aconv5_3 \u8fd9\u4e2a\u8f93\u51fa\u7684dequantizations \u4e3aFALSE\uff0c\u7531\u4e8e\u8be5\u8f93\u51fa\u76f4\u63a5\u8f93\u5165\u7b2c\u4e8c\u6bb5\u7f51\u7edc\uff0c\u6240\u4ee5\u5728\u677f\u7aef\u8fd0\u884c\u65f6\u4e0d\u9700\u8981 \u8f6c\u6362\u6210float\uff0c\u53ef\u4ee5\u76f4\u63a5\u5c06\u8be5\u8f93\u51fa\u9001\u8fdb\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u3002 \u7b2c\u4e8c\u6bb5\u7f51\u7edc\uff1a ROIPooling\u7684rois\u8f93\u5165\u7ef4\u5ea6\u4e3a\uff08N\u00d75\uff09\uff0c\u5f53\u540e\u6bb5\u7f51\u7edc\u5168\u90e8\u662fInnerProduct\u65f6\uff0cN\u624d\u53ef\u4ee5\u8bbe\u7f6e\u4e3a300\uff08\u5982\u4e0a\u56fe\u6240\u793a\uff09\uff0c\u5982\u679c\u540e\u6bb5\u7f51\u7edc\u4e2d\u6709\u5377\u79ef\u65f6\uff0cN\u4ec5\u53ef\u4ee5\u8bbe\u7f6e\u4e3a1\uff0c\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u9700\u8981\u5faa\u73af\u6267\u884cN\u6b21\u3002 python3 ~/SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py caffe \\ --model_file second_stage.prototxt \\ --weight_file VGG16_faster_rcnn_final.caffemodel \\ --input_arrays conv5_3,rois \\ --output_arrays cls_prob,bbox_pred \\ --input_config input_config_stage2.ini \\ --output_file faster_rcnn_stage2_float.sim [INPUT_CONFIG] inputs = conv5_3,rois input_formats = RAWDATA_F32_NHWC,RAWDATA_F32_NHWC; quantizations = TRUE,TRUE; [OUTPUT_CONFIG] outputs = cls_prob,bbox_pred; dequantizations = TRUE,TRUE; 3.2 \u8f6c\u6362\u7f51\u7edc \u00b6 \u8def\u5f84 SGS_IPU_SDK/Scripts/examples/caffe_faster_rcnn/faster_rcnn_calibrator.py \u4e0b\u6709Faster_RCNN\u7f51\u7edc\u8f6c\u6362\u5de5\u5177demo\uff0c\u76f4\u63a5\u8fd0\u884c\u5373\u53ef\u5c06\u4e24\u6bb5\u7f51\u7edc\u76f4\u63a5\u8f6c\u6362\u6210fixed\u6a21\u578b\u3002 (1) \u6307\u4ee4 python3 ~/SGS_IPU_SDK/Scripts/examples/caffe_faster_rcnn/faster_rcnn_calibrator.py \\ -i ~/SGS_Models/resource/detection/voc_calibration_set32/ \\ -m0 faster_rcnn_main_float.sim \\ -m1 faster_rcnn_stage2_float.sim \\ --input_config0 input_config.ini \\ --input_config1 input_config_stage2.ini (2) \u8f6c\u6362\u5206\u6bb5\u7f51\u7edc \u9996\u5148\u5b9a\u4e49\u7f51\u7edc\u7684\u4e24\u6bb5\u7f51\u7edc\uff0c\u518d\u7ec4\u7ec7\u4e24\u6bb5\u7f51\u7edc\u7684\u8fd0\u884c\u65b9\u5f0f\uff0c\u5b9a\u4e49\u5728forward\u65b9\u6cd5\u91cc\uff1a class Net ( calibrator_custom . SIM_Calibrator ): def __init__ ( self , main_model_path , main_input_config , second_model_path , second_input_config ): super () . __init__ () self . main_model = calibrator_custom . calibrator ( main_model_path , main_input_config ) self . second_model = calibrator_custom . calibrator ( second_model_path , second_input_config ) self . rpn = rpn . ProposalLayer () def forward ( self , x ): out_details = self . main_model . get_output_details () input_data , im_scale = fill_inputImg2main ( x ) self . main_model . set_input ( 0 , input_data ) self . main_model . invoke () result_list = [] for idx , _ in enumerate ( out_details ): result = self . main_model . get_output ( idx ) result_list . append ( result ) im_info = np . array ([ x . shape [ 0 ], x . shape [ 1 ], im_scale ]) . reshape ( 1 , 3 ) bottom = [ result_list [ 0 ], result_list [ 1 ], im_info ] roi = self . rpn . forward ( bottom ) out2_details = self . second_model . get_output_details () self . second_model . set_input ( 0 , result_list [ 2 ]) self . second_model . set_input ( 1 , roi ) self . second_model . invoke () second_result = [] for idx , _ in enumerate ( out2_details ): result = self . second_model . get_output ( idx ) second_result . append ( result ) return second_result * Faster_RCNN\u7f51\u7edc\u4e2d\uff0c\u4f7f\u7528\u4e86\u81ea\u5b9a\u4e49\u7684rpn\u5c42\uff0c\u56e0\u6b64\u5c06\u7b2c\u4e00\u6bb5\u7f51\u7edc\u7684\u7b2c1\u4e2a\u548c\u7b2c2\u4e2a\u8f93\u51fa\u4ee5\u53ca\u56fe\u7247\u4fe1\u606f\u4f5c\u4e3arpn\u5c42\u7684\u8f93\u5165\uff0c\u7b2c\u4e00\u6bb5\u7f51\u7edc\u7684\u7b2c3\u4e2a\u8f93\u51fa\u548crpn\u5c42\u7684\u8f93\u51faroi\u4f5c\u4e3a\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u3002 \u6700\u540e\u8c03\u7528Net\u7684convert\u65b9\u6cd5\uff0c\u540c\u65f6\u751f\u6210\u4e24\u6bb5\u7f51\u7edc\u7684fixed\u6a21\u578b\u3002 net = Net () net . convert ( img_gen , num_process = num_subsets , fix_model = [ out_main_model , out_second_model ]) 3.3 \u63a8\u6f14\u7f51\u7edc \u00b6 \u8def\u5f84 SGS_IPU_SDK/Scripts/examples/caffe_faster_rcnn/faster_rcnn_simulator.py \u4e0b\u6709Faster_RCNN\u7f51\u7edc\u8fd0\u884c\u5de5\u5177demo\u3002 (1) \u6307\u4ee4 python3 ~/SGS_IPU_SDK/Scripts/examples/caffe_faster_rcnn/faster_rcnn_simulator.py \\ -i ~/SGS_Models/resource/detection/004545.jpg \\ -m0 faster_rcnn_main_float.sim \\ -m1 faster_rcnn_stage2_float.sim \\ -t Float (2) \u8fd0\u884c\u4e24\u6bb5\u6a21\u578b\u7684\u65b9\u6cd5\u4e0e\u8f6c\u6362\u7f51\u7edc\u65f6\u7c7b\u4f3c\u3002 class Net ( calibrator_custom . SIM_Simulator ): def __init__ ( self , main_model_path , second_model_path , phase ): super () . __init__ () if phase == 'Float' : self . main_model = calibrator_custom . float_simulator ( main_model_path ) self . second_model = calibrator_custom . float_simulator ( second_model_path ) self . norm = True elif phase == 'Fixed' : self . main_model = calibrator_custom . fixed_simulator ( main_model_path ) self . second_model = calibrator_custom . fixed_simulator ( second_model_path ) self . norm = False else : self . main_model = calibrator_custom . offline_simulator ( main_model_path ) self . second_model = calibrator_custom . offline_simulator ( second_model_path ) self . norm = False self . rpn = rpn . ProposalLayer () def forward ( self , x ): # Run main model out_details = self . main_model . get_output_details () input_data , im_scale = fill_inputImg2main ( x , norm = norm ) self . main_model . set_input ( 0 , input_data ) self . main_model . invoke () def forward ( self , x ): out_details = self . main_model . get_output_details () input_data , im_scale = fill_inputImg2main ( x ) self . main_model . set_input ( 0 , input_data ) self . main_model . invoke () result_list = [] for idx , _ in enumerate ( out_details ): result = self . main_model . get_output ( idx ) result_list . append ( result ) im_info = np . array ([ x . shape [ 0 ], x . shape [ 1 ], im_scale ]) . reshape ( 1 , 3 ) bottom = [ result_list [ 0 ], result_list [ 1 ], im_info ] roi = self . rpn . forward ( bottom ) out2_details = self . second_model . get_output_details () self . second_model . set_input ( 0 , result_list [ 2 ]) if self . norm : self . second_model . set_input ( 1 , roi ) else : self . second_model . set_input ( 1 , roi ) self . second_model . invoke () second_result = [] for idx , _ in enumerate ( out2_details ): result = self . second_model . get_output ( idx ) second_result . append ( result ) return second_result \u8fd0\u884c\u7f51\u7edc\u65f6\u5148\u521b\u5efaNet\u7684\u5b9e\u4f8b\uff0c\u7136\u540e\u8c03\u7528\u81ea\u8eab\u7684\u65b9\u6cd5\u5c31\u53ef\u4ee5\u8fd0\u884c\u3002\u5177\u4f53\u53c2\u8003 Calibrator:calibrator_custom.SIM_Simulator \u3002 net = Net () results = net ( img_gen , num_process = num_subsets ) 4. \u591a\u8f93\u5165\u7f51\u7edc\u8f6c\u6362\u8981\u70b9 \u00b6 4.1 \u6784\u5efa\u591a\u8f93\u5165\u7f51\u7edc \u00b6 \u4f7f\u7528Tensorflow1.14.0\u6784\u5efa\u4e00\u4e2a\u53cc\u8f93\u5165\u7f51\u7edc\uff0c\u8be5\u7f51\u7edc\u7528\u6765\u505a\u77e9\u9635\u4e58\u6cd5\uff0c\u8ba1\u7b97\u4e24\u4e2a\u5411\u91cf\u7684\u5185\u79ef\u3002 import tensorflow as tf import numpy as np SHAPE_DIMS = 256 input_np0 = np . random . rand ( 1 , SHAPE_DIMS ) . astype ( np . float32 ) input_np1 = np . random . rand ( 1 , SHAPE_DIMS ) . astype ( np . float32 ) input_0 = tf . placeholder ( dtype = tf . float32 , shape = ( 1 , SHAPE_DIMS ), name = 'input0' ) input_1 = tf . placeholder ( dtype = tf . float32 , shape = ( 1 , SHAPE_DIMS ), name = 'input1' ) out = tf . matmul ( input_0 , tf . reshape ( input_1 , ( SHAPE_DIMS , 1 )), name = 'output' ) with tf . Session () as sess : results = sess . run ( out , feed_dict = { input_0 : input_np0 , input_1 : input_np1 }) # Convert .pb output_graph_def = tf . graph_util . convert_variables_to_constants ( sess , sess . graph_def , [ 'output' ] ) with tf . gfile . GFile ( 'matmul.pb' , 'wb' ) as f : f . write ( output_graph_def . SerializeToString ()) print ( 'matmul.pb Saved!' ) # convert to .tflite tflite_model = tf . lite . TFLiteConverter . from_frozen_graph ( 'matmul.pb' , [ 'input0' , 'input1' ], [ 'output' ] ) tflite_model = tflite_model . convert () with open ( 'matmul.tflite' , 'wb' ) as f : f . write ( tflite_model ) print ( 'matmul.tflite Saved!' ) \u8fd0\u884c\u8be5\u811a\u672c\uff0c\u5c31\u80fd\u751f\u6210matmul.tflite\u6a21\u578b\u6587\u4ef6\u4e86\u3002 4.2 \u8f6c\u6362\u591a\u8f93\u5165\u7f51\u7edc \u00b6 \u4e0b\u9762\u5c06matmul.tflte\u8f6c\u6362\u6210\u53ef\u4ee5\u5728\u677f\u4e0a\u8fd0\u884c\u7684\u6a21\u578b\u6587\u4ef6\u3002 matmul.tflite\u6a21\u578b\u4e0d\u662f\u56fe\u7247\u8f93\u5165\uff0c\u56e0\u6b64\u914d\u7f6einput_config.ini\u6587\u4ef6\u8bf7\u53c2\u8003 RAWDATA_F32_NHWC\u4e0eRAWDATA_S16_NHWC\u8f93\u5165\u7684\u6a21\u578b \u3002 \u914d\u7f6einput_config.ini\u811a\u672c [INPUT_CONFIG] inputs = input0,input1; input_formats = RAWDATA_F32_NHWC,RAWDATA_F32_NHWC; quantization = TRUE,TRUE; [OUTPUT_CONFIG] outputs = output; dequantization = TRUE; \u8bf7\u5148\u5728SGS_IPU_SDK\u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK source cfg_env.sh \u7136\u540e\u4f7f\u7528ConvertTool\u5de5\u5177\u8f6c\u6362matmul.tflite\uff1a python3 ~/SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py tflite \\ --model_file /path/to/matmul.tflite \\ --input_config /path/to/input_config.ini \\ --output_file /path/to/matmul_float.sim \u591a\u8f93\u5165\u7f51\u7edc\u7684calibrator\u8fc7\u7a0b\u9700\u8981\u4f7f\u7528calibrator_custom\u6a21\u5757\uff0c\u53ef\u4ee5\u53c2\u8003 Calibrator:calibrator_custom \u3002\u4e0d\u540c\u7684\u662f\u8f93\u5165\u7684\u751f\u6210\u5668\u9700\u8981\u914d\u7f6e\u6210\u53cc\u8f93\u5165\u3002\u5c06\u5982\u4e0b\u793a\u4f8b\u6587\u4ef6\u4fdd\u5b58\u4e3amatmul_calibrator.py\u3002 # -*- coding: utf-8 -*- import calibrator_custom import os import sys import numpy as np import argparse from calibrator_custom import utils class Net ( calibrator_custom . SIM_Calibrator ): def __init__ ( self , model_path , input_config ): super () . __init__ () self . model = calibrator_custom . calibrator ( model_path , input_config ) def forward ( self , x , y ): out_details = self . model . get_output_details () self . model . set_input ( 0 , x ) self . model . set_input ( 1 , y ) self . model . invoke () result_list = [] for idx in range ( len ( out_details )): result = self . model . get_output ( idx ) result_list . append ( result ) return result_list def arg_parse (): parser = argparse . ArgumentParser ( description = 'Calibrator Tool' ) parser . add_argument ( '-m' , '--model' , type = str , required = True , help = 'Model path.' ) parser . add_argument ( '--input_config' , type = str , required = True , help = 'Input config path.' ) parser . add_argument ( '--quant_level' , type = str , default = 'L5' , choices = [ 'L1' , 'L2' , 'L3' , 'L4' , 'L5' ], help = 'Indicate Quantilization level. The higher the level, \\ the slower the speed and the higher the accuracy.' ) parser . add_argument ( '--num_process' , default = 10 , type = int , help = 'Amount of processes run at same time.' ) parser . add_argument ( '-o' , '--output' , default = None , type = str , help = 'Output path for fixed model.' ) return parser . parse_args () def data_gen (): calibrator_data = np . random . rand ( 100 , 1 , 256 ) . astype ( np . float32 ) bench_data = np . random . rand ( 100 , 1 , 256 ) . astype ( np . float32 ) for i , j in zip ( calibrator_data , bench_data ): yield [ i , j ] def main (): args = arg_parse () model_path = args . model input_config = args . input_config quant_level = args . quant_level num_subsets = args . num_process output = args . output if not os . path . exists ( model_path ): raise FileNotFoundError ( 'No such {} model' . format ( model_path )) if not os . path . exists ( input_config ): raise FileNotFoundError ( 'input_config.ini file not found.' ) net = Net ( model_path , input_config ) print ( net ) # random generate data # must change real data when using img_gen = data_gen () print ( ' \\033 [31m[WARNING] random generate data, \\ must change real data when using! \\033 [0m' , file = sys . stderr ) out_model = utils . get_out_model_name ( model_path , output ) net . convert ( img_gen , num_process = num_subsets , quant_level = quant_level , fix_model = [ out_model ]) if __name__ == '__main__' : main () \u4f7f\u7528\u7f16\u5199\u7684matmul_calibrator.py\u8f6c\u6362matmul_float.sim\uff0c\u751f\u6210matmul_fixed.sim\u3002 python3 matmul_calibrator.py \\ -m /path/to/matmul_float.sim \\ --input_config /path/to/input_config.ini \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u91cf\u5316\u8be5\u6a21\u578b\u7684\u8f93\u5165\u6570\u636e\u4e00\u5b9a\u8981\u6362\u6210\u771f\u5b9e\u6570\u636e\uff0c\u4e0d\u7136\u7edf\u8ba1\u751f\u6210\u7684fixed\u6a21\u578b\u7cbe\u5ea6\u4f1a\u51fa\u9519\u3002\u5982\u679c\u5355\u72ec\u91cf\u5316\u8be5\u6a21\u578b\u6bd4\u8f83\u56f0\u96be\uff0c\u6bd4\u5982\u5b83\u662f\u63a5\u5728\u67d0\u4e2a\u7f51\u7edc\u540e\u9762\u8fd0\u884c\u7684\uff0c\u53ef\u4ee5\u53c2\u8003 \u591a\u8f93\u5165\u7f51\u7edc\u8f6c\u6362\u8981\u70b9 \uff0c\u6309\u7167\u591a\u6bb5\u7f51\u7edc\u5904\u7406\uff0c\u5728calibrator_custom.SIM_Calibrator\u7c7b\u91cc\u5b9a\u4e49\u591a\u4e2a\u6a21\u578b\uff0c\u53ef\u4ee5\u76f4\u63a5\u751f\u6210\u51fa\u591a\u4e2afixed\u7f51\u7edc\u3002 \u6700\u540e\u4f7f\u7528compiler.py\u8f6c\u6362matmul_fixed.sim\uff0c\u751f\u6210matmul_fixed.sim_sgsimg.img\u3002 4.3 \u5728PC\u4e0a\u63a8\u6f14\u591a\u8f93\u5165\u7f51\u7edc \u00b6 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd0\u884cFloat\u7684\u7f51\u7edc\u65f6\uff0c\u8f93\u5165\u6570\u636e\u7684type\u9700\u8981\u4e3afloat32\uff0c\u8f93\u5165\u6570\u636e\u7684shape\u4e0e\u6a21\u578b\u8f93\u5165shape\u76f8\u540c\u3002\u4f46\u662f\u7531\u4e8ematmul\u7684Fixed\u548cOffline\u6a21\u578b\u662fRAWDATA_S16_NHWC\u8f93\u5165\uff0c\u8f93\u5165\u6570\u636e\u9700\u8981\u5148\u53cd\u91cf\u5316\u5230int16\u624d\u80fd\u8f93\u5165\u5230\u6a21\u578b\u3002\u6240\u4ee5\u5b9a\u4e49calibrator_custom.SIM_Simulator\u7684forward\u51fd\u6570\u65f6\u9700\u8981\u6ce8\u610f\u8be5\u6a21\u578b\u7684\u7279\u6b8a\u6027\uff1a class Net ( calibrator_custom . SIM_Simulator ): def __init__ ( self , model_path , phase ): super () . __init__ () if phase == 'Float' : self . model = calibrator_custom . float_simulator ( model_path ) elif phase == 'Fixed' : self . model = calibrator_custom . fixed_simulator ( model_path ) else : self . model = calibrator_custom . offline_simulator ( model_path ) def forward ( self , x , y ): out_details = self . model . get_output_details () self . model . set_input ( 0 , x ) self . model . set_input ( 1 , y ) self . model . invoke () result_list = [] for idx , _ in enumerate ( out_details ): result = self . model . get_output ( idx ) result_list . append ( result ) return result_list 4.4 \u5728\u677f\u4e0a\u63a8\u6f14\u591a\u8f93\u5165\u7f51\u7edc \u00b6 \u7531\u4e8ematmul_fixed.sim_sgsimg.img\u7f51\u7edc\u8f93\u5165\u662f RAWDATA_F32_NHWC \uff0c\u53ef\u4ee5\u53c2\u8003 FillInputData\u51fd\u6570 \uff0c\u4e0e\u5728PC\u4e0a\u76f8\u540c\uff0c\u9700\u8981\u5c06\u8f93\u5165\u6570\u636e\u5904\u7406\u540e\u518d\u9001\u5165\u6a21\u578b\u3002 \u591a\u8f93\u5165\u6a21\u578b\u53ea\u9700\u5728FillInputData\u51fd\u6570\u4e2d\u589e\u52a0\u5bf9\u6a21\u578b\u7684\u7b2c\u4e8c\u4e2a\u8f93\u5165\u704c\u5165\u6570\u636e\uff1a // input0 MI_FLOAT * pData0 = ( MI_FLOAT * ) InputTensorVector . astArrayTensors [ 0 ]. ptTensorData [ 0 ]; // input1 MI_FLOAT * pData1 = ( MI_FLOAT * ) InputTensorVector . astArrayTensors [ 1 ]. ptTensorData [ 0 ];","title":"Special Model Conversion"},{"location":"module/User_Guide/IPU260/Special_Model_Conversion.html#1","text":"\u7070\u5ea6\u6a21\u578b\uff0c\u6307\u8f93\u5165\u662f\u5355\u901a\u9053\u56fe\u7247\u7684\u6a21\u578b\uff0c\u5373\u8f93\u5165C\u7ef4\u5ea6\u4e0a\u4e3a1\u7684\u6a21\u578b\u3002 \u7070\u5ea6\u6a21\u578b\u7684\u7f51\u7edc\u8f6c\u6362\uff1a\u9700\u6ce8\u610finput_config\u914d\u7f6e \u7070\u5ea6\u6a21\u578b\u7684\u7f51\u7edc\u9a8c\u8bc1: \u9700\u6ce8\u610f\u524d\u5904\u7406","title":"1. \u7070\u5ea6\u6a21\u578b"},{"location":"module/User_Guide/IPU260/Special_Model_Conversion.html#11-input_config","text":"\u8f6c\u6362\u7070\u5ea6\u6a21\u578b\u65f6\u9700\u6ce8\u610finput_config\u914d\u7f6e\u4fe1\u606f\u4e2d\u5982\u4e0b\u8981\u70b9\uff1a(input_config.ini\u6587\u4ef6\u8be6\u7ec6\u8bf4\u660e\u8bf7\u53c2\u8003 Convert: input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e ) Note input_config.ini\u6587\u4ef6\u4e2d training_input_formats \u4e3aGRAY\uff0c input_formats \u53ef\u4ee5\u4e3aGRAY,\u4e5f\u53ef\u4ee5\u4e3aYUV_NV12\u3002 input_formats \u4e3aGRAY\u65f6\uff1a [INPUT_CONFIG] ...... training_input_formats = GRAY; input_formats = GRAY; ...... \u5b9e\u9645\u7ed9Fixed\u6216Offline\u6a21\u578b\u7684\u6570\u636e\u4e3a\u7070\u5ea6\u56fe\u7247\uff0c\u6b64\u65f6\u5bf9\u5e94\u7684 input_width_alignment \u548c input_height_alignment \u9ed8\u8ba4\u4e3a1\uff0c\u5982\u4e0d\u8bbe\u5b9a input_width_alignment \u548c input_height_alignment \uff0c\u5b9e\u9645\u8f93\u5165\u4e0e\u6a21\u578b\u8f93\u5165\u5f62\u72b6\u76f8\u540c\u3002 input_formats \u4e3aYUV_NV12\u65f6\uff1a [INPUT_CONFIG] ...... training_input_formats = GRAY; input_formats = YUV_NV12; ...... \u5b9e\u9645\u7ed9Fixed\u6216Offline\u6a21\u578b\u7684\u6570\u636e\u4e3aYUV_NV12\u6570\u636e\uff0c\u6b64\u65f6\u5bf9\u5e94\u7684 input_width_alignment \u548c input_height_alignment \u9ed8\u8ba4\u4e3a2\u3002 input_config.ini\u6587\u4ef6\u4e2d\u4ec5\u9700\u8bbe\u7f6e\u5355\u901a\u9053\u7684mean\u503c [INPUT_CONFIG] ...... mean = 33.318; std_value = 1.0;","title":"1.1. \u7070\u5ea6\u6a21\u578binput_config\u914d\u7f6e\u4fe1\u606f\u8981\u70b9"},{"location":"module/User_Guide/IPU260/Special_Model_Conversion.html#12","text":"\u7070\u5ea6\u56fe\u7247\u8f93\u5165\u7684\u524d\u5904\u7406\u65b9\u6cd5\u4e0e Calibrator: \u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5 \u8981\u6c42\u76f8\u540c\uff0c\u524d\u5904\u7406\u65b9\u6cd5\u793a\u4f8b\u8bf7\u53c2\u8003 \u524d\u5904\u7406\u548c\u914d\u7f6e\u6587\u4ef6\u6ce8\u610f\u8981\u70b9 Note \u7070\u5ea6\u56fe\u7247\u8f93\u5165\u6a21\u578b\u5728PC\u4e0a\u8fd0\u884c\u4e0e\u5f00\u53d1\u677f\u6839\u636e input_formats \u7684\u914d\u7f6e\u53ef\u4ee5\u652f\u6301GRAY\u6216YUV_NV12\u56fe\u7247\u8f93\u5165\u6570\u636e\u3002","title":"1.2. \u7070\u5ea6\u56fe\u7247\u8f93\u5165\u6a21\u578b\u524d\u5904\u7406\u65b9\u6cd5"},{"location":"module/User_Guide/IPU260/Special_Model_Conversion.html#2-rawdata_f32_nhwcrawdata_s16_nhwc","text":"RAWDATA_F32_NHWC \u4e0e RAWDATA_S16_NHWC \u53ef\u4ee5\u7528\u4e8e\u5206\u6bb5\u7f51\u7edc\u7684\u540e\u7aef\u7f51\u7edc\u6a21\u578b\u8f93\u5165\uff0c\u6216\u8005\u975e\u56fe\u7247\u6570\u636e\u8f93\u5165\u7684\u7f51\u7edc\u6a21\u578b\u3002 \u975e\u56fe\u7247\u8f93\u5165\u7684\u7f51\u7edc\u8f6c\u6362\uff1a\u9700\u6ce8\u610finput_config\u914d\u7f6e \u975e\u56fe\u7247\u8f93\u5165\u7684\u6a21\u578b\u7f51\u7edc\u9a8c\u8bc1: \u9700\u6ce8\u610f\u524d\u5904\u7406","title":"2. RAWDATA_F32_NHWC\u4e0eRAWDATA_S16_NHWC\u8f93\u5165\u7684\u6a21\u578b"},{"location":"module/User_Guide/IPU260/Special_Model_Conversion.html#21-input_config","text":"(1) RAWDATA_F32_NHWC \u6a21\u578b \u8f6c\u6362\u975e\u56fe\u7247\u8f93\u5165\u6a21\u578b\u65f6\u9700\u6ce8\u610finput_config\u914d\u7f6e\u4fe1\u606f\u4e2d\u5982\u4e0b\u8981\u70b9\uff1a(input_config.ini\u6587\u4ef6\u8be6\u7ec6\u8bf4\u660e\u8bf7\u53c2\u8003 Convert: input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e ) Note input_formats \u548c training_input_formats \u90fd\u586b\u5199 RAWDATA_S16_NHWC \uff0c quantizations \u914d\u7f6e\u4e3a TRUE \u3002 input_config.ini\u4e2d mean \u548c std_value \u4e0d\u8981\u586b\u5199\u3002 \u6a21\u578b\u5728\u4f7f\u7528calibrator.py\u5de5\u5177\u8f6c\u6362\u4e3a\u5b9a\u70b9\u7f51\u7edc\u65f6\u4f7f\u7528\u6d6e\u70b9\u6570\u636e\uff0c\u56e0\u6b64\u8f6c\u6362\u65b9\u6cd5\u4e0e\u6b63\u5e38\u7f51\u7edc\u76f8\u540c\u3002\u53ef\u4ee5\u53c2\u8003 Calibrator \u7684\u4f7f\u7528\u65b9\u6cd5\u3002 (2) RAWDATA_S16_NHWC \u6a21\u578b \u8f6c\u6362\u975e\u56fe\u7247\u8f93\u5165\u6a21\u578b\u65f6\u9700\u6ce8\u610finput_config\u914d\u7f6e\u4fe1\u606f\u4e2d\u5982\u4e0b\u8981\u70b9\uff1a(input_config.ini\u6587\u4ef6\u8be6\u7ec6\u8bf4\u660e\u8bf7\u53c2\u8003 Convert: input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e ) Note input_formats \u548c training_input_formats \u90fd\u586b\u5199 RAWDATA_F32_NHWC \uff0c quantizations \u914d\u7f6e\u4e3a TRUE \u3002 input_config.ini\u4e2d mean \u548c std_value \u4e0d\u8981\u586b\u5199\u3002 \u6a21\u578b\u5728\u4f7f\u7528calibrator.py\u5de5\u5177\u8f6c\u6362\u4e3a\u5b9a\u70b9\u7f51\u7edc\u65f6\u4f7f\u7528\u6d6e\u70b9\u6570\u636e\uff0c\u56e0\u6b64\u8f6c\u6362\u65b9\u6cd5\u4e0e\u6b63\u5e38\u7f51\u7edc\u76f8\u540c\u3002\u53ef\u4ee5\u53c2\u8003 Calibrator \u7684\u4f7f\u7528\u65b9\u6cd5\u3002 \u4f7f\u7528\u8be5\u79cd\u65b9\u5f0f\u8f93\u5165\u65f6\uff0c\u7531\u4e8e\u786c\u4ef6\u7684\u9650\u5236\u6761\u4ef6\uff0c\u6240\u4ee5\u9700\u8981\u63d0\u524d\u6392\u5217\u597d\u6570\u636e\u540e\u624d\u80fd\u8fdb\u884c\u8ba1\u7b97\u3002","title":"2.1. \u975e\u56fe\u7247\u8f93\u5165\u6a21\u578binput_config\u914d\u7f6e\u4fe1\u606f\u8981\u70b9"},{"location":"module/User_Guide/IPU260/Special_Model_Conversion.html#22-rawdata_f32_nhwc","text":"(1) \u6a21\u578b\u524d\u5904\u7406\u65b9\u6cd5 \u8bf7\u53c2\u8003 \u524d\u5904\u7406\u548c\u914d\u7f6e\u6587\u4ef6\u6ce8\u610f\u8981\u70b9\uff1atraining_input_formats\u548cinput_formats\u5747\u4e3aRAWDATA_S16_NHWC\u6216\u8005\u5747\u4e3aRAWDATA_F32_NHWC (2) \u677f\u4e0a\u8fd0\u884c\u6ce8\u610f\u4e8b\u9879 \u5728\u677f\u4e0a\u8fd0\u884c RAWDATA_F32_NHWC \u7684\u7f51\u7edc\u65f6\uff0c\u53ef\u4ee5\u53c2\u8003\u5982\u4e0b\u4ee3\u7801\uff1a void FillInputData ( MI_FLOAT * pfData , MI_IPU_TensorVector_t & InputTensorVector , MI_IPU_SubNet_InputOutputDesc_t & desc ) { const MI_U32 H = desc . astMI_InputTensorDescs [ 0 ]. u32TensorShape [ 1 ]; const MI_U32 W = desc . astMI_InputTensorDescs [ 0 ]. u32TensorShape [ 2 ]; const MI_U32 C = desc . astMI_InputTensorDescs [ 0 ]. u32TensorShape [ 3 ]; MI_FLOAT * pTensorData = ( MI_FLOAT * ) InputTensorVector . astArrayTensors [ 0 ]. ptTensorData [ 0 ]; if ( desc . astMI_InputTensorDescs [ 0 ]. eElmFormat == MI_IPU_FORMAT_FP32 ) { memcpy ( pTensorData , pfData , H * W * C * sizeof ( MI_FLOAT )); } } \u5176\u4e2d\uff0c FillInputData\u51fd\u6570\u7684\u8f93\u5165\u5206\u522b\u662f\u6d6e\u70b9\u8f93\u5165\u6570\u636e\u7684\u6570\u7ec4 MI_IPU\u8f93\u5165Tensor\u7ed3\u6784\u4f53\u548cMI_IPU\u7f51\u7edc\u63cf\u8ff0\u7ed3\u6784\u4f53 \u53ea\u6709\u4f7f\u7528 RAWDATA_F32_NHWC \u914d\u7f6e\u7684\u7f51\u7edc\u5728\u677f\u4e0amemcpy\u5b8c\u6570\u636e\u540e\u4e0d\u8981\u8c03\u7528MI_SYS_FlushInvCache\u3002 \u8865\u5145\u8bf4\u660e \u5982\u9700\u4f7f\u7528calibrator_custom.fixed_simulator\uff0c\u9700\u81ea\u884c\u5b9e\u73b0\u5b9a\u70b9\u5316\uff1a \u4f7f\u7528calibrator_custom.fixed_simulator\u65f6\uff0c\u8f93\u5165\u6570\u636e\u7c7b\u578b\u4e3afloat32\u3002 >>> import calibrator_custom >>> model = calibrator_custom . fixed_simulator ( './mobilenet_v2_fixed.sim' ) >>> input_details = model . get_input_details () >>> print ( input_details ) [{ 'shape' : array ([ 1 , 513 , 513 , 3 ]), 'name' : 'sub_7' , 'dtype' : < class ' numpy . float32 '>, ' index ': 0}] calibrator_custom.fixed_simulator\u4e2d\u68c0\u67e5\u4e86\u6a21\u578b\u7684\u8f93\u5165\u683c\u5f0f\uff0c\u8ba1\u7b97\u51fa\u9700\u8981\u8f93\u5165\u7684shape\u4fe1\u606f\u3002 \u5df2\u4f7f\u7528float\u7f51\u7edc\u7684\u524d\u5904\u7406\u5904\u7406\u5b8c\u56fe\u7247\uff0c\u8fd4\u56denumpy.ndarray\u683c\u5f0f\u7684\u53d8\u91cfimg >>> print ( img . shape ) ( 1 , 513 , 513 , 3 ) >>> print ( img . dtype ) float32 \u8f93\u5165\u6a21\u578b\u6570\u636e >>> model . set_input ( input_details [ 0 ][ 'index' ], img )","title":"2.2 RAWDATA_F32_NHWC\u6a21\u578b\u63a8\u6f14"},{"location":"module/User_Guide/IPU260/Special_Model_Conversion.html#23-rawdata_s16_nhwc","text":"(1) \u6a21\u578b\u524d\u5904\u7406\u65b9\u6cd5 \u8bf7\u53c2\u8003 \u524d\u5904\u7406\u548c\u914d\u7f6e\u6587\u4ef6\u6ce8\u610f\u8981\u70b9\uff1atraining_input_formats\u548cinput_formats\u5747\u4e3aRAWDATA_S16_NHWC\u6216\u8005\u5747\u4e3aRAWDATA_F32_NHWC simulator.py\u4f1a\u8bfb\u5165\u539f\u6d6e\u70b9\u6570\u636e\uff0c\u8fdb\u884c\u53cd\u91cf\u5316\u540e\u8f93\u5165\u7ed9\u5b9a\u70b9\u6a21\u578b\u3002 (2) \u677f\u4e0a\u8fd0\u884c\u6ce8\u610f\u4e8b\u9879 \u5728\u677f\u4e0a\u8fd0\u884c RAWDATA_S16_NHWC \u7684\u7f51\u7edc\u65f6\uff0c\u4e5f\u9700\u8981\u5b8c\u6210\u8f93\u5165\u6570\u636e\u7684\u5b9a\u70b9\u5316\u8fc7\u7a0b\uff0c\u53ef\u4ee5\u53c2\u8003\u5982\u4e0b\u4ee3\u7801\uff0cFillInputData\u51fd\u6570\u7684\u8f93\u5165\u5206\u522b\u662f\u6d6e\u70b9\u8f93\u5165\u6570\u636e\u7684\u6570\u7ec4\uff0cMI_IPU\u8f93\u5165Tensor\u7ed3\u6784\u4f53\u548cMI_IPU\u7f51\u7edc\u63cf\u8ff0\u7ed3\u6784\u4f53\u3002 #define CLIP3(x, min, max) ((x) < (min) ? (min) : ((x) > (max) ? (max) : (x))) void FillInputData ( MI_FLOAT * pfData , MI_IPU_TensorVector_t & InputTensorVector , MI_IPU_SubNet_InputOutputDesc_t & desc ) { const MI_U32 H = desc . astMI_InputTensorDescs [ 0 ]. u32TensorShape [ 1 ]; const MI_U32 W = desc . astMI_InputTensorDescs [ 0 ]. u32TensorShape [ 2 ]; const MI_U32 C = desc . astMI_InputTensorDescs [ 0 ]. u32TensorShape [ 3 ]; const MI_FLOAT Scale = desc . astMI_InputTensorDescs [ 0 ]. fScalar ; const MI_S64 ZeroPoint = desc . astMI_InputTensorDescs [ 0 ]. s64ZeroPoint ; MI_S16 * pData = ( MI_S16 * ) InputTensorVector . astArrayTensors [ 0 ]. ptTensorData [ 0 ]; for ( MI_U32 i = 0 ; i < H * W * C ; i ++ ) { * ( pData + i ) = ( MI_S16 ) CLIP3 ( pfData [ i ] / Scale + ZeroPoint , -32768 , 32767 ); } MI_SYS_FlushInvCache ( pData , desc . astMI_InputTensorDescs [ 0 ]. s32AlignedBufSize ); } \u5176\u4e2d\uff0c FillInputData\u51fd\u6570\u7684\u8f93\u5165\u5206\u522b\u662f\u6d6e\u70b9\u8f93\u5165\u6570\u636e\u7684\u6570\u7ec4 MI_IPU\u8f93\u5165Tensor\u7ed3\u6784\u4f53\u548cMI_IPU\u7f51\u7edc\u63cf\u8ff0\u7ed3\u6784\u4f53 \u8865\u5145\u8bf4\u660e \u5982\u9700\u4f7f\u7528calibrator_custom.fixed_simulator\uff0c\u9700\u81ea\u884c\u5b9e\u73b0\u5b9a\u70b9\u5316\uff1a \u4f7f\u7528calibrator_custom.fixed_simulator\u65f6\uff0c\u8f93\u5165\u6570\u636e\u7c7b\u578b\u4e3aint16\u3002 >>> import calibrator_custom >>> model = calibrator_custom . fixed_simulator ( './mobilenet_v2_s16_fixed.sim' ) >>> input_details = model . get_input_details () >>> print ( input_details ) [{ 'input_formats' : 'RAWDATA_S16_NHWC' , 'training_input_formats' : 'RAWDATA_S16_NHWC' , 'shape' : array ([ 1 , 513 , 513 , 3 ]), 'name' : 'sub_7' , 'dtype' : < class ' numpy . int16 '>, ' index ': 0, ' quantization ': (3.0518509447574615e-05, 0)}] calibrator_custom.fixed_simulator\u4e2d\u68c0\u67e5\u4e86\u6a21\u578b\u7684\u8f93\u5165\u683c\u5f0f\uff0c\u8ba1\u7b97\u51fa\u9700\u8981\u8f93\u5165\u7684shape\u4fe1\u606f\u3002 \u5df2\u4f7f\u7528float\u7f51\u7edc\u7684\u524d\u5904\u7406\u5904\u7406\u5b8c\u56fe\u7247\uff0c\u8fd4\u56denumpy.ndarray\u683c\u5f0f\u7684\u53d8\u91cfimg >>> print ( img . shape ) ( 1 , 513 , 513 , 3 ) \u5b9a\u70b9\u5316img\u7684\u6570\u636e\uff0c\u5e76\u8f6c\u6362\u6570\u636e\u7c7b\u578b >>> ins , zp = input_details [ 0 ][ 'quantization' ] >>> img = ( img / ins + zp ) . astype ( input_details [ 0 ][ 'dtype' ]) >>> print ( img . dtype ) int16 \u8f93\u5165\u6a21\u578b\u6570\u636e >>> model . set_input ( input_details [ 0 ][ 'index' ], img )","title":"2.3. RAWDATA_S16_NHWC\u6a21\u578b\u63a8\u6f14"},{"location":"module/User_Guide/IPU260/Special_Model_Conversion.html#3","text":"\u7f51\u7edc\u4e2d\u6709\u4e0d\u652f\u6301\u7684Layer\uff0c\u53ef\u5c06\u5b8c\u6574\u7f51\u7edc\u5206\u6bb5\u6267\u884c\uff1a \u524d\u4e00\u6bb5\u7f51\u7edc\u8fd0\u884c\u5b8c\u6210\u540e\u5c06\u7ed3\u679c\u8f93\u5165\u7ed9\u81ea\u5b9a\u4e49\u5b9e\u73b0\u5c42\uff0c \u518d\u5c06\u81ea\u5b9a\u4e49\u5c42\u7684\u8f93\u51fa\u7ed3\u679c\u4f5c\u4e3a\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u8fd0\u884c\u3002 \u4ee5Faster_RCNN\u7f51\u7edc\u4e3a\u4f8b: Faster_RCNN\u7f51\u7edc\u4e2d\u7684Proposal Layer\u662f\u4e0d\u652f\u6301\u7684\uff0c\u9700\u8981\u5c06\u7f51\u7edc\u4ece\u8be5\u5c42\u5206\u6210\u4e24\u6bb5\u3002","title":"3. \u5206\u6bb5\u7f51\u7edc\u8f6c\u6362\u8981\u70b9"},{"location":"module/User_Guide/IPU260/Special_Model_Conversion.html#31","text":"\u7f51\u7edc\u5207\u5206\u793a\u610f\u56fe: (1) \u56fe\u4e2d\u7684Python Layer\u662fProposal Layer\uff0c\u901a\u8fc7\u4fee\u6539prototxt\u6587\u4ef6\uff0c\u5c06\u7f51\u7edc\u4eceProposal Layer\u5904\u62c6\u6210\u4e24\u6bb5\u3002 (2) \u7b2c\u4e00\u6bb5\u7f51\u7edc\u5c06\u67093\u4e2a\u8f93\u51fa\uff0c > \u5176\u4e2drpn_cls_prob_reshape\u548crpn_bbox_pred\u4e24\u4e2a\u8f93\u51fa\u7ed3\u679c\u5c06\u4f5c\u4e3aProposal Layer\u7684\u8f93\u5165\uff0c > conv5_3\u548cProposal Layer\u7684\u8f93\u51fa\u5c06\u4f5c\u4e3a\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u3002 (3) \u7b2c\u4e00\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u662f\u56fe\u7247\u6570\u636e\uff0cinput_config.ini\u548c\u524d\u5904\u7406\u6587\u4ef6\u5206\u522b\u6309\u7167 Convert:input config\u914d\u7f6e\u4fe1\u606f\u8bbe\u7f6e \u548c Calibrator:\u56fe\u7247\u524d\u5904\u7406\u65b9\u6cd5 \u5904\u7406\u3002 (4) \u7b2c\u4e8c\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u4e0d\u662f\u56fe\u7247\u6570\u636e\uff0c\u53ef\u4ee5\u5bf9\u4e24\u4e2a\u8f93\u5165\u540c\u65f6\u91c7\u7528RAWDATA_S16_NHWC\u7684\u683c\u5f0f\u914d\u7f6e\u3002\u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u901a\u8fc7ConvertTool.py\u5206\u522b\u5c06\u4e24\u4e2a\u7f51\u7edc\u8f6c\u6362\u6210float.sim\u6a21\u578b\u6587\u4ef6\u3002 \u5177\u4f53\u914d\u7f6e\u6587\u4ef6\u548c\u8f6c\u6362\u547d\u4ee4 \u7b2c\u4e00\u6bb5\u7f51\u7edc\uff1a python3 ~/SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py caffe \\ --model_file test_stageone.prototxt \\ --weight_file VGG16_faster_rcnn_final.caffemodel \\ --input_arrays data \\ --output_arrays rpn_cls_prob_reshape,rpn_bbox_pred,conv5_3 \\ --input_config input_config.ini \\ --output_file faster_rcnn_main_float.sim [INPUT_CONFIG] inputs = data; input_formats = BGR; quantizations = TRUE; mean = 122.7717:115.9465:102.9801; std_value = 1; [OUTPUT_CONFIG] outputs = rpn_cls_prob_reshape,rpn_bbox_pred,conv5_3; dequantizations = TRUE,TRUE,FALSE; \u8bbe\u5b9aconv5_3 \u8fd9\u4e2a\u8f93\u51fa\u7684dequantizations \u4e3aFALSE\uff0c\u7531\u4e8e\u8be5\u8f93\u51fa\u76f4\u63a5\u8f93\u5165\u7b2c\u4e8c\u6bb5\u7f51\u7edc\uff0c\u6240\u4ee5\u5728\u677f\u7aef\u8fd0\u884c\u65f6\u4e0d\u9700\u8981 \u8f6c\u6362\u6210float\uff0c\u53ef\u4ee5\u76f4\u63a5\u5c06\u8be5\u8f93\u51fa\u9001\u8fdb\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u3002 \u7b2c\u4e8c\u6bb5\u7f51\u7edc\uff1a ROIPooling\u7684rois\u8f93\u5165\u7ef4\u5ea6\u4e3a\uff08N\u00d75\uff09\uff0c\u5f53\u540e\u6bb5\u7f51\u7edc\u5168\u90e8\u662fInnerProduct\u65f6\uff0cN\u624d\u53ef\u4ee5\u8bbe\u7f6e\u4e3a300\uff08\u5982\u4e0a\u56fe\u6240\u793a\uff09\uff0c\u5982\u679c\u540e\u6bb5\u7f51\u7edc\u4e2d\u6709\u5377\u79ef\u65f6\uff0cN\u4ec5\u53ef\u4ee5\u8bbe\u7f6e\u4e3a1\uff0c\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u9700\u8981\u5faa\u73af\u6267\u884cN\u6b21\u3002 python3 ~/SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py caffe \\ --model_file second_stage.prototxt \\ --weight_file VGG16_faster_rcnn_final.caffemodel \\ --input_arrays conv5_3,rois \\ --output_arrays cls_prob,bbox_pred \\ --input_config input_config_stage2.ini \\ --output_file faster_rcnn_stage2_float.sim [INPUT_CONFIG] inputs = conv5_3,rois input_formats = RAWDATA_F32_NHWC,RAWDATA_F32_NHWC; quantizations = TRUE,TRUE; [OUTPUT_CONFIG] outputs = cls_prob,bbox_pred; dequantizations = TRUE,TRUE;","title":"3.1 \u7f51\u7edc\u5207\u5206"},{"location":"module/User_Guide/IPU260/Special_Model_Conversion.html#32","text":"\u8def\u5f84 SGS_IPU_SDK/Scripts/examples/caffe_faster_rcnn/faster_rcnn_calibrator.py \u4e0b\u6709Faster_RCNN\u7f51\u7edc\u8f6c\u6362\u5de5\u5177demo\uff0c\u76f4\u63a5\u8fd0\u884c\u5373\u53ef\u5c06\u4e24\u6bb5\u7f51\u7edc\u76f4\u63a5\u8f6c\u6362\u6210fixed\u6a21\u578b\u3002 (1) \u6307\u4ee4 python3 ~/SGS_IPU_SDK/Scripts/examples/caffe_faster_rcnn/faster_rcnn_calibrator.py \\ -i ~/SGS_Models/resource/detection/voc_calibration_set32/ \\ -m0 faster_rcnn_main_float.sim \\ -m1 faster_rcnn_stage2_float.sim \\ --input_config0 input_config.ini \\ --input_config1 input_config_stage2.ini (2) \u8f6c\u6362\u5206\u6bb5\u7f51\u7edc \u9996\u5148\u5b9a\u4e49\u7f51\u7edc\u7684\u4e24\u6bb5\u7f51\u7edc\uff0c\u518d\u7ec4\u7ec7\u4e24\u6bb5\u7f51\u7edc\u7684\u8fd0\u884c\u65b9\u5f0f\uff0c\u5b9a\u4e49\u5728forward\u65b9\u6cd5\u91cc\uff1a class Net ( calibrator_custom . SIM_Calibrator ): def __init__ ( self , main_model_path , main_input_config , second_model_path , second_input_config ): super () . __init__ () self . main_model = calibrator_custom . calibrator ( main_model_path , main_input_config ) self . second_model = calibrator_custom . calibrator ( second_model_path , second_input_config ) self . rpn = rpn . ProposalLayer () def forward ( self , x ): out_details = self . main_model . get_output_details () input_data , im_scale = fill_inputImg2main ( x ) self . main_model . set_input ( 0 , input_data ) self . main_model . invoke () result_list = [] for idx , _ in enumerate ( out_details ): result = self . main_model . get_output ( idx ) result_list . append ( result ) im_info = np . array ([ x . shape [ 0 ], x . shape [ 1 ], im_scale ]) . reshape ( 1 , 3 ) bottom = [ result_list [ 0 ], result_list [ 1 ], im_info ] roi = self . rpn . forward ( bottom ) out2_details = self . second_model . get_output_details () self . second_model . set_input ( 0 , result_list [ 2 ]) self . second_model . set_input ( 1 , roi ) self . second_model . invoke () second_result = [] for idx , _ in enumerate ( out2_details ): result = self . second_model . get_output ( idx ) second_result . append ( result ) return second_result * Faster_RCNN\u7f51\u7edc\u4e2d\uff0c\u4f7f\u7528\u4e86\u81ea\u5b9a\u4e49\u7684rpn\u5c42\uff0c\u56e0\u6b64\u5c06\u7b2c\u4e00\u6bb5\u7f51\u7edc\u7684\u7b2c1\u4e2a\u548c\u7b2c2\u4e2a\u8f93\u51fa\u4ee5\u53ca\u56fe\u7247\u4fe1\u606f\u4f5c\u4e3arpn\u5c42\u7684\u8f93\u5165\uff0c\u7b2c\u4e00\u6bb5\u7f51\u7edc\u7684\u7b2c3\u4e2a\u8f93\u51fa\u548crpn\u5c42\u7684\u8f93\u51faroi\u4f5c\u4e3a\u7b2c\u4e8c\u6bb5\u7f51\u7edc\u7684\u8f93\u5165\u3002 \u6700\u540e\u8c03\u7528Net\u7684convert\u65b9\u6cd5\uff0c\u540c\u65f6\u751f\u6210\u4e24\u6bb5\u7f51\u7edc\u7684fixed\u6a21\u578b\u3002 net = Net () net . convert ( img_gen , num_process = num_subsets , fix_model = [ out_main_model , out_second_model ])","title":"3.2 \u8f6c\u6362\u7f51\u7edc"},{"location":"module/User_Guide/IPU260/Special_Model_Conversion.html#33","text":"\u8def\u5f84 SGS_IPU_SDK/Scripts/examples/caffe_faster_rcnn/faster_rcnn_simulator.py \u4e0b\u6709Faster_RCNN\u7f51\u7edc\u8fd0\u884c\u5de5\u5177demo\u3002 (1) \u6307\u4ee4 python3 ~/SGS_IPU_SDK/Scripts/examples/caffe_faster_rcnn/faster_rcnn_simulator.py \\ -i ~/SGS_Models/resource/detection/004545.jpg \\ -m0 faster_rcnn_main_float.sim \\ -m1 faster_rcnn_stage2_float.sim \\ -t Float (2) \u8fd0\u884c\u4e24\u6bb5\u6a21\u578b\u7684\u65b9\u6cd5\u4e0e\u8f6c\u6362\u7f51\u7edc\u65f6\u7c7b\u4f3c\u3002 class Net ( calibrator_custom . SIM_Simulator ): def __init__ ( self , main_model_path , second_model_path , phase ): super () . __init__ () if phase == 'Float' : self . main_model = calibrator_custom . float_simulator ( main_model_path ) self . second_model = calibrator_custom . float_simulator ( second_model_path ) self . norm = True elif phase == 'Fixed' : self . main_model = calibrator_custom . fixed_simulator ( main_model_path ) self . second_model = calibrator_custom . fixed_simulator ( second_model_path ) self . norm = False else : self . main_model = calibrator_custom . offline_simulator ( main_model_path ) self . second_model = calibrator_custom . offline_simulator ( second_model_path ) self . norm = False self . rpn = rpn . ProposalLayer () def forward ( self , x ): # Run main model out_details = self . main_model . get_output_details () input_data , im_scale = fill_inputImg2main ( x , norm = norm ) self . main_model . set_input ( 0 , input_data ) self . main_model . invoke () def forward ( self , x ): out_details = self . main_model . get_output_details () input_data , im_scale = fill_inputImg2main ( x ) self . main_model . set_input ( 0 , input_data ) self . main_model . invoke () result_list = [] for idx , _ in enumerate ( out_details ): result = self . main_model . get_output ( idx ) result_list . append ( result ) im_info = np . array ([ x . shape [ 0 ], x . shape [ 1 ], im_scale ]) . reshape ( 1 , 3 ) bottom = [ result_list [ 0 ], result_list [ 1 ], im_info ] roi = self . rpn . forward ( bottom ) out2_details = self . second_model . get_output_details () self . second_model . set_input ( 0 , result_list [ 2 ]) if self . norm : self . second_model . set_input ( 1 , roi ) else : self . second_model . set_input ( 1 , roi ) self . second_model . invoke () second_result = [] for idx , _ in enumerate ( out2_details ): result = self . second_model . get_output ( idx ) second_result . append ( result ) return second_result \u8fd0\u884c\u7f51\u7edc\u65f6\u5148\u521b\u5efaNet\u7684\u5b9e\u4f8b\uff0c\u7136\u540e\u8c03\u7528\u81ea\u8eab\u7684\u65b9\u6cd5\u5c31\u53ef\u4ee5\u8fd0\u884c\u3002\u5177\u4f53\u53c2\u8003 Calibrator:calibrator_custom.SIM_Simulator \u3002 net = Net () results = net ( img_gen , num_process = num_subsets )","title":"3.3 \u63a8\u6f14\u7f51\u7edc"},{"location":"module/User_Guide/IPU260/Special_Model_Conversion.html#4","text":"","title":"4.   \u591a\u8f93\u5165\u7f51\u7edc\u8f6c\u6362\u8981\u70b9"},{"location":"module/User_Guide/IPU260/Special_Model_Conversion.html#41","text":"\u4f7f\u7528Tensorflow1.14.0\u6784\u5efa\u4e00\u4e2a\u53cc\u8f93\u5165\u7f51\u7edc\uff0c\u8be5\u7f51\u7edc\u7528\u6765\u505a\u77e9\u9635\u4e58\u6cd5\uff0c\u8ba1\u7b97\u4e24\u4e2a\u5411\u91cf\u7684\u5185\u79ef\u3002 import tensorflow as tf import numpy as np SHAPE_DIMS = 256 input_np0 = np . random . rand ( 1 , SHAPE_DIMS ) . astype ( np . float32 ) input_np1 = np . random . rand ( 1 , SHAPE_DIMS ) . astype ( np . float32 ) input_0 = tf . placeholder ( dtype = tf . float32 , shape = ( 1 , SHAPE_DIMS ), name = 'input0' ) input_1 = tf . placeholder ( dtype = tf . float32 , shape = ( 1 , SHAPE_DIMS ), name = 'input1' ) out = tf . matmul ( input_0 , tf . reshape ( input_1 , ( SHAPE_DIMS , 1 )), name = 'output' ) with tf . Session () as sess : results = sess . run ( out , feed_dict = { input_0 : input_np0 , input_1 : input_np1 }) # Convert .pb output_graph_def = tf . graph_util . convert_variables_to_constants ( sess , sess . graph_def , [ 'output' ] ) with tf . gfile . GFile ( 'matmul.pb' , 'wb' ) as f : f . write ( output_graph_def . SerializeToString ()) print ( 'matmul.pb Saved!' ) # convert to .tflite tflite_model = tf . lite . TFLiteConverter . from_frozen_graph ( 'matmul.pb' , [ 'input0' , 'input1' ], [ 'output' ] ) tflite_model = tflite_model . convert () with open ( 'matmul.tflite' , 'wb' ) as f : f . write ( tflite_model ) print ( 'matmul.tflite Saved!' ) \u8fd0\u884c\u8be5\u811a\u672c\uff0c\u5c31\u80fd\u751f\u6210matmul.tflite\u6a21\u578b\u6587\u4ef6\u4e86\u3002","title":"4.1 \u6784\u5efa\u591a\u8f93\u5165\u7f51\u7edc"},{"location":"module/User_Guide/IPU260/Special_Model_Conversion.html#42","text":"\u4e0b\u9762\u5c06matmul.tflte\u8f6c\u6362\u6210\u53ef\u4ee5\u5728\u677f\u4e0a\u8fd0\u884c\u7684\u6a21\u578b\u6587\u4ef6\u3002 matmul.tflite\u6a21\u578b\u4e0d\u662f\u56fe\u7247\u8f93\u5165\uff0c\u56e0\u6b64\u914d\u7f6einput_config.ini\u6587\u4ef6\u8bf7\u53c2\u8003 RAWDATA_F32_NHWC\u4e0eRAWDATA_S16_NHWC\u8f93\u5165\u7684\u6a21\u578b \u3002 \u914d\u7f6einput_config.ini\u811a\u672c [INPUT_CONFIG] inputs = input0,input1; input_formats = RAWDATA_F32_NHWC,RAWDATA_F32_NHWC; quantization = TRUE,TRUE; [OUTPUT_CONFIG] outputs = output; dequantization = TRUE; \u8bf7\u5148\u5728SGS_IPU_SDK\u2f6c\u5f55\u4e0b\u8fd0\u2f8f\u4ee5\u4e0b\u811a\u672c\uff0c\u8f93\u51faLibrary\u7684\u8def\u5f84\uff08\u5df2\u7ecf\u505a\u8fc7\u8be5\u6b65\u9aa4\u53ef\u5ffd\u7565\uff09\uff1a cd ~/SGS_IPU_SDK source cfg_env.sh \u7136\u540e\u4f7f\u7528ConvertTool\u5de5\u5177\u8f6c\u6362matmul.tflite\uff1a python3 ~/SGS_IPU_SDK/Scripts/ConvertTool/ConvertTool.py tflite \\ --model_file /path/to/matmul.tflite \\ --input_config /path/to/input_config.ini \\ --output_file /path/to/matmul_float.sim \u591a\u8f93\u5165\u7f51\u7edc\u7684calibrator\u8fc7\u7a0b\u9700\u8981\u4f7f\u7528calibrator_custom\u6a21\u5757\uff0c\u53ef\u4ee5\u53c2\u8003 Calibrator:calibrator_custom \u3002\u4e0d\u540c\u7684\u662f\u8f93\u5165\u7684\u751f\u6210\u5668\u9700\u8981\u914d\u7f6e\u6210\u53cc\u8f93\u5165\u3002\u5c06\u5982\u4e0b\u793a\u4f8b\u6587\u4ef6\u4fdd\u5b58\u4e3amatmul_calibrator.py\u3002 # -*- coding: utf-8 -*- import calibrator_custom import os import sys import numpy as np import argparse from calibrator_custom import utils class Net ( calibrator_custom . SIM_Calibrator ): def __init__ ( self , model_path , input_config ): super () . __init__ () self . model = calibrator_custom . calibrator ( model_path , input_config ) def forward ( self , x , y ): out_details = self . model . get_output_details () self . model . set_input ( 0 , x ) self . model . set_input ( 1 , y ) self . model . invoke () result_list = [] for idx in range ( len ( out_details )): result = self . model . get_output ( idx ) result_list . append ( result ) return result_list def arg_parse (): parser = argparse . ArgumentParser ( description = 'Calibrator Tool' ) parser . add_argument ( '-m' , '--model' , type = str , required = True , help = 'Model path.' ) parser . add_argument ( '--input_config' , type = str , required = True , help = 'Input config path.' ) parser . add_argument ( '--quant_level' , type = str , default = 'L5' , choices = [ 'L1' , 'L2' , 'L3' , 'L4' , 'L5' ], help = 'Indicate Quantilization level. The higher the level, \\ the slower the speed and the higher the accuracy.' ) parser . add_argument ( '--num_process' , default = 10 , type = int , help = 'Amount of processes run at same time.' ) parser . add_argument ( '-o' , '--output' , default = None , type = str , help = 'Output path for fixed model.' ) return parser . parse_args () def data_gen (): calibrator_data = np . random . rand ( 100 , 1 , 256 ) . astype ( np . float32 ) bench_data = np . random . rand ( 100 , 1 , 256 ) . astype ( np . float32 ) for i , j in zip ( calibrator_data , bench_data ): yield [ i , j ] def main (): args = arg_parse () model_path = args . model input_config = args . input_config quant_level = args . quant_level num_subsets = args . num_process output = args . output if not os . path . exists ( model_path ): raise FileNotFoundError ( 'No such {} model' . format ( model_path )) if not os . path . exists ( input_config ): raise FileNotFoundError ( 'input_config.ini file not found.' ) net = Net ( model_path , input_config ) print ( net ) # random generate data # must change real data when using img_gen = data_gen () print ( ' \\033 [31m[WARNING] random generate data, \\ must change real data when using! \\033 [0m' , file = sys . stderr ) out_model = utils . get_out_model_name ( model_path , output ) net . convert ( img_gen , num_process = num_subsets , quant_level = quant_level , fix_model = [ out_model ]) if __name__ == '__main__' : main () \u4f7f\u7528\u7f16\u5199\u7684matmul_calibrator.py\u8f6c\u6362matmul_float.sim\uff0c\u751f\u6210matmul_fixed.sim\u3002 python3 matmul_calibrator.py \\ -m /path/to/matmul_float.sim \\ --input_config /path/to/input_config.ini \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u91cf\u5316\u8be5\u6a21\u578b\u7684\u8f93\u5165\u6570\u636e\u4e00\u5b9a\u8981\u6362\u6210\u771f\u5b9e\u6570\u636e\uff0c\u4e0d\u7136\u7edf\u8ba1\u751f\u6210\u7684fixed\u6a21\u578b\u7cbe\u5ea6\u4f1a\u51fa\u9519\u3002\u5982\u679c\u5355\u72ec\u91cf\u5316\u8be5\u6a21\u578b\u6bd4\u8f83\u56f0\u96be\uff0c\u6bd4\u5982\u5b83\u662f\u63a5\u5728\u67d0\u4e2a\u7f51\u7edc\u540e\u9762\u8fd0\u884c\u7684\uff0c\u53ef\u4ee5\u53c2\u8003 \u591a\u8f93\u5165\u7f51\u7edc\u8f6c\u6362\u8981\u70b9 \uff0c\u6309\u7167\u591a\u6bb5\u7f51\u7edc\u5904\u7406\uff0c\u5728calibrator_custom.SIM_Calibrator\u7c7b\u91cc\u5b9a\u4e49\u591a\u4e2a\u6a21\u578b\uff0c\u53ef\u4ee5\u76f4\u63a5\u751f\u6210\u51fa\u591a\u4e2afixed\u7f51\u7edc\u3002 \u6700\u540e\u4f7f\u7528compiler.py\u8f6c\u6362matmul_fixed.sim\uff0c\u751f\u6210matmul_fixed.sim_sgsimg.img\u3002","title":"4.2 \u8f6c\u6362\u591a\u8f93\u5165\u7f51\u7edc"},{"location":"module/User_Guide/IPU260/Special_Model_Conversion.html#43-pc","text":"\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd0\u884cFloat\u7684\u7f51\u7edc\u65f6\uff0c\u8f93\u5165\u6570\u636e\u7684type\u9700\u8981\u4e3afloat32\uff0c\u8f93\u5165\u6570\u636e\u7684shape\u4e0e\u6a21\u578b\u8f93\u5165shape\u76f8\u540c\u3002\u4f46\u662f\u7531\u4e8ematmul\u7684Fixed\u548cOffline\u6a21\u578b\u662fRAWDATA_S16_NHWC\u8f93\u5165\uff0c\u8f93\u5165\u6570\u636e\u9700\u8981\u5148\u53cd\u91cf\u5316\u5230int16\u624d\u80fd\u8f93\u5165\u5230\u6a21\u578b\u3002\u6240\u4ee5\u5b9a\u4e49calibrator_custom.SIM_Simulator\u7684forward\u51fd\u6570\u65f6\u9700\u8981\u6ce8\u610f\u8be5\u6a21\u578b\u7684\u7279\u6b8a\u6027\uff1a class Net ( calibrator_custom . SIM_Simulator ): def __init__ ( self , model_path , phase ): super () . __init__ () if phase == 'Float' : self . model = calibrator_custom . float_simulator ( model_path ) elif phase == 'Fixed' : self . model = calibrator_custom . fixed_simulator ( model_path ) else : self . model = calibrator_custom . offline_simulator ( model_path ) def forward ( self , x , y ): out_details = self . model . get_output_details () self . model . set_input ( 0 , x ) self . model . set_input ( 1 , y ) self . model . invoke () result_list = [] for idx , _ in enumerate ( out_details ): result = self . model . get_output ( idx ) result_list . append ( result ) return result_list","title":"4.3 \u5728PC\u4e0a\u63a8\u6f14\u591a\u8f93\u5165\u7f51\u7edc"},{"location":"module/User_Guide/IPU260/Special_Model_Conversion.html#44","text":"\u7531\u4e8ematmul_fixed.sim_sgsimg.img\u7f51\u7edc\u8f93\u5165\u662f RAWDATA_F32_NHWC \uff0c\u53ef\u4ee5\u53c2\u8003 FillInputData\u51fd\u6570 \uff0c\u4e0e\u5728PC\u4e0a\u76f8\u540c\uff0c\u9700\u8981\u5c06\u8f93\u5165\u6570\u636e\u5904\u7406\u540e\u518d\u9001\u5165\u6a21\u578b\u3002 \u591a\u8f93\u5165\u6a21\u578b\u53ea\u9700\u5728FillInputData\u51fd\u6570\u4e2d\u589e\u52a0\u5bf9\u6a21\u578b\u7684\u7b2c\u4e8c\u4e2a\u8f93\u5165\u704c\u5165\u6570\u636e\uff1a // input0 MI_FLOAT * pData0 = ( MI_FLOAT * ) InputTensorVector . astArrayTensors [ 0 ]. ptTensorData [ 0 ]; // input1 MI_FLOAT * pData1 = ( MI_FLOAT * ) InputTensorVector . astArrayTensors [ 1 ]. ptTensorData [ 0 ];","title":"4.4 \u5728\u677f\u4e0a\u63a8\u6f14\u591a\u8f93\u5165\u7f51\u7edc"}]}; var __search = { index: Promise.resolve(local_index) }